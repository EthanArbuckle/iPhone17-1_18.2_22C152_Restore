uint64_t sub_15FEC78(uint64_t a1)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  uint64_t v19;

  v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    v3 = 0;
    goto LABEL_27;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  v5 = *(unsigned __int8 *)(v4 + 23);
  v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    v6 = v5;
  }
  v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    v8 = *(unsigned __int8 *)(v7 + 23);
    v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    v10 = sub_15C2C78(*(void *)(a1 + 40));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  v11 = sub_15C2C78(*(void *)(a1 + 48));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_27;
    }
    goto LABEL_23;
  }
LABEL_19:
  v12 = *(_DWORD *)(a1 + 56);
  if (v12 < 0) {
    v13 = 11;
  }
  else {
    v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v13;
  if ((v2 & 0x20) != 0)
  {
LABEL_23:
    v14 = *(_DWORD *)(a1 + 60);
    if (v14 < 0) {
      v15 = 11;
    }
    else {
      v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v15;
  }
LABEL_27:
  v16 = *(void *)(a1 + 8);
  if (v16)
  {
    v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      v19 = *(void *)(v18 + 16);
    }
    else {
      v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v3 += v19;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_15FEE50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackOverview");
}

uint64_t sub_15FEE60(uint64_t a1)
{
  v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15FEF18(uint64_t a1)
{
  sub_15FEE60(a1);

  operator delete();
}

uint64_t sub_15FEF50(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_15FEFCC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  v6 = (void *)(a1 + 8);
  while (1)
  {
    v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          v16 = (uint64_t *)*v16;
        }
        v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        v16 = (uint64_t *)*v16;
      }
      v17 = (void *)(a1 + 24);
LABEL_27:
      v19 = (std::string *)sub_1880F84(v17, v16);
      v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      v7 = *(char **)v20;
    }
    v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)v20 = 0;
  return *(void *)v20;
}

char *sub_15FF174(uint64_t a1, char *__dst, void *a3)
{
  v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_15FF260(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_15FF33C()
{
  return 1;
}

void *sub_15FF344@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackSurveyResponse");
}

void *sub_15FF354(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1639454(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15FF3D4(void *a1)
{
  sub_15FF354(a1);

  operator delete();
}

char *sub_15FF40C(uint64_t a1, char *a2, int32x2_t *a3)
{
  v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          unint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          unint64_t v6 = v19 + 2;
        }
      }
      v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          v13 = (unsigned __int8 *)(v12 + 1);
          v19 = v12 + 1;
          v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            v17 = sub_16062E4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_15FF5AC(a3, v16, v13);
          v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unint64_t v6 = v19;
      }
      v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_15FF5AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_160014C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15FF63C(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1600580(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_15FF780(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16007E0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_15FF830(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v4 + 16) & 8) != 0 && (~*(_DWORD *)(*(void *)(v4 + 72) + 16) & 3) != 0) {
      break;
    }
    if (--v2 <= 1) {
      return 1;
    }
  }
  return 0;
}

void *sub_15FF88C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackConversation");
}

uint64_t sub_15FF89C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15FF954(uint64_t a1)
{
  sub_15FF89C(a1);

  operator delete();
}

uint64_t sub_15FF98C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_15FFA0C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void *)(a1 + 8);
      v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 32);
      goto LABEL_29;
    }
    if (v11 == 2)
    {
      if (v8 != 18) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v19 = *(void *)(a1 + 8);
      v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 24);
LABEL_29:
      v20 = (std::string *)sub_1880F84(v18, v17);
      uint64_t v15 = (void *)sub_188C244(v20, *(char **)v27, (uint64_t)a3);
      goto LABEL_30;
    }
    if (v11 == 1 && v8 == 8)
    {
      v21 = v7 + 1;
      unint64_t v22 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_35;
      }
      int v23 = *v21;
      int v24 = v22 + (v23 << 7);
      unint64_t v22 = (v24 - 128);
      if (v23 < 0)
      {
        *(void *)v27 = sub_188C138((uint64_t)v7, (v24 - 128));
        if (!*(void *)v27) {
          goto LABEL_49;
        }
        unint64_t v22 = v25;
      }
      else
      {
        v21 = v7 + 2;
LABEL_35:
        *(void *)v27 = v21;
      }
      if (v22 > 3)
      {
        if (*v6) {
          v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v22, v26);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 40) = v22;
      }
      goto LABEL_38;
    }
LABEL_14:
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v27;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_30:
    *(void *)v27 = v15;
    if (!v15) {
      goto LABEL_49;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_49:
  *(void *)v27 = 0;
  return *(void *)v27;
}

unsigned char *sub_15FFC5C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    unint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    unint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_15FFDC4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
LABEL_17:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_15FFED4()
{
  return 1;
}

void *sub_15FFEDC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackConversationMessage.PostedBy");
}

uint64_t sub_15FFEEC(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_2540D40)
  {
    uint64_t v6 = *(void *)(a1 + 64);
    if (v6)
    {
      sub_15FF89C(v6);
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 72);
    if (v7)
    {
      sub_15C27A4(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_16394D4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1600000(uint64_t a1)
{
  sub_15FFEEC(a1);

  operator delete();
}

uint64_t sub_1600038(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15FEF50(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) == 0) {
    goto LABEL_11;
  }
  if (v5)
  {
    unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_19:
  unint64_t v9 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v5 & 4) != 0) {
      goto LABEL_23;
    }
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  *(unsigned char *)unint64_t v9 = 0;
  *(unsigned char *)(v9 + 23) = 0;
  if ((v5 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_23:
  uint64_t result = sub_15FF98C(*(void *)(v1 + 64));
  if ((v5 & 8) != 0) {
LABEL_10:
  }
    uint64_t result = sub_15C2850(*(void *)(v1 + 72));
LABEL_11:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_160014C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v29 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
    return *(void *)v29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (unsigned __int8 *)(*(void *)v29 + 1);
    unsigned int v8 = **(unsigned char **)v29;
    if ((char)**(unsigned char **)v29 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v29, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v29 + 2);
      }
    }
    *(void *)v29 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 48);
        goto LABEL_29;
      case 2u:
        if (v8 != 18) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v14 = *(void *)(a1 + 64);
        if (!v14)
        {
          uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_160625C((uint64_t)v15);
          *(void *)(a1 + 64) = v14;
          char v7 = *(unsigned __int8 **)v29;
        }
        uint64_t v16 = sub_1600460(a3, v14, v7);
        goto LABEL_47;
      case 3u:
        if (v8 != 26) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v17 = *(void *)(a1 + 72);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_15C6120((uint64_t)v18);
          *(void *)(a1 + 72) = v17;
          char v7 = *(unsigned __int8 **)v29;
        }
        uint64_t v16 = (uint64_t)sub_12FECD8(a3, v17, v7);
        goto LABEL_47;
      case 4u:
        if (v8 != 34) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 56);
LABEL_29:
        v20 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v16 = (uint64_t)sub_188C244(v20, *(char **)v29, (uint64_t)a3);
        goto LABEL_47;
      case 5u:
        if (v8 != 42) {
          goto LABEL_40;
        }
        v21 = v7 - 1;
        while (1)
        {
          unint64_t v22 = v21 + 1;
          *(void *)v29 = v21 + 1;
          int v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            v26 = sub_1606138(*(void *)(a1 + 24));
            uint64_t v25 = sub_188CDC8(a1 + 24, (uint64_t)v26);
            unint64_t v22 = *(unsigned __int8 **)v29;
          }
          v21 = (unsigned __int8 *)sub_16004F0(a3, v25, v22);
          *(void *)v29 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 42) {
            goto LABEL_48;
          }
        }
      default:
LABEL_40:
        if (v8) {
          BOOL v27 = (v8 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v6)
          {
            v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = *(unsigned __int8 **)v29;
          }
          uint64_t v16 = (uint64_t)sub_1885AC0(v8, v28, (char *)v7, a3);
LABEL_47:
          *(void *)v29 = v16;
          if (!v16) {
            return 0;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
            return *(void *)v29;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v29;
    }
  }
}

uint64_t sub_1600460(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15FFA0C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_16004F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15FEFCC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1600580(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 64);
  unsigned char *v4 = 18;
  unsigned int v15 = *(_DWORD *)(v14 + 20);
  v4[1] = v15;
  if (v15 > 0x7F) {
    uint64_t v16 = sub_188A9CC(v15, v4 + 1);
  }
  else {
    uint64_t v16 = v4 + 2;
  }
  uint64_t v4 = sub_15FFC5C(v14, (unint64_t)v16, a3);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_23:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v17 = *(void *)(a1 + 72);
  unsigned char *v4 = 26;
  unsigned int v18 = *(_DWORD *)(v17 + 20);
  v4[1] = v18;
  if (v18 > 0x7F) {
    uint64_t v19 = sub_188A9CC(v18, v4 + 1);
  }
  else {
    uint64_t v19 = v4 + 2;
  }
  uint64_t v4 = sub_15C2A64(v17, (unint64_t)v19, a3);
  if ((v6 & 2) != 0) {
LABEL_5:
  }
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 42;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        uint64_t v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        uint64_t v11 = v4 + 2;
      }
      uint64_t v4 = sub_15FF174(v9, v11, a3);
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_16007E0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15FF260(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_15;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_20:
    unint64_t v15 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_13:
      if ((v8 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_23;
  }
  unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 2) != 0) {
    goto LABEL_20;
  }
LABEL_12:
  if ((v8 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_23:
  uint64_t v18 = sub_15FFDC4(*(void *)(a1 + 64));
  v2 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) != 0)
  {
LABEL_14:
    unint64_t v9 = sub_15C2C78(*(void *)(a1 + 72));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v19 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v2 += v20;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1600994(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1639784(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) == 0) {
    goto LABEL_32;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_7;
    }
LABEL_13:
    uint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    unint64_t v15 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v13, v15);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_32;
      }
      goto LABEL_24;
    }
    goto LABEL_16;
  }
  uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
  std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
  unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
  if (v11) {
    unint64_t v12 = (uint64_t *)*v12;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
  if ((v9 & 2) != 0) {
    goto LABEL_13;
  }
LABEL_7:
  if ((v9 & 4) == 0) {
    goto LABEL_8;
  }
LABEL_16:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  uint64_t v16 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
  if (!v16)
  {
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (void *)*v18;
    }
    uint64_t v16 = (std::string *)sub_160625C((uint64_t)v18);
    v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v16;
  }
  if (*(void *)(a2 + 64)) {
    unint64_t v19 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    unint64_t v19 = &off_2540D10;
  }
  uint64_t result = sub_117DA78(v16, (uint64_t)v19);
  if ((v9 & 8) != 0)
  {
LABEL_24:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    data = (std::string *)v3[3].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
      uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        uint64_t v22 = (void *)*v22;
      }
      data = (std::string *)sub_15C6120((uint64_t)v22);
      v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v23 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v23 = &off_253F7C8;
    }
    uint64_t result = sub_12D45B4(data, (uint64_t)v23);
  }
LABEL_32:
  uint64_t v24 = *(void *)(a2 + 8);
  if (v24)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v24 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1600B80(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 8) == 0 || (~*(_DWORD *)(*(void *)(a1 + 72) + 16) & 3) == 0;
}

void *sub_1600BAC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackConversationMessage");
}

uint64_t sub_1600BBC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2540D90)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1602F5C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1600C88(uint64_t a1)
{
  sub_1600BBC(a1);

  operator delete();
}

uint64_t sub_1600CC0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_15;
  }
  if (v2)
  {
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_11:
  uint64_t result = sub_1601748(*(void *)(result + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = sub_1602190(*(void *)(v1 + 40));
  if ((v2 & 8) == 0) {
    goto LABEL_15;
  }
LABEL_13:
  uint64_t v4 = *(void *)(v1 + 48);
  char v5 = *(unsigned char *)(v4 + 8);
  uint64_t result = v4 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_15:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 48) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1600D90(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v31 + 2);
      }
    }
    *(void *)v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_31;
        }
        v5 |= 4u;
        unint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)v31 = v12;
          *(unsigned char *)(a1 + 40) = v13 != 0;
          goto LABEL_39;
        }
        uint64_t v27 = sub_188C138((uint64_t)v8, v13);
        *(void *)v31 = v27;
        *(unsigned char *)(a1 + 40) = v28 != 0;
        if (v27) {
          goto LABEL_39;
        }
        goto LABEL_52;
      case 2u:
        if (v9 != 18) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        std::string::size_type v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
        uint64_t v18 = (uint64_t)sub_188C244(v17, *(char **)v31, (uint64_t)a3);
        goto LABEL_38;
      case 3u:
        if (v9 != 26) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 32);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_16065B0((uint64_t)v20);
          *(void *)(a1 + 32) = v19;
          int v8 = *(unsigned __int8 **)v31;
        }
        uint64_t v18 = sub_160109C(a3, v19, v8);
        goto LABEL_38;
      case 4u:
        if (v9 != 32) {
          goto LABEL_31;
        }
        std::string::size_type v21 = (char *)(v8 + 1);
        unint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          *(void *)v31 = sub_188C138((uint64_t)v8, (v24 - 128));
          if (!*(void *)v31) {
            goto LABEL_52;
          }
          unint64_t v22 = v29;
        }
        else
        {
          std::string::size_type v21 = (char *)(v8 + 2);
LABEL_28:
          *(void *)v31 = v21;
        }
        if (v22 > 3)
        {
          if (*v7) {
            v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v22, v30);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v22;
        }
        goto LABEL_39;
      default:
LABEL_31:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v31;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v9, v26, (char *)v8, a3);
LABEL_38:
          *(void *)v31 = v18;
          if (!v18) {
            goto LABEL_52;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          *(void *)v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

uint64_t sub_160109C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16030A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_160112C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_16;
  }
LABEL_10:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  unsigned char *v4 = 26;
  unsigned int v9 = *(_DWORD *)(v8 + 20);
  v4[1] = v9;
  if (v9 > 0x7F) {
    unsigned int v10 = sub_188A9CC(v9, v4 + 1);
  }
  else {
    unsigned int v10 = v4 + 2;
  }
  uint64_t v4 = sub_1603584(v8, v10, a3);
  if ((v6 & 8) != 0)
  {
LABEL_16:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 44);
    unsigned char *v4 = 32;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_22:
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    std::string::size_type v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    std::string::size_type v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_160132C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_18;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v8 = sub_1603810(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 8) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 44);
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v9 >= 0) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 11;
    }
    result += v11;
  }
LABEL_18:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1601454(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      int v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        int v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(std::string **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_1606414((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unint64_t v13 = &off_2540DC0;
    }
    sub_15DB474(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_32;
    }
LABEL_24:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      unint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_160650C((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      std::string::size_type v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      std::string::size_type v17 = &off_2540E08;
    }
    sub_1602CA4(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
      goto LABEL_8;
    }
LABEL_32:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v18 = *(std::string **)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = (std::string *)sub_1606490((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      std::string::size_type v21 = *(void *(****)(void *))(a2 + 48);
    }
    else {
      std::string::size_type v21 = &off_2540DE8;
    }
    sub_11A7934(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1601604(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
    return 1;
  }
  BOOL result = sub_1602EE4(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1601630@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.RapInfo");
}

uint64_t sub_1601640(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2540DC0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_15B2B90(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_15B2B90(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1601710(uint64_t a1)
{
  sub_1601640(a1);

  operator delete();
}

uint64_t sub_1601748(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      BOOL result = sub_15B2C80(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      BOOL result = sub_15B2C80(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16017B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    return v18;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void **)(a1 + 32);
        if (!v15)
        {
          unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_15C1B30((uint64_t)v16);
          *(void *)(a1 + 32) = v15;
LABEL_29:
          uint64_t v7 = v18;
        }
LABEL_30:
        uint64_t v14 = (char *)sub_125CF74(a3, (uint64_t)v15, (unsigned __int8 *)v7);
        goto LABEL_31;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v15 = *(void **)(a1 + 24);
      if (!v15)
      {
        std::string::size_type v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          std::string::size_type v17 = (void *)*v17;
        }
        uint64_t v15 = sub_15C1B30((uint64_t)v17);
        *(void *)(a1 + 24) = v15;
        goto LABEL_29;
      }
      goto LABEL_30;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v18;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
LABEL_31:
    uint64_t v18 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      return v18;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v18;
  }
  return 0;
}

char *sub_160196C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B2EA4(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_15B2EA4(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1601AEC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B2F90(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_15B2F90(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1601BC4()
{
  return 1;
}

void *sub_1601BCC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.RapResponse.RapNotification");
}

void *sub_1601BDC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1601C50(void *a1)
{
  sub_1601BDC(a1);

  operator delete();
}

uint64_t sub_1601C88(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1601CA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    uint64_t v19 = v6;
    if (v7 == 8)
    {
      uint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        uint64_t v12 = v6 + 2;
      }
      uint64_t v19 = v12;
LABEL_20:
      if (v13 > 1)
      {
        if (*v5) {
          uint64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_1601E48(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1601F70(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1601FE4()
{
  return 1;
}

void *sub_1601FEC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.RapResponse.UserFormDetails");
}

void *sub_1601FFC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_160208C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_12C28B4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_160208C(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2540E08)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 48);
    if (v2)
    {
      sub_15B2B90(v2);
      operator delete();
    }
    uint64_t v3 = v1[7];
    if (v3)
    {
      sub_15B2B90(v3);
      operator delete();
    }
    uint64_t v4 = (void *)v1[8];
    if (v4)
    {
      sub_15B15FC(v4);
      operator delete();
    }
    uint64_t result = v1[9];
    if (result)
    {
      sub_15C12A8(result);
      operator delete();
    }
  }
  return result;
}

void sub_1602158(void *a1)
{
  sub_1601FFC(a1);

  operator delete();
}

uint64_t sub_1602190(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_175FE78(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) == 0) {
    goto LABEL_11;
  }
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    uint64_t result = sub_15B2C80(*(void *)(v1 + 56));
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_19;
  }
  uint64_t result = sub_15B2C80(*(void *)(v1 + 48));
  if ((v5 & 2) != 0) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v5 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_19:
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(v1 + 64));
  if ((v5 & 8) != 0) {
LABEL_10:
  }
    uint64_t result = sub_15C13AC(*(void *)(v1 + 72));
LABEL_11:
  if ((v5 & 0x30) != 0) {
    *(void *)(v1 + 80) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_1602268(uint64_t a1, char *a2, int32x2_t *a3)
{
  v38 = a2;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    return v38;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v38 + 1;
    unsigned int v8 = *v38;
    if (*v38 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v38, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v38 + 2;
      }
    }
    v38 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_57;
        }
        unint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          v38 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v38) {
            return 0;
          }
          unint64_t v12 = v34;
        }
        else
        {
          unint64_t v11 = v7 + 2;
LABEL_13:
          v38 = v11;
        }
        if (v12 <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 80) = v12;
          goto LABEL_65;
        }
        if (*v6) {
          v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v37 = 1;
        goto LABEL_77;
      case 2u:
        if (v8 != 18) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        int v15 = *(void **)(a1 + 48);
        if (v15) {
          goto LABEL_27;
        }
        unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v16 = (void *)*v16;
        }
        int v15 = sub_15C1B30((uint64_t)v16);
        *(void *)(a1 + 48) = v15;
        goto LABEL_26;
      case 3u:
        if (v8 != 26) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        int v15 = *(void **)(a1 + 56);
        if (v15) {
          goto LABEL_27;
        }
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        int v15 = sub_15C1B30((uint64_t)v17);
        *(void *)(a1 + 56) = v15;
LABEL_26:
        char v7 = v38;
LABEL_27:
        uint64_t v18 = (char *)sub_125CF74(a3, (uint64_t)v15, (unsigned __int8 *)v7);
        goto LABEL_64;
      case 4u:
        if (v8 != 34) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 64);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_15C19EC((uint64_t)v20);
          *(void *)(a1 + 64) = v19;
          char v7 = v38;
        }
        uint64_t v18 = sub_11E1C60(a3, v19, (unsigned __int8 *)v7);
        goto LABEL_64;
      case 5u:
        if (v8 != 40) {
          goto LABEL_57;
        }
        std::string::size_type v21 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v22 = *v21;
        int v23 = v12 + (v22 << 7);
        unint64_t v12 = (v23 - 128);
        if (v22 < 0)
        {
          v38 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
          if (!v38) {
            return 0;
          }
          unint64_t v12 = v35;
        }
        else
        {
          std::string::size_type v21 = v7 + 2;
LABEL_38:
          v38 = v21;
        }
        if (v12 > 4)
        {
          if (*v6) {
            v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v37 = 5;
LABEL_77:
          sub_188C020(v37, v12, v36);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 84) = v12;
        }
        goto LABEL_65;
      case 6u:
        if (v8 != 50) {
          goto LABEL_57;
        }
        int v24 = v7 - 1;
        while (1)
        {
          BOOL v25 = (unsigned __int8 *)(v24 + 1);
          v38 = v24 + 1;
          v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_178CDA8(*(void *)(a1 + 24));
            uint64_t v28 = sub_188CDC8(a1 + 24, v29);
            BOOL v25 = (unsigned __int8 *)v38;
          }
          int v24 = (char *)sub_1265F8C(a3, v28, v25);
          v38 = v24;
          if (!v24) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 50) {
            goto LABEL_65;
          }
        }
      case 7u:
        if (v8 != 58) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        v30 = *(void **)(a1 + 72);
        if (!v30)
        {
          v31 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v31 = (void *)*v31;
          }
          v30 = sub_15C2720((uint64_t)v31);
          *(void *)(a1 + 72) = v30;
          char v7 = v38;
        }
        uint64_t v18 = (char *)sub_12ED094(a3, (uint64_t)v30, (unsigned __int8 *)v7);
        goto LABEL_64;
      default:
LABEL_57:
        if (v8) {
          BOOL v32 = (v8 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v6)
          {
            v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = v38;
          }
          uint64_t v18 = (char *)sub_1885AC0(v8, v33, v7, a3);
LABEL_64:
          v38 = v18;
          if (!v18) {
            return 0;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
            return v38;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v38;
    }
  }
}

char *sub_16026C8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 80);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_15B2EA4(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_25;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 56);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  uint64_t v4 = sub_15B2EA4(v13, v15, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 0x20) == 0) {
      goto LABEL_37;
    }
    goto LABEL_31;
  }
LABEL_25:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 64);
  char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_15B1A68(v16, (unint64_t)v18, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_31:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 84);
    char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_37:
  int v22 = *(_DWORD *)(a1 + 32);
  if (v22)
  {
    for (int i = 0; i != v22; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 50;
      unsigned int v25 = *(_DWORD *)(v24 + 44);
      v4[1] = v25;
      if (v25 > 0x7F) {
        v26 = sub_188A9CC(v25, v4 + 1);
      }
      else {
        v26 = v4 + 2;
      }
      uint64_t v4 = sub_1763540(v24, v26, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v27 = *(void *)(a1 + 72);
    char *v4 = 58;
    unsigned int v28 = *(_DWORD *)(v27 + 20);
    v4[1] = v28;
    if (v28 > 0x7F) {
      uint64_t v29 = sub_188A9CC(v28, v4 + 1);
    }
    else {
      uint64_t v29 = v4 + 2;
    }
    uint64_t v4 = sub_15C1600(v27, v29, a3);
  }
  uint64_t v30 = *(void *)(a1 + 8);
  if ((v30 & 1) == 0) {
    return v4;
  }
  unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v32 + 31) < 0)
  {
    v33 = *(void **)(v32 + 8);
    uint64_t v34 = *(void *)(v32 + 16);
  }
  else
  {
    v33 = (void *)(v32 + 8);
    LODWORD(v34) = *(unsigned __int8 *)(v32 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v34)
  {
    uint64_t v35 = (int)v34;
    memcpy(v4, v33, (int)v34);
    v4 += v35;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v33, v34, v4);
}

uint64_t sub_1602AA8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1763C40(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x3F) == 0) {
    goto LABEL_29;
  }
  if (v8)
  {
    uint64_t v9 = sub_15B2F90(*(void *)(a1 + 48));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_19;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v10 = sub_15B2F90(*(void *)(a1 + 56));
  v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v11 = sub_15B1D1C(*(void *)(a1 + 64));
  v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v12 = sub_15C1730(*(void *)(a1 + 72));
  v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }
LABEL_21:
  int v13 = *(_DWORD *)(a1 + 80);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v14;
  if ((v8 & 0x20) != 0)
  {
LABEL_25:
    int v15 = *(_DWORD *)(a1 + 84);
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v16;
  }
LABEL_29:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v2 += v20;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1602CA4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C3474((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(std::string **)(a1 + 48);
      if (!v11)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        int v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          int v13 = (void *)*v13;
        }
        uint64_t v11 = (std::string *)sub_15C1B30((uint64_t)v13);
        *(void *)(a1 + 48) = v11;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v14 = &off_253F2A0;
      }
      sub_11EC100(v11, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_33;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    int v15 = *(std::string **)(a1 + 56);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      int v15 = (std::string *)sub_15C1B30((uint64_t)v17);
      *(void *)(a1 + 56) = v15;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v18 = &off_253F2A0;
    }
    sub_11EC100(v15, (uint64_t)v18);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_41;
    }
LABEL_33:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v19 = *(void *)(a1 + 64);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      unint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        unint64_t v21 = (void *)*v21;
      }
      uint64_t v19 = sub_15C19EC((uint64_t)v21);
      *(void *)(a1 + 64) = v19;
    }
    if (*(void *)(a2 + 64)) {
      int v22 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      int v22 = &off_253F208;
    }
    sub_15B1E3C(v19, (uint64_t)v22);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_49;
    }
LABEL_41:
    *(_DWORD *)(a1 + 16) |= 8u;
    int v23 = *(std::string **)(a1 + 72);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      unsigned int v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        unsigned int v25 = (void *)*v25;
      }
      int v23 = (std::string *)sub_15C2720((uint64_t)v25);
      *(void *)(a1 + 72) = v23;
    }
    if (*(void *)(a2 + 72)) {
      v26 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      v26 = &off_253F7A0;
    }
    sub_15C1814(v23, (uint64_t)v26);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
      goto LABEL_12;
    }
LABEL_49:
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1602EE4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_17612D4(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC8(*(void *)(a1 + 64) + 24);
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1602F4C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.RapResponse.DisplayDetails");
}

uint64_t sub_1602F5C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2540E60)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1601640(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 40);
    if (v7)
    {
      sub_1601FFC(v7);
      operator delete();
    }
    int v8 = *(void **)(a1 + 48);
    if (v8)
    {
      sub_1601BDC(v8);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1603068(uint64_t a1)
{
  sub_1602F5C(a1);

  operator delete();
}

uint64_t sub_16030A0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v29 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
    return *(void *)v29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = (unsigned __int8 *)(*(void *)v29 + 1);
    unsigned int v8 = **(unsigned char **)v29;
    if ((char)**(unsigned char **)v29 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v29, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (unsigned __int8 *)(*(void *)v29 + 2);
      }
    }
    *(void *)uint64_t v29 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        int v13 = (std::string *)sub_1880F84((void *)(a1 + 24), v12);
        uint64_t v14 = (void *)sub_188C244(v13, *(char **)v29, (uint64_t)a3);
        goto LABEL_45;
      case 2u:
        if (v8 != 16) {
          goto LABEL_38;
        }
        int v15 = (char *)(v7 + 1);
        unint64_t v16 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)uint64_t v29 = sub_188C138((uint64_t)v7, (v18 - 128));
          if (!*(void *)v29) {
            return 0;
          }
          unint64_t v16 = v27;
        }
        else
        {
          int v15 = (char *)(v7 + 2);
LABEL_17:
          *(void *)uint64_t v29 = v15;
        }
        if (v16 > 5)
        {
          if (*v6) {
            unsigned int v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unsigned int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v28);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 56) = v16;
        }
        goto LABEL_46;
      case 3u:
        if (v8 != 26) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void **)(a1 + 32);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_1606414((uint64_t)v20);
          *(void *)(a1 + 32) = v19;
          int v7 = *(unsigned __int8 **)v29;
        }
        uint64_t v14 = sub_16033D4(a3, (uint64_t)v19, v7);
        goto LABEL_45;
      case 4u:
        if (v8 != 34) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 40);
        if (!v21)
        {
          int v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v22 = (void *)*v22;
          }
          uint64_t v21 = sub_160650C((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          int v7 = *(unsigned __int8 **)v29;
        }
        uint64_t v14 = sub_1603464(a3, v21, v7);
        goto LABEL_45;
      case 5u:
        if (v8 != 42) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v23 = *(void *)(a1 + 48);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_1606490((uint64_t)v24);
          *(void *)(a1 + 48) = v23;
          int v7 = *(unsigned __int8 **)v29;
        }
        uint64_t v14 = sub_16034F4(a3, v23, v7);
        goto LABEL_45;
      default:
LABEL_38:
        if (v8) {
          BOOL v25 = (v8 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v6)
          {
            v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v7 = *(unsigned __int8 **)v29;
          }
          uint64_t v14 = sub_1885AC0(v8, v26, (char *)v7, a3);
LABEL_45:
          *(void *)uint64_t v29 = v14;
          if (!v14) {
            return 0;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
            return *(void *)v29;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v29;
    }
  }
}

char *sub_16033D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  BOOL result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    BOOL result = sub_16017B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1603464(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  BOOL result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    BOOL result = sub_1602268(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16034F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  BOOL result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    BOOL result = sub_1601CA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1603584(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_160196C(v10, (unint64_t)v12, a3);
    if ((v6 & 4) == 0)
    {
LABEL_12:
      if ((v6 & 8) == 0) {
        goto LABEL_32;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_12;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  char v4 = sub_16026C8(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_26:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    unsigned char *v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    char v4 = sub_1601E48(v16, (unint64_t)v18, a3);
  }
LABEL_32:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1603810(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_20;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_1601AEC(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_1602AA8(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v9 = sub_1601F70(*(void *)(a1 + 48));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0) {
    goto LABEL_20;
  }
LABEL_16:
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v11;
LABEL_20:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_160399C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.RapResponse");
}

void *sub_16039AC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1603A20(void *a1)
{
  sub_16039AC(a1);

  operator delete();
}

uint64_t sub_1603A58(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1603A70(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(void *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(void *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_1603BF0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

unint64_t sub_1603D18(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v1 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1603D80()
{
  return 1;
}

void *sub_1603D88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackQueryParameters.Filter");
}

uint64_t sub_1603D98(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2540EC0)
  {
    uint64_t v5 = *(void **)(a1 + 40);
    if (v5)
    {
      sub_16039AC(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_16047A0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1603E70(uint64_t a1)
{
  sub_1603D98(a1);

  operator delete();
}

uint64_t sub_1603EA8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_16048A8(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_16048EC(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1603F18(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    return v29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v29 + 1;
    unsigned int v8 = *v29;
    if (*v29 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        unint64_t v7 = v29 + 2;
      }
    }
    uint64_t v29 = v7;
    unsigned int v12 = v8 >> 3;
    if (v8 >> 3 == 5)
    {
      if (v8 == 42)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        int v22 = *(void **)(a1 + 48);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v23 = (void *)*v23;
          }
          int v22 = sub_1606754((uint64_t)v23);
          *(void *)(a1 + 48) = v22;
          unint64_t v7 = v29;
        }
        uint64_t v24 = sub_16042B8(a3, (uint64_t)v22, (unsigned __int8 *)v7);
        goto LABEL_52;
      }
      goto LABEL_45;
    }
    if (v12 == 4) {
      break;
    }
    if (v12 != 3) {
      goto LABEL_45;
    }
    if (v8 == 24)
    {
      uint64_t v13 = v7 - 1;
      while (1)
      {
        uint64_t v29 = v13 + 1;
        unint64_t v14 = v13[1];
        int v15 = v13 + 2;
        if (v13[1] < 0)
        {
          int v16 = *v15;
          int v17 = v14 + (v16 << 7);
          unint64_t v14 = (v17 - 128);
          if (v16 < 0)
          {
            uint64_t v29 = (char *)sub_188C138((uint64_t)(v13 + 1), (v17 - 128));
            if (!v29) {
              return 0;
            }
            unint64_t v14 = v20;
            goto LABEL_17;
          }
          int v15 = v13 + 3;
        }
        uint64_t v29 = v15;
LABEL_17:
        if (v14 > 7)
        {
          if (*v6) {
            unint64_t v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v14, v21);
        }
        else
        {
          uint64_t v18 = *(unsigned int *)(a1 + 24);
          if (v18 == *(_DWORD *)(a1 + 28))
          {
            int v19 = v18 + 1;
            sub_188C80C((unsigned int *)(a1 + 24), v18 + 1);
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18) = v14;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18) = v14;
            int v19 = v18 + 1;
          }
          *(_DWORD *)(a1 + 24) = v19;
        }
        uint64_t v13 = v29;
        if (*(void *)a3 <= (unint64_t)v29 || *v29 != 24) {
          goto LABEL_53;
        }
      }
    }
    if (v8 != 26) {
      goto LABEL_45;
    }
    *(void *)&long long v30 = a1 + 24;
    *((void *)&v30 + 1) = sub_15FA980;
    uint64_t v31 = a1 + 8;
    int v32 = 3;
    uint64_t v24 = sub_1112E88((uint64_t)a3, v7, &v30);
LABEL_52:
    uint64_t v29 = v24;
    if (!v24) {
      return 0;
    }
LABEL_53:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      return v29;
    }
  }
  if (v8 == 34)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    BOOL v25 = *(void **)(a1 + 40);
    if (!v25)
    {
      v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        v26 = (void *)*v26;
      }
      BOOL v25 = sub_160663C((uint64_t)v26);
      *(void *)(a1 + 40) = v25;
      unint64_t v7 = v29;
    }
    uint64_t v24 = sub_1604228(a3, (uint64_t)v25, (unsigned __int8 *)v7);
    goto LABEL_52;
  }
LABEL_45:
  if (v8) {
    BOOL v27 = (v8 & 7) == 4;
  }
  else {
    BOOL v27 = 1;
  }
  if (!v27)
  {
    if (*v6)
    {
      unsigned int v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v29;
    }
    uint64_t v24 = (char *)sub_1885AC0(v8, v28, v7, a3);
    goto LABEL_52;
  }
  if (!v7) {
    return 0;
  }
  a3[10].i32[0] = v8 - 1;
  return v29;
}

char *sub_1604228(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1603A70(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16042B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_160493C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1604348(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 24;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v12 = *(void *)(a1 + 40);
    *__dst = 34;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    __dst[1] = v13;
    if (v13 > 0x7F) {
      unint64_t v14 = sub_188A9CC(v13, __dst + 1);
    }
    else {
      unint64_t v14 = __dst + 2;
    }
    __dst = sub_1603BF0(v12, (unint64_t)v14, a3);
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v15 = *(void *)(a1 + 48);
    *__dst = 42;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    __dst[1] = v16;
    if (v16 > 0x7F) {
      int v17 = sub_188A9CC(v16, __dst + 1);
    }
    else {
      int v17 = __dst + 2;
    }
    __dst = sub_1604C20(v15, (unint64_t)v17, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return __dst;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    unint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    unint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(__dst, v21, (int)v22);
    __dst += v23;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, __dst);
}

uint64_t sub_1604564(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = sub_1603D18(*(void *)(a1 + 40));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v10 = sub_1604DA0(*(void *)(a1 + 48));
      v7 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v7 += v14;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

std::string *sub_1604684(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        data = (std::string *)sub_16067D0((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        int v8 = *(uint64_t (****)(uint64_t))(a2 + 24);
      }
      else {
        int v8 = &off_2540F20;
      }
      uint64_t result = sub_12329D0(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unint64_t v9 = (std::string *)sub_1606854((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        uint64_t v12 = *(void *(****)(void *))(a2 + 32);
      }
      else {
        uint64_t v12 = &off_2540F40;
      }
      uint64_t result = sub_1381334(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1604788()
{
  return 1;
}

void *sub_1604790@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackQueryParameters");
}

uint64_t sub_16047A0(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2540EF8)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_1604E90(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_1605228(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1604870(uint64_t a1)
{
  sub_16047A0(a1);

  operator delete();
}

uint64_t sub_16048A8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_16048EC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 8);
  char v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return sub_188B4AC(v3);
  }
  return result;
}

char *sub_160493C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    return v18;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 != 5) {
      break;
    }
    if (v8 != 42) {
      goto LABEL_22;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void *)(a1 + 32);
    if (!v14)
    {
      uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v14 = sub_1606854((uint64_t)v15);
      *(void *)(a1 + 32) = v14;
      uint64_t v7 = v18;
    }
    uint64_t v13 = (char *)sub_1604B90(a3, v14, (unsigned __int8 *)v7);
LABEL_29:
    uint64_t v18 = v13;
    if (!v13) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      return v18;
    }
  }
  if (v8 >> 3 == 4 && v8 == 34)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v11 = *(void **)(a1 + 24);
    if (!v11)
    {
      uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v11 = sub_16067D0((uint64_t)v12);
      *(void *)(a1 + 24) = v11;
      uint64_t v7 = v18;
    }
    uint64_t v13 = (char *)sub_1604B00(a3, (uint64_t)v11, (unsigned __int8 *)v7);
    goto LABEL_29;
  }
LABEL_22:
  if (v8) {
    BOOL v16 = (v8 & 7) == 4;
  }
  else {
    BOOL v16 = 1;
  }
  if (!v16)
  {
    if (*v6)
    {
      int v17 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v18;
    }
    uint64_t v13 = (char *)sub_1885AC0(v8, v17, v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v18;
  }
  return 0;
}

uint64_t sub_1604B00(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1604F68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1604B90(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16052DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1604C20(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 34;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_16050C0(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    char *v4 = 42;
    unsigned int v11 = *(_DWORD *)(v10 + 40);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_16054C8(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    BOOL v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    BOOL v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1604DA0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_160518C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1605630(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1604E78()
{
  return 1;
}

void *sub_1604E80@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackComponentQueryParameters");
}

uint64_t sub_1604E90(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1604F30(uint64_t a1)
{
  sub_1604E90(a1);

  operator delete();
}

uint64_t sub_1604F68(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    unint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    uint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)uint64_t v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = *(char **)v17;
    }
    uint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)uint64_t v17 = 0;
  return *(void *)v17;
}

char *sub_16050C0(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_160518C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1605210()
{
  return 1;
}

void *sub_1605218@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.PoiEnrichmentQueryParameters");
}

void *sub_1605228(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16052A4(void *a1)
{
  sub_1605228(a1);

  operator delete();
}

uint64_t sub_16052DC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v21 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      unint64_t v7 = (char *)(*(void *)v21 + 1);
      unsigned int v8 = **(unsigned char **)v21;
      if ((char)**(unsigned char **)v21 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v21, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unint64_t v7 = (char *)(*(void *)v21 + 2);
        }
      }
      *(void *)unint64_t v21 = v7;
      if (v8 == 10)
      {
        uint64_t v13 = v7 - 1;
        while (1)
        {
          uint64_t v14 = (char *)(v13 + 1);
          *(void *)unint64_t v21 = v13 + 1;
          unint64_t v15 = *(_DWORD **)(a1 + 32);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 24), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 24) = v16 + 1;
            uint64_t v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v19 = v18;
            v19[1] = sub_3A6EDC;
            *uint64_t v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            uint64_t v17 = (std::string *)sub_188CDC8(a1 + 16, (uint64_t)v18);
            uint64_t v14 = *(char **)v21;
          }
          uint64_t v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)unint64_t v21 = v13;
          if (!v13) {
            goto LABEL_31;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_26;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v12 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unint64_t v7 = *(char **)v21;
      }
      *(void *)unint64_t v21 = sub_1885AC0(v8, v12, v7, a3);
      if (!*(void *)v21) {
        goto LABEL_31;
      }
LABEL_26:
      if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
        return *(void *)v21;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return *(void *)v21;
    }
LABEL_31:
    *(void *)unint64_t v21 = 0;
  }
  return *(void *)v21;
}

char *sub_16054C8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 32) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        uint64_t v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return __dst;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    unint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    unint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(__dst, v15, (int)v16);
    __dst += v17;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, __dst);
}

uint64_t sub_1605630(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 24);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 24);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_16056C8()
{
  return 1;
}

void *sub_16056D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.RapQueryParameters");
}

void *sub_16056E0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_16392D4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1605760(void *a1)
{
  sub_16056E0(a1);

  operator delete();
}

char *sub_1605798(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v32 + 2;
      }
    }
    int v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 4)
    {
      if (v9 != 32) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v16 = v8 + 2;
LABEL_26:
        int v32 = v16;
        *(unsigned char *)(a1 + 52) = v17 != 0;
        goto LABEL_44;
      }
      unsigned int v28 = (char *)sub_188C138((uint64_t)v8, v17);
      int v32 = v28;
      *(unsigned char *)(a1 + 52) = v29 != 0;
      if (!v28) {
        goto LABEL_49;
      }
      goto LABEL_44;
    }
    if (v12 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 1u;
    int v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      int v19 = v8 + 2;
LABEL_31:
      int v32 = v19;
      *(_DWORD *)(a1 + 48) = v20;
      goto LABEL_44;
    }
    long long v30 = (char *)sub_188C0D0((uint64_t)v8, v20);
    int v32 = v30;
    *(_DWORD *)(a1 + 48) = v31;
    if (!v30) {
      goto LABEL_49;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    uint64_t v22 = v8 - 1;
    while (1)
    {
      uint64_t v23 = (unsigned __int8 *)(v22 + 1);
      int v32 = v22 + 1;
      uint64_t v24 = *(_DWORD **)(a1 + 40);
      if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
      {
        *(_DWORD *)(a1 + 32) = v25 + 1;
        uint64_t v26 = *(void *)&v24[2 * v25 + 2];
      }
      else
      {
        uint64_t v27 = sub_1605E70(*(void *)(a1 + 24));
        uint64_t v26 = sub_188CDC8(a1 + 24, v27);
        uint64_t v23 = (unsigned __int8 *)v32;
      }
      uint64_t v22 = (char *)sub_15FB2F0(a3, v26, v23);
      int v32 = v22;
      if (!v22) {
        goto LABEL_49;
      }
      if (*(void *)a3 <= (unint64_t)v22 || *v22 != 10) {
        goto LABEL_44;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v32;
    }
    int v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_49;
    }
    goto LABEL_44;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_49:
  int v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

char *sub_1605A30(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_15FBA58(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 48);
    *__dst = 24;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v15 = *(unsigned char *)(a1 + 52);
    *__dst = 32;
    __dst[1] = v15;
    __dst += 2;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_1605C2C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15FBC3C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_1605D1C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackQueryResult");
}

uint64_t sub_1605D2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C7C10;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1605DD0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C7C90;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1605E70(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C7D10;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

double sub_1605F18(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C7D90;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  return result;
}

void *sub_1605F98(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_24C7E10;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_1606034(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C7E90;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_16060AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C7F10;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[6] = 0;
  result[7] = 0;
  result[5] = 0;
  return result;
}

void *sub_1606138(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C7F90;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_16061BC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24C8010;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_160625C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24C8090;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_16062E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24C8110;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = 0;
  result[9] = 0;
  return result;
}

void *sub_160638C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C8190;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

void *sub_1606414(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C8210;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1606490(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C8290;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_160650C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C8310;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(void *)(result + 80) = 0;
  return result;
}

uint64_t sub_16065B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C8390;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_160663C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C8410;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_16066B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24C8490;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[5] = 0;
  result[6] = 0;
  result[4] = a1;
  return result;
}

void *sub_1606754(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C8510;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_16067D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C8590;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_1606854(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C8610;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_16068F4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24C8690;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  *(void *)((char *)result + 45) = 0;
  return result;
}

BOOL sub_1606990(unsigned int a1)
{
  return a1 < 7;
}

uint64_t sub_160699C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1606A20((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_1606A20(uint64_t (***result)()))()
{
  if (result != &off_2540FA8)
  {
    uint64_t v1 = result;
    uint64_t v2 = (uint64_t)result[3];
    if (v2)
    {
      sub_1609948(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[4];
    if (v3)
    {
      sub_160A064(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[5];
    if (v4)
    {
      sub_1608324(v4);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[6];
    if (result)
    {
      sub_1607B04(result);
      operator delete();
    }
  }
  return result;
}

void sub_1606AEC(uint64_t a1)
{
  sub_160699C(a1);

  operator delete();
}

uint64_t sub_1606B24(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_16088D0(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = (uint64_t)sub_1609378(*(unsigned char **)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1606B98(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  uint64_t result = sub_16088D0(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 40));
LABEL_6:
  if ((v2 & 0x18) != 0) {
    *(void *)(v1 + 48) = 0x100000000;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1606C58(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1606CD4(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  if ((*(unsigned char *)(a1 + 16) & 7) != 0) {
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1606CFC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v28 = a2;
  if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
    return v28;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v28 + 1;
    unsigned int v8 = *v28;
    if (*v28 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v28, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v28 + 2;
      }
    }
    unsigned int v28 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_40;
        }
        unint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          unsigned int v28 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v28) {
            return 0;
          }
          unint64_t v12 = v26;
        }
        else
        {
          unint64_t v11 = v7 + 2;
LABEL_13:
          unsigned int v28 = v11;
        }
        if (v12 > 2)
        {
          if (*v6) {
            uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v27);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 56) = v12;
        }
        goto LABEL_48;
      case 2u:
        if (v8 != 18) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 24);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_160AC08((uint64_t)v16);
          *(void *)(a1 + 24) = v15;
          uint64_t v7 = v28;
        }
        uint64_t v17 = sub_1607030(a3, v15, (unsigned __int8 *)v7);
        goto LABEL_47;
      case 3u:
        if (v8 != 26) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v18 = *(void **)(a1 + 32);
        if (!v18)
        {
          int v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v19 = (void *)*v19;
          }
          unint64_t v18 = sub_160AC88((uint64_t)v19);
          *(void *)(a1 + 32) = v18;
          uint64_t v7 = v28;
        }
        uint64_t v17 = (char *)sub_16070C0(a3, (uint64_t)v18, (unsigned __int8 *)v7);
        goto LABEL_47;
      case 4u:
        if (v8 != 34) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void **)(a1 + 40);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_160AA68((uint64_t)v21);
          *(void *)(a1 + 40) = v20;
          uint64_t v7 = v28;
        }
        uint64_t v17 = (char *)sub_1607150(a3, (uint64_t)v20, (unsigned __int8 *)v7);
        goto LABEL_47;
      case 5u:
        if (v8 != 42) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v22 = *(void **)(a1 + 48);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_160A9D0((uint64_t)v23);
          *(void *)(a1 + 48) = v22;
          uint64_t v7 = v28;
        }
        uint64_t v17 = sub_16071E0(a3, (uint64_t)v22, (unsigned __int8 *)v7);
        goto LABEL_47;
      default:
LABEL_40:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v6)
          {
            uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v28;
          }
          uint64_t v17 = (char *)sub_1885AC0(v8, v25, v7, a3);
LABEL_47:
          unsigned int v28 = v17;
          if (!v17) {
            return 0;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
            return v28;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v28;
    }
  }
}

char *sub_1607030(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1609A50(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_16070C0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_160A188(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1607150(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1608414(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16071E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1607BB8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1607270(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    char v4 = sub_1609D4C(v10, (unint64_t)v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_25;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_160A50C(v13, (unint64_t)v15, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_31;
  }
LABEL_25:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 40);
  unsigned char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    unint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    unint64_t v18 = v4 + 2;
  }
  char v4 = sub_16085BC(v16, v18, a3);
  if ((v6 & 8) != 0)
  {
LABEL_31:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 48);
    unsigned char *v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      uint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      uint64_t v21 = v4 + 2;
    }
    char v4 = sub_1607FD8(v19, v21, a3);
  }
LABEL_37:
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_1607544(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if (v2)
  {
    uint64_t v4 = sub_1609F48(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_160A7B0(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_16086A8(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v7 = sub_1608224(*(void *)(a1 + 48));
  v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0) {
    goto LABEL_18;
  }
LABEL_14:
  int v8 = *(_DWORD *)(a1 + 56);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v9;
LABEL_18:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_16076BC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        int v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          int v8 = (void *)*v8;
        }
        uint64_t v6 = sub_160AAEC((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2541040;
      }
      sub_1609030(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_160AB8C((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2541088;
    }
    sub_1609818(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_16077E4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_160AAEC((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2541040;
    }
    sub_1609030(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_32;
    }
LABEL_24:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_15C1918((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unsigned int v17 = &off_253F1A0;
    }
    sub_15B0E24(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
      goto LABEL_8;
    }
LABEL_32:
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_1607954(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      v3[1].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 40);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0)
        {
LABEL_8:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
          goto LABEL_9;
        }
LABEL_7:
        HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
        goto LABEL_8;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    v3[1].__r_.__value_.__s.__data_[17] = *(unsigned char *)(a2 + 41);
    if ((v8 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1607A40(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_16091E8(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_16098E8(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_1607A8C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_16091E8(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t result = sub_18856CC(v4 + 16);
    if (!result) {
      return result;
    }
    if ((~*(_DWORD *)(v4 + 40) & 3) != 0) {
      return 0;
    }
  }
  return 1;
}

void *sub_1607AF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.IncidentFeedback");
}

void *sub_1607B04(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1607B80(void *a1)
{
  sub_1607B04(a1);

  operator delete();
}

char *sub_1607BB8(uint64_t a1, char *a2, int32x2_t *a3)
{
  v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v41 + 1;
    unsigned int v9 = *v41;
    if (*v41 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v41, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        int v8 = v41 + 2;
      }
    }
    v41 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 == 8)
        {
          uint64_t v13 = v8 - 1;
          while (1)
          {
            v41 = v13 + 1;
            unint64_t v14 = v13[1];
            uint64_t v15 = v13 + 2;
            if (v13[1] < 0)
            {
              int v16 = *v15;
              int v17 = v14 + (v16 << 7);
              unint64_t v14 = (v17 - 128);
              if (v16 < 0)
              {
                v41 = (char *)sub_188C138((uint64_t)(v13 + 1), (v17 - 128));
                if (!v41) {
                  goto LABEL_71;
                }
                unint64_t v14 = v20;
                goto LABEL_15;
              }
              uint64_t v15 = v13 + 3;
            }
            v41 = v15;
LABEL_15:
            if (v14 > 6)
            {
              if (*v7) {
                uint64_t v21 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(1, v14, v21);
            }
            else
            {
              uint64_t v18 = *(unsigned int *)(a1 + 24);
              if (v18 == *(_DWORD *)(a1 + 28))
              {
                int v19 = v18 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v18 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18) = v14;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18) = v14;
                int v19 = v18 + 1;
              }
              *(_DWORD *)(a1 + 24) = v19;
            }
            uint64_t v13 = v41;
            if (*(void *)a3 <= (unint64_t)v41 || *v41 != 8) {
              goto LABEL_62;
            }
          }
        }
        if (v9 != 10) {
          goto LABEL_54;
        }
        *(void *)&long long v42 = a1 + 24;
        *((void *)&v42 + 1) = sub_1606990;
        uint64_t v43 = a1 + 8;
        int v44 = 1;
        int v37 = sub_1112E88((uint64_t)a3, v8, &v42);
        goto LABEL_61;
      case 2u:
        if (v9 != 16) {
          goto LABEL_54;
        }
        v5 |= 1u;
        uint64_t v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          int v32 = (char *)sub_188C138((uint64_t)v8, v23);
          v41 = v32;
          *(unsigned char *)(a1 + 40) = v33 != 0;
          if (!v32) {
            goto LABEL_71;
          }
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_33:
          v41 = v22;
          *(unsigned char *)(a1 + 40) = v23 != 0;
        }
        goto LABEL_62;
      case 3u:
        if (v9 != 24) {
          goto LABEL_54;
        }
        v5 |= 2u;
        uint64_t v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v34 = (char *)sub_188C138((uint64_t)v8, v26);
          v41 = v34;
          *(unsigned char *)(a1 + 41) = v35 != 0;
          if (!v34) {
            goto LABEL_71;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_38:
          v41 = v25;
          *(unsigned char *)(a1 + 41) = v26 != 0;
        }
        goto LABEL_62;
      case 4u:
        if (v9 != 32) {
          goto LABEL_54;
        }
        unsigned int v28 = v8 + 1;
        unint64_t v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v30 = *v28;
        int v31 = v29 + (v30 << 7);
        unint64_t v29 = (v31 - 128);
        if (v30 < 0)
        {
          v41 = (char *)sub_188C138((uint64_t)v8, (v31 - 128));
          if (!v41) {
            goto LABEL_71;
          }
          unint64_t v29 = v36;
        }
        else
        {
          unsigned int v28 = v8 + 2;
LABEL_43:
          v41 = v28;
        }
        if (sub_138DE04(v29))
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 44) = v29;
        }
        else
        {
          if (*v7) {
            v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v29, v40);
        }
        goto LABEL_62;
      default:
LABEL_54:
        if (v9) {
          BOOL v38 = (v9 & 7) == 4;
        }
        else {
          BOOL v38 = 1;
        }
        if (!v38)
        {
          if (*v7)
          {
            v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v41;
          }
          int v37 = (char *)sub_1885AC0(v9, v39, v8, a3);
LABEL_61:
          v41 = v37;
          if (!v37) {
            goto LABEL_71;
          }
LABEL_62:
          if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_71:
        }
          v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v41;
    }
  }
}

char *sub_1607FD8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v12 = *(unsigned char *)(a1 + 40);
    *__dst = 16;
    __dst[1] = v12;
    __dst += 2;
    if ((v11 & 2) == 0)
    {
LABEL_12:
      if ((v11 & 4) == 0) {
        goto LABEL_26;
      }
      goto LABEL_20;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_12;
  }
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v13 = *(unsigned char *)(a1 + 41);
  *__dst = 24;
  __dst[1] = v13;
  __dst += 2;
  if ((v11 & 4) != 0)
  {
LABEL_20:
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v14 = *(int *)(a1 + 44);
    *__dst = 32;
    __dst[1] = v14;
    if (v14 > 0x7F)
    {
      __dst[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      __dst[2] = v14 >> 7;
      __dst += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *__dst++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      __dst += 2;
    }
  }
LABEL_26:
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return __dst;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    unint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    unint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(__dst, v20, (int)v21);
    __dst += v22;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, __dst);
}

uint64_t sub_1608224(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 7) != 0)
  {
    if (v7) {
      v6 += 2;
    }
    if ((v7 & 2) != 0) {
      v6 += 2;
    }
    if ((v7 & 4) != 0)
    {
      int v8 = *(_DWORD *)(a1 + 44);
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v8 >= 0) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = 11;
      }
      v6 += v10;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v6 += v14;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

uint64_t sub_160830C()
{
  return 1;
}

void *sub_1608314@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.IncidentUserPath");
}

uint64_t sub_1608324(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16083DC(uint64_t a1)
{
  sub_1608324(a1);

  operator delete();
}

uint64_t sub_1608414(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)unint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      unint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)unint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)unint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_16085BC(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_16086A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1608784()
{
  return 1;
}

void *sub_160878C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.SiriContext");
}

uint64_t sub_160879C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2541040)
  {
    uint64_t v5 = *(void **)(a1 + 48);
    if (v5)
    {
      sub_15C27A4(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_15B3D28(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 64);
    if (v7)
    {
      sub_15B3D28(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_12C5234((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1608898(uint64_t a1)
{
  sub_160879C(a1);

  operator delete();
}

uint64_t sub_16088D0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B043C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if (v5)
    {
      uint64_t result = sub_15C2850(*(void *)(v1 + 48));
      if ((v5 & 2) == 0)
      {
LABEL_8:
        if ((v5 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_8;
    }
    uint64_t result = sub_15B043C(*(void *)(v1 + 56));
    if ((v5 & 4) != 0) {
LABEL_9:
    }
      uint64_t result = sub_15B043C(*(void *)(v1 + 64));
  }
LABEL_10:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_160898C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v25 + 2;
      }
    }
    uint64_t v25 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 48);
        if (!v11)
        {
          uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v12 = (void *)*v12;
          }
          uint64_t v11 = sub_15C6120((uint64_t)v12);
          *(void *)(a1 + 48) = v11;
          char v7 = v25;
        }
        unint64_t v13 = sub_12FECD8(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_44;
      case 2u:
        if (v8 != 18) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 56);
        if (v14) {
          goto LABEL_26;
        }
        uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v15 = (void *)*v15;
        }
        uint64_t v14 = sub_15C1CB4((uint64_t)v15);
        *(void *)(a1 + 56) = v14;
        goto LABEL_25;
      case 3u:
        if (v8 != 26) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v14 = *(void *)(a1 + 64);
        if (v14) {
          goto LABEL_26;
        }
        unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v16 = (void *)*v16;
        }
        uint64_t v14 = sub_15C1CB4((uint64_t)v16);
        *(void *)(a1 + 64) = v14;
LABEL_25:
        char v7 = v25;
LABEL_26:
        unint64_t v13 = sub_11B3E48(a3, v14, (unsigned __int8 *)v7);
        goto LABEL_44;
      case 4u:
        if (v8 != 34) {
          goto LABEL_37;
        }
        uint64_t v17 = v7 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          uint64_t v25 = v17 + 1;
          unint64_t v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_15C1CB4(*(void *)(a1 + 24));
            uint64_t v21 = sub_188CDC8(a1 + 24, v22);
            uint64_t v18 = (unsigned __int8 *)v25;
          }
          uint64_t v17 = sub_11B3E48(a3, v21, v18);
          uint64_t v25 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 34) {
            goto LABEL_45;
          }
        }
      default:
LABEL_37:
        if (v8) {
          BOOL v23 = (v8 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v6)
          {
            int v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = v25;
          }
          unint64_t v13 = (char *)sub_1885AC0(v8, v24, v7, a3);
LABEL_44:
          uint64_t v25 = v13;
          if (!v13) {
            return 0;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
            return v25;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v25;
    }
  }
}

unsigned char *sub_1608C58(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15C2A64(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_15B43E4(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 64);
    unsigned char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_15B43E4(v13, v15, a3);
  }
LABEL_23:
  int v16 = *(_DWORD *)(a1 + 32);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      uint64_t v4 = sub_15B43E4(v18, v20, a3);
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    int v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    int v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_1608ED8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B4924(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v12 = sub_15C2C78(*(void *)(a1 + 48));
      v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t v13 = sub_15B4924(*(void *)(a1 + 56));
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) != 0)
    {
LABEL_13:
      uint64_t v9 = sub_15B4924(*(void *)(a1 + 64));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v14 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1609030(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C5340((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(std::string **)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = (std::string *)sub_15C6120((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v13 = &off_253F7C8;
      }
      sub_12D45B4(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v14 = *(void *)(a1 + 56);
      if (!v14)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          int v16 = (void *)*v16;
        }
        uint64_t v14 = sub_15C1CB4((uint64_t)v16);
        *(void *)(a1 + 56) = v14;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v17 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v17 = &off_253F2E8;
      }
      sub_15B04F0(v14, (uint64_t)v17);
    }
    if ((v9 & 4) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v18 = *(void *)(a1 + 64);
      if (!v18)
      {
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v20 = (void *)*v20;
        }
        uint64_t v18 = sub_15C1CB4((uint64_t)v20);
        *(void *)(a1 + 64) = v18;
      }
      if (*(void *)(a2 + 64)) {
        uint64_t v21 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        uint64_t v21 = &off_253F2E8;
      }
      sub_15B04F0(v18, (uint64_t)v21);
    }
  }
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16091E8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_15B06D8(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 1) != 0 && (~*(_DWORD *)(*(void *)(a1 + 48) + 16) & 3) != 0) {
    return 0;
  }
  if ((v6 & 2) != 0)
  {
    uint64_t result = sub_15B06D8(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_15B06D8(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1609278@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.UserLocationDetails");
}

uint64_t sub_1609288(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2541088)
  {
    int v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_15B091C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1609340(uint64_t a1)
{
  sub_1609288(a1);

  operator delete();
}

unsigned char *sub_1609378(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_15B09D0(*((void *)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 6) = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_16093D8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v23 + 2;
      }
    }
    unint64_t v23 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    int v16 = v8 + 1;
    int v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    int v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      int v16 = v8 + 2;
LABEL_24:
      unint64_t v23 = v16;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_31;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v17);
    unint64_t v23 = v21;
    *(_DWORD *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v19 = sub_15C1918((uint64_t)v20);
      *(void *)(a1 + 24) = v19;
      int v8 = v23;
    }
    uint64_t v15 = sub_1198F14(a3, v19, (unsigned __int8 *)v8);
LABEL_30:
    unint64_t v23 = v15;
    if (!v15) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v23;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  unint64_t v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

char *sub_16095BC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 32);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1609754(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1609818(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_15C1918((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v8 = &off_253F1A0;
      }
      sub_15B0E24(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16098E8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v1 = *(void *)(a1 + 24);
    uint64_t result = sub_18856CC(v1 + 16);
    if (!result) {
      return result;
    }
    if ((~*(_DWORD *)(v1 + 40) & 3) != 0) {
      return 0;
    }
  }
  return 1;
}

void *sub_1609938@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.IncidentLocation");
}

uint64_t sub_1609948(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_25410B0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_160879C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1609288(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1609A18(uint64_t a1)
{
  sub_1609948(a1);

  operator delete();
}

char *sub_1609A50(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void *)(a1 + 32);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_160AB8C((uint64_t)v17);
        *(void *)(a1 + 32) = v16;
        uint64_t v7 = v26;
      }
      unint64_t v15 = sub_1609CBC(a3, v16, (unsigned __int8 *)v7);
      goto LABEL_33;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 24);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_160AAEC((uint64_t)v19);
      *(void *)(a1 + 24) = v18;
      uint64_t v7 = v26;
    }
    unint64_t v15 = sub_12FF994(a3, v18, (unsigned __int8 *)v7);
LABEL_33:
    uint64_t v26 = v15;
    if (!v15) {
      return 0;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    uint64_t v20 = v7 + 1;
    unint64_t v21 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    int v22 = *v20;
    int v23 = v21 + (v22 << 7);
    unint64_t v21 = (v23 - 128);
    if (v22 < 0)
    {
      uint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
      if (!v26) {
        return 0;
      }
      unint64_t v21 = v24;
    }
    else
    {
      uint64_t v20 = v7 + 2;
LABEL_38:
      uint64_t v26 = v20;
    }
    if (sub_1321808(v21))
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v21;
    }
    else
    {
      if (*v6) {
        uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v21, v25);
    }
    goto LABEL_41;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v26;
    }
    unint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_1609CBC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16093D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1609D4C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    int v4 = sub_1608C58(v10, (unint64_t)v12, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    unsigned char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      unint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      unint64_t v15 = v4 + 2;
    }
    int v4 = sub_16095BC(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1609F48(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_1608ED8(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1609754(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_160A054@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.NewIncidentDetails");
}

uint64_t sub_160A064(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25410E0)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_160879C(v6);
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 40);
    if (v7)
    {
      sub_15B091C(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_160A150(uint64_t a1)
{
  sub_160A064(a1);

  operator delete();
}

uint64_t sub_160A188(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v32 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    return *(void *)v32;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v32 + 1);
    unsigned int v8 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v32, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v32 + 2);
      }
    }
    *(void *)int v32 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (!v11)
        {
          unsigned int v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v12 = (void *)*v12;
          }
          uint64_t v11 = sub_160AAEC((uint64_t)v12);
          *(void *)(a1 + 32) = v11;
          uint64_t v7 = *(unsigned __int8 **)v32;
        }
        uint64_t v13 = sub_12FF994(a3, v11, v7);
        goto LABEL_46;
      case 2u:
        if (v8 != 18) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (std::string *)sub_1880F84((void *)(a1 + 24), v15);
        uint64_t v13 = (void *)sub_188C244(v16, *(char **)v32, (uint64_t)a3);
        goto LABEL_46;
      case 3u:
        if (v8 != 24) {
          goto LABEL_39;
        }
        uint64_t v17 = (char *)(v7 + 1);
        unint64_t v18 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          *(void *)int v32 = sub_188C138((uint64_t)v7, (v20 - 128));
          if (!*(void *)v32) {
            return 0;
          }
          unint64_t v18 = v28;
        }
        else
        {
          uint64_t v17 = (char *)(v7 + 2);
LABEL_23:
          *(void *)int v32 = v17;
        }
        if ((v18 - 1) <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 52) = v18;
          goto LABEL_47;
        }
        if (*v6) {
          int v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v31 = 3;
        goto LABEL_59;
      case 4u:
        if (v8 != 32) {
          goto LABEL_39;
        }
        uint64_t v21 = (char *)(v7 + 1);
        unint64_t v18 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v22 = *v21;
        int v23 = v18 + (v22 << 7);
        unint64_t v18 = (v23 - 128);
        if (v22 < 0)
        {
          *(void *)int v32 = sub_188C138((uint64_t)v7, (v23 - 128));
          if (!*(void *)v32) {
            return 0;
          }
          unint64_t v18 = v29;
        }
        else
        {
          uint64_t v21 = (char *)(v7 + 2);
LABEL_30:
          *(void *)int v32 = v21;
        }
        if (sub_1321808(v18))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v18;
        }
        else
        {
          if (*v6) {
            int v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v31 = 4;
LABEL_59:
          sub_188C020(v31, v18, v30);
        }
        goto LABEL_47;
      case 5u:
        if (v8 != 42) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v24 = *(void *)(a1 + 40);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_15C1918((uint64_t)v25);
          *(void *)(a1 + 40) = v24;
          uint64_t v7 = *(unsigned __int8 **)v32;
        }
        uint64_t v13 = sub_1198F14(a3, v24, v7);
        goto LABEL_46;
      default:
LABEL_39:
        if (v8) {
          BOOL v26 = (v8 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v6)
          {
            int v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v32;
          }
          uint64_t v13 = sub_1885AC0(v8, v27, (char *)v7, a3);
LABEL_46:
          *(void *)int v32 = v13;
          if (!v13) {
            return 0;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            return *(void *)v32;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v32;
    }
  }
}

unsigned char *sub_160A50C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1608C58(v7, (unint64_t)v9, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_18;
  }
LABEL_12:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v10 = *(int *)(a1 + 52);
  unsigned char *v4 = 24;
  v4[1] = v10;
  if (v10 > 0x7F)
  {
    v4[1] = v10 | 0x80;
    unint64_t v11 = v10 >> 7;
    v4[2] = v10 >> 7;
    v4 += 3;
    if (v10 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v12 = v11 >> 14;
        v11 >>= 7;
        *v4++ = v11;
      }
      while (v12);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_18:
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 48);
    unsigned char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 40);
    unsigned char *v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 44);
    v4[1] = v17;
    if (v17 > 0x7F) {
      unint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      unint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v16, v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_160A7B0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_23;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_1608ED8(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_15B0D90(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_23;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  int v9 = *(_DWORD *)(a1 + 48);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v10;
  if ((v2 & 0x10) != 0)
  {
LABEL_19:
    int v11 = *(_DWORD *)(a1 + 52);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v12;
  }
LABEL_23:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_160A940@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.IncidentAnnotationDetails");
}

double sub_160A950(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24C8710;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 44) = 0u;
  return result;
}

void *sub_160A9D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24C8790;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  return result;
}

void *sub_160AA68(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24C8810;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_160AAEC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24C8890;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(void *)(result + 64) = 0;
  return result;
}

uint64_t sub_160AB8C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24C8910;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_160AC08(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24C8990;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_160AC88(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C8A10;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0x100000000;
  return result;
}

uint64_t sub_160AD14(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2541118)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_15B15FC(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_15B091C(v6);
      operator delete();
    }
    if (*(void *)(a1 + 40))
    {
      sub_184B078();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_160AE04(uint64_t a1)
{
  sub_160AD14(a1);

  operator delete();
}

char *sub_160AE3C(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    BOOL v26 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_34;
        }
        int v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          BOOL v26 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v26) {
            return 0;
          }
          unint64_t v12 = v24;
        }
        else
        {
          int v11 = v7 + 2;
LABEL_13:
          BOOL v26 = v11;
        }
        if (v12 > 9)
        {
          if (*v6) {
            uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v25);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v12;
        }
        goto LABEL_42;
      case 2u:
        if (v8 != 18) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 24);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_15C19EC((uint64_t)v16);
          *(void *)(a1 + 24) = v15;
          uint64_t v7 = v26;
        }
        unsigned int v17 = sub_11E1C60(a3, v15, (unsigned __int8 *)v7);
        goto LABEL_41;
      case 3u:
        if (v8 != 26) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 32);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_15C1918((uint64_t)v19);
          *(void *)(a1 + 32) = v18;
          uint64_t v7 = v26;
        }
        unsigned int v17 = sub_1198F14(a3, v18, (unsigned __int8 *)v7);
        goto LABEL_41;
      case 4u:
        if (v8 != 34) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void *)(a1 + 40);
        if (!v20)
        {
          unint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_185089C((uint64_t)v21);
          *(void *)(a1 + 40) = v20;
          uint64_t v7 = v26;
        }
        unsigned int v17 = sub_12688D0(a3, v20, (unsigned __int8 *)v7);
        goto LABEL_41;
      default:
LABEL_34:
        if (v8) {
          BOOL v22 = (v8 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v6)
          {
            uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v26;
          }
          unsigned int v17 = (char *)sub_1885AC0(v8, v23, v7, a3);
LABEL_41:
          BOOL v26 = v17;
          if (!v17) {
            return 0;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
            return v26;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v26;
    }
  }
}

unsigned char *sub_160B11C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    unint64_t v4 = sub_15B1A68(v10, (unint64_t)v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 44);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  unint64_t v4 = sub_15B0C0C(v13, v15, a3);
  if ((v6 & 4) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 40);
    unsigned char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 44);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    unint64_t v4 = sub_184B3AC(v16, v18, a3);
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    BOOL v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    BOOL v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_160B388(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B1D1C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_184B568(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v7 = *(_DWORD *)(a1 + 48);
  if (v7 < 0) {
    uint64_t v8 = 11;
  }
  else {
    uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v8;
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_160B4CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackLayoutConfigParameters");
}

void *sub_160B4DC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1639800(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_160B55C(void *a1)
{
  sub_160B4DC(a1);

  operator delete();
}

char *sub_160B594(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          unsigned int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_160E840(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = sub_160B734(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_160B734(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_160C7A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_160B7C4(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_160CBF4(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unsigned int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unsigned int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_160B908(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_160CEE8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_160B9B8()
{
  return 1;
}

void *sub_160B9C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackLayoutConfigResult");
}

uint64_t sub_160B9D0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2541180)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_160D180(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_160BA9C(uint64_t a1)
{
  sub_160B9D0(a1);

  operator delete();
}

uint64_t sub_160BAD4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_160BB78(*(void *)(result + 32));
  }
LABEL_7:
  if ((v2 & 0x1C) != 0)
  {
    *(_DWORD *)(v1 + 48) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_160BB78(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_160D270(*(void *)(result + 24));
  }
  if ((v2 & 0xFE) != 0)
  {
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(_DWORD *)(v1 + 56) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 52) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_160BBEC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v37 + 1);
    unsigned int v9 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v37, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v37 + 2);
      }
    }
    *(void *)int v37 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_36;
        }
        uint64_t v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)int v37 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v37) {
            goto LABEL_59;
          }
          unint64_t v13 = v31;
        }
        else
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)int v37 = v12;
        }
        if (v13 > 7)
        {
          if (*v7) {
            unint64_t v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v36);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v13;
        }
        goto LABEL_44;
      case 2u:
        if (v9 != 18) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void *)(a1 + 32);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          sub_160E8EC((uint64_t)v17);
          uint64_t v16 = v18;
          *(void *)(a1 + 32) = v18;
          uint64_t v8 = *(unsigned __int8 **)v37;
        }
        uint64_t v19 = sub_160BF58(a3, v16, v8);
        goto LABEL_43;
      case 3u:
        if (v9 != 26) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v20 = *(void *)(a1 + 8);
        unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          unint64_t v21 = (uint64_t *)*v21;
        }
        BOOL v22 = (std::string *)sub_1880F84((void *)(a1 + 24), v21);
        uint64_t v19 = (void *)sub_188C244(v22, *(char **)v37, (uint64_t)a3);
        goto LABEL_43;
      case 4u:
        if (v9 != 32) {
          goto LABEL_36;
        }
        v5 |= 8u;
        uint64_t v23 = (char *)(v8 + 1);
        uint64_t v24 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v32 = sub_188C138((uint64_t)v8, v24);
          *(void *)int v37 = v32;
          *(unsigned char *)(a1 + 44) = v33 != 0;
          if (!v32) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v23 = (char *)(v8 + 2);
LABEL_30:
          *(void *)int v37 = v23;
          *(unsigned char *)(a1 + 44) = v24 != 0;
        }
        goto LABEL_44;
      case 5u:
        if (v9 != 40) {
          goto LABEL_36;
        }
        v5 |= 0x10u;
        BOOL v26 = (char *)(v8 + 1);
        int v27 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v28 = *v26;
        int v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v34 = sub_188C0D0((uint64_t)v8, v27);
          *(void *)int v37 = v34;
          *(_DWORD *)(a1 + 48) = v35;
          if (!v34) {
            goto LABEL_59;
          }
        }
        else
        {
          BOOL v26 = (char *)(v8 + 2);
LABEL_35:
          *(void *)int v37 = v26;
          *(_DWORD *)(a1 + 48) = v27;
        }
        goto LABEL_44;
      default:
LABEL_36:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v7)
          {
            int v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v37;
          }
          uint64_t v19 = sub_1885AC0(v9, v30, (char *)v8, a3);
LABEL_43:
          *(void *)int v37 = v19;
          if (!v19) {
            goto LABEL_59;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_59:
        }
          *(void *)int v37 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v37;
    }
  }
}

char *sub_160BF58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_160D2C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_160BFE8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_160D954(v10, (unint64_t)v12, a3);
    if ((v6 & 1) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_10;
  }
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
LABEL_20:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v13 = *(unsigned char *)(a1 + 44);
  unsigned char *v4 = 32;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x10) != 0)
  {
LABEL_23:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v14 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 40;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unsigned int v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_29:
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_160C264(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_20;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t v8 = sub_160DE44(*(void *)(a1 + 32));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  if ((v2 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v10;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 0x10) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_20:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_160C3B4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      sub_160E8EC((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_25411B8;
    }
    uint64_t result = sub_160C4E4(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_25;
    }
LABEL_24:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_8;
    }
LABEL_25:
    v3[1].__r_.__value_.__s.__data_[20] = *(unsigned char *)(a2 + 44);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_160C4E4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        int v9 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          int v9 = (void *)*v9;
        }
        data = (std::string *)sub_160E96C((uint64_t)v9);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v10 = *(uint64_t (****)(uint64_t))(a2 + 24);
      }
      else {
        uint64_t v10 = &off_25411F8;
      }
      uint64_t result = sub_127AD60(data, (uint64_t)v10);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_27;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_27:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
LABEL_28:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_30;
    }
LABEL_29:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_31;
    }
LABEL_30:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
      goto LABEL_11;
    }
LABEL_31:
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x100) != 0)
  {
    int v5 = *(_DWORD *)(a2 + 60);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = v5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_160C634()
{
  return 1;
}

void *sub_160C63C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackLayoutFormConfig.LayoutField");
}

void *sub_160C64C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1639880(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_160C6CC(void *a1)
{
  sub_160C64C(a1);

  operator delete();
}

uint64_t sub_160C704(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_160BAD4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 0xF) != 0)
  {
    *(_DWORD *)(v1 + 56) = 0;
    *(void *)(v1 + 48) = 0;
    *(unsigned char *)(v1 + 60) = 1;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_160C7A0(uint64_t a1, char *a2, int32x2_t *a3)
{
  v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v41 + 1;
    unsigned int v9 = *v41;
    if (*v41 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v41, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v41 + 2;
      }
    }
    v41 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_41;
        }
        v5 |= 1u;
        unint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          v41 = v12;
          *(_DWORD *)(a1 + 48) = v13;
          goto LABEL_48;
        }
        uint64_t v33 = (char *)sub_188C0D0((uint64_t)v8, v13);
        v41 = v33;
        *(_DWORD *)(a1 + 48) = v34;
        if (v33) {
          goto LABEL_48;
        }
        goto LABEL_65;
      case 2u:
        if (v9 != 16) {
          goto LABEL_41;
        }
        unsigned int v15 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          v41 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v41) {
            goto LABEL_65;
          }
          unint64_t v16 = v35;
        }
        else
        {
          unsigned int v15 = v8 + 2;
LABEL_18:
          v41 = v15;
        }
        if (v16 > 9)
        {
          if (*v7) {
            v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v40);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 52) = v16;
        }
        goto LABEL_48;
      case 3u:
        if (v9 != 26) {
          goto LABEL_41;
        }
        unint64_t v19 = v8 - 1;
        while (1)
        {
          uint64_t v20 = (unsigned __int8 *)(v19 + 1);
          v41 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            uint64_t v24 = sub_160E7B8(*(void *)(a1 + 24));
            uint64_t v23 = sub_188CDC8(a1 + 24, v24);
            uint64_t v20 = (unsigned __int8 *)v41;
          }
          unint64_t v19 = (char *)sub_160CB64(a3, v23, v20);
          v41 = v19;
          if (!v19) {
            goto LABEL_65;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 26) {
            goto LABEL_48;
          }
        }
      case 4u:
        if (v9 != 32) {
          goto LABEL_41;
        }
        v5 |= 8u;
        int v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          unint64_t v36 = (char *)sub_188C138((uint64_t)v8, v26);
          v41 = v36;
          *(unsigned char *)(a1 + 60) = v37 != 0;
          if (!v36) {
            goto LABEL_65;
          }
        }
        else
        {
          int v25 = v8 + 2;
LABEL_35:
          v41 = v25;
          *(unsigned char *)(a1 + 60) = v26 != 0;
        }
        goto LABEL_48;
      case 6u:
        if (v9 != 48) {
          goto LABEL_41;
        }
        v5 |= 4u;
        int v28 = v8 + 1;
        int v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          BOOL v38 = (char *)sub_188C0D0((uint64_t)v8, v29);
          v41 = v38;
          *(_DWORD *)(a1 + 56) = v39;
          if (!v38) {
            goto LABEL_65;
          }
        }
        else
        {
          int v28 = v8 + 2;
LABEL_40:
          v41 = v28;
          *(_DWORD *)(a1 + 56) = v29;
        }
        goto LABEL_48;
      default:
LABEL_41:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v41;
          }
          v41 = (char *)sub_1885AC0(v9, v32, v8, a3);
          if (!v41) {
            goto LABEL_65;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_65:
        }
          v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v41;
    }
  }
}

uint64_t sub_160CB64(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_160BBEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_160CBF4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 52);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        int v17 = v4 + 2;
      }
      uint64_t v4 = sub_160BFE8(v15, (unint64_t)v17, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v18 = *(unsigned char *)(a1 + 60);
    unsigned char *v4 = 32;
    v4[1] = v18;
    v4 += 2;
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 56);
    unsigned char *v4 = 48;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    int v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    int v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_160CEE8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_160C264(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_16;
  }
  if (v8)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  int v11 = *(_DWORD *)(a1 + 52);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v12;
  if ((v8 & 4) != 0) {
LABEL_13:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  if ((v8 & 8) != 0) {
    v2 += 2;
  }
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v13 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_160D040(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_163998C((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_17;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      v3[2].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 60);
      goto LABEL_10;
    }
LABEL_17:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_160D168()
{
  return 1;
}

void *sub_160D170@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackLayoutFormConfig");
}

uint64_t sub_160D180(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25411B8)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_160E0B8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_160D238(uint64_t a1)
{
  sub_160D180(a1);

  operator delete();
}

uint64_t sub_160D270(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(unsigned char *)(a1 + 36) = 1;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_160D2C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  v53 = a2;
  if (sub_11947B8((uint64_t)a3, &v53, a3[11].i32[1])) {
    return v53;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = v53 + 1;
    unsigned int v8 = *v53;
    if (*v53 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v53, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v53 + 2;
      }
    }
    v53 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_79;
        }
        int v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          v53 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v53) {
            return 0;
          }
          unint64_t v12 = v43;
        }
        else
        {
          int v11 = v7 + 2;
LABEL_13:
          v53 = v11;
        }
        if (v12 <= 9)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 32) = v12;
          goto LABEL_87;
        }
        if (*v6) {
          v51 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v52 = 1;
        goto LABEL_111;
      case 2u:
        if (v8 != 16) {
          goto LABEL_79;
        }
        uint64_t v15 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v16 = *v15;
        int v17 = v12 + (v16 << 7);
        unint64_t v12 = (v17 - 128);
        if (v16 < 0)
        {
          v53 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
          if (!v53) {
            return 0;
          }
          unint64_t v12 = v44;
        }
        else
        {
          uint64_t v15 = v7 + 2;
LABEL_20:
          v53 = v15;
        }
        if (v12 <= 8)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 36) = v12;
          goto LABEL_87;
        }
        if (*v6) {
          v51 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v52 = 2;
        goto LABEL_111;
      case 3u:
        if (v8 != 24) {
          goto LABEL_79;
        }
        char v18 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v19 = *v18;
        int v20 = v12 + (v19 << 7);
        unint64_t v12 = (v20 - 128);
        if (v19 < 0)
        {
          v53 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
          if (!v53) {
            return 0;
          }
          unint64_t v12 = v45;
        }
        else
        {
          char v18 = v7 + 2;
LABEL_27:
          v53 = v18;
        }
        if ((v12 - 2) < 6 || v12 == 0)
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 40) = v12;
          goto LABEL_87;
        }
        if (*v6) {
          v51 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v52 = 3;
        goto LABEL_111;
      case 4u:
        if (v8 != 32) {
          goto LABEL_79;
        }
        uint64_t v22 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v23 = *v22;
        int v24 = v12 + (v23 << 7);
        unint64_t v12 = (v24 - 128);
        if (v23 < 0)
        {
          v53 = (char *)sub_188C138((uint64_t)v7, (v24 - 128));
          if (!v53) {
            return 0;
          }
          unint64_t v12 = v46;
        }
        else
        {
          uint64_t v22 = v7 + 2;
LABEL_38:
          v53 = v22;
        }
        if (v12 <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 44) = v12;
          goto LABEL_87;
        }
        if (*v6) {
          v51 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v52 = 4;
        goto LABEL_111;
      case 5u:
        if (v8 != 40) {
          goto LABEL_79;
        }
        int v25 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v26 = *v25;
        int v27 = v12 + (v26 << 7);
        unint64_t v12 = (v27 - 128);
        if (v26 < 0)
        {
          v53 = (char *)sub_188C138((uint64_t)v7, (v27 - 128));
          if (!v53) {
            return 0;
          }
          unint64_t v12 = v47;
        }
        else
        {
          int v25 = v7 + 2;
LABEL_45:
          v53 = v25;
        }
        if (v12 < 8 || v12 == 12)
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 48) = v12;
          goto LABEL_87;
        }
        if (*v6) {
          v51 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v52 = 5;
        goto LABEL_111;
      case 6u:
        if (v8 != 48) {
          goto LABEL_79;
        }
        int v29 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v30 = *v29;
        int v31 = v12 + (v30 << 7);
        unint64_t v12 = (v31 - 128);
        if (v30 < 0)
        {
          v53 = (char *)sub_188C138((uint64_t)v7, (v31 - 128));
          if (!v53) {
            return 0;
          }
          unint64_t v12 = v48;
        }
        else
        {
          int v29 = v7 + 2;
LABEL_56:
          v53 = v29;
        }
        if (sub_1321808(v12))
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 52) = v12;
          goto LABEL_87;
        }
        if (*v6) {
          v51 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v52 = 6;
        goto LABEL_111;
      case 7u:
        if (v8 != 56) {
          goto LABEL_79;
        }
        uint64_t v32 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v33 = *v32;
        int v34 = v12 + (v33 << 7);
        unint64_t v12 = (v34 - 128);
        if (v33 < 0)
        {
          v53 = (char *)sub_188C138((uint64_t)v7, (v34 - 128));
          if (!v53) {
            return 0;
          }
          unint64_t v12 = v49;
        }
        else
        {
          uint64_t v32 = v7 + 2;
LABEL_63:
          v53 = v32;
        }
        if (v12 <= 8)
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 56) = v12;
          goto LABEL_87;
        }
        if (*v6) {
          v51 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v52 = 7;
        goto LABEL_111;
      case 8u:
        if (v8 != 64) {
          goto LABEL_79;
        }
        unint64_t v35 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_70;
        }
        int v36 = *v35;
        int v37 = v12 + (v36 << 7);
        unint64_t v12 = (v37 - 128);
        if (v36 < 0)
        {
          v53 = (char *)sub_188C138((uint64_t)v7, (v37 - 128));
          if (!v53) {
            return 0;
          }
          unint64_t v12 = v50;
        }
        else
        {
          unint64_t v35 = v7 + 2;
LABEL_70:
          v53 = v35;
        }
        if (v12 > 7)
        {
          if (*v6) {
            v51 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v52 = 8;
LABEL_111:
          sub_188C020(v52, v12, v51);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 60) = v12;
        }
        goto LABEL_87;
      case 9u:
        if (v8 != 74) {
          goto LABEL_79;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v38 = *(void *)(a1 + 24);
        if (!v38)
        {
          int v39 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v39 = (void *)*v39;
          }
          uint64_t v38 = sub_160E96C((uint64_t)v39);
          *(void *)(a1 + 24) = v38;
          int v7 = v53;
        }
        v40 = (char *)sub_12FEADC(a3, v38, (unsigned __int8 *)v7);
        goto LABEL_86;
      default:
LABEL_79:
        if (v8) {
          BOOL v41 = (v8 & 7) == 4;
        }
        else {
          BOOL v41 = 1;
        }
        if (!v41)
        {
          if (*v6)
          {
            long long v42 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            long long v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v7 = v53;
          }
          v40 = (char *)sub_1885AC0(v8, v42, v7, a3);
LABEL_86:
          v53 = v40;
          if (!v40) {
            return 0;
          }
LABEL_87:
          if (sub_11947B8((uint64_t)a3, &v53, a3[11].i32[1])) {
            return v53;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v53;
    }
  }
}

unsigned char *sub_160D954(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 44);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 48);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 52);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 56);
    unsigned char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v28 = *(int *)(a1 + 60);
    unsigned char *v4 = 64;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v31 = *(void *)(a1 + 24);
    unsigned char *v4 = 74;
    unsigned int v32 = *(_DWORD *)(v31 + 20);
    v4[1] = v32;
    if (v32 > 0x7F) {
      int v33 = sub_188A9CC(v32, v4 + 1);
    }
    else {
      int v33 = v4 + 2;
    }
    char v4 = sub_160E428(v31, v33, a3);
  }
  uint64_t v34 = *(void *)(a1 + 8);
  if ((v34 & 1) == 0) {
    return v4;
  }
  unint64_t v36 = v34 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v36 + 31) < 0)
  {
    int v37 = *(void **)(v36 + 8);
    uint64_t v38 = *(void *)(v36 + 16);
  }
  else
  {
    int v37 = (void *)(v36 + 8);
    LODWORD(v38) = *(unsigned __int8 *)(v36 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v38)
  {
    uint64_t v39 = (int)v38;
    memcpy(v4, v37, (int)v38);
    v4 += v39;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v37, v38, v4);
}

uint64_t sub_160DE44(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    if ((v2 & 0x100) == 0) {
      goto LABEL_48;
    }
    goto LABEL_44;
  }
  if (v2)
  {
    uint64_t v4 = sub_160E5A8(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 10;
  }
  else {
    uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
  }
  result += v6 + 1;
LABEL_12:
  if ((v2 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 36);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_28;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v10;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_28:
  int v11 = *(_DWORD *)(a1 + 44);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v12;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_32:
  int v13 = *(_DWORD *)(a1 + 48);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v14;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_36:
  int v15 = *(_DWORD *)(a1 + 52);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v16;
  if ((v2 & 0x80) == 0)
  {
LABEL_18:
    if ((v2 & 0x100) == 0) {
      goto LABEL_48;
    }
    goto LABEL_44;
  }
LABEL_40:
  int v17 = *(_DWORD *)(a1 + 56);
  if (v17 < 0) {
    uint64_t v18 = 11;
  }
  else {
    uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v18;
  if ((v2 & 0x100) != 0)
  {
LABEL_44:
    int v19 = *(_DWORD *)(a1 + 60);
    if (v19 < 0) {
      uint64_t v20 = 11;
    }
    else {
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v20;
  }
LABEL_48:
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v22 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    result += v23;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_160E0A0()
{
  return 1;
}

void *sub_160E0A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackLayoutFieldName");
}

uint64_t sub_160E0B8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_160E158(uint64_t a1)
{
  sub_160E0B8(a1);

  operator delete();
}

uint64_t sub_160E190(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 4u;
    int v17 = v8 + 1;
    uint64_t v18 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v19 = *v17;
    uint64_t v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      int v17 = v8 + 2;
LABEL_25:
      *(void *)uint64_t v31 = v17;
      *(unsigned char *)(a1 + 36) = v18 != 0;
      goto LABEL_37;
    }
    uint64_t v27 = sub_188C138((uint64_t)v8, v18);
    *(void *)uint64_t v31 = v27;
    *(unsigned char *)(a1 + 36) = v28 != 0;
    if (!v27) {
      goto LABEL_50;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 != 16) {
      goto LABEL_14;
    }
    uint64_t v20 = v8 + 1;
    unint64_t v21 = *v8;
    if (*v8 < 0)
    {
      int v22 = *v20;
      int v23 = v21 + (v22 << 7);
      unint64_t v21 = (v23 - 128);
      if (v22 < 0)
      {
        *(void *)uint64_t v31 = sub_188C138((uint64_t)v8, (v23 - 128));
        if (!*(void *)v31) {
          goto LABEL_50;
        }
        unint64_t v21 = v29;
        goto LABEL_31;
      }
      uint64_t v20 = v8 + 2;
    }
    *(void *)uint64_t v31 = v20;
LABEL_31:
    if (sub_1321808(v21))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v21;
    }
    else
    {
      if (*v7) {
        unint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v21, v30);
    }
    goto LABEL_37;
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v24 = *(void *)(a1 + 8);
    unint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      unint64_t v25 = (uint64_t *)*v25;
    }
    unint64_t v26 = (std::string *)sub_1880F84((void *)(a1 + 24), v25);
    uint64_t v16 = (void *)sub_188C244(v26, *(char **)v31, (uint64_t)a3);
LABEL_36:
    *(void *)uint64_t v31 = v16;
    if (!v16) {
      goto LABEL_50;
    }
    goto LABEL_37;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v31;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  *(void *)uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v31;
}

unsigned char *sub_160E428(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 36);
    unsigned char *v4 = 24;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_160E5A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v7 = *(_DWORD *)(a1 + 32);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v8;
  }
LABEL_13:
  if ((v1 & 4) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_160E680()
{
  return 1;
}

void *sub_160E688@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.IncidentField");
}

double sub_160E698(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C8A90;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 0;
  return result;
}

uint64_t sub_160E718(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C8B10;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_160E7B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C8B90;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_160E840(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C8C10;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(unsigned char *)(result + 60) = 1;
  return result;
}

double sub_160E8EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C8C90;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

uint64_t sub_160E96C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C8D10;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  *(unsigned char *)(result + 36) = 1;
  return result;
}

uint64_t sub_160E9F8(int a1)
{
  uint64_t result = 1;
  if (a1 <= 1300)
  {
    if (a1 > 1100)
    {
      if ((a1 - 1201) > 0x3E || ((1 << (a1 + 79)) & 0x7FFC0000000007E3) == 0)
      {
        unsigned int v3 = a1 - 1101;
        if (v3 > 0xC || v3 == 8) {
          return 0;
        }
      }
      return result;
    }
    if (a1 < 0x14 || (a1 - 501) < 7 || (a1 - 1001) < 7) {
      return result;
    }
    return 0;
  }
  if (a1 <= 2050)
  {
    if ((a1 - 1701) < 0x14 || (a1 - 1301) < 6 || (a1 - 2001) < 3) {
      return result;
    }
    return 0;
  }
  if (a1 > 2400)
  {
    if (a1 <= 2600)
    {
      if ((a1 - 2501) < 7 || a1 == 2401) {
        return result;
      }
    }
    else if ((a1 - 2601) < 5 || (a1 - 5000) < 5 || a1 == 10000)
    {
      return result;
    }
    return 0;
  }
  if (((a1 - 2051) > 0x37 || ((1 << (a1 - 3)) & 0xFC00000000000FLL) == 0)
    && (a1 - 2201) >= 8
    && (a1 - 2301) >= 2)
  {
    return 0;
  }
  return result;
}

uint64_t sub_160EB40(int a1)
{
  uint64_t result = 1;
  if (a1 > 1200)
  {
    if (a1 > 1800)
    {
      if (a1 <= 10000)
      {
        if ((a1 - 1801) >= 2 && (a1 - 2001) >= 2 && a1 != 1901) {
          return 0;
        }
        return result;
      }
      unsigned int v3 = a1 - 10001;
    }
    else
    {
      if (a1 > 1300)
      {
        if ((a1 - 1301) >= 3 && (a1 - 1501) >= 2 && a1 != 1401) {
          return 0;
        }
        return result;
      }
      unsigned int v3 = a1 - 1201;
    }
    if (v3 >= 4) {
      return 0;
    }
  }
  else if (a1 <= 600)
  {
    if ((a1 - 101) >= 9 && a1 >= 2) {
      return 0;
    }
  }
  else if ((a1 - 601) >= 8 && (a1 - 1101) >= 6)
  {
    return 0;
  }
  return result;
}

uint64_t sub_160EC14(uint64_t a1)
{
  unsigned int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_160ECB4(uint64_t a1)
{
  sub_160EC14(a1);

  operator delete();
}

uint64_t sub_160ECEC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_160ED30(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)int v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    BOOL v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      BOOL v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    uint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)int v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = *(char **)v17;
    }
    uint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)int v17 = 0;
  return *(void *)v17;
}

char *sub_160EE88(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_160EF54(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_160EFD8()
{
  return 1;
}

void *sub_160EFE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackFieldOptionAnnotations");
}

uint64_t sub_160EFF0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_2541240)
  {
    uint64_t v6 = *(void *)(a1 + 64);
    if (v6)
    {
      sub_160EC14(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_160F0E0(uint64_t a1)
{
  sub_160EFF0(a1);

  operator delete();
}

uint64_t sub_160F118(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_160ECEC(*(void *)(a1 + 64));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v3 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 64) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_160F1F4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v35 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    return *(void *)v35;
  }
  unint64_t v6 = (void *)(a1 + 8);
  unint64_t v7 = (uint64_t **)(a1 + 24);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 2);
      }
    }
    *(void *)unint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_44;
        }
        uint64_t v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)unint64_t v35 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v35) {
            return 0;
          }
          unint64_t v13 = v33;
        }
        else
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)unint64_t v35 = v12;
        }
        if (sub_160E9F8(v13))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 72) = v13;
        }
        else
        {
          if (*v6) {
            uint64_t v34 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v34);
        }
        goto LABEL_52;
      case 2u:
        if (v9 != 18) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        unint64_t v21 = (void *)(a1 + 48);
        goto LABEL_31;
      case 3u:
        if (v9 != 26) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        unint64_t v21 = (void *)(a1 + 56);
LABEL_31:
        int v23 = (std::string *)sub_1880F84(v21, v20);
        uint64_t v18 = (uint64_t)sub_188C244(v23, *(char **)v35, (uint64_t)a3);
        goto LABEL_51;
      case 4u:
        if (v9 != 34) {
          goto LABEL_44;
        }
        uint64_t v24 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          unint64_t v25 = (char *)(v24 + 1);
          *(void *)unint64_t v35 = v24 + 1;
          unint64_t v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(std::string **)&v26[2 * v27 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v30 = v29;
            v30[1] = sub_3A6EDC;
            *unint64_t v29 = 0;
            v29[1] = 0;
            int v29[2] = 0;
            uint64_t v28 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v29);
            unint64_t v25 = *(char **)v35;
          }
          uint64_t v24 = sub_188C244(v28, v25, (uint64_t)a3);
          *(void *)unint64_t v35 = v24;
          if (!v24) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 34) {
            goto LABEL_52;
          }
        }
      default:
        if (v9 >> 3 == 1000 && v9 == 66)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v16 = *(void **)(a1 + 64);
          if (!v16)
          {
            int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              int v17 = (void *)*v17;
            }
            uint64_t v16 = sub_161C5C4((uint64_t)v17);
            *(void *)(a1 + 64) = v16;
            uint64_t v8 = *(unsigned __int8 **)v35;
          }
          uint64_t v18 = sub_160F5AC(a3, (uint64_t)v16, v8);
          goto LABEL_51;
        }
LABEL_44:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v6)
          {
            unsigned int v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v35;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v9, v32, (char *)v8, a3);
LABEL_51:
          *(void *)unint64_t v35 = v18;
          if (!v18) {
            return 0;
          }
LABEL_52:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            return *(void *)v35;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v35;
    }
  }
}

uint64_t sub_160F5AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_160ED30(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_160F63C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      unint64_t v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_23;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v14)
      {
        char *v4 = 34;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          unint64_t v13 = (void *)*v13;
        }
        int v15 = v4 + 2;
        memcpy(v15, v13, v14);
        uint64_t v4 = &v15[v14];
        goto LABEL_21;
      }
LABEL_23:
      uint64_t v4 = (char *)sub_188A868(a3, 4, (uint64_t)v13, v4);
LABEL_21:
      v11 += 8;
    }
    while (v12 != v11);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 64);
    *(_WORD *)uint64_t v4 = 16066;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[2] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 2);
    }
    else {
      uint64_t v18 = v4 + 3;
    }
    uint64_t v4 = sub_160EE88(v16, v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_160F8C8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_11:
        if ((v8 & 4) == 0) {
          goto LABEL_12;
        }
        goto LABEL_20;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_11;
    }
    unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_12:
      if ((v8 & 8) == 0) {
        goto LABEL_25;
      }
      goto LABEL_21;
    }
LABEL_20:
    uint64_t v15 = sub_160EF54(*(void *)(a1 + 64));
    v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v8 & 8) == 0) {
      goto LABEL_25;
    }
LABEL_21:
    int v16 = *(_DWORD *)(a1 + 72);
    if (v16 < 0) {
      uint64_t v17 = 11;
    }
    else {
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v17;
  }
LABEL_25:
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v4 += v21;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

std::string *sub_160FA8C(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_21;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      int v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_21:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v17 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
    if (!v17)
    {
      std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = (std::string *)sub_161C5C4((uint64_t)v19);
      v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v17;
    }
    if (*(void *)(a2 + 64)) {
      unint64_t v20 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unint64_t v20 = &off_2541220;
    }
    uint64_t result = sub_12329D0(v17, (uint64_t)v20);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_160FC44()
{
  return 1;
}

void *sub_160FC4C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackFieldOption");
}

uint64_t sub_160FC5C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2541290)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_160EFF0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1639A18((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_160FD20(uint64_t a1)
{
  sub_160FC5C(a1);

  operator delete();
}

uint64_t sub_160FD58(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_160F118(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_160F118(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_160FDE8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 48);
    if (!v15)
    {
      int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v16 = (void *)*v16;
      }
      uint64_t v15 = sub_161C648((uint64_t)v16);
      *(void *)(a1 + 48) = v15;
      int v7 = v23;
    }
    uint64_t v14 = (char *)sub_160FFF0(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_27:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v17 = v7 - 1;
    while (1)
    {
      std::string::size_type v18 = (unsigned __int8 *)(v17 + 1);
      uint64_t v23 = v17 + 1;
      uint64_t v19 = *(_DWORD **)(a1 + 40);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 32) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        uint64_t v22 = sub_161C648(*(void *)(a1 + 24));
        uint64_t v21 = sub_188CDC8(a1 + 24, v22);
        std::string::size_type v18 = (unsigned __int8 *)v23;
      }
      uint64_t v17 = (char *)sub_160FFF0(a3, v21, v18);
      uint64_t v23 = v17;
      if (!v17) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 10) {
        goto LABEL_27;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

uint64_t sub_160FFF0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_160F1F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1610080(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_160F63C(v8, (unint64_t)v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 48);
    *__dst = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      uint64_t v13 = __dst + 2;
    }
    __dst = sub_160F63C(v11, (unint64_t)v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_161022C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_160F8C8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_160F8C8(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1610310(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1639B98((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v12 = (void *)*v12;
      }
      data = (std::string *)sub_161C648((uint64_t)v12);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_2541240;
    }
    uint64_t result = sub_160FA8C(data, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1610434()
{
  return 1;
}

void *sub_161043C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackSingleSelectField");
}

void *sub_161044C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1639A18(a1 + 5);
  sub_1639A18(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16104D8(void *a1)
{
  sub_161044C(a1);

  operator delete();
}

uint64_t sub_1610510(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_160F118(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_160F118(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_16105B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v26 + 2;
        }
      }
      unint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          uint64_t v14 = v7 - 1;
          while (1)
          {
            uint64_t v15 = (unsigned __int8 *)(v14 + 1);
            unint64_t v26 = v14 + 1;
            unint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              uint64_t v19 = sub_161C648(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, v19);
              uint64_t v15 = (unsigned __int8 *)v26;
            }
            uint64_t v14 = (char *)sub_160FFF0(a3, v18, v15);
            unint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        uint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          unint64_t v26 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_161C648(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, v25);
            uint64_t v21 = (unsigned __int8 *)v26;
          }
          uint64_t v20 = (char *)sub_160FFF0(a3, v24, v21);
          unint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v26;
      }
      unint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_16107FC(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_160F63C(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_160F63C(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_16109C4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_160F8C8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_160F8C8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

std::string *sub_1610AC4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_1639B98((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_1639B98((uint64_t *)&v3[1].__r_.__value_.__r.__words[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1610BF8()
{
  return 1;
}

void *sub_1610C00@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackMultiSelectField");
}

uint64_t sub_1610C10(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1610CC8(uint64_t a1)
{
  sub_1610C10(a1);

  operator delete();
}

uint64_t sub_1610D00(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1610D7C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      unint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_1610F24(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1611010(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16110EC()
{
  return 1;
}

void *sub_16110F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackTextField");
}

void *sub_1611104(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 8);
  sub_1889DE8(a1 + 5);
  sub_1889DE8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1611190(void *a1)
{
  sub_1611104(a1);

  operator delete();
}

uint64_t sub_16111C8(uint64_t a1)
{
  sub_188CC00(a1 + 16);
  sub_188CC00(a1 + 40);
  uint64_t result = sub_188CC00(a1 + 64);
  char v4 = *(unsigned char *)(a1 + 8);
  unint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return sub_188B4AC(v3);
  }
  return result;
}

uint64_t sub_1611228(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v39 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v6 = (uint64_t **)(a1 + 64);
    uint64_t v7 = (uint64_t **)(a1 + 40);
    uint64_t v8 = (uint64_t **)(a1 + 16);
    uint64_t v9 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v10 = (char *)(*(void *)v39 + 1);
      unsigned int v11 = **(unsigned char **)v39;
      if ((char)**(unsigned char **)v39 < 0)
      {
        unsigned int v12 = v11 + (*v10 << 7);
        unsigned int v11 = v12 - 128;
        if (*v10 < 0)
        {
          unsigned int v10 = (char *)sub_188C180(*(uint64_t *)v39, v12 - 128);
          unsigned int v11 = v13;
        }
        else
        {
          unsigned int v10 = (char *)(*(void *)v39 + 2);
        }
      }
      *(void *)uint64_t v39 = v10;
      unsigned int v14 = v11 >> 3;
      if (v11 >> 3 == 3)
      {
        if (v11 == 26)
        {
          uint64_t v18 = v10 - 1;
          while (1)
          {
            uint64_t v19 = (char *)(v18 + 1);
            *(void *)uint64_t v39 = v18 + 1;
            uint64_t v20 = *(_DWORD **)(a1 + 80);
            if (v20 && (uint64_t v21 = *(int *)(a1 + 72), (int)v21 < *v20))
            {
              *(_DWORD *)(a1 + 72) = v21 + 1;
              uint64_t v22 = *(std::string **)&v20[2 * v21 + 2];
            }
            else
            {
              if (!*v6) {
                operator new();
              }
              *uint64_t v24 = v23;
              v24[1] = sub_3A6EDC;
              *uint64_t v23 = 0;
              v23[1] = 0;
              v23[2] = 0;
              uint64_t v22 = (std::string *)sub_188CDC8(a1 + 64, (uint64_t)v23);
              uint64_t v19 = *(char **)v39;
            }
            uint64_t v18 = sub_188C244(v22, v19, (uint64_t)a3);
            *(void *)uint64_t v39 = v18;
            if (!v18) {
              goto LABEL_61;
            }
            if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
              goto LABEL_56;
            }
          }
        }
      }
      else if (v14 == 2)
      {
        if (v11 == 18)
        {
          uint64_t v25 = v10 - 1;
          while (1)
          {
            unint64_t v26 = (char *)(v25 + 1);
            *(void *)uint64_t v39 = v25 + 1;
            uint64_t v27 = *(_DWORD **)(a1 + 56);
            if (v27 && (uint64_t v28 = *(int *)(a1 + 48), (int)v28 < *v27))
            {
              *(_DWORD *)(a1 + 48) = v28 + 1;
              unint64_t v29 = *(std::string **)&v27[2 * v28 + 2];
            }
            else
            {
              if (!*v7) {
                operator new();
              }
              void *v31 = v30;
              v31[1] = sub_3A6EDC;
              void *v30 = 0;
              v30[1] = 0;
              v30[2] = 0;
              unint64_t v29 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v30);
              unint64_t v26 = *(char **)v39;
            }
            uint64_t v25 = sub_188C244(v29, v26, (uint64_t)a3);
            *(void *)uint64_t v39 = v25;
            if (!v25) {
              goto LABEL_61;
            }
            if (*(void *)a3 <= (unint64_t)v25 || *v25 != 18) {
              goto LABEL_56;
            }
          }
        }
      }
      else if (v14 == 1 && v11 == 10)
      {
        unsigned int v32 = v10 - 1;
        while (1)
        {
          unint64_t v33 = (char *)(v32 + 1);
          *(void *)uint64_t v39 = v32 + 1;
          uint64_t v34 = *(_DWORD **)(a1 + 32);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 24), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 24) = v35 + 1;
            unint64_t v36 = *(std::string **)&v34[2 * v35 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v38 = v37;
            v38[1] = sub_3A6EDC;
            *int v37 = 0;
            v37[1] = 0;
            int v37[2] = 0;
            unint64_t v36 = (std::string *)sub_188CDC8(a1 + 16, (uint64_t)v37);
            unint64_t v33 = *(char **)v39;
          }
          unsigned int v32 = sub_188C244(v36, v33, (uint64_t)a3);
          *(void *)uint64_t v39 = v32;
          if (!v32) {
            goto LABEL_61;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 10) {
            goto LABEL_56;
          }
        }
      }
      if (!v11 || (v11 & 7) == 4) {
        break;
      }
      if (*v9)
      {
        unint64_t v17 = (std::string *)((*v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unsigned int v10 = *(char **)v39;
      }
      *(void *)uint64_t v39 = sub_1885AC0(v11, v17, v10, a3);
      if (!*(void *)v39) {
        goto LABEL_61;
      }
LABEL_56:
      if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
        return *(void *)v39;
      }
    }
    if (v10)
    {
      a3[10].i32[0] = v11 - 1;
      return *(void *)v39;
    }
LABEL_61:
    *(void *)uint64_t v39 = 0;
  }
  return *(void *)v39;
}

char *sub_16115E4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      uint64_t v9 = *(void **)(*(void *)(a1 + 32) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          uint64_t v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(unsigned int *)(a1 + 48);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 8 * v12;
    do
    {
      uint64_t v15 = *(void **)(*(void *)(a1 + 56) + v13 + 8);
      if (*((char *)v15 + 23) < 0)
      {
        int64_t v16 = v15[1];
        if (v16 > 127) {
          goto LABEL_24;
        }
      }
      else
      {
        int64_t v16 = *((unsigned __int8 *)v15 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v16)
      {
        *__dst = 18;
        __dst[1] = v16;
        if (*((char *)v15 + 23) < 0) {
          uint64_t v15 = (void *)*v15;
        }
        unint64_t v17 = __dst + 2;
        memcpy(v17, v15, v16);
        __dst = &v17[v16];
        goto LABEL_22;
      }
LABEL_24:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v15, __dst);
LABEL_22:
      v13 += 8;
    }
    while (v14 != v13);
  }
  uint64_t v18 = *(unsigned int *)(a1 + 72);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 8 * v18;
    do
    {
      uint64_t v21 = *(void **)(*(void *)(a1 + 80) + v19 + 8);
      if (*((char *)v21 + 23) < 0)
      {
        int64_t v22 = v21[1];
        if (v22 > 127) {
          goto LABEL_36;
        }
      }
      else
      {
        int64_t v22 = *((unsigned __int8 *)v21 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v22)
      {
        *__dst = 26;
        __dst[1] = v22;
        if (*((char *)v21 + 23) < 0) {
          uint64_t v21 = (void *)*v21;
        }
        uint64_t v23 = __dst + 2;
        memcpy(v23, v21, v22);
        __dst = &v23[v22];
        goto LABEL_34;
      }
LABEL_36:
      __dst = (char *)sub_188A868(a3, 3, (uint64_t)v21, __dst);
LABEL_34:
      v19 += 8;
    }
    while (v20 != v19);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return __dst;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(__dst, v27, (int)v28);
    __dst += v29;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, __dst);
}

uint64_t sub_161189C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 24);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 24);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 48);
  uint64_t v8 = v3 + v7;
  if ((int)v7 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v8 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      --v7;
    }
    while (v7);
  }
  uint64_t v13 = *(unsigned int *)(a1 + 72);
  uint64_t v14 = v8 + v13;
  if ((int)v13 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v16 = *v15++;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v14 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6);
      --v13;
    }
    while (v13);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v14 += v22;
  }
  *(_DWORD *)(a1 + 88) = v14;
  return v14;
}

std::string *sub_16119E4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 56) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1].__r_.__value_.__r.__words[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 80) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[2].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 72));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2].__r_.__value_.__r.__words[2], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    int v17 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v14;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__l.__size_;
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1611B7C()
{
  return 1;
}

void *sub_1611B84@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackTextListField");
}

void *sub_1611B94(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1611C18((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1611C18(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2541398)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void **)(result + 24);
    if (v2)
    {
      sub_15B091C(v2);
      operator delete();
    }
    uint64_t v3 = (void *)v1[4];
    if (v3)
    {
      sub_15B091C(v3);
      operator delete();
    }
    uint64_t v4 = v1[5];
    if (v4)
    {
      sub_16128F8(v4);
      operator delete();
    }
    uint64_t result = v1[6];
    if (result)
    {
      sub_16128F8(result);
      operator delete();
    }
  }
  return result;
}

void sub_1611CE4(void *a1)
{
  sub_1611B94(a1);

  operator delete();
}

uint64_t sub_1611D1C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_12:
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(result + 24));
  if ((v2 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_13:
  uint64_t result = sub_1611DB4(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_1611DB4(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1611DB4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1272680(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_1611E64(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (v11) {
          goto LABEL_20;
        }
        int v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v12 = (void *)*v12;
        }
        uint64_t v11 = sub_15C1918((uint64_t)v12);
        *(void *)(a1 + 24) = v11;
        goto LABEL_19;
      case 2u:
        if (v8 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (!v11)
        {
          uint64_t v13 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v11 = sub_15C1918((uint64_t)v13);
          *(void *)(a1 + 32) = v11;
LABEL_19:
          char v7 = v20;
        }
LABEL_20:
        int v14 = sub_1198F14(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 3u:
        if (v8 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void **)(a1 + 40);
        if (v15) {
          goto LABEL_32;
        }
        uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v15 = sub_161C9E8((uint64_t)v16);
        *(void *)(a1 + 40) = v15;
        goto LABEL_31;
      case 4u:
        if (v8 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v15 = *(void **)(a1 + 48);
        if (v15) {
          goto LABEL_32;
        }
        int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v17 = (void *)*v17;
        }
        uint64_t v15 = sub_161C9E8((uint64_t)v17);
        *(void *)(a1 + 48) = v15;
LABEL_31:
        char v7 = v20;
LABEL_32:
        int v14 = (char *)sub_16120DC(a3, (uint64_t)v15, (unsigned __int8 *)v7);
        goto LABEL_40;
      default:
LABEL_33:
        if (v8) {
          BOOL v18 = (v8 & 7) == 4;
        }
        else {
          BOOL v18 = 1;
        }
        if (!v18)
        {
          if (*v6)
          {
            uint64_t v19 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = v20;
          }
          int v14 = (char *)sub_1885AC0(v8, v19, v7, a3);
LABEL_40:
          uint64_t v20 = v14;
          if (!v14) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
            return v20;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v20;
    }
  }
}

uint64_t sub_16120DC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16129DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_161216C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    int v12 = v4 + 2;
  }
  uint64_t v4 = sub_15B0C0C(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_1612BDC(v13, v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      BOOL v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      BOOL v18 = v4 + 2;
    }
    uint64_t v4 = sub_1612BDC(v16, v18, a3);
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_16123C4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v9 = sub_1612D44(*(void *)(a1 + 40));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_10:
    uint64_t v6 = sub_1612D44(*(void *)(a1 + 48));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1612504(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_15C1918((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v8 = &off_253F1A0;
      }
      sub_15B0E24(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        uint64_t v9 = sub_15C1918((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        int v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        int v12 = &off_253F1A0;
      }
      sub_15B0E24(v9, (uint64_t)v12);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v13 = *(std::string **)(a1 + 40);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = (std::string *)sub_161C9E8((uint64_t)v15);
        *(void *)(a1 + 40) = v13;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v16 = &off_25413D0;
      }
      sub_1612690(v13, (uint64_t)v16);
    }
    if ((v4 & 8) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 8u;
      unsigned int v17 = *(std::string **)(a1 + 48);
      if (!v17)
      {
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v19 = (void *)*v19;
        }
        unsigned int v17 = (std::string *)sub_161C9E8((uint64_t)v19);
        *(void *)(a1 + 48) = v17;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v20 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v20 = &off_25413D0;
      }
      sub_1612690(v17, (uint64_t)v20);
    }
  }
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_1612690(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_12C2FA8((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unsigned int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unsigned int v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1612798(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    if (!sub_18856CC(v4 + 16) || (~*(_DWORD *)(v4 + 40) & 3) != 0) {
      return 0;
    }
    int v2 = *(_DWORD *)(a1 + 16);
    if ((v2 & 2) == 0) {
      goto LABEL_9;
    }
LABEL_3:
    uint64_t v3 = *(void *)(a1 + 32);
    if (sub_18856CC(v3 + 16) && (~*(_DWORD *)(v3 + 40) & 3) == 0)
    {
      int v2 = *(_DWORD *)(a1 + 16);
      goto LABEL_9;
    }
    return 0;
  }
  if ((v2 & 2) != 0) {
    goto LABEL_3;
  }
LABEL_9:
  if ((v2 & 4) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(unsigned int *)(v5 + 32);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      BOOL v8 = sub_12734C4(*(void *)(*(void *)(v5 + 40) + 8 * v6));
      uint64_t v6 = v7;
      if (!v8) {
        return 0;
      }
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(unsigned int *)(v11 + 32);
  do
  {
    BOOL v9 = (int)v12 < 1;
    if ((int)v12 < 1) {
      break;
    }
    uint64_t v13 = v12 - 1;
    BOOL v14 = sub_12734C4(*(void *)(*(void *)(v11 + 40) + 8 * v12));
    uint64_t v12 = v13;
  }
  while (v14);
  return v9;
}

BOOL sub_1612890(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    BOOL v5 = sub_12734C4(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while (v5);
  return v3 < 1;
}

void *sub_16128E8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackCoordinateField");
}

uint64_t sub_16128F8(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  BOOL v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_12C2434((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16129A4(uint64_t a1)
{
  sub_16128F8(a1);

  operator delete();
}

uint64_t sub_16129DC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    unsigned int v17 = (std::string *)sub_1880F84((void *)(a1 + 48), v16);
    BOOL v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v18 = v7 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      *(void *)uint64_t v24 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_1284448(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, v23);
        uint64_t v19 = *(unsigned __int8 **)v24;
      }
      uint64_t v18 = sub_126FFF0(a3, v22, v19);
      *(void *)uint64_t v24 = v18;
      if (!v18) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_25;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v24;
    }
    BOOL v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

char *sub_1612BDC(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1272CB8(v8, (unint64_t)v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16)) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1612D44(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1273164(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_1612E3C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackTileFeatureInfo");
}

void *sub_1612E4C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1889DA8((uint64_t)(a1 + 4));
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1612ED8(void *a1)
{
  sub_1612E4C(a1);

  operator delete();
}

uint64_t sub_1612F10(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1612F2C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v34 = a2;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    return v34;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v34 + 1;
    unsigned int v8 = *v34;
    if (*v34 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v34, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v34 + 2;
      }
    }
    uint64_t v34 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 24)
      {
        uint64_t v18 = v7 - 1;
        while (1)
        {
          uint64_t v34 = v18 + 1;
          uint64_t v19 = v18[1];
          if (v18[1] < 0)
          {
            int v20 = v19 + (v18[2] << 7);
            uint64_t v19 = (v20 - 128);
            if (v18[2] < 0)
            {
              uint64_t v18 = (char *)sub_188C138((uint64_t)(v18 + 1), (v20 - 128));
              uint64_t v19 = v21;
            }
            else
            {
              v18 += 3;
            }
          }
          else
          {
            v18 += 2;
          }
          uint64_t v34 = v18;
          uint64_t v22 = *(unsigned int *)(a1 + 48);
          if (v22 == *(_DWORD *)(a1 + 52))
          {
            int v23 = v22 + 1;
            sub_188CA54((unsigned int *)(a1 + 48), v22 + 1);
            *(void *)(*(void *)(a1 + 56) + 8 * v22) = v19;
            uint64_t v18 = v34;
          }
          else
          {
            *(void *)(*(void *)(a1 + 56) + 8 * v22) = v19;
            int v23 = v22 + 1;
          }
          *(_DWORD *)(a1 + 48) = v23;
          if (!v18) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 24) {
            goto LABEL_68;
          }
        }
      }
      if (v8 == 26)
      {
        unint64_t v30 = (unsigned int *)(a1 + 48);
        goto LABEL_59;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 16)
      {
        uint64_t v24 = v7 - 1;
        while (1)
        {
          uint64_t v34 = v24 + 1;
          uint64_t v25 = v24[1];
          if (v24[1] < 0)
          {
            int v26 = v25 + (v24[2] << 7);
            uint64_t v25 = (v26 - 128);
            if (v24[2] < 0)
            {
              uint64_t v24 = (char *)sub_188C138((uint64_t)(v24 + 1), (v26 - 128));
              uint64_t v25 = v27;
            }
            else
            {
              v24 += 3;
            }
          }
          else
          {
            v24 += 2;
          }
          uint64_t v34 = v24;
          uint64_t v28 = *(unsigned int *)(a1 + 32);
          if (v28 == *(_DWORD *)(a1 + 36))
          {
            int v29 = v28 + 1;
            sub_188CA54((unsigned int *)(a1 + 32), v28 + 1);
            *(void *)(*(void *)(a1 + 40) + 8 * v28) = v25;
            uint64_t v24 = v34;
          }
          else
          {
            *(void *)(*(void *)(a1 + 40) + 8 * v28) = v25;
            int v29 = v28 + 1;
          }
          *(_DWORD *)(a1 + 32) = v29;
          if (!v24) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 16) {
            goto LABEL_68;
          }
        }
      }
      if (v8 == 18)
      {
        unint64_t v30 = (unsigned int *)(a1 + 32);
        goto LABEL_59;
      }
    }
    else if (v11 == 1)
    {
      if (v8 == 8)
      {
        BOOL v12 = v7 - 1;
        while (1)
        {
          uint64_t v34 = v12 + 1;
          uint64_t v13 = v12[1];
          if (v12[1] < 0)
          {
            int v14 = v13 + (v12[2] << 7);
            uint64_t v13 = (v14 - 128);
            if (v12[2] < 0)
            {
              BOOL v12 = (char *)sub_188C138((uint64_t)(v12 + 1), (v14 - 128));
              uint64_t v13 = v15;
            }
            else
            {
              v12 += 3;
            }
          }
          else
          {
            v12 += 2;
          }
          uint64_t v34 = v12;
          uint64_t v16 = *(unsigned int *)(a1 + 16);
          if (v16 == *(_DWORD *)(a1 + 20))
          {
            int v17 = v16 + 1;
            sub_188CA54((unsigned int *)(a1 + 16), v16 + 1);
            *(void *)(*(void *)(a1 + 24) + 8 * v16) = v13;
            BOOL v12 = v34;
          }
          else
          {
            *(void *)(*(void *)(a1 + 24) + 8 * v16) = v13;
            int v17 = v16 + 1;
          }
          *(_DWORD *)(a1 + 16) = v17;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 8) {
            goto LABEL_68;
          }
        }
      }
      if (v8 == 10)
      {
        unint64_t v30 = (unsigned int *)(a1 + 16);
LABEL_59:
        BOOL v31 = sub_188C2EC(v30, (unsigned __int8 *)v7, (uint64_t)a3);
        goto LABEL_67;
      }
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v34;
    }
    BOOL v31 = sub_1885AC0(v8, v33, v7, a3);
LABEL_67:
    uint64_t v34 = (char *)v31;
    if (!v31) {
      return 0;
    }
LABEL_68:
    if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
      return v34;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v34;
  }
  return 0;
}

char *sub_16132EC(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 32);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8 * j);
      *__dst = 16;
      __dst[1] = v13;
      if (v13 > 0x7F)
      {
        __dst[1] = v13 | 0x80;
        unint64_t v14 = v13 >> 7;
        __dst[2] = v13 >> 7;
        __dst += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v15 = v14 >> 14;
            v14 >>= 7;
            *__dst++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 48);
  if ((int)v16 >= 1)
  {
    for (uint64_t k = 0; k != v16; ++k)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * k);
      *__dst = 24;
      __dst[1] = v18;
      if (v18 > 0x7F)
      {
        __dst[1] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        __dst[2] = v18 >> 7;
        __dst += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *__dst++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return __dst;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(__dst, v24, (int)v25);
    __dst += v26;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, __dst);
}

uint64_t sub_1613574(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  uint64_t v4 = sub_188D5A8((unsigned int *)(a1 + 32));
  uint64_t v5 = *(unsigned int *)(a1 + 32);
  uint64_t result = v2 + v4 + v3 + v5 + sub_188D5A8((unsigned int *)(a1 + 48)) + *(unsigned int *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 64) = result;
  return result;
}

uint64_t sub_1613614()
{
  return 1;
}

void *sub_161361C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackULongListField");
}

void *sub_161362C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16136A0(void *a1)
{
  sub_161362C(a1);

  operator delete();
}

uint64_t sub_16136D8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16136F0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(unsigned char *)(a1 + 25) = v16 != 0;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(unsigned char *)(a1 + 25) = v22 != 0;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      unint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(unsigned char *)(a1 + 24) = v19 != 0;
      goto LABEL_30;
    }
    unint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(unsigned char *)(a1 + 24) = v24 != 0;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1613900(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v8 = *(unsigned char *)(a1 + 25);
    unsigned char *v4 = 16;
    v4[1] = v8;
    v4 += 2;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    BOOL v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    BOOL v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1613A1C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1613A74()
{
  return 1;
}

void *sub_1613A7C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackBooleanField");
}

void *sub_1613A8C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1613B00(void *a1)
{
  sub_1613A8C(a1);

  operator delete();
}

uint64_t sub_1613B38(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1613B5C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    char v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(void *)(a1 + 32) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      unint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    unint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1613D4C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_1613EF0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1613F90()
{
  return 1;
}

void *sub_1613F98@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackLongField");
}

void *sub_1613FA8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_161401C(void *a1)
{
  sub_1613FA8(a1);

  operator delete();
}

uint64_t sub_1614054(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1614078(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(void *)(a1 + 32) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    unint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1614268(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_161440C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16144AC()
{
  return 1;
}

void *sub_16144B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackULongField");
}

void *sub_16144C4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1614538(void *a1)
{
  sub_16144C4(a1);

  operator delete();
}

uint64_t sub_1614570(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1614594(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_25:
      uint64_t v25 = v16;
      *(_DWORD *)(a1 + 28) = v15;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v15);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    LODWORD(v18) = *v8;
    if ((v18 & 0x80) == 0) {
      goto LABEL_29;
    }
    int v20 = *v19;
    uint64_t v18 = v18 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      uint64_t v25 = v19;
      *(_DWORD *)(a1 + 24) = v18;
      goto LABEL_30;
    }
    unint64_t v23 = (char *)sub_188C138((uint64_t)v8, v18);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_161477C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1614920(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16149E0()
{
  return 1;
}

void *sub_16149E8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackIntField");
}

void *sub_16149F8(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1614A6C(void *a1)
{
  sub_16149F8(a1);

  operator delete();
}

uint64_t sub_1614AA4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1614AC8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    unint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1614CB8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1614E5C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1614F00()
{
  return 1;
}

void *sub_1614F08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackUIntField");
}

void *sub_1614F18(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1614F8C(void *a1)
{
  sub_1614F18(a1);

  operator delete();
}

uint64_t sub_1614FC4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1614FE8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    goto LABEL_29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 17)
      {
        uint64_t v15 = *(void *)v7;
        uint64_t v14 = v7 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v15;
LABEL_23:
        uint64_t v18 = v14;
        goto LABEL_24;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 9)
    {
      uint64_t v16 = *(void *)v7;
      uint64_t v14 = v7 + 8;
      v5 |= 1u;
      *(void *)(a1 + 24) = v16;
      goto LABEL_23;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v18;
    }
    uint64_t v18 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v18) {
      goto LABEL_30;
    }
LABEL_24:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v18 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 16) |= v5;
  return v18;
}

_OWORD *sub_1615158(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)int v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 32);
    *(unsigned char *)int v4 = 17;
    *(void *)((char *)v4 + 1) = v8;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    return (_OWORD *)((char *)v4 + v14);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1615274(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_16152D0()
{
  return 1;
}

void *sub_16152D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackDoubleField");
}

void *sub_16152E8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_161535C(void *a1)
{
  sub_16152E8(a1);

  operator delete();
}

uint64_t sub_1615394(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16153B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    goto LABEL_29;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 21)
      {
        int v15 = *(_DWORD *)v7;
        uint64_t v14 = v7 + 4;
        v5 |= 2u;
        *(_DWORD *)(a1 + 28) = v15;
LABEL_23:
        uint64_t v18 = v14;
        goto LABEL_24;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 13)
    {
      int v16 = *(_DWORD *)v7;
      uint64_t v14 = v7 + 4;
      v5 |= 1u;
      *(_DWORD *)(a1 + 24) = v16;
      goto LABEL_23;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v18;
    }
    uint64_t v18 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v18) {
      goto LABEL_30;
    }
LABEL_24:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v18 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 16) |= v5;
  return v18;
}

_OWORD *sub_1615528(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 13;
    *(_DWORD *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 5);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v8 = *(_DWORD *)(a1 + 28);
    *(unsigned char *)uint64_t v4 = 21;
    *(_DWORD *)((char *)v4 + 1) = v8;
    uint64_t v4 = (_OWORD *)((char *)v4 + 5);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    return (_OWORD *)((char *)v4 + v14);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1615644(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 5;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 5;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_16156A0(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    }
    if ((v2 & 2) != 0) {
      HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16156EC()
{
  return 1;
}

void *sub_16156F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackFloatField");
}

uint64_t sub_1615704(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16157BC(uint64_t a1)
{
  sub_1615704(a1);

  operator delete();
}

uint64_t sub_16157F4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0x1C) != 0)
  {
    *(_DWORD *)(a1 + 48) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1615880(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v35 + 2);
      }
    }
    *(void *)uint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_33;
        }
        v5 |= 4u;
        uint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v35 = v13;
          *(_DWORD *)(a1 + 40) = v12;
          goto LABEL_41;
        }
        uint64_t v29 = sub_188C138((uint64_t)v8, v12);
        *(void *)uint64_t v35 = v29;
        *(_DWORD *)(a1 + 40) = v30;
        if (v29) {
          goto LABEL_41;
        }
        goto LABEL_52;
      case 2u:
        if (v9 != 16) {
          goto LABEL_33;
        }
        v5 |= 8u;
        int v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v15);
          *(void *)uint64_t v35 = v31;
          *(_DWORD *)(a1 + 44) = v32;
          if (!v31) {
            goto LABEL_52;
          }
        }
        else
        {
          int v16 = v8 + 2;
LABEL_18:
          *(void *)uint64_t v35 = v16;
          *(_DWORD *)(a1 + 44) = v15;
        }
        goto LABEL_41;
      case 3u:
        if (v9 != 24) {
          goto LABEL_33;
        }
        v5 |= 0x10u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v33 = sub_188C0D0((uint64_t)v8, v19);
          *(void *)uint64_t v35 = v33;
          *(_DWORD *)(a1 + 48) = v34;
          if (!v33) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          *(void *)uint64_t v35 = v18;
          *(_DWORD *)(a1 + 48) = v19;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v21 = *(void *)(a1 + 8);
        int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          int v22 = (uint64_t *)*v22;
        }
        unint64_t v23 = (void *)(a1 + 24);
        goto LABEL_32;
      case 5u:
        if (v9 != 42) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v24 = *(void *)(a1 + 8);
        int v22 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          int v22 = (uint64_t *)*v22;
        }
        unint64_t v23 = (void *)(a1 + 32);
LABEL_32:
        uint64_t v25 = (std::string *)sub_1880F84(v23, v22);
        uint64_t v26 = (void *)sub_188C244(v25, *(char **)v35, (uint64_t)a3);
        goto LABEL_40;
      default:
LABEL_33:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v35;
          }
          uint64_t v26 = sub_1885AC0(v9, v28, v8, a3);
LABEL_40:
          *(void *)uint64_t v35 = v26;
          if (!v26) {
            goto LABEL_52;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          *(void *)uint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v35;
    }
  }
}

unsigned char *sub_1615B80(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1615DE0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v11 = *(_DWORD *)(a1 + 40);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v12;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  int v13 = *(_DWORD *)(a1 + 44);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v14;
  if ((v1 & 0x10) != 0) {
LABEL_15:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v15 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1615F58()
{
  return 1;
}

void *sub_1615F60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackRouteStep");
}

uint64_t sub_1615F70(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2541580)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_15C27A4(v5);
      operator delete();
    }
    unint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_15C27A4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1616040(uint64_t a1)
{
  sub_1615F70(a1);

  operator delete();
}

uint64_t sub_1616078(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_15C2850(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_15C2850(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16160E8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v18 = a2;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    return v18;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v18 + 2;
      }
    }
    unint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 32);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_15C6120((uint64_t)v16);
          *(void *)(a1 + 32) = v15;
LABEL_29:
          uint64_t v7 = v18;
        }
LABEL_30:
        uint64_t v14 = sub_12FECD8(a3, v15, (unsigned __int8 *)v7);
        goto LABEL_31;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v15 = *(void *)(a1 + 24);
      if (!v15)
      {
        int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v17 = (void *)*v17;
        }
        uint64_t v15 = sub_15C6120((uint64_t)v17);
        *(void *)(a1 + 24) = v15;
        goto LABEL_29;
      }
      goto LABEL_30;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v18;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
LABEL_31:
    unint64_t v18 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      return v18;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v18;
  }
  return 0;
}

unsigned char *sub_161629C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15C2A64(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_15C2A64(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_161641C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    unint64_t v4 = sub_15C2C78(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    unint64_t v5 = sub_15C2C78(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_16164F4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        data = (std::string *)sub_15C6120((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_253F7C8;
      }
      uint64_t result = sub_12D45B4(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = (std::string *)sub_15C6120((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        uint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        uint64_t v12 = &off_253F7C8;
      }
      uint64_t result = sub_12D45B4(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_16165F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  return ((v1 & 1) == 0 || (~*(_DWORD *)(*(void *)(a1 + 24) + 16) & 3) == 0)
      && ((v1 & 2) == 0 || (~*(_DWORD *)(*(void *)(a1 + 32) + 16) & 3) == 0);
}

void *sub_1616634@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackTimestamp");
}

uint64_t sub_1616644(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1616710(uint64_t a1)
{
  sub_1616644(a1);

  operator delete();
}

uint64_t sub_1616748(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1616800(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)int v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 24);
LABEL_32:
      uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      unint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v22;
    }
    unint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)int v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)int v22 = 0;
  return *(void *)v22;
}

char *sub_16169F0(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1616B08(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1616C28()
{
  return 1;
}

void *sub_1616C30@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackTransitLine");
}

uint64_t sub_1616C40(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1616CF8(uint64_t a1)
{
  sub_1616C40(a1);

  operator delete();
}

uint64_t sub_1616D30(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1616DAC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      unint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_1616F54(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1617040(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_161711C()
{
  return 1;
}

void *sub_1617124@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackPhotoMetadata");
}

uint64_t sub_1617134(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_25415D8)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_1610C10(v5);
      operator delete();
    }
    unint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_1611104(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1617204(uint64_t a1)
{
  sub_1617134(a1);

  operator delete();
}

uint64_t sub_161723C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_1610D00(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_16111C8(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16172AC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_161C8B8((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = v19;
    }
    unint64_t v14 = (char *)sub_16174FC(a3, v15, (unsigned __int8 *)v7);
LABEL_31:
    uint64_t v19 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void **)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_161C834((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      uint64_t v7 = v19;
    }
    unint64_t v14 = (char *)sub_161746C(a3, (uint64_t)v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    unint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v19;
  }
  return 0;
}

uint64_t sub_161746C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1610D7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_16174FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1611228(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_161758C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1610F24(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 88);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_16115E4(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_161770C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_1611010(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_161189C(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_16177E4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        data = (std::string *)sub_161C834((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2541310;
      }
      uint64_t result = sub_11EC100(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = (std::string *)sub_161C8B8((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        BOOL v12 = &off_2541338;
      }
      uint64_t result = sub_16119E4(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16178E8()
{
  return 1;
}

void *sub_16178F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue.FeedbackFieldAnnotations");
}

void *sub_1617900(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_161799C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1639A98(a1 + 6);
  sub_1301728(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_161799C(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2541600)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 72);
    if (v2)
    {
      sub_160FC5C(v2);
      operator delete();
    }
    uint64_t v3 = (void *)v1[10];
    if (v3)
    {
      sub_161044C(v3);
      operator delete();
    }
    uint64_t v4 = v1[11];
    if (v4)
    {
      sub_1610C10(v4);
      operator delete();
    }
    uint64_t v5 = (void *)v1[12];
    if (v5)
    {
      sub_1611104(v5);
      operator delete();
    }
    uint64_t v6 = v1[13];
    if (v6)
    {
      sub_1615F70(v6);
      operator delete();
    }
    uint64_t v7 = (void *)v1[14];
    if (v7)
    {
      sub_1611B94(v7);
      operator delete();
    }
    unint64_t v8 = (void *)v1[15];
    if (v8)
    {
      sub_161362C(v8);
      operator delete();
    }
    uint64_t v9 = (void *)v1[16];
    if (v9)
    {
      sub_1613A8C(v9);
      operator delete();
    }
    std::string::size_type v10 = (void *)v1[17];
    if (v10)
    {
      sub_1613FA8(v10);
      operator delete();
    }
    unsigned int v11 = (void *)v1[18];
    if (v11)
    {
      sub_16144C4(v11);
      operator delete();
    }
    BOOL v12 = (void *)v1[19];
    if (v12)
    {
      sub_16149F8(v12);
      operator delete();
    }
    uint64_t v13 = (void *)v1[20];
    if (v13)
    {
      sub_1614F18(v13);
      operator delete();
    }
    unint64_t v14 = (void *)v1[21];
    if (v14)
    {
      sub_16152E8(v14);
      operator delete();
    }
    uint64_t v15 = v1[22];
    if (v15)
    {
      sub_16128F8(v15);
      operator delete();
    }
    uint64_t v16 = (void *)v1[23];
    if (v16)
    {
      sub_15C53B8(v16);
      operator delete();
    }
    uint64_t v17 = (void *)v1[24];
    if (v17)
    {
      sub_1612E4C(v17);
      operator delete();
    }
    uint64_t v18 = v1[25];
    if (v18)
    {
      sub_1615704(v18);
      operator delete();
    }
    uint64_t v19 = v1[26];
    if (v19)
    {
      sub_1616644(v19);
      operator delete();
    }
    uint64_t result = v1[27];
    if (result)
    {
      sub_1617134(result);
      operator delete();
    }
  }
  return result;
}

void sub_1617C48(void *a1)
{
  sub_1617900(a1);

  operator delete();
}

uint64_t sub_1617C80(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15C356C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1616D30(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((_BYTE)v8)
  {
    if (v8)
    {
      uint64_t result = sub_160FD58(*(void *)(v1 + 72));
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_20;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t result = sub_1610510(*(void *)(v1 + 80));
    if ((v8 & 4) == 0)
    {
LABEL_13:
      if ((v8 & 8) == 0) {
        goto LABEL_14;
      }
      goto LABEL_21;
    }
LABEL_20:
    uint64_t result = sub_1610D00(*(void *)(v1 + 88));
    if ((v8 & 8) == 0)
    {
LABEL_14:
      if ((v8 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_22;
    }
LABEL_21:
    uint64_t result = sub_16111C8(*(void *)(v1 + 96));
    if ((v8 & 0x10) == 0)
    {
LABEL_15:
      if ((v8 & 0x20) == 0) {
        goto LABEL_16;
      }
      goto LABEL_23;
    }
LABEL_22:
    uint64_t result = sub_1616078(*(void *)(v1 + 104));
    if ((v8 & 0x20) == 0)
    {
LABEL_16:
      if ((v8 & 0x40) == 0)
      {
LABEL_26:
        if ((v8 & 0x80) != 0) {
          uint64_t result = sub_1613B38(*(void *)(v1 + 128));
        }
        goto LABEL_28;
      }
LABEL_24:
      uint64_t v9 = *(void *)(v1 + 120);
      char v10 = *(unsigned char *)(v9 + 8);
      uint64_t result = v9 + 8;
      *(_WORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v10) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
      goto LABEL_26;
    }
LABEL_23:
    uint64_t result = sub_1611D1C(*(void *)(v1 + 112));
    if ((v8 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_24;
  }
LABEL_28:
  if ((v8 & 0xFF00) == 0) {
    goto LABEL_47;
  }
  if ((v8 & 0x100) != 0)
  {
    uint64_t result = sub_1614054(*(void *)(v1 + 136));
    if ((v8 & 0x200) == 0)
    {
LABEL_31:
      if ((v8 & 0x400) == 0) {
        goto LABEL_32;
      }
      goto LABEL_40;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_31;
  }
  uint64_t result = sub_1614570(*(void *)(v1 + 144));
  if ((v8 & 0x400) == 0)
  {
LABEL_32:
    if ((v8 & 0x800) == 0) {
      goto LABEL_33;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = sub_1614AA4(*(void *)(v1 + 152));
  if ((v8 & 0x800) == 0)
  {
LABEL_33:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = sub_1614FC4(*(void *)(v1 + 160));
  if ((v8 & 0x1000) == 0)
  {
LABEL_34:
    if ((v8 & 0x2000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = sub_1615394(*(void *)(v1 + 168));
  if ((v8 & 0x2000) == 0)
  {
LABEL_35:
    if ((v8 & 0x4000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = sub_1611DB4(*(void *)(v1 + 176));
  if ((v8 & 0x4000) == 0)
  {
LABEL_36:
    if ((v8 & 0x8000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = sub_15C5484(*(void *)(v1 + 184));
  if ((v8 & 0x8000) == 0) {
    goto LABEL_47;
  }
LABEL_45:
  uint64_t v11 = *(void *)(v1 + 192);
  char v12 = *(unsigned char *)(v11 + 8);
  uint64_t result = v11 + 8;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  if (v12) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_47:
  if ((v8 & 0x70000) == 0) {
    goto LABEL_52;
  }
  if ((v8 & 0x10000) != 0)
  {
    uint64_t result = sub_16157F4(*(void *)(v1 + 200));
    if ((v8 & 0x20000) == 0)
    {
LABEL_50:
      if ((v8 & 0x40000) == 0) {
        goto LABEL_52;
      }
      goto LABEL_51;
    }
  }
  else if ((v8 & 0x20000) == 0)
  {
    goto LABEL_50;
  }
  uint64_t result = sub_1616748(*(void *)(v1 + 208));
  if ((v8 & 0x40000) != 0) {
LABEL_51:
  }
    uint64_t result = sub_161723C(*(void *)(v1 + 216));
LABEL_52:
  char v14 = *(unsigned char *)(v1 + 8);
  uint64_t v13 = v1 + 8;
  *(_DWORD *)(v13 + 216) = 0;
  *(_DWORD *)(v13 + 8) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

char *sub_1617E98(uint64_t a1, char *a2, int32x2_t *a3)
{
  v72 = a2;
  if (sub_11947B8((uint64_t)a3, &v72, a3[11].i32[1])) {
    return v72;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v72 + 1;
    unsigned int v8 = *v72;
    if (*v72 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v72, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v72 + 2;
      }
    }
    v72 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_154;
        }
        uint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          v72 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v72) {
            return 0;
          }
          unint64_t v12 = v70;
        }
        else
        {
          uint64_t v11 = v7 + 2;
LABEL_13:
          v72 = v11;
        }
        if (v12 > 0x15 || v12 == 8)
        {
          if (*v6) {
            v71 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v71 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v71);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x80000u;
          *(_DWORD *)(a1 + 224) = v12;
        }
        goto LABEL_162;
      case 2u:
        if (v8 != 18) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void **)(a1 + 72);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_161C6F4((uint64_t)v20);
          *(void *)(a1 + 72) = v19;
          uint64_t v7 = v72;
        }
        uint64_t v18 = sub_16187F4(a3, (uint64_t)v19, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 3u:
        if (v8 != 26) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 80);
        if (!v21)
        {
          int v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v22 = (void *)*v22;
          }
          uint64_t v21 = sub_161C790((uint64_t)v22);
          *(void *)(a1 + 80) = v21;
          uint64_t v7 = v72;
        }
        uint64_t v18 = sub_1618884(a3, v21, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 4u:
        if (v8 != 34) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        unint64_t v23 = *(void **)(a1 + 88);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v24 = (void *)*v24;
          }
          unint64_t v23 = sub_161C834((uint64_t)v24);
          *(void *)(a1 + 88) = v23;
          uint64_t v7 = v72;
        }
        uint64_t v18 = (char *)sub_161746C(a3, (uint64_t)v23, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 5u:
        if (v8 != 42) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v25 = *(void *)(a1 + 96);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_161C8B8((uint64_t)v26);
          *(void *)(a1 + 96) = v25;
          uint64_t v7 = v72;
        }
        uint64_t v18 = (char *)sub_16174FC(a3, v25, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 6u:
        if (v8 != 50) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        BOOL v27 = *(void **)(a1 + 104);
        if (!v27)
        {
          uint64_t v28 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v28 = (void *)*v28;
          }
          BOOL v27 = sub_161CF20((uint64_t)v28);
          *(void *)(a1 + 104) = v27;
          uint64_t v7 = v72;
        }
        uint64_t v18 = sub_1618914(a3, (uint64_t)v27, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 7u:
        if (v8 != 58) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v29 = *(void *)(a1 + 112);
        if (!v29)
        {
          int v30 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v30 = (void *)*v30;
          }
          sub_161C968((uint64_t)v30);
          uint64_t v29 = v31;
          *(void *)(a1 + 112) = v31;
          uint64_t v7 = v72;
        }
        uint64_t v18 = sub_16189A4(a3, v29, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 8u:
        if (v8 != 66) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v32 = *(void *)(a1 + 120);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v33 = (void *)*v33;
          }
          uint64_t v32 = sub_161CB40((uint64_t)v33);
          *(void *)(a1 + 120) = v32;
          uint64_t v7 = v72;
        }
        uint64_t v18 = sub_1618A34(a3, v32, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 9u:
        goto LABEL_154;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        int v34 = *(void **)(a1 + 128);
        if (!v34)
        {
          uint64_t v35 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v35 = (void *)*v35;
          }
          int v34 = sub_161CBBC((uint64_t)v35);
          *(void *)(a1 + 128) = v34;
          uint64_t v7 = v72;
        }
        uint64_t v18 = sub_1618AC4(a3, (uint64_t)v34, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        unint64_t v36 = *(void **)(a1 + 136);
        if (!v36)
        {
          int v37 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v37 = (void *)*v37;
          }
          unint64_t v36 = sub_161CC38((uint64_t)v37);
          *(void *)(a1 + 136) = v36;
          uint64_t v7 = v72;
        }
        uint64_t v18 = sub_1618B54(a3, (uint64_t)v36, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v38 = *(void **)(a1 + 144);
        if (!v38)
        {
          uint64_t v39 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v39 = (void *)*v39;
          }
          uint64_t v38 = sub_161CCB4((uint64_t)v39);
          *(void *)(a1 + 144) = v38;
          uint64_t v7 = v72;
        }
        uint64_t v18 = sub_1618BE4(a3, (uint64_t)v38, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        v40 = *(void **)(a1 + 152);
        if (!v40)
        {
          BOOL v41 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v41 = (void *)*v41;
          }
          v40 = sub_161CD2C((uint64_t)v41);
          *(void *)(a1 + 152) = v40;
          uint64_t v7 = v72;
        }
        uint64_t v18 = sub_1618C74(a3, (uint64_t)v40, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        long long v42 = *(void **)(a1 + 160);
        if (!v42)
        {
          unint64_t v43 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v43 = (void *)*v43;
          }
          long long v42 = sub_161CDA4((uint64_t)v43);
          *(void *)(a1 + 160) = v42;
          uint64_t v7 = v72;
        }
        uint64_t v18 = sub_1618D04(a3, (uint64_t)v42, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        unint64_t v44 = *(void **)(a1 + 168);
        if (!v44)
        {
          unint64_t v45 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v45 = (void *)*v45;
          }
          unint64_t v44 = sub_161CE20((uint64_t)v45);
          *(void *)(a1 + 168) = v44;
          uint64_t v7 = v72;
        }
        uint64_t v18 = sub_1618D94(a3, (uint64_t)v44, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 0x10u:
        if (v8 != 130) {
          goto LABEL_154;
        }
        unint64_t v46 = v7 - 2;
        while (1)
        {
          unint64_t v47 = (unsigned __int8 *)(v46 + 2);
          v72 = v46 + 2;
          unint64_t v48 = *(_DWORD **)(a1 + 40);
          if (v48 && (uint64_t v49 = *(int *)(a1 + 32), (int)v49 < *v48))
          {
            *(_DWORD *)(a1 + 32) = v49 + 1;
            uint64_t v50 = *(void *)&v48[2 * v49 + 2];
          }
          else
          {
            uint64_t v51 = sub_15C6224(*(void *)(a1 + 24));
            uint64_t v50 = sub_188CDC8(a1 + 24, v51);
            unint64_t v47 = (unsigned __int8 *)v72;
          }
          unint64_t v46 = (char *)sub_12DE760(a3, v50, v47);
          v72 = v46;
          if (!v46) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v46 || *(_WORD *)v46 != 386) {
            goto LABEL_162;
          }
        }
      case 0x11u:
        if (v8 != 138) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        int v52 = *(void **)(a1 + 176);
        if (!v52)
        {
          v53 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v53 = (void *)*v53;
          }
          int v52 = sub_161C9E8((uint64_t)v53);
          *(void *)(a1 + 176) = v52;
          uint64_t v7 = v72;
        }
        uint64_t v18 = (char *)sub_16120DC(a3, (uint64_t)v52, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 0x12u:
        if (v8 != 146) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000u;
        uint64_t v54 = *(void *)(a1 + 184);
        if (!v54)
        {
          v55 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v55 = (void *)*v55;
          }
          uint64_t v54 = sub_15C63E0((uint64_t)v55);
          *(void *)(a1 + 184) = v54;
          uint64_t v7 = v72;
        }
        uint64_t v18 = (char *)sub_12DE880(a3, v54, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 0x13u:
        if (v8 != 154) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 0x8000u;
        uint64_t v56 = *(void *)(a1 + 192);
        if (!v56)
        {
          v57 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v57 = (void *)*v57;
          }
          uint64_t v56 = sub_161CA8C((uint64_t)v57);
          *(void *)(a1 + 192) = v56;
          uint64_t v7 = v72;
        }
        uint64_t v18 = sub_1618E24(a3, v56, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 0x14u:
        if (v8 != 162) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000u;
        uint64_t v58 = *(void *)(a1 + 200);
        if (!v58)
        {
          v59 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v59 = (void *)*v59;
          }
          uint64_t v58 = sub_161CE98((uint64_t)v59);
          *(void *)(a1 + 200) = v58;
          uint64_t v7 = v72;
        }
        uint64_t v18 = (char *)sub_1618EB4(a3, v58, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 0x15u:
        if (v8 != 170) {
          goto LABEL_154;
        }
        *(_DWORD *)(a1 + 16) |= 0x20000u;
        v60 = *(void **)(a1 + 208);
        if (!v60)
        {
          v61 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v61 = (void *)*v61;
          }
          v60 = sub_161CF9C((uint64_t)v61);
          *(void *)(a1 + 208) = v60;
          uint64_t v7 = v72;
        }
        uint64_t v18 = (char *)sub_1618F44(a3, (uint64_t)v60, (unsigned __int8 *)v7);
        goto LABEL_161;
      case 0x16u:
        if (v8 != 178) {
          goto LABEL_154;
        }
        v62 = v7 - 2;
        while (1)
        {
          v63 = (unsigned __int8 *)(v62 + 2);
          v72 = v62 + 2;
          v64 = *(_DWORD **)(a1 + 64);
          if (v64 && (uint64_t v65 = *(int *)(a1 + 56), (int)v65 < *v64))
          {
            *(_DWORD *)(a1 + 56) = v65 + 1;
            uint64_t v66 = *(void *)&v64[2 * v65 + 2];
          }
          else
          {
            v67 = sub_161D024(*(void *)(a1 + 48));
            uint64_t v66 = sub_188CDC8(a1 + 48, (uint64_t)v67);
            v63 = (unsigned __int8 *)v72;
          }
          v62 = (char *)sub_1618FD4(a3, v66, v63);
          v72 = v62;
          if (!v62) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v62 || *(_WORD *)v62 != 434) {
            goto LABEL_162;
          }
        }
      default:
        if (v8 >> 3 == 1000 && v8 == 66)
        {
          *(_DWORD *)(a1 + 16) |= 0x40000u;
          uint64_t v16 = *(void **)(a1 + 216);
          if (!v16)
          {
            uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              uint64_t v17 = (void *)*v17;
            }
            uint64_t v16 = sub_161D0A8((uint64_t)v17);
            *(void *)(a1 + 216) = v16;
            uint64_t v7 = v72;
          }
          uint64_t v18 = sub_1619064(a3, (uint64_t)v16, (unsigned __int8 *)v7);
          goto LABEL_161;
        }
LABEL_154:
        if (v8) {
          BOOL v68 = (v8 & 7) == 4;
        }
        else {
          BOOL v68 = 1;
        }
        if (!v68)
        {
          if (*v6)
          {
            v69 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v69 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v72;
          }
          uint64_t v18 = (char *)sub_1885AC0(v8, v69, v7, a3);
LABEL_161:
          v72 = v18;
          if (!v18) {
            return 0;
          }
LABEL_162:
          if (sub_11947B8((uint64_t)a3, &v72, a3[11].i32[1])) {
            return v72;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v72;
    }
  }
}

char *sub_16187F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_160FDE8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1618884(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16105B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1618914(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16160E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16189A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1611E64(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1618A34(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16136F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1618AC4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1613B5C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1618B54(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1614078(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1618BE4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1614594(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1618C74(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1614AC8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1618D04(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1614FE8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1618D94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16153B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1618E24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1612F2C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1618EB4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1615880(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1618F44(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1616800(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1618FD4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1616DAC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1619064(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16172AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_16190F4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x80000) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 224);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 72);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_1610080(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_34;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 80);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 64);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_16107FC(v13, v15, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_40;
  }
LABEL_34:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 88);
  unsigned char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_1610F24(v16, v18, a3);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 96);
  unsigned char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 88);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  uint64_t v4 = sub_16115E4(v19, v21, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_52;
  }
LABEL_46:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 104);
  unsigned char *v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  uint64_t v4 = sub_161629C(v22, (unint64_t)v24, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_14:
    if ((v6 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_58;
  }
LABEL_52:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 112);
  unsigned char *v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    BOOL v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    BOOL v27 = v4 + 2;
  }
  uint64_t v4 = sub_161216C(v25, (unint64_t)v27, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_15:
    if ((v6 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_64;
  }
LABEL_58:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 120);
  unsigned char *v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    int v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    int v30 = v4 + 2;
  }
  uint64_t v4 = sub_1613900(v28, (unint64_t)v30, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_16:
    if ((v6 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_70;
  }
LABEL_64:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 128);
  unsigned char *v4 = 82;
  unsigned int v32 = *(_DWORD *)(v31 + 20);
  v4[1] = v32;
  if (v32 > 0x7F) {
    uint64_t v33 = sub_188A9CC(v32, v4 + 1);
  }
  else {
    uint64_t v33 = v4 + 2;
  }
  uint64_t v4 = sub_1613D4C(v31, (unint64_t)v33, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_17:
    if ((v6 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_76;
  }
LABEL_70:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v34 = *(void *)(a1 + 136);
  unsigned char *v4 = 90;
  unsigned int v35 = *(_DWORD *)(v34 + 20);
  v4[1] = v35;
  if (v35 > 0x7F) {
    unint64_t v36 = sub_188A9CC(v35, v4 + 1);
  }
  else {
    unint64_t v36 = v4 + 2;
  }
  uint64_t v4 = sub_1614268(v34, (unint64_t)v36, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_18:
    if ((v6 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_82;
  }
LABEL_76:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v37 = *(void *)(a1 + 144);
  unsigned char *v4 = 98;
  unsigned int v38 = *(_DWORD *)(v37 + 20);
  v4[1] = v38;
  if (v38 > 0x7F) {
    uint64_t v39 = sub_188A9CC(v38, v4 + 1);
  }
  else {
    uint64_t v39 = v4 + 2;
  }
  uint64_t v4 = sub_161477C(v37, (unint64_t)v39, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_19:
    if ((v6 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_88;
  }
LABEL_82:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v40 = *(void *)(a1 + 152);
  unsigned char *v4 = 106;
  unsigned int v41 = *(_DWORD *)(v40 + 20);
  v4[1] = v41;
  if (v41 > 0x7F) {
    long long v42 = sub_188A9CC(v41, v4 + 1);
  }
  else {
    long long v42 = v4 + 2;
  }
  uint64_t v4 = sub_1614CB8(v40, (unint64_t)v42, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_20:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_94;
  }
LABEL_88:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v43 = *(void *)(a1 + 160);
  unsigned char *v4 = 114;
  unsigned int v44 = *(_DWORD *)(v43 + 20);
  v4[1] = v44;
  if (v44 > 0x7F) {
    unint64_t v45 = sub_188A9CC(v44, v4 + 1);
  }
  else {
    unint64_t v45 = v4 + 2;
  }
  uint64_t v4 = sub_1615158(v43, (unint64_t)v45, a3);
  if ((v6 & 0x1000) != 0)
  {
LABEL_94:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v46 = *(void *)(a1 + 168);
    unsigned char *v4 = 122;
    unsigned int v47 = *(_DWORD *)(v46 + 20);
    v4[1] = v47;
    if (v47 > 0x7F) {
      unint64_t v48 = sub_188A9CC(v47, v4 + 1);
    }
    else {
      unint64_t v48 = v4 + 2;
    }
    uint64_t v4 = sub_1615528(v46, (unint64_t)v48, a3);
  }
LABEL_100:
  int v49 = *(_DWORD *)(a1 + 32);
  if (v49)
  {
    for (int i = 0; i != v49; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v51 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 386;
      unsigned int v52 = *(_DWORD *)(v51 + 20);
      v4[2] = v52;
      if (v52 > 0x7F) {
        v53 = sub_188A9CC(v52, v4 + 2);
      }
      else {
        v53 = v4 + 3;
      }
      uint64_t v4 = sub_15C396C(v51, (unint64_t)v53, a3);
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v54 = *(void *)(a1 + 176);
    *(_WORD *)uint64_t v4 = 394;
    unsigned int v55 = *(_DWORD *)(v54 + 20);
    v4[2] = v55;
    if (v55 > 0x7F) {
      uint64_t v56 = sub_188A9CC(v55, v4 + 2);
    }
    else {
      uint64_t v56 = v4 + 3;
    }
    uint64_t v4 = sub_1612BDC(v54, v56, a3);
    if ((v6 & 0x4000) == 0)
    {
LABEL_110:
      if ((v6 & 0x8000) == 0) {
        goto LABEL_111;
      }
      goto LABEL_126;
    }
  }
  else if ((v6 & 0x4000) == 0)
  {
    goto LABEL_110;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v57 = *(void *)(a1 + 184);
  *(_WORD *)uint64_t v4 = 402;
  unsigned int v58 = *(_DWORD *)(v57 + 96);
  v4[2] = v58;
  if (v58 > 0x7F) {
    v59 = sub_188A9CC(v58, v4 + 2);
  }
  else {
    v59 = v4 + 3;
  }
  uint64_t v4 = sub_15C5A5C(v57, v59, a3);
  if ((v6 & 0x8000) == 0)
  {
LABEL_111:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_112;
    }
    goto LABEL_132;
  }
LABEL_126:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v60 = *(void *)(a1 + 192);
  *(_WORD *)uint64_t v4 = 410;
  unsigned int v61 = *(_DWORD *)(v60 + 64);
  v4[2] = v61;
  if (v61 > 0x7F) {
    v62 = sub_188A9CC(v61, v4 + 2);
  }
  else {
    v62 = v4 + 3;
  }
  uint64_t v4 = sub_16132EC(v60, v62, a3);
  if ((v6 & 0x10000) == 0)
  {
LABEL_112:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_144;
    }
    goto LABEL_138;
  }
LABEL_132:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v63 = *(void *)(a1 + 200);
  *(_WORD *)uint64_t v4 = 418;
  unsigned int v64 = *(_DWORD *)(v63 + 20);
  v4[2] = v64;
  if (v64 > 0x7F) {
    uint64_t v65 = sub_188A9CC(v64, v4 + 2);
  }
  else {
    uint64_t v65 = v4 + 3;
  }
  uint64_t v4 = sub_1615B80(v63, (unint64_t)v65, a3);
  if ((v6 & 0x20000) != 0)
  {
LABEL_138:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v66 = *(void *)(a1 + 208);
    *(_WORD *)uint64_t v4 = 426;
    unsigned int v67 = *(_DWORD *)(v66 + 20);
    v4[2] = v67;
    if (v67 > 0x7F) {
      BOOL v68 = sub_188A9CC(v67, v4 + 2);
    }
    else {
      BOOL v68 = v4 + 3;
    }
    uint64_t v4 = sub_16169F0(v66, v68, a3);
  }
LABEL_144:
  int v69 = *(_DWORD *)(a1 + 56);
  if (v69)
  {
    for (int j = 0; j != v69; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v71 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 434;
      unsigned int v72 = *(_DWORD *)(v71 + 20);
      v4[2] = v72;
      if (v72 > 0x7F) {
        v73 = sub_188A9CC(v72, v4 + 2);
      }
      else {
        v73 = v4 + 3;
      }
      uint64_t v4 = sub_1616F54(v71, v73, a3);
    }
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v74 = *(void *)(a1 + 216);
    *(_WORD *)uint64_t v4 = 16066;
    unsigned int v75 = *(_DWORD *)(v74 + 20);
    v4[2] = v75;
    if (v75 > 0x7F) {
      v76 = sub_188A9CC(v75, v4 + 2);
    }
    else {
      v76 = v4 + 3;
    }
    uint64_t v4 = sub_161758C(v74, (unint64_t)v76, a3);
  }
  uint64_t v77 = *(void *)(a1 + 8);
  if ((v77 & 1) == 0) {
    return v4;
  }
  unint64_t v79 = v77 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v79 + 31) < 0)
  {
    v80 = *(void **)(v79 + 8);
    uint64_t v81 = *(void *)(v79 + 16);
  }
  else
  {
    v80 = (void *)(v79 + 8);
    LODWORD(v81) = *(unsigned __int8 *)(v79 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v81)
  {
    uint64_t v82 = (int)v81;
    memcpy(v4, v80, (int)v81);
    v4 += v82;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v80, v81, v4);
}

uint64_t sub_1619AF0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = 2 * v2;
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    uint64_t v5 = (uint64_t *)(v4 + 8);
  }
  else {
    uint64_t v5 = 0;
  }
  if (v2)
  {
    uint64_t v6 = 8 * v2;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v8 = sub_15C3C1C(v7);
      v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      v6 -= 8;
    }
    while (v6);
  }
  uint64_t v9 = *(int *)(a1 + 56);
  uint64_t v10 = v3 + 2 * v9;
  uint64_t v11 = *(void *)(a1 + 64);
  if (v11) {
    unint64_t v12 = (uint64_t *)(v11 + 8);
  }
  else {
    unint64_t v12 = 0;
  }
  if (v9)
  {
    uint64_t v13 = 8 * v9;
    do
    {
      uint64_t v14 = *v12++;
      uint64_t v15 = sub_1617040(v14);
      v10 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      v13 -= 8;
    }
    while (v13);
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v16) {
    goto LABEL_23;
  }
  if (v16)
  {
    uint64_t v24 = sub_161022C(*(void *)(a1 + 72));
    v10 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v16 & 2) == 0)
    {
LABEL_16:
      if ((v16 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_46;
    }
  }
  else if ((v16 & 2) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v25 = sub_16109C4(*(void *)(a1 + 80));
  v10 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 4) == 0)
  {
LABEL_17:
    if ((v16 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v26 = sub_1611010(*(void *)(a1 + 88));
  v10 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 8) == 0)
  {
LABEL_18:
    if ((v16 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v27 = sub_161189C(*(void *)(a1 + 96));
  v10 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 0x10) == 0)
  {
LABEL_19:
    if ((v16 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_49:
    uint64_t v29 = sub_16123C4(*(void *)(a1 + 112));
    v10 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v16 & 0x40) == 0)
    {
LABEL_21:
      if ((v16 & 0x80) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    goto LABEL_50;
  }
LABEL_48:
  uint64_t v28 = sub_161641C(*(void *)(a1 + 104));
  v10 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 0x20) != 0) {
    goto LABEL_49;
  }
LABEL_20:
  if ((v16 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_50:
  uint64_t v30 = sub_1613A1C(*(void *)(a1 + 120));
  v10 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 0x80) != 0)
  {
LABEL_22:
    unint64_t v17 = sub_1613EF0(*(void *)(a1 + 128));
    v10 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_23:
  if ((v16 & 0xFF00) == 0) {
    goto LABEL_33;
  }
  if ((v16 & 0x100) != 0)
  {
    unint64_t v31 = sub_161440C(*(void *)(a1 + 136));
    v10 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v16 & 0x200) == 0)
    {
LABEL_26:
      if ((v16 & 0x400) == 0) {
        goto LABEL_27;
      }
      goto LABEL_54;
    }
  }
  else if ((v16 & 0x200) == 0)
  {
    goto LABEL_26;
  }
  uint64_t v32 = sub_1614920(*(void *)(a1 + 144));
  v10 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 0x400) == 0)
  {
LABEL_27:
    if ((v16 & 0x800) == 0) {
      goto LABEL_28;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v33 = sub_1614E5C(*(void *)(a1 + 152));
  v10 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 0x800) == 0)
  {
LABEL_28:
    if ((v16 & 0x1000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t v34 = sub_1615274(*(void *)(a1 + 160));
  v10 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 0x1000) == 0)
  {
LABEL_29:
    if ((v16 & 0x2000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t v35 = sub_1615644(*(void *)(a1 + 168));
  v10 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v16 & 0x2000) == 0)
  {
LABEL_30:
    if ((v16 & 0x4000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t v36 = sub_1612D44(*(void *)(a1 + 176));
  v10 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v16 & 0x4000) == 0)
  {
LABEL_31:
    if ((v16 & 0x8000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
LABEL_58:
  uint64_t v37 = sub_15C5DA4(*(void *)(a1 + 184));
  v10 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v16 & 0x8000) != 0)
  {
LABEL_32:
    uint64_t v18 = sub_1613574(*(void *)(a1 + 192));
    v10 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_33:
  if ((v16 & 0xF0000) == 0) {
    goto LABEL_42;
  }
  if ((v16 & 0x10000) != 0)
  {
    uint64_t v38 = sub_1615DE0(*(void *)(a1 + 200));
    v10 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v16 & 0x20000) == 0)
    {
LABEL_36:
      if ((v16 & 0x40000) == 0) {
        goto LABEL_37;
      }
LABEL_62:
      uint64_t v40 = sub_161770C(*(void *)(a1 + 216));
      v10 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if ((v16 & 0x80000) == 0) {
        goto LABEL_42;
      }
      goto LABEL_38;
    }
  }
  else if ((v16 & 0x20000) == 0)
  {
    goto LABEL_36;
  }
  uint64_t v39 = sub_1616B08(*(void *)(a1 + 208));
  v10 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v16 & 0x40000) != 0) {
    goto LABEL_62;
  }
LABEL_37:
  if ((v16 & 0x80000) == 0) {
    goto LABEL_42;
  }
LABEL_38:
  int v19 = *(_DWORD *)(a1 + 224);
  uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v19 >= 0) {
    uint64_t v21 = v20;
  }
  else {
    uint64_t v21 = 11;
  }
  v10 += v21;
LABEL_42:
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v41 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v41 + 31) < 0) {
      uint64_t v42 = *(void *)(v41 + 16);
    }
    else {
      uint64_t v42 = *(unsigned __int8 *)(v41 + 31);
    }
    v10 += v42;
  }
  *(_DWORD *)(a1 + 20) = v10;
  return v10;
}

void sub_161A01C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1301C3C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1639C24((std::string *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v14) {
    goto LABEL_81;
  }
  if (v14)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(std::string **)(a1 + 72);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      unint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        unint64_t v17 = (void *)*v17;
      }
      uint64_t v15 = (std::string *)sub_161C6F4((uint64_t)v17);
      *(void *)(a1 + 72) = v15;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v18 = &off_2541290;
    }
    sub_1610310(v15, (uint64_t)v18);
    if ((v14 & 2) == 0)
    {
LABEL_10:
      if ((v14 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_33;
    }
  }
  else if ((v14 & 2) == 0)
  {
    goto LABEL_10;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  int v19 = *(std::string **)(a1 + 80);
  if (!v19)
  {
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (void *)*v21;
    }
    int v19 = (std::string *)sub_161C790((uint64_t)v21);
    *(void *)(a1 + 80) = v19;
  }
  if (*(void *)(a2 + 80)) {
    uint64_t v22 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    uint64_t v22 = &off_25412C8;
  }
  sub_1610AC4(v19, (uint64_t)v22);
  if ((v14 & 4) == 0)
  {
LABEL_11:
    if ((v14 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_33:
  *(_DWORD *)(a1 + 16) |= 4u;
  unsigned int v23 = *(std::string **)(a1 + 88);
  if (!v23)
  {
    uint64_t v24 = *(void *)(a1 + 8);
    uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      uint64_t v25 = (void *)*v25;
    }
    unsigned int v23 = (std::string *)sub_161C834((uint64_t)v25);
    *(void *)(a1 + 88) = v23;
  }
  if (*(void *)(a2 + 88)) {
    uint64_t v26 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    uint64_t v26 = &off_2541310;
  }
  sub_11EC100(v23, (uint64_t)v26);
  if ((v14 & 8) == 0)
  {
LABEL_12:
    if ((v14 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_49;
  }
LABEL_41:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v27 = *(std::string **)(a1 + 96);
  if (!v27)
  {
    uint64_t v28 = *(void *)(a1 + 8);
    uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      uint64_t v29 = (void *)*v29;
    }
    uint64_t v27 = (std::string *)sub_161C8B8((uint64_t)v29);
    *(void *)(a1 + 96) = v27;
  }
  if (*(void *)(a2 + 96)) {
    uint64_t v30 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    uint64_t v30 = &off_2541338;
  }
  sub_16119E4(v27, (uint64_t)v30);
  if ((v14 & 0x10) == 0)
  {
LABEL_13:
    if ((v14 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_57:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v35 = *(void *)(a1 + 112);
    if (!v35)
    {
      uint64_t v36 = *(void *)(a1 + 8);
      uint64_t v37 = (void *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
      if (v36) {
        uint64_t v37 = (void *)*v37;
      }
      sub_161C968((uint64_t)v37);
      *(void *)(a1 + 112) = v35;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v38 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v38 = &off_2541398;
    }
    sub_1612504(v35, (uint64_t)v38);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0) {
        goto LABEL_81;
      }
      goto LABEL_73;
    }
    goto LABEL_65;
  }
LABEL_49:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  unint64_t v31 = *(std::string **)(a1 + 104);
  if (!v31)
  {
    uint64_t v32 = *(void *)(a1 + 8);
    uint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
    if (v32) {
      uint64_t v33 = (void *)*v33;
    }
    unint64_t v31 = (std::string *)sub_161CF20((uint64_t)v33);
    *(void *)(a1 + 104) = v31;
  }
  if (*(void *)(a2 + 104)) {
    uint64_t v34 = *(uint64_t (****)())(a2 + 104);
  }
  else {
    uint64_t v34 = &off_2541580;
  }
  sub_16164F4(v31, (uint64_t)v34);
  if ((v14 & 0x20) != 0) {
    goto LABEL_57;
  }
LABEL_14:
  if ((v14 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_65:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v39 = *(std::string **)(a1 + 120);
  if (!v39)
  {
    uint64_t v40 = *(void *)(a1 + 8);
    unint64_t v41 = (void *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
    if (v40) {
      unint64_t v41 = (void *)*v41;
    }
    uint64_t v39 = (std::string *)sub_161CB40((uint64_t)v41);
    *(void *)(a1 + 120) = v39;
  }
  if (*(void *)(a2 + 120)) {
    uint64_t v42 = *(uint64_t (****)())(a2 + 120);
  }
  else {
    uint64_t v42 = &off_2541450;
  }
  sub_11B0678(v39, (uint64_t)v42);
  if ((v14 & 0x80) != 0)
  {
LABEL_73:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v43 = *(std::string **)(a1 + 128);
    if (!v43)
    {
      uint64_t v44 = *(void *)(a1 + 8);
      unint64_t v45 = (void *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
      if (v44) {
        unint64_t v45 = (void *)*v45;
      }
      uint64_t v43 = (std::string *)sub_161CBBC((uint64_t)v45);
      *(void *)(a1 + 128) = v43;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v46 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v46 = &off_2541470;
    }
    sub_1113E40(v43, (uint64_t)v46);
  }
LABEL_81:
  if ((v14 & 0xFF00) == 0) {
    goto LABEL_155;
  }
  if ((v14 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    unsigned int v47 = *(std::string **)(a1 + 136);
    if (!v47)
    {
      uint64_t v48 = *(void *)(a1 + 8);
      int v49 = (void *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
      if (v48) {
        int v49 = (void *)*v49;
      }
      unsigned int v47 = (std::string *)sub_161CC38((uint64_t)v49);
      *(void *)(a1 + 136) = v47;
    }
    if (*(void *)(a2 + 136)) {
      uint64_t v50 = *(uint64_t (****)())(a2 + 136);
    }
    else {
      uint64_t v50 = &off_2541498;
    }
    sub_1113E40(v47, (uint64_t)v50);
    if ((v14 & 0x200) == 0)
    {
LABEL_84:
      if ((v14 & 0x400) == 0) {
        goto LABEL_85;
      }
      goto LABEL_107;
    }
  }
  else if ((v14 & 0x200) == 0)
  {
    goto LABEL_84;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v51 = *(std::string **)(a1 + 144);
  if (!v51)
  {
    uint64_t v52 = *(void *)(a1 + 8);
    v53 = (void *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
    if (v52) {
      v53 = (void *)*v53;
    }
    uint64_t v51 = (std::string *)sub_161CCB4((uint64_t)v53);
    *(void *)(a1 + 144) = v51;
  }
  if (*(void *)(a2 + 144)) {
    uint64_t v54 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    uint64_t v54 = &off_25414C0;
  }
  sub_117EF04(v51, (uint64_t)v54);
  if ((v14 & 0x400) == 0)
  {
LABEL_85:
    if ((v14 & 0x800) == 0) {
      goto LABEL_86;
    }
    goto LABEL_115;
  }
LABEL_107:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  unsigned int v55 = *(std::string **)(a1 + 152);
  if (!v55)
  {
    uint64_t v56 = *(void *)(a1 + 8);
    uint64_t v57 = (void *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (v56) {
      uint64_t v57 = (void *)*v57;
    }
    unsigned int v55 = (std::string *)sub_161CD2C((uint64_t)v57);
    *(void *)(a1 + 152) = v55;
  }
  if (*(void *)(a2 + 152)) {
    unsigned int v58 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    unsigned int v58 = &off_25414E0;
  }
  sub_117EF04(v55, (uint64_t)v58);
  if ((v14 & 0x800) == 0)
  {
LABEL_86:
    if ((v14 & 0x1000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_123;
  }
LABEL_115:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  v59 = *(std::string **)(a1 + 160);
  if (!v59)
  {
    uint64_t v60 = *(void *)(a1 + 8);
    unsigned int v61 = (void *)(v60 & 0xFFFFFFFFFFFFFFFCLL);
    if (v60) {
      unsigned int v61 = (void *)*v61;
    }
    v59 = (std::string *)sub_161CDA4((uint64_t)v61);
    *(void *)(a1 + 160) = v59;
  }
  if (*(void *)(a2 + 160)) {
    v62 = *(uint64_t (****)())(a2 + 160);
  }
  else {
    v62 = &off_2541500;
  }
  sub_123BFCC(v59, (uint64_t)v62);
  if ((v14 & 0x1000) == 0)
  {
LABEL_87:
    if ((v14 & 0x2000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_131;
  }
LABEL_123:
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  uint64_t v63 = *(std::string **)(a1 + 168);
  if (!v63)
  {
    uint64_t v64 = *(void *)(a1 + 8);
    uint64_t v65 = (void *)(v64 & 0xFFFFFFFFFFFFFFFCLL);
    if (v64) {
      uint64_t v65 = (void *)*v65;
    }
    uint64_t v63 = (std::string *)sub_161CE20((uint64_t)v65);
    *(void *)(a1 + 168) = v63;
  }
  if (*(void *)(a2 + 168)) {
    uint64_t v66 = *(uint64_t (****)())(a2 + 168);
  }
  else {
    uint64_t v66 = &off_2541528;
  }
  sub_16156A0(v63, (uint64_t)v66);
  if ((v14 & 0x2000) == 0)
  {
LABEL_88:
    if ((v14 & 0x4000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_139;
  }
LABEL_131:
  *(_DWORD *)(a1 + 16) |= 0x2000u;
  unsigned int v67 = *(std::string **)(a1 + 176);
  if (!v67)
  {
    uint64_t v68 = *(void *)(a1 + 8);
    int v69 = (void *)(v68 & 0xFFFFFFFFFFFFFFFCLL);
    if (v68) {
      int v69 = (void *)*v69;
    }
    unsigned int v67 = (std::string *)sub_161C9E8((uint64_t)v69);
    *(void *)(a1 + 176) = v67;
  }
  if (*(void *)(a2 + 176)) {
    unint64_t v70 = *(uint64_t (****)())(a2 + 176);
  }
  else {
    unint64_t v70 = &off_25413D0;
  }
  sub_1612690(v67, (uint64_t)v70);
  if ((v14 & 0x4000) == 0)
  {
LABEL_89:
    if ((v14 & 0x8000) == 0) {
      goto LABEL_155;
    }
    goto LABEL_147;
  }
LABEL_139:
  *(_DWORD *)(a1 + 16) |= 0x4000u;
  uint64_t v71 = *(std::string **)(a1 + 184);
  if (!v71)
  {
    uint64_t v72 = *(void *)(a1 + 8);
    v73 = (void *)(v72 & 0xFFFFFFFFFFFFFFFCLL);
    if (v72) {
      v73 = (void *)*v73;
    }
    uint64_t v71 = (std::string *)sub_15C63E0((uint64_t)v73);
    *(void *)(a1 + 184) = v71;
  }
  if (*(void *)(a2 + 184)) {
    uint64_t v74 = *(uint64_t (****)())(a2 + 184);
  }
  else {
    uint64_t v74 = &off_253F8F8;
  }
  sub_15C5F4C(v71, (uint64_t)v74);
  if ((v14 & 0x8000) != 0)
  {
LABEL_147:
    *(_DWORD *)(a1 + 16) |= 0x8000u;
    unsigned int v75 = *(std::string **)(a1 + 192);
    if (!v75)
    {
      uint64_t v76 = *(void *)(a1 + 8);
      uint64_t v77 = (void *)(v76 & 0xFFFFFFFFFFFFFFFCLL);
      if (v76) {
        uint64_t v77 = (void *)*v77;
      }
      unsigned int v75 = (std::string *)sub_161CA8C((uint64_t)v77);
      *(void *)(a1 + 192) = v75;
    }
    if (*(void *)(a2 + 192)) {
      v78 = *(uint64_t (****)())(a2 + 192);
    }
    else {
      v78 = &off_2541408;
    }
    sub_15E5C44(v75, (uint64_t)v78);
  }
LABEL_155:
  if ((v14 & 0xF0000) == 0) {
    goto LABEL_162;
  }
  if ((v14 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x10000u;
    v80 = *(std::string **)(a1 + 200);
    if (!v80)
    {
      uint64_t v81 = *(void *)(a1 + 8);
      uint64_t v82 = (void *)(v81 & 0xFFFFFFFFFFFFFFFCLL);
      if (v81) {
        uint64_t v82 = (void *)*v82;
      }
      v80 = (std::string *)sub_161CE98((uint64_t)v82);
      *(void *)(a1 + 200) = v80;
    }
    if (*(void *)(a2 + 200)) {
      v83 = *(uint64_t (****)())(a2 + 200);
    }
    else {
      v83 = &off_2541548;
    }
    sub_11EDBA4(v80, (uint64_t)v83);
    if ((v14 & 0x20000) == 0)
    {
LABEL_158:
      if ((v14 & 0x40000) == 0) {
        goto LABEL_159;
      }
LABEL_182:
      *(_DWORD *)(a1 + 16) |= 0x40000u;
      v88 = *(std::string **)(a1 + 216);
      if (!v88)
      {
        uint64_t v89 = *(void *)(a1 + 8);
        v90 = (void *)(v89 & 0xFFFFFFFFFFFFFFFCLL);
        if (v89) {
          v90 = (void *)*v90;
        }
        v88 = (std::string *)sub_161D0A8((uint64_t)v90);
        *(void *)(a1 + 216) = v88;
      }
      if (*(void *)(a2 + 216)) {
        v91 = *(uint64_t (****)())(a2 + 216);
      }
      else {
        v91 = &off_25415D8;
      }
      sub_16177E4(v88, (uint64_t)v91);
      if ((v14 & 0x80000) == 0) {
        goto LABEL_161;
      }
      goto LABEL_160;
    }
  }
  else if ((v14 & 0x20000) == 0)
  {
    goto LABEL_158;
  }
  *(_DWORD *)(a1 + 16) |= 0x20000u;
  v84 = *(std::string **)(a1 + 208);
  if (!v84)
  {
    uint64_t v85 = *(void *)(a1 + 8);
    v86 = (void *)(v85 & 0xFFFFFFFFFFFFFFFCLL);
    if (v85) {
      v86 = (void *)*v86;
    }
    v84 = (std::string *)sub_161CF9C((uint64_t)v86);
    *(void *)(a1 + 208) = v84;
  }
  if (*(void *)(a2 + 208)) {
    v87 = *(uint64_t (****)())(a2 + 208);
  }
  else {
    v87 = &off_25415A8;
  }
  sub_11D2930(v84, (uint64_t)v87);
  if ((v14 & 0x40000) != 0) {
    goto LABEL_182;
  }
LABEL_159:
  if ((v14 & 0x80000) != 0) {
LABEL_160:
  }
    *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
LABEL_161:
  *(_DWORD *)(a1 + 16) |= v14;
LABEL_162:
  uint64_t v79 = *(void *)(a2 + 8);
  if (v79)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v79 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_161A778(uint64_t a1)
{
  if (!sub_15E5358(a1 + 24)) {
    return 0;
  }
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x10) != 0 && !sub_16165F0(*(void *)(a1 + 104))) {
    return 0;
  }
  if ((v2 & 0x20) == 0) {
    goto LABEL_7;
  }
  if (!sub_1612798(*(void *)(a1 + 112))) {
    return 0;
  }
  int v2 = *(_DWORD *)(a1 + 16);
LABEL_7:
  if ((v2 & 0x2000) == 0) {
    return 1;
  }
  uint64_t v5 = *(void *)(a1 + 176);
  uint64_t v6 = *(unsigned int *)(v5 + 32);
  do
  {
    BOOL v3 = (int)v6 < 1;
    if ((int)v6 < 1) {
      break;
    }
    uint64_t v7 = v6 - 1;
    BOOL v8 = sub_12734C4(*(void *)(*(void *)(v5 + 40) + 8 * v6));
    uint64_t v6 = v7;
  }
  while (v8);
  return v3;
}

void *sub_161A818@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFieldValue");
}

uint64_t sub_161A828(uint64_t a1)
{
  BOOL v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_161A8C8(uint64_t a1)
{
  sub_161A828(a1);

  operator delete();
}

uint64_t sub_161A900(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_161A944(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)unint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    int v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      int v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    int v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)unint64_t v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = *(char **)v17;
    }
    int v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)unint64_t v17 = 0;
  return *(void *)v17;
}

char *sub_161AA9C(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_161AB68(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_161ABEC()
{
  return 1;
}

void *sub_161ABF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFormFieldAnnotations");
}

uint64_t sub_161AC04(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if ((uint64_t (***)())a1 != &off_2541708)
  {
    uint64_t v6 = *(void **)(a1 + 72);
    if (v6)
    {
      sub_1617900(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 80);
    if (v7)
    {
      sub_161A828(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_161AD28(uint64_t a1)
{
  sub_161AC04(a1);

  operator delete();
}

uint64_t sub_161AD60(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_16:
    unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v3 & 4) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v3 & 4) != 0) {
        goto LABEL_20;
      }
    }
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
  unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_16;
    }
  }
LABEL_4:
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_20:
  unint64_t v8 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v3 & 8) != 0) {
      goto LABEL_24;
    }
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  *(unsigned char *)unint64_t v8 = 0;
  *(unsigned char *)(v8 + 23) = 0;
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_24:
  uint64_t result = sub_1617C80(*(void *)(a1 + 72));
  if ((v3 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_161A900(*(void *)(a1 + 80));
LABEL_8:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 80) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_161AE80(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v39 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
    return *(void *)v39;
  }
  unint64_t v6 = (void *)(a1 + 8);
  unint64_t v7 = (uint64_t **)(a1 + 24);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v39 + 1);
    unsigned int v9 = **(unsigned char **)v39;
    if ((char)**(unsigned char **)v39 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v39, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v39 + 2);
      }
    }
    *(void *)uint64_t v39 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_54;
        }
        int v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)uint64_t v39 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v39) {
            return 0;
          }
          unint64_t v13 = v37;
        }
        else
        {
          int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v39 = v12;
        }
        if (sub_160EB40(v13))
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 88) = v13;
        }
        else
        {
          if (*v6) {
            uint64_t v38 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v38);
        }
        goto LABEL_62;
      case 2u:
        if (v9 != 18) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v19 = *(void *)(a1 + 72);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v20 = (void *)*v20;
          }
          sub_161D124((uint64_t)v20);
          uint64_t v19 = v21;
          *(void *)(a1 + 72) = v21;
          unint64_t v8 = *(unsigned __int8 **)v39;
        }
        uint64_t v18 = (uint64_t)sub_161B2D0(a3, v19, v8);
        goto LABEL_61;
      case 3u:
        if (v9 != 26) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 8);
        unsigned int v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          unsigned int v23 = (uint64_t *)*v23;
        }
        uint64_t v24 = (void *)(a1 + 48);
        goto LABEL_41;
      case 4u:
        if (v9 != 34) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v25 = *(void *)(a1 + 8);
        unsigned int v23 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          unsigned int v23 = (uint64_t *)*v23;
        }
        uint64_t v24 = (void *)(a1 + 56);
        goto LABEL_41;
      case 5u:
        if (v9 != 42) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v26 = *(void *)(a1 + 8);
        unsigned int v23 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          unsigned int v23 = (uint64_t *)*v23;
        }
        uint64_t v24 = (void *)(a1 + 64);
LABEL_41:
        uint64_t v27 = (std::string *)sub_1880F84(v24, v23);
        uint64_t v18 = (uint64_t)sub_188C244(v27, *(char **)v39, (uint64_t)a3);
        goto LABEL_61;
      case 6u:
        if (v9 != 50) {
          goto LABEL_54;
        }
        uint64_t v28 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          uint64_t v29 = (char *)(v28 + 1);
          *(void *)uint64_t v39 = v28 + 1;
          uint64_t v30 = *(_DWORD **)(a1 + 40);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 32), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 32) = v31 + 1;
            uint64_t v32 = *(std::string **)&v30[2 * v31 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v34 = v33;
            v34[1] = sub_3A6EDC;
            void *v33 = 0;
            v33[1] = 0;
            v33[2] = 0;
            uint64_t v32 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v33);
            uint64_t v29 = *(char **)v39;
          }
          uint64_t v28 = sub_188C244(v32, v29, (uint64_t)a3);
          *(void *)uint64_t v39 = v28;
          if (!v28) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 50) {
            goto LABEL_62;
          }
        }
      default:
        if (v9 >> 3 == 1000 && v9 == 66)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v16 = *(void **)(a1 + 80);
          if (!v16)
          {
            unint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              unint64_t v17 = (void *)*v17;
            }
            uint64_t v16 = sub_161D20C((uint64_t)v17);
            *(void *)(a1 + 80) = v16;
            unint64_t v8 = *(unsigned __int8 **)v39;
          }
          uint64_t v18 = sub_161B360(a3, (uint64_t)v16, v8);
          goto LABEL_61;
        }
LABEL_54:
        if (v9) {
          BOOL v35 = (v9 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v6)
          {
            uint64_t v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v39;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v9, v36, (char *)v8, a3);
LABEL_61:
          *(void *)uint64_t v39 = v18;
          if (!v18) {
            return 0;
          }
LABEL_62:
          if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
            return *(void *)v39;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v39;
    }
  }
}

char *sub_161B2D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1617E98(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_161B360(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_161A944(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_161B3F0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 88);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 72);
    char *v4 = 18;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      uint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      uint64_t v21 = v4 + 2;
    }
    uint64_t v4 = sub_16190F4(v19, (unint64_t)v21, a3);
    if ((v6 & 1) == 0)
    {
LABEL_10:
      if ((v6 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_41;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_11:
    if ((v6 & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_41:
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_12:
  }
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_13:
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      unint64_t v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_24;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v14)
      {
        char *v4 = 50;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          unint64_t v13 = (void *)*v13;
        }
        int v15 = v4 + 2;
        memcpy(v15, v13, v14);
        uint64_t v4 = &v15[v14];
        goto LABEL_22;
      }
LABEL_24:
      uint64_t v4 = (char *)sub_188A868(a3, 6, (uint64_t)v13, v4);
LABEL_22:
      v11 += 8;
    }
    while (v12 != v11);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 80);
    *(_WORD *)uint64_t v4 = 16066;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[2] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 2);
    }
    else {
      uint64_t v18 = v4 + 3;
    }
    uint64_t v4 = sub_161AA9C(v16, v18, a3);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_161B710(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x3F) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_11:
        if ((v8 & 4) == 0) {
          goto LABEL_12;
        }
        goto LABEL_22;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_11;
    }
    unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_12:
      if ((v8 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_25;
    }
LABEL_22:
    unint64_t v15 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 8) == 0)
    {
LABEL_13:
      if ((v8 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_26;
    }
LABEL_25:
    uint64_t v18 = sub_1619AF0(*(void *)(a1 + 72));
    v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x10) == 0)
    {
LABEL_14:
      if ((v8 & 0x20) == 0) {
        goto LABEL_31;
      }
      goto LABEL_27;
    }
LABEL_26:
    uint64_t v19 = sub_161AB68(*(void *)(a1 + 80));
    v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v8 & 0x20) == 0) {
      goto LABEL_31;
    }
LABEL_27:
    int v20 = *(_DWORD *)(a1 + 88);
    if (v20 < 0) {
      uint64_t v21 = 11;
    }
    else {
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v21;
  }
LABEL_31:
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v4 += v25;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_161B950(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_23;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 56), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
LABEL_23:
    uint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 64), v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_34;
    }
LABEL_26:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v20 = *(void *)(a1 + 72);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        uint64_t v22 = (void *)*v22;
      }
      sub_161D124((uint64_t)v22);
      *(void *)(a1 + 72) = v20;
    }
    if (*(void *)(a2 + 72)) {
      unsigned int v23 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      unsigned int v23 = &off_2541600;
    }
    sub_161A01C(v20, (uint64_t)v23);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
      goto LABEL_12;
    }
LABEL_34:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    unint64_t v24 = *(std::string **)(a1 + 80);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      unint64_t v24 = (std::string *)sub_161D20C((uint64_t)v26);
      *(void *)(a1 + 80) = v24;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v27 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v27 = &off_25416E8;
    }
    sub_12329D0(v24, (uint64_t)v27);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_161BB90(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_161A778(*(void *)(a1 + 72));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_161BBBC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm.FeedbackFormField");
}

uint64_t sub_161BBCC(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_1639B18((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_161BCAC(uint64_t a1)
{
  sub_161BBCC(a1);

  operator delete();
}

uint64_t sub_161BCE4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v34 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
    return *(void *)v34;
  }
  uint64_t v6 = (void *)(a1 + 8);
  int v7 = (uint64_t **)(a1 + 24);
  while (2)
  {
    int v8 = (char *)(*(void *)v34 + 1);
    unsigned int v9 = **(unsigned char **)v34;
    if ((char)**(unsigned char **)v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v34 + 2);
      }
    }
    *(void *)uint64_t v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 72);
        goto LABEL_43;
      case 2u:
        if (v9 != 18) {
          goto LABEL_44;
        }
        uint64_t v15 = v8 - 1;
        while (1)
        {
          uint64_t v16 = (char *)(v15 + 1);
          *(void *)uint64_t v34 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(std::string **)&v17[2 * v18 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v21 = v20;
            v21[1] = sub_3A6EDC;
            void *v20 = 0;
            v20[1] = 0;
            int v20[2] = 0;
            uint64_t v19 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v20);
            uint64_t v16 = *(char **)v34;
          }
          uint64_t v15 = sub_188C244(v19, v16, (uint64_t)a3);
          *(void *)uint64_t v34 = v15;
          if (!v15) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_52;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_44;
        }
        uint64_t v22 = v8 - 1;
        while (1)
        {
          unsigned int v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)uint64_t v34 = v22 + 1;
          unint64_t v24 = *(_DWORD **)(a1 + 64);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 56) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_161D290(*(void *)(a1 + 48));
            uint64_t v26 = sub_188CDC8(a1 + 48, v27);
            unsigned int v23 = *(unsigned __int8 **)v34;
          }
          uint64_t v22 = (char *)sub_161C074(a3, v26, v23);
          *(void *)uint64_t v34 = v22;
          if (!v22) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 26) {
            goto LABEL_52;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v28 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 80);
        goto LABEL_43;
      case 5u:
        if (v9 != 42) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v29 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 88);
LABEL_43:
        uint64_t v30 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v31 = (void *)sub_188C244(v30, *(char **)v34, (uint64_t)a3);
        goto LABEL_51;
      default:
LABEL_44:
        if (v9) {
          BOOL v32 = (v9 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v6)
          {
            uint64_t v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v34;
          }
          uint64_t v31 = sub_1885AC0(v9, v33, v8, a3);
LABEL_51:
          *(void *)uint64_t v34 = v31;
          if (!v31) {
            return 0;
          }
LABEL_52:
          if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
            return *(void *)v34;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v34;
    }
  }
}

uint64_t sub_161C074(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_161AE80(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_161C104(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 32);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      unsigned int v10 = *(void **)(*(void *)(a1 + 40) + v8 + 8);
      if (*((char *)v10 + 23) < 0)
      {
        int64_t v11 = v10[1];
        if (v11 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v11 = *((unsigned __int8 *)v10 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v11)
      {
        char *v4 = 18;
        v4[1] = v11;
        if (*((char *)v10 + 23) < 0) {
          unsigned int v10 = (void *)*v10;
        }
        uint64_t v12 = v4 + 2;
        memcpy(v12, v10, v11);
        int v4 = &v12[v11];
        goto LABEL_12;
      }
LABEL_14:
      int v4 = (char *)sub_188A868(a3, 2, (uint64_t)v10, v4);
LABEL_12:
      v8 += 8;
    }
    while (v9 != v8);
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      int v4 = sub_161B3F0(v15, (unint64_t)v17, a3);
    }
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0) {
    int v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_161C354(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_161B710(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 7) != 0)
  {
    if (v15)
    {
      unint64_t v21 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
      uint64_t v23 = *(void *)(v21 + 8);
      if ((v22 & 0x80u) == 0) {
        uint64_t v23 = v22;
      }
      v9 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 2) == 0)
      {
LABEL_17:
        if ((v15 & 4) == 0) {
          goto LABEL_21;
        }
        goto LABEL_18;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_17;
    }
    unint64_t v24 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
    uint64_t v26 = *(void *)(v24 + 8);
    if ((v25 & 0x80u) == 0) {
      uint64_t v26 = v25;
    }
    v9 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 4) != 0)
    {
LABEL_18:
      unint64_t v16 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_21:
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v27 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v27 + 31) < 0) {
      uint64_t v28 = *(void *)(v27 + 16);
    }
    else {
      uint64_t v28 = *(unsigned __int8 *)(v27 + 31);
    }
    v9 += v28;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

uint64_t sub_161C544(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v5 + 16) & 8) != 0)
    {
      uint64_t result = sub_161A778(*(void *)(v5 + 72));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_161C5B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.FeedbackDynamicForm");
}

void *sub_161C5C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C8D90;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_161C648(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24C8E10;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

void *sub_161C6F4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24C8E90;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_161C790(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24C8F10;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void *sub_161C834(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C8F90;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_161C8B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24C9010;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 64) = a1;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

double sub_161C968(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24C9090;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

void *sub_161C9E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24C9110;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_161CA8C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24C9190;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_161CB40(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24C9210;
  *(void *)(result + 16) = 0;
  *(_WORD *)(result + 24) = 0;
  return result;
}

void *sub_161CBBC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C9290;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_161CC38(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C9310;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_161CCB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C9390;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_161CD2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C9410;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_161CDA4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C9490;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_161CE20(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C9510;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_161CE98(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24C9590;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void *sub_161CF20(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C9610;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_161CF9C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C9690;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

void *sub_161D024(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C9710;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_161D0A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C9790;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_161D124(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24C9810;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(_OWORD *)(v2 + 184) = 0u;
  *(_OWORD *)(v2 + 200) = 0u;
  *(_OWORD *)(v2 + 212) = 0u;
  return result;
}

void *sub_161D20C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24C9890;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_161D290(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24C9910;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 64) = &qword_2550250;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

void *sub_161D340(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24C9990;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = &qword_2550250;
  result[11] = &qword_2550250;
  return result;
}

uint64_t sub_161D3F4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_25417C8 && *(void *)(a1 + 40))
  {
    sub_184B078();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_161D4DC(uint64_t a1)
{
  sub_161D3F4(a1);

  operator delete();
}

unsigned char *sub_161D514(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v5 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  unint64_t v6 = *((void *)result + 4) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_16CD894(*((void *)result + 5));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  v3[40] = 0;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_161D5E8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)unint64_t v27 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v12 = *(void *)(a1 + 40);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_185089C((uint64_t)v13);
          *(void *)(a1 + 40) = v12;
          uint64_t v8 = *(unsigned __int8 **)v27;
        }
        uint64_t v14 = sub_12688D0(a3, v12, v8);
        goto LABEL_36;
      case 2u:
        if (v9 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_23;
      case 3u:
        if (v9 != 26) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
LABEL_23:
        uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v14 = (void *)sub_188C244(v19, *(char **)v27, (uint64_t)a3);
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        unint64_t v20 = (char *)(v8 + 1);
        uint64_t v21 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v25 = sub_188C138((uint64_t)v8, v21);
          *(void *)unint64_t v27 = v25;
          *(unsigned char *)(a1 + 48) = v26 != 0;
          if (!v25) {
            goto LABEL_44;
          }
        }
        else
        {
          unint64_t v20 = (char *)(v8 + 2);
LABEL_28:
          *(void *)unint64_t v27 = v20;
          *(unsigned char *)(a1 + 48) = v21 != 0;
        }
        goto LABEL_37;
      default:
LABEL_29:
        if (v9) {
          BOOL v23 = (v9 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v7)
          {
            unint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v27;
          }
          uint64_t v14 = sub_1885AC0(v9, v24, (char *)v8, a3);
LABEL_36:
          *(void *)unint64_t v27 = v14;
          if (!v14) {
            goto LABEL_44;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_44:
        }
          *(void *)unint64_t v27 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v27;
    }
  }
}

char *sub_161D894(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_184B3AC(v7, v9, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
LABEL_13:
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_17;
  }
LABEL_14:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 48);
  char *v4 = 32;
  v4[1] = v10;
  v4 += 2;
LABEL_17:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_161DA38(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v8 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = sub_184B568(*(void *)(a1 + 40));
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_17:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_161DB70(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 32), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_18:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v13 = *(void *)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_185089C((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_254D2B0;
    }
    sub_16CE3CC(v13, (uint64_t)v16);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_161DCB8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_161DCE4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ugc.PlaceQuestionnaireLookupParameters.PlaceInfo");
}

uint64_t sub_161DCF4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24C9A90;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1639E2C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_161DDD4(_Unwind_Exception *a1)
{
  sub_1639D2C(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_161DE1C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1639D2C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_161DE9C(void *a1)
{
  sub_161DE1C(a1);

  operator delete();
}

unsigned char *sub_161DED4(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*((void *)result + 4) + 8);
    do
    {
      int v4 = *v3++;
      uint64_t result = sub_161D514(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_161DF50(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1621328(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_161E0F0(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_161E0F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_161D5E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_161E180(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_161D894(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_161E2C4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_161DA38(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_161E374(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1639E2C((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_161E444(uint64_t a1)
{
  return sub_161E44C(a1 + 16);
}

uint64_t sub_161E44C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v5 + 16) & 4) != 0)
    {
      uint64_t result = sub_16CE508(*(void *)(v5 + 40));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_161E4BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ugc.PlaceQuestionnaireLookupParameters");
}

uint64_t sub_161E4CC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24C9B10;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v12 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

void sub_161E668()
{
}

uint64_t sub_161E6F8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2541830)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_1620378(v5);
      operator delete();
    }
    if (*(void *)(a1 + 56))
    {
      sub_184B078();
      operator delete();
    }
    int v6 = *(void **)(a1 + 64);
    if (v6)
    {
      sub_1620AA0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_12C45E8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_161E7F4(uint64_t a1)
{
  sub_161E6F8(a1);

  operator delete();
}

uint64_t sub_161E82C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = (uint64_t)sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if (v5)
    {
      uint64_t result = sub_161E900(*(void *)(v1 + 48));
      if ((v5 & 2) == 0)
      {
LABEL_8:
        if ((v5 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_8;
    }
    uint64_t result = (uint64_t)sub_16CD894(*(void *)(v1 + 56));
    if ((v5 & 4) != 0) {
LABEL_9:
    }
      uint64_t result = sub_161E9B0(*(void *)(v1 + 64));
  }
LABEL_10:
  if ((v5 & 0xF8) != 0)
  {
    *(_DWORD *)(v1 + 75) = 0;
    *(_DWORD *)(v1 + 72) = 0;
    *(unsigned char *)(v1 + 79) = 1;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_161E900(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_161FBE0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_161E9B0(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_161EA18(uint64_t a1, char *a2, int32x2_t *a3)
{
  v53 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v53, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v53 + 1;
    unsigned int v9 = *v53;
    if (*v53 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v53, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v53 + 2;
      }
    }
    v53 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_64;
        }
        int v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          v53 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v53) {
            goto LABEL_91;
          }
          unint64_t v13 = v43;
        }
        else
        {
          int v12 = v8 + 2;
LABEL_13:
          v53 = v12;
        }
        if (sub_13E78E4(v13))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 72) = v13;
        }
        else
        {
          if (*v7) {
            uint64_t v52 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v52 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v52);
        }
        goto LABEL_72;
      case 2u:
        if (v9 != 18) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void **)(a1 + 48);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_162159C((uint64_t)v17);
          *(void *)(a1 + 48) = v16;
          uint64_t v8 = v53;
        }
        uint64_t v18 = (char *)sub_161EF68(a3, (uint64_t)v16, (unsigned __int8 *)v8);
        goto LABEL_71;
      case 3u:
        if (v9 != 26) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 56);
        if (!v19)
        {
          unint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_185089C((uint64_t)v20);
          *(void *)(a1 + 56) = v19;
          uint64_t v8 = v53;
        }
        uint64_t v18 = sub_12688D0(a3, v19, (unsigned __int8 *)v8);
        goto LABEL_71;
      case 4u:
        if (v9 != 32) {
          goto LABEL_64;
        }
        v5 |= 0x10u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v44 = (char *)sub_188C138((uint64_t)v8, v22);
          v53 = v44;
          *(unsigned char *)(a1 + 76) = v45 != 0;
          if (!v44) {
            goto LABEL_91;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_32:
          v53 = v21;
          *(unsigned char *)(a1 + 76) = v22 != 0;
        }
        goto LABEL_72;
      case 5u:
        if (v9 != 42) {
          goto LABEL_64;
        }
        unint64_t v24 = v8 - 1;
        while (1)
        {
          uint64_t v25 = (unsigned __int8 *)(v24 + 1);
          v53 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_185089C(*(void *)(a1 + 24));
            uint64_t v28 = sub_188CDC8(a1 + 24, v29);
            uint64_t v25 = (unsigned __int8 *)v53;
          }
          unint64_t v24 = sub_12688D0(a3, v28, v25);
          v53 = v24;
          if (!v24) {
            goto LABEL_91;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 42) {
            goto LABEL_72;
          }
        }
      case 6u:
        if (v9 != 48) {
          goto LABEL_64;
        }
        v5 |= 0x20u;
        uint64_t v30 = v8 + 1;
        uint64_t v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v46 = (char *)sub_188C138((uint64_t)v8, v31);
          v53 = v46;
          *(unsigned char *)(a1 + 77) = v47 != 0;
          if (!v46) {
            goto LABEL_91;
          }
        }
        else
        {
          uint64_t v30 = v8 + 2;
LABEL_47:
          v53 = v30;
          *(unsigned char *)(a1 + 77) = v31 != 0;
        }
        goto LABEL_72;
      case 7u:
        if (v9 != 56) {
          goto LABEL_64;
        }
        v5 |= 0x40u;
        uint64_t v33 = v8 + 1;
        uint64_t v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v35 = *v33;
        uint64_t v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v48 = (char *)sub_188C138((uint64_t)v8, v34);
          v53 = v48;
          *(unsigned char *)(a1 + 78) = v49 != 0;
          if (!v48) {
            goto LABEL_91;
          }
        }
        else
        {
          uint64_t v33 = v8 + 2;
LABEL_52:
          v53 = v33;
          *(unsigned char *)(a1 + 78) = v34 != 0;
        }
        goto LABEL_72;
      case 8u:
        if (v9 != 64) {
          goto LABEL_64;
        }
        v5 |= 0x80u;
        uint64_t v36 = v8 + 1;
        uint64_t v37 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v50 = (char *)sub_188C138((uint64_t)v8, v37);
          v53 = v50;
          *(unsigned char *)(a1 + 79) = v51 != 0;
          if (!v50) {
            goto LABEL_91;
          }
        }
        else
        {
          uint64_t v36 = v8 + 2;
LABEL_57:
          v53 = v36;
          *(unsigned char *)(a1 + 79) = v37 != 0;
        }
        goto LABEL_72;
      case 9u:
        if (v9 != 74) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v39 = *(void *)(a1 + 64);
        if (!v39)
        {
          uint64_t v40 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v40 = (void *)*v40;
          }
          uint64_t v39 = sub_1621640((uint64_t)v40);
          *(void *)(a1 + 64) = v39;
          uint64_t v8 = v53;
        }
        uint64_t v18 = (char *)sub_161EFF8(a3, v39, (unsigned __int8 *)v8);
        goto LABEL_71;
      default:
LABEL_64:
        if (v9) {
          BOOL v41 = (v9 & 7) == 4;
        }
        else {
          BOOL v41 = 1;
        }
        if (!v41)
        {
          if (*v7)
          {
            uint64_t v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v53;
          }
          uint64_t v18 = (char *)sub_1885AC0(v9, v42, v8, a3);
LABEL_71:
          v53 = v18;
          if (!v18) {
            goto LABEL_91;
          }
LABEL_72:
          if (sub_11947B8((uint64_t)a3, &v53, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_91:
        }
          v53 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v53;
    }
  }
}

uint64_t sub_161EF68(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_162045C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_161EFF8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1620B54(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_161F088(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    char v4 = sub_16206EC(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 0x10) == 0) {
        goto LABEL_27;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 56);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 44);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  char v4 = sub_184B3AC(v13, v15, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v16 = *(unsigned char *)(a1 + 76);
    char *v4 = 32;
    v4[1] = v16;
    v4 += 2;
  }
LABEL_27:
  int v17 = *(_DWORD *)(a1 + 32);
  if (v17)
  {
    for (int i = 0; i != v17; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 42;
      unsigned int v20 = *(_DWORD *)(v19 + 44);
      v4[1] = v20;
      if (v20 > 0x7F) {
        uint64_t v21 = sub_188A9CC(v20, v4 + 1);
      }
      else {
        uint64_t v21 = v4 + 2;
      }
      char v4 = sub_184B3AC(v19, v21, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v22 = *(unsigned char *)(a1 + 77);
    char *v4 = 48;
    v4[1] = v22;
    v4 += 2;
    if ((v6 & 0x40) == 0)
    {
LABEL_37:
      if ((v6 & 0x80) == 0) {
        goto LABEL_38;
      }
      goto LABEL_46;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_37;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v23 = *(unsigned char *)(a1 + 78);
  char *v4 = 56;
  v4[1] = v23;
  v4 += 2;
  if ((v6 & 0x80) == 0)
  {
LABEL_38:
    if ((v6 & 4) == 0) {
      goto LABEL_55;
    }
    goto LABEL_49;
  }
LABEL_46:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v24 = *(unsigned char *)(a1 + 79);
  char *v4 = 64;
  v4[1] = v24;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_49:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 64);
    char *v4 = 74;
    unsigned int v26 = *(_DWORD *)(v25 + 20);
    v4[1] = v26;
    if (v26 > 0x7F) {
      uint64_t v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      uint64_t v27 = v4 + 2;
    }
    char v4 = sub_1620ED8(v25, v27, a3);
  }
LABEL_55:
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    uint64_t v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    uint64_t v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_161F474(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  char v8 = *(unsigned char *)(a1 + 16);
  if (!v8) {
    goto LABEL_31;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v9 = sub_1620854(*(void *)(a1 + 48));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((*(unsigned char *)(a1 + 16) & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v10 = sub_184B568(*(void *)(a1 + 56));
  v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_22;
    }
LABEL_18:
    int v12 = *(_DWORD *)(a1 + 72);
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v13;
    goto LABEL_22;
  }
LABEL_17:
  uint64_t v11 = sub_16211F0(*(void *)(a1 + 64));
  v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) != 0) {
    goto LABEL_18;
  }
LABEL_22:
  uint64_t v14 = v2 + 2;
  if ((v8 & 0x10) == 0) {
    uint64_t v14 = v2;
  }
  if ((v8 & 0x20) != 0) {
    v14 += 2;
  }
  if ((v8 & 0x40) != 0) {
    v14 += 2;
  }
  if (v8 < 0) {
    uint64_t v2 = v14 + 2;
  }
  else {
    uint64_t v2 = v14;
  }
LABEL_31:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_161F630(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    char v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *char v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(std::string **)(a1 + 48);
      if (!v11)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v11 = (std::string *)sub_162159C((uint64_t)v13);
        *(void *)(a1 + 48) = v11;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v14 = &off_2541880;
      }
      sub_161F858(v11, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_35;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 56);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      unint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        unint64_t v17 = (void *)*v17;
      }
      uint64_t v15 = sub_185089C((uint64_t)v17);
      *(void *)(a1 + 56) = v15;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v18 = &off_254D2B0;
    }
    sub_16CE3CC(v15, (uint64_t)v18);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_43;
    }
LABEL_35:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v19 = *(std::string **)(a1 + 64);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v19 = (std::string *)sub_1621640((uint64_t)v21);
      *(void *)(a1 + 64) = v19;
    }
    if (*(void *)(a2 + 64)) {
      char v22 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      char v22 = &off_25418B8;
    }
    sub_161F960(v19, (uint64_t)v22);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_44;
    }
LABEL_43:
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_45;
    }
LABEL_44:
    *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_46;
    }
LABEL_45:
    *(unsigned char *)(a1 + 77) = *(unsigned char *)(a2 + 77);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(unsigned char *)(a1 + 79) = *(unsigned char *)(a2 + 79);
      goto LABEL_14;
    }
LABEL_46:
    *(unsigned char *)(a1 + 78) = *(unsigned char *)(a2 + 78);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_161F858(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1639EB8(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    char v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *char v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_161F960(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    char v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *char v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_17;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
      goto LABEL_10;
    }
LABEL_17:
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_161FA88(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CE508(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_161FAEC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ugc.PlaceQuestionnaireResult");
}

uint64_t sub_161FAFC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_12C1DB8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_161FBA8(uint64_t a1)
{
  sub_161FAFC(a1);

  operator delete();
}

uint64_t sub_161FBE0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_161FC90(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)char v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)char v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    char v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      char v22 = (uint64_t *)*v22;
    }
    char v23 = (std::string *)sub_1880F84((void *)(a1 + 48), v22);
    uint64_t v14 = (void *)sub_188C244(v23, *(char **)v24, (uint64_t)a3);
LABEL_33:
    *(void *)char v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 18)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      *(void *)char v24 = v15 + 1;
      unint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_15C1B30(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
        uint64_t v16 = *(unsigned __int8 **)v24;
      }
      uint64_t v15 = (char *)sub_125CF74(a3, v19, v16);
      *(void *)char v24 = v15;
      if (!v15) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_34;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)char v24 = 0;
  return *(void *)v24;
}

char *sub_161FE90(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_161FFF8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_16200F0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C1E38(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16201F8()
{
  return 1;
}

void *sub_1620200@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ugc.ScorecardLayout.RatingCategory");
}

uint64_t sub_1620210(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24C9C10;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1639EB8(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  return a1;
}

void sub_1620334(_Unwind_Exception *a1)
{
  sub_1639DAC(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1620378(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1639DAC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1620424(uint64_t a1)
{
  sub_1620378(a1);

  operator delete();
}

uint64_t sub_162045C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)char v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)char v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    char v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      char v22 = (uint64_t *)*v22;
    }
    char v23 = (std::string *)sub_1880F84((void *)(a1 + 48), v22);
    uint64_t v14 = (void *)sub_188C244(v23, *(char **)v24, (uint64_t)a3);
LABEL_33:
    *(void *)char v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 18)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      *(void *)char v24 = v15 + 1;
      unint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_16214F8(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
        uint64_t v16 = *(unsigned __int8 **)v24;
      }
      uint64_t v15 = (char *)sub_162065C(a3, v19, v16);
      *(void *)char v24 = v15;
      if (!v15) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_34;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)char v24 = 0;
  return *(void *)v24;
}

uint64_t sub_162065C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_161FC90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16206EC(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      int v4 = sub_161FE90(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_1620854(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_161FFF8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_162094C()
{
  return 1;
}

void *sub_1620954@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ugc.ScorecardLayout");
}

uint64_t sub_1620964(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24C9C90;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  long long v12 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v12;
  return a1;
}

void sub_1620A60(_Unwind_Exception *a1)
{
  sub_1889DE8(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1620AA0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1620B1C(void *a1)
{
  sub_1620AA0(a1);

  operator delete();
}

uint64_t sub_1620B54(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 24);
  unint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    int v9 = (char *)(*(void *)v37 + 1);
    unsigned int v10 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        int v9 = (char *)sub_188C180(*(uint64_t *)v37, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (char *)(*(void *)v37 + 2);
      }
    }
    *(void *)uint64_t v37 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_38;
        }
        unint64_t v13 = v9 - 1;
        while (1)
        {
          uint64_t v14 = (char *)(v13 + 1);
          *(void *)uint64_t v37 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 40);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 32), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 32) = v16 + 1;
            unint64_t v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v19 = v18;
            v19[1] = sub_3A6EDC;
            *uint64_t v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            unint64_t v17 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v18);
            uint64_t v14 = *(char **)v37;
          }
          unint64_t v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)uint64_t v37 = v13;
          if (!v13) {
            goto LABEL_56;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_45;
          }
        }
      case 2u:
        if (v10 != 16) {
          goto LABEL_38;
        }
        v5 |= 2u;
        uint64_t v20 = v9 + 1;
        int v21 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v22 = *v20;
        int v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v31 = sub_188C0D0((uint64_t)v9, v21);
          *(void *)uint64_t v37 = v31;
          *(_DWORD *)(a1 + 56) = v32;
          if (!v31) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v20 = v9 + 2;
LABEL_25:
          *(void *)uint64_t v37 = v20;
          *(_DWORD *)(a1 + 56) = v21;
        }
        goto LABEL_45;
      case 3u:
        if (v10 != 24) {
          goto LABEL_38;
        }
        v5 |= 1u;
        char v23 = v9 + 1;
        uint64_t v24 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v33 = sub_188C138((uint64_t)v9, v24);
          *(void *)uint64_t v37 = v33;
          *(void *)(a1 + 48) = v34;
          if (!v33) {
            goto LABEL_56;
          }
        }
        else
        {
          char v23 = v9 + 2;
LABEL_30:
          *(void *)uint64_t v37 = v23;
          *(void *)(a1 + 48) = v24;
        }
        goto LABEL_45;
      case 4u:
        if (v10 != 32) {
          goto LABEL_38;
        }
        v5 |= 8u;
        unsigned int v26 = v9 + 1;
        uint64_t v27 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v35 = sub_188C138((uint64_t)v9, v27);
          *(void *)uint64_t v37 = v35;
          *(void *)(a1 + 64) = v36;
          if (!v35) {
            goto LABEL_56;
          }
        }
        else
        {
          unsigned int v26 = v9 + 2;
LABEL_35:
          *(void *)uint64_t v37 = v26;
          *(void *)(a1 + 64) = v27;
        }
        goto LABEL_45;
      case 5u:
        if (v10 != 45) {
          goto LABEL_38;
        }
        v5 |= 4u;
        *(_DWORD *)(a1 + 60) = *(_DWORD *)v9;
        *(void *)uint64_t v37 = v9 + 4;
        goto LABEL_45;
      default:
LABEL_38:
        if (v10) {
          BOOL v29 = (v10 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v8)
          {
            unint64_t v30 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(char **)v37;
          }
          *(void *)uint64_t v37 = sub_1885AC0(v10, v30, v9, a3);
          if (!*(void *)v37) {
            goto LABEL_56;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_56:
        }
          *(void *)uint64_t v37 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v37;
    }
  }
}

char *sub_1620ED8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if ((v12 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 56);
    *__dst = 16;
    __dst[1] = v13;
    if (v13 > 0x7F)
    {
      __dst[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      __dst[2] = v13 >> 7;
      __dst += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *__dst++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if (v12)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v16 = *(void *)(a1 + 48);
    *__dst = 24;
    __dst[1] = v16;
    if (v16 > 0x7F)
    {
      __dst[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      __dst[2] = v16 >> 7;
      __dst += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *__dst++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v12 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v19 = *(void *)(a1 + 64);
    *__dst = 32;
    __dst[1] = v19;
    if (v19 > 0x7F)
    {
      __dst[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      __dst[2] = v19 >> 7;
      __dst += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *__dst++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v12 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    int v22 = *(_DWORD *)(a1 + 60);
    *__dst = 45;
    *(_DWORD *)(__dst + 1) = v22;
    __dst += 5;
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return __dst;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    unsigned int v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    unsigned int v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(__dst, v26, (int)v27);
    __dst += v28;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, __dst);
}

uint64_t sub_16211F0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 0xF) != 0)
  {
    if (v7) {
      v3 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v7 & 2) != 0) {
      v3 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 4) != 0) {
      v3 += 5;
    }
    if ((v7 & 8) != 0) {
      v3 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1621310()
{
  return 1;
}

void *sub_1621318@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ugc.PhotoConstraints");
}

uint64_t sub_1621328(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24C9A10;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 48) = 0;
  return result;
}

uint64_t sub_16213B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24C9A90;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1621450(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24C9B10;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 63) = 0u;
  *(unsigned char *)(result + 79) = 1;
  return result;
}

void *sub_16214F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24C9B90;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_162159C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24C9C10;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_1621640(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24C9C90;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(void *)(result + 64) = 0;
  return result;
}

BOOL sub_16216E0(unsigned int a1)
{
  return a1 < 2;
}

BOOL sub_16216EC(unsigned int a1)
{
  return a1 < 3;
}

uint64_t sub_16216F8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1621798(uint64_t a1)
{
  sub_16216F8(a1);

  operator delete();
}

uint64_t sub_16217D0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v16 = v8 + 1;
    uint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    uint64_t v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      unint64_t v16 = v8 + 2;
LABEL_24:
      *(void *)uint64_t v24 = v16;
      *(unsigned char *)(a1 + 32) = v17 != 0;
      goto LABEL_29;
    }
    uint64_t v22 = sub_188C138((uint64_t)v8, v17);
    *(void *)uint64_t v24 = v22;
    *(unsigned char *)(a1 + 32) = v23 != 0;
    if (!v22) {
      goto LABEL_36;
    }
LABEL_29:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 8);
    unint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      unint64_t v20 = (uint64_t *)*v20;
    }
    unint64_t v21 = (std::string *)sub_1880F84((void *)(a1 + 24), v20);
    unsigned int v15 = (void *)sub_188C244(v21, *(char **)v24, (uint64_t)a3);
LABEL_28:
    *(void *)uint64_t v24 = v15;
    if (!v15) {
      goto LABEL_36;
    }
    goto LABEL_29;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unsigned int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v24;
    }
    unsigned int v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_28;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_36:
  *(void *)uint64_t v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v24;
}

unsigned char *sub_16219BC(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v7 = *(unsigned char *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v7;
    v4 += 2;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    unsigned int v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    unsigned int v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_1621AC0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1621B60()
{
  return 1;
}

void *sub_1621B68@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ThirdPartyPhotoSharingPreference");
}

uint64_t sub_1621B78(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2541928)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_16216F8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1621C30(uint64_t a1)
{
  sub_1621B78(a1);

  operator delete();
}

char *sub_1621C68(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    unint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      unsigned int v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        unsigned int v14 = (void *)*v14;
      }
      uint64_t v13 = sub_1623650((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_15FCA9C(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    unint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

unsigned char *sub_1621DC0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    unint64_t v4 = sub_16219BC(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1621ED0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1621AC0(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_1621F58()
{
  return 1;
}

void *sub_1621F60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ThirdPartyPhotoSharingPreferenceUpdate");
}

uint64_t sub_1621F70(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2541948)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_16216F8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1622030(uint64_t a1)
{
  sub_1621F70(a1);

  operator delete();
}

char *sub_1622068(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        unsigned int v7 = v26 + 2;
      }
    }
    unsigned int v26 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1) {
      goto LABEL_38;
    }
    if (v8 == 8)
    {
      uint64_t v12 = v7 - 1;
      while (1)
      {
        unsigned int v26 = v12 + 1;
        unint64_t v13 = v12[1];
        uint64_t v14 = v12 + 2;
        if (v12[1] < 0)
        {
          int v15 = *v14;
          int v16 = v13 + (v15 << 7);
          unint64_t v13 = (v16 - 128);
          if (v15 < 0)
          {
            unsigned int v26 = (char *)sub_188C138((uint64_t)(v12 + 1), (v16 - 128));
            if (!v26) {
              return 0;
            }
            unint64_t v13 = v19;
            goto LABEL_16;
          }
          uint64_t v14 = v12 + 3;
        }
        unsigned int v26 = v14;
LABEL_16:
        if (v13 > 1)
        {
          if (*v6) {
            unint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v20);
        }
        else
        {
          uint64_t v17 = *(unsigned int *)(a1 + 24);
          if (v17 == *(_DWORD *)(a1 + 28))
          {
            int v18 = v17 + 1;
            sub_188C80C((unsigned int *)(a1 + 24), v17 + 1);
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v17) = v13;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v17) = v13;
            int v18 = v17 + 1;
          }
          *(_DWORD *)(a1 + 24) = v18;
        }
        uint64_t v12 = v26;
        if (*(void *)a3 <= (unint64_t)v26 || *v26 != 8) {
          goto LABEL_46;
        }
      }
    }
    if (v8 != 10) {
      goto LABEL_38;
    }
    *(void *)&long long v27 = a1 + 24;
    *((void *)&v27 + 1) = sub_16216E0;
    uint64_t v28 = a1 + 8;
    int v29 = 1;
    uint64_t v23 = sub_1112E88((uint64_t)a3, v7, &v27);
LABEL_45:
    unsigned int v26 = v23;
    if (!v23) {
      return 0;
    }
LABEL_46:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v8 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 40);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_1623650((uint64_t)v22);
      *(void *)(a1 + 40) = v21;
      unsigned int v7 = v26;
    }
    uint64_t v23 = (char *)sub_15FCA9C(a3, v21, (unsigned __int8 *)v7);
    goto LABEL_45;
  }
LABEL_38:
  if (v8) {
    BOOL v24 = (v8 & 7) == 4;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24)
  {
    if (*v6)
    {
      unint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v26;
    }
    uint64_t v23 = (char *)sub_1885AC0(v8, v25, v7, a3);
    goto LABEL_45;
  }
  if (!v7) {
    return 0;
  }
  a3[10].i32[0] = v8 - 1;
  return v26;
}

char *sub_162231C(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 40);
    *__dst = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      unint64_t v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      unint64_t v13 = __dst + 2;
    }
    __dst = sub_16219BC(v11, v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)__dst >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_16224D4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_1621AC0(*(void *)(a1 + 40));
    v7 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v7 += v12;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

uint64_t sub_16225B4()
{
  return 1;
}

void *sub_16225BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.ThirdPartyPhotoSharingPreferenceUpdateResult");
}

uint64_t sub_16225CC(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1622684(uint64_t a1)
{
  sub_16225CC(a1);

  operator delete();
}

uint64_t sub_16226BC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)unint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_22;
      case 2u:
        if (v9 != 16) {
          goto LABEL_28;
        }
        v5 |= 4u;
        int v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v8, v16);
          *(void *)unint64_t v30 = v26;
          *(unsigned char *)(a1 + 40) = v27 != 0;
          if (!v26) {
            goto LABEL_45;
          }
        }
        else
        {
          int v15 = v8 + 2;
LABEL_17:
          *(void *)unint64_t v30 = v15;
          *(unsigned char *)(a1 + 40) = v16 != 0;
        }
        goto LABEL_36;
      case 3u:
        if (v9 != 26) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
LABEL_22:
        uint64_t v19 = (std::string *)sub_1880F84(v14, v13);
        unint64_t v20 = (void *)sub_188C244(v19, *(char **)v30, (uint64_t)a3);
        goto LABEL_35;
      case 4u:
        if (v9 != 32) {
          goto LABEL_28;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v22);
          *(void *)unint64_t v30 = v28;
          *(unsigned char *)(a1 + 41) = v29 != 0;
          if (!v28) {
            goto LABEL_45;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_27:
          *(void *)unint64_t v30 = v21;
          *(unsigned char *)(a1 + 41) = v22 != 0;
        }
        goto LABEL_36;
      default:
LABEL_28:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v30;
          }
          unint64_t v20 = sub_1885AC0(v9, v25, v8, a3);
LABEL_35:
          *(void *)unint64_t v30 = v20;
          if (!v20) {
            goto LABEL_45;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_45:
        }
          *(void *)unint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_1622984(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 40);
  unsigned char *v4 = 16;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_14;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 41);
  unsigned char *v4 = 32;
  v4[1] = v8;
  v4 += 2;
LABEL_14:
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1622AF0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_17:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1622BE4()
{
  return 1;
}

void *sub_1622BEC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.PhotoAttributionPreferences");
}

uint64_t sub_1622BFC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25419A8)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_16225CC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1622CB4(uint64_t a1)
{
  sub_1622BFC(a1);

  operator delete();
}

char *sub_1622CEC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 26) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_16237E8((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    unint64_t v12 = (char *)sub_15FCB2C(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    unint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

unsigned char *sub_1622E44(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    unsigned char *v4 = 26;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    unint64_t v4 = sub_1622984(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1622F54(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1622AF0(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_1622FDC()
{
  return 1;
}

void *sub_1622FE4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.PhotoAttributionPreferencesUpdate");
}

uint64_t sub_1622FF4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25419C8)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_16225CC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16230B4(uint64_t a1)
{
  sub_1622FF4(a1);

  operator delete();
}

char *sub_16230EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        unsigned int v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1) {
      goto LABEL_38;
    }
    if (v8 == 8)
    {
      unint64_t v12 = v7 - 1;
      while (1)
      {
        uint64_t v26 = v12 + 1;
        unint64_t v13 = v12[1];
        uint64_t v14 = v12 + 2;
        if (v12[1] < 0)
        {
          int v15 = *v14;
          int v16 = v13 + (v15 << 7);
          unint64_t v13 = (v16 - 128);
          if (v15 < 0)
          {
            uint64_t v26 = (char *)sub_188C138((uint64_t)(v12 + 1), (v16 - 128));
            if (!v26) {
              return 0;
            }
            unint64_t v13 = v19;
            goto LABEL_16;
          }
          uint64_t v14 = v12 + 3;
        }
        uint64_t v26 = v14;
LABEL_16:
        if (v13 > 2)
        {
          if (*v6) {
            unint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v20);
        }
        else
        {
          uint64_t v17 = *(unsigned int *)(a1 + 24);
          if (v17 == *(_DWORD *)(a1 + 28))
          {
            int v18 = v17 + 1;
            sub_188C80C((unsigned int *)(a1 + 24), v17 + 1);
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v17) = v13;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v17) = v13;
            int v18 = v17 + 1;
          }
          *(_DWORD *)(a1 + 24) = v18;
        }
        unint64_t v12 = v26;
        if (*(void *)a3 <= (unint64_t)v26 || *v26 != 8) {
          goto LABEL_46;
        }
      }
    }
    if (v8 != 10) {
      goto LABEL_38;
    }
    *(void *)&long long v27 = a1 + 24;
    *((void *)&v27 + 1) = sub_16216EC;
    uint64_t v28 = a1 + 8;
    int v29 = 1;
    int v23 = sub_1112E88((uint64_t)a3, v7, &v27);
LABEL_45:
    uint64_t v26 = v23;
    if (!v23) {
      return 0;
    }
LABEL_46:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v8 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 40);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_16237E8((uint64_t)v22);
      *(void *)(a1 + 40) = v21;
      unsigned int v7 = v26;
    }
    int v23 = (char *)sub_15FCB2C(a3, v21, (unsigned __int8 *)v7);
    goto LABEL_45;
  }
LABEL_38:
  if (v8) {
    BOOL v24 = (v8 & 7) == 4;
  }
  else {
    BOOL v24 = 1;
  }
  if (!v24)
  {
    if (*v6)
    {
      unint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v26;
    }
    int v23 = (char *)sub_1885AC0(v8, v25, v7, a3);
    goto LABEL_45;
  }
  if (!v7) {
    return 0;
  }
  a3[10].i32[0] = v8 - 1;
  return v26;
}

char *sub_16233A0(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 40);
    *__dst = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      unint64_t v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      unint64_t v13 = __dst + 2;
    }
    __dst = sub_1622984(v11, v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)__dst >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_1623558(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_1622AF0(*(void *)(a1 + 40));
    v7 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v7 += v12;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

uint64_t sub_1623638()
{
  return 1;
}

void *sub_1623640@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rap2.PhotoAttributionPreferencesUpdateResult");
}

uint64_t sub_1623650(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C9D10;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(unsigned char *)(result + 32) = 0;
  return result;
}

void *sub_16236D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C9D90;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_1623750(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24C9E10;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  return result;
}

uint64_t sub_16237E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C9E90;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(_WORD *)(result + 40) = 0;
  return result;
}

void *sub_1623870(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C9F10;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_16238E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24C9F90;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  return result;
}

void *sub_1623980(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16239F4(void *a1)
{
  sub_1623980(a1);

  operator delete();
}

uint64_t sub_1623A2C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1623A44(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    unint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      unint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    unint64_t v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_1623BC4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1623CEC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1623D54()
{
  return 1;
}

void *sub_1623D5C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "dataservice.Layer");
}

void *sub_1623D6C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1623DE0(void *a1)
{
  sub_1623D6C(a1);

  operator delete();
}

uint64_t sub_1623E18(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1623E40(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unint64_t v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unint64_t v16 = v8 + 2;
LABEL_26:
        uint64_t v31 = v16;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_36;
      }
      unint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v17);
      uint64_t v31 = v25;
      *(_DWORD *)(a1 + 32) = v26;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      uint64_t v31 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_36;
    }
    long long v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
    uint64_t v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      uint64_t v31 = v22;
      *(_DWORD *)(a1 + 24) = v23;
      goto LABEL_36;
    }
    int v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    uint64_t v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v31;
    }
    uint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_1624094(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_16242B4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1624380()
{
  return 1;
}

void *sub_1624388@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "dataservice.Version");
}

uint64_t sub_1624398(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2541A40)
  {
    unint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_1623980(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_1623D6C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1624468(uint64_t a1)
{
  sub_1624398(a1);

  operator delete();
}

uint64_t sub_16244A0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 24);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_1623E18(*(void *)(v1 + 32));
    }
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1624520(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_1626AF4((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      unsigned int v7 = v19;
    }
    unsigned int v14 = sub_1624770(a3, v15, (unsigned __int8 *)v7);
LABEL_31:
    uint64_t v19 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      unint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_1626A78((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      unsigned int v7 = v19;
    }
    unsigned int v14 = sub_16246E0(a3, v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unsigned int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    unsigned int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v19;
  }
  return 0;
}

char *sub_16246E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1623A44(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1624770(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1623E40(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1624800(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1623BC4(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_1624094(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1624980(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_1623CEC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_16242B4(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1624A58(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        data = (std::string *)sub_1626A78((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_25419F8;
      }
      uint64_t result = sub_11A7934(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = (std::string *)sub_1626AF4((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        BOOL v12 = &off_2541A18;
      }
      uint64_t result = sub_117EF50(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1624B5C()
{
  return 1;
}

void *sub_1624B64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "dataservice.VersionedLayer");
}

uint64_t sub_1624B74(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1624C14(uint64_t a1)
{
  sub_1624B74(a1);

  operator delete();
}

uint64_t sub_1624C4C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1624C90(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)uint64_t v17 = v6;
    if (v7 != 18) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    unsigned int v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unsigned int v14 = (uint64_t *)*v14;
    }
    unint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    BOOL v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)uint64_t v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = *(char **)v17;
    }
    BOOL v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)uint64_t v17 = 0;
  return *(void *)v17;
}

char *sub_1624DE8(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_1624EB4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1624F38()
{
  return 1;
}

void *sub_1624F40@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "dataservice.LayerIndex");
}

void *sub_1624F50(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1624FD4((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1624FD4(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2541A88)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void **)(result + 24);
    if (v2)
    {
      sub_1623980(v2);
      operator delete();
    }
    uint64_t v3 = (void *)v1[4];
    if (v3)
    {
      sub_1623D6C(v3);
      operator delete();
    }
    uint64_t v4 = (void *)v1[5];
    if (v4)
    {
      sub_1623D6C(v4);
      operator delete();
    }
    uint64_t result = v1[6];
    if (result)
    {
      sub_1624B74(result);
      operator delete();
    }
  }
  return result;
}

void sub_16250A0(void *a1)
{
  sub_1624F50(a1);

  operator delete();
}

uint64_t sub_16250D8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 24);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t result = sub_1623E18(*(void *)(v1 + 32));
      if ((v2 & 4) == 0)
      {
LABEL_7:
        if ((v2 & 8) == 0) {
          goto LABEL_9;
        }
        goto LABEL_8;
      }
    }
    else if ((v2 & 4) == 0)
    {
      goto LABEL_7;
    }
    uint64_t result = sub_1623E18(*(void *)(v1 + 40));
    if ((v2 & 8) != 0) {
LABEL_8:
    }
      uint64_t result = sub_1624C4C(*(void *)(v1 + 48));
  }
LABEL_9:
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_162517C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v21 = a2;
  if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
    return v21;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = v21 + 1;
    unsigned int v8 = *v21;
    if (*v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v21 + 2;
      }
    }
    uint64_t v21 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (!v11)
        {
          BOOL v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v12 = (void *)*v12;
          }
          uint64_t v11 = sub_1626A78((uint64_t)v12);
          *(void *)(a1 + 24) = v11;
          unint64_t v7 = v21;
        }
        uint64_t v13 = sub_16246E0(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 2u:
        if (v8 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (v14) {
          goto LABEL_26;
        }
        unint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v15 = (void *)*v15;
        }
        uint64_t v14 = sub_1626AF4((uint64_t)v15);
        *(void *)(a1 + 32) = v14;
        goto LABEL_25;
      case 3u:
        if (v8 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v14 = *(void *)(a1 + 40);
        if (v14) {
          goto LABEL_26;
        }
        uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v14 = sub_1626AF4((uint64_t)v16);
        *(void *)(a1 + 40) = v14;
LABEL_25:
        unint64_t v7 = v21;
LABEL_26:
        uint64_t v13 = sub_1624770(a3, v14, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 4u:
        if (v8 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v17 = *(void **)(a1 + 48);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_1626BEC((uint64_t)v18);
          *(void *)(a1 + 48) = v17;
          unint64_t v7 = v21;
        }
        uint64_t v13 = (char *)sub_1625400(a3, (uint64_t)v17, (unsigned __int8 *)v7);
        goto LABEL_40;
      default:
LABEL_33:
        if (v8) {
          BOOL v19 = (v8 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v6)
          {
            uint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = v21;
          }
          uint64_t v13 = (char *)sub_1885AC0(v8, v20, v7, a3);
LABEL_40:
          uint64_t v21 = v13;
          if (!v13) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
            return v21;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v21;
    }
  }
}

uint64_t sub_1625400(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1624C90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1625490(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1623BC4(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    BOOL v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    BOOL v12 = v4 + 2;
  }
  char v4 = sub_1624094(v10, (unint64_t)v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unint64_t v15 = v4 + 2;
  }
  char v4 = sub_1624094(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    unsigned char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    char v4 = sub_1624DE8(v16, v18, a3);
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_16256E8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_1623CEC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_16242B4(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v9 = sub_16242B4(*(void *)(a1 + 40));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_10:
    uint64_t v6 = sub_1624EB4(*(void *)(a1 + 48));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1625828(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) == 0) {
    goto LABEL_39;
  }
  if (v4)
  {
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v7 = (void *)*v7;
      }
      data = (std::string *)sub_1626A78((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_25419F8;
    }
    uint64_t result = sub_11A7934(data, (uint64_t)v8);
  }
  if ((v4 & 2) != 0)
  {
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v9)
    {
      std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
      uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        uint64_t v11 = (void *)*v11;
      }
      uint64_t v9 = (std::string *)sub_1626AF4((uint64_t)v11);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
    }
    if (*(void *)(a2 + 32)) {
      BOOL v12 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      BOOL v12 = &off_2541A18;
    }
    uint64_t result = sub_117EF50(v9, (uint64_t)v12);
    if ((v4 & 4) == 0)
    {
LABEL_13:
      if ((v4 & 8) == 0) {
        goto LABEL_39;
      }
      goto LABEL_31;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_13;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
  if (!v13)
  {
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = (std::string *)sub_1626AF4((uint64_t)v15);
    v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v16 = &off_2541A18;
  }
  uint64_t result = sub_117EF50(v13, (uint64_t)v16);
  if ((v4 & 8) != 0)
  {
LABEL_31:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    unsigned int v17 = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!v17)
    {
      std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      unsigned int v17 = (std::string *)sub_1626BEC((uint64_t)v19);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v17;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v20 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v20 = &off_2541A68;
    }
    uint64_t result = sub_12329D0(v17, (uint64_t)v20);
  }
LABEL_39:
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16259C8()
{
  return 1;
}

void *sub_16259D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "dataservice.VersionUpdate");
}

void *sub_16259E0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1625A64((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1625A64(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2541AC0)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void **)(result + 24);
    if (v2)
    {
      sub_1623980(v2);
      operator delete();
    }
    uint64_t v3 = (void *)v1[4];
    if (v3)
    {
      sub_1623D6C(v3);
      operator delete();
    }
    int v4 = (void *)v1[5];
    if (v4)
    {
      sub_1623D6C(v4);
      operator delete();
    }
    uint64_t result = v1[6];
    if (result)
    {
      sub_1624B74(result);
      operator delete();
    }
  }
  return result;
}

void sub_1625B30(void *a1)
{
  sub_16259E0(a1);

  operator delete();
}

uint64_t sub_1625B68(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 24);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t result = sub_1623E18(*(void *)(v1 + 32));
      if ((v2 & 4) == 0)
      {
LABEL_7:
        if ((v2 & 8) == 0) {
          goto LABEL_9;
        }
        goto LABEL_8;
      }
    }
    else if ((v2 & 4) == 0)
    {
      goto LABEL_7;
    }
    uint64_t result = sub_1623E18(*(void *)(v1 + 40));
    if ((v2 & 8) != 0) {
LABEL_8:
    }
      uint64_t result = sub_1624C4C(*(void *)(v1 + 48));
  }
LABEL_9:
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1625C0C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v21 = a2;
  if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
    return v21;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v21 + 1;
    unsigned int v8 = *v21;
    if (*v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v21 + 2;
      }
    }
    uint64_t v21 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (!v11)
        {
          BOOL v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v12 = (void *)*v12;
          }
          uint64_t v11 = sub_1626A78((uint64_t)v12);
          *(void *)(a1 + 24) = v11;
          uint64_t v7 = v21;
        }
        uint64_t v13 = sub_16246E0(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 2u:
        if (v8 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (v14) {
          goto LABEL_26;
        }
        unint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v15 = (void *)*v15;
        }
        uint64_t v14 = sub_1626AF4((uint64_t)v15);
        *(void *)(a1 + 32) = v14;
        goto LABEL_25;
      case 3u:
        if (v8 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v14 = *(void *)(a1 + 40);
        if (v14) {
          goto LABEL_26;
        }
        uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v14 = sub_1626AF4((uint64_t)v16);
        *(void *)(a1 + 40) = v14;
LABEL_25:
        uint64_t v7 = v21;
LABEL_26:
        uint64_t v13 = sub_1624770(a3, v14, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 4u:
        if (v8 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        unsigned int v17 = *(void **)(a1 + 48);
        if (!v17)
        {
          std::string::size_type v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            std::string::size_type v18 = (void *)*v18;
          }
          unsigned int v17 = sub_1626BEC((uint64_t)v18);
          *(void *)(a1 + 48) = v17;
          uint64_t v7 = v21;
        }
        uint64_t v13 = (char *)sub_1625400(a3, (uint64_t)v17, (unsigned __int8 *)v7);
        goto LABEL_40;
      default:
LABEL_33:
        if (v8) {
          BOOL v19 = (v8 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v6)
          {
            uint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v21;
          }
          uint64_t v13 = (char *)sub_1885AC0(v8, v20, v7, a3);
LABEL_40:
          uint64_t v21 = v13;
          if (!v13) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
            return v21;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v21;
    }
  }
}

unsigned char *sub_1625E90(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1623BC4(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    BOOL v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    BOOL v12 = v4 + 2;
  }
  char v4 = sub_1624094(v10, (unint64_t)v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unint64_t v15 = v4 + 2;
  }
  char v4 = sub_1624094(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    unsigned char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      std::string::size_type v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      std::string::size_type v18 = v4 + 2;
    }
    char v4 = sub_1624DE8(v16, v18, a3);
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_16260E8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_1623CEC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_16242B4(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v9 = sub_16242B4(*(void *)(a1 + 40));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_10:
    uint64_t v6 = sub_1624EB4(*(void *)(a1 + 48));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1626228()
{
  return 1;
}

void *sub_1626230@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "dataservice.Patch");
}

uint64_t sub_1626240(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2541AF8)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_1623980(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_1623D6C(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_1624B74(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1626330(uint64_t a1)
{
  sub_1626240(a1);

  operator delete();
}

uint64_t sub_1626368(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 24);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_1623E18(*(void *)(v1 + 32));
    }
    if ((v2 & 4) != 0) {
      uint64_t result = sub_1624C4C(*(void *)(v1 + 40));
    }
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_16263F4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
    return v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v22 + 1;
    unsigned int v8 = *v22;
    if (*v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v22 + 2;
      }
    }
    uint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v16 = *(void **)(a1 + 40);
      if (!v16)
      {
        unsigned int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unsigned int v17 = (void *)*v17;
        }
        uint64_t v16 = sub_1626BEC((uint64_t)v17);
        *(void *)(a1 + 40) = v16;
        uint64_t v7 = v22;
      }
      unint64_t v15 = (char *)sub_1625400(a3, (uint64_t)v16, (unsigned __int8 *)v7);
      goto LABEL_38;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v18 = *(void *)(a1 + 32);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_1626AF4((uint64_t)v19);
      *(void *)(a1 + 32) = v18;
      uint64_t v7 = v22;
    }
    unint64_t v15 = sub_1624770(a3, v18, (unsigned __int8 *)v7);
LABEL_38:
    uint64_t v22 = v15;
    if (!v15) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
      return v22;
    }
  }
  if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 24);
    if (!v20)
    {
      unint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v21 = (void *)*v21;
      }
      uint64_t v20 = sub_1626A78((uint64_t)v21);
      *(void *)(a1 + 24) = v20;
      uint64_t v7 = v22;
    }
    unint64_t v15 = sub_16246E0(a3, v20, (unsigned __int8 *)v7);
    goto LABEL_38;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      unsigned int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v22;
    }
    unint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_38;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v22;
  }
  return 0;
}

unsigned char *sub_162660C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1623BC4(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    BOOL v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    BOOL v12 = v4 + 2;
  }
  char v4 = sub_1624094(v10, (unint64_t)v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    unsigned char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      unint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      unint64_t v15 = v4 + 2;
    }
    char v4 = sub_1624DE8(v13, v15, a3);
  }
LABEL_23:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_16267FC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if (v2)
  {
    uint64_t v4 = sub_1623CEC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_16242B4(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_1624EB4(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1626904(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) == 0) {
    goto LABEL_30;
  }
  if (v4)
  {
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v7 = (void *)*v7;
      }
      data = (std::string *)sub_1626A78((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_25419F8;
    }
    uint64_t result = sub_11A7934(data, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  unint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
  if (!v9)
  {
    std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
    unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      unsigned int v11 = (void *)*v11;
    }
    unint64_t v9 = (std::string *)sub_1626AF4((uint64_t)v11);
    v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
  }
  if (*(void *)(a2 + 32)) {
    BOOL v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    BOOL v12 = &off_2541A18;
  }
  uint64_t result = sub_117EF50(v9, (uint64_t)v12);
  if ((v4 & 4) != 0)
  {
LABEL_22:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v13)
    {
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        unint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = (std::string *)sub_1626BEC((uint64_t)v15);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_2541A68;
    }
    uint64_t result = sub_12329D0(v13, (uint64_t)v16);
  }
LABEL_30:
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1626A60()
{
  return 1;
}

void *sub_1626A68@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "dataservice.Data");
}

uint64_t sub_1626A78(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CA010;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1626AF4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CA090;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1626B70(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CA110;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_1626BEC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CA190;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

double sub_1626C70(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24CA210;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

double sub_1626CF0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24CA290;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

double sub_1626D70(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24CA310;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

uint64_t sub_1626DEC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24CA390;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = a2;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = a2;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = a2;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = a2;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = &qword_2550250;
  *(void *)(a1 + 272) = &qword_2550250;
  *(void *)(a1 + 280) = &qword_2550250;
  *(void *)(a1 + 288) = &qword_2550250;
  *(void *)(a1 + 296) = &qword_2550250;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_DWORD *)(a1 + 464) = 0;
  *(void *)(a1 + 468) = 0x100000001;
  return a1;
}

void sub_1626EC4(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1626EF8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unsigned int v61 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v60 = a1 + 16;
  *(void *)a1 = off_24CA390;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  int v4 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v5 = *(_DWORD *)(a2 + 56);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 64);
    uint64_t v7 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C52B4(v4, v7, (uint64_t *)(v6 + 8), v5, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v8 = *(_DWORD *)(a1 + 56) + v5;
    *(_DWORD *)(a1 + 56) = v8;
    unint64_t v9 = *(int **)(a1 + 64);
    if (*v9 < v8) {
      *unint64_t v9 = v8;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v10 = *(_DWORD *)(a2 + 80);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 88);
    BOOL v12 = (std::string **)sub_188CCE4(a1 + 72, v10);
    sub_188FB98(a1 + 72, v12, (const std::string **)(v11 + 8), v10, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v13 = *(_DWORD *)(a1 + 80) + v10;
    *(_DWORD *)(a1 + 80) = v13;
    std::string::size_type v14 = *(int **)(a1 + 88);
    if (*v14 < v13) {
      int *v14 = v13;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v15 = *(_DWORD *)(a2 + 104);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 112);
    uint64_t v17 = (uint64_t *)sub_188CCE4(a1 + 96, v15);
    sub_1368FF8((uint64_t *)(a1 + 96), v17, (uint64_t *)(v16 + 8), v15, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v18 = *(_DWORD *)(a1 + 104) + v15;
    *(_DWORD *)(a1 + 104) = v18;
    uint64_t v19 = *(int **)(a1 + 112);
    if (*v19 < v18) {
      int *v19 = v18;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v20 = *(_DWORD *)(a2 + 128);
  if (v20)
  {
    uint64_t v21 = *(void *)(a2 + 136);
    uint64_t v22 = (uint64_t *)sub_188CCE4(a1 + 120, v20);
    sub_12C5340((uint64_t *)(a1 + 120), v22, (uint64_t *)(v21 + 8), v20, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v23 = *(_DWORD *)(a1 + 128) + v20;
    *(_DWORD *)(a1 + 128) = v23;
    uint64_t v24 = *(int **)(a1 + 136);
    if (*v24 < v23) {
      *uint64_t v24 = v23;
    }
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  int v25 = *(_DWORD *)(a2 + 152);
  if (v25)
  {
    uint64_t v26 = *(void *)(a2 + 160);
    long long v27 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_163A144((uint64_t *)(a1 + 144), v27, (uint64_t *)(v26 + 8), v25, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v28 = *(_DWORD *)(a1 + 152) + v25;
    *(_DWORD *)(a1 + 152) = v28;
    int v29 = *(int **)(a1 + 160);
    if (*v29 < v28) {
      *int v29 = v28;
    }
  }
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  int v30 = *(_DWORD *)(a2 + 176);
  if (v30)
  {
    uint64_t v31 = *(void *)(a2 + 184);
    int v32 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_188FB98(a1 + 168, v32, (const std::string **)(v31 + 8), v30, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v33 = *(_DWORD *)(a1 + 176) + v30;
    *(_DWORD *)(a1 + 176) = v33;
    uint64_t v34 = *(int **)(a1 + 184);
    if (*v34 < v33) {
      *uint64_t v34 = v33;
    }
  }
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  int v35 = *(_DWORD *)(a2 + 200);
  if (v35)
  {
    uint64_t v36 = *(void *)(a2 + 208);
    uint64_t v37 = (std::string **)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_11DB348((uint64_t *)(a1 + 192), v37, (uint64_t *)(v36 + 8), v35, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v38 = *(_DWORD *)(a1 + 200) + v35;
    *(_DWORD *)(a1 + 200) = v38;
    uint64_t v39 = *(int **)(a1 + 208);
    if (*v39 < v38) {
      int *v39 = v38;
    }
  }
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  int v40 = *(_DWORD *)(a2 + 224);
  if (v40)
  {
    uint64_t v41 = *(void *)(a2 + 232);
    uint64_t v42 = (std::string **)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_188FB98(a1 + 216, v42, (const std::string **)(v41 + 8), v40, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v43 = *(_DWORD *)(a1 + 224) + v40;
    *(_DWORD *)(a1 + 224) = v43;
    uint64_t v44 = *(int **)(a1 + 232);
    if (*v44 < v43) {
      *uint64_t v44 = v43;
    }
  }
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 0;
  int v45 = *(_DWORD *)(a2 + 248);
  if (v45)
  {
    uint64_t v46 = *(void *)(a2 + 256);
    uint64_t v47 = (std::string **)sub_188CCE4(a1 + 240, *(_DWORD *)(a2 + 248));
    sub_188FB98(a1 + 240, v47, (const std::string **)(v46 + 8), v45, **(_DWORD **)(a1 + 256) - *(_DWORD *)(a1 + 248));
    int v48 = *(_DWORD *)(a1 + 248) + v45;
    *(_DWORD *)(a1 + 248) = v48;
    uint64_t v49 = *(int **)(a1 + 256);
    if (*v49 < v48) {
      *uint64_t v49 = v48;
    }
  }
  uint64_t v50 = *(void *)(a2 + 8);
  if (v50) {
    sub_188B4F8(v61, (v50 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v60, a2 + 16);
  *(void *)(a1 + 264) = &qword_2550250;
  int v51 = *(_DWORD *)(a2 + 40);
  if (v51)
  {
    uint64_t v52 = (uint64_t *)(*v61 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v61) {
      uint64_t v52 = (uint64_t *)*v52;
    }
    sub_1881DF4((std::string **)(a1 + 264), (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL), v52);
    int v51 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 272) = &qword_2550250;
  if ((v51 & 2) != 0)
  {
    v53 = (uint64_t *)(*v61 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v61) {
      v53 = (uint64_t *)*v53;
    }
    sub_1881DF4((std::string **)(a1 + 272), (long long *)(*(void *)(a2 + 272) & 0xFFFFFFFFFFFFFFFELL), v53);
    int v51 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 280) = &qword_2550250;
  if ((v51 & 4) != 0)
  {
    uint64_t v54 = (uint64_t *)(*v61 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v61) {
      uint64_t v54 = (uint64_t *)*v54;
    }
    sub_1881DF4((std::string **)(a1 + 280), (long long *)(*(void *)(a2 + 280) & 0xFFFFFFFFFFFFFFFELL), v54);
    int v51 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 288) = &qword_2550250;
  if ((v51 & 8) != 0)
  {
    unsigned int v55 = (uint64_t *)(*v61 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v61) {
      unsigned int v55 = (uint64_t *)*v55;
    }
    sub_1881DF4((std::string **)(a1 + 288), (long long *)(*(void *)(a2 + 288) & 0xFFFFFFFFFFFFFFFELL), v55);
    int v51 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 296) = &qword_2550250;
  if ((v51 & 0x10) != 0)
  {
    uint64_t v56 = (uint64_t *)(*v61 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v61) {
      uint64_t v56 = (uint64_t *)*v56;
    }
    sub_1881DF4((std::string **)(a1 + 296), (long long *)(*(void *)(a2 + 296) & 0xFFFFFFFFFFFFFFFELL), v56);
    int v51 = *(_DWORD *)(a2 + 40);
  }
  if ((v51 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 304) = 0;
  if ((v51 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 312) = 0;
  if ((v51 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 320) = 0;
  if ((v51 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 328) = 0;
  if ((v51 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 336) = 0;
  if ((v51 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 344) = 0;
  if ((v51 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 352) = 0;
  if ((v51 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 360) = 0;
  if ((v51 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 368) = 0;
  if ((v51 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 376) = 0;
  if ((v51 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 384) = 0;
  if ((v51 & 0x10000) != 0) {
    operator new();
  }
  *(void *)(a1 + 392) = 0;
  if ((v51 & 0x20000) != 0) {
    operator new();
  }
  *(void *)(a1 + 400) = 0;
  if ((v51 & 0x40000) != 0) {
    operator new();
  }
  *(void *)(a1 + 408) = 0;
  if ((v51 & 0x80000) != 0) {
    operator new();
  }
  *(void *)(a1 + 416) = 0;
  if ((v51 & 0x100000) != 0) {
    operator new();
  }
  *(void *)(a1 + 424) = 0;
  long long v57 = *(_OWORD *)(a2 + 432);
  long long v58 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 460) = *(_OWORD *)(a2 + 460);
  *(_OWORD *)(a1 + 432) = v57;
  *(_OWORD *)(a1 + 448) = v58;
  return a1;
}

void sub_1627800()
{
}

void *sub_1627A18(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1627B00((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 30);
  sub_1889DE8(a1 + 27);
  sub_11DB1BC(a1 + 24);
  sub_1889DE8(a1 + 21);
  sub_1639F44(a1 + 18);
  sub_12C5234(a1 + 15);
  sub_1368D54(a1 + 12);
  sub_1889DE8(a1 + 9);
  sub_12C51B4(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1627B00(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (*(uint64_t **)(result + 264) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 264));
  }
  if (*(uint64_t **)(result + 272) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 272));
  }
  if (*(uint64_t **)(result + 280) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 280));
  }
  if (*(uint64_t **)(result + 288) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 288));
  }
  if (*(uint64_t **)(result + 296) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 296));
  }
  if ((uint64_t (***)())result != &off_2541B28)
  {
    uint64_t v2 = *(void *)(result + 304);
    if (v2)
    {
      sub_13AE650(v2);
      operator delete();
    }
    uint64_t v3 = v1[39];
    if (v3)
    {
      sub_15B3D28(v3);
      operator delete();
    }
    int v4 = (void *)v1[40];
    if (v4)
    {
      sub_15B15FC(v4);
      operator delete();
    }
    if (v1[41])
    {
      sub_145A81C();
      operator delete();
    }
    int v5 = (void *)v1[42];
    if (v5)
    {
      sub_15B9EC0(v5);
      operator delete();
    }
    uint64_t v6 = v1[43];
    if (v6)
    {
      sub_13C10F0(v6);
      operator delete();
    }
    if (v1[44])
    {
      sub_14775B0();
      operator delete();
    }
    uint64_t v7 = v1[45];
    if (v7)
    {
      sub_13C19D8(v7);
      operator delete();
    }
    int v8 = (void *)v1[46];
    if (v8)
    {
      sub_13B18F4(v8);
      operator delete();
    }
    uint64_t v9 = v1[47];
    if (v9)
    {
      sub_15B3D28(v9);
      operator delete();
    }
    if (v1[48])
    {
      sub_13059CC();
      operator delete();
    }
    int v10 = (void *)v1[49];
    if (v10)
    {
      sub_1392DC4(v10);
      operator delete();
    }
    uint64_t v11 = v1[50];
    if (v11)
    {
      sub_13D13C0(v11);
      operator delete();
    }
    BOOL v12 = (void *)v1[51];
    if (v12)
    {
      sub_15C0CA8(v12);
      operator delete();
    }
    int v13 = (void *)v1[52];
    if (v13)
    {
      sub_13D4904(v13);
      operator delete();
    }
    double result = v1[53];
    if (result)
    {
      sub_13B230C((void *)result);
      operator delete();
    }
  }
  return result;
}

void sub_1627DB8(void *a1)
{
  sub_1627A18(a1);

  operator delete();
}

uint64_t sub_1627DF0(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_13E8D98(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  sub_188CC00(a1 + 72);
  uint64_t v5 = *(unsigned int *)(a1 + 104);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_13E8E44(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 128);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_15B043C(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 152);
  if ((int)v11 >= 1)
  {
    BOOL v12 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_13D0708(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 152) = 0;
  }
  sub_188CC00(a1 + 168);
  uint64_t v14 = *(unsigned int *)(a1 + 200);
  if ((int)v14 >= 1)
  {
    int v15 = (uint64_t *)(*(void *)(a1 + 208) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_15BAAF0(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 200) = 0;
  }
  sub_188CC00(a1 + 216);
  uint64_t result = sub_188CC00(a1 + 240);
  unsigned int v18 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v18) {
    goto LABEL_31;
  }
  if ((v18 & 1) == 0)
  {
    if ((v18 & 2) == 0) {
      goto LABEL_24;
    }
LABEL_74:
    unint64_t v24 = *(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v24 + 23) < 0)
    {
      **(unsigned char **)unint64_t v24 = 0;
      *(void *)(v24 + 8) = 0;
      if ((v18 & 4) != 0) {
        goto LABEL_78;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v24 = 0;
      *(unsigned char *)(v24 + 23) = 0;
      if ((v18 & 4) != 0) {
        goto LABEL_78;
      }
    }
LABEL_25:
    if ((v18 & 8) == 0) {
      goto LABEL_26;
    }
LABEL_82:
    unint64_t v26 = *(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v26 + 23) < 0)
    {
      **(unsigned char **)unint64_t v26 = 0;
      *(void *)(v26 + 8) = 0;
      if ((v18 & 0x10) != 0) {
        goto LABEL_86;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v26 = 0;
      *(unsigned char *)(v26 + 23) = 0;
      if ((v18 & 0x10) != 0) {
        goto LABEL_86;
      }
    }
LABEL_27:
    if ((v18 & 0x20) == 0) {
      goto LABEL_28;
    }
LABEL_90:
    uint64_t result = sub_13AE68C(*(void *)(a1 + 304));
    if ((v18 & 0x40) == 0)
    {
LABEL_29:
      if ((v18 & 0x80) == 0) {
        goto LABEL_31;
      }
      goto LABEL_30;
    }
    goto LABEL_91;
  }
  unint64_t v19 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v19 + 23) < 0)
  {
    **(unsigned char **)unint64_t v19 = 0;
    *(void *)(v19 + 8) = 0;
    if ((v18 & 2) != 0) {
      goto LABEL_74;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v19 = 0;
    *(unsigned char *)(v19 + 23) = 0;
    if ((v18 & 2) != 0) {
      goto LABEL_74;
    }
  }
LABEL_24:
  if ((v18 & 4) == 0) {
    goto LABEL_25;
  }
LABEL_78:
  unint64_t v25 = *(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v25 + 23) < 0)
  {
    **(unsigned char **)unint64_t v25 = 0;
    *(void *)(v25 + 8) = 0;
    if ((v18 & 8) != 0) {
      goto LABEL_82;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v25 = 0;
    *(unsigned char *)(v25 + 23) = 0;
    if ((v18 & 8) != 0) {
      goto LABEL_82;
    }
  }
LABEL_26:
  if ((v18 & 0x10) == 0) {
    goto LABEL_27;
  }
LABEL_86:
  unint64_t v27 = *(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v27 + 23) < 0)
  {
    **(unsigned char **)unint64_t v27 = 0;
    *(void *)(v27 + 8) = 0;
    if ((v18 & 0x20) != 0) {
      goto LABEL_90;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v27 = 0;
    *(unsigned char *)(v27 + 23) = 0;
    if ((v18 & 0x20) != 0) {
      goto LABEL_90;
    }
  }
LABEL_28:
  if ((v18 & 0x40) == 0) {
    goto LABEL_29;
  }
LABEL_91:
  uint64_t result = sub_15B043C(*(void *)(a1 + 312));
  if ((v18 & 0x80) != 0) {
LABEL_30:
  }
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 320));
LABEL_31:
  if ((v18 & 0xFF00) == 0) {
    goto LABEL_41;
  }
  if ((v18 & 0x100) != 0)
  {
    uint64_t result = sub_13E0F24(*(void *)(a1 + 328));
    if ((v18 & 0x200) == 0)
    {
LABEL_34:
      if ((v18 & 0x400) == 0) {
        goto LABEL_35;
      }
      goto LABEL_51;
    }
  }
  else if ((v18 & 0x200) == 0)
  {
    goto LABEL_34;
  }
  uint64_t result = sub_15B9F6C(*(void *)(a1 + 336));
  if ((v18 & 0x400) == 0)
  {
LABEL_35:
    if ((v18 & 0x800) == 0) {
      goto LABEL_36;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = sub_13C112C(*(void *)(a1 + 344));
  if ((v18 & 0x800) == 0)
  {
LABEL_36:
    if ((v18 & 0x1000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = sub_13E123C(*(void *)(a1 + 352));
  if ((v18 & 0x1000) == 0)
  {
LABEL_37:
    if ((v18 & 0x2000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = sub_13C1A14(*(void *)(a1 + 360));
  if ((v18 & 0x2000) == 0)
  {
LABEL_38:
    if ((v18 & 0x4000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = sub_13B1930(*(void *)(a1 + 368));
  if ((v18 & 0x4000) == 0)
  {
LABEL_39:
    if ((v18 & 0x8000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_40;
  }
LABEL_55:
  uint64_t result = sub_15B043C(*(void *)(a1 + 376));
  if ((v18 & 0x8000) != 0) {
LABEL_40:
  }
    uint64_t result = (uint64_t)sub_1305A08(*(void *)(a1 + 384));
LABEL_41:
  if ((v18 & 0x1F0000) == 0) {
    goto LABEL_65;
  }
  if ((v18 & 0x10000) != 0)
  {
    uint64_t result = sub_1392E00(*(void *)(a1 + 392));
    if ((v18 & 0x20000) == 0)
    {
LABEL_44:
      if ((v18 & 0x40000) == 0) {
        goto LABEL_61;
      }
LABEL_59:
      uint64_t v20 = *(void *)(a1 + 408);
      char v21 = *(unsigned char *)(v20 + 8);
      uint64_t result = v20 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v21) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
      goto LABEL_61;
    }
  }
  else if ((v18 & 0x20000) == 0)
  {
    goto LABEL_44;
  }
  uint64_t result = sub_13D13FC(*(void *)(a1 + 400));
  if ((v18 & 0x40000) != 0) {
    goto LABEL_59;
  }
LABEL_61:
  if ((v18 & 0x80000) != 0) {
    uint64_t result = sub_13D4940(*(void *)(a1 + 416));
  }
  if ((v18 & 0x100000) != 0) {
    uint64_t result = sub_13B2348(*(void *)(a1 + 424));
  }
LABEL_65:
  if ((v18 & 0xE00000) != 0)
  {
    *(unsigned char *)(a1 + 440) = 0;
    *(void *)(a1 + 432) = 0;
  }
  if (HIBYTE(v18))
  {
    *(void *)(a1 + 464) = 0x100000000;
    *(void *)(a1 + 449) = 0;
    *(void *)(a1 + 441) = 0;
    *(void *)(a1 + 457) = 0;
    *(_DWORD *)(a1 + 472) = 1;
  }
  char v23 = *(unsigned char *)(a1 + 8);
  uint64_t v22 = a1 + 8;
  *(_DWORD *)(v22 + 32) = 0;
  if (v23)
  {
    return sub_188B4AC((uint64_t *)v22);
  }
  return result;
}

unsigned __int8 *sub_162819C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v168 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v168, a3[11].i32[1]))
  {
LABEL_2:
    uint64_t v6 = *(unsigned __int8 **)v168;
    goto LABEL_3;
  }
  v166 = (uint64_t **)(a1 + 216);
  v167 = (uint64_t **)(a1 + 240);
  v164 = (uint64_t *)(a1 + 8);
  v165 = (uint64_t *)(a1 + 192);
  uint64_t v8 = (uint64_t **)(a1 + 168);
  uint64_t v9 = (uint64_t **)(a1 + 72);
  while (2)
  {
    uint64_t v6 = (unsigned __int8 *)(*(void *)v168 + 1);
    unsigned int v10 = **(unsigned char **)v168;
    if ((char)**(unsigned char **)v168 < 0)
    {
      unsigned int v11 = v10 + (*v6 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v6 < 0)
      {
        uint64_t v6 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v168, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v6 = (unsigned __int8 *)(*(void *)v168 + 2);
      }
    }
    *(void *)v168 = v6;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v13 = *(void *)(a1 + 304);
        if (!v13)
        {
          uint64_t v14 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v164) {
            uint64_t v14 = (void *)*v14;
          }
          uint64_t v13 = sub_13D8F60((uint64_t)v14);
          *(void *)(a1 + 304) = v13;
          uint64_t v6 = *(unsigned __int8 **)v168;
        }
        uint64_t v15 = sub_1352A74(a3, v13, v6);
        goto LABEL_191;
      case 2u:
        if (v10 != 18) {
          goto LABEL_283;
        }
        uint64_t v22 = (char *)(v6 - 1);
        while (1)
        {
          char v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)v168 = v22 + 1;
          unint64_t v24 = *(_DWORD **)(a1 + 64);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 56) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_1479450(*(void *)(a1 + 48));
            uint64_t v26 = sub_188CDC8(a1 + 48, v27);
            char v23 = *(unsigned __int8 **)v168;
          }
          uint64_t v22 = sub_12BD720(a3, v26, v23);
          *(void *)v168 = v22;
          if (!v22) {
            goto LABEL_321;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 18) {
            goto LABEL_192;
          }
        }
      case 3u:
        if (v10 != 24) {
          goto LABEL_283;
        }
        v5 |= 0x40000000u;
        int v28 = (char *)(v6 + 1);
        int v29 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v146 = sub_188C0D0((uint64_t)v6, v29);
          *(void *)v168 = v146;
          *(_DWORD *)(a1 + 468) = v147;
          if (!v146) {
            goto LABEL_321;
          }
        }
        else
        {
          int v28 = (char *)(v6 + 2);
LABEL_41:
          *(void *)v168 = v28;
          *(_DWORD *)(a1 + 468) = v29;
        }
        goto LABEL_192;
      case 4u:
        if (v10 != 34) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v31 = *(void *)(a1 + 312);
        if (v31) {
          goto LABEL_155;
        }
        int v32 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v164) {
          int v32 = (void *)*v32;
        }
        uint64_t v31 = sub_15C1CB4((uint64_t)v32);
        *(void *)(a1 + 312) = v31;
        goto LABEL_154;
      case 5u:
        if (v10 != 42) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v33 = *(void *)(a1 + 320);
        if (!v33)
        {
          uint64_t v34 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v164) {
            uint64_t v34 = (void *)*v34;
          }
          uint64_t v33 = sub_15C19EC((uint64_t)v34);
          *(void *)(a1 + 320) = v33;
          uint64_t v6 = *(unsigned __int8 **)v168;
        }
        uint64_t v15 = (uint64_t)sub_11E1C60(a3, v33, v6);
        goto LABEL_191;
      case 6u:
        if (v10 != 50) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v35 = *(void *)(a1 + 8);
        uint64_t v36 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          uint64_t v36 = (uint64_t *)*v36;
        }
        uint64_t v37 = (void *)(a1 + 264);
        goto LABEL_190;
      case 7u:
        if (v10 != 58) {
          goto LABEL_283;
        }
        int v38 = (const std::string::value_type *)(v6 - 1);
        while (1)
        {
          uint64_t v39 = (char *)(v38 + 1);
          *(void *)v168 = v38 + 1;
          int v40 = *(_DWORD **)(a1 + 88);
          if (v40 && (uint64_t v41 = *(int *)(a1 + 80), (int)v41 < *v40))
          {
            *(_DWORD *)(a1 + 80) = v41 + 1;
            uint64_t v42 = *(std::string **)&v40[2 * v41 + 2];
          }
          else
          {
            if (!*v9) {
              operator new();
            }
            *uint64_t v44 = v43;
            v44[1] = sub_3A6EDC;
            *int v43 = 0;
            v43[1] = 0;
            v43[2] = 0;
            uint64_t v42 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v43);
            uint64_t v39 = *(char **)v168;
          }
          int v38 = sub_188C244(v42, v39, (uint64_t)a3);
          *(void *)v168 = v38;
          if (!v38) {
            goto LABEL_321;
          }
          if (*(void *)a3 <= (unint64_t)v38 || *v38 != 58) {
            goto LABEL_192;
          }
        }
      case 8u:
        if (v10 != 64) {
          goto LABEL_283;
        }
        v5 |= 0x200000u;
        int v45 = (char *)(v6 + 1);
        int v46 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_73;
        }
        int v47 = *v45;
        int v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v148 = sub_188C0D0((uint64_t)v6, v46);
          *(void *)v168 = v148;
          *(_DWORD *)(a1 + 432) = v149;
          if (!v148) {
            goto LABEL_321;
          }
        }
        else
        {
          int v45 = (char *)(v6 + 2);
LABEL_73:
          *(void *)v168 = v45;
          *(_DWORD *)(a1 + 432) = v46;
        }
        goto LABEL_192;
      case 9u:
        if (v10 != 74) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v48 = *(void *)(a1 + 328);
        if (!v48)
        {
          uint64_t v49 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v164) {
            uint64_t v49 = (void *)*v49;
          }
          sub_1478B2C((uint64_t)v49);
          uint64_t v48 = v50;
          *(void *)(a1 + 328) = v50;
          uint64_t v6 = *(unsigned __int8 **)v168;
        }
        uint64_t v15 = sub_1281B58(a3, v48, v6);
        goto LABEL_191;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v51 = *(void *)(a1 + 8);
        uint64_t v36 = (uint64_t *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
        if (v51) {
          uint64_t v36 = (uint64_t *)*v36;
        }
        uint64_t v37 = (void *)(a1 + 272);
        goto LABEL_190;
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x11u:
      case 0x29u:
        goto LABEL_283;
      case 0x10u:
        if (v10 != 133) {
          goto LABEL_283;
        }
        int v53 = *(_DWORD *)v6;
        uint64_t v52 = v6 + 4;
        v5 |= 0x400000u;
        *(_DWORD *)(a1 + 436) = v53;
        goto LABEL_196;
      case 0x12u:
        if (v10 != 144) {
          goto LABEL_283;
        }
        v5 |= 0x800000u;
        uint64_t v54 = (char *)(v6 + 1);
        uint64_t v55 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_90;
        }
        int v56 = *v54;
        uint64_t v55 = v55 + (v56 << 7) - 128;
        if (v56 < 0)
        {
          uint64_t v150 = sub_188C138((uint64_t)v6, v55);
          *(void *)v168 = v150;
          *(unsigned char *)(a1 + 440) = v151 != 0;
          if (!v150) {
            goto LABEL_321;
          }
        }
        else
        {
          uint64_t v54 = (char *)(v6 + 2);
LABEL_90:
          *(void *)v168 = v54;
          *(unsigned char *)(a1 + 440) = v55 != 0;
        }
        goto LABEL_192;
      case 0x13u:
        if (v10 != 154) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        long long v57 = *(void **)(a1 + 336);
        if (!v57)
        {
          long long v58 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v164) {
            long long v58 = (void *)*v58;
          }
          long long v57 = sub_15C2014((uint64_t)v58);
          *(void *)(a1 + 336) = v57;
          uint64_t v6 = *(unsigned __int8 **)v168;
        }
        uint64_t v15 = (uint64_t)sub_11EAA5C(a3, (uint64_t)v57, v6);
        goto LABEL_191;
      case 0x14u:
        if (v10 != 162) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        v59 = *(void **)(a1 + 344);
        if (!v59)
        {
          uint64_t v60 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v164) {
            uint64_t v60 = (void *)*v60;
          }
          v59 = sub_13D9B50((uint64_t)v60);
          *(void *)(a1 + 344) = v59;
          uint64_t v6 = *(unsigned __int8 **)v168;
        }
        uint64_t v15 = sub_162950C(a3, (uint64_t)v59, v6);
        goto LABEL_191;
      case 0x15u:
        if (v10 != 170) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v61 = *(void *)(a1 + 352);
        if (!v61)
        {
          v62 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v164) {
            v62 = (void *)*v62;
          }
          uint64_t v61 = sub_1479978((uint64_t)v62);
          *(void *)(a1 + 352) = v61;
          uint64_t v6 = *(unsigned __int8 **)v168;
        }
        uint64_t v15 = sub_1352B04(a3, v61, v6);
        goto LABEL_191;
      case 0x16u:
        if (v10 != 178) {
          goto LABEL_283;
        }
        uint64_t v63 = (char *)(v6 - 2);
        while (1)
        {
          uint64_t v64 = (unsigned __int8 *)(v63 + 2);
          *(void *)v168 = v63 + 2;
          uint64_t v65 = *(_DWORD **)(a1 + 112);
          if (v65 && (uint64_t v66 = *(int *)(a1 + 104), (int)v66 < *v65))
          {
            *(_DWORD *)(a1 + 104) = v66 + 1;
            uint64_t v67 = *(void *)&v65[2 * v66 + 2];
          }
          else
          {
            sub_1479774(*(void *)(a1 + 96));
            uint64_t v67 = sub_188CDC8(a1 + 96, v68);
            uint64_t v64 = *(unsigned __int8 **)v168;
          }
          uint64_t v63 = sub_13529E4(a3, v67, v64);
          *(void *)v168 = v63;
          if (!v63) {
            goto LABEL_321;
          }
          if (*(void *)a3 <= (unint64_t)v63 || *(_WORD *)v63 != 434) {
            goto LABEL_192;
          }
        }
      case 0x17u:
        if (v10 != 186) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        uint64_t v69 = *(void *)(a1 + 360);
        if (!v69)
        {
          unint64_t v70 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v164) {
            unint64_t v70 = (void *)*v70;
          }
          sub_13D9BD8((uint64_t)v70);
          uint64_t v69 = v71;
          *(void *)(a1 + 360) = v71;
          uint64_t v6 = *(unsigned __int8 **)v168;
        }
        uint64_t v15 = sub_162959C(a3, v69, v6);
        goto LABEL_191;
      case 0x18u:
        if (v10 != 192) {
          goto LABEL_283;
        }
        v5 |= 0x2000000u;
        uint64_t v72 = (char *)(v6 + 1);
        int v73 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_129;
        }
        int v74 = *v72;
        int v73 = v73 + (v74 << 7) - 128;
        if (v74 < 0)
        {
          uint64_t v152 = sub_188C0D0((uint64_t)v6, v73);
          *(void *)v168 = v152;
          *(_DWORD *)(a1 + 444) = v153;
          if (!v152) {
            goto LABEL_321;
          }
        }
        else
        {
          uint64_t v72 = (char *)(v6 + 2);
LABEL_129:
          *(void *)v168 = v72;
          *(_DWORD *)(a1 + 444) = v73;
        }
        goto LABEL_192;
      case 0x19u:
        if (v10 != 202) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v75 = *(void *)(a1 + 8);
        uint64_t v36 = (uint64_t *)(v75 & 0xFFFFFFFFFFFFFFFCLL);
        if (v75) {
          uint64_t v36 = (uint64_t *)*v36;
        }
        uint64_t v37 = (void *)(a1 + 280);
        goto LABEL_190;
      case 0x1Au:
        if (v10 != 208) {
          goto LABEL_283;
        }
        v5 |= 0x1000000u;
        uint64_t v76 = (char *)(v6 + 1);
        uint64_t v77 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_138;
        }
        int v78 = *v76;
        uint64_t v77 = v77 + (v78 << 7) - 128;
        if (v78 < 0)
        {
          uint64_t v154 = sub_188C138((uint64_t)v6, v77);
          *(void *)v168 = v154;
          *(unsigned char *)(a1 + 441) = v155 != 0;
          if (!v154) {
            goto LABEL_321;
          }
        }
        else
        {
          uint64_t v76 = (char *)(v6 + 2);
LABEL_138:
          *(void *)v168 = v76;
          *(unsigned char *)(a1 + 441) = v77 != 0;
        }
        goto LABEL_192;
      case 0x1Bu:
        if (v10 != 218) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000u;
        uint64_t v79 = *(void *)(a1 + 368);
        if (!v79)
        {
          v80 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v164) {
            v80 = (void *)*v80;
          }
          uint64_t v79 = sub_13D9048((uint64_t)v80);
          *(void *)(a1 + 368) = v79;
          uint64_t v6 = *(unsigned __int8 **)v168;
        }
        uint64_t v15 = (uint64_t)sub_13E34EC(a3, v79, v6);
        goto LABEL_191;
      case 0x1Cu:
        if (v10 != 226) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v81 = *(void *)(a1 + 8);
        uint64_t v36 = (uint64_t *)(v81 & 0xFFFFFFFFFFFFFFFCLL);
        if (v81) {
          uint64_t v36 = (uint64_t *)*v36;
        }
        uint64_t v37 = (void *)(a1 + 288);
        goto LABEL_190;
      case 0x1Du:
        if (v10 != 234) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000u;
        uint64_t v31 = *(void *)(a1 + 376);
        if (v31) {
          goto LABEL_155;
        }
        uint64_t v82 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v164) {
          uint64_t v82 = (void *)*v82;
        }
        uint64_t v31 = sub_15C1CB4((uint64_t)v82);
        *(void *)(a1 + 376) = v31;
LABEL_154:
        uint64_t v6 = *(unsigned __int8 **)v168;
LABEL_155:
        uint64_t v15 = (uint64_t)sub_11B3E48(a3, v31, v6);
        goto LABEL_191;
      case 0x1Eu:
        if (v10 != 240) {
          goto LABEL_283;
        }
        v83 = (char *)(v6 + 1);
        unint64_t v84 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_160;
        }
        int v85 = *v83;
        int v86 = v84 + (v85 << 7);
        unint64_t v84 = (v86 - 128);
        if (v85 < 0)
        {
          *(void *)v168 = sub_188C138((uint64_t)v6, (v86 - 128));
          if (!*(void *)v168) {
            goto LABEL_321;
          }
          unint64_t v84 = v156;
        }
        else
        {
          v83 = (char *)(v6 + 2);
LABEL_160:
          *(void *)v168 = v83;
        }
        if (v84 <= 4)
        {
          *(_DWORD *)(a1 + 40) |= 0x80000000;
          *(_DWORD *)(a1 + 472) = v84;
          goto LABEL_192;
        }
        if (*v164) {
          v162 = (std::string *)((*v164 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v162 = (std::string *)sub_188DBD8(v164);
        }
        int v163 = 30;
        goto LABEL_317;
      case 0x1Fu:
        if (v10 != 250) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000u;
        v87 = *(void **)(a1 + 384);
        if (!v87)
        {
          v88 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v164) {
            v88 = (void *)*v88;
          }
          v87 = sub_130645C((uint64_t)v88);
          *(void *)(a1 + 384) = v87;
          uint64_t v6 = *(unsigned __int8 **)v168;
        }
        uint64_t v15 = (uint64_t)sub_1192188(a3, (uint64_t)v87, v6);
        goto LABEL_191;
      case 0x20u:
        if (v10 != 2) {
          goto LABEL_283;
        }
        uint64_t v89 = (char *)(v6 - 2);
        while (1)
        {
          v90 = (unsigned __int8 *)(v89 + 2);
          *(void *)v168 = v89 + 2;
          v91 = *(_DWORD **)(a1 + 136);
          if (v91 && (uint64_t v92 = *(int *)(a1 + 128), (int)v92 < *v91))
          {
            *(_DWORD *)(a1 + 128) = v92 + 1;
            uint64_t v93 = *(void *)&v91[2 * v92 + 2];
          }
          else
          {
            uint64_t v94 = sub_15C1CB4(*(void *)(a1 + 120));
            uint64_t v93 = sub_188CDC8(a1 + 120, v94);
            v90 = *(unsigned __int8 **)v168;
          }
          uint64_t v89 = sub_11B3E48(a3, v93, v90);
          *(void *)v168 = v89;
          if (!v89) {
            goto LABEL_321;
          }
          if (*(void *)a3 <= (unint64_t)v89 || *(_WORD *)v89 != 642) {
            goto LABEL_192;
          }
        }
      case 0x21u:
        if (v10 != 8) {
          goto LABEL_283;
        }
        v95 = (char *)(v6 + 1);
        unint64_t v84 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_183;
        }
        int v96 = *v95;
        int v97 = v84 + (v96 << 7);
        unint64_t v84 = (v97 - 128);
        if (v96 < 0)
        {
          *(void *)v168 = sub_188C138((uint64_t)v6, (v97 - 128));
          if (!*(void *)v168) {
            goto LABEL_321;
          }
          unint64_t v84 = v157;
        }
        else
        {
          v95 = (char *)(v6 + 2);
LABEL_183:
          *(void *)v168 = v95;
        }
        if (v84 > 3)
        {
          if (*v164) {
            v162 = (std::string *)((*v164 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v162 = (std::string *)sub_188DBD8(v164);
          }
          int v163 = 33;
LABEL_317:
          sub_188C020(v163, v84, v162);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x8000000u;
          *(_DWORD *)(a1 + 456) = v84;
        }
        goto LABEL_192;
      case 0x22u:
        if (v10 != 18) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v98 = *(void *)(a1 + 8);
        uint64_t v36 = (uint64_t *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
        if (v98) {
          uint64_t v36 = (uint64_t *)*v36;
        }
        uint64_t v37 = (void *)(a1 + 296);
LABEL_190:
        v99 = (std::string *)sub_1880F84(v37, v36);
        uint64_t v15 = (uint64_t)sub_188C244(v99, *(char **)v168, (uint64_t)a3);
        goto LABEL_191;
      case 0x23u:
        if (v10 != 25) {
          goto LABEL_283;
        }
        uint64_t v100 = *(void *)v6;
        uint64_t v52 = v6 + 8;
        v5 |= 0x4000000u;
        *(void *)(a1 + 448) = v100;
LABEL_196:
        *(void *)v168 = v52;
        goto LABEL_192;
      case 0x24u:
        if (v10 != 34) {
          goto LABEL_283;
        }
        v101 = (char *)(v6 - 2);
        while (1)
        {
          v102 = (unsigned __int8 *)(v101 + 2);
          *(void *)v168 = v101 + 2;
          v103 = *(_DWORD **)(a1 + 160);
          if (v103 && (uint64_t v104 = *(int *)(a1 + 152), (int)v104 < *v103))
          {
            *(_DWORD *)(a1 + 152) = v104 + 1;
            uint64_t v105 = *(void *)&v103[2 * v104 + 2];
          }
          else
          {
            sub_13DA9CC(*(void *)(a1 + 144));
            uint64_t v105 = sub_188CDC8(a1 + 144, v106);
            v102 = *(unsigned __int8 **)v168;
          }
          v101 = sub_13DB590(a3, v105, v102);
          *(void *)v168 = v101;
          if (!v101) {
            goto LABEL_321;
          }
          if (*(void *)a3 <= (unint64_t)v101 || *(_WORD *)v101 != 674) {
            goto LABEL_192;
          }
        }
      case 0x25u:
        if (v10 != 42) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000u;
        uint64_t v107 = *(void *)(a1 + 392);
        if (!v107)
        {
          v108 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v164) {
            v108 = (void *)*v108;
          }
          uint64_t v107 = sub_13D80BC((uint64_t)v108);
          *(void *)(a1 + 392) = v107;
          uint64_t v6 = *(unsigned __int8 **)v168;
        }
        uint64_t v15 = (uint64_t)sub_13EB538(a3, v107, v6);
        goto LABEL_191;
      case 0x26u:
        if (v10 != 48) {
          goto LABEL_283;
        }
        v5 |= 0x10000000u;
        v109 = (char *)(v6 + 1);
        int v110 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_217;
        }
        int v111 = *v109;
        int v110 = v110 + (v111 << 7) - 128;
        if (v111 < 0)
        {
          uint64_t v158 = sub_188C0D0((uint64_t)v6, v110);
          *(void *)v168 = v158;
          *(_DWORD *)(a1 + 460) = v159;
          if (!v158) {
            goto LABEL_321;
          }
        }
        else
        {
          v109 = (char *)(v6 + 2);
LABEL_217:
          *(void *)v168 = v109;
          *(_DWORD *)(a1 + 460) = v110;
        }
        goto LABEL_192;
      case 0x27u:
        if (v10 != 58) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000u;
        uint64_t v112 = *(void *)(a1 + 400);
        if (!v112)
        {
          v113 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v164) {
            v113 = (void *)*v113;
          }
          uint64_t v112 = sub_13DAA4C((uint64_t)v113);
          *(void *)(a1 + 400) = v112;
          uint64_t v6 = *(unsigned __int8 **)v168;
        }
        uint64_t v15 = sub_13E360C(a3, v112, v6);
        goto LABEL_191;
      case 0x28u:
        if (v10 != 66) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000u;
        uint64_t v114 = *(void *)(a1 + 408);
        if (!v114)
        {
          v115 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v164) {
            v115 = (void *)*v115;
          }
          uint64_t v114 = sub_15C26A4((uint64_t)v115);
          *(void *)(a1 + 408) = v114;
          uint64_t v6 = *(unsigned __int8 **)v168;
        }
        uint64_t v15 = (uint64_t)sub_1352B94(a3, v114, v6);
        goto LABEL_191;
      case 0x2Au:
        if (v10 != 82) {
          goto LABEL_283;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000u;
        uint64_t v116 = *(void *)(a1 + 416);
        if (!v116)
        {
          v117 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v164) {
            v117 = (void *)*v117;
          }
          uint64_t v116 = sub_13DAC1C((uint64_t)v117);
          *(void *)(a1 + 416) = v116;
          uint64_t v6 = *(unsigned __int8 **)v168;
        }
        uint64_t v15 = (uint64_t)sub_13E369C(a3, v116, v6);
        goto LABEL_191;
      case 0x2Bu:
        if (v10 != 90) {
          goto LABEL_283;
        }
        v118 = (const std::string::value_type *)(v6 - 2);
        while (1)
        {
          v119 = (char *)(v118 + 2);
          *(void *)v168 = v118 + 2;
          v120 = *(_DWORD **)(a1 + 184);
          if (v120 && (uint64_t v121 = *(int *)(a1 + 176), (int)v121 < *v120))
          {
            *(_DWORD *)(a1 + 176) = v121 + 1;
            v122 = *(std::string **)&v120[2 * v121 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v124 = v123;
            v124[1] = sub_3A6EDC;
            void *v123 = 0;
            v123[1] = 0;
            v123[2] = 0;
            v122 = (std::string *)sub_188CDC8(a1 + 168, (uint64_t)v123);
            v119 = *(char **)v168;
          }
          v118 = sub_188C244(v122, v119, (uint64_t)a3);
          *(void *)v168 = v118;
          if (!v118) {
            goto LABEL_321;
          }
          if (*(void *)a3 <= (unint64_t)v118 || *(_WORD *)v118 != 730) {
            goto LABEL_192;
          }
        }
      case 0x2Cu:
        if (v10 == 98)
        {
          *(_DWORD *)(a1 + 40) |= 0x100000u;
          uint64_t v125 = *(void *)(a1 + 424);
          if (!v125)
          {
            v126 = (void *)(*v164 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v164) {
              v126 = (void *)*v126;
            }
            uint64_t v125 = sub_13D90CC((uint64_t)v126);
            *(void *)(a1 + 424) = v125;
            uint64_t v6 = *(unsigned __int8 **)v168;
          }
          uint64_t v15 = sub_13E372C(a3, v125, v6);
LABEL_191:
          *(void *)v168 = v15;
          if (!v15) {
            goto LABEL_321;
          }
LABEL_192:
          if (sub_11947B8((uint64_t)a3, (char **)v168, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_283:
        if (v10) {
          BOOL v144 = (v10 & 7) == 4;
        }
        else {
          BOOL v144 = 1;
        }
        if (!v144)
        {
          if (v10 - 7648 < 0x7A8 || v10 - 80008 <= 0x31F)
          {
            uint64_t v15 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v10, (char *)v6, (uint64_t)&off_2541B28, v164, a3);
          }
          else
          {
            if (*v164)
            {
              v145 = (std::string *)((*v164 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v145 = (std::string *)sub_188DBD8(v164);
              uint64_t v6 = *(unsigned __int8 **)v168;
            }
            uint64_t v15 = (uint64_t)sub_1885AC0(v10, v145, (char *)v6, a3);
          }
          goto LABEL_191;
        }
        if (v6) {
          a3[10].i32[0] = v10 - 1;
        }
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v5;
        return v6;
      default:
        switch(v10 >> 3)
        {
          case 'd':
            if (v10 != 34) {
              goto LABEL_283;
            }
            uint64_t v16 = v6 - 2;
            while (1)
            {
              uint64_t v17 = v16 + 2;
              *(void *)v168 = v16 + 2;
              unsigned int v18 = *(_DWORD **)(a1 + 208);
              if (v18 && (uint64_t v19 = *(int *)(a1 + 200), (int)v19 < *v18))
              {
                *(_DWORD *)(a1 + 200) = v19 + 1;
                uint64_t v20 = *(void *)&v18[2 * v19 + 2];
              }
              else
              {
                uint64_t v21 = sub_15C2114(*v165);
                uint64_t v20 = sub_188CDC8((uint64_t)v165, v21);
                uint64_t v17 = *(unsigned __int8 **)v168;
              }
              uint64_t v16 = (unsigned __int8 *)sub_11A058C(a3, v20, v17);
              *(void *)v168 = v16;
              if (!v16) {
                goto LABEL_321;
              }
              if (*(void *)a3 <= (unint64_t)v16 || *(_WORD *)v16 != 1698) {
                goto LABEL_192;
              }
            }
          case 'e':
            if (v10 != 42) {
              goto LABEL_283;
            }
            v127 = (const std::string::value_type *)(v6 - 2);
            while (1)
            {
              v128 = (char *)(v127 + 2);
              *(void *)v168 = v127 + 2;
              v129 = *(_DWORD **)(a1 + 232);
              if (v129 && (uint64_t v130 = *(int *)(a1 + 224), (int)v130 < *v129))
              {
                *(_DWORD *)(a1 + 224) = v130 + 1;
                v131 = *(std::string **)&v129[2 * v130 + 2];
              }
              else
              {
                if (!*v166) {
                  operator new();
                }
                void *v133 = v132;
                v133[1] = sub_3A6EDC;
                void *v132 = 0;
                v132[1] = 0;
                v132[2] = 0;
                v131 = (std::string *)sub_188CDC8((uint64_t)v166, (uint64_t)v132);
                v128 = *(char **)v168;
              }
              v127 = sub_188C244(v131, v128, (uint64_t)a3);
              *(void *)v168 = v127;
              if (!v127) {
                goto LABEL_321;
              }
              if (*(void *)a3 <= (unint64_t)v127 || *(_WORD *)v127 != 1706) {
                goto LABEL_192;
              }
            }
          case 'f':
            if (v10 != 50) {
              goto LABEL_283;
            }
            v134 = (const std::string::value_type *)(v6 - 2);
            while (1)
            {
              v135 = (char *)(v134 + 2);
              *(void *)v168 = v134 + 2;
              v136 = *(_DWORD **)(a1 + 256);
              if (v136 && (uint64_t v137 = *(int *)(a1 + 248), (int)v137 < *v136))
              {
                *(_DWORD *)(a1 + 248) = v137 + 1;
                v138 = *(std::string **)&v136[2 * v137 + 2];
              }
              else
              {
                if (!*v167) {
                  operator new();
                }
                void *v140 = v139;
                v140[1] = sub_3A6EDC;
                void *v139 = 0;
                v139[1] = 0;
                v139[2] = 0;
                v138 = (std::string *)sub_188CDC8((uint64_t)v167, (uint64_t)v139);
                v135 = *(char **)v168;
              }
              v134 = sub_188C244(v138, v135, (uint64_t)a3);
              *(void *)v168 = v134;
              if (!v134) {
                goto LABEL_321;
              }
              if (*(void *)a3 <= (unint64_t)v134 || *(_WORD *)v134 != 1714) {
                goto LABEL_192;
              }
            }
          case 'g':
            if (v10 != 56) {
              goto LABEL_283;
            }
            v5 |= 0x20000000u;
            v141 = (char *)(v6 + 1);
            int v142 = *v6;
            if (((char)*v6 & 0x80000000) == 0) {
              goto LABEL_282;
            }
            int v143 = *v141;
            int v142 = v142 + (v143 << 7) - 128;
            if (v143 < 0)
            {
              uint64_t v160 = sub_188C0D0((uint64_t)v6, v142);
              *(void *)v168 = v160;
              *(_DWORD *)(a1 + 464) = v161;
              if (!v160)
              {
LABEL_321:
                uint64_t v6 = 0;
                goto LABEL_3;
              }
            }
            else
            {
              v141 = (char *)(v6 + 2);
LABEL_282:
              *(void *)v168 = v141;
              *(_DWORD *)(a1 + 464) = v142;
            }
            break;
          default:
            goto LABEL_283;
        }
        goto LABEL_192;
    }
  }
}

uint64_t sub_162950C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C11B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_162959C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C1AA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_162962C(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 304);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      uint64_t v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      uint64_t v9 = v4 + 2;
    }
    uint64_t v4 = sub_13AFD70(v7, (unint64_t)v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_146FD9C(v12, v14, a3);
    }
  }
  if ((v6 & 0x40000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 468);
    char *v4 = 24;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 312);
    char *v4 = 34;
    unsigned int v23 = *(_DWORD *)(v22 + 44);
    v4[1] = v23;
    if (v23 > 0x7F) {
      unint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      unint64_t v24 = v4 + 2;
    }
    uint64_t v4 = sub_15B43E4(v22, v24, a3);
    if ((v6 & 0x80) == 0)
    {
LABEL_25:
      if ((v6 & 1) == 0) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_25;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v30 = *(void *)(a1 + 320);
  char *v4 = 42;
  unsigned int v31 = *(_DWORD *)(v30 + 20);
  v4[1] = v31;
  if (v31 > 0x7F) {
    int v32 = sub_188A9CC(v31, v4 + 1);
  }
  else {
    int v32 = v4 + 2;
  }
  uint64_t v4 = sub_15B1A68(v30, (unint64_t)v32, a3);
  if (v6) {
LABEL_26:
  }
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_27:
  uint64_t v18 = *(unsigned int *)(a1 + 80);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 8 * v18;
    do
    {
      uint64_t v4 = (char *)sub_125CE58(a3, 7, *(void *)(*(void *)(a1 + 88) + v19 + 8), v4);
      v19 += 8;
    }
    while (v20 != v19);
  }
  if ((v6 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v21 = *(_DWORD *)(a1 + 432);
    char *v4 = 64;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unsigned int v25 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v27 = *(void *)(a1 + 328);
    char *v4 = 74;
    unsigned int v28 = *(_DWORD *)(v27 + 24);
    v4[1] = v28;
    if (v28 > 0x7F) {
      int v29 = sub_188A9CC(v28, v4 + 1);
    }
    else {
      int v29 = v4 + 2;
    }
    uint64_t v4 = sub_145CBCC(v27, v29, a3);
    if ((v6 & 2) == 0)
    {
LABEL_43:
      if ((v6 & 0x400000) == 0) {
        goto LABEL_44;
      }
      goto LABEL_62;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_43;
  }
  uint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x400000) == 0)
  {
LABEL_44:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_65;
  }
LABEL_62:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v33 = *(_DWORD *)(a1 + 436);
  *(_WORD *)uint64_t v4 = 389;
  *(_DWORD *)(v4 + 2) = v33;
  v4 += 6;
  if ((v6 & 0x800000) == 0)
  {
LABEL_45:
    if ((v6 & 0x200) == 0) {
      goto LABEL_46;
    }
    goto LABEL_68;
  }
LABEL_65:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v34 = *(unsigned char *)(a1 + 440);
  *(_WORD *)uint64_t v4 = 400;
  v4[2] = v34;
  v4 += 3;
  if ((v6 & 0x200) == 0)
  {
LABEL_46:
    if ((v6 & 0x400) == 0) {
      goto LABEL_47;
    }
    goto LABEL_77;
  }
LABEL_68:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v35 = *(void *)(a1 + 336);
  *(_WORD *)uint64_t v4 = 410;
  unsigned int v36 = *(_DWORD *)(v35 + 20);
  v4[2] = v36;
  if (v36 > 0x7F) {
    uint64_t v37 = sub_188A9CC(v36, v4 + 2);
  }
  else {
    uint64_t v37 = v4 + 3;
  }
  uint64_t v4 = sub_15BA180(v35, (unint64_t)v37, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_47:
    if ((v6 & 0x800) == 0) {
      goto LABEL_89;
    }
    goto LABEL_83;
  }
LABEL_77:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v38 = *(void *)(a1 + 344);
  *(_WORD *)uint64_t v4 = 418;
  unsigned int v39 = *(_DWORD *)(v38 + 20);
  v4[2] = v39;
  if (v39 > 0x7F) {
    int v40 = sub_188A9CC(v39, v4 + 2);
  }
  else {
    int v40 = v4 + 3;
  }
  uint64_t v4 = sub_13C14C4(v38, (unint64_t)v40, a3);
  if ((v6 & 0x800) != 0)
  {
LABEL_83:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v41 = *(void *)(a1 + 352);
    *(_WORD *)uint64_t v4 = 426;
    unsigned int v42 = *(_DWORD *)(v41 + 64);
    v4[2] = v42;
    if (v42 > 0x7F) {
      int v43 = sub_188A9CC(v42, v4 + 2);
    }
    else {
      int v43 = v4 + 3;
    }
    uint64_t v4 = sub_14778CC(v41, v43, a3);
  }
LABEL_89:
  int v44 = *(_DWORD *)(a1 + 104);
  if (v44)
  {
    for (int j = 0; j != v44; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v46 = *(void *)(*(void *)(a1 + 112) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 434;
      unsigned int v47 = *(_DWORD *)(v46 + 20);
      v4[2] = v47;
      if (v47 > 0x7F) {
        uint64_t v48 = sub_188A9CC(v47, v4 + 2);
      }
      else {
        uint64_t v48 = v4 + 3;
      }
      uint64_t v4 = sub_1474538(v46, (unint64_t)v48, a3);
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v49 = *(void *)(a1 + 360);
    *(_WORD *)uint64_t v4 = 442;
    unsigned int v50 = *(_DWORD *)(v49 + 20);
    v4[2] = v50;
    if (v50 > 0x7F) {
      uint64_t v51 = sub_188A9CC(v50, v4 + 2);
    }
    else {
      uint64_t v51 = v4 + 3;
    }
    uint64_t v4 = sub_13C1D90(v49, (unint64_t)v51, a3);
  }
  if ((v6 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v52 = *(_DWORD *)(a1 + 444);
    *(_WORD *)uint64_t v4 = 448;
    v4[2] = v52;
    if (v52 > 0x7F)
    {
      v4[2] = v52 | 0x80;
      unsigned int v53 = v52 >> 7;
      v4[3] = v52 >> 7;
      v4 += 4;
      if (v52 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v54 = v53 >> 14;
          v53 >>= 7;
          *v4++ = v53;
        }
        while (v54);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 4) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 25, (const void **)(*(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x1000000) == 0)
    {
LABEL_113:
      if ((v6 & 0x2000) == 0) {
        goto LABEL_114;
      }
      goto LABEL_122;
    }
  }
  else if ((v6 & 0x1000000) == 0)
  {
    goto LABEL_113;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v55 = *(unsigned char *)(a1 + 441);
  *(_WORD *)uint64_t v4 = 464;
  v4[2] = v55;
  v4 += 3;
  if ((v6 & 0x2000) == 0)
  {
LABEL_114:
    if ((v6 & 8) == 0) {
      goto LABEL_115;
    }
    goto LABEL_128;
  }
LABEL_122:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v56 = *(void *)(a1 + 368);
  *(_WORD *)uint64_t v4 = 474;
  unsigned int v57 = *(_DWORD *)(v56 + 20);
  v4[2] = v57;
  if (v57 > 0x7F) {
    long long v58 = sub_188A9CC(v57, v4 + 2);
  }
  else {
    long long v58 = v4 + 3;
  }
  uint64_t v4 = sub_13B1DC8(v56, (unint64_t)v58, a3);
  if ((v6 & 8) == 0)
  {
LABEL_115:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t v4 = sub_117A0AC(a3, 28, (const void **)(*(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x4000) == 0)
  {
LABEL_116:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_141;
    }
    goto LABEL_135;
  }
LABEL_129:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v59 = *(void *)(a1 + 376);
  *(_WORD *)uint64_t v4 = 490;
  unsigned int v60 = *(_DWORD *)(v59 + 44);
  v4[2] = v60;
  if (v60 > 0x7F) {
    uint64_t v61 = sub_188A9CC(v60, v4 + 2);
  }
  else {
    uint64_t v61 = v4 + 3;
  }
  uint64_t v4 = sub_15B43E4(v59, v61, a3);
  if (v6 < 0)
  {
LABEL_135:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v62 = *(int *)(a1 + 472);
    *(_WORD *)uint64_t v4 = 496;
    v4[2] = v62;
    if (v62 > 0x7F)
    {
      v4[2] = v62 | 0x80;
      unint64_t v63 = v62 >> 7;
      v4[3] = v62 >> 7;
      v4 += 4;
      if (v62 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v64 = v63 >> 14;
          v63 >>= 7;
          *v4++ = v63;
        }
        while (v64);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_141:
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v65 = *(void *)(a1 + 384);
    *(_WORD *)uint64_t v4 = 506;
    unsigned int v66 = *(_DWORD *)(v65 + 44);
    v4[2] = v66;
    if (v66 > 0x7F) {
      uint64_t v67 = sub_188A9CC(v66, v4 + 2);
    }
    else {
      uint64_t v67 = v4 + 3;
    }
    uint64_t v4 = sub_1305C9C(v65, v67, a3);
  }
  int v68 = *(_DWORD *)(a1 + 128);
  if (v68)
  {
    for (int k = 0; k != v68; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v70 = *(void *)(*(void *)(a1 + 136) + 8 * k + 8);
      *(_WORD *)uint64_t v4 = 642;
      unsigned int v71 = *(_DWORD *)(v70 + 44);
      v4[2] = v71;
      if (v71 > 0x7F) {
        uint64_t v72 = sub_188A9CC(v71, v4 + 2);
      }
      else {
        uint64_t v72 = v4 + 3;
      }
      uint64_t v4 = sub_15B43E4(v70, v72, a3);
    }
  }
  if ((v6 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v73 = *(int *)(a1 + 456);
    *(_WORD *)uint64_t v4 = 648;
    v4[2] = v73;
    if (v73 > 0x7F)
    {
      v4[2] = v73 | 0x80;
      unint64_t v74 = v73 >> 7;
      v4[3] = v73 >> 7;
      v4 += 4;
      if (v73 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v75 = v74 >> 14;
          v74 >>= 7;
          *v4++ = v74;
        }
        while (v75);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x10) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 34, (const void **)(*(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x4000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v76 = *(void *)(a1 + 448);
    *(_WORD *)uint64_t v4 = 665;
    *(void *)(v4 + 2) = v76;
    v4 += 10;
  }
  int v77 = *(_DWORD *)(a1 + 152);
  if (v77)
  {
    for (int m = 0; m != v77; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v79 = *(void *)(*(void *)(a1 + 160) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 674;
      unsigned int v80 = *(_DWORD *)(v79 + 20);
      v4[2] = v80;
      if (v80 > 0x7F) {
        uint64_t v81 = sub_188A9CC(v80, v4 + 2);
      }
      else {
        uint64_t v81 = v4 + 3;
      }
      uint64_t v4 = sub_13D0AB4(v79, (unint64_t)v81, a3);
    }
  }
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v82 = *(void *)(a1 + 392);
    *(_WORD *)uint64_t v4 = 682;
    unsigned int v83 = *(_DWORD *)(v82 + 20);
    v4[2] = v83;
    if (v83 > 0x7F) {
      unint64_t v84 = sub_188A9CC(v83, v4 + 2);
    }
    else {
      unint64_t v84 = v4 + 3;
    }
    uint64_t v4 = sub_13933B0(v82, (unint64_t)v84, a3);
  }
  if ((v6 & 0x10000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v85 = *(_DWORD *)(a1 + 460);
    *(_WORD *)uint64_t v4 = 688;
    v4[2] = v85;
    if (v85 > 0x7F)
    {
      v4[2] = v85 | 0x80;
      unsigned int v86 = v85 >> 7;
      v4[3] = v85 >> 7;
      v4 += 4;
      if (v85 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v87 = v86 >> 14;
          v86 >>= 7;
          *v4++ = v86;
        }
        while (v87);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v88 = *(void *)(a1 + 400);
    *(_WORD *)uint64_t v4 = 698;
    unsigned int v89 = *(_DWORD *)(v88 + 20);
    v4[2] = v89;
    if (v89 > 0x7F) {
      v90 = sub_188A9CC(v89, v4 + 2);
    }
    else {
      v90 = v4 + 3;
    }
    uint64_t v4 = sub_13D1AC4(v88, (unint64_t)v90, a3);
    if ((v6 & 0x40000) == 0)
    {
LABEL_193:
      if ((v6 & 0x80000) == 0) {
        goto LABEL_213;
      }
      goto LABEL_207;
    }
  }
  else if ((v6 & 0x40000) == 0)
  {
    goto LABEL_193;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v91 = *(void *)(a1 + 408);
  *(_WORD *)uint64_t v4 = 706;
  unsigned int v92 = *(_DWORD *)(v91 + 20);
  v4[2] = v92;
  if (v92 > 0x7F) {
    uint64_t v93 = sub_188A9CC(v92, v4 + 2);
  }
  else {
    uint64_t v93 = v4 + 3;
  }
  uint64_t v4 = sub_15C1084(v91, (unint64_t)v93, a3);
  if ((v6 & 0x80000) != 0)
  {
LABEL_207:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v94 = *(void *)(a1 + 416);
    *(_WORD *)uint64_t v4 = 722;
    unsigned int v95 = *(_DWORD *)(v94 + 20);
    v4[2] = v95;
    if (v95 > 0x7F) {
      int v96 = sub_188A9CC(v95, v4 + 2);
    }
    else {
      int v96 = v4 + 3;
    }
    uint64_t v4 = sub_13D4AE8(v94, (unint64_t)v96, a3);
  }
LABEL_213:
  uint64_t v97 = *(unsigned int *)(a1 + 176);
  if ((int)v97 >= 1)
  {
    uint64_t v98 = 0;
    uint64_t v99 = 8 * v97;
    do
    {
      uint64_t v100 = *(void **)(*(void *)(a1 + 184) + v98 + 8);
      if (*((char *)v100 + 23) < 0)
      {
        int64_t v101 = v100[1];
        if (v101 > 127) {
          goto LABEL_224;
        }
      }
      else
      {
        int64_t v101 = *((unsigned __int8 *)v100 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v101)
      {
        *(_WORD *)uint64_t v4 = 730;
        v4[2] = v101;
        if (*((char *)v100 + 23) < 0) {
          uint64_t v100 = (void *)*v100;
        }
        v102 = v4 + 3;
        memcpy(v102, v100, v101);
        uint64_t v4 = &v102[v101];
        goto LABEL_222;
      }
LABEL_224:
      uint64_t v4 = (char *)sub_188A868(a3, 43, (uint64_t)v100, v4);
LABEL_222:
      v98 += 8;
    }
    while (v99 != v98);
  }
  if ((v6 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v103 = *(void *)(a1 + 424);
    *(_WORD *)uint64_t v4 = 738;
    unsigned int v104 = *(_DWORD *)(v103 + 40);
    v4[2] = v104;
    if (v104 > 0x7F) {
      uint64_t v105 = sub_188A9CC(v104, v4 + 2);
    }
    else {
      uint64_t v105 = v4 + 3;
    }
    uint64_t v4 = sub_13B2584(v103, v105, a3);
  }
  int v106 = *(_DWORD *)(a1 + 200);
  if (v106)
  {
    for (int n = 0; n != v106; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v108 = *(void *)(*(void *)(a1 + 208) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 1698;
      unsigned int v109 = *(_DWORD *)(v108 + 20);
      v4[2] = v109;
      if (v109 > 0x7F) {
        int v110 = sub_188A9CC(v109, v4 + 2);
      }
      else {
        int v110 = v4 + 3;
      }
      uint64_t v4 = sub_15BAD4C(v108, (unint64_t)v110, a3);
    }
  }
  uint64_t v111 = *(unsigned int *)(a1 + 224);
  if ((int)v111 >= 1)
  {
    uint64_t v112 = 0;
    uint64_t v113 = 8 * v111;
    do
    {
      uint64_t v4 = (char *)sub_125CE58(a3, 101, *(void *)(*(void *)(a1 + 232) + v112 + 8), v4);
      v112 += 8;
    }
    while (v113 != v112);
  }
  uint64_t v114 = *(unsigned int *)(a1 + 248);
  if ((int)v114 >= 1)
  {
    uint64_t v115 = 0;
    uint64_t v116 = 8 * v114;
    do
    {
      v117 = *(void **)(*(void *)(a1 + 256) + v115 + 8);
      if (*((char *)v117 + 23) < 0)
      {
        int64_t v118 = v117[1];
        if (v118 > 127) {
          goto LABEL_254;
        }
      }
      else
      {
        int64_t v118 = *((unsigned __int8 *)v117 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v118)
      {
        *(_WORD *)uint64_t v4 = 1714;
        v4[2] = v118;
        if (*((char *)v117 + 23) < 0) {
          v117 = (void *)*v117;
        }
        v119 = v4 + 3;
        memcpy(v119, v117, v118);
        uint64_t v4 = &v119[v118];
        goto LABEL_252;
      }
LABEL_254:
      uint64_t v4 = (char *)sub_188A868(a3, 102, (uint64_t)v117, v4);
LABEL_252:
      v115 += 8;
    }
    while (v116 != v115);
  }
  if ((v6 & 0x20000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v120 = *(_DWORD *)(a1 + 464);
    *(_WORD *)uint64_t v4 = 1720;
    v4[2] = v120;
    if (v120 > 0x7F)
    {
      v4[2] = v120 | 0x80;
      unsigned int v121 = v120 >> 7;
      v4[3] = v120 >> 7;
      v4 += 4;
      if (v120 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v122 = v121 >> 14;
          v121 >>= 7;
          *v4++ = v121;
        }
        while (v122);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 956, 10101, v4, a3);
  }
  uint64_t v123 = *(void *)(a1 + 8);
  if ((v123 & 1) == 0) {
    return v4;
  }
  unint64_t v125 = v123 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v125 + 31) < 0)
  {
    v126 = *(void **)(v125 + 8);
    uint64_t v127 = *(void *)(v125 + 16);
  }
  else
  {
    v126 = (void *)(v125 + 8);
    LODWORD(v127) = *(unsigned __int8 *)(v125 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v127)
  {
    uint64_t v128 = (int)v127;
    memcpy(v4, v126, (int)v127);
    v4 += v128;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v126, v127, v4);
}

uint64_t sub_162A6E8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_146FFD0(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  if ((int)v10 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v11 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      --v10;
    }
    while (v10);
  }
  uint64_t v16 = *(int *)(a1 + 104);
  uint64_t v17 = v11 + 2 * v16;
  uint64_t v18 = *(void *)(a1 + 112);
  if (v18) {
    uint64_t v19 = (uint64_t *)(v18 + 8);
  }
  else {
    uint64_t v19 = 0;
  }
  if (v16)
  {
    uint64_t v20 = 8 * v16;
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = sub_1474A68(v21);
      v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      v20 -= 8;
    }
    while (v20);
  }
  uint64_t v23 = *(int *)(a1 + 128);
  uint64_t v24 = v17 + 2 * v23;
  uint64_t v25 = *(void *)(a1 + 136);
  if (v25) {
    unsigned int v26 = (uint64_t *)(v25 + 8);
  }
  else {
    unsigned int v26 = 0;
  }
  if (v23)
  {
    uint64_t v27 = 8 * v23;
    do
    {
      uint64_t v28 = *v26++;
      uint64_t v29 = sub_15B4924(v28);
      v24 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6);
      v27 -= 8;
    }
    while (v27);
  }
  uint64_t v30 = *(int *)(a1 + 152);
  uint64_t v31 = v24 + 2 * v30;
  uint64_t v32 = *(void *)(a1 + 160);
  if (v32) {
    int v33 = (uint64_t *)(v32 + 8);
  }
  else {
    int v33 = 0;
  }
  if (v30)
  {
    uint64_t v34 = 8 * v30;
    do
    {
      uint64_t v35 = *v33++;
      uint64_t v36 = sub_13D0E3C(v35);
      v31 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6);
      v34 -= 8;
    }
    while (v34);
  }
  uint64_t v37 = *(unsigned int *)(a1 + 176);
  uint64_t v38 = v31 + 2 * v37;
  if ((int)v37 >= 1)
  {
    unsigned int v39 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v40 = *v39++;
      uint64_t v41 = *(unsigned __int8 *)(v40 + 23);
      uint64_t v42 = *(void *)(v40 + 8);
      if ((v41 & 0x80u) == 0) {
        uint64_t v42 = v41;
      }
      v38 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      --v37;
    }
    while (v37);
  }
  uint64_t v43 = *(int *)(a1 + 200);
  uint64_t v44 = v38 + 2 * v43;
  uint64_t v45 = *(void *)(a1 + 208);
  if (v45) {
    uint64_t v46 = (uint64_t *)(v45 + 8);
  }
  else {
    uint64_t v46 = 0;
  }
  if (v43)
  {
    uint64_t v47 = 8 * v43;
    do
    {
      uint64_t v48 = *v46++;
      uint64_t v49 = sub_15BAE94(v48);
      v44 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6);
      v47 -= 8;
    }
    while (v47);
  }
  uint64_t v50 = *(unsigned int *)(a1 + 224);
  uint64_t v51 = v44 + 2 * v50;
  if ((int)v50 >= 1)
  {
    unsigned int v52 = (uint64_t *)(*(void *)(a1 + 232) + 8);
    do
    {
      uint64_t v53 = *v52++;
      uint64_t v54 = *(unsigned __int8 *)(v53 + 23);
      uint64_t v55 = *(void *)(v53 + 8);
      if ((v54 & 0x80u) == 0) {
        uint64_t v55 = v54;
      }
      v51 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6);
      --v50;
    }
    while (v50);
  }
  uint64_t v56 = *(unsigned int *)(a1 + 248);
  uint64_t v57 = v51 + 2 * v56;
  if ((int)v56 >= 1)
  {
    long long v58 = (uint64_t *)(*(void *)(a1 + 256) + 8);
    do
    {
      uint64_t v59 = *v58++;
      uint64_t v60 = *(unsigned __int8 *)(v59 + 23);
      uint64_t v61 = *(void *)(v59 + 8);
      if ((v60 & 0x80u) == 0) {
        uint64_t v61 = v60;
      }
      v57 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6);
      --v56;
    }
    while (v56);
  }
  unsigned int v62 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v62) {
    goto LABEL_61;
  }
  if (v62)
  {
    unint64_t v69 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v70 = *(unsigned __int8 *)(v69 + 23);
    uint64_t v71 = *(void *)(v69 + 8);
    if ((v70 & 0x80u) == 0) {
      uint64_t v71 = v70;
    }
    v57 += v71 + ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v62 & 2) == 0)
    {
LABEL_54:
      if ((v62 & 4) == 0) {
        goto LABEL_55;
      }
      goto LABEL_105;
    }
  }
  else if ((v62 & 2) == 0)
  {
    goto LABEL_54;
  }
  unint64_t v72 = *(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v73 = *(unsigned __int8 *)(v72 + 23);
  uint64_t v74 = *(void *)(v72 + 8);
  if ((v73 & 0x80u) == 0) {
    uint64_t v74 = v73;
  }
  v57 += v74 + ((9 * (__clz(v74 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v62 & 4) == 0)
  {
LABEL_55:
    if ((v62 & 8) == 0) {
      goto LABEL_56;
    }
    goto LABEL_108;
  }
LABEL_105:
  unint64_t v75 = *(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v76 = *(unsigned __int8 *)(v75 + 23);
  uint64_t v77 = *(void *)(v75 + 8);
  if ((v76 & 0x80u) == 0) {
    uint64_t v77 = v76;
  }
  v57 += v77 + ((9 * (__clz(v77 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 8) == 0)
  {
LABEL_56:
    if ((v62 & 0x10) == 0) {
      goto LABEL_57;
    }
    goto LABEL_111;
  }
LABEL_108:
  unint64_t v78 = *(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v79 = *(unsigned __int8 *)(v78 + 23);
  uint64_t v80 = *(void *)(v78 + 8);
  if ((v79 & 0x80u) == 0) {
    uint64_t v80 = v79;
  }
  v57 += v80 + ((9 * (__clz(v80 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x10) == 0)
  {
LABEL_57:
    if ((v62 & 0x20) == 0) {
      goto LABEL_58;
    }
LABEL_114:
    uint64_t v84 = sub_13B0894(*(void *)(a1 + 304));
    v57 += v84 + ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v62 & 0x40) == 0)
    {
LABEL_59:
      if ((v62 & 0x80) == 0) {
        goto LABEL_61;
      }
      goto LABEL_60;
    }
    goto LABEL_115;
  }
LABEL_111:
  unint64_t v81 = *(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v82 = *(unsigned __int8 *)(v81 + 23);
  uint64_t v83 = *(void *)(v81 + 8);
  if ((v82 & 0x80u) == 0) {
    uint64_t v83 = v82;
  }
  v57 += v83 + ((9 * (__clz(v83 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x20) != 0) {
    goto LABEL_114;
  }
LABEL_58:
  if ((v62 & 0x40) == 0) {
    goto LABEL_59;
  }
LABEL_115:
  uint64_t v85 = sub_15B4924(*(void *)(a1 + 312));
  v57 += v85 + ((9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v62 & 0x80) != 0)
  {
LABEL_60:
    uint64_t v63 = sub_15B1D1C(*(void *)(a1 + 320));
    v57 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_61:
  if ((v62 & 0xFF00) == 0) {
    goto LABEL_71;
  }
  if ((v62 & 0x100) != 0)
  {
    uint64_t v86 = sub_145DF38(*(void *)(a1 + 328));
    v57 += v86 + ((9 * (__clz(v86 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v62 & 0x200) == 0)
    {
LABEL_64:
      if ((v62 & 0x400) == 0) {
        goto LABEL_65;
      }
      goto LABEL_119;
    }
  }
  else if ((v62 & 0x200) == 0)
  {
    goto LABEL_64;
  }
  unint64_t v87 = sub_15BA324(*(void *)(a1 + 336));
  v57 += v87 + ((9 * (__clz(v87 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x400) == 0)
  {
LABEL_65:
    if ((v62 & 0x800) == 0) {
      goto LABEL_66;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t v88 = sub_13C16A8(*(void *)(a1 + 344));
  v57 += v88 + ((9 * (__clz(v88 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x800) == 0)
  {
LABEL_66:
    if ((v62 & 0x1000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t v89 = sub_1477ADC(*(void *)(a1 + 352));
  v57 += v89 + ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x1000) == 0)
  {
LABEL_67:
    if ((v62 & 0x2000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_122;
  }
LABEL_121:
  uint64_t v90 = sub_13C1F80(*(void *)(a1 + 360));
  v57 += v90 + ((9 * (__clz(v90 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x2000) == 0)
  {
LABEL_68:
    if ((v62 & 0x4000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t v91 = sub_13B2018(*(void *)(a1 + 368));
  v57 += v91 + ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x4000) == 0)
  {
LABEL_69:
    if ((v62 & 0x8000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_70;
  }
LABEL_123:
  uint64_t v92 = sub_15B4924(*(void *)(a1 + 376));
  v57 += v92 + ((9 * (__clz(v92 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x8000) != 0)
  {
LABEL_70:
    uint64_t v64 = sub_1305E64(*(void *)(a1 + 384));
    v57 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_71:
  if ((v62 & 0xFF0000) == 0) {
    goto LABEL_84;
  }
  if ((v62 & 0x10000) != 0)
  {
    uint64_t v93 = sub_1393764(*(void *)(a1 + 392));
    v57 += v93 + ((9 * (__clz(v93 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v62 & 0x20000) == 0)
    {
LABEL_74:
      if ((v62 & 0x40000) == 0) {
        goto LABEL_75;
      }
      goto LABEL_127;
    }
  }
  else if ((v62 & 0x20000) == 0)
  {
    goto LABEL_74;
  }
  uint64_t v94 = sub_13D1F68(*(void *)(a1 + 400));
  v57 += v94 + ((9 * (__clz(v94 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x40000) == 0)
  {
LABEL_75:
    if ((v62 & 0x80000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_128;
  }
LABEL_127:
  uint64_t v95 = sub_15C1220(*(void *)(a1 + 408));
  v57 += v95 + ((9 * (__clz(v95 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x80000) == 0)
  {
LABEL_76:
    if ((v62 & 0x100000) == 0) {
      goto LABEL_77;
    }
LABEL_129:
    uint64_t v97 = sub_13B2678(*(void *)(a1 + 424));
    v57 += v97 + ((9 * (__clz(v97 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v62 & 0x200000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_78;
  }
LABEL_128:
  uint64_t v96 = sub_13D4BCC(*(void *)(a1 + 416));
  v57 += v96 + ((9 * (__clz(v96 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x100000) != 0) {
    goto LABEL_129;
  }
LABEL_77:
  if ((v62 & 0x200000) != 0) {
LABEL_78:
  }
    v57 += ((9 * (__clz(*(_DWORD *)(a1 + 432) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_79:
  uint64_t v65 = v57 + 6;
  if ((v62 & 0x400000) == 0) {
    uint64_t v65 = v57;
  }
  if ((v62 & 0x800000) != 0) {
    uint64_t v57 = v65 + 3;
  }
  else {
    uint64_t v57 = v65;
  }
LABEL_84:
  if (!HIBYTE(v62)) {
    goto LABEL_97;
  }
  uint64_t v66 = v57 + 3;
  if ((v62 & 0x1000000) == 0) {
    uint64_t v66 = v57;
  }
  if ((v62 & 0x2000000) != 0) {
    v66 += ((9 * (__clz(*(_DWORD *)(a1 + 444) | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  if ((v62 & 0x4000000) != 0) {
    uint64_t v57 = v66 + 10;
  }
  else {
    uint64_t v57 = v66;
  }
  if ((v62 & 0x8000000) != 0)
  {
    int v98 = *(_DWORD *)(a1 + 456);
    uint64_t v99 = ((9 * (__clz(v98 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v98 >= 0) {
      uint64_t v100 = v99;
    }
    else {
      uint64_t v100 = 12;
    }
    v57 += v100;
    if ((v62 & 0x10000000) == 0)
    {
LABEL_94:
      if ((v62 & 0x20000000) == 0) {
        goto LABEL_95;
      }
      goto LABEL_136;
    }
  }
  else if ((v62 & 0x10000000) == 0)
  {
    goto LABEL_94;
  }
  v57 += ((9 * (__clz(*(_DWORD *)(a1 + 460) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x20000000) == 0)
  {
LABEL_95:
    if ((v62 & 0x40000000) == 0) {
      goto LABEL_96;
    }
LABEL_137:
    v57 += ((9 * (__clz(*(_DWORD *)(a1 + 468) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v62 & 0x80000000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_138;
  }
LABEL_136:
  v57 += ((9 * (__clz(*(_DWORD *)(a1 + 464) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v62 & 0x40000000) != 0) {
    goto LABEL_137;
  }
LABEL_96:
  if ((v62 & 0x80000000) == 0) {
    goto LABEL_97;
  }
LABEL_138:
  int v101 = *(_DWORD *)(a1 + 472);
  uint64_t v102 = ((9 * (__clz(v101 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v101 >= 0) {
    uint64_t v103 = v102;
  }
  else {
    uint64_t v103 = 12;
  }
  v57 += v103;
LABEL_97:
  uint64_t v67 = *(void *)(a1 + 8);
  if (v67)
  {
    unint64_t v104 = v67 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v104 + 31) < 0) {
      uint64_t v105 = *(void *)(v104 + 16);
    }
    else {
      uint64_t v105 = *(unsigned __int8 *)(v104 + 31);
    }
    v57 += v105;
  }
  *(_DWORD *)(a1 + 44) = v57;
  return v57;
}

void sub_162B080(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C52B4((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1368FF8((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_12C5340((uint64_t *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    unsigned int v26 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_163A144((uint64_t *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 176);
  if (v29)
  {
    uint64_t v30 = (const std::string **)(*(void *)(a2 + 184) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_188FB98(a1 + 168, v31, v30, v29, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v32 = *(_DWORD *)(a1 + 176) + v29;
    *(_DWORD *)(a1 + 176) = v32;
    int v33 = *(int **)(a1 + 184);
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 200);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 208) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_11DB348((uint64_t *)(a1 + 192), v36, v35, v34, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v37 = *(_DWORD *)(a1 + 200) + v34;
    *(_DWORD *)(a1 + 200) = v37;
    uint64_t v38 = *(int **)(a1 + 208);
    if (*v38 < v37) {
      int *v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 224);
  if (v39)
  {
    uint64_t v40 = (const std::string **)(*(void *)(a2 + 232) + 8);
    uint64_t v41 = (std::string **)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_188FB98(a1 + 216, v41, v40, v39, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v42 = *(_DWORD *)(a1 + 224) + v39;
    *(_DWORD *)(a1 + 224) = v42;
    uint64_t v43 = *(int **)(a1 + 232);
    if (*v43 < v42) {
      *uint64_t v43 = v42;
    }
  }
  int v44 = *(_DWORD *)(a2 + 248);
  if (v44)
  {
    uint64_t v45 = (const std::string **)(*(void *)(a2 + 256) + 8);
    uint64_t v46 = (std::string **)sub_188CCE4(a1 + 240, *(_DWORD *)(a2 + 248));
    sub_188FB98(a1 + 240, v46, v45, v44, **(_DWORD **)(a1 + 256) - *(_DWORD *)(a1 + 248));
    int v47 = *(_DWORD *)(a1 + 248) + v44;
    *(_DWORD *)(a1 + 248) = v47;
    uint64_t v48 = *(int **)(a1 + 256);
    if (*v48 < v47) {
      *uint64_t v48 = v47;
    }
  }
  unsigned int v49 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v49) {
    goto LABEL_77;
  }
  if (v49)
  {
    uint64_t v50 = (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v51 = *(void *)(a1 + 8);
    unsigned int v52 = (uint64_t *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
    if (v51) {
      unsigned int v52 = (uint64_t *)*v52;
    }
    sub_1881DF4((std::string **)(a1 + 264), v50, v52);
    if ((v49 & 2) == 0)
    {
LABEL_31:
      if ((v49 & 4) == 0) {
        goto LABEL_32;
      }
      goto LABEL_44;
    }
  }
  else if ((v49 & 2) == 0)
  {
    goto LABEL_31;
  }
  uint64_t v53 = (long long *)(*(void *)(a2 + 272) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v54 = *(void *)(a1 + 8);
  uint64_t v55 = (uint64_t *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
  if (v54) {
    uint64_t v55 = (uint64_t *)*v55;
  }
  sub_1881DF4((std::string **)(a1 + 272), v53, v55);
  if ((v49 & 4) == 0)
  {
LABEL_32:
    if ((v49 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_47;
  }
LABEL_44:
  uint64_t v56 = (long long *)(*(void *)(a2 + 280) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v57 = *(void *)(a1 + 8);
  long long v58 = (uint64_t *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
  if (v57) {
    long long v58 = (uint64_t *)*v58;
  }
  sub_1881DF4((std::string **)(a1 + 280), v56, v58);
  if ((v49 & 8) == 0)
  {
LABEL_33:
    if ((v49 & 0x10) == 0) {
      goto LABEL_34;
    }
    goto LABEL_50;
  }
LABEL_47:
  uint64_t v59 = (long long *)(*(void *)(a2 + 288) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v60 = *(void *)(a1 + 8);
  uint64_t v61 = (uint64_t *)(v60 & 0xFFFFFFFFFFFFFFFCLL);
  if (v60) {
    uint64_t v61 = (uint64_t *)*v61;
  }
  sub_1881DF4((std::string **)(a1 + 288), v59, v61);
  if ((v49 & 0x10) == 0)
  {
LABEL_34:
    if ((v49 & 0x20) == 0) {
      goto LABEL_35;
    }
LABEL_53:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v65 = *(void *)(a1 + 304);
    if (!v65)
    {
      uint64_t v66 = *(void *)(a1 + 8);
      uint64_t v67 = (void *)(v66 & 0xFFFFFFFFFFFFFFFCLL);
      if (v66) {
        uint64_t v67 = (void *)*v67;
      }
      uint64_t v65 = sub_13D8F60((uint64_t)v67);
      *(void *)(a1 + 304) = v65;
    }
    if (*(void *)(a2 + 304)) {
      int v68 = *(uint64_t (****)())(a2 + 304);
    }
    else {
      int v68 = &off_2535C50;
    }
    sub_13B0D54(v65, (uint64_t)v68);
    if ((v49 & 0x40) == 0)
    {
LABEL_36:
      if ((v49 & 0x80) == 0) {
        goto LABEL_77;
      }
      goto LABEL_69;
    }
    goto LABEL_61;
  }
LABEL_50:
  unsigned int v62 = (long long *)(*(void *)(a2 + 296) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v63 = *(void *)(a1 + 8);
  uint64_t v64 = (uint64_t *)(v63 & 0xFFFFFFFFFFFFFFFCLL);
  if (v63) {
    uint64_t v64 = (uint64_t *)*v64;
  }
  sub_1881DF4((std::string **)(a1 + 296), v62, v64);
  if ((v49 & 0x20) != 0) {
    goto LABEL_53;
  }
LABEL_35:
  if ((v49 & 0x40) == 0) {
    goto LABEL_36;
  }
LABEL_61:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v69 = *(void *)(a1 + 312);
  if (!v69)
  {
    uint64_t v70 = *(void *)(a1 + 8);
    uint64_t v71 = (void *)(v70 & 0xFFFFFFFFFFFFFFFCLL);
    if (v70) {
      uint64_t v71 = (void *)*v71;
    }
    uint64_t v69 = sub_15C1CB4((uint64_t)v71);
    *(void *)(a1 + 312) = v69;
  }
  if (*(void *)(a2 + 312)) {
    unint64_t v72 = *(uint64_t (****)())(a2 + 312);
  }
  else {
    unint64_t v72 = &off_253F2E8;
  }
  sub_15B04F0(v69, (uint64_t)v72);
  if ((v49 & 0x80) != 0)
  {
LABEL_69:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v73 = *(void *)(a1 + 320);
    if (!v73)
    {
      uint64_t v74 = *(void *)(a1 + 8);
      unint64_t v75 = (void *)(v74 & 0xFFFFFFFFFFFFFFFCLL);
      if (v74) {
        unint64_t v75 = (void *)*v75;
      }
      uint64_t v73 = sub_15C19EC((uint64_t)v75);
      *(void *)(a1 + 320) = v73;
    }
    if (*(void *)(a2 + 320)) {
      uint64_t v76 = *(uint64_t (****)())(a2 + 320);
    }
    else {
      uint64_t v76 = &off_253F208;
    }
    sub_15B1E3C(v73, (uint64_t)v76);
  }
LABEL_77:
  if ((v49 & 0xFF00) == 0) {
    goto LABEL_151;
  }
  if ((v49 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v77 = *(void *)(a1 + 328);
    if (!v77)
    {
      uint64_t v78 = *(void *)(a1 + 8);
      uint64_t v79 = (void *)(v78 & 0xFFFFFFFFFFFFFFFCLL);
      if (v78) {
        uint64_t v79 = (void *)*v79;
      }
      sub_1478B2C((uint64_t)v79);
      *(void *)(a1 + 328) = v77;
    }
    if (*(void *)(a2 + 328)) {
      uint64_t v80 = *(uint64_t (****)())(a2 + 328);
    }
    else {
      uint64_t v80 = &off_2539290;
    }
    sub_13E582C(v77, (uint64_t)v80);
    if ((v49 & 0x200) == 0)
    {
LABEL_80:
      if ((v49 & 0x400) == 0) {
        goto LABEL_81;
      }
      goto LABEL_103;
    }
  }
  else if ((v49 & 0x200) == 0)
  {
    goto LABEL_80;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  unint64_t v81 = *(std::string **)(a1 + 336);
  if (!v81)
  {
    uint64_t v82 = *(void *)(a1 + 8);
    uint64_t v83 = (void *)(v82 & 0xFFFFFFFFFFFFFFFCLL);
    if (v82) {
      uint64_t v83 = (void *)*v83;
    }
    unint64_t v81 = (std::string *)sub_15C2014((uint64_t)v83);
    *(void *)(a1 + 336) = v81;
  }
  if (*(void *)(a2 + 336)) {
    uint64_t v84 = *(uint64_t (****)())(a2 + 336);
  }
  else {
    uint64_t v84 = &off_253F530;
  }
  sub_1113E40(v81, (uint64_t)v84);
  if ((v49 & 0x400) == 0)
  {
LABEL_81:
    if ((v49 & 0x800) == 0) {
      goto LABEL_82;
    }
    goto LABEL_111;
  }
LABEL_103:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  uint64_t v85 = *(std::string **)(a1 + 344);
  if (!v85)
  {
    uint64_t v86 = *(void *)(a1 + 8);
    unint64_t v87 = (void *)(v86 & 0xFFFFFFFFFFFFFFFCLL);
    if (v86) {
      unint64_t v87 = (void *)*v87;
    }
    uint64_t v85 = (std::string *)sub_13D9B50((uint64_t)v87);
    *(void *)(a1 + 344) = v85;
  }
  if (*(void *)(a2 + 344)) {
    uint64_t v88 = *(uint64_t (****)())(a2 + 344);
  }
  else {
    uint64_t v88 = &off_2536218;
  }
  sub_11B9C54(v85, (uint64_t)v88);
  if ((v49 & 0x800) == 0)
  {
LABEL_82:
    if ((v49 & 0x1000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_119;
  }
LABEL_111:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v89 = *(std::string **)(a1 + 352);
  if (!v89)
  {
    uint64_t v90 = *(void *)(a1 + 8);
    uint64_t v91 = (void *)(v90 & 0xFFFFFFFFFFFFFFFCLL);
    if (v90) {
      uint64_t v91 = (void *)*v91;
    }
    uint64_t v89 = (std::string *)sub_1479978((uint64_t)v91);
    *(void *)(a1 + 352) = v89;
  }
  if (*(void *)(a2 + 352)) {
    uint64_t v92 = *(uint64_t (****)())(a2 + 352);
  }
  else {
    uint64_t v92 = &off_2539C48;
  }
  sub_1216B14(v89, (uint64_t)v92);
  if ((v49 & 0x1000) == 0)
  {
LABEL_83:
    if ((v49 & 0x2000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_127;
  }
LABEL_119:
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  uint64_t v93 = *(std::string **)(a1 + 360);
  if (!v93)
  {
    uint64_t v94 = *(void *)(a1 + 8);
    uint64_t v95 = (void *)(v94 & 0xFFFFFFFFFFFFFFFCLL);
    if (v94) {
      uint64_t v95 = (void *)*v95;
    }
    sub_13D9BD8((uint64_t)v95);
    *(void *)(a1 + 360) = v93;
  }
  if (*(void *)(a2 + 360)) {
    uint64_t v96 = *(uint64_t (****)())(a2 + 360);
  }
  else {
    uint64_t v96 = &off_2536248;
  }
  sub_11B9C54(v93, (uint64_t)v96);
  if ((v49 & 0x2000) == 0)
  {
LABEL_84:
    if ((v49 & 0x4000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_135;
  }
LABEL_127:
  *(_DWORD *)(a1 + 40) |= 0x2000u;
  uint64_t v97 = *(std::string **)(a1 + 368);
  if (!v97)
  {
    uint64_t v98 = *(void *)(a1 + 8);
    uint64_t v99 = (void *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
    if (v98) {
      uint64_t v99 = (void *)*v99;
    }
    uint64_t v97 = (std::string *)sub_13D9048((uint64_t)v99);
    *(void *)(a1 + 368) = v97;
  }
  if (*(void *)(a2 + 368)) {
    uint64_t v100 = *(uint64_t (****)())(a2 + 368);
  }
  else {
    uint64_t v100 = &off_2535CF8;
  }
  sub_13B20B4(v97, (uint64_t)v100);
  if ((v49 & 0x4000) == 0)
  {
LABEL_85:
    if ((v49 & 0x8000) == 0) {
      goto LABEL_151;
    }
    goto LABEL_143;
  }
LABEL_135:
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  uint64_t v101 = *(void *)(a1 + 376);
  if (!v101)
  {
    uint64_t v102 = *(void *)(a1 + 8);
    uint64_t v103 = (void *)(v102 & 0xFFFFFFFFFFFFFFFCLL);
    if (v102) {
      uint64_t v103 = (void *)*v103;
    }
    uint64_t v101 = sub_15C1CB4((uint64_t)v103);
    *(void *)(a1 + 376) = v101;
  }
  if (*(void *)(a2 + 376)) {
    unint64_t v104 = *(uint64_t (****)())(a2 + 376);
  }
  else {
    unint64_t v104 = &off_253F2E8;
  }
  sub_15B04F0(v101, (uint64_t)v104);
  if ((v49 & 0x8000) != 0)
  {
LABEL_143:
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    uint64_t v105 = *(void **)(a1 + 384);
    if (!v105)
    {
      uint64_t v106 = *(void *)(a1 + 8);
      uint64_t v107 = (void *)(v106 & 0xFFFFFFFFFFFFFFFCLL);
      if (v106) {
        uint64_t v107 = (void *)*v107;
      }
      uint64_t v105 = sub_130645C((uint64_t)v107);
      *(void *)(a1 + 384) = v105;
    }
    if (*(void *)(a2 + 384)) {
      uint64_t v108 = *(uint64_t (****)())(a2 + 384);
    }
    else {
      uint64_t v108 = &off_2532480;
    }
    sub_1305F18((uint64_t)v105, (uint64_t)v108);
  }
LABEL_151:
  if ((v49 & 0xFF0000) == 0) {
    goto LABEL_162;
  }
  if ((v49 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    uint64_t v110 = *(void *)(a1 + 392);
    if (!v110)
    {
      uint64_t v111 = *(void *)(a1 + 8);
      uint64_t v112 = (void *)(v111 & 0xFFFFFFFFFFFFFFFCLL);
      if (v111) {
        uint64_t v112 = (void *)*v112;
      }
      uint64_t v110 = sub_13D80BC((uint64_t)v112);
      *(void *)(a1 + 392) = v110;
    }
    if (*(void *)(a2 + 392)) {
      uint64_t v113 = *(uint64_t (****)())(a2 + 392);
    }
    else {
      uint64_t v113 = &off_25351C0;
    }
    sub_1393920(v110, (uint64_t)v113);
    if ((v49 & 0x20000) == 0)
    {
LABEL_154:
      if ((v49 & 0x40000) == 0) {
        goto LABEL_155;
      }
      goto LABEL_192;
    }
  }
  else if ((v49 & 0x20000) == 0)
  {
    goto LABEL_154;
  }
  *(_DWORD *)(a1 + 40) |= 0x20000u;
  uint64_t v114 = *(std::string **)(a1 + 400);
  if (!v114)
  {
    uint64_t v115 = *(void *)(a1 + 8);
    uint64_t v116 = (void *)(v115 & 0xFFFFFFFFFFFFFFFCLL);
    if (v115) {
      uint64_t v116 = (void *)*v116;
    }
    uint64_t v114 = (std::string *)sub_13DAA4C((uint64_t)v116);
    *(void *)(a1 + 400) = v114;
  }
  if (*(void *)(a2 + 400)) {
    v117 = *(uint64_t (****)())(a2 + 400);
  }
  else {
    v117 = &off_25367D8;
  }
  sub_13D21EC(v114, (uint64_t)v117);
  if ((v49 & 0x40000) == 0)
  {
LABEL_155:
    if ((v49 & 0x80000) == 0) {
      goto LABEL_156;
    }
    goto LABEL_200;
  }
LABEL_192:
  *(_DWORD *)(a1 + 40) |= 0x40000u;
  int64_t v118 = *(std::string **)(a1 + 408);
  if (!v118)
  {
    uint64_t v119 = *(void *)(a1 + 8);
    unsigned int v120 = (void *)(v119 & 0xFFFFFFFFFFFFFFFCLL);
    if (v119) {
      unsigned int v120 = (void *)*v120;
    }
    int64_t v118 = (std::string *)sub_15C26A4((uint64_t)v120);
    *(void *)(a1 + 408) = v118;
  }
  if (*(void *)(a2 + 408)) {
    unsigned int v121 = *(uint64_t (****)())(a2 + 408);
  }
  else {
    unsigned int v121 = &off_253F780;
  }
  sub_13B15D0(v118, (uint64_t)v121);
  if ((v49 & 0x80000) == 0)
  {
LABEL_156:
    if ((v49 & 0x100000) == 0) {
      goto LABEL_157;
    }
    goto LABEL_208;
  }
LABEL_200:
  *(_DWORD *)(a1 + 40) |= 0x80000u;
  unsigned int v122 = *(std::string **)(a1 + 416);
  if (!v122)
  {
    uint64_t v123 = *(void *)(a1 + 8);
    v124 = (void *)(v123 & 0xFFFFFFFFFFFFFFFCLL);
    if (v123) {
      v124 = (void *)*v124;
    }
    unsigned int v122 = (std::string *)sub_13DAC1C((uint64_t)v124);
    *(void *)(a1 + 416) = v122;
  }
  if (*(void *)(a2 + 416)) {
    unint64_t v125 = *(uint64_t (****)())(a2 + 416);
  }
  else {
    unint64_t v125 = &off_2536938;
  }
  sub_13221BC(v122, (uint64_t)v125);
  if ((v49 & 0x100000) == 0)
  {
LABEL_157:
    if ((v49 & 0x200000) == 0) {
      goto LABEL_158;
    }
    goto LABEL_216;
  }
LABEL_208:
  *(_DWORD *)(a1 + 40) |= 0x100000u;
  v126 = *(std::string **)(a1 + 424);
  if (!v126)
  {
    uint64_t v127 = *(void *)(a1 + 8);
    uint64_t v128 = (void *)(v127 & 0xFFFFFFFFFFFFFFFCLL);
    if (v127) {
      uint64_t v128 = (void *)*v128;
    }
    v126 = (std::string *)sub_13D90CC((uint64_t)v128);
    *(void *)(a1 + 424) = v126;
  }
  if (*(void *)(a2 + 424)) {
    v129 = *(uint64_t (****)())(a2 + 424);
  }
  else {
    v129 = &off_2535D18;
  }
  sub_1381334(v126, (uint64_t)v129);
  if ((v49 & 0x200000) == 0)
  {
LABEL_158:
    if ((v49 & 0x400000) == 0) {
      goto LABEL_159;
    }
LABEL_217:
    *(_DWORD *)(a1 + 436) = *(_DWORD *)(a2 + 436);
    if ((v49 & 0x800000) == 0) {
      goto LABEL_161;
    }
    goto LABEL_160;
  }
LABEL_216:
  *(_DWORD *)(a1 + 432) = *(_DWORD *)(a2 + 432);
  if ((v49 & 0x400000) != 0) {
    goto LABEL_217;
  }
LABEL_159:
  if ((v49 & 0x800000) != 0) {
LABEL_160:
  }
    *(unsigned char *)(a1 + 440) = *(unsigned char *)(a2 + 440);
LABEL_161:
  *(_DWORD *)(a1 + 40) |= v49;
LABEL_162:
  if (!HIBYTE(v49)) {
    goto LABEL_172;
  }
  if ((v49 & 0x1000000) != 0)
  {
    *(unsigned char *)(a1 + 441) = *(unsigned char *)(a2 + 441);
    if ((v49 & 0x2000000) == 0)
    {
LABEL_165:
      if ((v49 & 0x4000000) == 0) {
        goto LABEL_166;
      }
      goto LABEL_221;
    }
  }
  else if ((v49 & 0x2000000) == 0)
  {
    goto LABEL_165;
  }
  *(_DWORD *)(a1 + 444) = *(_DWORD *)(a2 + 444);
  if ((v49 & 0x4000000) == 0)
  {
LABEL_166:
    if ((v49 & 0x8000000) == 0) {
      goto LABEL_167;
    }
    goto LABEL_222;
  }
LABEL_221:
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  if ((v49 & 0x8000000) == 0)
  {
LABEL_167:
    if ((v49 & 0x10000000) == 0) {
      goto LABEL_168;
    }
    goto LABEL_223;
  }
LABEL_222:
  *(_DWORD *)(a1 + 456) = *(_DWORD *)(a2 + 456);
  if ((v49 & 0x10000000) == 0)
  {
LABEL_168:
    if ((v49 & 0x20000000) == 0) {
      goto LABEL_169;
    }
    goto LABEL_224;
  }
LABEL_223:
  *(_DWORD *)(a1 + 460) = *(_DWORD *)(a2 + 460);
  if ((v49 & 0x20000000) == 0)
  {
LABEL_169:
    if ((v49 & 0x40000000) == 0) {
      goto LABEL_170;
    }
LABEL_225:
    *(_DWORD *)(a1 + 468) = *(_DWORD *)(a2 + 468);
    if ((v49 & 0x80000000) == 0) {
      goto LABEL_171;
    }
LABEL_226:
    *(_DWORD *)(a1 + 472) = *(_DWORD *)(a2 + 472);
    goto LABEL_171;
  }
LABEL_224:
  *(_DWORD *)(a1 + 464) = *(_DWORD *)(a2 + 464);
  if ((v49 & 0x40000000) != 0) {
    goto LABEL_225;
  }
LABEL_170:
  if ((v49 & 0x80000000) != 0) {
    goto LABEL_226;
  }
LABEL_171:
  *(_DWORD *)(a1 + 40) |= v49;
LABEL_172:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v109 = *(void *)(a2 + 8);
  if (v109)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v109 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_162BB80(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_1627DF0(a1);
    sub_162B080(a1, a2);
  }
}

uint64_t sub_162BBCC(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_13EDF40(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 104);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_13EDFC4(*(void *)(*(void *)(a1 + 112) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 128);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_15B06D8(*(void *)(*(void *)(a1 + 136) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v12 = *(unsigned int *)(a1 + 200);
    while ((int)v12 >= 1)
    {
      uint64_t v13 = *(void *)(*(void *)(a1 + 208) + 8 * v12--);
      if ((*(unsigned char *)(v13 + 16) & 1) == 0) {
        return 0;
      }
    }
    int v14 = *(_DWORD *)(a1 + 40);
    if ((v14 & 0x20) != 0)
    {
      uint64_t result = sub_13B1748(*(void *)(a1 + 304));
      if (!result) {
        return result;
      }
      int v14 = *(_DWORD *)(a1 + 40);
    }
    if ((v14 & 0x40) != 0)
    {
      uint64_t result = sub_15B06D8(*(void *)(a1 + 312));
      if (!result) {
        return result;
      }
      int v14 = *(_DWORD *)(a1 + 40);
    }
    if ((v14 & 0x80) != 0)
    {
      uint64_t result = sub_15B1FC8(*(void *)(a1 + 320) + 24);
      if (!result) {
        return result;
      }
      int v14 = *(_DWORD *)(a1 + 40);
    }
    if ((v14 & 0x100) != 0)
    {
      uint64_t result = sub_13E62E4(*(void *)(a1 + 328));
      if (!result) {
        return result;
      }
      int v14 = *(_DWORD *)(a1 + 40);
    }
    if ((v14 & 0x200) != 0 && (~*(_DWORD *)(*(void *)(a1 + 336) + 16) & 3) != 0) {
      return 0;
    }
    if ((v14 & 0x4000) != 0)
    {
      uint64_t result = sub_15B06D8(*(void *)(a1 + 376));
      if (!result) {
        return result;
      }
      int v14 = *(_DWORD *)(a1 + 40);
    }
    if ((v14 & 0x8000) != 0)
    {
      uint64_t result = sub_1305FA8(*(void *)(a1 + 384));
      if (!result) {
        return result;
      }
      int v14 = *(_DWORD *)(a1 + 40);
    }
    if ((v14 & 0x10000) != 0)
    {
      uint64_t result = sub_1393A58(*(void *)(a1 + 392));
      if (!result) {
        return result;
      }
      int v14 = *(_DWORD *)(a1 + 40);
    }
    if ((v14 & 0x20000) == 0) {
      return 1;
    }
    uint64_t result = sub_13D2450(*(void *)(a1 + 400));
    if (result) {
      return 1;
    }
  }
  return result;
}

void sub_162BD58(uint64_t a1, uint64_t a2)
{
  sub_1885338((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v4;
  LODWORD(v4) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v4;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v7;
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  uint64_t v10 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = v10;
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v12;
  uint64_t v13 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a2 + 112) = v13;
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v15 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a2 + 120) = v14;
  *(void *)(a2 + 128) = v15;
  uint64_t v16 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a2 + 136) = v16;
  uint64_t v17 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a2 + 144) = v17;
  *(void *)(a2 + 152) = v18;
  uint64_t v19 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a2 + 160) = v19;
  uint64_t v20 = *(void *)(a1 + 168);
  uint64_t v21 = *(void *)(a1 + 176);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a2 + 168) = v20;
  *(void *)(a2 + 176) = v21;
  uint64_t v22 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a2 + 184) = v22;
  uint64_t v23 = *(void *)(a1 + 192);
  uint64_t v24 = *(void *)(a1 + 200);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(void *)(a2 + 192) = v23;
  *(void *)(a2 + 200) = v24;
  uint64_t v25 = *(void *)(a1 + 208);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a2 + 208) = v25;
  uint64_t v26 = *(void *)(a1 + 216);
  uint64_t v27 = *(void *)(a1 + 224);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a2 + 216) = v26;
  *(void *)(a2 + 224) = v27;
  uint64_t v28 = *(void *)(a1 + 232);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a2 + 232) = v28;
  uint64_t v29 = *(void *)(a1 + 240);
  uint64_t v30 = *(void *)(a1 + 248);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(void *)(a2 + 240) = v29;
  *(void *)(a2 + 248) = v30;
  uint64_t v31 = *(void *)(a1 + 256);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a2 + 256) = v31;
  uint64_t v32 = *(void *)(a2 + 264);
  *(void *)(a2 + 264) = *(void *)(a1 + 264);
  *(void *)(a1 + 264) = v32;
  uint64_t v33 = *(void *)(a2 + 272);
  *(void *)(a2 + 272) = *(void *)(a1 + 272);
  *(void *)(a1 + 272) = v33;
  uint64_t v34 = *(void *)(a2 + 280);
  *(void *)(a2 + 280) = *(void *)(a1 + 280);
  *(void *)(a1 + 280) = v34;
  uint64_t v35 = *(void *)(a2 + 288);
  *(void *)(a2 + 288) = *(void *)(a1 + 288);
  *(void *)(a1 + 288) = v35;
  uint64_t v36 = *(void *)(a2 + 296);
  *(void *)(a2 + 296) = *(void *)(a1 + 296);
  *(void *)(a1 + 296) = v36;
  uint64_t v37 = *(void *)(a1 + 304);
  uint64_t v38 = *(void *)(a1 + 312);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(void *)(a2 + 304) = v37;
  *(void *)(a2 + 312) = v38;
  uint64_t v39 = *(void *)(a1 + 320);
  uint64_t v40 = *(void *)(a1 + 328);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(void *)(a2 + 320) = v39;
  *(void *)(a2 + 328) = v40;
  uint64_t v41 = *(void *)(a1 + 336);
  uint64_t v42 = *(void *)(a1 + 344);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(void *)(a2 + 336) = v41;
  *(void *)(a2 + 344) = v42;
  sub_122AA78((uint64_t *)(a1 + 352), a2 + 352);
  int v43 = *(_DWORD *)(a1 + 468);
  *(_DWORD *)(a1 + 468) = *(_DWORD *)(a2 + 468);
  *(_DWORD *)(a2 + 468) = v43;
  int v44 = *(_DWORD *)(a1 + 472);
  *(_DWORD *)(a1 + 472) = *(_DWORD *)(a2 + 472);
  *(_DWORD *)(a2 + 472) = v44;
}

void *sub_162BF74@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.DirectionsRequest");
}

uint64_t sub_162BF84(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24CA410;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_162BFE8(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_162C018(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24CA410;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  return a1;
}

void sub_162C0AC(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_162C0E8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_162C164(void *a1)
{
  sub_162C0E8(a1);

  operator delete();
}

unsigned char *sub_162C19C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_162C1EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (v8 - 4008 > 0x317)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2541D08, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_162C334(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 501, 600, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_162C400(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_162C458(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_162C460@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.DirectionsResponse.DirectionsRequestResponseAnalyticsData");
}

uint64_t sub_162C470(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24CA490;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = a2;
  *(void *)(a1 + 184) = a2;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = a2;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = a2;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = a2;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = a2;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = a2;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = a2;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = a2;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = 0;
  *(void *)(a1 + 376) = &qword_2550250;
  *(void *)(a1 + 384) = &qword_2550250;
  *(void *)(a1 + 392) = &qword_2550250;
  *(void *)(a1 + 400) = &qword_2550250;
  *(void *)(a1 + 408) = &qword_2550250;
  *(void *)(a1 + 416) = &qword_2550250;
  *(void *)(a1 + 424) = &qword_2550250;
  *(_OWORD *)(a1 + 540) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_DWORD *)(a1 + 556) = 2;
  return a1;
}

void sub_162C564(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_162C598(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v84 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v83 = a1 + 16;
  *(void *)a1 = off_24CA490;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  unint64_t v4 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v5 = *(_DWORD *)(a2 + 56);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 64);
    uint64_t v7 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_136818C(v4, v7, (uint64_t *)(v6 + 8), v5, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v8 = *(_DWORD *)(a1 + 56) + v5;
    *(_DWORD *)(a1 + 56) = v8;
    unsigned int v9 = *(int **)(a1 + 64);
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v10 = *(_DWORD *)(a2 + 80);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 88);
    uint64_t v12 = (uint64_t *)sub_188CCE4(a1 + 72, v10);
    sub_163A1D0((uint64_t *)(a1 + 72), v12, (uint64_t *)(v11 + 8), v10, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v13 = *(_DWORD *)(a1 + 80) + v10;
    *(_DWORD *)(a1 + 80) = v13;
    uint64_t v14 = *(int **)(a1 + 88);
    if (*v14 < v13) {
      int *v14 = v13;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v15 = *(_DWORD *)(a2 + 104);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 112);
    uint64_t v17 = (uint64_t *)sub_188CCE4(a1 + 96, v15);
    sub_13694B8((uint64_t *)(a1 + 96), v17, (uint64_t *)(v16 + 8), v15, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v18 = *(_DWORD *)(a1 + 104) + v15;
    *(_DWORD *)(a1 + 104) = v18;
    uint64_t v19 = *(int **)(a1 + 112);
    if (*v19 < v18) {
      int *v19 = v18;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v20 = *(_DWORD *)(a2 + 128);
  if (v20)
  {
    uint64_t v21 = *(void *)(a2 + 136);
    uint64_t v22 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_13694B8((uint64_t *)(a1 + 120), v22, (uint64_t *)(v21 + 8), v20, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v23 = *(_DWORD *)(a1 + 128) + v20;
    *(_DWORD *)(a1 + 128) = v23;
    uint64_t v24 = *(int **)(a1 + 136);
    if (*v24 < v23) {
      *uint64_t v24 = v23;
    }
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  int v25 = *(_DWORD *)(a2 + 152);
  if (v25)
  {
    uint64_t v26 = *(void *)(a2 + 160);
    uint64_t v27 = (std::string **)sub_188CCE4(a1 + 144, v25);
    sub_148F154((uint64_t *)(a1 + 144), v27, (uint64_t *)(v26 + 8), v25, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v28 = *(_DWORD *)(a1 + 152) + v25;
    *(_DWORD *)(a1 + 152) = v28;
    uint64_t v29 = *(int **)(a1 + 160);
    if (*v29 < v28) {
      *uint64_t v29 = v28;
    }
  }
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  int v30 = *(_DWORD *)(a2 + 168);
  if (v30)
  {
    sub_188C80C((unsigned int *)(a1 + 168), v30);
    uint64_t v31 = *(void **)(a1 + 176);
    *(_DWORD *)(a1 + 168) += *(_DWORD *)(a2 + 168);
    memcpy(v31, *(const void **)(a2 + 176), 4 * *(int *)(a2 + 168));
  }
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  int v32 = *(_DWORD *)(a2 + 192);
  if (v32)
  {
    uint64_t v33 = *(void *)(a2 + 200);
    uint64_t v34 = (uint64_t *)sub_188CCE4(a1 + 184, *(_DWORD *)(a2 + 192));
    sub_163A25C((uint64_t *)(a1 + 184), v34, (uint64_t *)(v33 + 8), v32, **(_DWORD **)(a1 + 200) - *(_DWORD *)(a1 + 192));
    int v35 = *(_DWORD *)(a1 + 192) + v32;
    *(_DWORD *)(a1 + 192) = v35;
    uint64_t v36 = *(int **)(a1 + 200);
    if (*v36 < v35) {
      int *v36 = v35;
    }
  }
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  int v37 = *(_DWORD *)(a2 + 216);
  if (v37)
  {
    uint64_t v38 = *(void *)(a2 + 224);
    uint64_t v39 = (uint64_t *)sub_188CCE4(a1 + 208, *(_DWORD *)(a2 + 216));
    sub_148DAF4((uint64_t *)(a1 + 208), v39, (uint64_t *)(v38 + 8), v37, **(_DWORD **)(a1 + 224) - *(_DWORD *)(a1 + 216));
    int v40 = *(_DWORD *)(a1 + 216) + v37;
    *(_DWORD *)(a1 + 216) = v40;
    uint64_t v41 = *(int **)(a1 + 224);
    if (*v41 < v40) {
      int *v41 = v40;
    }
  }
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  int v42 = *(_DWORD *)(a2 + 240);
  if (v42)
  {
    uint64_t v43 = *(void *)(a2 + 248);
    int v44 = (uint64_t *)sub_188CCE4(a1 + 232, *(_DWORD *)(a2 + 240));
    sub_148D9DC((uint64_t *)(a1 + 232), v44, (uint64_t *)(v43 + 8), v42, **(_DWORD **)(a1 + 248) - *(_DWORD *)(a1 + 240));
    int v45 = *(_DWORD *)(a1 + 240) + v42;
    *(_DWORD *)(a1 + 240) = v45;
    uint64_t v46 = *(int **)(a1 + 248);
    if (*v46 < v45) {
      *uint64_t v46 = v45;
    }
  }
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  int v47 = *(_DWORD *)(a2 + 264);
  if (v47)
  {
    uint64_t v48 = *(void *)(a2 + 272);
    unsigned int v49 = (uint64_t *)sub_188CCE4(a1 + 256, *(_DWORD *)(a2 + 264));
    sub_148DA68((uint64_t *)(a1 + 256), v49, (uint64_t *)(v48 + 8), v47, **(_DWORD **)(a1 + 272) - *(_DWORD *)(a1 + 264));
    int v50 = *(_DWORD *)(a1 + 264) + v47;
    *(_DWORD *)(a1 + 264) = v50;
    uint64_t v51 = *(int **)(a1 + 272);
    if (*v51 < v50) {
      int *v51 = v50;
    }
  }
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  int v52 = *(_DWORD *)(a2 + 288);
  if (v52)
  {
    uint64_t v53 = *(void *)(a2 + 296);
    uint64_t v54 = (uint64_t *)sub_188CCE4(a1 + 280, *(_DWORD *)(a2 + 288));
    sub_DF401C((uint64_t *)(a1 + 280), v54, (uint64_t *)(v53 + 8), v52, **(_DWORD **)(a1 + 296) - *(_DWORD *)(a1 + 288));
    int v55 = *(_DWORD *)(a1 + 288) + v52;
    *(_DWORD *)(a1 + 288) = v55;
    uint64_t v56 = *(int **)(a1 + 296);
    if (*v56 < v55) {
      *uint64_t v56 = v55;
    }
  }
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = 0;
  int v57 = *(_DWORD *)(a2 + 312);
  if (v57)
  {
    uint64_t v58 = *(void *)(a2 + 320);
    uint64_t v59 = (uint64_t *)sub_188CCE4(a1 + 304, *(_DWORD *)(a2 + 312));
    sub_163A2E8((uint64_t *)(a1 + 304), v59, (uint64_t *)(v58 + 8), v57, **(_DWORD **)(a1 + 320) - *(_DWORD *)(a1 + 312));
    int v60 = *(_DWORD *)(a1 + 312) + v57;
    *(_DWORD *)(a1 + 312) = v60;
    uint64_t v61 = *(int **)(a1 + 320);
    if (*v61 < v60) {
      int *v61 = v60;
    }
  }
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0;
  int v62 = *(_DWORD *)(a2 + 336);
  if (v62)
  {
    uint64_t v63 = *(void *)(a2 + 344);
    uint64_t v64 = (std::string **)sub_188CCE4(a1 + 328, *(_DWORD *)(a2 + 336));
    sub_188FB98(a1 + 328, v64, (const std::string **)(v63 + 8), v62, **(_DWORD **)(a1 + 344) - *(_DWORD *)(a1 + 336));
    int v65 = *(_DWORD *)(a1 + 336) + v62;
    *(_DWORD *)(a1 + 336) = v65;
    uint64_t v66 = *(int **)(a1 + 344);
    if (*v66 < v65) {
      *uint64_t v66 = v65;
    }
  }
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = 0;
  int v67 = *(_DWORD *)(a2 + 360);
  if (v67)
  {
    uint64_t v68 = *(void *)(a2 + 368);
    uint64_t v69 = (uint64_t *)sub_188CCE4(a1 + 352, *(_DWORD *)(a2 + 360));
    sub_12C31B8((uint64_t *)(a1 + 352), v69, (uint64_t *)(v68 + 8), v67, **(_DWORD **)(a1 + 368) - *(_DWORD *)(a1 + 360));
    int v70 = *(_DWORD *)(a1 + 360) + v67;
    *(_DWORD *)(a1 + 360) = v70;
    uint64_t v71 = *(int **)(a1 + 368);
    if (*v71 < v70) {
      int *v71 = v70;
    }
  }
  uint64_t v72 = *(void *)(a2 + 8);
  if (v72) {
    sub_188B4F8(v84, (v72 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v83, a2 + 16);
  *(void *)(a1 + 376) = &qword_2550250;
  int v73 = *(_DWORD *)(a2 + 40);
  if (v73)
  {
    uint64_t v74 = (uint64_t *)(*v84 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v84) {
      uint64_t v74 = (uint64_t *)*v74;
    }
    sub_1881DF4((std::string **)(a1 + 376), (long long *)(*(void *)(a2 + 376) & 0xFFFFFFFFFFFFFFFELL), v74);
    int v73 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 384) = &qword_2550250;
  if ((v73 & 2) != 0)
  {
    unint64_t v75 = (uint64_t *)(*v84 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v84) {
      unint64_t v75 = (uint64_t *)*v75;
    }
    sub_1881DF4((std::string **)(a1 + 384), (long long *)(*(void *)(a2 + 384) & 0xFFFFFFFFFFFFFFFELL), v75);
    int v73 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 392) = &qword_2550250;
  if ((v73 & 4) != 0)
  {
    uint64_t v76 = (uint64_t *)(*v84 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v84) {
      uint64_t v76 = (uint64_t *)*v76;
    }
    sub_1881DF4((std::string **)(a1 + 392), (long long *)(*(void *)(a2 + 392) & 0xFFFFFFFFFFFFFFFELL), v76);
    int v73 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 400) = &qword_2550250;
  if ((v73 & 8) != 0)
  {
    uint64_t v77 = (uint64_t *)(*v84 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v84) {
      uint64_t v77 = (uint64_t *)*v77;
    }
    sub_1881DF4((std::string **)(a1 + 400), (long long *)(*(void *)(a2 + 400) & 0xFFFFFFFFFFFFFFFELL), v77);
    int v73 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 408) = &qword_2550250;
  if ((v73 & 0x10) != 0)
  {
    uint64_t v78 = (uint64_t *)(*v84 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v84) {
      uint64_t v78 = (uint64_t *)*v78;
    }
    sub_1881DF4((std::string **)(a1 + 408), (long long *)(*(void *)(a2 + 408) & 0xFFFFFFFFFFFFFFFELL), v78);
    int v73 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 416) = &qword_2550250;
  if ((v73 & 0x20) != 0)
  {
    uint64_t v79 = (uint64_t *)(*v84 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v84) {
      uint64_t v79 = (uint64_t *)*v79;
    }
    sub_1881DF4((std::string **)(a1 + 416), (long long *)(*(void *)(a2 + 416) & 0xFFFFFFFFFFFFFFFELL), v79);
    int v73 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 424) = &qword_2550250;
  if ((v73 & 0x40) != 0)
  {
    uint64_t v80 = (uint64_t *)(*v84 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v84) {
      uint64_t v80 = (uint64_t *)*v80;
    }
    sub_1881DF4((std::string **)(a1 + 424), (long long *)(*(void *)(a2 + 424) & 0xFFFFFFFFFFFFFFFELL), v80);
    int v73 = *(_DWORD *)(a2 + 40);
  }
  if ((v73 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 432) = 0;
  if ((v73 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 440) = 0;
  if ((v73 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 448) = 0;
  if ((v73 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 456) = 0;
  if ((v73 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 464) = 0;
  if ((v73 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 472) = 0;
  if ((v73 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 480) = 0;
  if ((v73 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 488) = 0;
  if ((v73 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 496) = 0;
  if ((v73 & 0x10000) != 0) {
    operator new();
  }
  *(void *)(a1 + 504) = 0;
  if ((v73 & 0x20000) != 0) {
    operator new();
  }
  *(void *)(a1 + 512) = 0;
  if ((v73 & 0x40000) != 0) {
    operator new();
  }
  *(void *)(a1 + 520) = 0;
  if ((v73 & 0x80000) != 0) {
    operator new();
  }
  *(void *)(a1 + 528) = 0;
  long long v81 = *(_OWORD *)(a2 + 536);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = v81;
  return a1;
}

void sub_162D04C()
{
}

void *sub_162D2A4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_162D3D0((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_12C2634(a1 + 44);
  sub_1889DE8(a1 + 41);
  sub_163A0C4(a1 + 38);
  sub_148EDBC(a1 + 35);
  sub_148BFC8(a1 + 32);
  sub_148BF48(a1 + 29);
  sub_148C048(a1 + 26);
  sub_163A044(a1 + 23);
  sub_1889DA8((uint64_t)(a1 + 21));
  sub_148EE3C(a1 + 18);
  sub_13693AC(a1 + 15);
  sub_13693AC(a1 + 12);
  sub_1639FC4(a1 + 9);
  sub_1367118(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_162D3D0(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (*(uint64_t **)(result + 376) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 376));
  }
  if (*(uint64_t **)(result + 384) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 384));
  }
  if (*(uint64_t **)(result + 392) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 392));
  }
  if (*(uint64_t **)(result + 400) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 400));
  }
  if (*(uint64_t **)(result + 408) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 408));
  }
  if (*(uint64_t **)(result + 416) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 416));
  }
  if (*(uint64_t **)(result + 424) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 424));
  }
  if ((uint64_t (***)())result != &off_2541D38)
  {
    uint64_t v2 = *(void *)(result + 432);
    if (v2)
    {
      sub_132A084(v2);
      operator delete();
    }
    uint64_t v3 = v1[55];
    if (v3)
    {
      sub_163284C(v3);
      operator delete();
    }
    if (v1[56])
    {
      sub_145FE08();
      operator delete();
    }
    uint64_t v4 = v1[57];
    if (v4)
    {
      sub_13CBD40(v4);
      operator delete();
    }
    int v5 = (void *)v1[58];
    if (v5)
    {
      sub_13060E0(v5);
      operator delete();
    }
    uint64_t v6 = v1[59];
    if (v6)
    {
      sub_13CED30(v6);
      operator delete();
    }
    uint64_t v7 = (void *)v1[60];
    if (v7)
    {
      sub_134C86C(v7);
      operator delete();
    }
    int v8 = (void *)v1[61];
    if (v8)
    {
      sub_162C0E8(v8);
      operator delete();
    }
    if (v1[62])
    {
      sub_1472DE8();
      operator delete();
    }
    if (v1[63])
    {
      sub_139E068();
      operator delete();
    }
    unsigned int v9 = (void *)v1[64];
    if (v9)
    {
      sub_13D5CE4(v9);
      operator delete();
    }
    uint64_t v10 = v1[65];
    if (v10)
    {
      sub_13ADB2C(v10);
      operator delete();
    }
    uint64_t result = v1[66];
    if (result)
    {
      sub_134A04C((void *)result);
      operator delete();
    }
  }
  return result;
}

void sub_162D650(void *a1)
{
  sub_162D2A4(a1);

  operator delete();
}

uint64_t sub_162D688(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_13A6644(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_13F04AC(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 104);
  if ((int)v8 >= 1)
  {
    unsigned int v9 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_13B9618(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 128);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_13B9618(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 152);
  if ((int)v14 >= 1)
  {
    int v15 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_13C09AC(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 152) = 0;
  }
  *(_DWORD *)(a1 + 168) = 0;
  uint64_t v17 = *(unsigned int *)(a1 + 192);
  if ((int)v17 >= 1)
  {
    int v18 = (uint64_t *)(*(void *)(a1 + 200) + 8);
    do
    {
      uint64_t v19 = *v18++;
      sub_1332AC0(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(a1 + 192) = 0;
  }
  uint64_t v20 = *(unsigned int *)(a1 + 216);
  if ((int)v20 >= 1)
  {
    uint64_t v21 = (uint64_t *)(*(void *)(a1 + 224) + 8);
    do
    {
      uint64_t v22 = *v21++;
      sub_13BB8E4(v22);
      --v20;
    }
    while (v20);
    *(_DWORD *)(a1 + 216) = 0;
  }
  uint64_t v23 = *(unsigned int *)(a1 + 240);
  if ((int)v23 >= 1)
  {
    uint64_t v24 = (unsigned char **)(*(void *)(a1 + 248) + 8);
    do
    {
      int v25 = *v24++;
      sub_13BFD78(v25);
      --v23;
    }
    while (v23);
    *(_DWORD *)(a1 + 240) = 0;
  }
  uint64_t v26 = *(unsigned int *)(a1 + 264);
  if ((int)v26 >= 1)
  {
    uint64_t v27 = (unsigned char **)(*(void *)(a1 + 272) + 8);
    do
    {
      int v28 = *v27++;
      sub_13BC9E8(v28);
      --v26;
    }
    while (v26);
    *(_DWORD *)(a1 + 264) = 0;
  }
  uint64_t v29 = *(unsigned int *)(a1 + 288);
  if ((int)v29 >= 1)
  {
    int v30 = (uint64_t *)(*(void *)(a1 + 296) + 8);
    do
    {
      uint64_t v31 = *v30++;
      sub_13A22B8(v31);
      --v29;
    }
    while (v29);
    *(_DWORD *)(a1 + 288) = 0;
  }
  uint64_t v32 = *(unsigned int *)(a1 + 312);
  if ((int)v32 >= 1)
  {
    uint64_t v33 = (uint64_t *)(*(void *)(a1 + 320) + 8);
    do
    {
      uint64_t v34 = *v33++;
      sub_132FBB0(v34);
      --v32;
    }
    while (v32);
    *(_DWORD *)(a1 + 312) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 328);
  uint64_t v36 = *(unsigned int *)(a1 + 360);
  if ((int)v36 >= 1)
  {
    int v37 = (uint64_t *)(*(void *)(a1 + 368) + 8);
    do
    {
      uint64_t v38 = *v37++;
      uint64_t result = sub_1338118(v38);
      --v36;
    }
    while (v36);
    *(_DWORD *)(a1 + 360) = 0;
  }
  int v39 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v39) {
    goto LABEL_59;
  }
  if (v39)
  {
    unint64_t v42 = *(void *)(a1 + 376) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v42 + 23) < 0)
    {
      **(unsigned char **)unint64_t v42 = 0;
      *(void *)(v42 + 8) = 0;
      if ((v39 & 2) != 0) {
        goto LABEL_99;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v42 = 0;
      *(unsigned char *)(v42 + 23) = 0;
      if ((v39 & 2) != 0) {
        goto LABEL_99;
      }
    }
LABEL_52:
    if ((v39 & 4) == 0) {
      goto LABEL_53;
    }
LABEL_103:
    unint64_t v44 = *(void *)(a1 + 392) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v44 + 23) < 0)
    {
      **(unsigned char **)unint64_t v44 = 0;
      *(void *)(v44 + 8) = 0;
      if ((v39 & 8) != 0) {
        goto LABEL_107;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v44 = 0;
      *(unsigned char *)(v44 + 23) = 0;
      if ((v39 & 8) != 0) {
        goto LABEL_107;
      }
    }
LABEL_54:
    if ((v39 & 0x10) == 0) {
      goto LABEL_55;
    }
LABEL_111:
    unint64_t v46 = *(void *)(a1 + 408) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v46 + 23) < 0)
    {
      **(unsigned char **)unint64_t v46 = 0;
      *(void *)(v46 + 8) = 0;
      if ((v39 & 0x20) != 0) {
        goto LABEL_115;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v46 = 0;
      *(unsigned char *)(v46 + 23) = 0;
      if ((v39 & 0x20) != 0) {
        goto LABEL_115;
      }
    }
LABEL_56:
    if ((v39 & 0x40) == 0) {
      goto LABEL_57;
    }
    goto LABEL_119;
  }
  if ((v39 & 2) == 0) {
    goto LABEL_52;
  }
LABEL_99:
  unint64_t v43 = *(void *)(a1 + 384) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v43 + 23) < 0)
  {
    **(unsigned char **)unint64_t v43 = 0;
    *(void *)(v43 + 8) = 0;
    if ((v39 & 4) != 0) {
      goto LABEL_103;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v43 = 0;
    *(unsigned char *)(v43 + 23) = 0;
    if ((v39 & 4) != 0) {
      goto LABEL_103;
    }
  }
LABEL_53:
  if ((v39 & 8) == 0) {
    goto LABEL_54;
  }
LABEL_107:
  unint64_t v45 = *(void *)(a1 + 400) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v45 + 23) < 0)
  {
    **(unsigned char **)unint64_t v45 = 0;
    *(void *)(v45 + 8) = 0;
    if ((v39 & 0x10) != 0) {
      goto LABEL_111;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v45 = 0;
    *(unsigned char *)(v45 + 23) = 0;
    if ((v39 & 0x10) != 0) {
      goto LABEL_111;
    }
  }
LABEL_55:
  if ((v39 & 0x20) == 0) {
    goto LABEL_56;
  }
LABEL_115:
  unint64_t v47 = *(void *)(a1 + 416) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v47 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v47 = 0;
    *(unsigned char *)(v47 + 23) = 0;
    if ((v39 & 0x40) != 0) {
      goto LABEL_119;
    }
LABEL_57:
    if ((v39 & 0x80) == 0) {
      goto LABEL_59;
    }
    goto LABEL_58;
  }
  **(unsigned char **)unint64_t v47 = 0;
  *(void *)(v47 + 8) = 0;
  if ((v39 & 0x40) == 0) {
    goto LABEL_57;
  }
LABEL_119:
  unint64_t v48 = *(void *)(a1 + 424) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v48 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v48 = 0;
    *(unsigned char *)(v48 + 23) = 0;
    if ((v39 & 0x80) == 0) {
      goto LABEL_59;
    }
LABEL_58:
    uint64_t result = (uint64_t)sub_132A0C0(*(void *)(a1 + 432));
    goto LABEL_59;
  }
  **(unsigned char **)unint64_t v48 = 0;
  *(void *)(v48 + 8) = 0;
  if ((v39 & 0x80) != 0) {
    goto LABEL_58;
  }
LABEL_59:
  if ((v39 & 0xFF00) == 0) {
    goto LABEL_69;
  }
  if ((v39 & 0x100) != 0)
  {
    uint64_t result = sub_162DB58(*(void *)(a1 + 440));
    if ((v39 & 0x200) == 0)
    {
LABEL_62:
      if ((v39 & 0x400) == 0) {
        goto LABEL_63;
      }
      goto LABEL_88;
    }
  }
  else if ((v39 & 0x200) == 0)
  {
    goto LABEL_62;
  }
  uint64_t result = sub_1369BB4(*(void *)(a1 + 448));
  if ((v39 & 0x400) == 0)
  {
LABEL_63:
    if ((v39 & 0x800) == 0) {
      goto LABEL_64;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t result = sub_13CBD7C(*(void *)(a1 + 456));
  if ((v39 & 0x800) == 0)
  {
LABEL_64:
    if ((v39 & 0x1000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t result = sub_130611C(*(void *)(a1 + 464));
  if ((v39 & 0x1000) == 0)
  {
LABEL_65:
    if ((v39 & 0x2000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t result = sub_13CED6C(*(void *)(a1 + 472));
  if ((v39 & 0x2000) == 0)
  {
LABEL_66:
    if ((v39 & 0x4000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t result = sub_134C8A8(*(void *)(a1 + 480));
  if ((v39 & 0x4000) == 0)
  {
LABEL_67:
    if ((v39 & 0x8000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_68;
  }
LABEL_92:
  uint64_t result = (uint64_t)sub_162C19C(*(void *)(a1 + 488));
  if ((v39 & 0x8000) != 0) {
LABEL_68:
  }
    uint64_t result = sub_13E6514(*(void *)(a1 + 496));
LABEL_69:
  if ((v39 & 0xF0000) == 0) {
    goto LABEL_75;
  }
  if ((v39 & 0x10000) != 0)
  {
    uint64_t result = sub_139E0A4(*(void *)(a1 + 504));
    if ((v39 & 0x20000) == 0)
    {
LABEL_72:
      if ((v39 & 0x40000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_96;
    }
  }
  else if ((v39 & 0x20000) == 0)
  {
    goto LABEL_72;
  }
  uint64_t result = sub_13D5D20(*(void *)(a1 + 512));
  if ((v39 & 0x40000) == 0)
  {
LABEL_73:
    if ((v39 & 0x80000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_74;
  }
LABEL_96:
  uint64_t result = sub_13ADB68(*(void *)(a1 + 520));
  if ((v39 & 0x80000) != 0) {
LABEL_74:
  }
    uint64_t result = sub_134A088(*(void *)(a1 + 528));
LABEL_75:
  if ((v39 & 0xF00000) != 0)
  {
    *(void *)(a1 + 536) = 0;
    *(void *)(a1 + 541) = 0;
  }
  if ((v39 & 0x1F000000) != 0)
  {
    *(void *)(a1 + 552) = 0x200000000;
    *(_DWORD *)(a1 + 549) = 0;
  }
  char v41 = *(unsigned char *)(a1 + 8);
  uint64_t v40 = a1 + 8;
  *(_DWORD *)(v40 + 32) = 0;
  if (v41)
  {
    return sub_188B4AC((uint64_t *)v40);
  }
  return result;
}

uint64_t sub_162DB58(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 48) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_13C7F24(*(void *)(result + 64));
    }
    *(unsigned char *)(v1 + 72) = 1;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_162DBCC(uint64_t a1, char *a2, int32x2_t *a3)
{
  v194 = a2;
  if ((sub_11947B8((uint64_t)a3, &v194, a3[11].i32[1]) & 1) == 0)
  {
    int v192 = 0;
    v183 = (uint64_t *)(a1 + 8);
    v184 = (uint64_t *)(a1 + 352);
    v193 = (uint64_t **)(a1 + 328);
    v190 = (uint64_t *)(a1 + 280);
    v191 = (uint64_t *)(a1 + 304);
    v188 = (uint64_t *)(a1 + 232);
    v189 = (uint64_t *)(a1 + 256);
    v186 = (uint64_t *)(a1 + 184);
    v187 = (uint64_t *)(a1 + 208);
    v185 = (uint64_t *)(a1 + 144);
    while (1)
    {
      uint64_t v5 = v194 + 1;
      unsigned int v7 = *v194;
      if (*v194 < 0)
      {
        int v8 = *v5;
        unsigned int v9 = v7 + (v8 << 7);
        unsigned int v7 = v9 - 128;
        if (v8 < 0)
        {
          uint64_t v5 = (char *)sub_188C180((uint64_t)v194, v9 - 128);
          unsigned int v7 = v10;
        }
        else
        {
          uint64_t v5 = v194 + 2;
        }
      }
      v194 = v5;
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 8) {
            goto LABEL_345;
          }
          uint64_t v11 = v5 + 1;
          unint64_t v12 = *v5;
          if ((*v5 & 0x80000000) == 0) {
            goto LABEL_15;
          }
          int v13 = *v11;
          int v14 = v12 + (v13 << 7);
          unint64_t v12 = (v14 - 128);
          if (v13 < 0)
          {
            v194 = (char *)sub_188C138((uint64_t)v5, (v14 - 128));
            if (!v194) {
              goto LABEL_369;
            }
            unint64_t v12 = v164;
          }
          else
          {
            uint64_t v11 = v5 + 2;
LABEL_15:
            v194 = v11;
          }
          if (sub_13E78E4(v12))
          {
            *(_DWORD *)(a1 + 40) |= 0x100000u;
            *(_DWORD *)(a1 + 536) = v12;
            goto LABEL_323;
          }
          if (*v183) {
            v181 = (std::string *)((*v183 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v181 = (std::string *)sub_188DBD8(v183);
          }
          int v182 = 1;
          goto LABEL_364;
        case 2u:
          if (v7 != 18) {
            goto LABEL_345;
          }
          uint64_t v22 = v5 - 1;
          while (1)
          {
            uint64_t v23 = (unsigned __int8 *)(v22 + 1);
            v194 = v22 + 1;
            uint64_t v24 = *(_DWORD **)(a1 + 64);
            if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
            {
              *(_DWORD *)(a1 + 56) = v25 + 1;
              uint64_t v26 = *(void *)&v24[2 * v25 + 2];
            }
            else
            {
              uint64_t v27 = sub_13D8E84(*(void *)(a1 + 48));
              uint64_t v26 = sub_188CDC8(a1 + 48, v27);
              uint64_t v23 = (unsigned __int8 *)v194;
            }
            uint64_t v22 = sub_134AF6C(a3, v26, v23);
            v194 = v22;
            if (!v22) {
              goto LABEL_369;
            }
            if (*(void *)a3 <= (unint64_t)v22 || *v22 != 18) {
              goto LABEL_323;
            }
          }
        case 3u:
          if (v7 != 26) {
            goto LABEL_345;
          }
          int v28 = v5 - 1;
          while (1)
          {
            uint64_t v29 = (unsigned __int8 *)(v28 + 1);
            v194 = v28 + 1;
            int v30 = *(_DWORD **)(a1 + 88);
            if (v30 && (uint64_t v31 = *(int *)(a1 + 80), (int)v31 < *v30))
            {
              *(_DWORD *)(a1 + 80) = v31 + 1;
              uint64_t v32 = *(void *)&v30[2 * v31 + 2];
            }
            else
            {
              sub_147937C(*(void *)(a1 + 72));
              uint64_t v32 = sub_188CDC8(a1 + 72, v33);
              uint64_t v29 = (unsigned __int8 *)v194;
            }
            int v28 = (char *)sub_1179468(a3, v32, v29);
            v194 = v28;
            if (!v28) {
              goto LABEL_369;
            }
            if (*(void *)a3 <= (unint64_t)v28 || *v28 != 26) {
              goto LABEL_323;
            }
          }
        case 4u:
          if (v7 != 32) {
            goto LABEL_345;
          }
          uint64_t v34 = v5 + 1;
          unint64_t v12 = *v5;
          if ((*v5 & 0x80000000) == 0) {
            goto LABEL_55;
          }
          int v35 = *v34;
          int v36 = v12 + (v35 << 7);
          unint64_t v12 = (v36 - 128);
          if (v35 < 0)
          {
            v194 = (char *)sub_188C138((uint64_t)v5, (v36 - 128));
            if (!v194) {
              goto LABEL_369;
            }
            unint64_t v12 = v165;
          }
          else
          {
            uint64_t v34 = v5 + 2;
LABEL_55:
            v194 = v34;
          }
          if (v12 <= 2)
          {
            *(_DWORD *)(a1 + 40) |= 0x200000u;
            *(_DWORD *)(a1 + 540) = v12;
            goto LABEL_323;
          }
          if (*v183) {
            v181 = (std::string *)((*v183 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v181 = (std::string *)sub_188DBD8(v183);
          }
          int v182 = 4;
          goto LABEL_364;
        case 5u:
          if (v7 != 40) {
            goto LABEL_345;
          }
          v192 |= 0x800000u;
          int v37 = v5 + 1;
          uint64_t v38 = *v5;
          if ((*v5 & 0x80000000) == 0) {
            goto LABEL_62;
          }
          int v39 = *v37;
          uint64_t v38 = v38 + (v39 << 7) - 128;
          if (v39 < 0)
          {
            v166 = (char *)sub_188C138((uint64_t)v5, v38);
            v194 = v166;
            *(unsigned char *)(a1 + 548) = v167 != 0;
            if (!v166) {
              goto LABEL_369;
            }
          }
          else
          {
            int v37 = v5 + 2;
LABEL_62:
            v194 = v37;
            *(unsigned char *)(a1 + 548) = v38 != 0;
          }
          goto LABEL_323;
        case 6u:
          if (v7 != 50) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v40 = *(void *)(a1 + 8);
          char v41 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
          if (v40) {
            char v41 = (uint64_t *)*v41;
          }
          unint64_t v42 = (void *)(a1 + 376);
          goto LABEL_321;
        case 7u:
          if (v7 != 56) {
            goto LABEL_345;
          }
          v192 |= 0x1000000u;
          unint64_t v43 = v5 + 1;
          uint64_t v44 = *v5;
          if ((*v5 & 0x80000000) == 0) {
            goto LABEL_71;
          }
          int v45 = *v43;
          uint64_t v44 = v44 + (v45 << 7) - 128;
          if (v45 < 0)
          {
            v168 = (char *)sub_188C138((uint64_t)v5, v44);
            v194 = v168;
            *(unsigned char *)(a1 + 549) = v169 != 0;
            if (!v168) {
              goto LABEL_369;
            }
          }
          else
          {
            unint64_t v43 = v5 + 2;
LABEL_71:
            v194 = v43;
            *(unsigned char *)(a1 + 549) = v44 != 0;
          }
          goto LABEL_323;
        case 8u:
          if (v7 != 64) {
            goto LABEL_345;
          }
          unint64_t v46 = v5 + 1;
          unint64_t v12 = *v5;
          if ((*v5 & 0x80000000) == 0) {
            goto LABEL_76;
          }
          int v47 = *v46;
          int v48 = v12 + (v47 << 7);
          unint64_t v12 = (v48 - 128);
          if (v47 < 0)
          {
            v194 = (char *)sub_188C138((uint64_t)v5, (v48 - 128));
            if (!v194) {
              goto LABEL_369;
            }
            unint64_t v12 = v170;
          }
          else
          {
            unint64_t v46 = v5 + 2;
LABEL_76:
            v194 = v46;
          }
          if (sub_1369B68(v12))
          {
            *(_DWORD *)(a1 + 40) |= 0x10000000u;
            *(_DWORD *)(a1 + 556) = v12;
          }
          else
          {
            if (*v183) {
              v181 = (std::string *)((*v183 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              v181 = (std::string *)sub_188DBD8(v183);
            }
            int v182 = 8;
LABEL_364:
            sub_188C020(v182, v12, v181);
          }
          goto LABEL_323;
        case 9u:
          if (v7 != 74) {
            goto LABEL_345;
          }
          unsigned int v49 = v5 - 1;
          while (1)
          {
            int v50 = (unsigned __int8 *)(v49 + 1);
            v194 = v49 + 1;
            uint64_t v51 = *(_DWORD **)(a1 + 112);
            if (v51 && (uint64_t v52 = *(int *)(a1 + 104), (int)v52 < *v51))
            {
              *(_DWORD *)(a1 + 104) = v52 + 1;
              uint64_t v53 = *(void *)&v51[2 * v52 + 2];
            }
            else
            {
              uint64_t v54 = sub_13D9608(*(void *)(a1 + 96));
              uint64_t v53 = sub_188CDC8(a1 + 96, v54);
              int v50 = (unsigned __int8 *)v194;
            }
            unsigned int v49 = (char *)sub_11AB844(a3, v53, v50);
            v194 = v49;
            if (!v49) {
              goto LABEL_369;
            }
            if (*(void *)a3 <= (unint64_t)v49 || *v49 != 74) {
              goto LABEL_323;
            }
          }
        case 0xAu:
          if (v7 != 82) {
            goto LABEL_345;
          }
          int v55 = v5 - 1;
          while (1)
          {
            uint64_t v56 = (unsigned __int8 *)(v55 + 1);
            v194 = v55 + 1;
            int v57 = *(_DWORD **)(a1 + 136);
            if (v57 && (uint64_t v58 = *(int *)(a1 + 128), (int)v58 < *v57))
            {
              *(_DWORD *)(a1 + 128) = v58 + 1;
              uint64_t v59 = *(void *)&v57[2 * v58 + 2];
            }
            else
            {
              uint64_t v60 = sub_13D9608(*(void *)(a1 + 120));
              uint64_t v59 = sub_188CDC8(a1 + 120, v60);
              uint64_t v56 = (unsigned __int8 *)v194;
            }
            int v55 = (char *)sub_11AB844(a3, v59, v56);
            v194 = v55;
            if (!v55) {
              goto LABEL_369;
            }
            if (*(void *)a3 <= (unint64_t)v55 || *v55 != 82) {
              goto LABEL_323;
            }
          }
        case 0xBu:
          if (v7 != 90) {
            goto LABEL_345;
          }
          uint64_t v61 = v5 - 1;
          while (1)
          {
            int v62 = (unsigned __int8 *)(v61 + 1);
            v194 = v61 + 1;
            uint64_t v63 = *(_DWORD **)(a1 + 160);
            if (v63 && (uint64_t v64 = *(int *)(a1 + 152), (int)v64 < *v63))
            {
              *(_DWORD *)(a1 + 152) = v64 + 1;
              uint64_t v65 = *(void *)&v63[2 * v64 + 2];
            }
            else
            {
              sub_13D9AD0(*v185);
              uint64_t v65 = sub_188CDC8((uint64_t)v185, v66);
              int v62 = (unsigned __int8 *)v194;
            }
            uint64_t v61 = sub_13E7908(a3, v65, v62);
            v194 = v61;
            if (!v61) {
              goto LABEL_369;
            }
            if (*(void *)a3 <= (unint64_t)v61 || *v61 != 90) {
              goto LABEL_323;
            }
          }
        case 0xCu:
        case 0x1Cu:
          goto LABEL_345;
        case 0xDu:
          if (v7 == 104)
          {
            int v67 = v5 - 1;
            while (1)
            {
              v194 = v67 + 1;
              unint64_t v68 = v67[1];
              uint64_t v69 = v67 + 2;
              if (v67[1] < 0)
              {
                int v70 = *v69;
                int v71 = v68 + (v70 << 7);
                unint64_t v68 = (v71 - 128);
                if (v70 < 0)
                {
                  v194 = (char *)sub_188C138((uint64_t)(v67 + 1), (v71 - 128));
                  if (!v194) {
                    goto LABEL_369;
                  }
                  unint64_t v68 = v74;
                  goto LABEL_115;
                }
                uint64_t v69 = v67 + 3;
              }
              v194 = v69;
LABEL_115:
              if (sub_138DE04(v68))
              {
                uint64_t v72 = *(unsigned int *)(a1 + 168);
                if (v72 == *(_DWORD *)(a1 + 172))
                {
                  int v73 = v72 + 1;
                  sub_188C80C((unsigned int *)(a1 + 168), v72 + 1);
                  *(_DWORD *)(*(void *)(a1 + 176) + 4 * v72) = v68;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 176) + 4 * v72) = v68;
                  int v73 = v72 + 1;
                }
                *(_DWORD *)(a1 + 168) = v73;
              }
              else
              {
                if (*v183) {
                  unint64_t v75 = (std::string *)((*v183 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  unint64_t v75 = (std::string *)sub_188DBD8(v183);
                }
                sub_188C020(13, v68, v75);
              }
              int v67 = v194;
              if (*(void *)a3 <= (unint64_t)v194 || *v194 != 104) {
                goto LABEL_323;
              }
            }
          }
          if (v7 == 106)
          {
            *(void *)&long long v195 = a1 + 168;
            *((void *)&v195 + 1) = sub_138DE04;
            uint64_t v196 = a1 + 8;
            int v197 = 13;
            unint64_t v87 = sub_1112E88((uint64_t)a3, v5, &v195);
          }
          else
          {
LABEL_345:
            if (v7) {
              BOOL v179 = (v7 & 7) == 4;
            }
            else {
              BOOL v179 = 1;
            }
            if (v179)
            {
              if (v5) {
                a3[10].i32[0] = v7 - 1;
              }
              goto LABEL_4;
            }
            if (v7 - 7920 < 0x828 || v7 - 80008 <= 0x31F)
            {
              unint64_t v87 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v7, v5, (uint64_t)&off_2541D38, v183, a3);
            }
            else
            {
              if (*v183)
              {
                v180 = (std::string *)((*v183 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                v180 = (std::string *)sub_188DBD8(v183);
                uint64_t v5 = v194;
              }
              unint64_t v87 = (char *)sub_1885AC0(v7, v180, v5, a3);
            }
          }
LABEL_322:
          v194 = v87;
          if (!v87) {
            goto LABEL_369;
          }
LABEL_323:
          if (sub_11947B8((uint64_t)a3, &v194, a3[11].i32[1])) {
            goto LABEL_3;
          }
          break;
        case 0xEu:
          if (v7 != 114) {
            goto LABEL_345;
          }
          uint64_t v76 = v5 - 1;
          while (1)
          {
            uint64_t v77 = (unsigned __int8 *)(v76 + 1);
            v194 = v76 + 1;
            uint64_t v78 = *(_DWORD **)(a1 + 200);
            if (v78 && (uint64_t v79 = *(int *)(a1 + 192), (int)v79 < *v78))
            {
              *(_DWORD *)(a1 + 192) = v79 + 1;
              uint64_t v80 = *(void *)&v78[2 * v79 + 2];
            }
            else
            {
              uint64_t v81 = sub_134DD1C(*v186);
              uint64_t v80 = sub_188CDC8((uint64_t)v186, v81);
              uint64_t v77 = (unsigned __int8 *)v194;
            }
            uint64_t v76 = sub_162F22C(a3, v80, v77);
            v194 = v76;
            if (!v76) {
              goto LABEL_369;
            }
            if (*(void *)a3 <= (unint64_t)v76 || *v76 != 114) {
              goto LABEL_323;
            }
          }
        case 0xFu:
          if (v7 != 120) {
            goto LABEL_345;
          }
          v192 |= 0x400000u;
          uint64_t v82 = v5 + 1;
          int v83 = *v5;
          if ((*v5 & 0x80000000) == 0) {
            goto LABEL_143;
          }
          int v84 = *v82;
          int v83 = v83 + (v84 << 7) - 128;
          if (v84 < 0)
          {
            v171 = (char *)sub_188C0D0((uint64_t)v5, v83);
            v194 = v171;
            *(_DWORD *)(a1 + 544) = v172;
            if (!v171) {
              goto LABEL_369;
            }
          }
          else
          {
            uint64_t v82 = v5 + 2;
LABEL_143:
            v194 = v82;
            *(_DWORD *)(a1 + 544) = v83;
          }
          goto LABEL_323;
        case 0x10u:
          if (v7 != 130) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 0x80u;
          uint64_t v85 = *(void *)(a1 + 432);
          if (!v85)
          {
            uint64_t v86 = (void *)(*v183 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v183) {
              uint64_t v86 = (void *)*v86;
            }
            uint64_t v85 = sub_1332450((uint64_t)v86);
            *(void *)(a1 + 432) = v85;
            uint64_t v5 = v194;
          }
          unint64_t v87 = (char *)sub_1338CEC(a3, v85, (unsigned __int8 *)v5);
          goto LABEL_322;
        case 0x11u:
          if (v7 != 138) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 0x100u;
          uint64_t v88 = *(void *)(a1 + 440);
          if (!v88)
          {
            uint64_t v89 = (void *)(*v183 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v183) {
              uint64_t v89 = (void *)*v89;
            }
            uint64_t v88 = sub_16333F0((uint64_t)v89);
            *(void *)(a1 + 440) = v88;
            uint64_t v5 = v194;
          }
          unint64_t v87 = sub_162F2BC(a3, v88, (unsigned __int8 *)v5);
          goto LABEL_322;
        case 0x12u:
          if (v7 != 146) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 0x200u;
          uint64_t v90 = *(void **)(a1 + 448);
          if (!v90)
          {
            uint64_t v91 = (void *)(*v183 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v183) {
              uint64_t v91 = (void *)*v91;
            }
            uint64_t v90 = sub_1478C60((uint64_t)v91);
            *(void *)(a1 + 448) = v90;
            uint64_t v5 = v194;
          }
          unint64_t v87 = sub_129760C(a3, (uint64_t)v90, (unsigned __int8 *)v5);
          goto LABEL_322;
        case 0x13u:
          if (v7 != 154) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 2u;
          uint64_t v92 = *(void *)(a1 + 8);
          char v41 = (uint64_t *)(v92 & 0xFFFFFFFFFFFFFFFCLL);
          if (v92) {
            char v41 = (uint64_t *)*v41;
          }
          unint64_t v42 = (void *)(a1 + 384);
          goto LABEL_321;
        case 0x14u:
          if (v7 != 162) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 0x400u;
          uint64_t v93 = *(void **)(a1 + 456);
          if (!v93)
          {
            uint64_t v94 = (void *)(*v183 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v183) {
              uint64_t v94 = (void *)*v94;
            }
            uint64_t v93 = sub_13DA524((uint64_t)v94);
            *(void *)(a1 + 456) = v93;
            uint64_t v5 = v194;
          }
          unint64_t v87 = (char *)sub_162F34C(a3, (uint64_t)v93, (unsigned __int8 *)v5);
          goto LABEL_322;
        case 0x15u:
          if (v7 != 168) {
            goto LABEL_345;
          }
          v192 |= 0x8000000u;
          uint64_t v96 = v5 + 1;
          LODWORD(v95) = *v5;
          if ((v95 & 0x80) == 0) {
            goto LABEL_176;
          }
          int v97 = *v96;
          uint64_t v95 = v95 + (v97 << 7) - 128;
          if (v97 < 0)
          {
            v173 = (char *)sub_188C138((uint64_t)v5, v95);
            v194 = v173;
            *(_DWORD *)(a1 + 552) = v174;
            if (!v173) {
              goto LABEL_369;
            }
          }
          else
          {
            uint64_t v96 = v5 + 2;
LABEL_176:
            v194 = v96;
            *(_DWORD *)(a1 + 552) = v95;
          }
          goto LABEL_323;
        case 0x16u:
          if (v7 != 178) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 0x800u;
          uint64_t v98 = *(void *)(a1 + 464);
          if (!v98)
          {
            uint64_t v99 = (void *)(*v183 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v183) {
              uint64_t v99 = (void *)*v99;
            }
            uint64_t v98 = sub_13064B8((uint64_t)v99);
            *(void *)(a1 + 464) = v98;
            uint64_t v5 = v194;
          }
          unint64_t v87 = sub_1354680(a3, v98, (unsigned __int8 *)v5);
          goto LABEL_322;
        case 0x17u:
          if (v7 != 186) {
            goto LABEL_345;
          }
          uint64_t v100 = v5 - 2;
          while (1)
          {
            uint64_t v101 = (unsigned __int8 *)(v100 + 2);
            v194 = v100 + 2;
            uint64_t v102 = *(_DWORD **)(a1 + 224);
            if (v102 && (uint64_t v103 = *(int *)(a1 + 216), (int)v103 < *v102))
            {
              *(_DWORD *)(a1 + 216) = v103 + 1;
              uint64_t v104 = *(void *)&v102[2 * v103 + 2];
            }
            else
            {
              sub_13D96E0(*v187);
              uint64_t v104 = sub_188CDC8((uint64_t)v187, v105);
              uint64_t v101 = (unsigned __int8 *)v194;
            }
            uint64_t v100 = (char *)sub_13A32DC(a3, v104, v101);
            v194 = v100;
            if (!v100) {
              goto LABEL_369;
            }
            if (*(void *)a3 <= (unint64_t)v100 || *(_WORD *)v100 != 442) {
              goto LABEL_323;
            }
          }
        case 0x18u:
          if (v7 != 194) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 4u;
          uint64_t v106 = *(void *)(a1 + 8);
          char v41 = (uint64_t *)(v106 & 0xFFFFFFFFFFFFFFFCLL);
          if (v106) {
            char v41 = (uint64_t *)*v41;
          }
          unint64_t v42 = (void *)(a1 + 392);
          goto LABEL_321;
        case 0x19u:
          if (v7 != 200) {
            goto LABEL_345;
          }
          v192 |= 0x2000000u;
          uint64_t v107 = v5 + 1;
          uint64_t v108 = *v5;
          if ((*v5 & 0x80000000) == 0) {
            goto LABEL_201;
          }
          int v109 = *v107;
          uint64_t v108 = v108 + (v109 << 7) - 128;
          if (v109 < 0)
          {
            v175 = (char *)sub_188C138((uint64_t)v5, v108);
            v194 = v175;
            *(unsigned char *)(a1 + 550) = v176 != 0;
            if (!v175) {
              goto LABEL_369;
            }
          }
          else
          {
            uint64_t v107 = v5 + 2;
LABEL_201:
            v194 = v107;
            *(unsigned char *)(a1 + 550) = v108 != 0;
          }
          goto LABEL_323;
        case 0x1Au:
          if (v7 != 210) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 0x1000u;
          uint64_t v110 = *(void **)(a1 + 472);
          if (!v110)
          {
            uint64_t v111 = (void *)(*v183 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v183) {
              uint64_t v111 = (void *)*v111;
            }
            uint64_t v110 = sub_13DA80C((uint64_t)v111);
            *(void *)(a1 + 472) = v110;
            uint64_t v5 = v194;
          }
          unint64_t v87 = sub_162F3DC(a3, (uint64_t)v110, (unsigned __int8 *)v5);
          goto LABEL_322;
        case 0x1Bu:
          if (v7 != 216) {
            goto LABEL_345;
          }
          v192 |= 0x4000000u;
          uint64_t v112 = v5 + 1;
          uint64_t v113 = *v5;
          if ((*v5 & 0x80000000) == 0) {
            goto LABEL_212;
          }
          int v114 = *v112;
          uint64_t v113 = v113 + (v114 << 7) - 128;
          if (v114 < 0)
          {
            v177 = (char *)sub_188C138((uint64_t)v5, v113);
            v194 = v177;
            *(unsigned char *)(a1 + 551) = v178 != 0;
            if (!v177)
            {
LABEL_369:
              uint64_t v5 = 0;
              goto LABEL_4;
            }
          }
          else
          {
            uint64_t v112 = v5 + 2;
LABEL_212:
            v194 = v112;
            *(unsigned char *)(a1 + 551) = v113 != 0;
          }
          goto LABEL_323;
        case 0x1Du:
          if (v7 != 234) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 8u;
          uint64_t v115 = *(void *)(a1 + 8);
          char v41 = (uint64_t *)(v115 & 0xFFFFFFFFFFFFFFFCLL);
          if (v115) {
            char v41 = (uint64_t *)*v41;
          }
          unint64_t v42 = (void *)(a1 + 400);
LABEL_321:
          int v163 = (std::string *)sub_1880F84(v42, v41);
          unint64_t v87 = (char *)sub_188C244(v163, v194, (uint64_t)a3);
          goto LABEL_322;
        case 0x1Eu:
          if (v7 != 242) {
            goto LABEL_345;
          }
          uint64_t v116 = v5 - 2;
          while (1)
          {
            v117 = (unsigned __int8 *)(v116 + 2);
            v194 = v116 + 2;
            int64_t v118 = *(_DWORD **)(a1 + 248);
            if (v118 && (uint64_t v119 = *(int *)(a1 + 240), (int)v119 < *v118))
            {
              *(_DWORD *)(a1 + 240) = v119 + 1;
              uint64_t v120 = *(void *)&v118[2 * v119 + 2];
            }
            else
            {
              unsigned int v121 = sub_13D9A2C(*v188);
              uint64_t v120 = sub_188CDC8((uint64_t)v188, (uint64_t)v121);
              v117 = (unsigned __int8 *)v194;
            }
            uint64_t v116 = sub_13A31BC(a3, v120, v117);
            v194 = v116;
            if (!v116) {
              goto LABEL_369;
            }
            if (*(void *)a3 <= (unint64_t)v116 || *(_WORD *)v116 != 498) {
              goto LABEL_323;
            }
          }
        case 0x1Fu:
          if (v7 != 250) {
            goto LABEL_345;
          }
          unsigned int v122 = v5 - 2;
          while (1)
          {
            uint64_t v123 = (unsigned __int8 *)(v122 + 2);
            v194 = v122 + 2;
            v124 = *(_DWORD **)(a1 + 272);
            if (v124 && (uint64_t v125 = *(int *)(a1 + 264), (int)v125 < *v124))
            {
              *(_DWORD *)(a1 + 264) = v125 + 1;
              uint64_t v126 = *(void *)&v124[2 * v125 + 2];
            }
            else
            {
              uint64_t v127 = sub_13D9774(*v189);
              uint64_t v126 = sub_188CDC8((uint64_t)v189, (uint64_t)v127);
              uint64_t v123 = (unsigned __int8 *)v194;
            }
            unsigned int v122 = (char *)sub_13A324C(a3, v126, v123);
            v194 = v122;
            if (!v122) {
              goto LABEL_369;
            }
            if (*(void *)a3 <= (unint64_t)v122 || *(_WORD *)v122 != 506) {
              goto LABEL_323;
            }
          }
        case 0x20u:
          if (v7 != 2) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 0x2000u;
          uint64_t v128 = *(void **)(a1 + 480);
          if (!v128)
          {
            v129 = (void *)(*v183 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v183) {
              v129 = (void *)*v129;
            }
            uint64_t v128 = sub_134ECAC((uint64_t)v129);
            *(void *)(a1 + 480) = v128;
            uint64_t v5 = v194;
          }
          unint64_t v87 = sub_13547A0(a3, (uint64_t)v128, (unsigned __int8 *)v5);
          goto LABEL_322;
        case 0x21u:
          if (v7 != 10) {
            goto LABEL_345;
          }
          uint64_t v130 = v5 - 2;
          while (1)
          {
            v131 = (unsigned __int8 *)(v130 + 2);
            v194 = v130 + 2;
            v132 = *(_DWORD **)(a1 + 296);
            if (v132 && (uint64_t v133 = *(int *)(a1 + 288), (int)v133 < *v132))
            {
              *(_DWORD *)(a1 + 288) = v133 + 1;
              uint64_t v134 = *(void *)&v132[2 * v133 + 2];
            }
            else
            {
              uint64_t v135 = sub_13D8C74(*v190);
              uint64_t v134 = sub_188CDC8((uint64_t)v190, v135);
              v131 = (unsigned __int8 *)v194;
            }
            uint64_t v130 = sub_13E0498(a3, v134, v131);
            v194 = v130;
            if (!v130) {
              goto LABEL_369;
            }
            if (*(void *)a3 <= (unint64_t)v130 || *(_WORD *)v130 != 650) {
              goto LABEL_323;
            }
          }
        case 0x22u:
          if (v7 != 18) {
            goto LABEL_345;
          }
          v136 = v5 - 2;
          while (1)
          {
            uint64_t v137 = (unsigned __int8 *)(v136 + 2);
            v194 = v136 + 2;
            v138 = *(_DWORD **)(a1 + 320);
            if (v138 && (uint64_t v139 = *(int *)(a1 + 312), (int)v139 < *v138))
            {
              *(_DWORD *)(a1 + 312) = v139 + 1;
              uint64_t v140 = *(void *)&v138[2 * v139 + 2];
            }
            else
            {
              v141 = sub_133276C(*v191);
              uint64_t v140 = sub_188CDC8((uint64_t)v191, (uint64_t)v141);
              uint64_t v137 = (unsigned __int8 *)v194;
            }
            v136 = sub_162F46C(a3, v140, v137);
            v194 = v136;
            if (!v136) {
              goto LABEL_369;
            }
            if (*(void *)a3 <= (unint64_t)v136 || *(_WORD *)v136 != 658) {
              goto LABEL_323;
            }
          }
        case 0x23u:
          if (v7 != 26) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 0x4000u;
          uint64_t v142 = *(void *)(a1 + 488);
          if (!v142)
          {
            int v143 = (void *)(*v183 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v183) {
              int v143 = (void *)*v143;
            }
            uint64_t v142 = sub_1633338((uint64_t)v143);
            *(void *)(a1 + 488) = v142;
            uint64_t v5 = v194;
          }
          unint64_t v87 = sub_162F4FC(a3, v142, (unsigned __int8 *)v5);
          goto LABEL_322;
        case 0x24u:
          if (v7 != 34) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 0x8000u;
          BOOL v144 = *(void **)(a1 + 496);
          if (!v144)
          {
            v145 = (void *)(*v183 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v183) {
              v145 = (void *)*v145;
            }
            BOOL v144 = sub_147967C((uint64_t)v145);
            *(void *)(a1 + 496) = v144;
            uint64_t v5 = v194;
          }
          unint64_t v87 = sub_13E7998(a3, (uint64_t)v144, (unsigned __int8 *)v5);
          goto LABEL_322;
        case 0x25u:
          if (v7 != 42) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 0x10000u;
          uint64_t v146 = *(void *)(a1 + 504);
          if (!v146)
          {
            int v147 = (void *)(*v183 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v183) {
              int v147 = (void *)*v147;
            }
            uint64_t v146 = sub_13D8978((uint64_t)v147);
            *(void *)(a1 + 504) = v146;
            uint64_t v5 = v194;
          }
          unint64_t v87 = sub_133904C(a3, v146, (unsigned __int8 *)v5);
          goto LABEL_322;
        case 0x26u:
          if (v7 != 50) {
            goto LABEL_345;
          }
          *(_DWORD *)(a1 + 40) |= 0x20000u;
          uint64_t v148 = *(void *)(a1 + 512);
          if (!v148)
          {
            int v149 = (void *)(*v183 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v183) {
              int v149 = (void *)*v149;
            }
            uint64_t v148 = sub_13DAE28((uint64_t)v149);
            *(void *)(a1 + 512) = v148;
            uint64_t v5 = v194;
          }
          unint64_t v87 = sub_13E7A28(a3, v148, (unsigned __int8 *)v5);
          goto LABEL_322;
        default:
          switch(v7 >> 3)
          {
            case 0x3B8u:
              if (v7 != 194) {
                goto LABEL_345;
              }
              int v15 = v5 - 2;
              while (1)
              {
                uint64_t v16 = (char *)(v15 + 2);
                v194 = (char *)(v15 + 2);
                uint64_t v17 = *(_DWORD **)(a1 + 344);
                if (v17 && (uint64_t v18 = *(int *)(a1 + 336), (int)v18 < *v17))
                {
                  *(_DWORD *)(a1 + 336) = v18 + 1;
                  uint64_t v19 = *(std::string **)&v17[2 * v18 + 2];
                }
                else
                {
                  if (!*v193) {
                    operator new();
                  }
                  void *v21 = v20;
                  v21[1] = sub_3A6EDC;
                  void *v20 = 0;
                  v20[1] = 0;
                  int v20[2] = 0;
                  uint64_t v19 = (std::string *)sub_188CDC8((uint64_t)v193, (uint64_t)v20);
                  uint64_t v16 = v194;
                }
                int v15 = sub_188C244(v19, v16, (uint64_t)a3);
                v194 = (char *)v15;
                if (!v15) {
                  goto LABEL_369;
                }
                if (*(void *)a3 <= (unint64_t)v15 || *(_WORD *)v15 != 15298) {
                  goto LABEL_323;
                }
              }
            case 0x3B9u:
              if (v7 != 202) {
                goto LABEL_345;
              }
              *(_DWORD *)(a1 + 40) |= 0x10u;
              uint64_t v150 = *(void *)(a1 + 8);
              char v41 = (uint64_t *)(v150 & 0xFFFFFFFFFFFFFFFCLL);
              if (v150) {
                char v41 = (uint64_t *)*v41;
              }
              unint64_t v42 = (void *)(a1 + 408);
              goto LABEL_321;
            case 0x3BAu:
              if (v7 != 210) {
                goto LABEL_345;
              }
              *(_DWORD *)(a1 + 40) |= 0x20u;
              uint64_t v151 = *(void *)(a1 + 8);
              char v41 = (uint64_t *)(v151 & 0xFFFFFFFFFFFFFFFCLL);
              if (v151) {
                char v41 = (uint64_t *)*v41;
              }
              unint64_t v42 = (void *)(a1 + 416);
              goto LABEL_321;
            case 0x3BBu:
              if (v7 != 218) {
                goto LABEL_345;
              }
              uint64_t v152 = v5 - 2;
              break;
            case 0x3BEu:
              if (v7 != 242) {
                goto LABEL_345;
              }
              *(_DWORD *)(a1 + 40) |= 0x40000u;
              uint64_t v158 = *(void *)(a1 + 520);
              if (!v158)
              {
                int v159 = (void *)(*v183 & 0xFFFFFFFFFFFFFFFCLL);
                if (*v183) {
                  int v159 = (void *)*v159;
                }
                uint64_t v158 = sub_13D8EE0((uint64_t)v159);
                *(void *)(a1 + 520) = v158;
                uint64_t v5 = v194;
              }
              unint64_t v87 = sub_1354710(a3, v158, (unsigned __int8 *)v5);
              goto LABEL_322;
            case 0x3BFu:
              if (v7 != 250) {
                goto LABEL_345;
              }
              *(_DWORD *)(a1 + 40) |= 0x80000u;
              uint64_t v160 = *(void *)(a1 + 528);
              if (!v160)
              {
                int v161 = (void *)(*v183 & 0xFFFFFFFFFFFFFFFCLL);
                if (*v183) {
                  int v161 = (void *)*v161;
                }
                uint64_t v160 = sub_134EC50((uint64_t)v161);
                *(void *)(a1 + 528) = v160;
                uint64_t v5 = v194;
              }
              unint64_t v87 = (char *)sub_162F58C(a3, v160, (unsigned __int8 *)v5);
              goto LABEL_322;
            case 0x3C1u:
              if (v7 != 10) {
                goto LABEL_345;
              }
              *(_DWORD *)(a1 + 40) |= 0x40u;
              uint64_t v162 = *(void *)(a1 + 8);
              char v41 = (uint64_t *)(v162 & 0xFFFFFFFFFFFFFFFCLL);
              if (v162) {
                char v41 = (uint64_t *)*v41;
              }
              unint64_t v42 = (void *)(a1 + 424);
              goto LABEL_321;
            default:
              goto LABEL_345;
          }
          while (1)
          {
            int v153 = (unsigned __int8 *)(v152 + 2);
            v194 = v152 + 2;
            uint64_t v154 = *(_DWORD **)(a1 + 368);
            if (v154 && (uint64_t v155 = *(int *)(a1 + 360), (int)v155 < *v154))
            {
              *(_DWORD *)(a1 + 360) = v155 + 1;
              uint64_t v156 = *(void *)&v154[2 * v155 + 2];
            }
            else
            {
              uint64_t v157 = sub_134E188(*v184);
              uint64_t v156 = sub_188CDC8((uint64_t)v184, v157);
              int v153 = (unsigned __int8 *)v194;
            }
            uint64_t v152 = (char *)sub_1275200(a3, v156, v153);
            v194 = v152;
            if (!v152) {
              goto LABEL_369;
            }
            if (*(void *)a3 <= (unint64_t)v152 || *(_WORD *)v152 != 15322) {
              goto LABEL_323;
            }
          }
      }
    }
  }
  int v192 = 0;
LABEL_3:
  uint64_t v5 = v194;
LABEL_4:
  *(_DWORD *)(a1 + 40) |= v192;
  return v5;
}

char *sub_162F22C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1332B34(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_162F2BC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_163294C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_162F34C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13CBE5C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_162F3DC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13CEE4C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_162F46C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_132FD04(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_162F4FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_162C1EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_162F58C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_134A2F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_162F61C(uint64_t a1, char *a2, unint64_t *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 536);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 48);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      char v4 = sub_13A962C(v12, v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 80);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      char v4 = sub_146ECEC(v17, (unint64_t)v19, a3);
    }
  }
  if ((v6 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v20 = *(int *)(a1 + 540);
    char *v4 = 32;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v23 = *(unsigned char *)(a1 + 548);
    char *v4 = 40;
    v4[1] = v23;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_33:
      if ((v6 & 0x1000000) == 0) {
        goto LABEL_34;
      }
      goto LABEL_40;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_33;
  }
  char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 376) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_43;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v24 = *(unsigned char *)(a1 + 549);
  char *v4 = 56;
  v4[1] = v24;
  v4 += 2;
  if ((v6 & 0x10000000) != 0)
  {
LABEL_43:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 556);
    char *v4 = 64;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_49:
  int v28 = *(_DWORD *)(a1 + 104);
  if (v28)
  {
    for (int k = 0; k != v28; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      char *v4 = 74;
      unsigned int v31 = *(_DWORD *)(v30 + 44);
      v4[1] = v31;
      if (v31 > 0x7F) {
        uint64_t v32 = sub_188A9CC(v31, v4 + 1);
      }
      else {
        uint64_t v32 = v4 + 2;
      }
      char v4 = sub_13BA104(v30, v32, a3);
    }
  }
  int v33 = *(_DWORD *)(a1 + 128);
  if (v33)
  {
    for (int m = 0; m != v33; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      char *v4 = 82;
      unsigned int v36 = *(_DWORD *)(v35 + 44);
      v4[1] = v36;
      if (v36 > 0x7F) {
        int v37 = sub_188A9CC(v36, v4 + 1);
      }
      else {
        int v37 = v4 + 2;
      }
      char v4 = sub_13BA104(v35, v37, a3);
    }
  }
  int v38 = *(_DWORD *)(a1 + 152);
  if (v38)
  {
    for (int n = 0; n != v38; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v40 = *(void *)(*(void *)(a1 + 160) + 8 * n + 8);
      char *v4 = 90;
      unsigned int v41 = *(_DWORD *)(v40 + 20);
      v4[1] = v41;
      if (v41 > 0x7F) {
        unint64_t v42 = sub_188A9CC(v41, v4 + 1);
      }
      else {
        unint64_t v42 = v4 + 2;
      }
      char v4 = sub_13C0C18(v40, (unint64_t)v42, a3);
    }
  }
  uint64_t v43 = *(unsigned int *)(a1 + 168);
  if ((int)v43 >= 1)
  {
    for (iint i = 0; ii != v43; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v45 = *(int *)(*(void *)(a1 + 176) + 4 * ii);
      char *v4 = 104;
      v4[1] = v45;
      if (v45 > 0x7F)
      {
        v4[1] = v45 | 0x80;
        unint64_t v46 = v45 >> 7;
        v4[2] = v45 >> 7;
        v4 += 3;
        if (v45 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v47 = v46 >> 14;
            v46 >>= 7;
            *v4++ = v46;
          }
          while (v47);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  int v48 = *(_DWORD *)(a1 + 192);
  if (v48)
  {
    for (jint j = 0; jj != v48; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v50 = *(void *)(*(void *)(a1 + 200) + 8 * jj + 8);
      char *v4 = 114;
      unsigned int v51 = *(_DWORD *)(v50 + 44);
      v4[1] = v51;
      if (v51 > 0x7F) {
        uint64_t v52 = sub_188A9CC(v51, v4 + 1);
      }
      else {
        uint64_t v52 = v4 + 2;
      }
      char v4 = sub_1332E40(v50, v52, a3);
    }
  }
  if ((v6 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v53 = *(_DWORD *)(a1 + 544);
    char *v4 = 120;
    v4[1] = v53;
    if (v53 > 0x7F)
    {
      v4[1] = v53 | 0x80;
      unsigned int v54 = v53 >> 7;
      v4[2] = v53 >> 7;
      v4 += 3;
      if (v53 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v55 = v54 >> 14;
          v54 >>= 7;
          *v4++ = v54;
        }
        while (v55);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v56 = *(void *)(a1 + 432);
    *(_WORD *)char v4 = 386;
    unsigned int v57 = *(_DWORD *)(v56 + 44);
    v4[2] = v57;
    if (v57 > 0x7F) {
      uint64_t v58 = sub_188A9CC(v57, v4 + 2);
    }
    else {
      uint64_t v58 = v4 + 3;
    }
    char v4 = sub_132A450(v56, v58, a3);
    if ((v6 & 0x100) == 0)
    {
LABEL_99:
      if ((v6 & 0x200) == 0) {
        goto LABEL_100;
      }
      goto LABEL_116;
    }
  }
  else if ((v6 & 0x100) == 0)
  {
    goto LABEL_99;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v59 = *(void *)(a1 + 440);
  *(_WORD *)char v4 = 394;
  unsigned int v60 = *(_DWORD *)(v59 + 20);
  v4[2] = v60;
  if (v60 > 0x7F) {
    uint64_t v61 = sub_188A9CC(v60, v4 + 2);
  }
  else {
    uint64_t v61 = v4 + 3;
  }
  char v4 = sub_1632E50(v59, (unint64_t)v61, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_100:
    if ((v6 & 2) == 0) {
      goto LABEL_101;
    }
    goto LABEL_122;
  }
LABEL_116:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v62 = *(void *)(a1 + 448);
  *(_WORD *)char v4 = 402;
  unsigned int v63 = *(_DWORD *)(v62 + 44);
  v4[2] = v63;
  if (v63 > 0x7F) {
    uint64_t v64 = sub_188A9CC(v63, v4 + 2);
  }
  else {
    uint64_t v64 = v4 + 3;
  }
  char v4 = sub_1460138(v62, v64, a3);
  if ((v6 & 2) == 0)
  {
LABEL_101:
    if ((v6 & 0x400) == 0) {
      goto LABEL_102;
    }
    goto LABEL_123;
  }
LABEL_122:
  char v4 = sub_117A0AC(a3, 19, (const void **)(*(void *)(a1 + 384) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x400) == 0)
  {
LABEL_102:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_135;
    }
    goto LABEL_129;
  }
LABEL_123:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v65 = *(void *)(a1 + 456);
  *(_WORD *)char v4 = 418;
  unsigned int v66 = *(_DWORD *)(v65 + 20);
  v4[2] = v66;
  if (v66 > 0x7F) {
    int v67 = sub_188A9CC(v66, v4 + 2);
  }
  else {
    int v67 = v4 + 3;
  }
  char v4 = sub_13CC0C8(v65, v67, a3);
  if ((v6 & 0x8000000) != 0)
  {
LABEL_129:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v68 = *(int *)(a1 + 552);
    *(_WORD *)char v4 = 424;
    v4[2] = v68;
    if (v68 > 0x7F)
    {
      v4[2] = v68 | 0x80;
      unint64_t v69 = v68 >> 7;
      v4[3] = v68 >> 7;
      v4 += 4;
      if (v68 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v70 = v69 >> 14;
          v69 >>= 7;
          *v4++ = v69;
        }
        while (v70);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_135:
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v71 = *(void *)(a1 + 464);
    *(_WORD *)char v4 = 434;
    unsigned int v72 = *(_DWORD *)(v71 + 20);
    v4[2] = v72;
    if (v72 > 0x7F) {
      int v73 = sub_188A9CC(v72, v4 + 2);
    }
    else {
      int v73 = v4 + 3;
    }
    char v4 = sub_13062B4(v71, (unint64_t)v73, a3);
  }
  int v74 = *(_DWORD *)(a1 + 216);
  if (v74)
  {
    for (kint k = 0; kk != v74; ++kk)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v76 = *(void *)(*(void *)(a1 + 224) + 8 * kk + 8);
      *(_WORD *)char v4 = 442;
      unsigned int v77 = *(_DWORD *)(v76 + 20);
      v4[2] = v77;
      if (v77 > 0x7F) {
        uint64_t v78 = sub_188A9CC(v77, v4 + 2);
      }
      else {
        uint64_t v78 = v4 + 3;
      }
      char v4 = sub_13BBF3C(v76, v78, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    char v4 = sub_117A0AC(a3, 24, (const void **)(*(void *)(a1 + 392) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x2000000) == 0)
    {
LABEL_152:
      if ((v6 & 0x1000) == 0) {
        goto LABEL_153;
      }
      goto LABEL_181;
    }
  }
  else if ((v6 & 0x2000000) == 0)
  {
    goto LABEL_152;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v92 = *(unsigned char *)(a1 + 550);
  *(_WORD *)char v4 = 456;
  v4[2] = v92;
  v4 += 3;
  if ((v6 & 0x1000) == 0)
  {
LABEL_153:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_154;
    }
    goto LABEL_214;
  }
LABEL_181:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v93 = *(void *)(a1 + 472);
  *(_WORD *)char v4 = 466;
  unsigned int v94 = *(_DWORD *)(v93 + 20);
  v4[2] = v94;
  if (v94 > 0x7F) {
    uint64_t v95 = sub_188A9CC(v94, v4 + 2);
  }
  else {
    uint64_t v95 = v4 + 3;
  }
  char v4 = sub_13CF23C(v93, (unint64_t)v95, a3);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_154:
    if ((v6 & 8) == 0) {
      goto LABEL_156;
    }
    goto LABEL_155;
  }
LABEL_214:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v109 = *(unsigned char *)(a1 + 551);
  *(_WORD *)char v4 = 472;
  v4[2] = v109;
  v4 += 3;
  if ((v6 & 8) != 0) {
LABEL_155:
  }
    char v4 = sub_117A0AC(a3, 29, (const void **)(*(void *)(a1 + 400) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_156:
  int v79 = *(_DWORD *)(a1 + 240);
  if (v79)
  {
    for (mint m = 0; mm != v79; ++mm)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v81 = *(void *)(*(void *)(a1 + 248) + 8 * mm + 8);
      *(_WORD *)char v4 = 498;
      unsigned int v82 = *(_DWORD *)(v81 + 20);
      v4[2] = v82;
      if (v82 > 0x7F) {
        int v83 = sub_188A9CC(v82, v4 + 2);
      }
      else {
        int v83 = v4 + 3;
      }
      char v4 = sub_13C029C(v81, (unint64_t)v83, a3);
    }
  }
  int v84 = *(_DWORD *)(a1 + 264);
  if (v84)
  {
    for (nint n = 0; nn != v84; ++nn)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v86 = *(void *)(*(void *)(a1 + 272) + 8 * nn + 8);
      *(_WORD *)char v4 = 506;
      unsigned int v87 = *(_DWORD *)(v86 + 20);
      v4[2] = v87;
      if (v87 > 0x7F) {
        uint64_t v88 = sub_188A9CC(v87, v4 + 2);
      }
      else {
        uint64_t v88 = v4 + 3;
      }
      char v4 = sub_13BCD84(v86, v88, a3);
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v89 = *(void *)(a1 + 480);
    *(_WORD *)char v4 = 642;
    unsigned int v90 = *(_DWORD *)(v89 + 20);
    v4[2] = v90;
    if (v90 > 0x7F) {
      uint64_t v91 = sub_188A9CC(v90, v4 + 2);
    }
    else {
      uint64_t v91 = v4 + 3;
    }
    char v4 = sub_134CA40(v89, (unint64_t)v91, a3);
  }
  int v96 = *(_DWORD *)(a1 + 288);
  if (v96)
  {
    for (int i1 = 0; i1 != v96; ++i1)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v98 = *(void *)(*(void *)(a1 + 296) + 8 * i1 + 8);
      *(_WORD *)char v4 = 650;
      unsigned int v99 = *(_DWORD *)(v98 + 44);
      v4[2] = v99;
      if (v99 > 0x7F) {
        uint64_t v100 = sub_188A9CC(v99, v4 + 2);
      }
      else {
        uint64_t v100 = v4 + 3;
      }
      char v4 = sub_13A351C(v98, v100, a3);
    }
  }
  int v101 = *(_DWORD *)(a1 + 312);
  if (v101)
  {
    for (int i2 = 0; i2 != v101; ++i2)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v103 = *(void *)(*(void *)(a1 + 320) + 8 * i2 + 8);
      *(_WORD *)char v4 = 658;
      unsigned int v104 = *(_DWORD *)(v103 + 20);
      v4[2] = v104;
      if (v104 > 0x7F) {
        uint64_t v105 = sub_188A9CC(v104, v4 + 2);
      }
      else {
        uint64_t v105 = v4 + 3;
      }
      char v4 = sub_1330158(v103, v105, a3);
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v106 = *(void *)(a1 + 488);
    *(_WORD *)char v4 = 666;
    unsigned int v107 = *(_DWORD *)(v106 + 40);
    v4[2] = v107;
    if (v107 > 0x7F) {
      uint64_t v108 = sub_188A9CC(v107, v4 + 2);
    }
    else {
      uint64_t v108 = v4 + 3;
    }
    char v4 = sub_162C334(v106, v108, a3);
    if ((v6 & 0x8000) == 0)
    {
LABEL_205:
      if ((v6 & 0x10000) == 0) {
        goto LABEL_206;
      }
      goto LABEL_226;
    }
  }
  else if ((v6 & 0x8000) == 0)
  {
    goto LABEL_205;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v110 = *(void *)(a1 + 496);
  *(_WORD *)char v4 = 674;
  unsigned int v111 = *(_DWORD *)(v110 + 20);
  v4[2] = v111;
  if (v111 > 0x7F) {
    uint64_t v112 = sub_188A9CC(v111, v4 + 2);
  }
  else {
    uint64_t v112 = v4 + 3;
  }
  char v4 = sub_1473014(v110, (unint64_t)v112, a3);
  if ((v6 & 0x10000) == 0)
  {
LABEL_206:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_238;
    }
    goto LABEL_232;
  }
LABEL_226:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v113 = *(void *)(a1 + 504);
  *(_WORD *)char v4 = 682;
  unsigned int v114 = *(_DWORD *)(v113 + 20);
  v4[2] = v114;
  if (v114 > 0x7F) {
    uint64_t v115 = sub_188A9CC(v114, v4 + 2);
  }
  else {
    uint64_t v115 = v4 + 3;
  }
  char v4 = sub_139E72C(v113, v115, a3);
  if ((v6 & 0x20000) != 0)
  {
LABEL_232:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v116 = *(void *)(a1 + 512);
    *(_WORD *)char v4 = 690;
    unsigned int v117 = *(_DWORD *)(v116 + 20);
    v4[2] = v117;
    if (v117 > 0x7F) {
      int64_t v118 = sub_188A9CC(v117, v4 + 2);
    }
    else {
      int64_t v118 = v4 + 3;
    }
    char v4 = sub_13D5EE4(v116, (unint64_t)v118, a3);
  }
LABEL_238:
  uint64_t v119 = *(unsigned int *)(a1 + 336);
  if ((int)v119 >= 1)
  {
    uint64_t v120 = 0;
    uint64_t v121 = 8 * v119;
    do
    {
      unsigned int v122 = *(void **)(*(void *)(a1 + 344) + v120 + 8);
      if (*((char *)v122 + 23) < 0)
      {
        int64_t v123 = v122[1];
        if (v123 > 127) {
          goto LABEL_249;
        }
      }
      else
      {
        int64_t v123 = *((unsigned __int8 *)v122 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v123)
      {
        *(_WORD *)char v4 = 15298;
        v4[2] = v123;
        if (*((char *)v122 + 23) < 0) {
          unsigned int v122 = (void *)*v122;
        }
        v124 = v4 + 3;
        memcpy(v124, v122, v123);
        char v4 = &v124[v123];
        goto LABEL_247;
      }
LABEL_249:
      char v4 = (char *)sub_188A868(a3, 952, (uint64_t)v122, v4);
LABEL_247:
      v120 += 8;
    }
    while (v121 != v120);
  }
  if ((v6 & 0x10) != 0) {
    char v4 = sub_117A0AC(a3, 953, (const void **)(*(void *)(a1 + 408) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x20) != 0) {
    char v4 = sub_117A0AC(a3, 954, (const void **)(*(void *)(a1 + 416) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v125 = *(_DWORD *)(a1 + 360);
  if (v125)
  {
    for (int i3 = 0; i3 != v125; ++i3)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v127 = *(void *)(*(void *)(a1 + 368) + 8 * i3 + 8);
      *(_WORD *)char v4 = 15322;
      unsigned int v128 = *(_DWORD *)(v127 + 44);
      v4[2] = v128;
      if (v128 > 0x7F) {
        v129 = sub_188A9CC(v128, v4 + 2);
      }
      else {
        v129 = v4 + 3;
      }
      char v4 = sub_13390DC(v127, v129, a3);
    }
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v132 = *(void *)(a1 + 520);
    *(_WORD *)char v4 = 15346;
    unsigned int v133 = *(_DWORD *)(v132 + 20);
    v4[2] = v133;
    if (v133 > 0x7F) {
      uint64_t v134 = sub_188A9CC(v133, v4 + 2);
    }
    else {
      uint64_t v134 = v4 + 3;
    }
    char v4 = (char *)sub_13ADDAC(v132, (unint64_t)v134, a3);
    if ((v6 & 0x80000) == 0)
    {
LABEL_264:
      if ((v6 & 0x40) == 0) {
        goto LABEL_266;
      }
      goto LABEL_265;
    }
  }
  else if ((v6 & 0x80000) == 0)
  {
    goto LABEL_264;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v135 = *(void *)(a1 + 528);
  *(_WORD *)char v4 = 15354;
  unsigned int v136 = *(_DWORD *)(v135 + 376);
  v4[2] = v136;
  if (v136 > 0x7F) {
    uint64_t v137 = sub_188A9CC(v136, v4 + 2);
  }
  else {
    uint64_t v137 = v4 + 3;
  }
  char v4 = sub_134B23C(v135, v137, a3);
  if ((v6 & 0x40) != 0) {
LABEL_265:
  }
    char v4 = sub_117A0AC(a3, 961, (const void **)(*(void *)(a1 + 424) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_266:
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 990, 10101, v4, a3);
  }
  uint64_t v130 = *(void *)(a1 + 8);
  if ((v130 & 1) == 0) {
    return v4;
  }
  unint64_t v138 = v130 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v138 + 31) < 0)
  {
    uint64_t v139 = *(void **)(v138 + 8);
    uint64_t v140 = *(void *)(v138 + 16);
  }
  else
  {
    uint64_t v139 = (void *)(v138 + 8);
    LODWORD(v140) = *(unsigned __int8 *)(v138 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v140)
  {
    uint64_t v141 = (int)v140;
    memcpy(v4, v139, (int)v140);
    v4 += v141;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v139, v140, v4);
}

uint64_t sub_1630810(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  if ((*(unsigned char *)(a1 + 42) & 0x10) != 0)
  {
    int v3 = *(_DWORD *)(a1 + 536);
    uint64_t v4 = (9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6;
    if (v3 >= 0) {
      uint64_t v5 = v4;
    }
    else {
      uint64_t v5 = 10;
    }
    v2 += v5 + 1;
  }
  uint64_t v6 = *(int *)(a1 + 56);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = *(void *)(a1 + 64);
  if (v8) {
    unint64_t v9 = (uint64_t *)(v8 + 8);
  }
  else {
    unint64_t v9 = 0;
  }
  if (v6)
  {
    uint64_t v10 = 8 * v6;
    do
    {
      uint64_t v11 = *v9++;
      uint64_t v12 = sub_13AB404(v11);
      v7 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      v10 -= 8;
    }
    while (v10);
  }
  uint64_t v13 = *(int *)(a1 + 80);
  uint64_t v14 = v7 + v13;
  uint64_t v15 = *(void *)(a1 + 88);
  if (v15) {
    uint64_t v16 = (uint64_t *)(v15 + 8);
  }
  else {
    uint64_t v16 = 0;
  }
  if (v13)
  {
    uint64_t v17 = 8 * v13;
    do
    {
      uint64_t v18 = *v16++;
      uint64_t v19 = sub_146F320(v18);
      v14 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      v17 -= 8;
    }
    while (v17);
  }
  uint64_t v20 = *(int *)(a1 + 104);
  uint64_t v21 = v14 + v20;
  uint64_t v22 = *(void *)(a1 + 112);
  if (v22) {
    char v23 = (uint64_t *)(v22 + 8);
  }
  else {
    char v23 = 0;
  }
  if (v20)
  {
    uint64_t v24 = 8 * v20;
    do
    {
      uint64_t v25 = *v23++;
      uint64_t v26 = sub_13BA868(v25);
      v21 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
      v24 -= 8;
    }
    while (v24);
  }
  uint64_t v27 = *(int *)(a1 + 128);
  uint64_t v28 = v21 + v27;
  uint64_t v29 = *(void *)(a1 + 136);
  if (v29) {
    uint64_t v30 = (uint64_t *)(v29 + 8);
  }
  else {
    uint64_t v30 = 0;
  }
  if (v27)
  {
    uint64_t v31 = 8 * v27;
    do
    {
      uint64_t v32 = *v30++;
      uint64_t v33 = sub_13BA868(v32);
      v28 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6);
      v31 -= 8;
    }
    while (v31);
  }
  uint64_t v34 = *(int *)(a1 + 152);
  uint64_t v35 = v28 + v34;
  uint64_t v36 = *(void *)(a1 + 160);
  if (v36) {
    int v37 = (uint64_t *)(v36 + 8);
  }
  else {
    int v37 = 0;
  }
  if (v34)
  {
    uint64_t v38 = 8 * v34;
    do
    {
      uint64_t v39 = *v37++;
      uint64_t v40 = sub_13C0DBC(v39);
      v35 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6);
      v38 -= 8;
    }
    while (v38);
  }
  uint64_t v41 = *(unsigned int *)(a1 + 168);
  if (v41)
  {
    uint64_t v42 = 0;
    int v43 = 0;
    do
    {
      int v44 = *(_DWORD *)(*(void *)(a1 + 176) + 4 * v43);
      if (v44 < 0) {
        uint64_t v45 = 10;
      }
      else {
        uint64_t v45 = (9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6;
      }
      v42 += v45;
      ++v43;
    }
    while (v41 != v43);
  }
  else
  {
    uint64_t v42 = 0;
  }
  uint64_t v46 = *(int *)(a1 + 192);
  uint64_t v47 = v35 + v41 + v42 + v46;
  uint64_t v48 = *(void *)(a1 + 200);
  if (v48) {
    unsigned int v49 = (uint64_t *)(v48 + 8);
  }
  else {
    unsigned int v49 = 0;
  }
  if (v46)
  {
    uint64_t v50 = 8 * v46;
    do
    {
      uint64_t v51 = *v49++;
      uint64_t v52 = sub_13330E8(v51);
      v47 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6);
      v50 -= 8;
    }
    while (v50);
  }
  uint64_t v53 = *(int *)(a1 + 216);
  uint64_t v54 = v47 + 2 * v53;
  uint64_t v55 = *(void *)(a1 + 224);
  if (v55) {
    uint64_t v56 = (uint64_t *)(v55 + 8);
  }
  else {
    uint64_t v56 = 0;
  }
  if (v53)
  {
    uint64_t v57 = 8 * v53;
    do
    {
      uint64_t v58 = *v56++;
      uint64_t v59 = sub_13BC39C(v58);
      v54 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6);
      v57 -= 8;
    }
    while (v57);
  }
  uint64_t v60 = *(int *)(a1 + 240);
  uint64_t v61 = v54 + 2 * v60;
  uint64_t v62 = *(void *)(a1 + 248);
  if (v62) {
    unsigned int v63 = (uint64_t *)(v62 + 8);
  }
  else {
    unsigned int v63 = 0;
  }
  if (v60)
  {
    uint64_t v64 = 8 * v60;
    do
    {
      uint64_t v65 = *v63++;
      uint64_t v66 = sub_13C0560(v65);
      v61 += v66 + ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6);
      v64 -= 8;
    }
    while (v64);
  }
  uint64_t v67 = *(int *)(a1 + 264);
  uint64_t v68 = v61 + 2 * v67;
  uint64_t v69 = *(void *)(a1 + 272);
  if (v69) {
    unint64_t v70 = (uint64_t *)(v69 + 8);
  }
  else {
    unint64_t v70 = 0;
  }
  if (v67)
  {
    uint64_t v71 = 8 * v67;
    do
    {
      uint64_t v72 = *v70++;
      uint64_t v73 = sub_13BCFB8(v72);
      v68 += v73 + ((9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6);
      v71 -= 8;
    }
    while (v71);
  }
  uint64_t v74 = *(int *)(a1 + 288);
  uint64_t v75 = v68 + 2 * v74;
  uint64_t v76 = *(void *)(a1 + 296);
  if (v76) {
    unsigned int v77 = (uint64_t *)(v76 + 8);
  }
  else {
    unsigned int v77 = 0;
  }
  if (v74)
  {
    uint64_t v78 = 8 * v74;
    do
    {
      uint64_t v79 = *v77++;
      uint64_t v80 = sub_13A3F0C(v79);
      v75 += v80 + ((9 * (__clz(v80 | 1) ^ 0x1F) + 73) >> 6);
      v78 -= 8;
    }
    while (v78);
  }
  uint64_t v81 = *(int *)(a1 + 312);
  uint64_t v82 = v75 + 2 * v81;
  uint64_t v83 = *(void *)(a1 + 320);
  if (v83) {
    int v84 = (uint64_t *)(v83 + 8);
  }
  else {
    int v84 = 0;
  }
  if (v81)
  {
    uint64_t v85 = 8 * v81;
    do
    {
      uint64_t v86 = *v84++;
      uint64_t v87 = sub_1330408(v86);
      v82 += v87 + ((9 * (__clz(v87 | 1) ^ 0x1F) + 73) >> 6);
      v85 -= 8;
    }
    while (v85);
  }
  uint64_t v88 = *(unsigned int *)(a1 + 336);
  uint64_t v89 = v82 + 2 * v88;
  if ((int)v88 >= 1)
  {
    unsigned int v90 = (uint64_t *)(*(void *)(a1 + 344) + 8);
    do
    {
      uint64_t v91 = *v90++;
      uint64_t v92 = *(unsigned __int8 *)(v91 + 23);
      uint64_t v93 = *(void *)(v91 + 8);
      if ((v92 & 0x80u) == 0) {
        uint64_t v93 = v92;
      }
      v89 += v93 + ((9 * (__clz(v93 | 1) ^ 0x1F) + 73) >> 6);
      --v88;
    }
    while (v88);
  }
  uint64_t v94 = *(int *)(a1 + 360);
  uint64_t v95 = v89 + 2 * v94;
  uint64_t v96 = *(void *)(a1 + 368);
  if (v96) {
    int v97 = (uint64_t *)(v96 + 8);
  }
  else {
    int v97 = 0;
  }
  if (v94)
  {
    uint64_t v98 = 8 * v94;
    do
    {
      uint64_t v99 = *v97++;
      uint64_t v100 = sub_13398D0(v99);
      v95 += v100 + ((9 * (__clz(v100 | 1) ^ 0x1F) + 73) >> 6);
      v98 -= 8;
    }
    while (v98);
  }
  int v101 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v101) {
    goto LABEL_101;
  }
  if (v101)
  {
    unint64_t v117 = *(void *)(a1 + 376) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v118 = *(unsigned __int8 *)(v117 + 23);
    uint64_t v119 = *(void *)(v117 + 8);
    if ((v118 & 0x80u) == 0) {
      uint64_t v119 = v118;
    }
    v95 += v119 + ((9 * (__clz(v119 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v101 & 2) == 0)
    {
LABEL_94:
      if ((v101 & 4) == 0) {
        goto LABEL_95;
      }
      goto LABEL_153;
    }
  }
  else if ((v101 & 2) == 0)
  {
    goto LABEL_94;
  }
  unint64_t v120 = *(void *)(a1 + 384) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v121 = *(unsigned __int8 *)(v120 + 23);
  uint64_t v122 = *(void *)(v120 + 8);
  if ((v121 & 0x80u) == 0) {
    uint64_t v122 = v121;
  }
  v95 += v122 + ((9 * (__clz(v122 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v101 & 4) == 0)
  {
LABEL_95:
    if ((v101 & 8) == 0) {
      goto LABEL_96;
    }
    goto LABEL_156;
  }
LABEL_153:
  unint64_t v123 = *(void *)(a1 + 392) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v124 = *(unsigned __int8 *)(v123 + 23);
  uint64_t v125 = *(void *)(v123 + 8);
  if ((v124 & 0x80u) == 0) {
    uint64_t v125 = v124;
  }
  v95 += v125 + ((9 * (__clz(v125 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v101 & 8) == 0)
  {
LABEL_96:
    if ((v101 & 0x10) == 0) {
      goto LABEL_97;
    }
    goto LABEL_159;
  }
LABEL_156:
  unint64_t v126 = *(void *)(a1 + 400) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v127 = *(unsigned __int8 *)(v126 + 23);
  uint64_t v128 = *(void *)(v126 + 8);
  if ((v127 & 0x80u) == 0) {
    uint64_t v128 = v127;
  }
  v95 += v128 + ((9 * (__clz(v128 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v101 & 0x10) == 0)
  {
LABEL_97:
    if ((v101 & 0x20) == 0) {
      goto LABEL_98;
    }
LABEL_162:
    unint64_t v132 = *(void *)(a1 + 416) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v133 = *(unsigned __int8 *)(v132 + 23);
    uint64_t v134 = *(void *)(v132 + 8);
    if ((v133 & 0x80u) == 0) {
      uint64_t v134 = v133;
    }
    v95 += v134 + ((9 * (__clz(v134 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v101 & 0x40) == 0)
    {
LABEL_99:
      if ((v101 & 0x80) == 0) {
        goto LABEL_101;
      }
      goto LABEL_100;
    }
    goto LABEL_165;
  }
LABEL_159:
  unint64_t v129 = *(void *)(a1 + 408) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v130 = *(unsigned __int8 *)(v129 + 23);
  uint64_t v131 = *(void *)(v129 + 8);
  if ((v130 & 0x80u) == 0) {
    uint64_t v131 = v130;
  }
  v95 += v131 + ((9 * (__clz(v131 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v101 & 0x20) != 0) {
    goto LABEL_162;
  }
LABEL_98:
  if ((v101 & 0x40) == 0) {
    goto LABEL_99;
  }
LABEL_165:
  unint64_t v135 = *(void *)(a1 + 424) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v136 = *(unsigned __int8 *)(v135 + 23);
  uint64_t v137 = *(void *)(v135 + 8);
  if ((v136 & 0x80u) == 0) {
    uint64_t v137 = v136;
  }
  v95 += v137 + ((9 * (__clz(v137 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v101 & 0x80) != 0)
  {
LABEL_100:
    uint64_t v102 = sub_132A670(*(void *)(a1 + 432));
    v95 += v102 + ((9 * (__clz(v102 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_101:
  if ((v101 & 0xFF00) == 0) {
    goto LABEL_111;
  }
  if ((v101 & 0x100) != 0)
  {
    uint64_t v138 = sub_1633138(*(void *)(a1 + 440));
    v95 += v138 + ((9 * (__clz(v138 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v101 & 0x200) == 0)
    {
LABEL_104:
      if ((v101 & 0x400) == 0) {
        goto LABEL_105;
      }
      goto LABEL_171;
    }
  }
  else if ((v101 & 0x200) == 0)
  {
    goto LABEL_104;
  }
  uint64_t v139 = sub_1460320(*(void *)(a1 + 448));
  v95 += v139 + ((9 * (__clz(v139 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v101 & 0x400) == 0)
  {
LABEL_105:
    if ((v101 & 0x800) == 0) {
      goto LABEL_106;
    }
    goto LABEL_172;
  }
LABEL_171:
  uint64_t v140 = sub_13CC298(*(void *)(a1 + 456));
  v95 += v140 + ((9 * (__clz(v140 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v101 & 0x800) == 0)
  {
LABEL_106:
    if ((v101 & 0x1000) == 0) {
      goto LABEL_107;
    }
    goto LABEL_173;
  }
LABEL_172:
  uint64_t v141 = sub_13063DC(*(void *)(a1 + 464));
  v95 += v141 + ((9 * (__clz(v141 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v101 & 0x1000) == 0)
  {
LABEL_107:
    if ((v101 & 0x2000) == 0) {
      goto LABEL_108;
    }
    goto LABEL_174;
  }
LABEL_173:
  uint64_t v142 = sub_13CF4F0(*(void *)(a1 + 472));
  v95 += v142 + ((9 * (__clz(v142 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v101 & 0x2000) == 0)
  {
LABEL_108:
    if ((v101 & 0x4000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_175;
  }
LABEL_174:
  unint64_t v143 = sub_134CB68(*(void *)(a1 + 480));
  v95 += v143 + ((9 * (__clz(v143 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v101 & 0x4000) == 0)
  {
LABEL_109:
    if ((v101 & 0x8000) == 0) {
      goto LABEL_111;
    }
    goto LABEL_110;
  }
LABEL_175:
  uint64_t v144 = sub_162C400(*(void *)(a1 + 488));
  v95 += v144 + ((9 * (__clz(v144 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v101 & 0x8000) != 0)
  {
LABEL_110:
    unint64_t v103 = sub_14731B8(*(void *)(a1 + 496));
    v95 += v103 + ((9 * (__clz(v103 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_111:
  if ((v101 & 0xF0000) == 0) {
    goto LABEL_117;
  }
  if ((v101 & 0x10000) != 0)
  {
    uint64_t v145 = sub_139EAB4(*(void *)(a1 + 504));
    v95 += v145 + ((9 * (__clz(v145 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v101 & 0x20000) == 0)
    {
LABEL_114:
      if ((v101 & 0x40000) == 0) {
        goto LABEL_115;
      }
      goto LABEL_179;
    }
  }
  else if ((v101 & 0x20000) == 0)
  {
    goto LABEL_114;
  }
  uint64_t v146 = sub_13D600C(*(void *)(a1 + 512));
  v95 += v146 + ((9 * (__clz(v146 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v101 & 0x40000) == 0)
  {
LABEL_115:
    if ((v101 & 0x80000) == 0) {
      goto LABEL_117;
    }
    goto LABEL_116;
  }
LABEL_179:
  uint64_t v147 = sub_13ADF44(*(void *)(a1 + 520));
  v95 += v147 + ((9 * (__clz(v147 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v101 & 0x80000) != 0)
  {
LABEL_116:
    uint64_t v104 = sub_134BA14(*(void *)(a1 + 528));
    v95 += v104 + ((9 * (__clz(v104 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_117:
  if ((v101 & 0xE00000) != 0)
  {
    if ((v101 & 0x200000) != 0)
    {
      int v105 = *(_DWORD *)(a1 + 540);
      uint64_t v106 = ((9 * (__clz(v105 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v105 >= 0) {
        uint64_t v107 = v106;
      }
      else {
        uint64_t v107 = 11;
      }
      v95 += v107;
    }
    if ((v101 & 0x400000) != 0) {
      v95 += ((9 * (__clz(*(_DWORD *)(a1 + 544) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v101 & 0x800000) != 0) {
      v95 += 2;
    }
  }
  if ((v101 & 0x1F000000) != 0)
  {
    uint64_t v108 = v95 + 2;
    if ((v101 & 0x1000000) == 0) {
      uint64_t v108 = v95;
    }
    if ((v101 & 0x2000000) != 0) {
      v108 += 3;
    }
    if ((v101 & 0x4000000) != 0) {
      uint64_t v95 = v108 + 3;
    }
    else {
      uint64_t v95 = v108;
    }
    if ((v101 & 0x8000000) != 0)
    {
      int v109 = *(_DWORD *)(a1 + 552);
      uint64_t v110 = ((9 * (__clz(v109 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v109 >= 0) {
        uint64_t v111 = v110;
      }
      else {
        uint64_t v111 = 12;
      }
      v95 += v111;
    }
    if ((v101 & 0x10000000) != 0)
    {
      int v112 = *(_DWORD *)(a1 + 556);
      uint64_t v113 = ((9 * (__clz(v112 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v112 >= 0) {
        uint64_t v114 = v113;
      }
      else {
        uint64_t v114 = 11;
      }
      v95 += v114;
    }
  }
  uint64_t v115 = *(void *)(a1 + 8);
  if (v115)
  {
    unint64_t v148 = v115 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v148 + 31) < 0) {
      uint64_t v149 = *(void *)(v148 + 16);
    }
    else {
      uint64_t v149 = *(unsigned __int8 *)(v148 + 31);
    }
    v95 += v149;
  }
  *(_DWORD *)(a1 + 44) = v95;
  return v95;
}

void sub_16312DC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_136818C((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_163A1D0((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_13694B8((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_13694B8((uint64_t *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    char v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      *char v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_148F154((uint64_t *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 168);
  if (v29)
  {
    uint64_t v30 = *(int *)(a1 + 168);
    sub_188C80C((unsigned int *)(a1 + 168), v30 + v29);
    uint64_t v31 = *(void *)(a1 + 176);
    *(_DWORD *)(a1 + 168) += *(_DWORD *)(a2 + 168);
    memcpy((void *)(v31 + 4 * v30), *(const void **)(a2 + 176), 4 * *(int *)(a2 + 168));
  }
  int v32 = *(_DWORD *)(a2 + 192);
  if (v32)
  {
    uint64_t v33 = (uint64_t *)(*(void *)(a2 + 200) + 8);
    uint64_t v34 = (uint64_t *)sub_188CCE4(a1 + 184, *(_DWORD *)(a2 + 192));
    sub_163A25C((uint64_t *)(a1 + 184), v34, v33, v32, **(_DWORD **)(a1 + 200) - *(_DWORD *)(a1 + 192));
    int v35 = *(_DWORD *)(a1 + 192) + v32;
    *(_DWORD *)(a1 + 192) = v35;
    uint64_t v36 = *(int **)(a1 + 200);
    if (*v36 < v35) {
      int *v36 = v35;
    }
  }
  int v37 = *(_DWORD *)(a2 + 216);
  if (v37)
  {
    uint64_t v38 = (uint64_t *)(*(void *)(a2 + 224) + 8);
    uint64_t v39 = (uint64_t *)sub_188CCE4(a1 + 208, *(_DWORD *)(a2 + 216));
    sub_148DAF4((uint64_t *)(a1 + 208), v39, v38, v37, **(_DWORD **)(a1 + 224) - *(_DWORD *)(a1 + 216));
    int v40 = *(_DWORD *)(a1 + 216) + v37;
    *(_DWORD *)(a1 + 216) = v40;
    uint64_t v41 = *(int **)(a1 + 224);
    if (*v41 < v40) {
      int *v41 = v40;
    }
  }
  int v42 = *(_DWORD *)(a2 + 240);
  if (v42)
  {
    int v43 = (uint64_t *)(*(void *)(a2 + 248) + 8);
    int v44 = (uint64_t *)sub_188CCE4(a1 + 232, *(_DWORD *)(a2 + 240));
    sub_148D9DC((uint64_t *)(a1 + 232), v44, v43, v42, **(_DWORD **)(a1 + 248) - *(_DWORD *)(a1 + 240));
    int v45 = *(_DWORD *)(a1 + 240) + v42;
    *(_DWORD *)(a1 + 240) = v45;
    uint64_t v46 = *(int **)(a1 + 248);
    if (*v46 < v45) {
      *uint64_t v46 = v45;
    }
  }
  int v47 = *(_DWORD *)(a2 + 264);
  if (v47)
  {
    uint64_t v48 = (uint64_t *)(*(void *)(a2 + 272) + 8);
    unsigned int v49 = (uint64_t *)sub_188CCE4(a1 + 256, *(_DWORD *)(a2 + 264));
    sub_148DA68((uint64_t *)(a1 + 256), v49, v48, v47, **(_DWORD **)(a1 + 272) - *(_DWORD *)(a1 + 264));
    int v50 = *(_DWORD *)(a1 + 264) + v47;
    *(_DWORD *)(a1 + 264) = v50;
    uint64_t v51 = *(int **)(a1 + 272);
    if (*v51 < v50) {
      int *v51 = v50;
    }
  }
  int v52 = *(_DWORD *)(a2 + 288);
  if (v52)
  {
    uint64_t v53 = (uint64_t *)(*(void *)(a2 + 296) + 8);
    uint64_t v54 = (uint64_t *)sub_188CCE4(a1 + 280, *(_DWORD *)(a2 + 288));
    sub_DF401C((uint64_t *)(a1 + 280), v54, v53, v52, **(_DWORD **)(a1 + 296) - *(_DWORD *)(a1 + 288));
    int v55 = *(_DWORD *)(a1 + 288) + v52;
    *(_DWORD *)(a1 + 288) = v55;
    uint64_t v56 = *(int **)(a1 + 296);
    if (*v56 < v55) {
      *uint64_t v56 = v55;
    }
  }
  int v57 = *(_DWORD *)(a2 + 312);
  if (v57)
  {
    uint64_t v58 = (uint64_t *)(*(void *)(a2 + 320) + 8);
    uint64_t v59 = (uint64_t *)sub_188CCE4(a1 + 304, *(_DWORD *)(a2 + 312));
    sub_163A2E8((uint64_t *)(a1 + 304), v59, v58, v57, **(_DWORD **)(a1 + 320) - *(_DWORD *)(a1 + 312));
    int v60 = *(_DWORD *)(a1 + 312) + v57;
    *(_DWORD *)(a1 + 312) = v60;
    uint64_t v61 = *(int **)(a1 + 320);
    if (*v61 < v60) {
      int *v61 = v60;
    }
  }
  int v62 = *(_DWORD *)(a2 + 336);
  if (v62)
  {
    unsigned int v63 = (const std::string **)(*(void *)(a2 + 344) + 8);
    uint64_t v64 = (std::string **)sub_188CCE4(a1 + 328, *(_DWORD *)(a2 + 336));
    sub_188FB98(a1 + 328, v64, v63, v62, **(_DWORD **)(a1 + 344) - *(_DWORD *)(a1 + 336));
    int v65 = *(_DWORD *)(a1 + 336) + v62;
    *(_DWORD *)(a1 + 336) = v65;
    uint64_t v66 = *(int **)(a1 + 344);
    if (*v66 < v65) {
      *uint64_t v66 = v65;
    }
  }
  int v67 = *(_DWORD *)(a2 + 360);
  if (v67)
  {
    uint64_t v68 = (uint64_t *)(*(void *)(a2 + 368) + 8);
    uint64_t v69 = (uint64_t *)sub_188CCE4(a1 + 352, *(_DWORD *)(a2 + 360));
    sub_12C31B8((uint64_t *)(a1 + 352), v69, v68, v67, **(_DWORD **)(a1 + 368) - *(_DWORD *)(a1 + 360));
    int v70 = *(_DWORD *)(a1 + 360) + v67;
    *(_DWORD *)(a1 + 360) = v70;
    uint64_t v71 = *(int **)(a1 + 368);
    if (*v71 < v70) {
      int *v71 = v70;
    }
  }
  int v72 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v72) {
    goto LABEL_81;
  }
  if (v72)
  {
    uint64_t v73 = (long long *)(*(void *)(a2 + 376) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v74 = *(void *)(a1 + 8);
    uint64_t v75 = (uint64_t *)(v74 & 0xFFFFFFFFFFFFFFFCLL);
    if (v74) {
      uint64_t v75 = (uint64_t *)*v75;
    }
    sub_1881DF4((std::string **)(a1 + 376), v73, v75);
    if ((v72 & 2) == 0)
    {
LABEL_45:
      if ((v72 & 4) == 0) {
        goto LABEL_46;
      }
      goto LABEL_58;
    }
  }
  else if ((v72 & 2) == 0)
  {
    goto LABEL_45;
  }
  uint64_t v76 = (long long *)(*(void *)(a2 + 384) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v77 = *(void *)(a1 + 8);
  uint64_t v78 = (uint64_t *)(v77 & 0xFFFFFFFFFFFFFFFCLL);
  if (v77) {
    uint64_t v78 = (uint64_t *)*v78;
  }
  sub_1881DF4((std::string **)(a1 + 384), v76, v78);
  if ((v72 & 4) == 0)
  {
LABEL_46:
    if ((v72 & 8) == 0) {
      goto LABEL_47;
    }
    goto LABEL_61;
  }
LABEL_58:
  uint64_t v79 = (long long *)(*(void *)(a2 + 392) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v80 = *(void *)(a1 + 8);
  uint64_t v81 = (uint64_t *)(v80 & 0xFFFFFFFFFFFFFFFCLL);
  if (v80) {
    uint64_t v81 = (uint64_t *)*v81;
  }
  sub_1881DF4((std::string **)(a1 + 392), v79, v81);
  if ((v72 & 8) == 0)
  {
LABEL_47:
    if ((v72 & 0x10) == 0) {
      goto LABEL_48;
    }
    goto LABEL_64;
  }
LABEL_61:
  uint64_t v82 = (long long *)(*(void *)(a2 + 400) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v83 = *(void *)(a1 + 8);
  int v84 = (uint64_t *)(v83 & 0xFFFFFFFFFFFFFFFCLL);
  if (v83) {
    int v84 = (uint64_t *)*v84;
  }
  sub_1881DF4((std::string **)(a1 + 400), v82, v84);
  if ((v72 & 0x10) == 0)
  {
LABEL_48:
    if ((v72 & 0x20) == 0) {
      goto LABEL_49;
    }
LABEL_67:
    uint64_t v88 = (long long *)(*(void *)(a2 + 416) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v89 = *(void *)(a1 + 8);
    unsigned int v90 = (uint64_t *)(v89 & 0xFFFFFFFFFFFFFFFCLL);
    if (v89) {
      unsigned int v90 = (uint64_t *)*v90;
    }
    sub_1881DF4((std::string **)(a1 + 416), v88, v90);
    if ((v72 & 0x40) == 0)
    {
LABEL_50:
      if ((v72 & 0x80) == 0) {
        goto LABEL_81;
      }
      goto LABEL_73;
    }
    goto LABEL_70;
  }
LABEL_64:
  uint64_t v85 = (long long *)(*(void *)(a2 + 408) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v86 = *(void *)(a1 + 8);
  uint64_t v87 = (uint64_t *)(v86 & 0xFFFFFFFFFFFFFFFCLL);
  if (v86) {
    uint64_t v87 = (uint64_t *)*v87;
  }
  sub_1881DF4((std::string **)(a1 + 408), v85, v87);
  if ((v72 & 0x20) != 0) {
    goto LABEL_67;
  }
LABEL_49:
  if ((v72 & 0x40) == 0) {
    goto LABEL_50;
  }
LABEL_70:
  uint64_t v91 = (long long *)(*(void *)(a2 + 424) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v92 = *(void *)(a1 + 8);
  uint64_t v93 = (uint64_t *)(v92 & 0xFFFFFFFFFFFFFFFCLL);
  if (v92) {
    uint64_t v93 = (uint64_t *)*v93;
  }
  sub_1881DF4((std::string **)(a1 + 424), v91, v93);
  if ((v72 & 0x80) != 0)
  {
LABEL_73:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v94 = *(void *)(a1 + 432);
    if (!v94)
    {
      uint64_t v95 = *(void *)(a1 + 8);
      uint64_t v96 = (void *)(v95 & 0xFFFFFFFFFFFFFFFCLL);
      if (v95) {
        uint64_t v96 = (void *)*v96;
      }
      uint64_t v94 = sub_1332450((uint64_t)v96);
      *(void *)(a1 + 432) = v94;
    }
    if (*(void *)(a2 + 432)) {
      int v97 = *(uint64_t (****)())(a2 + 432);
    }
    else {
      int v97 = &off_2533128;
    }
    sub_132A758(v94, (uint64_t)v97);
  }
LABEL_81:
  if ((v72 & 0xFF00) == 0) {
    goto LABEL_155;
  }
  if ((v72 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v98 = *(std::string **)(a1 + 440);
    if (!v98)
    {
      uint64_t v99 = *(void *)(a1 + 8);
      uint64_t v100 = (void *)(v99 & 0xFFFFFFFFFFFFFFFCLL);
      if (v99) {
        uint64_t v100 = (void *)*v100;
      }
      uint64_t v98 = (std::string *)sub_16333F0((uint64_t)v100);
      *(void *)(a1 + 440) = v98;
    }
    if (*(void *)(a2 + 440)) {
      int v101 = *(uint64_t (****)())(a2 + 440);
    }
    else {
      int v101 = &off_2541F68;
    }
    sub_1631F10(v98, (uint64_t)v101);
    if ((v72 & 0x200) == 0)
    {
LABEL_84:
      if ((v72 & 0x400) == 0) {
        goto LABEL_85;
      }
      goto LABEL_107;
    }
  }
  else if ((v72 & 0x200) == 0)
  {
    goto LABEL_84;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v102 = *(void **)(a1 + 448);
  if (!v102)
  {
    uint64_t v103 = *(void *)(a1 + 8);
    uint64_t v104 = (void *)(v103 & 0xFFFFFFFFFFFFFFFCLL);
    if (v103) {
      uint64_t v104 = (void *)*v104;
    }
    uint64_t v102 = sub_1478C60((uint64_t)v104);
    *(void *)(a1 + 448) = v102;
  }
  if (*(void *)(a2 + 448)) {
    int v105 = *(uint64_t (****)())(a2 + 448);
  }
  else {
    int v105 = &off_2539400;
  }
  sub_136AC4C((uint64_t)v102, (uint64_t)v105);
  if ((v72 & 0x400) == 0)
  {
LABEL_85:
    if ((v72 & 0x800) == 0) {
      goto LABEL_86;
    }
    goto LABEL_115;
  }
LABEL_107:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  uint64_t v106 = *(void **)(a1 + 456);
  if (!v106)
  {
    uint64_t v107 = *(void *)(a1 + 8);
    uint64_t v108 = (void *)(v107 & 0xFFFFFFFFFFFFFFFCLL);
    if (v107) {
      uint64_t v108 = (void *)*v108;
    }
    uint64_t v106 = sub_13DA524((uint64_t)v108);
    *(void *)(a1 + 456) = v106;
  }
  if (*(void *)(a2 + 456)) {
    int v109 = *(uint64_t (****)())(a2 + 456);
  }
  else {
    int v109 = &off_25365D8;
  }
  sub_13CC400((uint64_t)v106, (uint64_t)v109);
  if ((v72 & 0x800) == 0)
  {
LABEL_86:
    if ((v72 & 0x1000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_123;
  }
LABEL_115:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v110 = *(std::string **)(a1 + 464);
  if (!v110)
  {
    uint64_t v111 = *(void *)(a1 + 8);
    int v112 = (void *)(v111 & 0xFFFFFFFFFFFFFFFCLL);
    if (v111) {
      int v112 = (void *)*v112;
    }
    uint64_t v110 = (std::string *)sub_13064B8((uint64_t)v112);
    *(void *)(a1 + 464) = v110;
  }
  if (*(void *)(a2 + 464)) {
    uint64_t v113 = *(uint64_t (****)())(a2 + 464);
  }
  else {
    uint64_t v113 = &off_25324B8;
  }
  sub_11A7934(v110, (uint64_t)v113);
  if ((v72 & 0x1000) == 0)
  {
LABEL_87:
    if ((v72 & 0x2000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_131;
  }
LABEL_123:
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  uint64_t v114 = *(void **)(a1 + 472);
  if (!v114)
  {
    uint64_t v115 = *(void *)(a1 + 8);
    uint64_t v116 = (void *)(v115 & 0xFFFFFFFFFFFFFFFCLL);
    if (v115) {
      uint64_t v116 = (void *)*v116;
    }
    uint64_t v114 = sub_13DA80C((uint64_t)v116);
    *(void *)(a1 + 472) = v114;
  }
  if (*(void *)(a2 + 472)) {
    unint64_t v117 = *(uint64_t (****)())(a2 + 472);
  }
  else {
    unint64_t v117 = &off_25366E0;
  }
  sub_13CF674((uint64_t)v114, (uint64_t)v117);
  if ((v72 & 0x2000) == 0)
  {
LABEL_88:
    if ((v72 & 0x4000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_139;
  }
LABEL_131:
  *(_DWORD *)(a1 + 40) |= 0x2000u;
  uint64_t v118 = *(std::string **)(a1 + 480);
  if (!v118)
  {
    uint64_t v119 = *(void *)(a1 + 8);
    unint64_t v120 = (void *)(v119 & 0xFFFFFFFFFFFFFFFCLL);
    if (v119) {
      unint64_t v120 = (void *)*v120;
    }
    uint64_t v118 = (std::string *)sub_134ECAC((uint64_t)v120);
    *(void *)(a1 + 480) = v118;
  }
  if (*(void *)(a2 + 480)) {
    uint64_t v121 = *(uint64_t (****)())(a2 + 480);
  }
  else {
    uint64_t v121 = &off_2533E58;
  }
  sub_11A442C(v118, (uint64_t)v121);
  if ((v72 & 0x4000) == 0)
  {
LABEL_89:
    if ((v72 & 0x8000) == 0) {
      goto LABEL_155;
    }
    goto LABEL_147;
  }
LABEL_139:
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  uint64_t v122 = *(void *)(a1 + 488);
  if (!v122)
  {
    uint64_t v123 = *(void *)(a1 + 8);
    uint64_t v124 = (void *)(v123 & 0xFFFFFFFFFFFFFFFCLL);
    if (v123) {
      uint64_t v124 = (void *)*v124;
    }
    uint64_t v122 = sub_1633338((uint64_t)v124);
    *(void *)(a1 + 488) = v122;
  }
  if (*(void *)(a2 + 488)) {
    uint64_t v125 = *(uint64_t (****)())(a2 + 488);
  }
  else {
    uint64_t v125 = &off_2541D08;
  }
  sub_129AF38(v122, (uint64_t)v125);
  if ((v72 & 0x8000) != 0)
  {
LABEL_147:
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    unint64_t v126 = *(std::string **)(a1 + 496);
    if (!v126)
    {
      uint64_t v127 = *(void *)(a1 + 8);
      uint64_t v128 = (void *)(v127 & 0xFFFFFFFFFFFFFFFCLL);
      if (v127) {
        uint64_t v128 = (void *)*v128;
      }
      unint64_t v126 = (std::string *)sub_147967C((uint64_t)v128);
      *(void *)(a1 + 496) = v126;
    }
    if (*(void *)(a2 + 496)) {
      unint64_t v129 = *(uint64_t (****)())(a2 + 496);
    }
    else {
      unint64_t v129 = &off_2539AF0;
    }
    sub_1113E40(v126, (uint64_t)v129);
  }
LABEL_155:
  if ((v72 & 0xFF0000) == 0) {
    goto LABEL_166;
  }
  if ((v72 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    uint64_t v131 = *(void *)(a1 + 504);
    if (!v131)
    {
      uint64_t v132 = *(void *)(a1 + 8);
      uint64_t v133 = (void *)(v132 & 0xFFFFFFFFFFFFFFFCLL);
      if (v132) {
        uint64_t v133 = (void *)*v133;
      }
      uint64_t v131 = sub_13D8978((uint64_t)v133);
      *(void *)(a1 + 504) = v131;
    }
    if (*(void *)(a2 + 504)) {
      uint64_t v134 = *(uint64_t (****)())(a2 + 504);
    }
    else {
      uint64_t v134 = &off_2535580;
    }
    sub_139ECAC(v131, (uint64_t)v134);
    if ((v72 & 0x20000) == 0)
    {
LABEL_158:
      if ((v72 & 0x40000) == 0) {
        goto LABEL_159;
      }
      goto LABEL_194;
    }
  }
  else if ((v72 & 0x20000) == 0)
  {
    goto LABEL_158;
  }
  *(_DWORD *)(a1 + 40) |= 0x20000u;
  unint64_t v135 = *(std::string **)(a1 + 512);
  if (!v135)
  {
    uint64_t v136 = *(void *)(a1 + 8);
    uint64_t v137 = (void *)(v136 & 0xFFFFFFFFFFFFFFFCLL);
    if (v136) {
      uint64_t v137 = (void *)*v137;
    }
    unint64_t v135 = (std::string *)sub_13DAE28((uint64_t)v137);
    *(void *)(a1 + 512) = v135;
  }
  if (*(void *)(a2 + 512)) {
    uint64_t v138 = *(uint64_t (****)())(a2 + 512);
  }
  else {
    uint64_t v138 = &off_25369C8;
  }
  sub_11A7934(v135, (uint64_t)v138);
  if ((v72 & 0x40000) == 0)
  {
LABEL_159:
    if ((v72 & 0x80000) == 0) {
      goto LABEL_160;
    }
    goto LABEL_202;
  }
LABEL_194:
  *(_DWORD *)(a1 + 40) |= 0x40000u;
  uint64_t v139 = *(std::string **)(a1 + 520);
  if (!v139)
  {
    uint64_t v140 = *(void *)(a1 + 8);
    uint64_t v141 = (void *)(v140 & 0xFFFFFFFFFFFFFFFCLL);
    if (v140) {
      uint64_t v141 = (void *)*v141;
    }
    uint64_t v139 = (std::string *)sub_13D8EE0((uint64_t)v141);
    *(void *)(a1 + 520) = v139;
  }
  if (*(void *)(a2 + 520)) {
    uint64_t v142 = *(uint64_t (****)())(a2 + 520);
  }
  else {
    uint64_t v142 = &off_2535C20;
  }
  sub_13ADFDC(v139, (uint64_t)v142);
  if ((v72 & 0x80000) == 0)
  {
LABEL_160:
    if ((v72 & 0x100000) == 0) {
      goto LABEL_161;
    }
    goto LABEL_210;
  }
LABEL_202:
  *(_DWORD *)(a1 + 40) |= 0x80000u;
  uint64_t v143 = *(void *)(a1 + 528);
  if (!v143)
  {
    uint64_t v144 = *(void *)(a1 + 8);
    uint64_t v145 = (void *)(v144 & 0xFFFFFFFFFFFFFFFCLL);
    if (v144) {
      uint64_t v145 = (void *)*v145;
    }
    uint64_t v143 = sub_134EC50((uint64_t)v145);
    *(void *)(a1 + 528) = v143;
  }
  if (*(void *)(a2 + 528)) {
    uint64_t v146 = *(uint64_t (****)())(a2 + 528);
  }
  else {
    uint64_t v146 = &off_2533CD8;
  }
  sub_134BEE0(v143, (uint64_t)v146);
  if ((v72 & 0x100000) == 0)
  {
LABEL_161:
    if ((v72 & 0x200000) == 0) {
      goto LABEL_162;
    }
    goto LABEL_211;
  }
LABEL_210:
  *(_DWORD *)(a1 + 536) = *(_DWORD *)(a2 + 536);
  if ((v72 & 0x200000) == 0)
  {
LABEL_162:
    if ((v72 & 0x400000) == 0) {
      goto LABEL_163;
    }
LABEL_212:
    *(_DWORD *)(a1 + 544) = *(_DWORD *)(a2 + 544);
    if ((v72 & 0x800000) == 0) {
      goto LABEL_165;
    }
    goto LABEL_164;
  }
LABEL_211:
  *(_DWORD *)(a1 + 540) = *(_DWORD *)(a2 + 540);
  if ((v72 & 0x400000) != 0) {
    goto LABEL_212;
  }
LABEL_163:
  if ((v72 & 0x800000) != 0) {
LABEL_164:
  }
    *(unsigned char *)(a1 + 548) = *(unsigned char *)(a2 + 548);
LABEL_165:
  *(_DWORD *)(a1 + 40) |= v72;
LABEL_166:
  if ((v72 & 0x1F000000) == 0) {
    goto LABEL_174;
  }
  if ((v72 & 0x1000000) != 0)
  {
    *(unsigned char *)(a1 + 549) = *(unsigned char *)(a2 + 549);
    if ((v72 & 0x2000000) == 0)
    {
LABEL_169:
      if ((v72 & 0x4000000) == 0) {
        goto LABEL_170;
      }
      goto LABEL_216;
    }
  }
  else if ((v72 & 0x2000000) == 0)
  {
    goto LABEL_169;
  }
  *(unsigned char *)(a1 + 550) = *(unsigned char *)(a2 + 550);
  if ((v72 & 0x4000000) == 0)
  {
LABEL_170:
    if ((v72 & 0x8000000) == 0) {
      goto LABEL_171;
    }
LABEL_217:
    *(_DWORD *)(a1 + 552) = *(_DWORD *)(a2 + 552);
    if ((v72 & 0x10000000) == 0) {
      goto LABEL_173;
    }
    goto LABEL_172;
  }
LABEL_216:
  *(unsigned char *)(a1 + 551) = *(unsigned char *)(a2 + 551);
  if ((v72 & 0x8000000) != 0) {
    goto LABEL_217;
  }
LABEL_171:
  if ((v72 & 0x10000000) != 0) {
LABEL_172:
  }
    *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
LABEL_173:
  *(_DWORD *)(a1 + 40) |= v72;
LABEL_174:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v130 = *(void *)(a2 + 8);
  if (v130)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v130 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_1631F10(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[2], v9 + v8);
    std::string::size_type v10 = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 48);
    uint64_t result = (std::string *)memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v11 = *(_DWORD *)(a2 + 16);
  if ((v11 & 3) != 0)
  {
    if (v11)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      int v12 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
      if (!v12)
      {
        std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
        int v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          int v14 = (void *)*v14;
        }
        int v12 = (std::string *)sub_13DA124((uint64_t)v14);
        v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v12;
      }
      if (*(void *)(a2 + 64)) {
        uint64_t v15 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        uint64_t v15 = &off_2536468;
      }
      uint64_t result = sub_13C8508(v12, (uint64_t)v15);
    }
    if ((v11 & 2) != 0) {
      v3[3].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 72);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v11;
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

void sub_1632068(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_162D688(a1);
    sub_16312DC(a1, a2);
  }
}

uint64_t sub_16320B4(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 42) & 0x10) == 0) {
      return 0;
    }
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_13AD634(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_13F1C1C(*(void *)(*(void *)(a1 + 88) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 104);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_13BB038(*(void *)(*(void *)(a1 + 112) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v12 = *(unsigned int *)(a1 + 128);
    while ((int)v12 >= 1)
    {
      uint64_t v13 = v12 - 1;
      char v14 = sub_13BB038(*(void *)(*(void *)(a1 + 136) + 8 * v12));
      uint64_t result = 0;
      uint64_t v12 = v13;
      if ((v14 & 1) == 0) {
        return result;
      }
    }
    uint64_t v15 = *(unsigned int *)(a1 + 192);
    while ((int)v15 >= 1)
    {
      uint64_t v16 = v15 - 1;
      char v17 = sub_1333318(*(void *)(*(void *)(a1 + 200) + 8 * v15));
      uint64_t result = 0;
      uint64_t v15 = v16;
      if ((v17 & 1) == 0) {
        return result;
      }
    }
    uint64_t v18 = *(unsigned int *)(a1 + 216);
    while ((int)v18 >= 1)
    {
      uint64_t v19 = v18 - 1;
      char v20 = sub_13BC874(*(void *)(*(void *)(a1 + 224) + 8 * v18));
      uint64_t result = 0;
      uint64_t v18 = v19;
      if ((v20 & 1) == 0) {
        return result;
      }
    }
    uint64_t v21 = *(unsigned int *)(a1 + 240);
    while ((int)v21 >= 1)
    {
      uint64_t v22 = v21 - 1;
      char v23 = sub_13C086C(*(void *)(*(void *)(a1 + 248) + 8 * v21));
      uint64_t result = 0;
      uint64_t v21 = v22;
      if ((v23 & 1) == 0) {
        return result;
      }
    }
    uint64_t v24 = *(unsigned int *)(a1 + 264);
    while ((int)v24 >= 1)
    {
      uint64_t v25 = v24 - 1;
      char v26 = sub_13BD274(*(void *)(*(void *)(a1 + 272) + 8 * v24));
      uint64_t result = 0;
      uint64_t v24 = v25;
      if ((v26 & 1) == 0) {
        return result;
      }
    }
    uint64_t v27 = *(unsigned int *)(a1 + 288);
    while ((int)v27 >= 1)
    {
      uint64_t v28 = v27 - 1;
      char v29 = sub_13A4A14(*(void *)(*(void *)(a1 + 296) + 8 * v27));
      uint64_t result = 0;
      uint64_t v27 = v28;
      if ((v29 & 1) == 0) {
        return result;
      }
    }
    uint64_t v30 = *(unsigned int *)(a1 + 312);
    while ((int)v30 >= 1)
    {
      uint64_t v31 = v30 - 1;
      char v32 = sub_133088C(*(void *)(*(void *)(a1 + 320) + 8 * v30));
      uint64_t result = 0;
      uint64_t v30 = v31;
      if ((v32 & 1) == 0) {
        return result;
      }
    }
    uint64_t v33 = *(unsigned int *)(a1 + 360);
    while ((int)v33 >= 1)
    {
      uint64_t v34 = v33 - 1;
      char v35 = sub_133A164(*(void *)(*(void *)(a1 + 368) + 8 * v33));
      uint64_t result = 0;
      uint64_t v33 = v34;
      if ((v35 & 1) == 0) {
        return result;
      }
    }
    int v36 = *(_DWORD *)(a1 + 40);
    if ((v36 & 0x80) != 0)
    {
      uint64_t result = sub_132A860(*(void *)(a1 + 432));
      if (!result) {
        return result;
      }
      int v36 = *(_DWORD *)(a1 + 40);
    }
    if ((v36 & 0x100) != 0)
    {
      uint64_t v37 = *(void *)(a1 + 440);
      if (*(unsigned char *)(v37 + 16))
      {
        uint64_t result = sub_13C85F4(*(void *)(v37 + 64));
        if (!result) {
          return result;
        }
        int v36 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v36 & 0x200) != 0)
    {
      uint64_t result = sub_136AEA0(*(void *)(a1 + 448));
      if (!result) {
        return result;
      }
      int v36 = *(_DWORD *)(a1 + 40);
    }
    if ((v36 & 0x400) != 0)
    {
      uint64_t result = sub_13CC5B0(*(void *)(a1 + 456));
      if (!result) {
        return result;
      }
      int v36 = *(_DWORD *)(a1 + 40);
    }
    if ((v36 & 0x1000) != 0)
    {
      uint64_t result = sub_13CF860(*(void *)(a1 + 472));
      if (!result) {
        return result;
      }
      int v36 = *(_DWORD *)(a1 + 40);
    }
    if ((v36 & 0x4000) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 488) + 16);
      if (!result) {
        return result;
      }
      int v36 = *(_DWORD *)(a1 + 40);
    }
    if ((v36 & 0x10000) != 0)
    {
      uint64_t result = sub_139F024(*(void *)(a1 + 504));
      if (!result) {
        return result;
      }
      int v36 = *(_DWORD *)(a1 + 40);
    }
    if ((v36 & 0x80000) == 0) {
      return 1;
    }
    uint64_t result = sub_134C4D0(*(void *)(a1 + 528));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1632398(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_13C85F4(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

void sub_16323C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (_OWORD *)(a2 + 280);
  uint64_t v5 = a1 + 280;
  sub_1885338((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v6 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v6;
  LODWORD(v6) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v6;
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v7;
  *(void *)(a2 + 56) = v8;
  uint64_t v9 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v9;
  uint64_t v10 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v10;
  *(void *)(a2 + 80) = v11;
  uint64_t v12 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = v12;
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v14 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v13;
  *(void *)(a2 + 104) = v14;
  uint64_t v15 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a2 + 112) = v15;
  uint64_t v16 = *(void *)(a1 + 120);
  uint64_t v17 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a2 + 120) = v16;
  *(void *)(a2 + 128) = v17;
  uint64_t v18 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a2 + 136) = v18;
  uint64_t v19 = *(void *)(a1 + 144);
  uint64_t v20 = *(void *)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a2 + 144) = v19;
  *(void *)(a2 + 152) = v20;
  uint64_t v21 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a2 + 160) = v21;
  uint64_t v22 = *(void *)(a1 + 168);
  uint64_t v23 = *(void *)(a1 + 176);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a2 + 168) = v22;
  *(void *)(a2 + 176) = v23;
  uint64_t v24 = *(void *)(a1 + 184);
  uint64_t v25 = *(void *)(a1 + 192);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(void *)(a2 + 184) = v24;
  *(void *)(a2 + 192) = v25;
  uint64_t v26 = *(void *)(a1 + 200);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a2 + 200) = v26;
  uint64_t v27 = *(void *)(a1 + 208);
  uint64_t v28 = *(void *)(a1 + 216);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(void *)(a2 + 208) = v27;
  *(void *)(a2 + 216) = v28;
  uint64_t v29 = *(void *)(a1 + 224);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a2 + 224) = v29;
  uint64_t v30 = *(void *)(a1 + 232);
  uint64_t v31 = *(void *)(a1 + 240);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(void *)(a2 + 232) = v30;
  *(void *)(a2 + 240) = v31;
  uint64_t v32 = *(void *)(a1 + 248);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a2 + 248) = v32;
  uint64_t v33 = *(void *)(a1 + 256);
  uint64_t v34 = *(void *)(a1 + 264);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(void *)(a2 + 256) = v33;
  *(void *)(a2 + 264) = v34;
  uint64_t v35 = *(void *)(a1 + 272);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a2 + 272) = v35;
  uint64_t v36 = *(void *)(a1 + 280);
  uint64_t v37 = *(void *)(a1 + 288);
  *(_OWORD *)uint64_t v5 = *v4;
  *(void *)(a2 + 280) = v36;
  *(void *)(a2 + 288) = v37;
  uint64_t v38 = *(void *)(a1 + 296);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a2 + 296) = v38;
  uint64_t v39 = *(void *)(a1 + 304);
  uint64_t v40 = *(void *)(a1 + 312);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(void *)(a2 + 304) = v39;
  *(void *)(a2 + 312) = v40;
  uint64_t v41 = *(void *)(a1 + 320);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a2 + 320) = v41;
  uint64_t v42 = *(void *)(v5 + 48);
  uint64_t v43 = *(void *)(a1 + 336);
  *(_OWORD *)(v5 + 48) = v4[3];
  *(void *)(a2 + 336) = v43;
  *((void *)v4 + 6) = v42;
  uint64_t v44 = *(void *)(a1 + 344);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a2 + 344) = v44;
  uint64_t v45 = *(void *)(a1 + 352);
  uint64_t v46 = *(void *)(a1 + 360);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(void *)(a2 + 352) = v45;
  *(void *)(a2 + 360) = v46;
  uint64_t v47 = *(void *)(a1 + 368);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a2 + 368) = v47;
  uint64_t v48 = *(void *)(a2 + 376);
  *(void *)(a2 + 376) = *(void *)(a1 + 376);
  *(void *)(a1 + 376) = v48;
  uint64_t v49 = *(void *)(a2 + 384);
  *(void *)(a2 + 384) = *(void *)(a1 + 384);
  *(void *)(a1 + 384) = v49;
  uint64_t v50 = *(void *)(a2 + 392);
  *(void *)(a2 + 392) = *(void *)(a1 + 392);
  *(void *)(a1 + 392) = v50;
  uint64_t v51 = *(void *)(a2 + 400);
  *(void *)(a2 + 400) = *(void *)(a1 + 400);
  *(void *)(a1 + 400) = v51;
  uint64_t v52 = *(void *)(a2 + 408);
  *(void *)(a2 + 408) = *(void *)(a1 + 408);
  *(void *)(a1 + 408) = v52;
  uint64_t v53 = *(void *)(a2 + 416);
  *(void *)(a2 + 416) = *(void *)(a1 + 416);
  *(void *)(a1 + 416) = v53;
  uint64_t v54 = *(void *)(a2 + 424);
  *(void *)(a2 + 424) = *(void *)(a1 + 424);
  *(void *)(a1 + 424) = v54;
  uint64_t v55 = *(void *)(a1 + 432);
  uint64_t v56 = *(void *)(a1 + 440);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(void *)(a2 + 432) = v55;
  *(void *)(a2 + 440) = v56;
  uint64_t v57 = *(void *)(a1 + 448);
  uint64_t v58 = *(void *)(a1 + 456);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(void *)(a2 + 448) = v57;
  *(void *)(a2 + 456) = v58;
  sub_122E4C8((uint64_t *)(a1 + 464), a2 + 464);
  int v59 = *(_DWORD *)(a1 + 556);
  *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
  *(_DWORD *)(a2 + 556) = v59;
}

void *sub_1632688@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.DirectionsResponse");
}

uint64_t sub_1632698(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24CA510;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 56) = 0;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    sub_188C80C((unsigned int *)(a1 + 48), v7);
    uint64_t v8 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v8, *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9) {
    sub_188B4F8(v4, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

void sub_16327DC()
{
}

uint64_t sub_163284C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2541F68)
  {
    uint64_t v6 = *(void **)(a1 + 64);
    if (v6)
    {
      sub_13C7EE8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 48);
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1632914(uint64_t a1)
{
  sub_163284C(a1);

  operator delete();
}

char *sub_163294C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v35 + 1;
    unsigned int v9 = *v35;
    if (*v35 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v35, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = v35 + 2;
      }
    }
    uint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_51;
        }
        v5 |= 2u;
        uint64_t v13 = v8 + 1;
        uint64_t v14 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        uint64_t v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          uint64_t v35 = v13;
          *(unsigned char *)(a1 + 72) = v14 != 0;
          goto LABEL_59;
        }
        uint64_t v28 = (char *)sub_188C138((uint64_t)v8, v14);
        uint64_t v35 = v28;
        *(unsigned char *)(a1 + 72) = v29 != 0;
        if (!v28) {
          goto LABEL_68;
        }
        goto LABEL_59;
      case 2u:
        if (v9 == 18)
        {
          *(void *)&long long v36 = a1 + 24;
          *((void *)&v36 + 1) = sub_1369BA8;
          uint64_t v37 = a1 + 8;
          int v38 = 2;
          goto LABEL_36;
        }
        if (v9 != 16) {
          goto LABEL_51;
        }
        uint64_t v30 = sub_110DB5C((uint64_t *)&v35);
        if (!v35) {
          goto LABEL_68;
        }
        unint64_t v31 = v30;
        if (sub_1369BA8(v30))
        {
          sub_1632D50(a1, v31);
        }
        else
        {
          if (*v7) {
            uint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v31, v34);
        }
LABEL_59:
        if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
          goto LABEL_2;
        }
        continue;
      case 5u:
        if (v9 == 40)
        {
          uint64_t v16 = v8 - 1;
          while (1)
          {
            uint64_t v35 = v16 + 1;
            unint64_t v17 = v16[1];
            uint64_t v18 = v16 + 2;
            if (v16[1] < 0)
            {
              int v19 = *v18;
              int v20 = v17 + (v19 << 7);
              unint64_t v17 = (v20 - 128);
              if (v19 < 0)
              {
                uint64_t v35 = (char *)sub_188C138((uint64_t)(v16 + 1), (v20 - 128));
                if (!v35) {
                  goto LABEL_68;
                }
                unint64_t v17 = v23;
                goto LABEL_20;
              }
              uint64_t v18 = v16 + 3;
            }
            uint64_t v35 = v18;
LABEL_20:
            if (sub_1369B44(v17))
            {
              uint64_t v21 = *(unsigned int *)(a1 + 48);
              if (v21 == *(_DWORD *)(a1 + 52))
              {
                int v22 = v21 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v21 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v21) = v17;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v21) = v17;
                int v22 = v21 + 1;
              }
              *(_DWORD *)(a1 + 48) = v22;
            }
            else
            {
              if (*v7) {
                uint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(5, v17, v24);
            }
            uint64_t v16 = v35;
            if (*(void *)a3 <= (unint64_t)v35 || *v35 != 40) {
              goto LABEL_59;
            }
          }
        }
        if (v9 == 42)
        {
          *(void *)&long long v36 = a1 + 48;
          *((void *)&v36 + 1) = sub_1369B44;
          uint64_t v37 = a1 + 8;
          int v38 = 5;
LABEL_36:
          uint64_t v25 = sub_1112E88((uint64_t)a3, v8, &v36);
LABEL_58:
          uint64_t v35 = v25;
          if (!v25) {
            goto LABEL_68;
          }
          goto LABEL_59;
        }
LABEL_51:
        if (v9) {
          BOOL v32 = (v9 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v7)
          {
            uint64_t v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v35;
          }
          uint64_t v25 = (char *)sub_1885AC0(v9, v33, v8, a3);
          goto LABEL_58;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_68:
        }
          uint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v35;
      case 6u:
        if (v9 != 50) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v26 = *(void *)(a1 + 64);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_13DA124((uint64_t)v27);
          *(void *)(a1 + 64) = v26;
          uint64_t v8 = v35;
        }
        uint64_t v25 = sub_1632DC0(a3, v26, (unsigned __int8 *)v8);
        goto LABEL_58;
      default:
        goto LABEL_51;
    }
  }
}

void sub_1632D50(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 24);
  uint64_t v4 = (_DWORD *)(a1 + 24);
  if (v5 == *(_DWORD *)(a1 + 28))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 24), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 32) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 32) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

char *sub_1632DC0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C7FA8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1632E50(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 72);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  unsigned int v8 = *(_DWORD *)(a1 + 40);
  if ((int)v8 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned char *v4 = 18;
    unsigned int v9 = v4 + 1;
    if (v8 >= 0x80)
    {
      do
      {
        *v9++ = v8 | 0x80;
        unsigned int v29 = v8 >> 14;
        v8 >>= 7;
      }
      while (v29);
      uint64_t v4 = v9 - 1;
    }
    v4 += 2;
    *unsigned int v9 = v8;
    int v10 = *(int **)(a1 + 32);
    unsigned int v11 = &v10[*(int *)(a1 + 24)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v13 = *v10++;
      unint64_t v12 = v13;
      unsigned char *v4 = v13;
      if (v13 > 0x7F)
      {
        unsigned char *v4 = v12 | 0x80;
        unint64_t v14 = v12 >> 7;
        v4[1] = v12 >> 7;
        v4 += 2;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v15 = v14 >> 14;
            v14 >>= 7;
            *v4++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v10 < v11);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 48);
  if ((int)v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v18 = *(int *)(*(void *)(a1 + 56) + 4 * i);
      unsigned char *v4 = 40;
      v4[1] = v18;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        v4[2] = v18 >> 7;
        v4 += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 64);
    unsigned char *v4 = 50;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    v4[1] = v22;
    if (v22 > 0x7F) {
      unint64_t v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      unint64_t v23 = v4 + 2;
    }
    uint64_t v4 = sub_13C825C(v21, v23, a3);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v28)
  {
    uint64_t v30 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v30;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_1633138(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 24);
  if (!v2)
  {
    uint64_t v4 = 0;
LABEL_12:
    int v9 = 0;
    uint64_t v7 = 0;
    goto LABEL_13;
  }
  int v3 = 0;
  uint64_t v4 = 0;
  do
  {
    int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
    if (v5 < 0) {
      uint64_t v6 = 10;
    }
    else {
      uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    }
    v4 += v6;
    ++v3;
  }
  while (v2 != v3);
  if (!v4) {
    goto LABEL_12;
  }
  uint64_t v7 = 11;
  uint64_t v8 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v4 >= 0) {
    uint64_t v7 = v8;
  }
  int v9 = v4;
LABEL_13:
  *(_DWORD *)(a1 + 40) = v9;
  uint64_t v10 = *(unsigned int *)(a1 + 48);
  if (v10)
  {
    int v11 = 0;
    uint64_t v12 = 0;
    do
    {
      int v13 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * v11);
      if (v13 < 0) {
        uint64_t v14 = 10;
      }
      else {
        uint64_t v14 = (9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6;
      }
      v12 += v14;
      ++v11;
    }
    while (v10 != v11);
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v15 = v7 + v4 + v12 + v10;
  int v16 = *(_DWORD *)(a1 + 16);
  if ((v16 & 3) != 0)
  {
    if (v16)
    {
      uint64_t v17 = sub_13C8420(*(void *)(a1 + 64));
      v15 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v16 & 2) != 0) {
      v15 += 2;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v15 += v21;
  }
  *(_DWORD *)(a1 + 20) = v15;
  return v15;
}

void *sub_16332CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteDisplayHints");
}

uint64_t sub_16332DC(uint64_t a1)
{
  if (!a1)
  {
    sub_163A374();
  }

  return sub_1626DEC(v3, a1, 0);
}

uint64_t sub_1633338(uint64_t a1)
{
  if (!a1)
  {
    sub_163A3E0();
  }

  return sub_162BF84(v3, a1, 0);
}

uint64_t sub_1633394(uint64_t a1)
{
  if (!a1)
  {
    sub_163A44C();
  }

  return sub_162C470(v3, a1, 0);
}

uint64_t sub_16333F0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24CA510;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(void *)(result + 64) = 0;
  *(unsigned char *)(result + 72) = 1;
  return result;
}

void sub_16334A8()
{
}

void sub_16334F0()
{
}

uint64_t sub_1633514(uint64_t a1, uint64_t a2)
{
  return sub_15C1918(a2);
}

uint64_t sub_163351C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1633524()
{
}

void *sub_1633570(uint64_t a1, uint64_t a2)
{
  return sub_15C1974(a2);
}

uint64_t sub_1633578(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633580()
{
}

uint64_t sub_16335DC(uint64_t a1, uint64_t a2)
{
  return sub_15C19EC(a2);
}

uint64_t sub_16335E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16335EC()
{
}

uint64_t sub_1633640(uint64_t a1, uint64_t a2)
{
  return sub_15C1A94(a2);
}

uint64_t sub_1633648(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633650()
{
}

void *sub_16336A8(uint64_t a1, uint64_t a2)
{
  return sub_15C1B30(a2);
}

uint64_t sub_16336B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16336B8()
{
}

void *sub_1633710(uint64_t a1, uint64_t a2)
{
  return sub_15C1BB4(a2);
}

uint64_t sub_1633718(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633720()
{
}

uint64_t sub_1633770(uint64_t a1, uint64_t a2)
{
  return sub_15C1C38(a2);
}

uint64_t sub_1633778(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633780()
{
}

void sub_16337C8()
{
}

uint64_t sub_16337EC(uint64_t a1, uint64_t a2)
{
  return sub_15C1CB4(a2);
}

uint64_t sub_16337F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_16337FC()
{
}

uint64_t sub_1633850(uint64_t a1, uint64_t a2)
{
  return sub_15C1D10(a2);
}

uint64_t sub_1633858(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1633860()
{
}

void sub_16338A8()
{
}

uint64_t sub_16338CC(uint64_t a1, uint64_t a2)
{
  return sub_15C1DB0(a2);
}

uint64_t sub_16338D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_16338DC()
{
}

uint64_t sub_1633938(uint64_t a1, uint64_t a2)
{
  return sub_15C1E0C(a2);
}

uint64_t sub_1633940(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633948()
{
}

void *sub_163398C(uint64_t a1, uint64_t a2)
{
  return sub_15C1E94(a2);
}

uint64_t sub_1633994(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163399C()
{
}

uint64_t sub_16339F0(uint64_t a1, uint64_t a2)
{
  return sub_15C1EF4(a2);
}

uint64_t sub_16339F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633A00()
{
}

uint64_t sub_1633A50(uint64_t a1, uint64_t a2)
{
  return sub_15C1F98(a2);
}

uint64_t sub_1633A58(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633A60()
{
}

void *sub_1633AB0(uint64_t a1, uint64_t a2)
{
  return sub_15C2014(a2);
}

uint64_t sub_1633AB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633AC0()
{
}

void *sub_1633B18(uint64_t a1, uint64_t a2)
{
  return sub_15C2090(a2);
}

uint64_t sub_1633B20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633B28()
{
}

uint64_t sub_1633B84(uint64_t a1, uint64_t a2)
{
  return sub_15C2114(a2);
}

uint64_t sub_1633B8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633B94()
{
}

double sub_1633BE8(uint64_t a1, uint64_t a2)
{
  return sub_15C219C(a2);
}

uint64_t sub_1633BF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633BF8()
{
}

void *sub_1633C50(uint64_t a1, uint64_t a2)
{
  return sub_15C221C(a2);
}

uint64_t sub_1633C58(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633C60()
{
}

void *sub_1633CB0(uint64_t a1, uint64_t a2)
{
  return sub_15C22A0(a2);
}

uint64_t sub_1633CB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633CC0()
{
}

void *sub_1633D10(uint64_t a1, uint64_t a2)
{
  return sub_15C231C(a2);
}

uint64_t sub_1633D18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633D20()
{
}

double sub_1633D8C(uint64_t a1, uint64_t a2)
{
  return sub_15C2398(a2);
}

uint64_t sub_1633D94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633D9C()
{
}

void sub_1633DE4()
{
}

uint64_t sub_1633E08(uint64_t a1, uint64_t a2)
{
  return sub_15C2458(a2);
}

uint64_t sub_1633E10(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1633E18()
{
}

void sub_1633E60()
{
}

void *sub_1633E84(uint64_t a1, uint64_t a2)
{
  return sub_15C24B4(a2);
}

uint64_t sub_1633E8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1633E94()
{
}

uint64_t sub_1633EE4(uint64_t a1, uint64_t a2)
{
  return sub_15C2510(a2);
}

uint64_t sub_1633EEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633EF4()
{
}

uint64_t sub_1633F44(uint64_t a1, uint64_t a2)
{
  return sub_15C258C(a2);
}

uint64_t sub_1633F4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633F54()
{
}

uint64_t sub_1633FA8(uint64_t a1, uint64_t a2)
{
  return sub_15C2608(a2);
}

uint64_t sub_1633FB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1633FB8()
{
}

uint64_t sub_1634008(uint64_t a1, uint64_t a2)
{
  return sub_15C26A4(a2);
}

uint64_t sub_1634010(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634018()
{
}

void *sub_1634070(uint64_t a1, uint64_t a2)
{
  return sub_15C2720(a2);
}

uint64_t sub_1634078(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634080()
{
}

uint64_t sub_16340DC(uint64_t a1, uint64_t a2)
{
  return sub_1621328(a2);
}

uint64_t sub_16340E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16340EC()
{
}

uint64_t sub_1634140(uint64_t a1, uint64_t a2)
{
  return sub_16213B0(a2);
}

uint64_t sub_1634148(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1634150()
{
}

uint64_t sub_16341B0(uint64_t a1, uint64_t a2)
{
  return sub_1621450(a2);
}

uint64_t sub_16341B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16341C0()
{
}

void *sub_163421C(uint64_t a1, uint64_t a2)
{
  return sub_16214F8(a2);
}

uint64_t sub_1634224(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163422C()
{
}

void *sub_1634288(uint64_t a1, uint64_t a2)
{
  return sub_162159C(a2);
}

uint64_t sub_1634290(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634298()
{
}

uint64_t sub_16342F0(uint64_t a1, uint64_t a2)
{
  return sub_1621640(a2);
}

uint64_t sub_16342F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634300()
{
}

uint64_t sub_1634350(uint64_t a1, uint64_t a2)
{
  return sub_1626A78(a2);
}

uint64_t sub_1634358(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634360()
{
}

uint64_t sub_16343B0(uint64_t a1, uint64_t a2)
{
  return sub_1626AF4(a2);
}

uint64_t sub_16343B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16343C0()
{
}

void *sub_1634410(uint64_t a1, uint64_t a2)
{
  return sub_1626B70(a2);
}

uint64_t sub_1634418(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634420()
{
}

void *sub_1634478(uint64_t a1, uint64_t a2)
{
  return sub_1626BEC(a2);
}

uint64_t sub_1634480(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634488()
{
}

double sub_16344DC(uint64_t a1, uint64_t a2)
{
  return sub_1626C70(a2);
}

uint64_t sub_16344E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16344EC()
{
}

double sub_1634540(uint64_t a1, uint64_t a2)
{
  return sub_1626CF0(a2);
}

uint64_t sub_1634548(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634550()
{
}

double sub_16345A0(uint64_t a1, uint64_t a2)
{
  return sub_1626D70(a2);
}

uint64_t sub_16345A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16345B0()
{
}

uint64_t sub_1634600(uint64_t a1, uint64_t a2)
{
  return sub_15C6120(a2);
}

uint64_t sub_1634608(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634610()
{
}

void *sub_163466C(uint64_t a1, uint64_t a2)
{
  return sub_15C619C(a2);
}

uint64_t sub_1634674(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163467C()
{
}

uint64_t sub_16346DC(uint64_t a1, uint64_t a2)
{
  return sub_15C6224(a2);
}

uint64_t sub_16346E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16346EC()
{
}

uint64_t sub_1634754(uint64_t a1, uint64_t a2)
{
  return sub_15C62B0(a2);
}

uint64_t sub_163475C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634764()
{
}

uint64_t sub_16347B8(uint64_t a1, uint64_t a2)
{
  return sub_15C6344(a2);
}

uint64_t sub_16347C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16347C8()
{
}

uint64_t sub_1634824(uint64_t a1, uint64_t a2)
{
  return sub_15C63E0(a2);
}

uint64_t sub_163482C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 96);
}

void sub_1634834()
{
}

double sub_1634890(uint64_t a1, uint64_t a2)
{
  return sub_15CB898(a2);
}

uint64_t sub_1634898(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16348A0()
{
}

void *sub_1634908(uint64_t a1, uint64_t a2)
{
  return sub_15CB954(a2);
}

uint64_t sub_1634910(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634918()
{
}

uint64_t sub_1634974(uint64_t a1, uint64_t a2)
{
  return sub_15CBA08(a2);
}

uint64_t sub_163497C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634984()
{
}

uint64_t sub_16349D8(uint64_t a1, uint64_t a2)
{
  return sub_15CBA90(a2);
}

uint64_t sub_16349E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16349E8()
{
}

uint64_t sub_1634A38(uint64_t a1, uint64_t a2)
{
  return sub_15CBB10(a2);
}

uint64_t sub_1634A40(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634A48()
{
}

void *sub_1634AA0(uint64_t a1, uint64_t a2)
{
  return sub_15CBB8C(a2);
}

uint64_t sub_1634AA8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634AB0()
{
}

uint64_t sub_1634B10(uint64_t a1, uint64_t a2)
{
  return sub_15CBC10(a2);
}

uint64_t sub_1634B18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634B20()
{
}

void *sub_1634B74(uint64_t a1, uint64_t a2)
{
  return sub_15CBCB8(a2);
}

uint64_t sub_1634B7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634B84()
{
}

void *sub_1634BDC(uint64_t a1, uint64_t a2)
{
  return sub_15CBD54(a2);
}

uint64_t sub_1634BE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634BEC()
{
}

uint64_t sub_1634C48(uint64_t a1, uint64_t a2)
{
  return sub_1623650(a2);
}

uint64_t sub_1634C50(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634C58()
{
}

void *sub_1634CA4(uint64_t a1, uint64_t a2)
{
  return sub_16236D8(a2);
}

uint64_t sub_1634CAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634CB4()
{
}

void *sub_1634D04(uint64_t a1, uint64_t a2)
{
  return sub_1623750(a2);
}

uint64_t sub_1634D0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634D14()
{
}

uint64_t sub_1634D70(uint64_t a1, uint64_t a2)
{
  return sub_16237E8(a2);
}

uint64_t sub_1634D78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634D80()
{
}

void *sub_1634DCC(uint64_t a1, uint64_t a2)
{
  return sub_1623870(a2);
}

uint64_t sub_1634DD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634DDC()
{
}

void *sub_1634E2C(uint64_t a1, uint64_t a2)
{
  return sub_16238E8(a2);
}

uint64_t sub_1634E34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634E3C()
{
}

uint64_t sub_1634E90(uint64_t a1, uint64_t a2)
{
  return sub_1605D2C(a2);
}

uint64_t sub_1634E98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

void sub_1634EA0()
{
}

uint64_t sub_1634EF4(uint64_t a1, uint64_t a2)
{
  return sub_1605DD0(a2);
}

uint64_t sub_1634EFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1634F04()
{
}

uint64_t sub_1634F64(uint64_t a1, uint64_t a2)
{
  return sub_1605E70(a2);
}

uint64_t sub_1634F6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634F74()
{
}

double sub_1634FC8(uint64_t a1, uint64_t a2)
{
  return sub_1605F18(a2);
}

uint64_t sub_1634FD0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1634FD8()
{
}

void *sub_163502C(uint64_t a1, uint64_t a2)
{
  return sub_1605F98(a2);
}

uint64_t sub_1635034(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163503C()
{
}

uint64_t sub_1635088(uint64_t a1, uint64_t a2)
{
  return sub_1606034(a2);
}

uint64_t sub_1635090(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1635098()
{
}

void *sub_16350F8(uint64_t a1, uint64_t a2)
{
  return sub_16060AC(a2);
}

uint64_t sub_1635100(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635108()
{
}

void *sub_1635160(uint64_t a1, uint64_t a2)
{
  return sub_1606138(a2);
}

uint64_t sub_1635168(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635170()
{
}

uint64_t sub_16351C4(uint64_t a1, uint64_t a2)
{
  return sub_16061BC(a2);
}

uint64_t sub_16351CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_16351D4()
{
}

uint64_t sub_1635230(uint64_t a1, uint64_t a2)
{
  return sub_160625C(a2);
}

uint64_t sub_1635238(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635240()
{
}

void *sub_16352A0(uint64_t a1, uint64_t a2)
{
  return sub_16062E4(a2);
}

uint64_t sub_16352A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16352B0()
{
}

void *sub_163530C(uint64_t a1, uint64_t a2)
{
  return sub_160638C(a2);
}

uint64_t sub_1635314(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163531C()
{
}

void *sub_163536C(uint64_t a1, uint64_t a2)
{
  return sub_1606414(a2);
}

uint64_t sub_1635374(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163537C()
{
}

uint64_t sub_16353CC(uint64_t a1, uint64_t a2)
{
  return sub_1606490(a2);
}

uint64_t sub_16353D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16353DC()
{
}

uint64_t sub_1635434(uint64_t a1, uint64_t a2)
{
  return sub_160650C(a2);
}

uint64_t sub_163543C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635444()
{
}

uint64_t sub_16354A4(uint64_t a1, uint64_t a2)
{
  return sub_16065B0(a2);
}

uint64_t sub_16354AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16354B4()
{
}

void *sub_1635500(uint64_t a1, uint64_t a2)
{
  return sub_160663C(a2);
}

uint64_t sub_1635508(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635510()
{
}

void *sub_1635564(uint64_t a1, uint64_t a2)
{
  return sub_16066B4(a2);
}

uint64_t sub_163556C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635574()
{
}

void *sub_16355C4(uint64_t a1, uint64_t a2)
{
  return sub_1606754(a2);
}

uint64_t sub_16355CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16355D4()
{
}

void *sub_163562C(uint64_t a1, uint64_t a2)
{
  return sub_16067D0(a2);
}

uint64_t sub_1635634(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163563C()
{
}

uint64_t sub_1635690(uint64_t a1, uint64_t a2)
{
  return sub_1606854(a2);
}

uint64_t sub_1635698(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_16356A0()
{
}

void *sub_16356F4(uint64_t a1, uint64_t a2)
{
  return sub_16068F4(a2);
}

uint64_t sub_16356FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635704()
{
}

double sub_1635758(uint64_t a1, uint64_t a2)
{
  return sub_160A950(a2);
}

uint64_t sub_1635760(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635768()
{
}

void *sub_16357B8(uint64_t a1, uint64_t a2)
{
  return sub_160A9D0(a2);
}

uint64_t sub_16357C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16357C8()
{
}

void *sub_1635820(uint64_t a1, uint64_t a2)
{
  return sub_160AA68(a2);
}

uint64_t sub_1635828(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635830()
{
}

uint64_t sub_1635888(uint64_t a1, uint64_t a2)
{
  return sub_160AAEC(a2);
}

uint64_t sub_1635890(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635898()
{
}

uint64_t sub_16358E8(uint64_t a1, uint64_t a2)
{
  return sub_160AB8C(a2);
}

uint64_t sub_16358F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16358F8()
{
}

uint64_t sub_163594C(uint64_t a1, uint64_t a2)
{
  return sub_160AC08(a2);
}

uint64_t sub_1635954(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163595C()
{
}

void *sub_16359BC(uint64_t a1, uint64_t a2)
{
  return sub_160AC88(a2);
}

uint64_t sub_16359C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16359CC()
{
}

double sub_1635A20(uint64_t a1, uint64_t a2)
{
  return sub_160E698(a2);
}

uint64_t sub_1635A28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635A30()
{
}

uint64_t sub_1635A84(uint64_t a1, uint64_t a2)
{
  return sub_160E718(a2);
}

uint64_t sub_1635A8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1635A94()
{
}

uint64_t sub_1635AF0(uint64_t a1, uint64_t a2)
{
  return sub_160E7B8(a2);
}

uint64_t sub_1635AF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635B00()
{
}

uint64_t sub_1635B5C(uint64_t a1, uint64_t a2)
{
  return sub_160E840(a2);
}

uint64_t sub_1635B64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635B6C()
{
}

double sub_1635BC0(uint64_t a1, uint64_t a2)
{
  return sub_160E8EC(a2);
}

uint64_t sub_1635BC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635BD0()
{
}

uint64_t sub_1635C30(uint64_t a1, uint64_t a2)
{
  return sub_160E96C(a2);
}

uint64_t sub_1635C38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635C40()
{
}

void sub_1635C88()
{
}

uint64_t sub_1635CAC(uint64_t a1, uint64_t a2)
{
  return sub_16332DC(a2);
}

uint64_t sub_1635CB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1635CBC()
{
}

void sub_1635D04()
{
}

uint64_t sub_1635D28(uint64_t a1, uint64_t a2)
{
  return sub_1633338(a2);
}

uint64_t sub_1635D30(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1635D38()
{
}

void sub_1635D80()
{
}

uint64_t sub_1635DA4(uint64_t a1, uint64_t a2)
{
  return sub_1633394(a2);
}

uint64_t sub_1635DAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1635DB4()
{
}

uint64_t sub_1635E18(uint64_t a1, uint64_t a2)
{
  return sub_16333F0(a2);
}

uint64_t sub_1635E20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635E28()
{
}

void *sub_1635E80(uint64_t a1, uint64_t a2)
{
  return sub_161C5C4(a2);
}

uint64_t sub_1635E88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635E90()
{
}

uint64_t sub_1635EF4(uint64_t a1, uint64_t a2)
{
  return sub_161C648(a2);
}

uint64_t sub_1635EFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635F04()
{
}

void *sub_1635F58(uint64_t a1, uint64_t a2)
{
  return sub_161C6F4(a2);
}

uint64_t sub_1635F60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1635F68()
{
}

uint64_t sub_1635FC0(uint64_t a1, uint64_t a2)
{
  return sub_161C790(a2);
}

uint64_t sub_1635FC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1635FD0()
{
}

void *sub_1636028(uint64_t a1, uint64_t a2)
{
  return sub_161C834(a2);
}

uint64_t sub_1636030(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636038()
{
}

uint64_t sub_1636090(uint64_t a1, uint64_t a2)
{
  return sub_161C8B8(a2);
}

uint64_t sub_1636098(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

void sub_16360A0()
{
}

double sub_16360F4(uint64_t a1, uint64_t a2)
{
  return sub_161C968(a2);
}

uint64_t sub_16360FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636104()
{
}

void *sub_1636160(uint64_t a1, uint64_t a2)
{
  return sub_161C9E8(a2);
}

uint64_t sub_1636168(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636170()
{
}

uint64_t sub_16361C8(uint64_t a1, uint64_t a2)
{
  return sub_161CA8C(a2);
}

uint64_t sub_16361D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_16361D8()
{
}

uint64_t sub_1636228(uint64_t a1, uint64_t a2)
{
  return sub_161CB40(a2);
}

uint64_t sub_1636230(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636238()
{
}

void *sub_1636288(uint64_t a1, uint64_t a2)
{
  return sub_161CBBC(a2);
}

uint64_t sub_1636290(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636298()
{
}

void *sub_16362E8(uint64_t a1, uint64_t a2)
{
  return sub_161CC38(a2);
}

uint64_t sub_16362F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16362F8()
{
}

void *sub_1636344(uint64_t a1, uint64_t a2)
{
  return sub_161CCB4(a2);
}

uint64_t sub_163634C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636354()
{
}

void *sub_16363A0(uint64_t a1, uint64_t a2)
{
  return sub_161CD2C(a2);
}

uint64_t sub_16363A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16363B0()
{
}

void *sub_1636400(uint64_t a1, uint64_t a2)
{
  return sub_161CDA4(a2);
}

uint64_t sub_1636408(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636410()
{
}

void *sub_163645C(uint64_t a1, uint64_t a2)
{
  return sub_161CE20(a2);
}

uint64_t sub_1636464(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163646C()
{
}

uint64_t sub_16364C8(uint64_t a1, uint64_t a2)
{
  return sub_161CE98(a2);
}

uint64_t sub_16364D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16364D8()
{
}

void *sub_1636528(uint64_t a1, uint64_t a2)
{
  return sub_161CF20(a2);
}

uint64_t sub_1636530(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636538()
{
}

void *sub_1636594(uint64_t a1, uint64_t a2)
{
  return sub_161CF9C(a2);
}

uint64_t sub_163659C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16365A4()
{
}

void *sub_16365FC(uint64_t a1, uint64_t a2)
{
  return sub_161D024(a2);
}

uint64_t sub_1636604(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163660C()
{
}

void *sub_163665C(uint64_t a1, uint64_t a2)
{
  return sub_161D0A8(a2);
}

uint64_t sub_1636664(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163666C()
{
}

double sub_16366D8(uint64_t a1, uint64_t a2)
{
  return sub_161D124(a2);
}

uint64_t sub_16366E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16366E8()
{
}

void *sub_1636740(uint64_t a1, uint64_t a2)
{
  return sub_161D20C(a2);
}

uint64_t sub_1636748(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636750()
{
}

uint64_t sub_16367B8(uint64_t a1, uint64_t a2)
{
  return sub_161D290(a2);
}

uint64_t sub_16367C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16367C8()
{
}

void *sub_163682C(uint64_t a1, uint64_t a2)
{
  return sub_161D340(a2);
}

uint64_t sub_1636834(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163683C()
{
}

void sub_1636884()
{
}

uint64_t sub_16368A8(uint64_t a1, uint64_t a2)
{
  return sub_15F847C(a2);
}

uint64_t sub_16368B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_16368B8()
{
}

double sub_163690C(uint64_t a1, uint64_t a2)
{
  return sub_15F84D8(a2);
}

uint64_t sub_1636914(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163691C()
{
}

double sub_1636984(uint64_t a1, uint64_t a2)
{
  return sub_15F8558(a2);
}

uint64_t sub_163698C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636994()
{
}

void *sub_16369F0(uint64_t a1, uint64_t a2)
{
  return sub_15F85EC(a2);
}

uint64_t sub_16369F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636A00()
{
}

uint64_t sub_1636A60(uint64_t a1, uint64_t a2)
{
  return sub_15F8674(a2);
}

uint64_t sub_1636A68(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636A70()
{
}

void *sub_1636AD0(uint64_t a1, uint64_t a2)
{
  return sub_15F871C(a2);
}

uint64_t sub_1636AD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636AE0()
{
}

uint64_t sub_1636B30(uint64_t a1, uint64_t a2)
{
  return sub_15F87A8(a2);
}

uint64_t sub_1636B38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636B40()
{
}

void *sub_1636BA0(uint64_t a1, uint64_t a2)
{
  return sub_15F8824(a2);
}

uint64_t sub_1636BA8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636BB0()
{
}

void *sub_1636BFC(uint64_t a1, uint64_t a2)
{
  return sub_15F88B0(a2);
}

uint64_t sub_1636C04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636C0C()
{
}

uint64_t sub_1636C68(uint64_t a1, uint64_t a2)
{
  return sub_15F8928(a2);
}

uint64_t sub_1636C70(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636C78()
{
}

uint64_t sub_1636CD4(uint64_t a1, uint64_t a2)
{
  return sub_15F89B0(a2);
}

uint64_t sub_1636CDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636CE4()
{
}

uint64_t sub_1636D38(uint64_t a1, uint64_t a2)
{
  return sub_15F8A38(a2);
}

uint64_t sub_1636D40(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636D48()
{
}

double sub_1636D9C(uint64_t a1, uint64_t a2)
{
  return sub_15F8AB8(a2);
}

uint64_t sub_1636DA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636DAC()
{
}

uint64_t sub_1636DF8(uint64_t a1, uint64_t a2)
{
  return sub_15F8B38(a2);
}

uint64_t sub_1636E00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1636E08()
{
}

uint64_t sub_1636E54(uint64_t a1, uint64_t a2)
{
  return sub_15F8BB0(a2);
}

uint64_t sub_1636E5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1636E64()
{
}

double sub_1636ECC(uint64_t a1, uint64_t a2)
{
  return sub_15F8C28(a2);
}

uint64_t sub_1636ED4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636EDC()
{
}

uint64_t sub_1636F30(uint64_t a1, uint64_t a2)
{
  return sub_15F8CBC(a2);
}

uint64_t sub_1636F38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1636F40()
{
}

uint64_t sub_1636F94(uint64_t a1, uint64_t a2)
{
  return sub_15F8D58(a2);
}

uint64_t sub_1636F9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1636FA4()
{
}

void *sub_1637000(uint64_t a1, uint64_t a2)
{
  return sub_15F8DF8(a2);
}

uint64_t sub_1637008(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637010()
{
}

void *sub_1637068(uint64_t a1, uint64_t a2)
{
  return sub_15F8E80(a2);
}

uint64_t sub_1637070(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637078()
{
}

void *sub_16370D0(uint64_t a1, uint64_t a2)
{
  return sub_15F8F04(a2);
}

uint64_t sub_16370D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16370E0()
{
}

void *sub_1637130(uint64_t a1, uint64_t a2)
{
  return sub_15F8F88(a2);
}

uint64_t sub_1637138(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637140()
{
}

double sub_16371A4(uint64_t a1, uint64_t a2)
{
  return sub_15F9004(a2);
}

uint64_t sub_16371AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16371B4()
{
}

void *sub_1637210(uint64_t a1, uint64_t a2)
{
  return sub_15F90B4(a2);
}

uint64_t sub_1637218(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637220()
{
}

uint64_t sub_1637274(uint64_t a1, uint64_t a2)
{
  return sub_15F9158(a2);
}

uint64_t sub_163727C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

void sub_1637284()
{
}

uint64_t sub_16372F0(uint64_t a1, uint64_t a2)
{
  return sub_15F91FC(a2);
}

uint64_t sub_16372F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637300()
{
}

void *sub_1637358(uint64_t a1, uint64_t a2)
{
  return sub_15F92D4(a2);
}

uint64_t sub_1637360(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637368()
{
}

void *sub_16373C0(uint64_t a1, uint64_t a2)
{
  return sub_15F9358(a2);
}

uint64_t sub_16373C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16373D0()
{
}

double sub_1637434(uint64_t a1, uint64_t a2)
{
  return sub_15F93DC(a2);
}

uint64_t sub_163743C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637444()
{
}

double sub_16374B8(uint64_t a1, uint64_t a2)
{
  return sub_15F946C(a2);
}

uint64_t sub_16374C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16374C8()
{
}

uint64_t sub_1637520(uint64_t a1, uint64_t a2)
{
  return sub_15F94FC(a2);
}

uint64_t sub_1637528(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1637530()
{
}

void *sub_1637580(uint64_t a1, uint64_t a2)
{
  return sub_15F95B0(a2);
}

uint64_t sub_1637588(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637590()
{
}

double sub_16375E8(uint64_t a1, uint64_t a2)
{
  return sub_15F962C(a2);
}

uint64_t sub_16375F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16375F8()
{
}

double sub_1637648(uint64_t a1, uint64_t a2)
{
  return sub_15F96B0(a2);
}

uint64_t sub_1637650(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637658()
{
}

uint64_t sub_16376B0(uint64_t a1, uint64_t a2)
{
  return sub_15F972C(a2);
}

uint64_t sub_16376B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

void sub_16376C0()
{
}

void *sub_1637718(uint64_t a1, uint64_t a2)
{
  return sub_15F97DC(a2);
}

uint64_t sub_1637720(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637728()
{
}

uint64_t sub_1637780(uint64_t a1, uint64_t a2)
{
  return sub_15F9860(a2);
}

uint64_t sub_1637788(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1637790()
{
}

void *sub_16377E0(uint64_t a1, uint64_t a2)
{
  return sub_15F9904(a2);
}

uint64_t sub_16377E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16377F0()
{
}

double sub_1637844(uint64_t a1, uint64_t a2)
{
  return sub_15F9980(a2);
}

uint64_t sub_163784C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637854()
{
}

double sub_16378B0(uint64_t a1, uint64_t a2)
{
  return sub_15F9A00(a2);
}

uint64_t sub_16378B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16378C0()
{
}

double sub_1637924(uint64_t a1, uint64_t a2)
{
  return sub_15F9ABC(a2);
}

uint64_t sub_163792C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637934()
{
}

void *sub_1637984(uint64_t a1, uint64_t a2)
{
  return sub_15F9B6C(a2);
}

uint64_t sub_163798C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637994()
{
}

void *sub_16379E4(uint64_t a1, uint64_t a2)
{
  return sub_15F9BE8(a2);
}

uint64_t sub_16379EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16379F4()
{
}

void *sub_1637A48(uint64_t a1, uint64_t a2)
{
  return sub_15F9C64(a2);
}

uint64_t sub_1637A50(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637A58()
{
}

uint64_t sub_1637AA8(uint64_t a1, uint64_t a2)
{
  return sub_15F9D00(a2);
}

uint64_t sub_1637AB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637AB8()
{
}

uint64_t sub_1637B0C(uint64_t a1, uint64_t a2)
{
  return sub_15F9D7C(a2);
}

uint64_t sub_1637B14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637B1C()
{
}

uint64_t sub_1637B84(uint64_t a1, uint64_t a2)
{
  return sub_15F9DFC(a2);
}

uint64_t sub_1637B8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637B94()
{
}

double sub_1637BF8(uint64_t a1, uint64_t a2)
{
  return sub_15F9EB4(a2);
}

uint64_t sub_1637C00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637C08()
{
}

double sub_1637C5C(uint64_t a1, uint64_t a2)
{
  return sub_15F9F80(a2);
}

uint64_t sub_1637C64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637C6C()
{
}

void *sub_1637CB8(uint64_t a1, uint64_t a2)
{
  return sub_15FA000(a2);
}

uint64_t sub_1637CC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637CC8()
{
}

uint64_t sub_1637D1C(uint64_t a1, uint64_t a2)
{
  return sub_15FA078(a2);
}

uint64_t sub_1637D24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637D2C()
{
}

void *sub_1637D7C(uint64_t a1, uint64_t a2)
{
  return sub_15FA0F8(a2);
}

uint64_t sub_1637D84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637D8C()
{
}

uint64_t sub_1637DDC(uint64_t a1, uint64_t a2)
{
  return sub_15FA174(a2);
}

uint64_t sub_1637DE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637DEC()
{
}

double sub_1637E5C(uint64_t a1, uint64_t a2)
{
  return sub_15FA1F0(a2);
}

uint64_t sub_1637E64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637E6C()
{
}

uint64_t sub_1637EBC(uint64_t a1, uint64_t a2)
{
  return sub_15FA2BC(a2);
}

uint64_t sub_1637EC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637ECC()
{
}

void *sub_1637F1C(uint64_t a1, uint64_t a2)
{
  return sub_15FA338(a2);
}

uint64_t sub_1637F24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637F2C()
{
}

void *sub_1637F90(uint64_t a1, uint64_t a2)
{
  return sub_15FA3B4(a2);
}

uint64_t sub_1637F98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1637FA0()
{
}

uint64_t sub_1637FF0(uint64_t a1, uint64_t a2)
{
  return sub_15FA464(a2);
}

uint64_t sub_1637FF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1638000()
{
}

void *sub_1638050(uint64_t a1, uint64_t a2)
{
  return sub_15FA4E0(a2);
}

uint64_t sub_1638058(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1638060()
{
}

void *sub_16380BC(uint64_t a1, uint64_t a2)
{
  return sub_15FA55C(a2);
}

uint64_t sub_16380C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16380CC()
{
}

uint64_t sub_1638128(uint64_t a1, uint64_t a2)
{
  return sub_15FA5E4(a2);
}

uint64_t sub_1638130(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1638138()
{
}

uint64_t sub_163818C(uint64_t a1, uint64_t a2)
{
  return sub_15FA66C(a2);
}

uint64_t sub_1638194(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163819C()
{
}

uint64_t sub_16381EC(uint64_t a1, uint64_t a2)
{
  return sub_15FA708(a2);
}

uint64_t sub_16381F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16381FC()
{
}

void *sub_163824C(uint64_t a1, uint64_t a2)
{
  return sub_15FA784(a2);
}

uint64_t sub_1638254(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_163825C()
{
}

uint64_t sub_16382A8(uint64_t a1, uint64_t a2)
{
  return sub_15FA800(a2);
}

uint64_t sub_16382B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_16382B8()
{
}

void *sub_1638310(uint64_t a1, uint64_t a2)
{
  return sub_15FA878(a2);
}

uint64_t sub_1638318(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1638320()
{
}

void *sub_1638378(uint64_t a1, uint64_t a2)
{
  return sub_15FA8FC(a2);
}

uint64_t sub_1638380(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1638388(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15B5F80(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_1638408(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_15C1E0C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      int v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1638484()
{
}

void sub_16384CC()
{
}

void sub_16384F0()
{
}

void sub_1638538()
{
}

void sub_163855C()
{
}

void sub_16385A4()
{
}

void sub_16385C8()
{
}

void sub_1638610()
{
}

void sub_1638634()
{
}

void sub_163867C()
{
}

void sub_16386A0(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15C87C4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1638720(void *a1)
{
  int v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16C5CE4();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16387A0(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15C9DF0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1638820(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15CB3A4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16388A0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_15CBA08(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_163891C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_163891C(uint64_t a1, uint64_t a2)
{
}

std::string *sub_163892C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1786998(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_16389A8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_16389A8(uint64_t a1, std::string *a2)
{
  return sub_16C6188(a2, a1);
}

std::string *sub_16389B8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_15CBB8C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1638A34(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1638A34(uint64_t a1, std::string *a2)
{
  return sub_15CA3EC(a2, a1);
}

std::string *sub_1638A44(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_15CBD54(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1638AC0(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15C3EFC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1638B40(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15D9C60(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1638BC0(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15DA508(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1638C40(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15E70B4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1638CC0(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15E8D44(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1638D40(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_126FBC0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1638DC0(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15DA9FC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1638E40(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_15C62B0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1638EBC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1638EBC(uint64_t a1, uint64_t a2)
{
}

std::string *sub_1638ECC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_15F8DF8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1638F48(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1638F48(uint64_t a1, std::string *a2)
{
  return sub_15DA3A4(a2, a1);
}

std::string *sub_1638F58(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_15F8E80(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1638FD4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_15F96B0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1639050(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1639050(uint64_t a1, uint64_t a2)
{
}

void sub_1639060(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_15F9904(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_16390DC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_16390DC(uint64_t a1, uint64_t a2)
{
}

void sub_16390EC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1284178(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1639168(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1639168(uint64_t a1, uint64_t a2)
{
}

std::string *sub_1639178(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_15F8F04(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_16391F4()
{
}

void sub_163923C()
{
}

void sub_1639260()
{
}

void sub_16392D4(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15FB584(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1639354(void *a1)
{
  int v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15FD878(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16393D4(void *a1)
{
  int v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15FC004(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1639454(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15FFEEC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16394D4(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15FEE60(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1639554(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1605E70(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_16395D0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_16395D0(uint64_t a1, uint64_t a2)
{
}

void sub_16395E0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1605F98(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_163965C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_163965C(uint64_t a1, uint64_t a2)
{
}

void sub_163966C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1605F18(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_16396E8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_16396E8(uint64_t a1, uint64_t a2)
{
}

std::string *sub_16396F8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_16062E4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1639774(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1639774(uint64_t a1, std::string *a2)
{
  return sub_1600994(a2, a1);
}

std::string *sub_1639784(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1606138(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1639800(void *a1)
{
  int v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_160C64C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1639880(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_160B9D0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_1639900(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_160E840(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_163997C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_163997C(uint64_t a1, std::string *a2)
{
  return sub_160D040(a2, a1);
}

uint64_t *sub_163998C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_160E7B8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1639A08(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1639A08(uint64_t a1, std::string *a2)
{
  return sub_160C3B4(a2, a1);
}

void sub_1639A18(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_160EFF0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1639A98(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1616C40(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1639B18(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_161AC04(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_1639B98(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_161C648(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1639C14(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1639C14(uint64_t a1, std::string *a2)
{
  return sub_160FA8C(a2, a1);
}

std::string *sub_1639C24(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_161D024(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1639CA0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_161D290(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1639D1C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1639D1C(uint64_t a1, uint64_t a2)
{
}

void sub_1639D2C(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_161D3F4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1639DAC(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_161FAFC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1639E2C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1621328(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1639EA8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1639EA8(uint64_t a1, uint64_t a2)
{
}

std::string *sub_1639EB8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_16214F8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1639F34(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1639F34(uint64_t a1, std::string *a2)
{
  return sub_16200F0(a2, a1);
}

void sub_1639F44(void *a1)
{
  int v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13D06CC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1639FC4(void *a1)
{
  int v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_146E3A8();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_163A044(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1332A84(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_163A0C4(void *a1)
{
  int v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_132FB74(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_163A144(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_13DA9CC(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_163A1C0(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_163A1C0(uint64_t a1, std::string *a2)
{
  return sub_13D0F78(a2, a1);
}

void sub_163A1D0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_147937C(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_163A24C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_163A24C(uint64_t a1, uint64_t a2)
{
}

void sub_163A25C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_134DD1C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_163A2D8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_163A2D8(uint64_t a1, uint64_t a2)
{
}

void sub_163A2E8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_133276C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_163A364(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_163A364(uint64_t a1, uint64_t a2)
{
}

void sub_163A374()
{
}

void sub_163A3BC()
{
}

void sub_163A3E0()
{
}

void sub_163A428()
{
}

void sub_163A44C()
{
}

void sub_163A494()
{
}

uint64_t sub_163A4B8(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 64);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 72) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1357E84(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 64) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 88);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 96) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_163AEB4(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 88) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 112);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 120) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_1391C04(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 112) = 0;
  }
  unsigned int v12 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v12) {
    goto LABEL_23;
  }
  if ((v12 & 1) == 0)
  {
    if ((v12 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_41:
    unint64_t v17 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v17 + 23) < 0)
    {
      **(unsigned char **)unint64_t v17 = 0;
      *(void *)(v17 + 8) = 0;
      if ((v12 & 4) != 0) {
        goto LABEL_45;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v17 = 0;
      *(unsigned char *)(v17 + 23) = 0;
      if ((v12 & 4) != 0) {
        goto LABEL_45;
      }
    }
LABEL_17:
    if ((v12 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_46;
  }
  unint64_t v16 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 23) < 0)
  {
    **(unsigned char **)unint64_t v16 = 0;
    *(void *)(v16 + 8) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_41;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v16 = 0;
    *(unsigned char *)(v16 + 23) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_41;
    }
  }
LABEL_16:
  if ((v12 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_45:
  uint64_t result = sub_15B043C(*(void *)(a1 + 144));
  if ((v12 & 8) == 0)
  {
LABEL_18:
    if ((v12 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = sub_13553F4(*(void *)(a1 + 152));
  if ((v12 & 0x10) == 0)
  {
LABEL_19:
    if ((v12 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_48:
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 168));
    if ((v12 & 0x40) == 0)
    {
LABEL_21:
      if ((v12 & 0x80) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    goto LABEL_49;
  }
LABEL_47:
  uint64_t result = sub_15B9F6C(*(void *)(a1 + 160));
  if ((v12 & 0x20) != 0) {
    goto LABEL_48;
  }
LABEL_20:
  if ((v12 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_49:
  uint64_t result = sub_15B043C(*(void *)(a1 + 176));
  if ((v12 & 0x80) != 0) {
LABEL_22:
  }
    uint64_t result = sub_15B043C(*(void *)(a1 + 184));
LABEL_23:
  if ((v12 & 0xFF00) != 0)
  {
    *(void *)(a1 + 192) = 0;
    *(void *)(a1 + 200) = 0;
    *(_WORD *)(a1 + 208) = 0;
  }
  if ((v12 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 216) = 0;
    *(void *)(a1 + 210) = 0;
  }
  if (HIBYTE(v12))
  {
    *(void *)(a1 + 224) = 0;
    *(void *)(a1 + 232) = 0;
    *(_DWORD *)(a1 + 240) = 0;
  }
  int v13 = *(_DWORD *)(a1 + 44);
  if ((_BYTE)v13)
  {
    *(_DWORD *)(a1 + 252) = 0;
    *(void *)(a1 + 244) = 0;
  }
  if ((v13 & 0x300) != 0)
  {
    *(_DWORD *)(a1 + 264) = 0;
    *(void *)(a1 + 256) = 0;
  }
  char v15 = *(unsigned char *)(a1 + 8);
  uint64_t v14 = (uint64_t *)(a1 + 8);
  v14[4] = 0;
  if (v15)
  {
    return sub_188B4AC(v14);
  }
  return result;
}

void sub_163A6B8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 64);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 72) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 56, *(_DWORD *)(a2 + 64));
    sub_136942C((uint64_t *)(a1 + 56), v6, v5, v4, **(_DWORD **)(a1 + 72) - *(_DWORD *)(a1 + 64));
    int v7 = *(_DWORD *)(a1 + 64) + v4;
    *(_DWORD *)(a1 + 64) = v7;
    uint64_t v8 = *(int **)(a1 + 72);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 88);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 96) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 80, *(_DWORD *)(a2 + 88));
    sub_164597C((uint64_t *)(a1 + 80), v11, v10, v9, **(_DWORD **)(a1 + 96) - *(_DWORD *)(a1 + 88));
    int v12 = *(_DWORD *)(a1 + 88) + v9;
    *(_DWORD *)(a1 + 88) = v12;
    int v13 = *(int **)(a1 + 96);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 112);
  if (v14)
  {
    char v15 = (uint64_t *)(*(void *)(a2 + 120) + 8);
    unint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 104, *(_DWORD *)(a2 + 112));
    sub_16459F8((uint64_t *)(a1 + 104), v16, v15, v14, **(_DWORD **)(a1 + 120) - *(_DWORD *)(a1 + 112));
    int v17 = *(_DWORD *)(a1 + 112) + v14;
    *(_DWORD *)(a1 + 112) = v17;
    uint64_t v18 = *(int **)(a1 + 120);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  unsigned int v19 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v19) {
    goto LABEL_74;
  }
  if (v19)
  {
    unint64_t v20 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    unsigned int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      unsigned int v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 128), v20, v22);
  }
  if ((v19 & 2) != 0)
  {
    unint64_t v23 = (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v24 = *(void *)(a1 + 8);
    uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      uint64_t v25 = (uint64_t *)*v25;
    }
    sub_1881DF4((std::string **)(a1 + 136), v23, v25);
  }
  if ((v19 & 4) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v26 = *(void *)(a1 + 144);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v28 = (void *)*v28;
      }
      uint64_t v26 = sub_15C1CB4((uint64_t)v28);
      *(void *)(a1 + 144) = v26;
    }
    if (*(void *)(a2 + 144)) {
      unsigned int v29 = *(uint64_t (****)())(a2 + 144);
    }
    else {
      unsigned int v29 = &off_253F2E8;
    }
    sub_15B04F0(v26, (uint64_t)v29);
    if ((v19 & 8) == 0)
    {
LABEL_21:
      if ((v19 & 0x10) == 0) {
        goto LABEL_22;
      }
      goto LABEL_42;
    }
  }
  else if ((v19 & 8) == 0)
  {
    goto LABEL_21;
  }
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v30 = *(std::string **)(a1 + 152);
  if (!v30)
  {
    uint64_t v31 = *(void *)(a1 + 8);
    BOOL v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
    if (v31) {
      BOOL v32 = (void *)*v32;
    }
    sub_1362368((uint64_t)v32);
    *(void *)(a1 + 152) = v30;
  }
  if (*(void *)(a2 + 152)) {
    uint64_t v33 = *(void *(****)(void *))(a2 + 152);
  }
  else {
    uint64_t v33 = &off_2534368;
  }
  sub_1355564(v30, (uint64_t)v33);
  if ((v19 & 0x10) == 0)
  {
LABEL_22:
    if ((v19 & 0x20) == 0) {
      goto LABEL_23;
    }
LABEL_50:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v38 = *(void *)(a1 + 168);
    if (!v38)
    {
      uint64_t v39 = *(void *)(a1 + 8);
      uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
      if (v39) {
        uint64_t v40 = (void *)*v40;
      }
      uint64_t v38 = sub_15C1918((uint64_t)v40);
      *(void *)(a1 + 168) = v38;
    }
    if (*(void *)(a2 + 168)) {
      uint64_t v41 = *(uint64_t (****)())(a2 + 168);
    }
    else {
      uint64_t v41 = &off_253F1A0;
    }
    sub_15B0E24(v38, (uint64_t)v41);
    if ((v19 & 0x40) == 0)
    {
LABEL_24:
      if ((v19 & 0x80) == 0) {
        goto LABEL_74;
      }
      goto LABEL_66;
    }
    goto LABEL_58;
  }
LABEL_42:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v34 = *(std::string **)(a1 + 160);
  if (!v34)
  {
    uint64_t v35 = *(void *)(a1 + 8);
    long long v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
    if (v35) {
      long long v36 = (void *)*v36;
    }
    uint64_t v34 = (std::string *)sub_15C2014((uint64_t)v36);
    *(void *)(a1 + 160) = v34;
  }
  if (*(void *)(a2 + 160)) {
    uint64_t v37 = *(uint64_t (****)())(a2 + 160);
  }
  else {
    uint64_t v37 = &off_253F530;
  }
  sub_1113E40(v34, (uint64_t)v37);
  if ((v19 & 0x20) != 0) {
    goto LABEL_50;
  }
LABEL_23:
  if ((v19 & 0x40) == 0) {
    goto LABEL_24;
  }
LABEL_58:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v42 = *(void *)(a1 + 176);
  if (!v42)
  {
    uint64_t v43 = *(void *)(a1 + 8);
    uint64_t v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
    if (v43) {
      uint64_t v44 = (void *)*v44;
    }
    uint64_t v42 = sub_15C1CB4((uint64_t)v44);
    *(void *)(a1 + 176) = v42;
  }
  if (*(void *)(a2 + 176)) {
    uint64_t v45 = *(uint64_t (****)())(a2 + 176);
  }
  else {
    uint64_t v45 = &off_253F2E8;
  }
  sub_15B04F0(v42, (uint64_t)v45);
  if ((v19 & 0x80) != 0)
  {
LABEL_66:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v46 = *(void *)(a1 + 184);
    if (!v46)
    {
      uint64_t v47 = *(void *)(a1 + 8);
      uint64_t v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
      if (v47) {
        uint64_t v48 = (void *)*v48;
      }
      uint64_t v46 = sub_15C1CB4((uint64_t)v48);
      *(void *)(a1 + 184) = v46;
    }
    if (*(void *)(a2 + 184)) {
      uint64_t v49 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      uint64_t v49 = &off_253F2E8;
    }
    sub_15B04F0(v46, (uint64_t)v49);
  }
LABEL_74:
  if ((v19 & 0xFF00) == 0) {
    goto LABEL_85;
  }
  if ((v19 & 0x100) != 0)
  {
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    if ((v19 & 0x200) == 0)
    {
LABEL_77:
      if ((v19 & 0x400) == 0) {
        goto LABEL_78;
      }
      goto LABEL_129;
    }
  }
  else if ((v19 & 0x200) == 0)
  {
    goto LABEL_77;
  }
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  if ((v19 & 0x400) == 0)
  {
LABEL_78:
    if ((v19 & 0x800) == 0) {
      goto LABEL_79;
    }
    goto LABEL_130;
  }
LABEL_129:
  *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
  if ((v19 & 0x800) == 0)
  {
LABEL_79:
    if ((v19 & 0x1000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_131;
  }
LABEL_130:
  *(unsigned char *)(a1 + 205) = *(unsigned char *)(a2 + 205);
  if ((v19 & 0x1000) == 0)
  {
LABEL_80:
    if ((v19 & 0x2000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_132;
  }
LABEL_131:
  *(unsigned char *)(a1 + 206) = *(unsigned char *)(a2 + 206);
  if ((v19 & 0x2000) == 0)
  {
LABEL_81:
    if ((v19 & 0x4000) == 0) {
      goto LABEL_82;
    }
LABEL_133:
    *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
    if ((v19 & 0x8000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_83;
  }
LABEL_132:
  *(unsigned char *)(a1 + 207) = *(unsigned char *)(a2 + 207);
  if ((v19 & 0x4000) != 0) {
    goto LABEL_133;
  }
LABEL_82:
  if ((v19 & 0x8000) != 0) {
LABEL_83:
  }
    *(unsigned char *)(a1 + 209) = *(unsigned char *)(a2 + 209);
LABEL_84:
  *(_DWORD *)(a1 + 40) |= v19;
LABEL_85:
  if ((v19 & 0xFF0000) == 0) {
    goto LABEL_96;
  }
  if ((v19 & 0x10000) != 0)
  {
    *(unsigned char *)(a1 + 210) = *(unsigned char *)(a2 + 210);
    if ((v19 & 0x20000) == 0)
    {
LABEL_88:
      if ((v19 & 0x40000) == 0) {
        goto LABEL_89;
      }
      goto LABEL_137;
    }
  }
  else if ((v19 & 0x20000) == 0)
  {
    goto LABEL_88;
  }
  *(unsigned char *)(a1 + 211) = *(unsigned char *)(a2 + 211);
  if ((v19 & 0x40000) == 0)
  {
LABEL_89:
    if ((v19 & 0x80000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_138;
  }
LABEL_137:
  *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
  if ((v19 & 0x80000) == 0)
  {
LABEL_90:
    if ((v19 & 0x100000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_139;
  }
LABEL_138:
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  if ((v19 & 0x100000) == 0)
  {
LABEL_91:
    if ((v19 & 0x200000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_140;
  }
LABEL_139:
  *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
  if ((v19 & 0x200000) == 0)
  {
LABEL_92:
    if ((v19 & 0x400000) == 0) {
      goto LABEL_93;
    }
LABEL_141:
    *(unsigned char *)(a1 + 219) = *(unsigned char *)(a2 + 219);
    if ((v19 & 0x800000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_94;
  }
LABEL_140:
  *(unsigned char *)(a1 + 218) = *(unsigned char *)(a2 + 218);
  if ((v19 & 0x400000) != 0) {
    goto LABEL_141;
  }
LABEL_93:
  if ((v19 & 0x800000) != 0) {
LABEL_94:
  }
    *(_DWORD *)(a1 + 220) = *(_DWORD *)(a2 + 220);
LABEL_95:
  *(_DWORD *)(a1 + 40) |= v19;
LABEL_96:
  if (!HIBYTE(v19)) {
    goto LABEL_106;
  }
  if ((v19 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
    if ((v19 & 0x2000000) == 0)
    {
LABEL_99:
      if ((v19 & 0x4000000) == 0) {
        goto LABEL_100;
      }
      goto LABEL_153;
    }
  }
  else if ((v19 & 0x2000000) == 0)
  {
    goto LABEL_99;
  }
  *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
  if ((v19 & 0x4000000) == 0)
  {
LABEL_100:
    if ((v19 & 0x8000000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_154;
  }
LABEL_153:
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  if ((v19 & 0x8000000) == 0)
  {
LABEL_101:
    if ((v19 & 0x10000000) == 0) {
      goto LABEL_102;
    }
    goto LABEL_155;
  }
LABEL_154:
  *(_DWORD *)(a1 + 236) = *(_DWORD *)(a2 + 236);
  if ((v19 & 0x10000000) == 0)
  {
LABEL_102:
    if ((v19 & 0x20000000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_156;
  }
LABEL_155:
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  if ((v19 & 0x20000000) == 0)
  {
LABEL_103:
    if ((v19 & 0x40000000) == 0) {
      goto LABEL_104;
    }
LABEL_157:
    *(unsigned char *)(a1 + 242) = *(unsigned char *)(a2 + 242);
    if ((v19 & 0x80000000) == 0) {
      goto LABEL_105;
    }
LABEL_158:
    *(unsigned char *)(a1 + 243) = *(unsigned char *)(a2 + 243);
    goto LABEL_105;
  }
LABEL_156:
  *(unsigned char *)(a1 + 241) = *(unsigned char *)(a2 + 241);
  if ((v19 & 0x40000000) != 0) {
    goto LABEL_157;
  }
LABEL_104:
  if ((v19 & 0x80000000) != 0) {
    goto LABEL_158;
  }
LABEL_105:
  *(_DWORD *)(a1 + 40) |= v19;
LABEL_106:
  int v50 = *(_DWORD *)(a2 + 44);
  if (!(_BYTE)v50) {
    goto LABEL_117;
  }
  if (v50)
  {
    *(unsigned char *)(a1 + 244) = *(unsigned char *)(a2 + 244);
    if ((v50 & 2) == 0)
    {
LABEL_109:
      if ((v50 & 4) == 0) {
        goto LABEL_110;
      }
      goto LABEL_145;
    }
  }
  else if ((v50 & 2) == 0)
  {
    goto LABEL_109;
  }
  *(unsigned char *)(a1 + 245) = *(unsigned char *)(a2 + 245);
  if ((v50 & 4) == 0)
  {
LABEL_110:
    if ((v50 & 8) == 0) {
      goto LABEL_111;
    }
    goto LABEL_146;
  }
LABEL_145:
  *(unsigned char *)(a1 + 246) = *(unsigned char *)(a2 + 246);
  if ((v50 & 8) == 0)
  {
LABEL_111:
    if ((v50 & 0x10) == 0) {
      goto LABEL_112;
    }
    goto LABEL_147;
  }
LABEL_146:
  *(unsigned char *)(a1 + 247) = *(unsigned char *)(a2 + 247);
  if ((v50 & 0x10) == 0)
  {
LABEL_112:
    if ((v50 & 0x20) == 0) {
      goto LABEL_113;
    }
    goto LABEL_148;
  }
LABEL_147:
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  if ((v50 & 0x20) == 0)
  {
LABEL_113:
    if ((v50 & 0x40) == 0) {
      goto LABEL_114;
    }
LABEL_149:
    *(unsigned char *)(a1 + 250) = *(unsigned char *)(a2 + 250);
    if ((v50 & 0x80) == 0) {
      goto LABEL_116;
    }
    goto LABEL_115;
  }
LABEL_148:
  *(unsigned char *)(a1 + 249) = *(unsigned char *)(a2 + 249);
  if ((v50 & 0x40) != 0) {
    goto LABEL_149;
  }
LABEL_114:
  if ((v50 & 0x80) != 0) {
LABEL_115:
  }
    *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
LABEL_116:
  *(_DWORD *)(a1 + 44) |= v50;
LABEL_117:
  if ((v50 & 0x300) != 0)
  {
    if ((v50 & 0x100) != 0) {
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
    }
    if ((v50 & 0x200) != 0) {
      *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
    }
    *(_DWORD *)(a1 + 44) |= v50;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v51 = *(void *)(a2 + 8);
  if (v51)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v51 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_163AD20(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 64);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_1359264(*(void *)(*(void *)(a1 + 72) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 112);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_1392B68(*(void *)(*(void *)(a1 + 120) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    int v9 = *(_DWORD *)(a1 + 40);
    if ((v9 & 4) != 0)
    {
      uint64_t result = sub_15B06D8(*(void *)(a1 + 144));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x10) != 0)
    {
      uint64_t result = sub_15BA3C8(*(void *)(a1 + 160));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x20) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 168));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x40) != 0)
    {
      uint64_t result = sub_15B06D8(*(void *)(a1 + 176));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x80) == 0) {
      return 1;
    }
    uint64_t result = sub_15B06D8(*(void *)(a1 + 184));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_163AE08(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_163AE7C(void *a1)
{
  sub_163AE08(a1);

  operator delete();
}

uint64_t sub_163AEB4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_163AEDC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v21 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
    goto LABEL_39;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v21 + 1;
    unsigned int v8 = *v21;
    if (*v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v21 + 2;
      }
    }
    uint64_t v21 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 17)
      {
        *(void *)(a1 + 24) = *(void *)v7;
        uint64_t v21 = v7 + 8;
        int v5 = 1;
        goto LABEL_28;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      int v14 = v7 + 1;
      unint64_t v15 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_25;
      }
      int v16 = *v14;
      int v17 = v15 + (v16 << 7);
      unint64_t v15 = (v17 - 128);
      if (v16 < 0)
      {
        uint64_t v21 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
        if (!v21) {
          goto LABEL_40;
        }
        unint64_t v15 = v18;
      }
      else
      {
        int v14 = v7 + 2;
LABEL_25:
        uint64_t v21 = v14;
      }
      if (v15 > 2)
      {
        if (*v6) {
          unsigned int v19 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unsigned int v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v15, v19);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        *(_DWORD *)(a1 + 32) = v15;
      }
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v21;
    }
    uint64_t v21 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v21) {
      goto LABEL_40;
    }
LABEL_28:
    if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
      goto LABEL_39;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_39;
  }
LABEL_40:
  uint64_t v21 = 0;
LABEL_39:
  *(_DWORD *)(a1 + 16) |= v5;
  return v21;
}

unsigned char *sub_163B0D0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_163B230(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 32);
      if (v3 < 0) {
        uint64_t v4 = 11;
      }
      else {
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v4;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_163B2BC()
{
  return 1;
}

void *sub_163B2C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "logMsgEvent.DurationInNavigationMode");
}

uint64_t sub_163B2D4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = &off_24CB840;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = &qword_2550250;
  *(void *)(a1 + 136) = &qword_2550250;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 252) = 0u;
  return a1;
}

void sub_163B378(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_163B3A8(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_163B458((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_16458FC(a1 + 13);
  sub_164587C(a1 + 10);
  sub_136932C(a1 + 7);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_163B458(uint64_t a1)
{
  int v3 = *(uint64_t **)(a1 + 128);
  uint64_t v2 = (void ***)(a1 + 128);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 136);
  if (*(uint64_t **)(a1 + 136) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2541FB8)
  {
    uint64_t v5 = *(void *)(a1 + 144);
    if (v5)
    {
      sub_15B3DFC(v5);
      operator delete();
    }
    int v6 = *(void **)(a1 + 152);
    if (v6)
    {
      sub_135F664(v6);
      operator delete();
    }
    if (*(void *)(a1 + 160))
    {
      sub_15B9F30();
      operator delete();
    }
    if (*(void *)(a1 + 168))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 176);
    if (v7)
    {
      sub_15B3DFC(v7);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 184);
    if (result)
    {
      sub_15B3DFC(result);
      operator delete();
    }
  }
  return result;
}

void sub_163B590(void *a1)
{
  sub_163B3A8(a1);

  operator delete();
}

char *sub_163B5C8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v180 = a2;
  char v5 = sub_11947B8((uint64_t)a3, (char **)v180, a3[11].i32[1]);
  uint64_t result = *(char **)v180;
  if ((v5 & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = result + 1;
      unsigned int v9 = *result;
      if (*result < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          uint64_t v8 = (char *)sub_188C180((uint64_t)result, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = result + 2;
        }
      }
      *(void *)v180 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_255;
          }
          uint64_t result = v8 - 1;
          while (1)
          {
            int v12 = (unsigned __int8 *)(result + 1);
            *(void *)v180 = result + 1;
            unint64_t v13 = *(_DWORD **)(a1 + 72);
            if (v13 && (uint64_t v14 = *(int *)(a1 + 64), (int)v14 < *v13))
            {
              *(_DWORD *)(a1 + 64) = v14 + 1;
              uint64_t v15 = *(void *)&v13[2 * v14 + 2];
            }
            else
            {
              uint64_t v16 = sub_1361DA4(*(void *)(a1 + 56));
              uint64_t v15 = sub_188CDC8(a1 + 56, v16);
              int v12 = *(unsigned __int8 **)v180;
            }
            uint64_t result = (char *)sub_1355444(a3, v15, v12);
            *(void *)v180 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *result != 10) {
              goto LABEL_253;
            }
          }
        case 2u:
          if (v9 != 18) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 4u;
          uint64_t v17 = *(void *)(a1 + 144);
          if (v17) {
            goto LABEL_251;
          }
          unint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_15C1CB4((uint64_t)v18);
          *(void *)(a1 + 144) = v17;
          goto LABEL_250;
        case 3u:
          if (v9 != 24) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x400u;
          unsigned int v19 = v8 + 1;
          uint64_t v20 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_28;
          }
          int v21 = *v19;
          uint64_t v20 = v20 + (v21 << 7) - 128;
          if (v21 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v20);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 204) = v146 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            unsigned int v19 = v8 + 2;
LABEL_28:
            *(void *)v180 = v19;
            *(unsigned char *)(a1 + 204) = v20 != 0;
          }
          goto LABEL_253;
        case 4u:
          if (v9 != 34) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 8u;
          uint64_t v22 = *(void *)(a1 + 152);
          if (!v22)
          {
            unint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              unint64_t v23 = (void *)*v23;
            }
            sub_1362368((uint64_t)v23);
            uint64_t v22 = v24;
            *(void *)(a1 + 152) = v24;
            uint64_t v8 = *(char **)v180;
          }
          uint64_t result = sub_13554D4(a3, v22, (unsigned __int8 *)v8);
          goto LABEL_252;
        case 5u:
          if (v9 != 41) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x100u;
          uint64_t v26 = *(void *)v8;
          uint64_t v25 = v8 + 8;
          *(void *)(a1 + 192) = v26;
          goto LABEL_234;
        case 6u:
          if (v9 != 50) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x10u;
          uint64_t v27 = *(void **)(a1 + 160);
          if (!v27)
          {
            uint64_t v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v28 = (void *)*v28;
            }
            uint64_t v27 = sub_15C2014((uint64_t)v28);
            *(void *)(a1 + 160) = v27;
            uint64_t v8 = *(char **)v180;
          }
          uint64_t result = sub_11EAA5C(a3, (uint64_t)v27, (unsigned __int8 *)v8);
          goto LABEL_252;
        case 7u:
          if (v9 != 58) {
            goto LABEL_255;
          }
          uint64_t result = v8 - 1;
          while (1)
          {
            unsigned int v29 = (unsigned __int8 *)(result + 1);
            *(void *)v180 = result + 1;
            uint64_t v30 = *(_DWORD **)(a1 + 96);
            if (v30 && (uint64_t v31 = *(int *)(a1 + 88), (int)v31 < *v30))
            {
              *(_DWORD *)(a1 + 88) = v31 + 1;
              uint64_t v32 = *(void *)&v30[2 * v31 + 2];
            }
            else
            {
              uint64_t v33 = sub_163E170(*(void *)(a1 + 80));
              uint64_t v32 = sub_188CDC8(a1 + 80, v33);
              unsigned int v29 = *(unsigned __int8 **)v180;
            }
            uint64_t result = sub_163CABC(a3, v32, v29);
            *(void *)v180 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *result != 58) {
              goto LABEL_253;
            }
          }
        case 8u:
          if (v9 != 64) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x200u;
          uint64_t v34 = v8 + 1;
          int v35 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_57;
          }
          int v36 = *v34;
          int v35 = v35 + (v36 << 7) - 128;
          if (v36 < 0)
          {
            uint64_t result = (char *)sub_188C0D0((uint64_t)v8, v35);
            *(void *)v180 = result;
            *(_DWORD *)(a1 + 200) = v147;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v34 = v8 + 2;
LABEL_57:
            *(void *)v180 = v34;
            *(_DWORD *)(a1 + 200) = v35;
          }
          goto LABEL_253;
        case 9u:
          if (v9 != 72) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x800u;
          uint64_t v37 = v8 + 1;
          uint64_t v38 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_62;
          }
          int v39 = *v37;
          uint64_t v38 = v38 + (v39 << 7) - 128;
          if (v39 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v38);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 205) = v148 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v37 = v8 + 2;
LABEL_62:
            *(void *)v180 = v37;
            *(unsigned char *)(a1 + 205) = v38 != 0;
          }
          goto LABEL_253;
        case 0xAu:
          if (v9 != 80) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x1000u;
          uint64_t v40 = v8 + 1;
          uint64_t v41 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_67;
          }
          int v42 = *v40;
          uint64_t v41 = v41 + (v42 << 7) - 128;
          if (v42 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v41);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 206) = v149 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v40 = v8 + 2;
LABEL_67:
            *(void *)v180 = v40;
            *(unsigned char *)(a1 + 206) = v41 != 0;
          }
          goto LABEL_253;
        case 0xBu:
          if (v9 != 88) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x2000u;
          uint64_t v43 = v8 + 1;
          uint64_t v44 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_72;
          }
          int v45 = *v43;
          uint64_t v44 = v44 + (v45 << 7) - 128;
          if (v45 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v44);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 207) = v150 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v43 = v8 + 2;
LABEL_72:
            *(void *)v180 = v43;
            *(unsigned char *)(a1 + 207) = v44 != 0;
          }
          goto LABEL_253;
        case 0xCu:
          if (v9 != 96) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x4000u;
          uint64_t v46 = v8 + 1;
          uint64_t v47 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_77;
          }
          int v48 = *v46;
          uint64_t v47 = v47 + (v48 << 7) - 128;
          if (v48 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v47);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 208) = v151 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v46 = v8 + 2;
LABEL_77:
            *(void *)v180 = v46;
            *(unsigned char *)(a1 + 208) = v47 != 0;
          }
          goto LABEL_253;
        case 0xDu:
          if (v9 != 104) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x8000u;
          uint64_t v49 = v8 + 1;
          uint64_t v50 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_82;
          }
          int v51 = *v49;
          uint64_t v50 = v50 + (v51 << 7) - 128;
          if (v51 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v50);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 209) = v152 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v49 = v8 + 2;
LABEL_82:
            *(void *)v180 = v49;
            *(unsigned char *)(a1 + 209) = v50 != 0;
          }
          goto LABEL_253;
        case 0xEu:
          if (v9 != 112) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x10000u;
          uint64_t v52 = v8 + 1;
          uint64_t v53 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_87;
          }
          int v54 = *v52;
          uint64_t v53 = v53 + (v54 << 7) - 128;
          if (v54 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v53);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 210) = v153 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v52 = v8 + 2;
LABEL_87:
            *(void *)v180 = v52;
            *(unsigned char *)(a1 + 210) = v53 != 0;
          }
          goto LABEL_253;
        case 0xFu:
          if (v9 != 120) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x20000u;
          uint64_t v55 = v8 + 1;
          uint64_t v56 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_92;
          }
          int v57 = *v55;
          uint64_t v56 = v56 + (v57 << 7) - 128;
          if (v57 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v56);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 211) = v154 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v55 = v8 + 2;
LABEL_92:
            *(void *)v180 = v55;
            *(unsigned char *)(a1 + 211) = v56 != 0;
          }
          goto LABEL_253;
        case 0x10u:
          if (v9 != 128) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x80000u;
          uint64_t v58 = v8 + 1;
          uint64_t v59 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_97;
          }
          int v60 = *v58;
          uint64_t v59 = v59 + (v60 << 7) - 128;
          if (v60 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v59);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 216) = v155 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v58 = v8 + 2;
LABEL_97:
            *(void *)v180 = v58;
            *(unsigned char *)(a1 + 216) = v59 != 0;
          }
          goto LABEL_253;
        case 0x11u:
          if (v9 != 138) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x20u;
          uint64_t v61 = *(void *)(a1 + 168);
          if (!v61)
          {
            int v62 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              int v62 = (void *)*v62;
            }
            uint64_t v61 = sub_15C1918((uint64_t)v62);
            *(void *)(a1 + 168) = v61;
            uint64_t v8 = *(char **)v180;
          }
          uint64_t result = sub_1198F14(a3, v61, (unsigned __int8 *)v8);
          goto LABEL_252;
        case 0x12u:
          if (v9 != 144) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x100000u;
          unsigned int v63 = v8 + 1;
          uint64_t v64 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_108;
          }
          int v65 = *v63;
          uint64_t v64 = v64 + (v65 << 7) - 128;
          if (v65 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v64);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 217) = v156 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            unsigned int v63 = v8 + 2;
LABEL_108:
            *(void *)v180 = v63;
            *(unsigned char *)(a1 + 217) = v64 != 0;
          }
          goto LABEL_253;
        case 0x13u:
          if (v9 != 152) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x200000u;
          uint64_t v66 = v8 + 1;
          uint64_t v67 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_113;
          }
          int v68 = *v66;
          uint64_t v67 = v67 + (v68 << 7) - 128;
          if (v68 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v67);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 218) = v157 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v66 = v8 + 2;
LABEL_113:
            *(void *)v180 = v66;
            *(unsigned char *)(a1 + 218) = v67 != 0;
          }
          goto LABEL_253;
        case 0x14u:
          if (v9 != 160) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x40000u;
          uint64_t v69 = v8 + 1;
          int v70 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_118;
          }
          int v71 = *v69;
          int v70 = v70 + (v71 << 7) - 128;
          if (v71 < 0)
          {
            uint64_t result = (char *)sub_188C0D0((uint64_t)v8, v70);
            *(void *)v180 = result;
            *(_DWORD *)(a1 + 212) = v158;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v69 = v8 + 2;
LABEL_118:
            *(void *)v180 = v69;
            *(_DWORD *)(a1 + 212) = v70;
          }
          goto LABEL_253;
        case 0x15u:
          if (v9 != 168) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x800000u;
          int v72 = v8 + 1;
          int v73 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_123;
          }
          int v74 = *v72;
          int v73 = v73 + (v74 << 7) - 128;
          if (v74 < 0)
          {
            uint64_t result = (char *)sub_188C0D0((uint64_t)v8, v73);
            *(void *)v180 = result;
            *(_DWORD *)(a1 + 220) = v159;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v72 = v8 + 2;
LABEL_123:
            *(void *)v180 = v72;
            *(_DWORD *)(a1 + 220) = v73;
          }
          goto LABEL_253;
        case 0x16u:
          if (v9 != 176) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x1000000u;
          uint64_t v75 = v8 + 1;
          int v76 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_128;
          }
          int v77 = *v75;
          int v76 = v76 + (v77 << 7) - 128;
          if (v77 < 0)
          {
            uint64_t result = (char *)sub_188C0D0((uint64_t)v8, v76);
            *(void *)v180 = result;
            *(_DWORD *)(a1 + 224) = v160;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v75 = v8 + 2;
LABEL_128:
            *(void *)v180 = v75;
            *(_DWORD *)(a1 + 224) = v76;
          }
          goto LABEL_253;
        case 0x17u:
          if (v9 != 184) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x2000000u;
          uint64_t v78 = v8 + 1;
          int v79 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_133;
          }
          int v80 = *v78;
          int v79 = v79 + (v80 << 7) - 128;
          if (v80 < 0)
          {
            uint64_t result = (char *)sub_188C0D0((uint64_t)v8, v79);
            *(void *)v180 = result;
            *(_DWORD *)(a1 + 228) = v161;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v78 = v8 + 2;
LABEL_133:
            *(void *)v180 = v78;
            *(_DWORD *)(a1 + 228) = v79;
          }
          goto LABEL_253;
        case 0x18u:
          if (v9 != 194) {
            goto LABEL_255;
          }
          uint64_t result = v8 - 2;
          while (1)
          {
            uint64_t v81 = (unsigned __int8 *)(result + 2);
            *(void *)v180 = result + 2;
            uint64_t v82 = *(_DWORD **)(a1 + 120);
            if (v82 && (uint64_t v83 = *(int *)(a1 + 112), (int)v83 < *v82))
            {
              *(_DWORD *)(a1 + 112) = v83 + 1;
              uint64_t v84 = *(void *)&v82[2 * v83 + 2];
            }
            else
            {
              sub_13D8414(*(void *)(a1 + 104));
              uint64_t v84 = sub_188CDC8(a1 + 104, v85);
              uint64_t v81 = *(unsigned __int8 **)v180;
            }
            uint64_t result = (char *)sub_1392098(a3, v84, v81);
            *(void *)v180 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 450) {
              goto LABEL_253;
            }
          }
        case 0x19u:
          if (v9 != 202) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v86 = *(void *)(a1 + 8);
          uint64_t v87 = (uint64_t *)(v86 & 0xFFFFFFFFFFFFFFFCLL);
          if (v86) {
            uint64_t v87 = (uint64_t *)*v87;
          }
          uint64_t v88 = (void *)(a1 + 128);
          goto LABEL_152;
        case 0x1Au:
          if (v9 != 210) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 2u;
          uint64_t v89 = *(void *)(a1 + 8);
          uint64_t v87 = (uint64_t *)(v89 & 0xFFFFFFFFFFFFFFFCLL);
          if (v89) {
            uint64_t v87 = (uint64_t *)*v87;
          }
          uint64_t v88 = (void *)(a1 + 136);
LABEL_152:
          unsigned int v90 = (std::string *)sub_1880F84(v88, v87);
          uint64_t result = (char *)sub_188C244(v90, *(char **)v180, (uint64_t)a3);
          goto LABEL_252;
        case 0x1Bu:
          if (v9 != 216) {
            goto LABEL_255;
          }
          uint64_t v91 = v8 + 1;
          unint64_t v92 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_157;
          }
          int v93 = *v91;
          int v94 = v92 + (v93 << 7);
          unint64_t v92 = (v94 - 128);
          if (v93 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, (v94 - 128));
            *(void *)v180 = result;
            if (!result) {
              return result;
            }
            unint64_t v92 = v162;
          }
          else
          {
            uint64_t v91 = v8 + 2;
LABEL_157:
            *(void *)v180 = v91;
          }
          if (sub_138DE04(v92))
          {
            *(_DWORD *)(a1 + 40) |= 0x4000000u;
            *(_DWORD *)(a1 + 232) = v92;
            goto LABEL_253;
          }
          if (*v7) {
            uint64_t v178 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v178 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v179 = 27;
          goto LABEL_334;
        case 0x1Cu:
          if (v9 != 224) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x400000u;
          uint64_t v95 = v8 + 1;
          uint64_t v96 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_164;
          }
          int v97 = *v95;
          uint64_t v96 = v96 + (v97 << 7) - 128;
          if (v97 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v96);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 219) = v163 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v95 = v8 + 2;
LABEL_164:
            *(void *)v180 = v95;
            *(unsigned char *)(a1 + 219) = v96 != 0;
          }
          goto LABEL_253;
        case 0x1Du:
          if (v9 != 232) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x10000000u;
          uint64_t v98 = v8 + 1;
          uint64_t v99 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_169;
          }
          int v100 = *v98;
          uint64_t v99 = v99 + (v100 << 7) - 128;
          if (v100 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v99);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 240) = v164 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v98 = v8 + 2;
LABEL_169:
            *(void *)v180 = v98;
            *(unsigned char *)(a1 + 240) = v99 != 0;
          }
          goto LABEL_253;
        case 0x1Eu:
          if (v9 != 240) {
            goto LABEL_255;
          }
          int v101 = v8 + 1;
          unint64_t v92 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_174;
          }
          int v102 = *v101;
          int v103 = v92 + (v102 << 7);
          unint64_t v92 = (v103 - 128);
          if (v102 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, (v103 - 128));
            *(void *)v180 = result;
            if (!result) {
              return result;
            }
            unint64_t v92 = v165;
          }
          else
          {
            int v101 = v8 + 2;
LABEL_174:
            *(void *)v180 = v101;
          }
          if (v92 > 3)
          {
            if (*v7) {
              uint64_t v178 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v178 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            int v179 = 30;
LABEL_334:
            sub_188C020(v179, v92, v178);
          }
          else
          {
            *(_DWORD *)(a1 + 40) |= 0x8000000u;
            *(_DWORD *)(a1 + 236) = v92;
          }
          goto LABEL_253;
        case 0x1Fu:
          if (v9 != 248) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x20000000u;
          uint64_t v104 = v8 + 1;
          uint64_t v105 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_181;
          }
          int v106 = *v104;
          uint64_t v105 = v105 + (v106 << 7) - 128;
          if (v106 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v105);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 241) = v166 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v104 = v8 + 2;
LABEL_181:
            *(void *)v180 = v104;
            *(unsigned char *)(a1 + 241) = v105 != 0;
          }
          goto LABEL_253;
        case 0x20u:
          if ((_BYTE)v9) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x40000000u;
          uint64_t v107 = v8 + 1;
          uint64_t v108 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_186;
          }
          int v109 = *v107;
          uint64_t v108 = v108 + (v109 << 7) - 128;
          if (v109 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v108);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 242) = v167 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v107 = v8 + 2;
LABEL_186:
            *(void *)v180 = v107;
            *(unsigned char *)(a1 + 242) = v108 != 0;
          }
          goto LABEL_253;
        case 0x21u:
          if (v9 != 8) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x80000000;
          uint64_t v110 = v8 + 1;
          uint64_t v111 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_191;
          }
          int v112 = *v110;
          uint64_t v111 = v111 + (v112 << 7) - 128;
          if (v112 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v111);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 243) = v168 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v110 = v8 + 2;
LABEL_191:
            *(void *)v180 = v110;
            *(unsigned char *)(a1 + 243) = v111 != 0;
          }
          goto LABEL_253;
        case 0x22u:
          if (v9 != 16) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 44) |= 1u;
          uint64_t v113 = v8 + 1;
          uint64_t v114 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_196;
          }
          int v115 = *v113;
          uint64_t v114 = v114 + (v115 << 7) - 128;
          if (v115 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v114);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 244) = v169 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v113 = v8 + 2;
LABEL_196:
            *(void *)v180 = v113;
            *(unsigned char *)(a1 + 244) = v114 != 0;
          }
          goto LABEL_253;
        case 0x23u:
          if (v9 != 24) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 44) |= 2u;
          uint64_t v116 = v8 + 1;
          uint64_t v117 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_201;
          }
          int v118 = *v116;
          uint64_t v117 = v117 + (v118 << 7) - 128;
          if (v118 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v117);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 245) = v170 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v116 = v8 + 2;
LABEL_201:
            *(void *)v180 = v116;
            *(unsigned char *)(a1 + 245) = v117 != 0;
          }
          goto LABEL_253;
        case 0x24u:
          if (v9 != 32) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 44) |= 4u;
          uint64_t v119 = v8 + 1;
          uint64_t v120 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_206;
          }
          int v121 = *v119;
          uint64_t v120 = v120 + (v121 << 7) - 128;
          if (v121 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v120);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 246) = v171 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v119 = v8 + 2;
LABEL_206:
            *(void *)v180 = v119;
            *(unsigned char *)(a1 + 246) = v120 != 0;
          }
          goto LABEL_253;
        case 0x25u:
          if (v9 != 40) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 44) |= 8u;
          uint64_t v122 = v8 + 1;
          uint64_t v123 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_211;
          }
          int v124 = *v122;
          uint64_t v123 = v123 + (v124 << 7) - 128;
          if (v124 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v123);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 247) = v172 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v122 = v8 + 2;
LABEL_211:
            *(void *)v180 = v122;
            *(unsigned char *)(a1 + 247) = v123 != 0;
          }
          goto LABEL_253;
        case 0x26u:
          if (v9 != 48) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 44) |= 0x10u;
          uint64_t v125 = v8 + 1;
          uint64_t v126 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_216;
          }
          int v127 = *v125;
          uint64_t v126 = v126 + (v127 << 7) - 128;
          if (v127 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v126);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 248) = v173 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v125 = v8 + 2;
LABEL_216:
            *(void *)v180 = v125;
            *(unsigned char *)(a1 + 248) = v126 != 0;
          }
          goto LABEL_253;
        case 0x27u:
          if (v9 != 56) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 44) |= 0x20u;
          uint64_t v128 = v8 + 1;
          uint64_t v129 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_221;
          }
          int v130 = *v128;
          uint64_t v129 = v129 + (v130 << 7) - 128;
          if (v130 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v129);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 249) = v174 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v128 = v8 + 2;
LABEL_221:
            *(void *)v180 = v128;
            *(unsigned char *)(a1 + 249) = v129 != 0;
          }
          goto LABEL_253;
        case 0x28u:
          if (v9 != 64) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 44) |= 0x40u;
          uint64_t v131 = v8 + 1;
          uint64_t v132 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_226;
          }
          int v133 = *v131;
          uint64_t v132 = v132 + (v133 << 7) - 128;
          if (v133 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v132);
            *(void *)v180 = result;
            *(unsigned char *)(a1 + 250) = v175 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v131 = v8 + 2;
LABEL_226:
            *(void *)v180 = v131;
            *(unsigned char *)(a1 + 250) = v132 != 0;
          }
          goto LABEL_253;
        case 0x29u:
          if (v9 != 74) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x40u;
          uint64_t v17 = *(void *)(a1 + 176);
          if (v17) {
            goto LABEL_251;
          }
          uint64_t v134 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v134 = (void *)*v134;
          }
          uint64_t v17 = sub_15C1CB4((uint64_t)v134);
          *(void *)(a1 + 176) = v17;
          goto LABEL_250;
        case 0x2Au:
          if (v9 != 81) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 44) |= 0x100u;
          uint64_t v135 = *(void *)v8;
          uint64_t v25 = v8 + 8;
          *(void *)(a1 + 256) = v135;
LABEL_234:
          *(void *)v180 = v25;
          goto LABEL_253;
        case 0x2Bu:
          if (v9 != 88) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 44) |= 0x80u;
          uint64_t v136 = v8 + 1;
          int v137 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_239;
          }
          int v138 = *v136;
          int v137 = v137 + (v138 << 7) - 128;
          if (v138 < 0)
          {
            uint64_t result = (char *)sub_188C0D0((uint64_t)v8, v137);
            *(void *)v180 = result;
            *(_DWORD *)(a1 + 252) = v176;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v136 = v8 + 2;
LABEL_239:
            *(void *)v180 = v136;
            *(_DWORD *)(a1 + 252) = v137;
          }
          goto LABEL_253;
        case 0x2Cu:
          if (v9 != 96) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 44) |= 0x200u;
          uint64_t v139 = v8 + 1;
          int v140 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_244;
          }
          int v141 = *v139;
          int v140 = v140 + (v141 << 7) - 128;
          if (v141 < 0)
          {
            uint64_t result = (char *)sub_188C0D0((uint64_t)v8, v140);
            *(void *)v180 = result;
            *(_DWORD *)(a1 + 264) = v177;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v139 = v8 + 2;
LABEL_244:
            *(void *)v180 = v139;
            *(_DWORD *)(a1 + 264) = v140;
          }
          goto LABEL_253;
        case 0x2Du:
          if (v9 != 106) {
            goto LABEL_255;
          }
          *(_DWORD *)(a1 + 40) |= 0x80u;
          uint64_t v17 = *(void *)(a1 + 184);
          if (v17) {
            goto LABEL_251;
          }
          uint64_t v142 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v142 = (void *)*v142;
          }
          uint64_t v17 = sub_15C1CB4((uint64_t)v142);
          *(void *)(a1 + 184) = v17;
LABEL_250:
          uint64_t v8 = *(char **)v180;
LABEL_251:
          uint64_t result = sub_11B3E48(a3, v17, (unsigned __int8 *)v8);
          goto LABEL_252;
        default:
LABEL_255:
          if (v9) {
            BOOL v144 = (v9 & 7) == 4;
          }
          else {
            BOOL v144 = 1;
          }
          if (v144)
          {
            if (!v8) {
              return 0;
            }
            a3[10].i32[0] = v9 - 1;
            return v8;
          }
          if (v9 - 80008 > 0x31F)
          {
            if (*v7)
            {
              uint64_t v145 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v145 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(char **)v180;
            }
            uint64_t result = (char *)sub_1885AC0(v9, v145, v8, a3);
          }
          else
          {
            uint64_t result = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2541FB8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_252:
          *(void *)v180 = result;
          if (!result) {
            return result;
          }
LABEL_253:
          int v143 = sub_11947B8((uint64_t)a3, (char **)v180, a3[11].i32[1]);
          uint64_t result = *(char **)v180;
          if (v143) {
            return result;
          }
          break;
      }
    }
  }
  return result;
}

char *sub_163CABC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_163AEDC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_163CB4C(uint64_t a1, unsigned char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 64);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 72) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_13588B0(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if ((v11 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v12 = *(void *)(a1 + 144);
    *a2 = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 44);
    a2[1] = v13;
    if (v13 > 0x7F) {
      uint64_t v14 = sub_188A9CC(v13, a2 + 1);
    }
    else {
      uint64_t v14 = a2 + 2;
    }
    a2 = sub_15B43E4(v12, v14, a3);
    if ((v11 & 0x400) == 0)
    {
LABEL_11:
      if ((v11 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_24;
    }
  }
  else if ((v11 & 0x400) == 0)
  {
    goto LABEL_11;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v15 = *(unsigned char *)(a1 + 204);
  *a2 = 24;
  a2[1] = v15;
  a2 += 2;
  if ((v11 & 8) == 0)
  {
LABEL_12:
    if ((v11 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_24:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v16 = *(void *)(a1 + 152);
  *a2 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  a2[1] = v17;
  if (v17 > 0x7F) {
    unint64_t v18 = sub_188A9CC(v17, a2 + 1);
  }
  else {
    unint64_t v18 = a2 + 2;
  }
  a2 = sub_135FFD0(v16, (unint64_t)v18, a3);
  if ((v11 & 0x100) == 0)
  {
LABEL_13:
    if ((v11 & 0x10) == 0) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
LABEL_30:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v19 = *(void *)(a1 + 192);
  *a2 = 41;
  *(void *)(a2 + 1) = v19;
  a2 += 9;
  if ((v11 & 0x10) != 0)
  {
LABEL_33:
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v20 = *(void *)(a1 + 160);
    *a2 = 50;
    unsigned int v21 = *(_DWORD *)(v20 + 20);
    a2[1] = v21;
    if (v21 > 0x7F) {
      uint64_t v22 = sub_188A9CC(v21, a2 + 1);
    }
    else {
      uint64_t v22 = a2 + 2;
    }
    a2 = sub_15BA180(v20, (unint64_t)v22, a3);
  }
LABEL_39:
  int v23 = *(_DWORD *)(a1 + 88);
  if (v23)
  {
    for (int j = 0; j != v23; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v25 = *(void *)(*(void *)(a1 + 96) + 8 * j + 8);
      *a2 = 58;
      unsigned int v26 = *(_DWORD *)(v25 + 20);
      a2[1] = v26;
      if (v26 > 0x7F) {
        uint64_t v27 = sub_188A9CC(v26, a2 + 1);
      }
      else {
        uint64_t v27 = a2 + 2;
      }
      a2 = sub_163B0D0(v25, (unint64_t)v27, a3);
    }
  }
  if ((v11 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 200);
    *a2 = 64;
    a2[1] = v28;
    if (v28 > 0x7F)
    {
      a2[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      a2[2] = v28 >> 7;
      a2 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *a2++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v11 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v31 = *(unsigned char *)(a1 + 205);
    *a2 = 72;
    a2[1] = v31;
    a2 += 2;
    if ((v11 & 0x1000) == 0)
    {
LABEL_56:
      if ((v11 & 0x2000) == 0) {
        goto LABEL_57;
      }
      goto LABEL_73;
    }
  }
  else if ((v11 & 0x1000) == 0)
  {
    goto LABEL_56;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v32 = *(unsigned char *)(a1 + 206);
  *a2 = 80;
  a2[1] = v32;
  a2 += 2;
  if ((v11 & 0x2000) == 0)
  {
LABEL_57:
    if ((v11 & 0x4000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_76;
  }
LABEL_73:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v33 = *(unsigned char *)(a1 + 207);
  *a2 = 88;
  a2[1] = v33;
  a2 += 2;
  if ((v11 & 0x4000) == 0)
  {
LABEL_58:
    if ((v11 & 0x8000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_79;
  }
LABEL_76:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v34 = *(unsigned char *)(a1 + 208);
  *a2 = 96;
  a2[1] = v34;
  a2 += 2;
  if ((v11 & 0x8000) == 0)
  {
LABEL_59:
    if ((v11 & 0x10000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_82;
  }
LABEL_79:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v35 = *(unsigned char *)(a1 + 209);
  *a2 = 104;
  a2[1] = v35;
  a2 += 2;
  if ((v11 & 0x10000) == 0)
  {
LABEL_60:
    if ((v11 & 0x20000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_85;
  }
LABEL_82:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v36 = *(unsigned char *)(a1 + 210);
  *a2 = 112;
  a2[1] = v36;
  a2 += 2;
  if ((v11 & 0x20000) == 0)
  {
LABEL_61:
    if ((v11 & 0x80000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_88;
  }
LABEL_85:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v37 = *(unsigned char *)(a1 + 211);
  *a2 = 120;
  a2[1] = v37;
  a2 += 2;
  if ((v11 & 0x80000) == 0)
  {
LABEL_62:
    if ((v11 & 0x20) == 0) {
      goto LABEL_63;
    }
    goto LABEL_91;
  }
LABEL_88:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v38 = *(unsigned char *)(a1 + 216);
  *(_WORD *)a2 = 384;
  a2[2] = v38;
  a2 += 3;
  if ((v11 & 0x20) == 0)
  {
LABEL_63:
    if ((v11 & 0x100000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_97;
  }
LABEL_91:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v39 = *(void *)(a1 + 168);
  *(_WORD *)a2 = 394;
  unsigned int v40 = *(_DWORD *)(v39 + 44);
  a2[2] = v40;
  if (v40 > 0x7F) {
    uint64_t v41 = sub_188A9CC(v40, a2 + 2);
  }
  else {
    uint64_t v41 = a2 + 3;
  }
  a2 = sub_15B0C0C(v39, v41, a3);
  if ((v11 & 0x100000) == 0)
  {
LABEL_64:
    if ((v11 & 0x200000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_100;
  }
LABEL_97:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v42 = *(unsigned char *)(a1 + 217);
  *(_WORD *)a2 = 400;
  a2[2] = v42;
  a2 += 3;
  if ((v11 & 0x200000) == 0)
  {
LABEL_65:
    if ((v11 & 0x40000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_103;
  }
LABEL_100:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v43 = *(unsigned char *)(a1 + 218);
  *(_WORD *)a2 = 408;
  a2[2] = v43;
  a2 += 3;
  if ((v11 & 0x40000) != 0)
  {
LABEL_103:
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v44 = *(_DWORD *)(a1 + 212);
    *(_WORD *)a2 = 416;
    a2[2] = v44;
    if (v44 > 0x7F)
    {
      a2[2] = v44 | 0x80;
      unsigned int v45 = v44 >> 7;
      a2[3] = v44 >> 7;
      a2 += 4;
      if (v44 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unsigned int v46 = v45 >> 14;
          v45 >>= 7;
          *a2++ = v45;
        }
        while (v46);
      }
    }
    else
    {
      a2 += 3;
    }
  }
LABEL_109:
  if ((v11 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v47 = *(_DWORD *)(a1 + 220);
    *(_WORD *)a2 = 424;
    a2[2] = v47;
    if (v47 > 0x7F)
    {
      a2[2] = v47 | 0x80;
      unsigned int v48 = v47 >> 7;
      a2[3] = v47 >> 7;
      a2 += 4;
      if (v47 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unsigned int v49 = v48 >> 14;
          v48 >>= 7;
          *a2++ = v48;
        }
        while (v49);
      }
    }
    else
    {
      a2 += 3;
    }
  }
  if ((v11 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v50 = *(_DWORD *)(a1 + 224);
    *(_WORD *)a2 = 432;
    a2[2] = v50;
    if (v50 > 0x7F)
    {
      a2[2] = v50 | 0x80;
      unsigned int v51 = v50 >> 7;
      a2[3] = v50 >> 7;
      a2 += 4;
      if (v50 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unsigned int v52 = v51 >> 14;
          v51 >>= 7;
          *a2++ = v51;
        }
        while (v52);
      }
    }
    else
    {
      a2 += 3;
    }
  }
  if ((v11 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v53 = *(_DWORD *)(a1 + 228);
    *(_WORD *)a2 = 440;
    a2[2] = v53;
    if (v53 > 0x7F)
    {
      a2[2] = v53 | 0x80;
      unsigned int v54 = v53 >> 7;
      a2[3] = v53 >> 7;
      a2 += 4;
      if (v53 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unsigned int v55 = v54 >> 14;
          v54 >>= 7;
          *a2++ = v54;
        }
        while (v55);
      }
    }
    else
    {
      a2 += 3;
    }
  }
  int v56 = *(_DWORD *)(a1 + 112);
  if (v56)
  {
    for (int k = 0; k != v56; ++k)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v58 = *(void *)(*(void *)(a1 + 120) + 8 * k + 8);
      *(_WORD *)a2 = 450;
      unsigned int v59 = *(_DWORD *)(v58 + 20);
      a2[2] = v59;
      if (v59 > 0x7F) {
        int v60 = sub_188A9CC(v59, a2 + 2);
      }
      else {
        int v60 = a2 + 3;
      }
      a2 = sub_1396D20(v58, (unint64_t)v60, a3);
    }
  }
  if (v11)
  {
    a2 = sub_117A0AC(a3, 25, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v11 & 2) == 0)
    {
LABEL_140:
      if ((v11 & 0x4000000) == 0) {
        goto LABEL_150;
      }
      goto LABEL_144;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_140;
  }
  a2 = sub_117A0AC(a3, 26, (const void **)(*(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 0x4000000) == 0) {
    goto LABEL_150;
  }
LABEL_144:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  unint64_t v61 = *(int *)(a1 + 232);
  *(_WORD *)a2 = 472;
  a2[2] = v61;
  if (v61 > 0x7F)
  {
    a2[2] = v61 | 0x80;
    unint64_t v62 = v61 >> 7;
    a2[3] = v61 >> 7;
    a2 += 4;
    if (v61 >= 0x4000)
    {
      do
      {
        *(a2 - 1) |= 0x80u;
        unint64_t v63 = v62 >> 14;
        v62 >>= 7;
        *a2++ = v62;
      }
      while (v63);
    }
  }
  else
  {
    a2 += 3;
  }
LABEL_150:
  if ((v11 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v64 = *(unsigned char *)(a1 + 219);
    *(_WORD *)a2 = 480;
    a2[2] = v64;
    a2 += 3;
    if ((v11 & 0x10000000) == 0)
    {
LABEL_152:
      if ((v11 & 0x8000000) == 0) {
        goto LABEL_166;
      }
      goto LABEL_160;
    }
  }
  else if ((v11 & 0x10000000) == 0)
  {
    goto LABEL_152;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v65 = *(unsigned char *)(a1 + 240);
  *(_WORD *)a2 = 488;
  a2[2] = v65;
  a2 += 3;
  if ((v11 & 0x8000000) != 0)
  {
LABEL_160:
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v66 = *(int *)(a1 + 236);
    *(_WORD *)a2 = 496;
    a2[2] = v66;
    if (v66 > 0x7F)
    {
      a2[2] = v66 | 0x80;
      unint64_t v67 = v66 >> 7;
      a2[3] = v66 >> 7;
      a2 += 4;
      if (v66 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v68 = v67 >> 14;
          v67 >>= 7;
          *a2++ = v67;
        }
        while (v68);
      }
    }
    else
    {
      a2 += 3;
    }
  }
LABEL_166:
  if ((v11 & 0x20000000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v69 = *(unsigned char *)(a1 + 241);
    *(_WORD *)a2 = 504;
    a2[2] = v69;
    a2 += 3;
    if ((v11 & 0x40000000) == 0)
    {
LABEL_168:
      if ((v11 & 0x80000000) == 0) {
        goto LABEL_179;
      }
      goto LABEL_176;
    }
  }
  else if ((v11 & 0x40000000) == 0)
  {
    goto LABEL_168;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v70 = *(unsigned char *)(a1 + 242);
  *(_WORD *)a2 = 640;
  a2[2] = v70;
  a2 += 3;
  if (v11 < 0)
  {
LABEL_176:
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v71 = *(unsigned char *)(a1 + 243);
    *(_WORD *)a2 = 648;
    a2[2] = v71;
    a2 += 3;
  }
LABEL_179:
  int v72 = *(_DWORD *)(a1 + 44);
  if (v72)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v73 = *(unsigned char *)(a1 + 244);
    *(_WORD *)a2 = 656;
    a2[2] = v73;
    a2 += 3;
    if ((v72 & 2) == 0)
    {
LABEL_181:
      if ((v72 & 4) == 0) {
        goto LABEL_182;
      }
      goto LABEL_193;
    }
  }
  else if ((v72 & 2) == 0)
  {
    goto LABEL_181;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v74 = *(unsigned char *)(a1 + 245);
  *(_WORD *)a2 = 664;
  a2[2] = v74;
  a2 += 3;
  if ((v72 & 4) == 0)
  {
LABEL_182:
    if ((v72 & 8) == 0) {
      goto LABEL_183;
    }
    goto LABEL_196;
  }
LABEL_193:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v75 = *(unsigned char *)(a1 + 246);
  *(_WORD *)a2 = 672;
  a2[2] = v75;
  a2 += 3;
  if ((v72 & 8) == 0)
  {
LABEL_183:
    if ((v72 & 0x10) == 0) {
      goto LABEL_184;
    }
    goto LABEL_199;
  }
LABEL_196:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v76 = *(unsigned char *)(a1 + 247);
  *(_WORD *)a2 = 680;
  a2[2] = v76;
  a2 += 3;
  if ((v72 & 0x10) == 0)
  {
LABEL_184:
    if ((v72 & 0x20) == 0) {
      goto LABEL_185;
    }
    goto LABEL_202;
  }
LABEL_199:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v77 = *(unsigned char *)(a1 + 248);
  *(_WORD *)a2 = 688;
  a2[2] = v77;
  a2 += 3;
  if ((v72 & 0x20) == 0)
  {
LABEL_185:
    if ((v72 & 0x40) == 0) {
      goto LABEL_208;
    }
    goto LABEL_205;
  }
LABEL_202:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v78 = *(unsigned char *)(a1 + 249);
  *(_WORD *)a2 = 696;
  a2[2] = v78;
  a2 += 3;
  if ((v72 & 0x40) != 0)
  {
LABEL_205:
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v79 = *(unsigned char *)(a1 + 250);
    *(_WORD *)a2 = 704;
    a2[2] = v79;
    a2 += 3;
  }
LABEL_208:
  if ((*(unsigned char *)(a1 + 40) & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v80 = *(void *)(a1 + 176);
    *(_WORD *)a2 = 714;
    unsigned int v81 = *(_DWORD *)(v80 + 44);
    a2[2] = v81;
    if (v81 > 0x7F) {
      uint64_t v82 = sub_188A9CC(v81, a2 + 2);
    }
    else {
      uint64_t v82 = a2 + 3;
    }
    a2 = sub_15B43E4(v80, v82, a3);
  }
  int v83 = *(_DWORD *)(a1 + 44);
  if ((v83 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v84 = *(void *)(a1 + 256);
    *(_WORD *)a2 = 721;
    *(void *)(a2 + 2) = v84;
    a2 += 10;
  }
  if ((v83 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v85 = *(_DWORD *)(a1 + 252);
    *(_WORD *)a2 = 728;
    a2[2] = v85;
    if (v85 > 0x7F)
    {
      a2[2] = v85 | 0x80;
      unsigned int v86 = v85 >> 7;
      a2[3] = v85 >> 7;
      a2 += 4;
      if (v85 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unsigned int v87 = v86 >> 14;
          v86 >>= 7;
          *a2++ = v86;
        }
        while (v87);
      }
    }
    else
    {
      a2 += 3;
    }
  }
  if ((v83 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v88 = *(_DWORD *)(a1 + 264);
    *(_WORD *)a2 = 736;
    a2[2] = v88;
    if (v88 > 0x7F)
    {
      a2[2] = v88 | 0x80;
      unsigned int v89 = v88 >> 7;
      a2[3] = v88 >> 7;
      a2 += 4;
      if (v88 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unsigned int v90 = v89 >> 14;
          v89 >>= 7;
          *a2++ = v89;
        }
        while (v90);
      }
    }
    else
    {
      a2 += 3;
    }
  }
  if ((*(unsigned char *)(a1 + 40) & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v91 = *(void *)(a1 + 184);
    *(_WORD *)a2 = 746;
    unsigned int v92 = *(_DWORD *)(v91 + 44);
    a2[2] = v92;
    if (v92 > 0x7F) {
      int v93 = sub_188A9CC(v92, a2 + 2);
    }
    else {
      int v93 = a2 + 3;
    }
    a2 = sub_15B43E4(v91, v93, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 10001, 10101, a2, a3);
  }
  uint64_t v94 = *(void *)(a1 + 8);
  if ((v94 & 1) == 0) {
    return a2;
  }
  unint64_t v96 = v94 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v96 + 31) < 0)
  {
    int v97 = *(void **)(v96 + 8);
    uint64_t v98 = *(void *)(v96 + 16);
  }
  else
  {
    int v97 = (void *)(v96 + 8);
    LODWORD(v98) = *(unsigned __int8 *)(v96 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v98)
  {
    uint64_t v99 = (int)v98;
    memcpy(a2, v97, (int)v98);
    a2 += v99;
    return a2;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v97, v98, a2);
}

uint64_t sub_163DAC0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 64);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 72);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1358CA0(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 88);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 96);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_163B230(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 112);
  uint64_t v18 = v11 + 2 * v17;
  uint64_t v19 = *(void *)(a1 + 120);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_1397238(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  int v24 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v24) {
    goto LABEL_29;
  }
  if (v24)
  {
    unint64_t v36 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v37 = *(unsigned __int8 *)(v36 + 23);
    uint64_t v38 = *(void *)(v36 + 8);
    if ((v37 & 0x80u) == 0) {
      uint64_t v38 = v37;
    }
    v18 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v24 & 2) == 0)
    {
LABEL_22:
      if ((v24 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_114;
    }
  }
  else if ((v24 & 2) == 0)
  {
    goto LABEL_22;
  }
  unint64_t v39 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v40 = *(unsigned __int8 *)(v39 + 23);
  uint64_t v41 = *(void *)(v39 + 8);
  if ((v40 & 0x80u) == 0) {
    uint64_t v41 = v40;
  }
  v18 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v24 & 4) == 0)
  {
LABEL_23:
    if ((v24 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_115;
  }
LABEL_114:
  uint64_t v42 = sub_15B4924(*(void *)(a1 + 144));
  v18 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 8) == 0)
  {
LABEL_24:
    if ((v24 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_116;
  }
LABEL_115:
  uint64_t v43 = sub_13605F0(*(void *)(a1 + 152));
  v18 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x10) == 0)
  {
LABEL_25:
    if ((v24 & 0x20) == 0) {
      goto LABEL_26;
    }
LABEL_117:
    uint64_t v45 = sub_15B0D90(*(void *)(a1 + 168));
    v18 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v24 & 0x40) == 0)
    {
LABEL_27:
      if ((v24 & 0x80) == 0) {
        goto LABEL_29;
      }
      goto LABEL_28;
    }
    goto LABEL_118;
  }
LABEL_116:
  unint64_t v44 = sub_15BA324(*(void *)(a1 + 160));
  v18 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x20) != 0) {
    goto LABEL_117;
  }
LABEL_26:
  if ((v24 & 0x40) == 0) {
    goto LABEL_27;
  }
LABEL_118:
  uint64_t v46 = sub_15B4924(*(void *)(a1 + 176));
  v18 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v24 & 0x80) != 0)
  {
LABEL_28:
    uint64_t v25 = sub_15B4924(*(void *)(a1 + 184));
    v18 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_29:
  if ((v24 & 0xFF00) != 0)
  {
    uint64_t v26 = v18 + 9;
    if ((v24 & 0x100) == 0) {
      uint64_t v26 = v18;
    }
    if ((v24 & 0x200) != 0) {
      v26 += ((9 * (__clz(*(_DWORD *)(a1 + 200) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v24 & 0x400) != 0) {
      v26 += 2;
    }
    if ((v24 & 0x800) != 0) {
      v26 += 2;
    }
    if ((v24 & 0x1000) != 0) {
      v26 += 2;
    }
    if ((v24 & 0x2000) != 0) {
      v26 += 2;
    }
    if ((v24 & 0x4000) != 0) {
      v26 += 2;
    }
    if ((v24 & 0x8000) != 0) {
      uint64_t v18 = v26 + 2;
    }
    else {
      uint64_t v18 = v26;
    }
  }
  if ((v24 & 0xFF0000) != 0)
  {
    uint64_t v27 = v18 + 2;
    if ((v24 & 0x10000) == 0) {
      uint64_t v27 = v18;
    }
    if ((v24 & 0x20000) != 0) {
      v27 += 2;
    }
    if ((v24 & 0x40000) != 0) {
      v27 += ((9 * (__clz(*(_DWORD *)(a1 + 212) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v24 & 0x80000) != 0) {
      v27 += 3;
    }
    if ((v24 & 0x100000) != 0) {
      v27 += 3;
    }
    if ((v24 & 0x200000) != 0) {
      v27 += 3;
    }
    if ((v24 & 0x400000) != 0) {
      uint64_t v18 = v27 + 3;
    }
    else {
      uint64_t v18 = v27;
    }
    if ((v24 & 0x800000) != 0) {
      v18 += ((9 * (__clz(*(_DWORD *)(a1 + 220) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  if (HIBYTE(v24))
  {
    if ((v24 & 0x1000000) != 0)
    {
      v18 += ((9 * (__clz(*(_DWORD *)(a1 + 224) | 1) ^ 0x1F) + 73) >> 6) + 2;
      if ((v24 & 0x2000000) == 0)
      {
LABEL_68:
        if ((v24 & 0x4000000) == 0) {
          goto LABEL_69;
        }
        goto LABEL_122;
      }
    }
    else if ((v24 & 0x2000000) == 0)
    {
      goto LABEL_68;
    }
    v18 += ((9 * (__clz(*(_DWORD *)(a1 + 228) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v24 & 0x4000000) == 0)
    {
LABEL_69:
      if ((v24 & 0x8000000) == 0)
      {
LABEL_74:
        uint64_t v31 = v18 + 3;
        if ((v24 & 0x10000000) == 0) {
          uint64_t v31 = v18;
        }
        if ((v24 & 0x20000000) != 0) {
          v31 += 3;
        }
        if ((v24 & 0x40000000) != 0) {
          v31 += 3;
        }
        if (v24 >= 0) {
          uint64_t v18 = v31;
        }
        else {
          uint64_t v18 = v31 + 3;
        }
        goto LABEL_83;
      }
LABEL_70:
      int v28 = *(_DWORD *)(a1 + 236);
      uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v28 >= 0) {
        uint64_t v30 = v29;
      }
      else {
        uint64_t v30 = 12;
      }
      v18 += v30;
      goto LABEL_74;
    }
LABEL_122:
    int v47 = *(_DWORD *)(a1 + 232);
    uint64_t v48 = ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v47 >= 0) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 12;
    }
    v18 += v49;
    if ((v24 & 0x8000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_70;
  }
LABEL_83:
  int v32 = *(_DWORD *)(a1 + 44);
  if ((_BYTE)v32)
  {
    uint64_t v33 = v18 + 3;
    if ((v32 & 1) == 0) {
      uint64_t v33 = v18;
    }
    if ((v32 & 2) != 0) {
      v33 += 3;
    }
    if ((v32 & 4) != 0) {
      v33 += 3;
    }
    if ((v32 & 8) != 0) {
      v33 += 3;
    }
    if ((v32 & 0x10) != 0) {
      v33 += 3;
    }
    if ((v32 & 0x20) != 0) {
      v33 += 3;
    }
    if ((v32 & 0x40) != 0) {
      uint64_t v18 = v33 + 3;
    }
    else {
      uint64_t v18 = v33;
    }
    if ((v32 & 0x80) != 0) {
      v18 += ((9 * (__clz(*(_DWORD *)(a1 + 252) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  if ((v32 & 0x300) != 0)
  {
    if ((v32 & 0x100) != 0) {
      v18 += 10;
    }
    if ((v32 & 0x200) != 0) {
      v18 += ((9 * (__clz(*(_DWORD *)(a1 + 264) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v34 = *(void *)(a1 + 8);
  if (v34)
  {
    unint64_t v50 = v34 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v50 + 31) < 0) {
      uint64_t v51 = *(void *)(v50 + 16);
    }
    else {
      uint64_t v51 = *(unsigned __int8 *)(v50 + 31);
    }
    v18 += v51;
  }
  *(_DWORD *)(a1 + 48) = v18;
  return v18;
}

void *sub_163E0D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "logMsgEvent.LogMsgEventDirections");
}

char *sub_163E0E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_182DE04(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_163E170(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CB7C0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_163E1EC(uint64_t a1)
{
  if (!a1)
  {
    sub_1645A84();
  }

  return sub_163B2D4(v3, a1, 0);
}

void *sub_163E248(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_163E2BC(void *a1)
{
  sub_163E248(a1);

  operator delete();
}

uint64_t sub_163E2F4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_163E30C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(unsigned char *)(a1 + 25) = v16 != 0;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(unsigned char *)(a1 + 25) = v22 != 0;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(unsigned char *)(a1 + 24) = v19 != 0;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(unsigned char *)(a1 + 24) = v24 != 0;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_163E51C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v8 = *(unsigned char *)(a1 + 25);
    unsigned char *v4 = 16;
    v4[1] = v8;
    v4 += 2;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_163E638(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_163E690()
{
  return 1;
}

void *sub_163E698@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.MapMatchDebugRequest");
}

uint64_t sub_163E6A8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_163E72C((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_163E72C(uint64_t (***result)()))()
{
  if (result != &off_25420E8)
  {
    int v1 = result;
    uint64_t v2 = (uint64_t)result[3];
    if (v2)
    {
      sub_163FB74(v2);
      operator delete();
    }
    uint64_t v3 = v1[4];
    if (v3)
    {
      sub_16400B8(v3);
      operator delete();
    }
    uint64_t v4 = v1[5];
    if (v4)
    {
      sub_1640514(v4);
      operator delete();
    }
    uint64_t v5 = (uint64_t)v1[6];
    if (v5)
    {
      sub_1640F14(v5);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[7];
    if (result)
    {
      sub_164138C(result);
      operator delete();
    }
  }
  return result;
}

void sub_163E818(uint64_t a1)
{
  sub_163E6A8(a1);

  operator delete();
}

uint64_t sub_163E850(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t result = sub_163E8F8(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_14:
      uint64_t result = sub_163EA2C(*(void *)(v1 + 40));
      if ((v2 & 8) == 0)
      {
LABEL_6:
        if ((v2 & 0x10) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_163E9B0(*(void *)(v1 + 32));
  if ((v2 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_15:
  uint64_t result = sub_163EAF0(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_163EB6C(*(void *)(v1 + 56));
LABEL_8:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_163E8F8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_163E9B0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B043C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

uint64_t sub_163EA2C(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  uint64_t v2 = *(unsigned int *)(result + 48);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = (uint64_t)sub_15B09D0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 48) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 72);
  if ((int)v5 >= 1)
  {
    char v6 = (uint64_t *)(*(void *)(v1 + 80) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_16417E4(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 72) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 0xF) != 0)
  {
    *(_OWORD *)(v1 + 104) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_163EAF0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_163EB6C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_163EB90(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v25 + 2;
      }
    }
    uint64_t v25 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        unint64_t v11 = *(void **)(a1 + 24);
        if (!v11)
        {
          uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v12 = (void *)*v12;
          }
          unint64_t v11 = sub_1641F3C((uint64_t)v12);
          *(void *)(a1 + 24) = v11;
          uint64_t v7 = v25;
        }
        uint64_t v13 = (char *)sub_163EE74(a3, (uint64_t)v11, (unsigned __int8 *)v7);
        goto LABEL_46;
      case 2u:
        if (v8 != 18) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (!v14)
        {
          uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_1641FC4((uint64_t)v15);
          *(void *)(a1 + 32) = v14;
          uint64_t v7 = v25;
        }
        uint64_t v13 = sub_163EF04(a3, v14, (unsigned __int8 *)v7);
        goto LABEL_46;
      case 3u:
        if (v8 != 26) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (!v16)
        {
          int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v17 = (void *)*v17;
          }
          sub_1642064((uint64_t)v17);
          uint64_t v16 = v18;
          *(void *)(a1 + 40) = v18;
          uint64_t v7 = v25;
        }
        uint64_t v13 = sub_163EF94(a3, v16, (unsigned __int8 *)v7);
        goto LABEL_46;
      case 4u:
        if (v8 != 34) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v19 = *(void **)(a1 + 48);
        if (!v19)
        {
          int v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v20 = (void *)*v20;
          }
          uint64_t v19 = sub_1642120((uint64_t)v20);
          *(void *)(a1 + 48) = v19;
          uint64_t v7 = v25;
        }
        uint64_t v13 = (char *)sub_163F024(a3, (uint64_t)v19, (unsigned __int8 *)v7);
        goto LABEL_46;
      case 5u:
        if (v8 != 42) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v21 = *(void **)(a1 + 56);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_16421A4((uint64_t)v22);
          *(void *)(a1 + 56) = v21;
          uint64_t v7 = v25;
        }
        uint64_t v13 = sub_163F0B4(a3, (uint64_t)v21, (unsigned __int8 *)v7);
        goto LABEL_46;
      default:
LABEL_39:
        if (v8) {
          BOOL v23 = (v8 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v6)
          {
            uint64_t v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v25;
          }
          uint64_t v13 = (char *)sub_1885AC0(v8, v24, v7, a3);
LABEL_46:
          uint64_t v25 = v13;
          if (!v13) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
            return v25;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v25;
    }
  }
}

uint64_t sub_163EE74(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_163FC78(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_163EF04(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1640170(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_163EF94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16405E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_163F024(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1641004(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_163F0B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1641438(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_163F144(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_163FE68(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 40);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_1640310(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_1640A64(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_31;
  }
LABEL_25:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_16411AC(v16, v18, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_31:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 56);
    char *v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      uint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      uint64_t v21 = v4 + 2;
    }
    uint64_t v4 = (char *)sub_16415A8(v19, (unint64_t)v21, a3);
  }
LABEL_37:
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_163F404(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_12;
  }
  if (v2)
  {
    uint64_t v4 = sub_163FF80(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1640454(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = sub_1640DBC(*(void *)(a1 + 40));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v10 = sub_1641298(*(void *)(a1 + 48));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) != 0)
  {
LABEL_11:
    uint64_t v6 = sub_16416C4(*(void *)(a1 + 56));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v11 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_163F578(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) == 0) {
    goto LABEL_48;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(std::string **)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      uint64_t v5 = (std::string *)sub_1641F3C((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)(uint64_t))(a2 + 24);
    }
    else {
      unsigned int v8 = &off_2542128;
    }
    sub_11D2930(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_24;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(void *)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    unint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      unint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = sub_1641FC4((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(void *(****)(void *))(a2 + 32);
  }
  else {
    uint64_t v12 = &off_2542158;
  }
  sub_163F774(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_24:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 40);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    sub_1642064((uint64_t)v15);
    *(void *)(a1 + 40) = v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(void *(****)(void *))(a2 + 40);
  }
  else {
    uint64_t v16 = &off_2542188;
  }
  sub_163F844(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_48;
    }
    goto LABEL_40;
  }
LABEL_32:
  *(_DWORD *)(a1 + 16) |= 8u;
  unsigned int v17 = *(std::string **)(a1 + 48);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    unsigned int v17 = (std::string *)sub_1642120((uint64_t)v19);
    *(void *)(a1 + 48) = v17;
  }
  if (*(void *)(a2 + 48)) {
    unsigned int v20 = *(uint64_t (****)(uint64_t))(a2 + 48);
  }
  else {
    unsigned int v20 = &off_2542200;
  }
  sub_11EC100(v17, (uint64_t)v20);
  if ((v4 & 0x10) != 0)
  {
LABEL_40:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v21 = *(std::string **)(a1 + 56);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      BOOL v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        BOOL v23 = (void *)*v23;
      }
      uint64_t v21 = (std::string *)sub_16421A4((uint64_t)v23);
      *(void *)(a1 + 56) = v21;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v24 = *(void *(****)(void *))(a2 + 56);
    }
    else {
      unint64_t v24 = &off_2542228;
    }
    sub_123BFCC(v21, (uint64_t)v24);
  }
LABEL_48:
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_163F774(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C5340((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    unsigned int v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *unsigned int v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_163F844(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_10E4FFC((uint64_t *)(a1 + 40), v10, v9, v8, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v11 = *(_DWORD *)(a1 + 48) + v8;
    *(_DWORD *)(a1 + 48) = v11;
    uint64_t v12 = *(int **)(a1 + 56);
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 72);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v15 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1645B70((uint64_t *)(a1 + 64), v15, v14, v13, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v16 = *(_DWORD *)(a1 + 72) + v13;
    *(_DWORD *)(a1 + 72) = v16;
    unsigned int v17 = *(int **)(a1 + 80);
    if (*v17 < v16) {
      int *v17 = v16;
    }
  }
  int v18 = *(_DWORD *)(a2 + 16);
  if ((v18 & 0xF) != 0)
  {
    if (v18)
    {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      if ((v18 & 2) == 0)
      {
LABEL_12:
        if ((v18 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_22;
      }
    }
    else if ((v18 & 2) == 0)
    {
      goto LABEL_12;
    }
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    if ((v18 & 4) == 0)
    {
LABEL_13:
      if ((v18 & 8) == 0)
      {
LABEL_15:
        *(_DWORD *)(a1 + 16) |= v18;
        goto LABEL_16;
      }
LABEL_14:
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      goto LABEL_15;
    }
LABEL_22:
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    if ((v18 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_163FA14(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(unsigned int *)(v3 + 24);
    while ((int)v4 >= 1)
    {
      uint64_t v5 = v4 - 1;
      char v6 = sub_15B06D8(*(void *)(*(void *)(v3 + 32) + 8 * v4));
      uint64_t v4 = v5;
      if ((v6 & 1) == 0) {
        return 0;
      }
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(unsigned int *)(v8 + 48);
  do
  {
    BOOL v7 = (int)v9 < 1;
    if ((int)v9 < 1) {
      break;
    }
    uint64_t v10 = v9 - 1;
    char v11 = sub_15B0F18(*(void *)(*(void *)(v8 + 56) + 8 * v9));
    uint64_t v9 = v10;
  }
  while ((v11 & 1) != 0);
  return v7;
}

BOOL sub_163FAB4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15B06D8(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

BOOL sub_163FB0C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15B0F18(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_163FB64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.MapMatchDebugInfo");
}

uint64_t sub_163FB74(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  char v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_163FC40(uint64_t a1)
{
  sub_163FB74(a1);

  operator delete();
}

uint64_t sub_163FC78(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    BOOL v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        BOOL v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        BOOL v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)uint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        unsigned int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unsigned int v17 = (uint64_t *)*v17;
        }
        int v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        unsigned int v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unsigned int v17 = (uint64_t *)*v17;
        }
        int v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      unsigned int v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        unsigned int v17 = (uint64_t *)*v17;
      }
      int v18 = (void *)(a1 + 24);
LABEL_32:
      uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      uint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      BOOL v7 = *(char **)v22;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)uint64_t v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)uint64_t v22 = 0;
  return *(void *)v22;
}

char *sub_163FE68(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_163FF80(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16400A0()
{
  return 1;
}

void *sub_16400A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.MapMatchDebugVersionInfo");
}

void *sub_16400B8(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C5234(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1640138(void *a1)
{
  sub_16400B8(a1);

  operator delete();
}

char *sub_1640170(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          unint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          unint64_t v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          int v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_15C1CB4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            int v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = sub_11B3E48(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unint64_t v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1640310(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_15B43E4(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1640454(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B4924(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void *sub_1640504@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.MapMatchDebugInputInfo");
}

void *sub_1640514(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1645AF0(a1 + 8);
  sub_11DB7D4(a1 + 5);
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16405A8(void *a1)
{
  sub_1640514(a1);

  operator delete();
}

char *sub_16405E0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v38 + 1;
    unsigned int v9 = *v38;
    if (*v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v38 + 2;
      }
    }
    uint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8)
        {
          if (v9 != 10) {
            goto LABEL_56;
          }
          char v35 = sub_188C2DC((unsigned int *)(a1 + 24), (unsigned __int8 *)v8, (uint64_t)a3);
          goto LABEL_63;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          uint64_t v38 = v12 + 1;
          uint64_t v13 = v12[1];
          if (v12[1] < 0)
          {
            int v14 = v13 + (v12[2] << 7);
            uint64_t v13 = (v14 - 128);
            if (v12[2] < 0)
            {
              uint64_t v12 = (char *)sub_188C138((uint64_t)(v12 + 1), (v14 - 128));
              uint64_t v13 = v15;
            }
            else
            {
              v12 += 3;
            }
          }
          else
          {
            v12 += 2;
          }
          uint64_t v38 = v12;
          uint64_t v16 = *(unsigned int *)(a1 + 24);
          if (v16 == *(_DWORD *)(a1 + 28))
          {
            int v17 = v16 + 1;
            sub_188CA54((unsigned int *)(a1 + 24), v16 + 1);
            *(void *)(*(void *)(a1 + 32) + 8 * v16) = v13;
            uint64_t v12 = v38;
          }
          else
          {
            *(void *)(*(void *)(a1 + 32) + 8 * v16) = v13;
            int v17 = v16 + 1;
          }
          *(_DWORD *)(a1 + 24) = v17;
          if (!v12) {
            goto LABEL_68;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 8) {
            goto LABEL_52;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_56;
        }
        int v18 = v8 - 1;
        while (1)
        {
          uint64_t v19 = (unsigned __int8 *)(v18 + 1);
          uint64_t v38 = v18 + 1;
          uint64_t v20 = *(_DWORD **)(a1 + 56);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 48), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 48) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_15C1918(*(void *)(a1 + 40));
            uint64_t v22 = sub_188CDC8(a1 + 40, v23);
            uint64_t v19 = (unsigned __int8 *)v38;
          }
          int v18 = sub_1198F14(a3, v22, v19);
          uint64_t v38 = v18;
          if (!v18) {
            goto LABEL_68;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
            goto LABEL_52;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_56;
        }
        unint64_t v24 = v8 - 1;
        while (1)
        {
          uint64_t v25 = (unsigned __int8 *)(v24 + 1);
          uint64_t v38 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 80);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 72), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 72) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            sub_1642220(*(void *)(a1 + 64));
            uint64_t v28 = sub_188CDC8(a1 + 64, v29);
            uint64_t v25 = (unsigned __int8 *)v38;
          }
          unint64_t v24 = sub_16409D4(a3, v28, v25);
          uint64_t v38 = v24;
          if (!v24) {
            goto LABEL_68;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 26) {
            goto LABEL_52;
          }
        }
      case 4u:
        if (v9 != 33) {
          goto LABEL_56;
        }
        uint64_t v31 = *(void *)v8;
        uint64_t v30 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 88) = v31;
        goto LABEL_51;
      case 5u:
        if (v9 != 41) {
          goto LABEL_56;
        }
        uint64_t v32 = *(void *)v8;
        uint64_t v30 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 96) = v32;
        goto LABEL_51;
      case 6u:
        if (v9 != 49) {
          goto LABEL_56;
        }
        uint64_t v33 = *(void *)v8;
        uint64_t v30 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 104) = v33;
        goto LABEL_51;
      case 7u:
        if (v9 != 57) {
          goto LABEL_56;
        }
        uint64_t v34 = *(void *)v8;
        uint64_t v30 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 112) = v34;
LABEL_51:
        uint64_t v38 = v30;
        goto LABEL_52;
      default:
LABEL_56:
        if (v9) {
          BOOL v36 = (v9 & 7) == 4;
        }
        else {
          BOOL v36 = 1;
        }
        if (!v36)
        {
          if (*v7)
          {
            uint64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v38;
          }
          char v35 = sub_1885AC0(v9, v37, v8, a3);
LABEL_63:
          uint64_t v38 = (char *)v35;
          if (!v35) {
            goto LABEL_68;
          }
LABEL_52:
          if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_68:
        }
          uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v38;
    }
  }
}

char *sub_16409D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1641810(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1640A64(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_15B0C0C(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 72);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      *__dst = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        uint64_t v20 = __dst + 2;
      }
      __dst = sub_1641A8C(v18, (unint64_t)v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 16);
  if (v21)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v22 = *(void *)(a1 + 88);
    *__dst = 33;
    *(void *)(__dst + 1) = v22;
    __dst += 9;
    if ((v21 & 2) == 0)
    {
LABEL_28:
      if ((v21 & 4) == 0) {
        goto LABEL_29;
      }
      goto LABEL_37;
    }
  }
  else if ((v21 & 2) == 0)
  {
    goto LABEL_28;
  }
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v23 = *(void *)(a1 + 96);
  *__dst = 41;
  *(void *)(__dst + 1) = v23;
  __dst += 9;
  if ((v21 & 4) == 0)
  {
LABEL_29:
    if ((v21 & 8) == 0) {
      goto LABEL_43;
    }
    goto LABEL_40;
  }
LABEL_37:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v24 = *(void *)(a1 + 104);
  *__dst = 49;
  *(void *)(__dst + 1) = v24;
  __dst += 9;
  if ((v21 & 8) != 0)
  {
LABEL_40:
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v25 = *(void *)(a1 + 112);
    *__dst = 57;
    *(void *)(__dst + 1) = v25;
    __dst += 9;
  }
LABEL_43:
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return __dst;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    uint64_t v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    uint64_t v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(__dst, v29, (int)v30);
    __dst += v31;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v29, v30, __dst);
}

uint64_t sub_1640DBC(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + *(unsigned int *)(a1 + 24) + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    uint64_t v6 = (uint64_t *)(v5 + 8);
  }
  else {
    uint64_t v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15B0D90(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 72);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 80);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      unint64_t v16 = sub_1641CE4(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 16);
  if ((v17 & 0xF) != 0)
  {
    uint64_t v18 = v11 + 9;
    if ((v17 & 1) == 0) {
      uint64_t v18 = v11;
    }
    if ((v17 & 2) != 0) {
      v18 += 9;
    }
    if ((v17 & 4) != 0) {
      v18 += 9;
    }
    if ((v17 & 8) != 0) {
      uint64_t v11 = v18 + 9;
    }
    else {
      uint64_t v11 = v18;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v11 += v22;
  }
  *(_DWORD *)(a1 + 20) = v11;
  return v11;
}

void *sub_1640F04@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.MapMatchDebugResult");
}

uint64_t sub_1640F14(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1640FCC(uint64_t a1)
{
  sub_1640F14(a1);

  operator delete();
}

uint64_t sub_1641004(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v16 = (uint64_t *)*v16;
      }
      int v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_16411AC(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1641298(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1641374()
{
  return 1;
}

void *sub_164137C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.MapMatchDebugZilchOutput");
}

void *sub_164138C(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1641400(void *a1)
{
  sub_164138C(a1);

  operator delete();
}

char *sub_1641438(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    goto LABEL_29;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 17)
      {
        uint64_t v15 = *(void *)v7;
        uint64_t v14 = v7 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v15;
LABEL_23:
        uint64_t v18 = v14;
        goto LABEL_24;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 9)
    {
      uint64_t v16 = *(void *)v7;
      uint64_t v14 = v7 + 8;
      v5 |= 1u;
      *(void *)(a1 + 24) = v16;
      goto LABEL_23;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v18;
    }
    uint64_t v18 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v18) {
      goto LABEL_30;
    }
LABEL_24:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v18 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 16) |= v5;
  return v18;
}

_OWORD *sub_16415A8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 32);
    *(unsigned char *)uint64_t v4 = 17;
    *(void *)((char *)v4 + 1) = v8;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    return (_OWORD *)((char *)v4 + v14);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_16416C4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1641720()
{
  return 1;
}

void *sub_1641728@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.MapMatchDebugStatistics");
}

void *sub_1641738(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16417AC(void *a1)
{
  sub_1641738(a1);

  operator delete();
}

uint64_t sub_16417E4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x1F) != 0)
  {
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1641810(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v28 + 1;
    unsigned int v9 = *v28;
    if (*v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v28 + 2;
      }
    }
    unint64_t v28 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_26;
        }
        v5 |= 1u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          unint64_t v28 = v12;
          *(void *)(a1 + 24) = v13;
          goto LABEL_33;
        }
        uint64_t v24 = (char *)sub_188C138((uint64_t)v8, v13);
        unint64_t v28 = v24;
        *(void *)(a1 + 24) = v25;
        if (v24) {
          goto LABEL_33;
        }
        goto LABEL_42;
      case 2u:
        if (v9 != 17) {
          goto LABEL_26;
        }
        uint64_t v16 = *(void *)v8;
        uint64_t v15 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v16;
        goto LABEL_25;
      case 3u:
        if (v9 != 29) {
          goto LABEL_26;
        }
        int v17 = *(_DWORD *)v8;
        uint64_t v15 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 48) = v17;
        goto LABEL_25;
      case 4u:
        if (v9 != 32) {
          goto LABEL_26;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v26 = (char *)sub_188C138((uint64_t)v8, v19);
          unint64_t v28 = v26;
          *(void *)(a1 + 40) = v27;
          if (!v26) {
            goto LABEL_42;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_22:
          unint64_t v28 = v18;
          *(void *)(a1 + 40) = v19;
        }
        goto LABEL_33;
      case 5u:
        if (v9 != 45) {
          goto LABEL_26;
        }
        int v21 = *(_DWORD *)v8;
        uint64_t v15 = v8 + 4;
        v5 |= 0x10u;
        *(_DWORD *)(a1 + 52) = v21;
LABEL_25:
        unint64_t v28 = v15;
        goto LABEL_33;
      default:
LABEL_26:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v28;
          }
          unint64_t v28 = (char *)sub_1885AC0(v9, v23, v8, a3);
          if (!v28) {
            goto LABEL_42;
          }
LABEL_33:
          if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_42:
        }
          unint64_t v28 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v28;
    }
  }
}

unsigned char *sub_1641A8C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
    if ((v6 & 8) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_24;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v11 = *(_DWORD *)(a1 + 48);
  unsigned char *v4 = 29;
  *(_DWORD *)(v4 + 1) = v11;
  v4 += 5;
  if ((v6 & 4) != 0)
  {
LABEL_18:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v12 = *(void *)(a1 + 40);
    unsigned char *v4 = 32;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_24:
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v15 = *(_DWORD *)(a1 + 52);
    unsigned char *v4 = 45;
    *(_DWORD *)(v4 + 1) = v15;
    v4 += 5;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

unint64_t sub_1641CE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) != 0)
  {
    if (v1) {
      unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    else {
      unint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v1 & 8) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x10) != 0) {
      unint64_t v3 = v2 + 5;
    }
    else {
      unint64_t v3 = v2;
    }
  }
  else
  {
    unint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1641DA4(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    LODWORD(result[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_13:
  result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
  if ((v2 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    HIDWORD(result[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
LABEL_8:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_9:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1641E28()
{
  return 1;
}

void *sub_1641E30@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.MapMatchDebugArrivalTimeAlongPath");
}

uint64_t sub_1641E40(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24CB8C0;
  *(void *)(result + 16) = 0;
  *(_WORD *)(result + 24) = 0;
  return result;
}

double sub_1641EBC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24CB940;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

void *sub_1641F3C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24CB9C0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

uint64_t sub_1641FC4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24CBA40;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_1642064(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24CBAC0;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  return result;
}

void *sub_1642120(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24CBB40;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_16421A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24CBBC0;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_1642220(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24CBC40;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

uint64_t *sub_16422A0(int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_261E578, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_261E578))
  {
    byte_261E570 = sub_1889E98((uint64_t)&qword_261E4E0, dword_215F854, 6, qword_261E580);
    __cxa_guard_release(&qword_261E578);
  }
  int v2 = sub_1889E18((uint64_t)&qword_261E4E0, dword_215F854, 6uLL, a1);
  if (v2 != -1) {
    return &qword_261E580[3 * v2];
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)byte_2550268, memory_order_acquire) & 1) == 0) {
    sub_1889F30();
  }
  return &qword_2550250;
}

void sub_1642370(_Unwind_Exception *a1)
{
}

uint64_t sub_1642388(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)double result = off_24CBCC0;
  *(void *)(result + 8) = v3;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_16423C0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1642434(void *a1)
{
  sub_16423C0(a1);

  operator delete();
}

uint64_t sub_164246C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1642494(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v32 + 2;
      }
    }
    uint64_t v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v20 = v8 + 1;
      uint64_t v21 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_33;
      }
      int v22 = *v20;
      uint64_t v21 = v21 + (v22 << 7) - 128;
      if ((v22 & 0x80000000) == 0)
      {
        uint64_t v20 = v8 + 2;
LABEL_33:
        uint64_t v32 = v20;
        *(void *)(a1 + 32) = v21;
        goto LABEL_38;
      }
      uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v21);
      uint64_t v32 = v27;
      *(void *)(a1 + 32) = v28;
      if (!v27) {
        goto LABEL_53;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 1u;
      uint64_t v23 = v8 + 1;
      uint64_t v24 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v25 = *v23;
      uint64_t v24 = v24 + (v25 << 7) - 128;
      if ((v25 & 0x80000000) == 0)
      {
        uint64_t v23 = v8 + 2;
LABEL_37:
        uint64_t v32 = v23;
        *(void *)(a1 + 24) = v24;
        goto LABEL_38;
      }
      uint64_t v29 = (char *)sub_188C138((uint64_t)v8, v24);
      uint64_t v32 = v29;
      *(void *)(a1 + 24) = v30;
      if (!v29) {
        goto LABEL_53;
      }
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 24)
  {
    uint64_t v16 = v8 + 1;
    unint64_t v17 = *v8;
    if (*v8 < 0)
    {
      int v18 = *v16;
      int v19 = v17 + (v18 << 7);
      unint64_t v17 = (v19 - 128);
      if (v18 < 0)
      {
        uint64_t v32 = (char *)sub_188C138((uint64_t)v8, (v19 - 128));
        if (!v32) {
          goto LABEL_53;
        }
        unint64_t v17 = v26;
        goto LABEL_27;
      }
      uint64_t v16 = v8 + 2;
    }
    uint64_t v32 = v16;
LABEL_27:
    if (v17 > 6)
    {
      if (*v7) {
        uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(3, v17, v31);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v17;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v32;
    }
    uint64_t v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_53;
    }
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_53:
  uint64_t v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

unsigned char *sub_164272C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

unint64_t sub_164294C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_13;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3 < 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v4;
  }
LABEL_13:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1642A20(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
LABEL_6:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_7:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1642A84(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    uint64_t v4 = result;
    sub_164246C((uint64_t)result);
    return sub_1642A20(v4, a2);
  }
  return result;
}

uint64_t sub_1642AD0()
{
  return 1;
}

void *sub_1642AD8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.OfflineServiceMetrics");
}

void *sub_1642AE8(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *uint64_t result = off_24CBD40;
  result[1] = v3;
  result[2] = 0;
  result[3] = a2;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = &qword_2550250;
  result[9] = &qword_2550250;
  return result;
}

uint64_t sub_1642B30(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24CBD40;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1645C7C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    unint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v12 & 2) != 0)
  {
    unint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  if ((v12 & 4) != 0)
  {
    unint64_t v15 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v15);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  if ((v12 & 8) != 0)
  {
    uint64_t v16 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v16);
  }
  return a1;
}

void sub_1642CE4(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1642D28(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  sub_1645BFC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1642E14(uint64_t a1)
{
  sub_1642D28(a1);

  operator delete();
}

uint64_t sub_1642E4C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_164246C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_15:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_19;
        }
      }
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_26;
      }
LABEL_23:
      unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v9 = 0;
        *(unsigned char *)(v9 + 23) = 0;
      }
      goto LABEL_26;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_19:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 8) == 0) {
        goto LABEL_26;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 8) == 0) {
        goto LABEL_26;
      }
    }
    goto LABEL_23;
  }
LABEL_26:
  char v11 = *(unsigned char *)(v1 + 8);
  uint64_t v10 = v1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_1642FA4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 48);
        goto LABEL_25;
      case 2u:
        if (v8 != 18) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 56);
        goto LABEL_25;
      case 3u:
        if (v8 != 26) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 64);
        goto LABEL_25;
      case 4u:
        if (v8 != 34) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        int v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          int v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 72);
LABEL_25:
        unint64_t v17 = (std::string *)sub_1880F84(v13, v12);
        unint64_t v18 = (void *)sub_188C244(v17, *(char **)v27, (uint64_t)a3);
        goto LABEL_26;
      case 5u:
        if (v8 != 42) {
          goto LABEL_39;
        }
        int v19 = v7 - 1;
        while (1)
        {
          uint64_t v20 = (unsigned __int8 *)(v19 + 1);
          *(void *)uint64_t v27 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            uint64_t v24 = sub_1645074(*(void *)(a1 + 24));
            uint64_t v23 = sub_188CDC8(a1 + 24, v24);
            uint64_t v20 = *(unsigned __int8 **)v27;
          }
          int v19 = sub_1643290(a3, v23, v20);
          *(void *)uint64_t v27 = v19;
          if (!v19) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 42) {
            goto LABEL_27;
          }
        }
      default:
LABEL_39:
        if (v8) {
          BOOL v25 = (v8 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v6)
          {
            unint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(char **)v27;
          }
          unint64_t v18 = sub_1885AC0(v8, v26, v7, a3);
LABEL_26:
          *(void *)uint64_t v27 = v18;
          if (!v18) {
            return 0;
          }
LABEL_27:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            return *(void *)v27;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v27;
    }
  }
}

char *sub_1643290(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1642494(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1643320(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_18:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 42;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        uint64_t v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        uint64_t v11 = v4 + 2;
      }
      uint64_t v4 = sub_164272C(v9, (unint64_t)v11, a3);
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_16434F8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      unint64_t v7 = sub_164294C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_17;
  }
  if (v8)
  {
    unint64_t v14 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_25;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v17 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
LABEL_25:
  unint64_t v20 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  uint64_t v22 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v21;
  }
  v2 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) != 0)
  {
LABEL_14:
    unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v23 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v2 += v24;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_16436D4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1645C7C((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) == 0) {
    goto LABEL_22;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_7;
    }
LABEL_13:
    unint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v13, v15);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_22;
      }
      goto LABEL_19;
    }
    goto LABEL_16;
  }
  uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
  std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
  uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
  if (v11) {
    uint64_t v12 = (uint64_t *)*v12;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
  if ((v9 & 2) != 0) {
    goto LABEL_13;
  }
LABEL_7:
  if ((v9 & 4) == 0) {
    goto LABEL_8;
  }
LABEL_16:
  uint64_t v16 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
  uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
  if (v17) {
    uint64_t v18 = (uint64_t *)*v18;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v16, v18);
  if ((v9 & 8) != 0)
  {
LABEL_19:
    uint64_t v19 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v19, v21);
  }
LABEL_22:
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1643890(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_1642E4C((uint64_t)result);
    return sub_16436D4(v4, a2);
  }
  return result;
}

uint64_t sub_16438DC()
{
  return 1;
}

void *sub_16438E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.OfflinePerformanceMetrics");
}

void *sub_16438F4(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *uint64_t result = off_24CBDC0;
  result[1] = v3;
  result[2] = 0;
  result[3] = a2;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  *(void *)((char *)result + 62) = 0;
  return result;
}

uint64_t sub_164393C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24CBDC0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    int v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C3F54(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  uint64_t v13 = *(void *)(a2 + 56);
  *(void *)(a1 + 62) = *(void *)(a2 + 62);
  *(void *)(a1 + 56) = v13;
  return a1;
}

void sub_1643A70(_Unwind_Exception *a1)
{
  sub_12C3ED4(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1643AB8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_12C3ED4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1643B64(uint64_t a1)
{
  sub_1643AB8(a1);

  operator delete();
}

unsigned char *sub_1643B9C(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*((void *)result + 5) + 8);
    do
    {
      int v4 = *v3++;
      uint64_t result = sub_15B16B4(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  int v5 = *((_DWORD *)v1 + 4);
  if (v5)
  {
    unint64_t v6 = *((void *)v1 + 6) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  if ((v5 & 0x1E) != 0)
  {
    *(void *)(v1 + 62) = 0;
    *((void *)v1 + 7) = 0;
  }
  char v8 = v1[8];
  uint64_t v7 = v1 + 8;
  *((_DWORD *)v7 + 2) = 0;
  if (v8)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1643C5C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v45 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v45, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (char *)(*(void *)v45 + 1);
    unsigned int v9 = **(unsigned char **)v45;
    if ((char)**(unsigned char **)v45 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v45, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v45 + 2);
      }
    }
    *(void *)uint64_t v45 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_45;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)uint64_t v45 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v45) {
            goto LABEL_70;
          }
          unint64_t v13 = v37;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v45 = v12;
        }
        if (v13 > 5)
        {
          if (*v7) {
            unint64_t v44 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v44 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v44);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 64) = v13;
        }
        goto LABEL_53;
      case 2u:
        if (v9 != 16) {
          goto LABEL_45;
        }
        v5 |= 2u;
        uint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v8, v17);
          *(void *)uint64_t v45 = v38;
          *(void *)(a1 + 56) = v39;
          if (!v38) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_20:
          *(void *)uint64_t v45 = v16;
          *(void *)(a1 + 56) = v17;
        }
        goto LABEL_53;
      case 3u:
        if (v9 != 24) {
          goto LABEL_45;
        }
        v5 |= 8u;
        uint64_t v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v40 = sub_188C138((uint64_t)v8, v20);
          *(void *)uint64_t v45 = v40;
          *(unsigned char *)(a1 + 68) = v41 != 0;
          if (!v40) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_25:
          *(void *)uint64_t v45 = v19;
          *(unsigned char *)(a1 + 68) = v20 != 0;
        }
        goto LABEL_53;
      case 4u:
        if (v9 != 34) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 8);
        unint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          unint64_t v23 = (uint64_t *)*v23;
        }
        uint64_t v24 = (std::string *)sub_1880F84((void *)(a1 + 48), v23);
        BOOL v25 = (void *)sub_188C244(v24, *(char **)v45, (uint64_t)a3);
        goto LABEL_52;
      case 5u:
        if (v9 != 40) {
          goto LABEL_45;
        }
        v5 |= 0x10u;
        unint64_t v26 = v8 + 1;
        uint64_t v27 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v42 = sub_188C138((uint64_t)v8, v27);
          *(void *)uint64_t v45 = v42;
          *(unsigned char *)(a1 + 69) = v43 != 0;
          if (!v42) {
            goto LABEL_70;
          }
        }
        else
        {
          unint64_t v26 = v8 + 2;
LABEL_34:
          *(void *)uint64_t v45 = v26;
          *(unsigned char *)(a1 + 69) = v27 != 0;
        }
        goto LABEL_53;
      case 6u:
        if (v9 != 50) {
          goto LABEL_45;
        }
        uint64_t v29 = v8 - 1;
        while (1)
        {
          uint64_t v30 = (unsigned __int8 *)(v29 + 1);
          *(void *)uint64_t v45 = v29 + 1;
          uint64_t v31 = *(_DWORD **)(a1 + 40);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 32), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 32) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_15C19EC(*(void *)(a1 + 24));
            uint64_t v33 = sub_188CDC8(a1 + 24, v34);
            uint64_t v30 = *(unsigned __int8 **)v45;
          }
          uint64_t v29 = sub_11E1C60(a3, v33, v30);
          *(void *)uint64_t v45 = v29;
          if (!v29) {
            goto LABEL_70;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 50) {
            goto LABEL_53;
          }
        }
      default:
LABEL_45:
        if (v9) {
          BOOL v35 = (v9 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v7)
          {
            BOOL v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(char **)v45;
          }
          BOOL v25 = sub_1885AC0(v9, v36, v8, a3);
LABEL_52:
          *(void *)uint64_t v45 = v25;
          if (!v25) {
            goto LABEL_70;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, (char **)v45, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_70:
        }
          *(void *)uint64_t v45 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v45;
    }
  }
}

unsigned char *sub_1644080(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 56);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 68);
    unsigned char *v4 = 24;
    v4[1] = v13;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_17:
      if ((v6 & 0x10) == 0) {
        goto LABEL_26;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_17;
  }
  int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_26;
  }
LABEL_23:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v14 = *(unsigned char *)(a1 + 69);
  unsigned char *v4 = 40;
  v4[1] = v14;
  v4 += 2;
LABEL_26:
  int v15 = *(_DWORD *)(a1 + 32);
  if (v15)
  {
    for (int i = 0; i != v15; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 50;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      int v4 = sub_15B1A68(v17, (unint64_t)v19, a3);
    }
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    unint64_t v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    unint64_t v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_164435C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B1D1C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x1F) == 0) {
    goto LABEL_27;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_22;
      }
LABEL_18:
      int v12 = *(_DWORD *)(a1 + 64);
      if (v12 < 0) {
        uint64_t v13 = 11;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v13;
      goto LABEL_22;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v8 & 4) != 0) {
    goto LABEL_18;
  }
LABEL_22:
  uint64_t v14 = v2 + 2;
  if ((v8 & 8) == 0) {
    uint64_t v14 = v2;
  }
  if ((v8 & 0x10) != 0) {
    uint64_t v2 = v14 + 2;
  }
  else {
    uint64_t v2 = v14;
  }
LABEL_27:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_16444D8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C3F54((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x1F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_20;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
LABEL_20:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_12;
      }
LABEL_10:
      *(unsigned char *)(a1 + 69) = *(unsigned char *)(a2 + 69);
      goto LABEL_11;
    }
LABEL_21:
    *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
    if ((v9 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1644638(unsigned char *a1, uint64_t a2)
{
  if ((unsigned char *)a2 != a1)
  {
    sub_1643B9C(a1);
    sub_16444D8((uint64_t)a1, a2);
  }
}

BOOL sub_1644684(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    BOOL v5 = sub_15B1FC0(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while (v5);
  return v3 < 1;
}

__n128 sub_16446DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)(a2 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v6 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a2 + 56) = v8;
  LODWORD(v8) = *(_DWORD *)(a1 + 64);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a2 + 64) = v8;
  LOWORD(v8) = *(_WORD *)(a1 + 68);
  *(_WORD *)(a1 + 68) = *(_WORD *)(a2 + 68);
  *(_WORD *)(a2 + 68) = v8;
  return result;
}

void *sub_1644760@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.OfflineRequestMetadata");
}

void *sub_1644770(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *__n128 result = off_24CBE40;
  result[1] = v3;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_16447AC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24CBE40;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_1644890()
{
}

uint64_t sub_16448E4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25422A0)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1642D28(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16449B0(uint64_t a1)
{
  sub_16448E4(a1);

  operator delete();
}

uint64_t sub_16449E8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      __n128 result = sub_1642E4C(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1644A7C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_16450F4((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_1644C3C(a3, (uint64_t)v15, v7);
LABEL_29:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v14 = (uint64_t)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = (uint64_t)sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

uint64_t sub_1644C3C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1642FA4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1644CCC(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1643320(v7, v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1644DFC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_16434F8(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1644EE0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unsigned int v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unsigned int v9 = (std::string *)sub_16450F4((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_2542250;
      }
      uint64_t result = sub_16436D4(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1644FCC(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_16449E8((uint64_t)result);
    return sub_1644EE0(v4, a2);
  }
  return result;
}

uint64_t sub_1645018()
{
  return 1;
}

uint64_t sub_1645020(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *(void *)(result + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(result + 16);
  *(_DWORD *)(result + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = *(void *)(result + 24);
  *(void *)(result + 24) = v3;
  uint64_t v4 = *(void *)(result + 32);
  *(void *)(result + 32) = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = v4;
  return result;
}

void *sub_1645064@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.OfflineResponseMetadata");
}

uint64_t sub_1645074(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24CBCC0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_16450F4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24CBD40;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = &qword_2550250;
  result[9] = &qword_2550250;
  return result;
}

void *sub_164519C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24CBDC0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  *(void *)((char *)result + 62) = 0;
  return result;
}

void *sub_1645244(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24CBE40;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void sub_16452C8()
{
}

uint64_t sub_1645318(uint64_t a1, uint64_t a2)
{
  return sub_163E170(a2);
}

uint64_t sub_1645320(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1645328()
{
}

void sub_1645370()
{
}

uint64_t sub_1645394(uint64_t a1, uint64_t a2)
{
  return sub_163E1EC(a2);
}

uint64_t sub_164539C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_16453A4()
{
}

uint64_t sub_16453F4(uint64_t a1, uint64_t a2)
{
  return sub_1641E40(a2);
}

uint64_t sub_16453FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1645404()
{
}

double sub_1645458(uint64_t a1, uint64_t a2)
{
  return sub_1641EBC(a2);
}

uint64_t sub_1645460(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1645468()
{
}

void *sub_16454C4(uint64_t a1, uint64_t a2)
{
  return sub_1641F3C(a2);
}

uint64_t sub_16454CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16454D4()
{
}

uint64_t sub_1645528(uint64_t a1, uint64_t a2)
{
  return sub_1641FC4(a2);
}

uint64_t sub_1645530(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1645538()
{
}

double sub_1645594(uint64_t a1, uint64_t a2)
{
  return sub_1642064(a2);
}

uint64_t sub_164559C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16455A4()
{
}

void *sub_16455FC(uint64_t a1, uint64_t a2)
{
  return sub_1642120(a2);
}

uint64_t sub_1645604(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_164560C()
{
}

void *sub_164565C(uint64_t a1, uint64_t a2)
{
  return sub_16421A4(a2);
}

uint64_t sub_1645664(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_164566C()
{
}

double sub_16456C0(uint64_t a1, uint64_t a2)
{
  return sub_1642220(a2);
}

uint64_t sub_16456C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16456D0()
{
}

uint64_t sub_1645724(uint64_t a1, uint64_t a2)
{
  return sub_1645074(a2);
}

uint64_t sub_164572C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1645734()
{
}

void *sub_1645794(uint64_t a1, uint64_t a2)
{
  return sub_16450F4(a2);
}

uint64_t sub_164579C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_16457A4()
{
}

void *sub_1645804(uint64_t a1, uint64_t a2)
{
  return sub_164519C(a2);
}

uint64_t sub_164580C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1645814()
{
}

void *sub_164586C(uint64_t a1, uint64_t a2)
{
  return sub_1645244(a2);
}

uint64_t sub_1645874(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_164587C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_163AE08(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_16458FC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_139667C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_164597C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    std::string::size_type v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_163E170(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DC268(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_16459F8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    std::string::size_type v10 = &a2[a5];
    do
    {
      sub_13D8414(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1645A74(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1645A74(uint64_t a1, uint64_t a2)
{
}

void sub_1645A84()
{
}

void sub_1645ACC()
{
}

void sub_1645AF0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1641738(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1645B70(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    std::string::size_type v10 = &a2[a5];
    do
    {
      sub_1642220(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1645BEC(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1645BEC(uint64_t a1, std::string *a2)
{
  return sub_1641DA4(a2, a1);
}

void sub_1645BFC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16423C0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_1645C7C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    std::string::size_type v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1645074(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1645CF8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1645CF8(uint64_t a1, std::string *a2)
{
  return sub_1642A20(a2, a1);
}

void sub_1645D08()
{
  dword_2550108 = 1000;
  qword_2550110 = (uint64_t)&off_25420C8;
  sub_1882AC4((unint64_t)&off_25310F8, 1000, 11, 0, 0, (uint64_t)&off_25420C8);
  dword_2550118 = 1000;
  qword_2550120 = (uint64_t)&off_25420E8;

  sub_1882AC4((unint64_t)&off_2531160, 1000, 11, 0, 0, (uint64_t)&off_25420E8);
}

uint64_t sub_1645D9C()
{
  qword_2616F08 = (uint64_t)"TARGETCHARTYPE_ALPHABETTARGETCHARTYPE_ANYTARGETCHARTYPE_NUMERIC";
  unk_2616F10 = 23;
  dword_2616F18 = 2;
  qword_2616F20 = (uint64_t)"TARGETCHARTYPE_ANYTARGETCHARTYPE_NUMERIC";
  unk_2616F28 = 18;
  dword_2616F30 = 1;
  qword_2616F38 = (uint64_t)"TARGETCHARTYPE_NUMERIC";
  unk_2616F40 = 22;
  dword_2616F48 = 3;
  qword_2616F50 = (uint64_t)"FRIDAYMONDAYSATURDAYSUNDAYTHURSDAYTUESDAYWEDNESDAY";
  *(void *)algn_2616F58 = 6;
  dword_2616F60 = 6;
  qword_2616F68 = (uint64_t)"MONDAYSATURDAYSUNDAYTHURSDAYTUESDAYWEDNESDAY";
  unk_2616F70 = 6;
  dword_2616F78 = 2;
  qword_2616F80 = (uint64_t)"SATURDAYSUNDAYTHURSDAYTUESDAYWEDNESDAY";
  unk_2616F88 = 8;
  dword_2616F90 = 7;
  qword_2616F98 = (uint64_t)"SUNDAYTHURSDAYTUESDAYWEDNESDAY";
  unk_2616FA0 = 6;
  dword_2616FA8 = 1;
  qword_2616FB0 = (uint64_t)"THURSDAYTUESDAYWEDNESDAY";
  unk_2616FB8 = 8;
  dword_2616FC0 = 5;
  qword_2616FC8 = (uint64_t)"TUESDAYWEDNESDAY";
  unk_2616FD0 = 7;
  dword_2616FD8 = 3;
  qword_2616FE0 = (uint64_t)"WEDNESDAY";
  unk_2616FE8 = 9;
  dword_2616FF0 = 4;
  qword_2616FF8 = (uint64_t)"FILLTYPE_ALPHABETFILLTYPE_ALPHABET_OR_NUMERICFILLTYPE_NUMERIC";
  unk_2617000 = 17;
  dword_2617008 = 2;
  qword_2617010 = (uint64_t)"FILLTYPE_ALPHABET_OR_NUMERICFILLTYPE_NUMERIC";
  unk_2617018 = 28;
  dword_2617020 = 1;
  qword_2617028 = (uint64_t)"FILLTYPE_NUMERIC";
  unk_2617030 = 16;
  dword_2617038 = 3;
  qword_2617040 = (uint64_t)"LIST_TYPE_ACLIST_TYPE_BROWSE_CATEGORY_SEARCHLIST_TYPE_DIRECTIONS_NAV_FROMLIST_TYPE_DIRECTIONS"
                           "_NAV_TOLIST_TYPE_DIRECTIONS_NO_TYPINGLIST_TYPE_FAVORITESLIST_TYPE_NORMAL_SEARCHLIST_TYPE_NO_T"
                           "YPINGLIST_TYPE_POPULAR_NEARBYLIST_TYPE_SEARCH_ALONG_ROUTELIST_TYPE_SIRI_DISAMBIGUATIONLIST_TY"
                           "PE_SIRI_SEARCHLIST_TYPE_UNKNOWN";
  *(void *)algn_2617048 = 12;
  dword_2617050 = 4;
  qword_2617058 = (uint64_t)"LIST_TYPE_BROWSE_CATEGORY_SEARCHLIST_TYPE_DIRECTIONS_NAV_FROMLIST_TYPE_DIRECTIONS_NAV_TOLIST_TYPE_DIRECTIONS_NO_TYPINGLIST_TYPE_FAVORITESLIST_TYPE_NORMAL_SEARCHLIST_TYPE_NO_TYPINGLIST_TYPE_POPULAR_NEARBYLIST_TYPE_SEARCH_ALONG_ROUTELIST_TYPE_SIRI_DISAMBIGUATIONLIST_TYPE_SIRI_SEARCHLIST_TYPE_UNKNOWN";
  unk_2617060 = 32;
  dword_2617068 = 3;
  qword_2617070 = (uint64_t)"LIST_TYPE_DIRECTIONS_NAV_FROMLIST_TYPE_DIRECTIONS_NAV_TOLIST_TYPE_DIRECTIONS_NO_TYPINGLIST_TYPE_FAVORITESLIST_TYPE_NORMAL_SEARCHLIST_TYPE_NO_TYPINGLIST_TYPE_POPULAR_NEARBYLIST_TYPE_SEARCH_ALONG_ROUTELIST_TYPE_SIRI_DISAMBIGUATIONLIST_TYPE_SIRI_SEARCHLIST_TYPE_UNKNOWN";
  unk_2617078 = 29;
  dword_2617080 = 11;
  qword_2617088 = (uint64_t)"LIST_TYPE_DIRECTIONS_NAV_TOLIST_TYPE_DIRECTIONS_NO_TYPINGLIST_TYPE_FAVORITESLIST_TYPE_NORMAL_SEARCHLIST_TYPE_NO_TYPINGLIST_TYPE_POPULAR_NEARBYLIST_TYPE_SEARCH_ALONG_ROUTELIST_TYPE_SIRI_DISAMBIGUATIONLIST_TYPE_SIRI_SEARCHLIST_TYPE_UNKNOWN";
  unk_2617090 = 27;
  dword_2617098 = 12;
  qword_26170A0 = (uint64_t)"LIST_TYPE_DIRECTIONS_NO_TYPINGLIST_TYPE_FAVORITESLIST_TYPE_NORMAL_SEARCHLIST_TYPE_NO_TYPINGLIST_TYPE_POPULAR_NEARBYLIST_TYPE_SEARCH_ALONG_ROUTELIST_TYPE_SIRI_DISAMBIGUATIONLIST_TYPE_SIRI_SEARCHLIST_TYPE_UNKNOWN";
  unk_26170A8 = 30;
  dword_26170B0 = 10;
  qword_26170B8 = (uint64_t)"LIST_TYPE_FAVORITESLIST_TYPE_NORMAL_SEARCHLIST_TYPE_NO_TYPINGLIST_TYPE_POPULAR_NEARBYLIST_TYPE_SEARCH_ALONG_ROUTELIST_TYPE_SIRI_DISAMBIGUATIONLIST_TYPE_SIRI_SEARCHLIST_TYPE_UNKNOWN";
  unk_26170C0 = 19;
  dword_26170C8 = 7;
  qword_26170D0 = (uint64_t)"LIST_TYPE_NORMAL_SEARCHLIST_TYPE_NO_TYPINGLIST_TYPE_POPULAR_NEARBYLIST_TYPE_SEARCH_ALONG_ROUTELIST_TYPE_SIRI_DISAMBIGUATIONLIST_TYPE_SIRI_SEARCHLIST_TYPE_UNKNOWN";
  unk_26170D8 = 23;
  dword_26170E0 = 5;
  qword_26170E8 = (uint64_t)"LIST_TYPE_NO_TYPINGLIST_TYPE_POPULAR_NEARBYLIST_TYPE_SEARCH_ALONG_ROUTELIST_TYPE_SIRI_DISAMBIGUATIONLIST_TYPE_SIRI_SEARCHLIST_TYPE_UNKNOWN";
  unk_26170F0 = 19;
  dword_26170F8 = 1;
  qword_2617100 = (uint64_t)"LIST_TYPE_POPULAR_NEARBYLIST_TYPE_SEARCH_ALONG_ROUTELIST_TYPE_SIRI_DISAMBIGUATIONLIST_TYPE_SIRI_SEARCHLIST_TYPE_UNKNOWN";
  unk_2617108 = 24;
  dword_2617110 = 2;
  qword_2617118 = (uint64_t)"LIST_TYPE_SEARCH_ALONG_ROUTELIST_TYPE_SIRI_DISAMBIGUATIONLIST_TYPE_SIRI_SEARCHLIST_TYPE_UNKNOWN";
  unk_2617120 = 28;
  dword_2617128 = 6;
  qword_2617130 = (uint64_t)"LIST_TYPE_SIRI_DISAMBIGUATIONLIST_TYPE_SIRI_SEARCHLIST_TYPE_UNKNOWN";
  unk_2617138 = 29;
  dword_2617140 = 9;
  qword_2617148 = (uint64_t)"LIST_TYPE_SIRI_SEARCHLIST_TYPE_UNKNOWN";
  unk_2617150 = 21;
  dword_2617158 = 8;
  qword_2617160 = (uint64_t)"LIST_TYPE_UNKNOWN";
  unk_2617168 = 17;
  dword_2617170 = 0;
  qword_2617178 = (uint64_t)"RESULT_TYPE_CLIENTRESULT_TYPE_PROACTIVERESULT_TYPE_SERVERRESULT_TYPE_UNKNOWN";
  unk_2617180 = 18;
  dword_2617188 = 2;
  qword_2617190 = (uint64_t)"RESULT_TYPE_PROACTIVERESULT_TYPE_SERVERRESULT_TYPE_UNKNOWN";
  unk_2617198 = 21;
  dword_26171A0 = 3;
  qword_26171A8 = (uint64_t)"RESULT_TYPE_SERVERRESULT_TYPE_UNKNOWN";
  unk_26171B0 = 18;
  dword_26171B8 = 1;
  qword_26171C0 = (uint64_t)"RESULT_TYPE_UNKNOWN";
  unk_26171C8 = 19;
  dword_26171D0 = 0;
  qword_26171D8 = (uint64_t)"FAILURELOCATION_NO_SHIFTLOCATION_SHIFT";
  unk_26171E0 = 7;
  dword_26171E8 = 2;
  qword_26171F0 = (uint64_t)"LOCATION_NO_SHIFTLOCATION_SHIFT";
  unk_26171F8 = 17;
  dword_2617200 = 1;
  qword_2617208 = (uint64_t)"LOCATION_SHIFT";
  unk_2617210 = 14;
  dword_2617218 = 0;
  qword_2617238 = (uint64_t)"AC_TYPE_CLIENT_CONTACTSAC_TYPE_CLIENT_CORERECENT_MAILAC_TYPE_CLIENT_CORERECENT_MESSAGESAC_TYPE_CLIENT_COREROUTINEAC_TYPE_CLIENT_FAVORITEAC_TYPE_CLIENT_MAPSRECENT_DIRECTIONSAC_TYPE_CLIENT_MAPSRECENT_PLACEAC_TYPE_CLIENT_MAPSRECENT_QUERYAC_TYPE_SERVERAC_TYPE_UNKNOWN";
  qword_2617250 = (uint64_t)"AC_TYPE_CLIENT_CORERECENT_MAILAC_TYPE_CLIENT_CORERECENT_MESSAGESAC_TYPE_CLIENT_COREROUTINEAC_TYPE_CLIENT_FAVORITEAC_TYPE_CLIENT_MAPSRECENT_DIRECTIONSAC_TYPE_CLIENT_MAPSRECENT_PLACEAC_TYPE_CLIENT_MAPSRECENT_QUERYAC_TYPE_SERVERAC_TYPE_UNKNOWN";
  qword_2617268 = (uint64_t)"AC_TYPE_CLIENT_CORERECENT_MESSAGESAC_TYPE_CLIENT_COREROUTINEAC_TYPE_CLIENT_FAVORITEAC_TYPE_CLIENT_MAPSRECENT_DIRECTIONSAC_TYPE_CLIENT_MAPSRECENT_PLACEAC_TYPE_CLIENT_MAPSRECENT_QUERYAC_TYPE_SERVERAC_TYPE_UNKNOWN";
  qword_2617280 = (uint64_t)"AC_TYPE_CLIENT_COREROUTINEAC_TYPE_CLIENT_FAVORITEAC_TYPE_CLIENT_MAPSRECENT_DIRECTIONSAC_TYPE_CLIENT_MAPSRECENT_PLACEAC_TYPE_CLIENT_MAPSRECENT_QUERYAC_TYPE_SERVERAC_TYPE_UNKNOWN";
  qword_2617298 = (uint64_t)"AC_TYPE_CLIENT_FAVORITEAC_TYPE_CLIENT_MAPSRECENT_DIRECTIONSAC_TYPE_CLIENT_MAPSRECENT_PLACEAC_TYPE_CLIENT_MAPSRECENT_QUERYAC_TYPE_SERVERAC_TYPE_UNKNOWN";
  qword_26172B0 = (uint64_t)"AC_TYPE_CLIENT_MAPSRECENT_DIRECTIONSAC_TYPE_CLIENT_MAPSRECENT_PLACEAC_TYPE_CLIENT_MAPSRECENT_QUERYAC_TYPE_SERVERAC_TYPE_UNKNOWN";
  qword_26172C8 = (uint64_t)"AC_TYPE_CLIENT_MAPSRECENT_PLACEAC_TYPE_CLIENT_MAPSRECENT_QUERYAC_TYPE_SERVERAC_TYPE_UNKNOWN";
  qword_26172E0 = (uint64_t)"AC_TYPE_CLIENT_MAPSRECENT_QUERYAC_TYPE_SERVERAC_TYPE_UNKNOWN";
  qword_26172F8 = (uint64_t)"AC_TYPE_SERVERAC_TYPE_UNKNOWN";
  qword_2617310 = (uint64_t)"AC_TYPE_UNKNOWN";
  qword_2617220 = (uint64_t)"AC_TYPE_CLIENTAC_TYPE_CLIENT_CONTACTSAC_TYPE_CLIENT_CORERECENT_MAILAC_TYPE_CLIENT_CORERECENT_"
                           "MESSAGESAC_TYPE_CLIENT_COREROUTINEAC_TYPE_CLIENT_FAVORITEAC_TYPE_CLIENT_MAPSRECENT_DIRECTIONS"
                           "AC_TYPE_CLIENT_MAPSRECENT_PLACEAC_TYPE_CLIENT_MAPSRECENT_QUERYAC_TYPE_SERVERAC_TYPE_UNKNOWN";
  *(void *)algn_2617228 = 14;
  dword_2617230 = 10;
  qword_2617240 = 23;
  dword_2617248 = 7;
  qword_2617258 = 30;
  dword_2617260 = 3;
  qword_2617270 = 34;
  dword_2617278 = 2;
  qword_2617288 = 26;
  dword_2617290 = 1;
  qword_26172A0 = 23;
  dword_26172A8 = 8;
  qword_26172B8 = 36;
  dword_26172C0 = 5;
  qword_26172D0 = 31;
  dword_26172D8 = 6;
  qword_26172E8 = 31;
  dword_26172F0 = 4;
  qword_2617300 = 14;
  dword_2617308 = 9;
  qword_2617318 = 15;
  dword_2617320 = 0;
  qword_2617340 = (uint64_t)"SEARCH_FIELD_TYPE_DIRECTIONS_STARTSEARCH_FIELD_TYPE_NORMALSEARCH_FIELD_TYPE_UNKNOWN";
  unk_2617348 = 34;
  qword_2617358 = (uint64_t)"SEARCH_FIELD_TYPE_NORMALSEARCH_FIELD_TYPE_UNKNOWN";
  unk_2617360 = 24;
  qword_2617370 = (uint64_t)"SEARCH_FIELD_TYPE_UNKNOWN";
  unk_2617378 = 25;
  qword_2617328 = (uint64_t)"SEARCH_FIELD_TYPE_DIRECTIONS_ENDSEARCH_FIELD_TYPE_DIRECTIONS_STARTSEARCH_FIELD_TYPE_NORMALSEA"
                           "RCH_FIELD_TYPE_UNKNOWN";
  unk_2617330 = 32;
  dword_2617338 = 3;
  dword_2617350 = 2;
  dword_2617368 = 1;
  dword_2617380 = 0;
  qword_26173A0 = (uint64_t)"TILE_LOADED_COVERAGE_CHANGEDTILE_SET_STATE_TYPE_UNKNOWN";
  unk_26173A8 = 28;
  qword_26173B8 = (uint64_t)"TILE_SET_STATE_TYPE_UNKNOWN";
  unk_26173C0 = 27;
  qword_2617388 = (uint64_t)"TILE_GRID_COVERAGE_CHANGEDTILE_LOADED_COVERAGE_CHANGEDTILE_SET_STATE_TYPE_UNKNOWN";
  unk_2617390 = 26;
  dword_2617398 = 1;
  dword_26173B0 = 2;
  dword_26173C8 = 0;
  qword_26173E8 = (uint64_t)"ADDRESS_CORRECTION_UPDATEBATCH_REVGEODIRECTIONSFORWARD_GEOCODERLOCATION_SHIFTLOG_MESSAGE_USAGEMAP_MATCHNETWORK_SERVICE_UNKNOWNPLACE_DATARESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSTILETRAFFIC_ETA";
  qword_2617400 = (uint64_t)"BATCH_REVGEODIRECTIONSFORWARD_GEOCODERLOCATION_SHIFTLOG_MESSAGE_USAGEMAP_MATCHNETWORK_SERVICE_UNKNOWNPLACE_DATARESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSTILETRAFFIC_ETA";
  qword_2617418 = (uint64_t)"DIRECTIONSFORWARD_GEOCODERLOCATION_SHIFTLOG_MESSAGE_USAGEMAP_MATCHNETWORK_SERVICE_UNKNOWNPLACE_DATARESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSTILETRAFFIC_ETA";
  qword_2617430 = (uint64_t)"FORWARD_GEOCODERLOCATION_SHIFTLOG_MESSAGE_USAGEMAP_MATCHNETWORK_SERVICE_UNKNOWNPLACE_DATARESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSTILETRAFFIC_ETA";
  qword_2617448 = (uint64_t)"LOCATION_SHIFTLOG_MESSAGE_USAGEMAP_MATCHNETWORK_SERVICE_UNKNOWNPLACE_DATARESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSTILETRAFFIC_ETA";
  qword_2617460 = (uint64_t)"LOG_MESSAGE_USAGEMAP_MATCHNETWORK_SERVICE_UNKNOWNPLACE_DATARESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSTILETRAFFIC_ETA";
  qword_2617478 = (uint64_t)"MAP_MATCHNETWORK_SERVICE_UNKNOWNPLACE_DATARESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSTILETRAFFIC_ETA";
  qword_2617490 = (uint64_t)"NETWORK_SERVICE_UNKNOWNPLACE_DATARESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSTILETRAFFIC_ETA";
  qword_26174A8 = (uint64_t)"PLACE_DATARESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSTILETRAFFIC_ETA";
  qword_26174C0 = (uint64_t)"RESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSTILETRAFFIC_ETA";
  qword_26174D8 = (uint64_t)"REVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSTILETRAFFIC_ETA";
  qword_26174F0 = (uint64_t)"SEARCHSIMPLE_ETASUGGESTIONSTILETRAFFIC_ETA";
  qword_2617508 = (uint64_t)"SIMPLE_ETASUGGESTIONSTILETRAFFIC_ETA";
  qword_2617520 = (uint64_t)"SUGGESTIONSTILETRAFFIC_ETA";
  qword_2617538 = (uint64_t)"TILETRAFFIC_ETA";
  qword_2617550 = (uint64_t)"TRAFFIC_ETA";
  qword_26173D0 = (uint64_t)"ADDRESS_CORRECTION_INITADDRESS_CORRECTION_UPDATEBATCH_REVGEODIRECTIONSFORWARD_GEOCODERLOCATIO"
                           "N_SHIFTLOG_MESSAGE_USAGEMAP_MATCHNETWORK_SERVICE_UNKNOWNPLACE_DATARESOURCE_LOADERREVERSE_GEOC"
                           "ODERSEARCHSIMPLE_ETASUGGESTIONSTILETRAFFIC_ETA";
  *(void *)algn_26173D8 = 23;
  dword_26173E0 = 11;
  qword_26173F0 = 25;
  dword_26173F8 = 12;
  qword_2617408 = 12;
  dword_2617410 = 9;
  qword_2617420 = 10;
  dword_2617428 = 4;
  qword_2617438 = 16;
  dword_2617440 = 2;
  qword_2617450 = 14;
  dword_2617458 = 17;
  qword_2617468 = 17;
  dword_2617470 = 16;
  qword_2617480 = 9;
  dword_2617488 = 10;
  qword_2617498 = 23;
  dword_26174A0 = 0;
  qword_26174B0 = 10;
  dword_26174B8 = 13;
  qword_26174C8 = 15;
  dword_26174D0 = 14;
  qword_26174E0 = 16;
  dword_26174E8 = 1;
  qword_26174F8 = 6;
  dword_2617500 = 3;
  qword_2617510 = 10;
  dword_2617518 = 7;
  qword_2617528 = 11;
  dword_2617530 = 8;
  qword_2617540 = 4;
  dword_2617548 = 5;
  qword_2617558 = 11;
  dword_2617560 = 6;
  qword_2617598 = (uint64_t)"NETWORK_METRICPURGE_METRICUNKNOWN_METRIC_TYPE";
  unk_26175A0 = 14;
  qword_26175B0 = (uint64_t)"PURGE_METRICUNKNOWN_METRIC_TYPE";
  unk_26175B8 = 12;
  qword_26175C8 = (uint64_t)"UNKNOWN_METRIC_TYPE";
  unk_26175D0 = 19;
  qword_2617568 = (uint64_t)"FAILED_MSG_METRICFORCE_PURGE_METRICNETWORK_METRICPURGE_METRICUNKNOWN_METRIC_TYPE";
  unk_2617570 = 17;
  dword_2617578 = 4;
  qword_2617580 = (uint64_t)"FORCE_PURGE_METRICNETWORK_METRICPURGE_METRICUNKNOWN_METRIC_TYPE";
  unk_2617588 = 18;
  dword_2617590 = 3;
  dword_26175A8 = 1;
  dword_26175C0 = 2;
  dword_26175D8 = 0;
  qword_26175F8 = (uint64_t)"FAILED_STATESUCCESS_STATEUNKNOWN_METRIC_STATE";
  unk_2617600 = 12;
  qword_2617610 = (uint64_t)"SUCCESS_STATEUNKNOWN_METRIC_STATE";
  unk_2617618 = 13;
  qword_2617628 = (uint64_t)"UNKNOWN_METRIC_STATE";
  unk_2617630 = 20;
  qword_26175E0 = (uint64_t)"CANCELLED_STATEFAILED_STATESUCCESS_STATEUNKNOWN_METRIC_STATE";
  *(void *)algn_26175E8 = 15;
  dword_26175F0 = 4;
  dword_2617608 = 3;
  dword_2617620 = 2;
  dword_2617638 = 0;
  qword_2617658 = (uint64_t)"TILE_CACHEUNKNOWN_CACHE_TYPE";
  unk_2617660 = 10;
  qword_2617670 = (uint64_t)"UNKNOWN_CACHE_TYPE";
  unk_2617678 = 18;
  qword_2617640 = (uint64_t)"LOCATION_SHIFT_CACHETILE_CACHEUNKNOWN_CACHE_TYPE";
  *(void *)algn_2617648 = 20;
  dword_2617650 = 2;
  dword_2617668 = 1;
  dword_2617680 = 0;
  qword_26176A0 = (uint64_t)"DID_NOT_DEPARTEARLIER_THAN_22MEARLIER_THAN_7MLATER_THAN_22MLATER_THAN_7MON_TIMETIME_TO_LEAVE_BUCKET_UNKNOWN";
  qword_26176B8 = (uint64_t)"EARLIER_THAN_22MEARLIER_THAN_7MLATER_THAN_22MLATER_THAN_7MON_TIMETIME_TO_LEAVE_BUCKET_UNKNOWN";
  qword_26176D0 = (uint64_t)"EARLIER_THAN_7MLATER_THAN_22MLATER_THAN_7MON_TIMETIME_TO_LEAVE_BUCKET_UNKNOWN";
  qword_26176E8 = (uint64_t)"LATER_THAN_22MLATER_THAN_7MON_TIMETIME_TO_LEAVE_BUCKET_UNKNOWN";
  qword_2617700 = (uint64_t)"LATER_THAN_7MON_TIMETIME_TO_LEAVE_BUCKET_UNKNOWN";
  qword_2617718 = (uint64_t)"ON_TIMETIME_TO_LEAVE_BUCKET_UNKNOWN";
  qword_2617730 = (uint64_t)"TIME_TO_LEAVE_BUCKET_UNKNOWN";
  qword_2617760 = (uint64_t)"EARLY_SHOWNON_TIME_SHOWNTTL_UI_NOTIFICATION_NONE_SHOWN";
  qword_2617778 = (uint64_t)"ON_TIME_SHOWNTTL_UI_NOTIFICATION_NONE_SHOWN";
  qword_2617790 = (uint64_t)"TTL_UI_NOTIFICATION_NONE_SHOWN";
  qword_2618A98 = (uint64_t)"TILE_SET_STATE_TYPE_UNKNOWN";
  qword_2618CD8 = (uint64_t)"SYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  qword_2618CC0 = (uint64_t)"SUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  dword_2618CB8 = 7;
  qword_2618CC8 = 11;
  dword_2618CD0 = 8;
  qword_2618CA8 = (uint64_t)"SIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  qword_2618C90 = (uint64_t)"SEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618C98 = 6;
  dword_2618CA0 = 3;
  qword_2618CB0 = 10;
  dword_2618C70 = 14;
  qword_2618C78 = (uint64_t)"REVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618C80 = 16;
  dword_2618C88 = 1;
  qword_2618C60 = (uint64_t)"RESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  qword_2618C48 = (uint64_t)"REALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  qword_2618C50 = 22;
  dword_2618C58 = 20;
  qword_2618C68 = 15;
  qword_2618C30 = (uint64_t)"PLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618C38 = 10;
  dword_2618C28 = 0;
  dword_2618C40 = 13;
  qword_2618C18 = (uint64_t)"NETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618C20 = 23;
  qword_2618C00 = (uint64_t)"NETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618C08 = 16;
  dword_2618C10 = 24;
  qword_2618BE8 = (uint64_t)"MUNIN_RESOURCENETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618BF0 = 14;
  dword_2618BE0 = 10;
  dword_2618BF8 = 25;
  qword_2618BD0 = (uint64_t)"MAP_MATCHMUNIN_RESOURCENETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  qword_2618BB8 = (uint64_t)"MANIFESTMAP_MATCHMUNIN_RESOURCENETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618BC0 = 8;
  dword_2618BC8 = 19;
  qword_2618BD8 = 9;
  qword_2618BA0 = (uint64_t)"LOG_MESSAGE_USAGEMANIFESTMAP_MATCHMUNIN_RESOURCENETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  dword_2618B98 = 17;
  qword_2618BA8 = 17;
  dword_2618BB0 = 16;
  qword_2618B88 = (uint64_t)"LOCATION_SHIFTLOG_MESSAGE_USAGEMANIFESTMAP_MATCHMUNIN_RESOURCENETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618B90 = 14;
  qword_2618B70 = (uint64_t)"JUNCTION_VIEWLOCATION_SHIFTLOG_MESSAGE_USAGEMANIFESTMAP_MATCHMUNIN_RESOURCENETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618B78 = 13;
  dword_2618B80 = 26;
  qword_2618B58 = (uint64_t)"INCIDENTJUNCTION_VIEWLOCATION_SHIFTLOG_MESSAGE_USAGEMANIFESTMAP_MATCHMUNIN_RESOURCENETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618B60 = 8;
  dword_2618B50 = 2;
  dword_2618B68 = 28;
  qword_2618B40 = (uint64_t)"FORWARD_GEOCODERINCIDENTJUNCTION_VIEWLOCATION_SHIFTLOG_MESSAGE_USAGEMANIFESTMAP_MATCHMUNIN_RESOURCENETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618B48 = 16;
  qword_2618B28 = (uint64_t)"DIRECTIONSFORWARD_GEOCODERINCIDENTJUNCTION_VIEWLOCATION_SHIFTLOG_MESSAGE_USAGEMANIFESTMAP_MATCHMUNIN_RESOURCENETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618B30 = 10;
  dword_2618B38 = 4;
  qword_2618B10 = (uint64_t)"BATCH_TRAFFIC_PROBEDIRECTIONSFORWARD_GEOCODERINCIDENTJUNCTION_VIEWLOCATION_SHIFTLOG_MESSAGE_USAGEMANIFESTMAP_MATCHMUNIN_RESOURCENETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618B18 = 19;
  dword_2618B08 = 9;
  dword_2618B20 = 21;
  qword_2618AF8 = (uint64_t)"BATCH_REVGEOBATCH_TRAFFIC_PROBEDIRECTIONSFORWARD_GEOCODERINCIDENTJUNCTION_VIEWLOCATION_SHIFTLOG_MESSAGE_USAGEMANIFESTMAP_MATCHMUNIN_RESOURCENETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  qword_2618AE0 = (uint64_t)"ADDRESS_CORRECTION_UPDATEBATCH_REVGEOBATCH_TRAFFIC_PROBEDIRECTIONSFORWARD_GEOCODERINCIDENTJUNCTION_VIEWLOCATION_SHIFTLOG_MESSAGE_USAGEMANIFESTMAP_MATCHMUNIN_RESOURCENETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618AE8 = 25;
  dword_2618AF0 = 12;
  qword_2618B00 = 12;
  qword_2618AC8 = (uint64_t)"ADDRESS_CORRECTION_INITADDRESS_CORRECTION_UPDATEBATCH_REVGEOBATCH_TRAFFIC_PROBEDIRECTIONSFORWARD_GEOCODERINCIDENTJUNCTION_VIEWLOCATION_SHIFTLOG_MESSAGE_USAGEMANIFESTMAP_MATCHMUNIN_RESOURCENETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LOADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  unk_2618AD0 = 23;
  qword_2618AB0 = (uint64_t)"AB_ASSIGNADDRESS_CORRECTION_INITADDRESS_CORRECTION_UPDATEBATCH_REVGEOBATCH_TRAFFIC_PROBEDIREC"
                           "TIONSFORWARD_GEOCODERINCIDENTJUNCTION_VIEWLOCATION_SHIFTLOG_MESSAGE_USAGEMANIFESTMAP_MATCHMUN"
                           "IN_RESOURCENETWORK_DEFAULTSNETWORK_SERVICE_UNKNOWNPLACE_DATAREALTIME_TRAFFIC_PROBERESOURCE_LO"
                           "ADERREVERSE_GEOCODERSEARCHSIMPLE_ETASUGGESTIONSSYNCTILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  *(void *)algn_2618AB8 = 9;
  dword_2618AC0 = 18;
  dword_2618AD8 = 11;
  qword_2618A80 = (uint64_t)"TILE_LOADED_COVERAGE_CHANGEDTILE_SET_STATE_TYPE_UNKNOWN";
  unk_2618A88 = 28;
  qword_2618AA0 = 27;
  dword_2618AA8 = 0;
  dword_2618A90 = 2;
  qword_2618A20 = (uint64_t)"RevealedPlaceCardModuleTitleElement_CUSTOM_LOGORevealedPlaceCardModuleTitleElement_UNKNOWNRevealedPlaceCardModuleTitleElement_VERIFIED_BADGE";
  qword_2618A68 = (uint64_t)"TILE_GRID_COVERAGE_CHANGEDTILE_LOADED_COVERAGE_CHANGEDTILE_SET_STATE_TYPE_UNKNOWN";
  unk_2618A70 = 26;
  dword_2618A78 = 1;
  qword_2618A50 = (uint64_t)"RevealedPlaceCardModuleTitleElement_VERIFIED_BADGE";
  unk_2618A58 = 50;
  qword_2618A08 = (uint64_t)"RevealedPlaceCardModuleTitleElement_CUSTOM_COVERRevealedPlaceCardModuleTitleElement_CUSTOM_LO"
                           "GORevealedPlaceCardModuleTitleElement_UNKNOWNRevealedPlaceCardModuleTitleElement_VERIFIED_BADGE";
  unk_2618A10 = 48;
  dword_2618A60 = 3;
  qword_2618A38 = (uint64_t)"RevealedPlaceCardModuleTitleElement_UNKNOWNRevealedPlaceCardModuleTitleElement_VERIFIED_BADGE";
  unk_2618A40 = 43;
  dword_2618A30 = 2;
  dword_2618A48 = 0;
  dword_2618A18 = 1;
  qword_2618A28 = 47;
  qword_26189F0 = (uint64_t)"MODULE_BUTTON_TYPE_WEBSITE";
  unk_26189F8 = 26;
  dword_2618A00 = 6;
  qword_26189D8 = (uint64_t)"MODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_26189E0 = 26;
  dword_26189D0 = 3;
  dword_26189E8 = 0;
  qword_26189A8 = (uint64_t)"MODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_26189B0 = 34;
  dword_26189B8 = 2;
  qword_26189C0 = (uint64_t)"MODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_26189C8 = 24;
  qword_2618930 = (uint64_t)"MODULE_BUTTON_TYPE_FLYOVERMODULE_BUTTON_TYPE_GROUPMODULE_BUTTON_TYPE_LOCATIONMODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  qword_2618990 = (uint64_t)"MODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_2618998 = 29;
  dword_26189A0 = 7;
  qword_2618978 = (uint64_t)"MODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_2618980 = 26;
  dword_2618970 = 58;
  dword_2618988 = 5;
  qword_2618960 = (uint64_t)"MODULE_BUTTON_TYPE_LOCATIONMODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_2618968 = 27;
  qword_2618948 = (uint64_t)"MODULE_BUTTON_TYPE_GROUPMODULE_BUTTON_TYPE_LOCATIONMODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_2618950 = 24;
  dword_2618958 = 8;
  qword_2618918 = (uint64_t)"MODULE_BUTTON_TYPE_FINDMYMODULE_BUTTON_TYPE_FLYOVERMODULE_BUTTON_TYPE_GROUPMODULE_BUTTON_TYPE_LOCATIONMODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_2618920 = 25;
  qword_2618938 = 26;
  dword_2618940 = 10;
  dword_2618928 = 57;
  qword_26187C8 = (uint64_t)"LOCATION_CADENCE_IN_APPLOCATION_CADENCE_NEVERLOCATION_CADENCE_ONCELOCATION_CADENCE_UNKNOWN";
  qword_2618900 = (uint64_t)"MODULE_BUTTON_TYPE_DIRECTIONSMODULE_BUTTON_TYPE_FINDMYMODULE_BUTTON_TYPE_FLYOVERMODULE_BUTTON_TYPE_GROUPMODULE_BUTTON_TYPE_LOCATIONMODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_2618908 = 29;
  dword_2618910 = 9;
  qword_26188D0 = (uint64_t)"MODULE_BUTTON_TYPE_CALLMODULE_BUTTON_TYPE_CLAIM_PLACEMODULE_BUTTON_TYPE_DIRECTIONSMODULE_BUTTON_TYPE_FINDMYMODULE_BUTTON_TYPE_FLYOVERMODULE_BUTTON_TYPE_GROUPMODULE_BUTTON_TYPE_LOCATIONMODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_26188D8 = 23;
  dword_26188E0 = 4;
  qword_26188E8 = (uint64_t)"MODULE_BUTTON_TYPE_CLAIM_PLACEMODULE_BUTTON_TYPE_DIRECTIONSMODULE_BUTTON_TYPE_FINDMYMODULE_BUTTON_TYPE_FLYOVERMODULE_BUTTON_TYPE_GROUPMODULE_BUTTON_TYPE_LOCATIONMODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_26188F0 = 30;
  dword_26188F8 = 50;
  qword_26188B8 = (uint64_t)"MODULE_BUTTON_TYPE_ADD_WEBSITEMODULE_BUTTON_TYPE_CALLMODULE_BUTTON_TYPE_CLAIM_PLACEMODULE_BUTTON_TYPE_DIRECTIONSMODULE_BUTTON_TYPE_FINDMYMODULE_BUTTON_TYPE_FLYOVERMODULE_BUTTON_TYPE_GROUPMODULE_BUTTON_TYPE_LOCATIONMODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_26188C0 = 30;
  dword_26188C8 = 56;
  qword_2618858 = (uint64_t)"MODULE_BUTTON_TYPE_ADD_HOURSMODULE_BUTTON_TYPE_ADD_PHONEMODULE_BUTTON_TYPE_ADD_PHOTOSMODULE_BUTTON_TYPE_ADD_TO_GUIDESMODULE_BUTTON_TYPE_ADD_WEBSITEMODULE_BUTTON_TYPE_CALLMODULE_BUTTON_TYPE_CLAIM_PLACEMODULE_BUTTON_TYPE_DIRECTIONSMODULE_BUTTON_TYPE_FINDMYMODULE_BUTTON_TYPE_FLYOVERMODULE_BUTTON_TYPE_GROUPMODULE_BUTTON_TYPE_LOCATIONMODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  qword_26188A0 = (uint64_t)"MODULE_BUTTON_TYPE_ADD_TO_GUIDESMODULE_BUTTON_TYPE_ADD_WEBSITEMODULE_BUTTON_TYPE_CALLMODULE_BUTTON_TYPE_CLAIM_PLACEMODULE_BUTTON_TYPE_DIRECTIONSMODULE_BUTTON_TYPE_FINDMYMODULE_BUTTON_TYPE_FLYOVERMODULE_BUTTON_TYPE_GROUPMODULE_BUTTON_TYPE_LOCATIONMODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_26188A8 = 32;
  dword_26188B0 = 1;
  qword_2618888 = (uint64_t)"MODULE_BUTTON_TYPE_ADD_PHOTOSMODULE_BUTTON_TYPE_ADD_TO_GUIDESMODULE_BUTTON_TYPE_ADD_WEBSITEMODULE_BUTTON_TYPE_CALLMODULE_BUTTON_TYPE_CLAIM_PLACEMODULE_BUTTON_TYPE_DIRECTIONSMODULE_BUTTON_TYPE_FINDMYMODULE_BUTTON_TYPE_FLYOVERMODULE_BUTTON_TYPE_GROUPMODULE_BUTTON_TYPE_LOCATIONMODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_2618890 = 29;
  dword_2618898 = 51;
  qword_2618870 = (uint64_t)"MODULE_BUTTON_TYPE_ADD_PHONEMODULE_BUTTON_TYPE_ADD_PHOTOSMODULE_BUTTON_TYPE_ADD_TO_GUIDESMODULE_BUTTON_TYPE_ADD_WEBSITEMODULE_BUTTON_TYPE_CALLMODULE_BUTTON_TYPE_CLAIM_PLACEMODULE_BUTTON_TYPE_DIRECTIONSMODULE_BUTTON_TYPE_FINDMYMODULE_BUTTON_TYPE_FLYOVERMODULE_BUTTON_TYPE_GROUPMODULE_BUTTON_TYPE_LOCATIONMODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_2618878 = 28;
  dword_2618868 = 53;
  dword_2618880 = 55;
  qword_2618840 = (uint64_t)"MODULE_BUTTON_TYPE_ADD_FAVORITESMODULE_BUTTON_TYPE_ADD_HOURSMODULE_BUTTON_TYPE_ADD_PHONEMODULE_BUTTON_TYPE_ADD_PHOTOSMODULE_BUTTON_TYPE_ADD_TO_GUIDESMODULE_BUTTON_TYPE_ADD_WEBSITEMODULE_BUTTON_TYPE_CALLMODULE_BUTTON_TYPE_CLAIM_PLACEMODULE_BUTTON_TYPE_DIRECTIONSMODULE_BUTTON_TYPE_FINDMYMODULE_BUTTON_TYPE_FLYOVERMODULE_BUTTON_TYPE_GROUPMODULE_BUTTON_TYPE_LOCATIONMODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYPE_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_2618848 = 32;
  dword_2618850 = 52;
  qword_2618860 = 28;
  qword_2618828 = (uint64_t)"MODULE_BUTTON_TYPE_ADD_DETAILSMODULE_BUTTON_TYPE_ADD_FAVORITESMODULE_BUTTON_TYPE_ADD_HOURSMOD"
                           "ULE_BUTTON_TYPE_ADD_PHONEMODULE_BUTTON_TYPE_ADD_PHOTOSMODULE_BUTTON_TYPE_ADD_TO_GUIDESMODULE_"
                           "BUTTON_TYPE_ADD_WEBSITEMODULE_BUTTON_TYPE_CALLMODULE_BUTTON_TYPE_CLAIM_PLACEMODULE_BUTTON_TYP"
                           "E_DIRECTIONSMODULE_BUTTON_TYPE_FINDMYMODULE_BUTTON_TYPE_FLYOVERMODULE_BUTTON_TYPE_GROUPMODULE"
                           "_BUTTON_TYPE_LOCATIONMODULE_BUTTON_TYPE_MESSAGEMODULE_BUTTON_TYPE_QUICK_LINKMODULE_BUTTON_TYP"
                           "E_REPORT_AN_ISSUEMODULE_BUTTON_TYPE_SHAREMODULE_BUTTON_TYPE_UNKNOWNMODULE_BUTTON_TYPE_WEBSITE";
  unk_2618830 = 30;
  dword_2618838 = 54;
  dword_2618820 = 0;
  qword_2618810 = (uint64_t)"LOCATION_CADENCE_UNKNOWN";
  unk_2618818 = 24;
  qword_26187F8 = (uint64_t)"LOCATION_CADENCE_ONCELOCATION_CADENCE_UNKNOWN";
  unk_2618800 = 21;
  dword_2618808 = 2;
  qword_26187B0 = (uint64_t)"LOCATION_CADENCE_ALWAYSLOCATION_CADENCE_IN_APPLOCATION_CADENCE_NEVERLOCATION_CADENCE_ONCELOCA"
                           "TION_CADENCE_UNKNOWN";
  dword_26187D8 = 3;
  qword_26187E0 = (uint64_t)"LOCATION_CADENCE_NEVERLOCATION_CADENCE_ONCELOCATION_CADENCE_UNKNOWN";
  unk_26187E8 = 22;
  dword_26187F0 = 1;
  dword_26187C0 = 4;
  qword_26187D0 = 23;
  qword_26187B8 = 23;
  qword_2617C40 = (uint64_t)"ElementType_MODULE_TYPE_EV_CHARGERElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2618798 = (uint64_t)"LOCATION_TYPE_UNKNOWN";
  unk_26187A0 = 21;
  dword_2618790 = 1;
  dword_26187A8 = 0;
  qword_2618780 = (uint64_t)"LOCATION_TYPE_PRECISELOCATION_TYPE_UNKNOWN";
  unk_2618788 = 21;
  qword_2618768 = (uint64_t)"LOCATION_TYPE_COURSELOCATION_TYPE_PRECISELOCATION_TYPE_UNKNOWN";
  unk_2618770 = 20;
  dword_2618778 = 2;
  dword_2618760 = 0;
  qword_2618738 = (uint64_t)"TAKENUNKNOWN";
  unk_2618740 = 5;
  dword_2618730 = 1;
  dword_2618748 = 2;
  qword_2618750 = (uint64_t)"UNKNOWN";
  unk_2618758 = 7;
  qword_26186C0 = (uint64_t)"MapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618720 = (uint64_t)"LIBRARYTAKENUNKNOWN";
  *(void *)algn_2618728 = 7;
  qword_2618710 = 29;
  dword_2618718 = 33;
  qword_26186F0 = (uint64_t)"MapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618708 = (uint64_t)"MapLaunchAction_ZoomMapAction";
  qword_26186F8 = 23;
  dword_2618700 = 0;
  qword_26186D8 = (uint64_t)"MapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_26186E0 = 36;
  dword_26186E8 = 39;
  dword_26186B8 = 41;
  qword_26186C8 = 37;
  dword_26186D0 = 40;
  qword_2618678 = (uint64_t)"MapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_26186A8 = (uint64_t)"MapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618698 = 36;
  dword_26186A0 = 32;
  qword_26186B0 = 24;
  qword_2618690 = (uint64_t)"MapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  dword_2618670 = 1;
  qword_2618680 = 35;
  dword_2618688 = 35;
  qword_2618660 = (uint64_t)"MapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618650 = 34;
  dword_2618658 = 31;
  qword_2618668 = 39;
  qword_2618630 = (uint64_t)"MapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618648 = (uint64_t)"MapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  dword_2618628 = 4;
  qword_2618638 = 43;
  dword_2618640 = 34;
  qword_2618618 = (uint64_t)"MapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618608 = 41;
  dword_2618610 = 2;
  qword_2618620 = 36;
  qword_26185E8 = (uint64_t)"MapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618600 = (uint64_t)"MapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  dword_26185E0 = 3;
  qword_26185F0 = 47;
  dword_26185F8 = 37;
  qword_26185D0 = (uint64_t)"MapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_26185C0 = 39;
  dword_26185C8 = 30;
  qword_26185D8 = 32;
  qword_26185A0 = (uint64_t)"MapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_26185B8 = (uint64_t)"MapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  dword_2618598 = 28;
  qword_26185A8 = 37;
  dword_26185B0 = 29;
  qword_2618588 = (uint64_t)"MapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618578 = 36;
  dword_2618580 = 27;
  qword_2618590 = 28;
  qword_2617D60 = (uint64_t)"ElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2618570 = (uint64_t)"MapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618560 = 33;
  dword_2618568 = 26;
  qword_2617D48 = (uint64_t)"ElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  dword_2617D40 = 45;
  qword_2617D50 = 37;
  dword_2617D58 = 15;
  qword_2617D18 = (uint64_t)"ElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617D30 = (uint64_t)"ElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617D20 = 52;
  dword_2617D28 = 31;
  qword_2617D38 = 28;
  qword_2617D00 = (uint64_t)"ElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617D08 = 37;
  dword_2617CF8 = 21;
  dword_2617D10 = 22;
  qword_2617CE8 = (uint64_t)"ElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617CF0 = 31;
  qword_2617CD0 = (uint64_t)"ElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617CD8 = 34;
  dword_2617CE0 = 4;
  qword_2617CB8 = (uint64_t)"ElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617CC0 = 35;
  dword_2617CB0 = 6;
  dword_2617CC8 = 18;
  qword_2617C88 = (uint64_t)"ElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617C90 = 29;
  dword_2617C98 = 10;
  qword_2617CA0 = (uint64_t)"ElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617CA8 = 29;
  qword_2617C70 = (uint64_t)"ElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617C78 = 41;
  dword_2617C80 = 46;
  qword_2617C58 = (uint64_t)"ElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617C60 = 42;
  dword_2617C50 = 43;
  dword_2617C68 = 44;
  qword_2617C28 = (uint64_t)"ElementType_MODULE_TYPE_ENCYCLOPEDICElementType_MODULE_TYPE_EV_CHARGERElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617C30 = 36;
  dword_2617C38 = 9;
  qword_2617C48 = 34;
  qword_2617B20 = (uint64_t)"ElementType_MODULE_TYPE_ABOUTElementType_MODULE_TYPE_ACTIONS_ROWElementType_MODULE_TYPE_ACTION_FOOTERElementType_MODULE_TYPE_ANNOTATED_LISTElementType_MODULE_TYPE_ANNOTATED_PICTUREElementType_MODULE_TYPE_APPLE_RATINGSElementType_MODULE_TYPE_ATTRIBUTIONElementType_MODULE_TYPE_BUSINESS_INFOSElementType_MODULE_TYPE_BUTTONSElementType_MODULE_TYPE_COLLECTIONSElementType_MODULE_TYPE_CURATED_COLLECTIONSElementType_MODULE_TYPE_ENCYCLOPEDICElementType_MODULE_TYPE_EV_CHARGERElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617C10 = (uint64_t)"ElementType_MODULE_TYPE_CURATED_COLLECTIONSElementType_MODULE_TYPE_ENCYCLOPEDICElementType_MODULE_TYPE_EV_CHARGERElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617C18 = 43;
  dword_2617C20 = 32;
  qword_2617BE0 = (uint64_t)"ElementType_MODULE_TYPE_BUTTONSElementType_MODULE_TYPE_COLLECTIONSElementType_MODULE_TYPE_CURATED_COLLECTIONSElementType_MODULE_TYPE_ENCYCLOPEDICElementType_MODULE_TYPE_EV_CHARGERElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617BE8 = 31;
  qword_2617BF8 = (uint64_t)"ElementType_MODULE_TYPE_COLLECTIONSElementType_MODULE_TYPE_CURATED_COLLECTIONSElementType_MODULE_TYPE_ENCYCLOPEDICElementType_MODULE_TYPE_EV_CHARGERElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617C00 = 35;
  dword_2617BF0 = 3;
  dword_2617C08 = 29;
  qword_2617BC8 = (uint64_t)"ElementType_MODULE_TYPE_BUSINESS_INFOSElementType_MODULE_TYPE_BUTTONSElementType_MODULE_TYPE_COLLECTIONSElementType_MODULE_TYPE_CURATED_COLLECTIONSElementType_MODULE_TYPE_ENCYCLOPEDICElementType_MODULE_TYPE_EV_CHARGERElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617BD0 = 38;
  dword_2617BD8 = 11;
  qword_2617BB0 = (uint64_t)"ElementType_MODULE_TYPE_ATTRIBUTIONElementType_MODULE_TYPE_BUSINESS_INFOSElementType_MODULE_TYPE_BUTTONSElementType_MODULE_TYPE_COLLECTIONSElementType_MODULE_TYPE_CURATED_COLLECTIONSElementType_MODULE_TYPE_ENCYCLOPEDICElementType_MODULE_TYPE_EV_CHARGERElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617BB8 = 35;
  dword_2617BA8 = 34;
  dword_2617BC0 = 24;
  qword_2617B98 = (uint64_t)"ElementType_MODULE_TYPE_APPLE_RATINGSElementType_MODULE_TYPE_ATTRIBUTIONElementType_MODULE_TYPE_BUSINESS_INFOSElementType_MODULE_TYPE_BUTTONSElementType_MODULE_TYPE_COLLECTIONSElementType_MODULE_TYPE_CURATED_COLLECTIONSElementType_MODULE_TYPE_ENCYCLOPEDICElementType_MODULE_TYPE_EV_CHARGERElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617BA0 = 37;
  qword_2617B80 = (uint64_t)"ElementType_MODULE_TYPE_ANNOTATED_PICTUREElementType_MODULE_TYPE_APPLE_RATINGSElementType_MODULE_TYPE_ATTRIBUTIONElementType_MODULE_TYPE_BUSINESS_INFOSElementType_MODULE_TYPE_BUTTONSElementType_MODULE_TYPE_COLLECTIONSElementType_MODULE_TYPE_CURATED_COLLECTIONSElementType_MODULE_TYPE_ENCYCLOPEDICElementType_MODULE_TYPE_EV_CHARGERElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617B88 = 41;
  dword_2617B90 = 20;
  qword_2617B68 = (uint64_t)"ElementType_MODULE_TYPE_ANNOTATED_LISTElementType_MODULE_TYPE_ANNOTATED_PICTUREElementType_MODULE_TYPE_APPLE_RATINGSElementType_MODULE_TYPE_ATTRIBUTIONElementType_MODULE_TYPE_BUSINESS_INFOSElementType_MODULE_TYPE_BUTTONSElementType_MODULE_TYPE_COLLECTIONSElementType_MODULE_TYPE_CURATED_COLLECTIONSElementType_MODULE_TYPE_ENCYCLOPEDICElementType_MODULE_TYPE_EV_CHARGERElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617B70 = 38;
  dword_2617B60 = 23;
  dword_2617B78 = 19;
  qword_2617B50 = (uint64_t)"ElementType_MODULE_TYPE_ACTION_FOOTERElementType_MODULE_TYPE_ANNOTATED_LISTElementType_MODULE_TYPE_ANNOTATED_PICTUREElementType_MODULE_TYPE_APPLE_RATINGSElementType_MODULE_TYPE_ATTRIBUTIONElementType_MODULE_TYPE_BUSINESS_INFOSElementType_MODULE_TYPE_BUTTONSElementType_MODULE_TYPE_COLLECTIONSElementType_MODULE_TYPE_CURATED_COLLECTIONSElementType_MODULE_TYPE_ENCYCLOPEDICElementType_MODULE_TYPE_EV_CHARGERElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617B58 = 37;
  qword_2617B38 = (uint64_t)"ElementType_MODULE_TYPE_ACTIONS_ROWElementType_MODULE_TYPE_ACTION_FOOTERElementType_MODULE_TYPE_ANNOTATED_LISTElementType_MODULE_TYPE_ANNOTATED_PICTUREElementType_MODULE_TYPE_APPLE_RATINGSElementType_MODULE_TYPE_ATTRIBUTIONElementType_MODULE_TYPE_BUSINESS_INFOSElementType_MODULE_TYPE_BUTTONSElementType_MODULE_TYPE_COLLECTIONSElementType_MODULE_TYPE_CURATED_COLLECTIONSElementType_MODULE_TYPE_ENCYCLOPEDICElementType_MODULE_TYPE_EV_CHARGERElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODULE_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElementType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617B40 = 35;
  dword_2617B48 = 13;
  qword_2617B28 = 29;
  dword_2617B30 = 37;
  qword_2617AF0 = (uint64_t)"SEARCH_RESULTS_RESULT_TYPE_UNKNOWN";
  unk_2617AF8 = 34;
  qword_2617B08 = (uint64_t)"ElementType_MAPS_SEARCH_RESULTElementType_MODULE_TYPE_ABOUTElementType_MODULE_TYPE_ACTIONS_RO"
                           "WElementType_MODULE_TYPE_ACTION_FOOTERElementType_MODULE_TYPE_ANNOTATED_LISTElementType_MODUL"
                           "E_TYPE_ANNOTATED_PICTUREElementType_MODULE_TYPE_APPLE_RATINGSElementType_MODULE_TYPE_ATTRIBUT"
                           "IONElementType_MODULE_TYPE_BUSINESS_INFOSElementType_MODULE_TYPE_BUTTONSElementType_MODULE_TY"
                           "PE_COLLECTIONSElementType_MODULE_TYPE_CURATED_COLLECTIONSElementType_MODULE_TYPE_ENCYCLOPEDIC"
                           "ElementType_MODULE_TYPE_EV_CHARGERElementType_MODULE_TYPE_HIKING_ASSOCIATIONElementType_MODUL"
                           "E_TYPE_HIKING_SUGGESTIONElementType_MODULE_TYPE_HOURSElementType_MODULE_TYPE_INFOSElementType"
                           "_MODULE_TYPE_INFO_PARENTElementType_MODULE_TYPE_INLINE_MAPElementType_MODULE_TYPE_MESSAGEElem"
                           "entType_MODULE_TYPE_MESSAGE_HOURSElementType_MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESElementT"
                           "ype_MODULE_TYPE_NOTEElementType_MODULE_TYPE_OFFICIAL_APPSElementType_MODULE_TYPE_PHOTOSElemen"
                           "tType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementT"
                           "ype_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYP"
                           "E_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_"
                           "PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODU"
                           "LE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLAT"
                           "E_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MO"
                           "DULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIF"
                           "IED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementTy"
                           "pe_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  unk_2617B10 = 30;
  dword_2617B18 = 1;
  dword_2617B00 = 0;
  qword_26179D0 = (uint64_t)"NETWORK_USAGEPLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  qword_2617AD8 = (uint64_t)"SEARCH_RESULTS_RESULT_TYPE_MAPS_RESULTSEARCH_RESULTS_RESULT_TYPE_UNKNOWN";
  unk_2617AE0 = 38;
  dword_2617AD0 = 3;
  dword_2617AE8 = 2;
  qword_2617AC0 = (uint64_t)"SEARCH_RESULTS_RESULT_TYPE_GUIDESEARCH_RESULTS_RESULT_TYPE_MAPS_RESULTSEARCH_RESULTS_RESULT_TYPE_UNKNOWN";
  unk_2617AC8 = 32;
  qword_2617AA8 = (uint64_t)"SEARCH_RESULTS_RESULT_TYPE_ENRICHEDSEARCH_RESULTS_RESULT_TYPE_GUIDESEARCH_RESULTS_RESULT_TYPE"
                           "_MAPS_RESULTSEARCH_RESULTS_RESULT_TYPE_UNKNOWN";
  unk_2617AB0 = 35;
  dword_2617AB8 = 1;
  qword_2617A90 = (uint64_t)"USER_ACTION_USAGE";
  unk_2617A98 = 17;
  dword_2617AA0 = 100;
  qword_2617A30 = (uint64_t)"TILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  qword_2617A78 = (uint64_t)"TRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_2617A80 = 18;
  dword_2617A88 = 301;
  dword_2617A70 = 303;
  qword_2617A60 = (uint64_t)"TIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_2617A68 = 33;
  dword_2617A58 = 302;
  qword_2617A48 = (uint64_t)"TIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_2617A50 = 24;
  dword_2617A40 = 103;
  qword_2617A18 = (uint64_t)"SUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_2617A20 = 17;
  dword_2617A28 = 102;
  qword_2617A38 = 20;
  qword_2617A00 = (uint64_t)"STATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_2617A08 = 18;
  dword_2617A10 = 101;
  dword_26179E0 = 200;
  qword_26179E8 = (uint64_t)"PLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_26179F0 = 16;
  dword_26179F8 = 104;
  qword_26179B8 = (uint64_t)"LOG_WARNINGNETWORK_USAGEPLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_26179C0 = 11;
  dword_26179C8 = 5;
  qword_26179D8 = 13;
  qword_2617928 = (uint64_t)"LOG_ERRORLOG_FRAMEWORK_METRIC_USAGELOG_FRAMEWORK_NETWORK_USAGELOG_INFOLOG_MESSAGE_SUB_TYPE_UNKNOWNLOG_NOTICELOG_WARNINGNETWORK_USAGEPLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  qword_26179A0 = (uint64_t)"LOG_NOTICELOG_WARNINGNETWORK_USAGEPLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_26179A8 = 10;
  dword_26179B0 = 6;
  qword_2617970 = (uint64_t)"LOG_INFOLOG_MESSAGE_SUB_TYPE_UNKNOWNLOG_NOTICELOG_WARNINGNETWORK_USAGEPLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  qword_2617988 = (uint64_t)"LOG_MESSAGE_SUB_TYPE_UNKNOWNLOG_NOTICELOG_WARNINGNETWORK_USAGEPLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_2617990 = 28;
  dword_2617980 = 7;
  dword_2617998 = 0;
  qword_2617958 = (uint64_t)"LOG_FRAMEWORK_NETWORK_USAGELOG_INFOLOG_MESSAGE_SUB_TYPE_UNKNOWNLOG_NOTICELOG_WARNINGNETWORK_USAGEPLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_2617960 = 27;
  dword_2617968 = 400;
  qword_2617978 = 8;
  dword_2617938 = 4;
  qword_2617940 = (uint64_t)"LOG_FRAMEWORK_METRIC_USAGELOG_FRAMEWORK_NETWORK_USAGELOG_INFOLOG_MESSAGE_SUB_TYPE_UNKNOWNLOG_NOTICELOG_WARNINGNETWORK_USAGEPLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_2617948 = 26;
  dword_2617950 = 401;
  qword_2617910 = (uint64_t)"LOG_EMERGENCYLOG_ERRORLOG_FRAMEWORK_METRIC_USAGELOG_FRAMEWORK_NETWORK_USAGELOG_INFOLOG_MESSAGE_SUB_TYPE_UNKNOWNLOG_NOTICELOG_WARNINGNETWORK_USAGEPLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_2617918 = 13;
  dword_2617920 = 1;
  qword_2617930 = 9;
  qword_26178F8 = (uint64_t)"LOG_DEBUGLOG_EMERGENCYLOG_ERRORLOG_FRAMEWORK_METRIC_USAGELOG_FRAMEWORK_NETWORK_USAGELOG_INFOLOG_MESSAGE_SUB_TYPE_UNKNOWNLOG_NOTICELOG_WARNINGNETWORK_USAGEPLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_2617900 = 9;
  qword_26178E0 = (uint64_t)"LOG_CRITICALLOG_DEBUGLOG_EMERGENCYLOG_ERRORLOG_FRAMEWORK_METRIC_USAGELOG_FRAMEWORK_NETWORK_USAGELOG_INFOLOG_MESSAGE_SUB_TYPE_UNKNOWNLOG_NOTICELOG_WARNINGNETWORK_USAGEPLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_26178E8 = 12;
  dword_2617908 = 8;
  dword_26178F0 = 3;
  qword_2617868 = (uint64_t)"DEVICE_CONNECTIVITY_UNKNOWNDEVICE_CONNECTVIITY_WIFI";
  unk_2617870 = 27;
  qword_26178C8 = (uint64_t)"LOG_ALERTLOG_CRITICALLOG_DEBUGLOG_EMERGENCYLOG_ERRORLOG_FRAMEWORK_METRIC_USAGELOG_FRAMEWORK_NETWORK_USAGELOG_INFOLOG_MESSAGE_SUB_TYPE_UNKNOWNLOG_NOTICELOG_WARNINGNETWORK_USAGEPLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_26178D0 = 9;
  dword_26178D8 = 2;
  qword_26178B0 = (uint64_t)"DIRECTIONS_FEEDBACKLOG_ALERTLOG_CRITICALLOG_DEBUGLOG_EMERGENCYLOG_ERRORLOG_FRAMEWORK_METRIC_USAGELOG_FRAMEWORK_NETWORK_USAGELOG_INFOLOG_MESSAGE_SUB_TYPE_UNKNOWNLOG_NOTICELOG_WARNINGNETWORK_USAGEPLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAGETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_26178B8 = 19;
  dword_26178A8 = 201;
  dword_26178C0 = 300;
  qword_2617898 = (uint64_t)"CACHE_HIT_USAGEDIRECTIONS_FEEDBACKLOG_ALERTLOG_CRITICALLOG_DEBUGLOG_EMERGENCYLOG_ERRORLOG_FRA"
                           "MEWORK_METRIC_USAGELOG_FRAMEWORK_NETWORK_USAGELOG_INFOLOG_MESSAGE_SUB_TYPE_UNKNOWNLOG_NOTICEL"
                           "OG_WARNINGNETWORK_USAGEPLACE_DATA_CACHESTATE_TIMING_USAGESUGGESTIONS_USAGETILE_SET_STATE_USAG"
                           "ETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHUSER_ACTION_USAGE";
  unk_26178A0 = 15;
  qword_2617880 = (uint64_t)"DEVICE_CONNECTVIITY_WIFI";
  unk_2617888 = 24;
  dword_2617890 = 2;
  dword_2617878 = 0;
  qword_2617838 = (uint64_t)"TTL_INITIAL_TRAVEL_TIME_BUCKET_UNKNOWN";
  unk_2617840 = 38;
  qword_2617850 = (uint64_t)"DEVICE_CONNECTIVITY_CELLULARDEVICE_CONNECTIVITY_UNKNOWNDEVICE_CONNECTVIITY_WIFI";
  *(void *)algn_2617858 = 28;
  dword_2617860 = 1;
  dword_2617848 = 0;
  qword_2617820 = (uint64_t)"MORE_THAN_4HTTL_INITIAL_TRAVEL_TIME_BUCKET_UNKNOWN";
  unk_2617828 = 12;
  dword_2617830 = 6;
  qword_26177F0 = (uint64_t)"LESS_THAN_30MLESS_THAN_4HMORE_THAN_4HTTL_INITIAL_TRAVEL_TIME_BUCKET_UNKNOWN";
  qword_2617808 = (uint64_t)"LESS_THAN_4HMORE_THAN_4HTTL_INITIAL_TRAVEL_TIME_BUCKET_UNKNOWN";
  unk_2617810 = 12;
  dword_2617800 = 2;
  dword_2617818 = 5;
  qword_26177D8 = (uint64_t)"LESS_THAN_2HLESS_THAN_30MLESS_THAN_4HMORE_THAN_4HTTL_INITIAL_TRAVEL_TIME_BUCKET_UNKNOWN";
  unk_26177E0 = 12;
  dword_26177E8 = 4;
  qword_26177F8 = 13;
  qword_26177C0 = (uint64_t)"LESS_THAN_1HLESS_THAN_2HLESS_THAN_30MLESS_THAN_4HMORE_THAN_4HTTL_INITIAL_TRAVEL_TIME_BUCKET_UNKNOWN";
  unk_26177C8 = 12;
  qword_26177A8 = (uint64_t)"LESS_THAN_15MLESS_THAN_1HLESS_THAN_2HLESS_THAN_30MLESS_THAN_4HMORE_THAN_4HTTL_INITIAL_TRAVEL_"
                           "TIME_BUCKET_UNKNOWN";
  unk_26177B0 = 13;
  dword_26177B8 = 1;
  dword_26177D0 = 3;
  qword_2617748 = (uint64_t)"BOTH_SHOWNEARLY_SHOWNON_TIME_SHOWNTTL_UI_NOTIFICATION_NONE_SHOWN";
  unk_2617750 = 10;
  qword_2617780 = 13;
  dword_2617788 = 2;
  qword_2617798 = 30;
  dword_26177A0 = 0;
  dword_2617758 = 3;
  qword_2617768 = 11;
  dword_2617770 = 1;
  qword_2617688 = (uint64_t)"DID_NOT_ARRIVEDID_NOT_DEPARTEARLIER_THAN_22MEARLIER_THAN_7MLATER_THAN_22MLATER_THAN_7MON_TIME"
                           "TIME_TO_LEAVE_BUCKET_UNKNOWN";
  unk_2617690 = 14;
  dword_2617698 = 6;
  qword_26176A8 = 14;
  dword_26176B0 = 7;
  qword_2617720 = 7;
  dword_2617728 = 3;
  qword_2617738 = 28;
  dword_2617740 = 0;
  qword_26176C0 = 16;
  dword_26176C8 = 1;
  qword_26176D8 = 15;
  dword_26176F8 = 5;
  qword_2617708 = 13;
  dword_2617710 = 4;
  dword_26176E0 = 2;
  qword_26176F0 = 14;
  qword_2617D78 = (uint64_t)"ElementType_MODULE_TYPE_PLACECARD_ENRICHMENTElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617D90 = (uint64_t)"ElementType_MODULE_TYPE_PLACE_BROWSE_CATEGORIESElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617DA8 = (uint64_t)"ElementType_MODULE_TYPE_PLACE_QUESTIONNAIREElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617DC0 = (uint64_t)"ElementType_MODULE_TYPE_PLACE_RIBBONElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617DD8 = (uint64_t)"ElementType_MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617DF0 = (uint64_t)"ElementType_MODULE_TYPE_QUICK_LINKSElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617E08 = (uint64_t)"ElementType_MODULE_TYPE_RELATED_PLACE_LISTElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617E20 = (uint64_t)"ElementType_MODULE_TYPE_RESERVATIONSElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617E38 = (uint64_t)"ElementType_MODULE_TYPE_REVIEWSElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617E50 = (uint64_t)"ElementType_MODULE_TYPE_REVIEW_AND_RATINGElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617E68 = (uint64_t)"ElementType_MODULE_TYPE_SERVICE_HOURSElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617E80 = (uint64_t)"ElementType_MODULE_TYPE_TEMPLATE_PLACEElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617E98 = (uint64_t)"ElementType_MODULE_TYPE_TITLEElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617EB0 = (uint64_t)"ElementType_MODULE_TYPE_TRANSIT_ATTRIBUTIONElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617EC8 = (uint64_t)"ElementType_MODULE_TYPE_TRANSIT_DEPARTUREElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617EE0 = (uint64_t)"ElementType_MODULE_TYPE_TRANSIT_LABELSElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617EF8 = (uint64_t)"ElementType_MODULE_TYPE_UNIFIED_ACTION_ROWElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617F10 = (uint64_t)"ElementType_MODULE_TYPE_VENUE_BROWSEElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617F28 = (uint64_t)"ElementType_MODULE_TYPE_VENUE_INFOElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617F40 = (uint64_t)"ElementType_MODULE_TYPE_WEB_CONTENTElementType_UNKNOWN";
  qword_2617F58 = (uint64_t)"ElementType_UNKNOWN";
  qword_2617D68 = 30;
  dword_2617D70 = 5;
  qword_2617D80 = 44;
  dword_2617D88 = 40;
  qword_2617D98 = 47;
  dword_2617DA0 = 30;
  qword_2617DB0 = 43;
  dword_2617DB8 = 33;
  qword_2617DC8 = 36;
  dword_2617DD0 = 35;
  qword_2617DE0 = 48;
  dword_2617DE8 = 42;
  qword_2617DF8 = 35;
  dword_2617E00 = 28;
  qword_2617E10 = 42;
  dword_2617E18 = 26;
  qword_2617E28 = 36;
  dword_2617E30 = 14;
  qword_2617E40 = 31;
  dword_2617E48 = 12;
  qword_2617E58 = 41;
  dword_2617E60 = 36;
  qword_2617E70 = 37;
  dword_2617E78 = 27;
  qword_2617E88 = 38;
  dword_2617E90 = 38;
  qword_2617EA0 = 29;
  dword_2617EA8 = 2;
  qword_2617EB8 = 43;
  dword_2617EC0 = 8;
  qword_2617ED0 = 41;
  dword_2617ED8 = 7;
  qword_2617EE8 = 38;
  dword_2617EF0 = 39;
  qword_2617F00 = 42;
  dword_2617F08 = 41;
  qword_2617F18 = 36;
  dword_2617F20 = 16;
  qword_2617F30 = 34;
  dword_2617F38 = 17;
  qword_2617F48 = 35;
  dword_2617F50 = 25;
  qword_2617F60 = 19;
  dword_2617F68 = 0;
  qword_2617F88 = (uint64_t)"ImpressionEventType_UNKNOWNImpressionEventType_VISIBLE";
  qword_2617F70 = (uint64_t)"ImpressionEventType_NONVISIBLEImpressionEventType_UNKNOWNImpressionEventType_VISIBLE";
  *(void *)algn_2617F78 = 30;
  dword_2617F80 = 2;
  qword_2617F90 = 27;
  dword_2617F98 = 0;
  qword_2617FA0 = (uint64_t)"ImpressionEventType_VISIBLE";
  unk_2617FA8 = 27;
  dword_2617FB0 = 1;
  qword_2617FD0 = (uint64_t)"ElementSource_PLACECARD_TRAYElementSource_UNKNOWN";
  unk_2617FD8 = 28;
  qword_2617FB8 = (uint64_t)"ElementSource_MAPS_SEARCHElementSource_PLACECARD_TRAYElementSource_UNKNOWN";
  unk_2617FC0 = 25;
  dword_2617FC8 = 1;
  dword_2617FE0 = 2;
  qword_2617FE8 = (uint64_t)"ElementSource_UNKNOWN";
  unk_2617FF0 = 21;
  dword_2617FF8 = 0;
  qword_2618018 = (uint64_t)"CLUSTERED_POIENRICHED_POISTANDARD_POI";
  unk_2618020 = 13;
  qword_2618030 = (uint64_t)"ENRICHED_POISTANDARD_POI";
  qword_2618000 = (uint64_t)"CLUSTERED_ENRICHED_POICLUSTERED_POIENRICHED_POISTANDARD_POI";
  *(void *)algn_2618008 = 22;
  dword_2618010 = 3;
  dword_2618028 = 1;
  qword_2618038 = 12;
  dword_2618040 = 2;
  qword_2618048 = (uint64_t)"STANDARD_POI";
  unk_2618050 = 12;
  dword_2618058 = 0;
  qword_2618078 = (uint64_t)"LINK_TYPE_APP_EXTENSIONLINK_TYPE_QUICK_LINKLINK_TYPE_UNKNOWN";
  qword_2618090 = (uint64_t)"LINK_TYPE_QUICK_LINKLINK_TYPE_UNKNOWN";
  qword_26180A8 = (uint64_t)"LINK_TYPE_UNKNOWN";
  unk_26180B0 = 17;
  qword_2618060 = (uint64_t)"LINK_TYPE_APP_CLIP_LINKLINK_TYPE_APP_EXTENSIONLINK_TYPE_QUICK_LINKLINK_TYPE_UNKNOWN";
  *(void *)algn_2618068 = 23;
  dword_2618070 = 2;
  qword_2618080 = 23;
  dword_2618088 = 3;
  qword_2618098 = 20;
  dword_26180A0 = 1;
  dword_26180B8 = 0;
  qword_26180D8 = (uint64_t)"CELLULAR_DATA_STATE_DISABLED_FOR_MAPSCELLULAR_DATA_STATE_DISABLED_GLOBALLYCELLULAR_DATA_STATE_NOT_SUPPORTEDCELLULAR_DATA_STATE_UNKNOWN";
  qword_26180F0 = (uint64_t)"CELLULAR_DATA_STATE_DISABLED_GLOBALLYCELLULAR_DATA_STATE_NOT_SUPPORTEDCELLULAR_DATA_STATE_UNKNOWN";
  qword_2618108 = (uint64_t)"CELLULAR_DATA_STATE_NOT_SUPPORTEDCELLULAR_DATA_STATE_UNKNOWN";
  unk_2618110 = 33;
  qword_2618120 = (uint64_t)"CELLULAR_DATA_STATE_UNKNOWN";
  unk_2618128 = 27;
  qword_26180C0 = (uint64_t)"CELLULAR_DATA_STATE_ALLOWEDCELLULAR_DATA_STATE_DISABLED_FOR_MAPSCELLULAR_DATA_STATE_DISABLED_"
                           "GLOBALLYCELLULAR_DATA_STATE_NOT_SUPPORTEDCELLULAR_DATA_STATE_UNKNOWN";
  *(void *)algn_26180C8 = 27;
  dword_26180D0 = 1;
  qword_26180E0 = 37;
  dword_26180E8 = 2;
  qword_26180F8 = 37;
  dword_2618100 = 3;
  dword_2618118 = 4;
  dword_2618130 = 0;
  qword_2618150 = (uint64_t)"NO_AUTHPRECISEUNKNOWN";
  qword_2618168 = (uint64_t)"PRECISEUNKNOWN";
  qword_2618180 = (uint64_t)"UNKNOWN";
  qword_2618138 = (uint64_t)"COARSENO_AUTHPRECISEUNKNOWN";
  unk_2618140 = 6;
  dword_2618148 = 3;
  qword_2618158 = 7;
  dword_2618160 = 1;
  qword_2618170 = 7;
  dword_2618178 = 2;
  qword_2618188 = 7;
  dword_2618190 = 0;
  qword_26181B0 = (uint64_t)"LEVEL_INCIDENTSLEVEL_NONELEVEL_UNKNOWN";
  qword_26181C8 = (uint64_t)"LEVEL_NONELEVEL_UNKNOWN";
  qword_26181E0 = (uint64_t)"LEVEL_UNKNOWN";
  unk_26181E8 = 13;
  qword_2618198 = (uint64_t)"LEVEL_FULLLEVEL_INCIDENTSLEVEL_NONELEVEL_UNKNOWN";
  qword_26181A0 = 10;
  dword_26181A8 = 3;
  qword_26181B8 = 15;
  dword_26181C0 = 2;
  qword_26181D0 = 10;
  dword_26181D8 = 1;
  dword_26181F0 = 0;
  qword_2618210 = (uint64_t)"FULLMODERATESMALL";
  qword_2618228 = (uint64_t)"MODERATESMALL";
  qword_26181F8 = (uint64_t)"DEFAULTFULLMODERATESMALL";
  unk_2618200 = 7;
  dword_2618208 = 2;
  qword_2618218 = 4;
  dword_2618220 = 1;
  qword_2618230 = 8;
  dword_2618238 = 3;
  qword_2618240 = (uint64_t)"SMALL";
  unk_2618248 = 5;
  dword_2618250 = 4;
  qword_2618270 = (uint64_t)"MAP_TYPE_HYBRIDMAP_TYPE_HYBRID_FLYOVERMAP_TYPE_NONEMAP_TYPE_SATELLITEMAP_TYPE_SATELLITE_FLYOVERMAP_TYPE_STANDARDMAP_TYPE_TERRAINMAP_TYPE_TRANSIT";
  unk_2618278 = 15;
  qword_2618288 = (uint64_t)"MAP_TYPE_HYBRID_FLYOVERMAP_TYPE_NONEMAP_TYPE_SATELLITEMAP_TYPE_SATELLITE_FLYOVERMAP_TYPE_STANDARDMAP_TYPE_TERRAINMAP_TYPE_TRANSIT";
  unk_2618290 = 23;
  qword_26182A0 = (uint64_t)"MAP_TYPE_NONEMAP_TYPE_SATELLITEMAP_TYPE_SATELLITE_FLYOVERMAP_TYPE_STANDARDMAP_TYPE_TERRAINMAP_TYPE_TRANSIT";
  unk_26182A8 = 13;
  qword_26182B8 = (uint64_t)"MAP_TYPE_SATELLITEMAP_TYPE_SATELLITE_FLYOVERMAP_TYPE_STANDARDMAP_TYPE_TERRAINMAP_TYPE_TRANSIT";
  qword_26182D0 = (uint64_t)"MAP_TYPE_SATELLITE_FLYOVERMAP_TYPE_STANDARDMAP_TYPE_TERRAINMAP_TYPE_TRANSIT";
  unk_26182D8 = 26;
  qword_26182E8 = (uint64_t)"MAP_TYPE_STANDARDMAP_TYPE_TERRAINMAP_TYPE_TRANSIT";
  unk_26182F0 = 17;
  qword_2618300 = (uint64_t)"MAP_TYPE_TERRAINMAP_TYPE_TRANSIT";
  qword_2618318 = (uint64_t)"MAP_TYPE_TRANSIT";
  qword_2618258 = (uint64_t)"MAP_TYPE_DRIVINGMAP_TYPE_HYBRIDMAP_TYPE_HYBRID_FLYOVERMAP_TYPE_NONEMAP_TYPE_SATELLITEMAP_TYPE"
                           "_SATELLITE_FLYOVERMAP_TYPE_STANDARDMAP_TYPE_TERRAINMAP_TYPE_TRANSIT";
  qword_2618260 = 16;
  dword_2618268 = 8;
  dword_2618280 = 3;
  dword_2618298 = 6;
  dword_26182B0 = 0;
  qword_26182C0 = 18;
  dword_26182C8 = 2;
  dword_26182E0 = 7;
  dword_26182F8 = 1;
  qword_2618308 = 16;
  dword_2618310 = 5;
  qword_2618320 = 16;
  dword_2618328 = 4;
  qword_2618348 = (uint64_t)"MapLaunchAction_DirectionActionMapLaunchAction_DisplayModeNavActionMapLaunchAction_ErrorActionMapLaunchAction_ForwardGeocodeActionMapLaunchAction_LowFuelActionMapLaunchAction_MarkUserLocationActionMapLaunchAction_NewWindowActionMapLaunchAction_NotificationRestorationActionMapLaunchAction_OpenLookAroundActionMapLaunchAction_PlaceRefinementActionMapLaunchAction_PresentAnnouncementActionMapLaunchAction_PresentFlyoverActionMapLaunchAction_PresentNavShareETAActionMapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618360 = (uint64_t)"MapLaunchAction_DisplayModeNavActionMapLaunchAction_ErrorActionMapLaunchAction_ForwardGeocodeActionMapLaunchAction_LowFuelActionMapLaunchAction_MarkUserLocationActionMapLaunchAction_NewWindowActionMapLaunchAction_NotificationRestorationActionMapLaunchAction_OpenLookAroundActionMapLaunchAction_PlaceRefinementActionMapLaunchAction_PresentAnnouncementActionMapLaunchAction_PresentFlyoverActionMapLaunchAction_PresentNavShareETAActionMapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618378 = (uint64_t)"MapLaunchAction_ErrorActionMapLaunchAction_ForwardGeocodeActionMapLaunchAction_LowFuelActionMapLaunchAction_MarkUserLocationActionMapLaunchAction_NewWindowActionMapLaunchAction_NotificationRestorationActionMapLaunchAction_OpenLookAroundActionMapLaunchAction_PlaceRefinementActionMapLaunchAction_PresentAnnouncementActionMapLaunchAction_PresentFlyoverActionMapLaunchAction_PresentNavShareETAActionMapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618390 = (uint64_t)"MapLaunchAction_ForwardGeocodeActionMapLaunchAction_LowFuelActionMapLaunchAction_MarkUserLocationActionMapLaunchAction_NewWindowActionMapLaunchAction_NotificationRestorationActionMapLaunchAction_OpenLookAroundActionMapLaunchAction_PlaceRefinementActionMapLaunchAction_PresentAnnouncementActionMapLaunchAction_PresentFlyoverActionMapLaunchAction_PresentNavShareETAActionMapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_26183A8 = (uint64_t)"MapLaunchAction_LowFuelActionMapLaunchAction_MarkUserLocationActionMapLaunchAction_NewWindowActionMapLaunchAction_NotificationRestorationActionMapLaunchAction_OpenLookAroundActionMapLaunchAction_PlaceRefinementActionMapLaunchAction_PresentAnnouncementActionMapLaunchAction_PresentFlyoverActionMapLaunchAction_PresentNavShareETAActionMapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_26183C0 = (uint64_t)"MapLaunchAction_MarkUserLocationActionMapLaunchAction_NewWindowActionMapLaunchAction_NotificationRestorationActionMapLaunchAction_OpenLookAroundActionMapLaunchAction_PlaceRefinementActionMapLaunchAction_PresentAnnouncementActionMapLaunchAction_PresentFlyoverActionMapLaunchAction_PresentNavShareETAActionMapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_26183D8 = (uint64_t)"MapLaunchAction_NewWindowActionMapLaunchAction_NotificationRestorationActionMapLaunchAction_OpenLookAroundActionMapLaunchAction_PlaceRefinementActionMapLaunchAction_PresentAnnouncementActionMapLaunchAction_PresentFlyoverActionMapLaunchAction_PresentNavShareETAActionMapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_26183F0 = (uint64_t)"MapLaunchAction_NotificationRestorationActionMapLaunchAction_OpenLookAroundActionMapLaunchAction_PlaceRefinementActionMapLaunchAction_PresentAnnouncementActionMapLaunchAction_PresentFlyoverActionMapLaunchAction_PresentNavShareETAActionMapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618408 = (uint64_t)"MapLaunchAction_OpenLookAroundActionMapLaunchAction_PlaceRefinementActionMapLaunchAction_PresentAnnouncementActionMapLaunchAction_PresentFlyoverActionMapLaunchAction_PresentNavShareETAActionMapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618420 = (uint64_t)"MapLaunchAction_PlaceRefinementActionMapLaunchAction_PresentAnnouncementActionMapLaunchAction_PresentFlyoverActionMapLaunchAction_PresentNavShareETAActionMapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618438 = (uint64_t)"MapLaunchAction_PresentAnnouncementActionMapLaunchAction_PresentFlyoverActionMapLaunchAction_PresentNavShareETAActionMapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618450 = (uint64_t)"MapLaunchAction_PresentFlyoverActionMapLaunchAction_PresentNavShareETAActionMapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618468 = (uint64_t)"MapLaunchAction_PresentNavShareETAActionMapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618480 = (uint64_t)"MapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618498 = (uint64_t)"MapLaunchAction_PresentParkedCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_26184B0 = (uint64_t)"MapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_26184C8 = (uint64_t)"MapLaunchAction_PresentRAPActionMapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_26184E0 = (uint64_t)"MapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_26184F8 = (uint64_t)"MapLaunchAction_RefineMapItemActionMapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618510 = (uint64_t)"MapLaunchAction_ReportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618528 = (uint64_t)"MapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618540 = (uint64_t)"MapLaunchAction_ResolveMUIDActionMapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618558 = (uint64_t)"MapLaunchAction_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchAction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripActionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsActionMapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchAction_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActionMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationActionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  qword_2618330 = (uint64_t)"MapLaunchAction_BrandActionMapLaunchAction_DirectionActionMapLaunchAction_DisplayModeNavActio"
                           "nMapLaunchAction_ErrorActionMapLaunchAction_ForwardGeocodeActionMapLaunchAction_LowFuelAction"
                           "MapLaunchAction_MarkUserLocationActionMapLaunchAction_NewWindowActionMapLaunchAction_Notifica"
                           "tionRestorationActionMapLaunchAction_OpenLookAroundActionMapLaunchAction_PlaceRefinementActio"
                           "nMapLaunchAction_PresentAnnouncementActionMapLaunchAction_PresentFlyoverActionMapLaunchAction"
                           "_PresentNavShareETAActionMapLaunchAction_PresentNearbySearchActionMapLaunchAction_PresentPark"
                           "edCarActionMapLaunchAction_PresentPhotoThumbnailGalleryActionMapLaunchAction_PresentRAPAction"
                           "MapLaunchAction_PresentTableBookingActionMapLaunchAction_RefineMapItemActionMapLaunchAction_R"
                           "eportIncidentActionMapLaunchAction_ResetActionMapLaunchAction_ResolveMUIDActionMapLaunchActio"
                           "n_RestorationActionMapLaunchAction_ReverseGeocodeActionMapLaunchAction_SearchActionMapLaunchA"
                           "ction_SearchSelectionActionMapLaunchAction_ShareUserLocationActionMapLaunchAction_SharedTripA"
                           "ctionMapLaunchAction_ShowAllCuratedCollectionsActionMapLaunchAction_ShowCarDestinationsAction"
                           "MapLaunchAction_ShowCollectionActionMapLaunchAction_ShowCuratedCollectionActionMapLaunchActio"
                           "n_ShowKeyboardActionMapLaunchAction_ShowLPROnboardingActionMapLaunchAction_ShowPublisherActio"
                           "nMapLaunchAction_ShowSearchInfoActionMapLaunchAction_ShowcaseMapLaunchAction_SiriRestorationA"
                           "ctionMapLaunchAction_URLRestorationActionMapLaunchAction_UnknownMapLaunchAction_ZoomMapAction";
  *(void *)algn_2618338 = 27;
  dword_2618340 = 5;
  qword_2618350 = 31;
  dword_2618358 = 6;
  qword_2618368 = 36;
  dword_2618370 = 7;
  qword_2618380 = 27;
  dword_2618388 = 8;
  qword_2618398 = 36;
  dword_26183A0 = 9;
  qword_26183B0 = 29;
  dword_26183B8 = 10;
  qword_26183C8 = 38;
  dword_26183D0 = 11;
  qword_26183E0 = 31;
  dword_26183E8 = 36;
  qword_26183F8 = 45;
  dword_2618400 = 12;
  qword_2618410 = 36;
  dword_2618418 = 13;
  qword_2618428 = 37;
  dword_2618430 = 14;
  qword_2618440 = 41;
  dword_2618448 = 15;
  qword_2618458 = 36;
  dword_2618460 = 16;
  qword_2618470 = 40;
  dword_2618478 = 17;
  qword_2618488 = 41;
  dword_2618490 = 18;
  qword_26184A0 = 38;
  dword_26184A8 = 19;
  qword_26184B8 = 50;
  dword_26184C0 = 21;
  qword_26184D0 = 32;
  dword_26184D8 = 20;
  qword_26184E8 = 41;
  dword_26184F0 = 22;
  qword_2618500 = 35;
  dword_2618508 = 23;
  qword_2618518 = 36;
  dword_2618520 = 38;
  qword_2618530 = 27;
  dword_2618538 = 24;
  qword_2618548 = 33;
  dword_2618550 = 25;
  qword_2618CF0 = (uint64_t)"TILETRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  qword_2618D08 = (uint64_t)"TRAFFIC_ETAWIFI_QUALITYWIFI_TILE";
  qword_2618D20 = (uint64_t)"WIFI_QUALITYWIFI_TILE";
  qword_2618D38 = (uint64_t)"WIFI_TILE";
  qword_2618CE0 = 4;
  dword_2618CE8 = 22;
  qword_2618CF8 = 4;
  dword_2618D00 = 5;
  qword_2618D10 = 11;
  dword_2618D18 = 6;
  qword_2618D28 = 12;
  dword_2618D30 = 23;
  qword_2618D40 = 9;
  dword_2618D48 = 27;
  qword_2618D68 = (uint64_t)"HANDOVERINTERACTIVENONE";
  unk_2618D70 = 8;
  qword_2618D80 = (uint64_t)"INTERACTIVENONE";
  unk_2618D88 = 11;
  qword_2618D98 = (uint64_t)"NONE";
  unk_2618DA0 = 4;
  qword_2618D50 = (uint64_t)"AGGREGATEHANDOVERINTERACTIVENONE";
  *(void *)algn_2618D58 = 9;
  dword_2618D60 = 3;
  dword_2618D78 = 1;
  dword_2618D90 = 2;
  dword_2618DA8 = 0;
  qword_2618DC8 = (uint64_t)"PROTOCOL_TYPE_HTTP_2_TCPPROTOCOL_TYPE_HTTP_2_TLSPROTOCOL_TYPE_OTHERPROTOCOL_TYPE_SPDY_1PROTOCOL_TYPE_SPDY_2PROTOCOL_TYPE_SPDY_3";
  qword_2618DE0 = (uint64_t)"PROTOCOL_TYPE_HTTP_2_TLSPROTOCOL_TYPE_OTHERPROTOCOL_TYPE_SPDY_1PROTOCOL_TYPE_SPDY_2PROTOCOL_TYPE_SPDY_3";
  qword_2618DF8 = (uint64_t)"PROTOCOL_TYPE_OTHERPROTOCOL_TYPE_SPDY_1PROTOCOL_TYPE_SPDY_2PROTOCOL_TYPE_SPDY_3";
  unk_2618E00 = 19;
  qword_2618E10 = (uint64_t)"PROTOCOL_TYPE_SPDY_1PROTOCOL_TYPE_SPDY_2PROTOCOL_TYPE_SPDY_3";
  qword_2618E28 = (uint64_t)"PROTOCOL_TYPE_SPDY_2PROTOCOL_TYPE_SPDY_3";
  qword_2618E40 = (uint64_t)"PROTOCOL_TYPE_SPDY_3";
  qword_2618DB0 = (uint64_t)"PROTOCOL_TYPE_HTTP_1_1PROTOCOL_TYPE_HTTP_2_TCPPROTOCOL_TYPE_HTTP_2_TLSPROTOCOL_TYPE_OTHERPROT"
                           "OCOL_TYPE_SPDY_1PROTOCOL_TYPE_SPDY_2PROTOCOL_TYPE_SPDY_3";
  *(void *)algn_2618DB8 = 22;
  dword_2618DC0 = 1;
  qword_2618DD0 = 24;
  dword_2618DD8 = 3;
  qword_2618DE8 = 24;
  dword_2618DF0 = 2;
  dword_2618E08 = 0;
  qword_2618E18 = 20;
  dword_2618E20 = 4;
  qword_2618E30 = 20;
  dword_2618E38 = 5;
  qword_2618E48 = 20;
  dword_2618E50 = 6;
  qword_2618E70 = (uint64_t)"RESOURCE_FETCH_TYPE_NETWORK_LOADRESOURCE_FETCH_TYPE_SERVER_PUSHRESOURCE_FETCH_TYPE_UNKNOWN";
  unk_2618E78 = 32;
  qword_2618E88 = (uint64_t)"RESOURCE_FETCH_TYPE_SERVER_PUSHRESOURCE_FETCH_TYPE_UNKNOWN";
  qword_2618EA0 = (uint64_t)"RESOURCE_FETCH_TYPE_UNKNOWN";
  unk_2618EA8 = 27;
  qword_2618E58 = (uint64_t)"RESOURCE_FETCH_TYPE_LOCAL_CACHERESOURCE_FETCH_TYPE_NETWORK_LOADRESOURCE_FETCH_TYPE_SERVER_PUS"
                           "HRESOURCE_FETCH_TYPE_UNKNOWN";
  qword_2618E60 = 31;
  dword_2618E68 = 3;
  dword_2618E80 = 1;
  qword_2618E90 = 31;
  dword_2618E98 = 2;
  dword_2618EB0 = 0;
  qword_2618ED0 = (uint64_t)"TILE_CACHEUNKNOWN_CACHE_TYPE";
  qword_2618EE8 = (uint64_t)"UNKNOWN_CACHE_TYPE";
  unk_2618EF0 = 18;
  qword_2618EB8 = (uint64_t)"LOCATION_SHIFT_CACHETILE_CACHEUNKNOWN_CACHE_TYPE";
  unk_2618EC0 = 20;
  dword_2618EC8 = 2;
  qword_2618ED8 = 10;
  dword_2618EE0 = 1;
  dword_2618EF8 = 0;
  qword_2618F18 = (uint64_t)"STALE_USABLEUNAVAILABLEUNKNOWN";
  unk_2618F20 = 12;
  qword_2618F30 = (uint64_t)"UNAVAILABLEUNKNOWN";
  qword_2618F00 = (uint64_t)"STALE_UNUSABLESTALE_USABLEUNAVAILABLEUNKNOWN";
  *(void *)algn_2618F08 = 14;
  dword_2618F10 = 2;
  dword_2618F28 = 3;
  qword_2618F38 = 11;
  dword_2618F40 = 1;
  qword_2618F48 = (uint64_t)"UNKNOWN";
  unk_2618F50 = 7;
  dword_2618F58 = 0;
  qword_2618F78 = (uint64_t)"NAVPROACTIVEPROACTIVE_REFRESHPROACTIVE_REGIONPROACTIVE_REGION_AND_REFRESHUNKNOWN";
  qword_2618F90 = (uint64_t)"PROACTIVEPROACTIVE_REFRESHPROACTIVE_REGIONPROACTIVE_REGION_AND_REFRESHUNKNOWN";
  unk_2618F98 = 9;
  qword_2618FA8 = (uint64_t)"PROACTIVE_REFRESHPROACTIVE_REGIONPROACTIVE_REGION_AND_REFRESHUNKNOWN";
  unk_2618FB0 = 17;
  qword_2618FC0 = (uint64_t)"PROACTIVE_REGIONPROACTIVE_REGION_AND_REFRESHUNKNOWN";
  qword_2618FD8 = (uint64_t)"PROACTIVE_REGION_AND_REFRESHUNKNOWN";
  qword_2618FF0 = (uint64_t)"UNKNOWN";
  unk_2618FF8 = 7;
  qword_2618F60 = (uint64_t)"INTERACTIVENAVPROACTIVEPROACTIVE_REFRESHPROACTIVE_REGIONPROACTIVE_REGION_AND_REFRESHUNKNOWN";
  *(void *)algn_2618F68 = 11;
  dword_2618F70 = 1;
  qword_2618F80 = 3;
  dword_2618F88 = 2;
  dword_2618FA0 = 3;
  dword_2618FB8 = 5;
  qword_2618FC8 = 16;
  dword_2618FD0 = 4;
  qword_2618FE0 = 28;
  dword_2618FE8 = 6;
  dword_2619000 = 0;
  qword_2619020 = (uint64_t)"ERROR_TYPE_NO_NETWORKERROR_TYPE_TIMEOUTERROR_TYPE_UNKNOWN";
  qword_2619038 = (uint64_t)"ERROR_TYPE_TIMEOUTERROR_TYPE_UNKNOWN";
  qword_2619008 = (uint64_t)"ERROR_TYPE_LOST_CONNECTIVITYERROR_TYPE_NO_NETWORKERROR_TYPE_TIMEOUTERROR_TYPE_UNKNOWN";
  unk_2619010 = 28;
  dword_2619018 = 4;
  qword_2619028 = 21;
  dword_2619030 = 2;
  qword_2619040 = 18;
  dword_2619048 = 3;
  qword_2619050 = (uint64_t)"ERROR_TYPE_UNKNOWN";
  unk_2619058 = 18;
  dword_2619060 = 1;
  qword_2619080 = (uint64_t)"GRID_END_STATE_COMPLETEGRID_END_STATE_ERRORGRID_END_STATE_UNKNOWN";
  qword_2619098 = (uint64_t)"GRID_END_STATE_ERRORGRID_END_STATE_UNKNOWN";
  unk_26190A0 = 20;
  qword_26190B0 = (uint64_t)"GRID_END_STATE_UNKNOWN";
  unk_26190B8 = 22;
  qword_2619068 = (uint64_t)"GRID_END_STATE_CANCELEDGRID_END_STATE_COMPLETEGRID_END_STATE_ERRORGRID_END_STATE_UNKNOWN";
  qword_2619070 = 23;
  dword_2619078 = 3;
  qword_2619088 = 23;
  dword_2619090 = 1;
  dword_26190A8 = 2;
  dword_26190C0 = 0;
  qword_26190E0 = (uint64_t)"PREVIOUS_STATE_MAPPREVIOUS_STATE_NONE";
  unk_26190E8 = 18;
  qword_26190C8 = (uint64_t)"PREVIOUS_STATE_GRIDPREVIOUS_STATE_MAPPREVIOUS_STATE_NONE";
  qword_26190D0 = 19;
  dword_26190D8 = 2;
  dword_26190F0 = 3;
  qword_26190F8 = (uint64_t)"PREVIOUS_STATE_NONE";
  unk_2619100 = 19;
  dword_2619108 = 1;
  qword_2619128 = (uint64_t)"DISPLAY_TYPE_NAVIGATION";
  unk_2619130 = 23;
  qword_2619110 = (uint64_t)"DISPLAY_TYPE_MAPDISPLAY_TYPE_NAVIGATION";
  *(void *)algn_2619118 = 16;
  dword_2619120 = 1;
  dword_2619138 = 2;
  qword_2619158 = (uint64_t)"MUNIN_MOVE_LOCATION";
  unk_2619160 = 19;
  qword_2619140 = (uint64_t)"MUNIN_ENTER_LOCATIONMUNIN_MOVE_LOCATION";
  *(void *)algn_2619148 = 20;
  dword_2619150 = 0;
  dword_2619168 = 1;
  qword_2619188 = (uint64_t)"ThrottleType_SPECIFICThrottleType_UNDEFINED";
  unk_2619190 = 21;
  qword_26191A0 = (uint64_t)"ThrottleType_UNDEFINED";
  unk_26191A8 = 22;
  qword_2619170 = (uint64_t)"ThrottleType_ALLThrottleType_SPECIFICThrottleType_UNDEFINED";
  *(void *)algn_2619178 = 16;
  dword_2619180 = 1;
  dword_2619198 = 2;
  dword_26191B0 = 0;
  qword_26191D0 = (uint64_t)"ThrottleMode_SHORT_INTERVALThrottleMode_UNDEFINED";
  unk_26191D8 = 27;
  qword_26191E8 = (uint64_t)"ThrottleMode_UNDEFINED";
  unk_26191F0 = 22;
  qword_26191B8 = (uint64_t)"ThrottleMode_LONG_INTERVALThrottleMode_SHORT_INTERVALThrottleMode_UNDEFINED";
  unk_26191C0 = 26;
  dword_26191C8 = 2;
  dword_26191E0 = 1;
  dword_26191F8 = 0;
  qword_2619218 = (uint64_t)"MAP_KIT_COUNT_TYPE_MAP_VIEW_FOREGROUNDEDMAP_KIT_COUNT_TYPE_PLACECARD_SHOWNMAP_KIT_COUNT_TYPE_SNAPSHOTTER_USED";
  unk_2619220 = 40;
  qword_2619230 = (uint64_t)"MAP_KIT_COUNT_TYPE_PLACECARD_SHOWNMAP_KIT_COUNT_TYPE_SNAPSHOTTER_USED";
  qword_2619200 = (uint64_t)"MAP_KIT_COUNT_TYPE_END_SENTINELMAP_KIT_COUNT_TYPE_MAP_VIEW_FOREGROUNDEDMAP_KIT_COUNT_TYPE_PLA"
                           "CECARD_SHOWNMAP_KIT_COUNT_TYPE_SNAPSHOTTER_USED";
  *(void *)algn_2619208 = 31;
  dword_2619210 = 3;
  dword_2619228 = 0;
  qword_2619238 = 34;
  dword_2619240 = 2;
  qword_2619248 = (uint64_t)"MAP_KIT_COUNT_TYPE_SNAPSHOTTER_USED";
  unk_2619250 = 35;
  dword_2619258 = 1;
  qword_2619278 = (uint64_t)"MAP_KIT_COUNTS_APP_TYPE_END_SENTINELMAP_KIT_COUNTS_APP_TYPE_FIRST_PARTYMAP_KIT_COUNTS_APP_TYPE_SECOND_PARTYMAP_KIT_COUNTS_APP_TYPE_THIRD_PARTY";
  qword_2619290 = (uint64_t)"MAP_KIT_COUNTS_APP_TYPE_FIRST_PARTYMAP_KIT_COUNTS_APP_TYPE_SECOND_PARTYMAP_KIT_COUNTS_APP_TYPE_THIRD_PARTY";
  qword_26192A8 = (uint64_t)"MAP_KIT_COUNTS_APP_TYPE_SECOND_PARTYMAP_KIT_COUNTS_APP_TYPE_THIRD_PARTY";
  qword_26192C0 = (uint64_t)"MAP_KIT_COUNTS_APP_TYPE_THIRD_PARTY";
  qword_2619260 = (uint64_t)"MAP_KIT_COUNTS_APP_TYPE_DAEMONSMAP_KIT_COUNTS_APP_TYPE_END_SENTINELMAP_KIT_COUNTS_APP_TYPE_FI"
                           "RST_PARTYMAP_KIT_COUNTS_APP_TYPE_SECOND_PARTYMAP_KIT_COUNTS_APP_TYPE_THIRD_PARTY";
  *(void *)algn_2619268 = 31;
  dword_2619270 = 3;
  qword_2619280 = 36;
  dword_2619288 = 4;
  qword_2619298 = 35;
  dword_26192A0 = 0;
  qword_26192B0 = 36;
  dword_26192B8 = 1;
  qword_26192C8 = 35;
  dword_26192D0 = 2;
  qword_26192F0 = (uint64_t)"MSG_ENTRY_TYPE_CALENDAR_EVENTMSG_ENTRY_TYPE_CARPLAY_LOW_ENERGYMSG_ENTRY_TYPE_CAR_RENTALMSG_ENTRY_TYPE_FAVORITE_PLACEMSG_ENTRY_TYPE_FREQUENT_LOCATIONMSG_ENTRY_TYPE_HOMEMSG_ENTRY_TYPE_HOTELMSG_ENTRY_TYPE_PARKED_CARMSG_ENTRY_TYPE_PORTRAITMSG_ENTRY_TYPE_RECENT_HISTORYMSG_ENTRY_TYPE_RESTAURANT_RESERVATIONMSG_ENTRY_TYPE_RESUME_ROUTEMSG_ENTRY_TYPE_RIDESHARINGMSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_2619308 = (uint64_t)"MSG_ENTRY_TYPE_CARPLAY_LOW_ENERGYMSG_ENTRY_TYPE_CAR_RENTALMSG_ENTRY_TYPE_FAVORITE_PLACEMSG_ENTRY_TYPE_FREQUENT_LOCATIONMSG_ENTRY_TYPE_HOMEMSG_ENTRY_TYPE_HOTELMSG_ENTRY_TYPE_PARKED_CARMSG_ENTRY_TYPE_PORTRAITMSG_ENTRY_TYPE_RECENT_HISTORYMSG_ENTRY_TYPE_RESTAURANT_RESERVATIONMSG_ENTRY_TYPE_RESUME_ROUTEMSG_ENTRY_TYPE_RIDESHARINGMSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_2619320 = (uint64_t)"MSG_ENTRY_TYPE_CAR_RENTALMSG_ENTRY_TYPE_FAVORITE_PLACEMSG_ENTRY_TYPE_FREQUENT_LOCATIONMSG_ENTRY_TYPE_HOMEMSG_ENTRY_TYPE_HOTELMSG_ENTRY_TYPE_PARKED_CARMSG_ENTRY_TYPE_PORTRAITMSG_ENTRY_TYPE_RECENT_HISTORYMSG_ENTRY_TYPE_RESTAURANT_RESERVATIONMSG_ENTRY_TYPE_RESUME_ROUTEMSG_ENTRY_TYPE_RIDESHARINGMSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_2619338 = (uint64_t)"MSG_ENTRY_TYPE_FAVORITE_PLACEMSG_ENTRY_TYPE_FREQUENT_LOCATIONMSG_ENTRY_TYPE_HOMEMSG_ENTRY_TYPE_HOTELMSG_ENTRY_TYPE_PARKED_CARMSG_ENTRY_TYPE_PORTRAITMSG_ENTRY_TYPE_RECENT_HISTORYMSG_ENTRY_TYPE_RESTAURANT_RESERVATIONMSG_ENTRY_TYPE_RESUME_ROUTEMSG_ENTRY_TYPE_RIDESHARINGMSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_2619350 = (uint64_t)"MSG_ENTRY_TYPE_FREQUENT_LOCATIONMSG_ENTRY_TYPE_HOMEMSG_ENTRY_TYPE_HOTELMSG_ENTRY_TYPE_PARKED_CARMSG_ENTRY_TYPE_PORTRAITMSG_ENTRY_TYPE_RECENT_HISTORYMSG_ENTRY_TYPE_RESTAURANT_RESERVATIONMSG_ENTRY_TYPE_RESUME_ROUTEMSG_ENTRY_TYPE_RIDESHARINGMSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_2619368 = (uint64_t)"MSG_ENTRY_TYPE_HOMEMSG_ENTRY_TYPE_HOTELMSG_ENTRY_TYPE_PARKED_CARMSG_ENTRY_TYPE_PORTRAITMSG_ENTRY_TYPE_RECENT_HISTORYMSG_ENTRY_TYPE_RESTAURANT_RESERVATIONMSG_ENTRY_TYPE_RESUME_ROUTEMSG_ENTRY_TYPE_RIDESHARINGMSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_2619380 = (uint64_t)"MSG_ENTRY_TYPE_HOTELMSG_ENTRY_TYPE_PARKED_CARMSG_ENTRY_TYPE_PORTRAITMSG_ENTRY_TYPE_RECENT_HISTORYMSG_ENTRY_TYPE_RESTAURANT_RESERVATIONMSG_ENTRY_TYPE_RESUME_ROUTEMSG_ENTRY_TYPE_RIDESHARINGMSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_2619398 = (uint64_t)"MSG_ENTRY_TYPE_PARKED_CARMSG_ENTRY_TYPE_PORTRAITMSG_ENTRY_TYPE_RECENT_HISTORYMSG_ENTRY_TYPE_RESTAURANT_RESERVATIONMSG_ENTRY_TYPE_RESUME_ROUTEMSG_ENTRY_TYPE_RIDESHARINGMSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_26193B0 = (uint64_t)"MSG_ENTRY_TYPE_PORTRAITMSG_ENTRY_TYPE_RECENT_HISTORYMSG_ENTRY_TYPE_RESTAURANT_RESERVATIONMSG_ENTRY_TYPE_RESUME_ROUTEMSG_ENTRY_TYPE_RIDESHARINGMSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_26193C8 = (uint64_t)"MSG_ENTRY_TYPE_RECENT_HISTORYMSG_ENTRY_TYPE_RESTAURANT_RESERVATIONMSG_ENTRY_TYPE_RESUME_ROUTEMSG_ENTRY_TYPE_RIDESHARINGMSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_26193E0 = (uint64_t)"MSG_ENTRY_TYPE_RESTAURANT_RESERVATIONMSG_ENTRY_TYPE_RESUME_ROUTEMSG_ENTRY_TYPE_RIDESHARINGMSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_26193F8 = (uint64_t)"MSG_ENTRY_TYPE_RESUME_ROUTEMSG_ENTRY_TYPE_RIDESHARINGMSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_2619410 = (uint64_t)"MSG_ENTRY_TYPE_RIDESHARINGMSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_2619428 = (uint64_t)"MSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_2619440 = (uint64_t)"MSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_2619458 = (uint64_t)"MSG_ENTRY_TYPE_UNKNOWNMSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_2619470 = (uint64_t)"MSG_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_2619488 = (uint64_t)"MSG_ENTRY_TYPE_WORK";
  qword_26192D8 = (uint64_t)"MSG_ENTRY_TYPE_APP_CONNECTIONMSG_ENTRY_TYPE_CALENDAR_EVENTMSG_ENTRY_TYPE_CARPLAY_LOW_ENERGYMS"
                           "G_ENTRY_TYPE_CAR_RENTALMSG_ENTRY_TYPE_FAVORITE_PLACEMSG_ENTRY_TYPE_FREQUENT_LOCATIONMSG_ENTRY"
                           "_TYPE_HOMEMSG_ENTRY_TYPE_HOTELMSG_ENTRY_TYPE_PARKED_CARMSG_ENTRY_TYPE_PORTRAITMSG_ENTRY_TYPE_"
                           "RECENT_HISTORYMSG_ENTRY_TYPE_RESTAURANT_RESERVATIONMSG_ENTRY_TYPE_RESUME_ROUTEMSG_ENTRY_TYPE_"
                           "RIDESHARINGMSG_ENTRY_TYPE_TICKETED_EVENTMSG_ENTRY_TYPE_TRAVEL_FLIGHTMSG_ENTRY_TYPE_UNKNOWNMSG"
                           "_ENTRY_TYPE_USER_PLACEMSG_ENTRY_TYPE_WORK";
  qword_26192E0 = 29;
  dword_26192E8 = 12;
  qword_26192F8 = 29;
  dword_2619300 = 3;
  qword_2619310 = 33;
  dword_2619318 = 10;
  qword_2619328 = 25;
  dword_2619330 = 14;
  qword_2619340 = 29;
  dword_2619348 = 6;
  qword_2619358 = 32;
  dword_2619360 = 4;
  qword_2619370 = 19;
  dword_2619378 = 1;
  qword_2619388 = 20;
  dword_2619390 = 13;
  qword_26193A0 = 25;
  dword_26193A8 = 7;
  qword_26193B8 = 23;
  dword_26193C0 = 17;
  qword_26193D0 = 29;
  dword_26193D8 = 5;
  qword_26193E8 = 37;
  dword_26193F0 = 8;
  qword_2619400 = 27;
  dword_2619408 = 11;
  qword_2619418 = 26;
  dword_2619420 = 9;
  qword_2619430 = 29;
  dword_2619438 = 16;
  qword_2619448 = 28;
  dword_2619450 = 15;
  qword_2619460 = 22;
  dword_2619468 = 0;
  qword_2619478 = 25;
  dword_2619480 = 18;
  qword_2619490 = 19;
  dword_2619498 = 2;
  qword_26194B8 = (uint64_t)"MSG_DISTANCE_BUCKET_UNKNOWNMSG_DISTANCE_BUCKET_VERY_NEARMSG_DISTANCE_BUCKET_WALKING_DISTANCE";
  qword_26194D0 = (uint64_t)"MSG_DISTANCE_BUCKET_VERY_NEARMSG_DISTANCE_BUCKET_WALKING_DISTANCE";
  qword_26194E8 = (uint64_t)"MSG_DISTANCE_BUCKET_WALKING_DISTANCE";
  qword_2619518 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_BLOWING_SNOWMSG_WEATHER_TYPE_CONDITION_BLUSTERYMSG_WEATHER_TYPE_CONDITION_CLEARMSG_WEATHER_TYPE_CONDITION_CLOUDYMSG_WEATHER_TYPE_CONDITION_COLDMSG_WEATHER_TYPE_CONDITION_DRIZZLEMSG_WEATHER_TYPE_CONDITION_DUSTMSG_WEATHER_TYPE_CONDITION_FOGGYMSG_WEATHER_TYPE_CONDITION_FREEZING_DRIZZLEMSG_WEATHER_TYPE_CONDITION_FREEZING_RAINMSG_WEATHER_TYPE_CONDITION_HAILMSG_WEATHER_TYPE_CONDITION_HAZEMSG_WEATHER_TYPE_CONDITION_HEAVY_RAINMSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_2619530 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_BLUSTERYMSG_WEATHER_TYPE_CONDITION_CLEARMSG_WEATHER_TYPE_CONDITION_CLOUDYMSG_WEATHER_TYPE_CONDITION_COLDMSG_WEATHER_TYPE_CONDITION_DRIZZLEMSG_WEATHER_TYPE_CONDITION_DUSTMSG_WEATHER_TYPE_CONDITION_FOGGYMSG_WEATHER_TYPE_CONDITION_FREEZING_DRIZZLEMSG_WEATHER_TYPE_CONDITION_FREEZING_RAINMSG_WEATHER_TYPE_CONDITION_HAILMSG_WEATHER_TYPE_CONDITION_HAZEMSG_WEATHER_TYPE_CONDITION_HEAVY_RAINMSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_2619548 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_CLEARMSG_WEATHER_TYPE_CONDITION_CLOUDYMSG_WEATHER_TYPE_CONDITION_COLDMSG_WEATHER_TYPE_CONDITION_DRIZZLEMSG_WEATHER_TYPE_CONDITION_DUSTMSG_WEATHER_TYPE_CONDITION_FOGGYMSG_WEATHER_TYPE_CONDITION_FREEZING_DRIZZLEMSG_WEATHER_TYPE_CONDITION_FREEZING_RAINMSG_WEATHER_TYPE_CONDITION_HAILMSG_WEATHER_TYPE_CONDITION_HAZEMSG_WEATHER_TYPE_CONDITION_HEAVY_RAINMSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_2619560 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_CLOUDYMSG_WEATHER_TYPE_CONDITION_COLDMSG_WEATHER_TYPE_CONDITION_DRIZZLEMSG_WEATHER_TYPE_CONDITION_DUSTMSG_WEATHER_TYPE_CONDITION_FOGGYMSG_WEATHER_TYPE_CONDITION_FREEZING_DRIZZLEMSG_WEATHER_TYPE_CONDITION_FREEZING_RAINMSG_WEATHER_TYPE_CONDITION_HAILMSG_WEATHER_TYPE_CONDITION_HAZEMSG_WEATHER_TYPE_CONDITION_HEAVY_RAINMSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_2619590 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_DRIZZLEMSG_WEATHER_TYPE_CONDITION_DUSTMSG_WEATHER_TYPE_CONDITION_FOGGYMSG_WEATHER_TYPE_CONDITION_FREEZING_DRIZZLEMSG_WEATHER_TYPE_CONDITION_FREEZING_RAINMSG_WEATHER_TYPE_CONDITION_HAILMSG_WEATHER_TYPE_CONDITION_HAZEMSG_WEATHER_TYPE_CONDITION_HEAVY_RAINMSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  dword_2619CA8 = 3;
  qword_261A9E8 = (uint64_t)&aAccidentConfir[549];
  dword_261ABD8 = 225;
  qword_261AC18 = 30;
  dword_261AC08 = 121;
  qword_261AC10 = (uint64_t)"CURATED_COLLECTION_ITEM_TAPPEDCURATED_COLLECTION_REMOVEDCURATED_COLLECTION_SAVEDCURATED_COLLECTION_SHAREDCURATED_COLLECTION_SHOWNCURATED_HIKE_SAVEDCUSTOM_HIKE_CREATION_TRAY_SHOWNCUSTOM_HIKE_SAVEDDEVICE_CONNECTEDDIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AC00 = 30;
  qword_261ABE0 = (uint64_t)"CURATED_COLLECTIONS_HOME_CONDENSED_SHOWNCURATED_COLLECTIONS_HOME_SHOWNCURATED_COLLECTION_ITEM_TAPPEDCURATED_COLLECTION_REMOVEDCURATED_COLLECTION_SAVEDCURATED_COLLECTION_SHAREDCURATED_COLLECTION_SHOWNCURATED_HIKE_SAVEDCUSTOM_HIKE_CREATION_TRAY_SHOWNCUSTOM_HIKE_SAVEDDEVICE_CONNECTEDDIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261ABF0 = 122;
  qword_261ABF8 = (uint64_t)"CURATED_COLLECTIONS_HOME_SHOWNCURATED_COLLECTION_ITEM_TAPPEDCURATED_COLLECTION_REMOVEDCURATED_COLLECTION_SAVEDCURATED_COLLECTION_SHAREDCURATED_COLLECTION_SHOWNCURATED_HIKE_SAVEDCUSTOM_HIKE_CREATION_TRAY_SHOWNCUSTOM_HIKE_SAVEDDEVICE_CONNECTEDDIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261ABE8 = 40;
  qword_261ABC8 = (uint64_t)"COMPLETE_DOWNLOAD_OFFLINE_MAPSCURATED_COLLECTIONS_HOME_CONDENSED_SHOWNCURATED_COLLECTIONS_HOME_SHOWNCURATED_COLLECTION_ITEM_TAPPEDCURATED_COLLECTION_REMOVEDCURATED_COLLECTION_SAVEDCURATED_COLLECTION_SHAREDCURATED_COLLECTION_SHOWNCURATED_HIKE_SAVEDCUSTOM_HIKE_CREATION_TRAY_SHOWNCUSTOM_HIKE_SAVEDDEVICE_CONNECTEDDIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261ABB8 = 16;
  dword_261ABC0 = 28;
  qword_261ABD0 = 30;
  qword_261AB98 = (uint64_t)"COLLECTION_SHAREDCOLLECTION_SHOWNCOMPLETE_DOWNLOAD_OFFLINE_MAPSCURATED_COLLECTIONS_HOME_CONDENSED_SHOWNCURATED_COLLECTIONS_HOME_SHOWNCURATED_COLLECTION_ITEM_TAPPEDCURATED_COLLECTION_REMOVEDCURATED_COLLECTION_SAVEDCURATED_COLLECTION_SHAREDCURATED_COLLECTION_SHOWNCURATED_HIKE_SAVEDCUSTOM_HIKE_CREATION_TRAY_SHOWNCUSTOM_HIKE_SAVEDDEVICE_CONNECTEDDIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261ABB0 = (uint64_t)"COLLECTION_SHOWNCOMPLETE_DOWNLOAD_OFFLINE_MAPSCURATED_COLLECTIONS_HOME_CONDENSED_SHOWNCURATED_COLLECTIONS_HOME_SHOWNCURATED_COLLECTION_ITEM_TAPPEDCURATED_COLLECTION_REMOVEDCURATED_COLLECTION_SAVEDCURATED_COLLECTION_SHAREDCURATED_COLLECTION_SHOWNCURATED_HIKE_SAVEDCUSTOM_HIKE_CREATION_TRAY_SHOWNCUSTOM_HIKE_SAVEDDEVICE_CONNECTEDDIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AB90 = 26;
  qword_261ABA0 = 17;
  dword_261ABA8 = 27;
  qword_261AB80 = (uint64_t)&aAccidentConfir[947];
  qword_261AB70 = 18;
  dword_261AB78 = 25;
  qword_261AB88 = 22;
  qword_261AB50 = (uint64_t)&aAccidentConfir[909];
  qword_261AB68 = (uint64_t)&aAccidentConfir[929];
  qword_261AB58 = 20;
  dword_261AB60 = 24;
  dword_261AB30 = 199;
  qword_261AB38 = (uint64_t)&aAccidentConfir[887];
  qword_261AB40 = 22;
  dword_261AB48 = 200;
  dword_261AAD0 = 119;
  qword_261AB20 = (uint64_t)&aAccidentConfir[864];
  qword_261AB10 = 17;
  dword_261AB18 = 23;
  qword_261AB28 = 23;
  qword_261AAF0 = (uint64_t)&aAccidentConfir[821];
  qword_261AB08 = (uint64_t)&aAccidentConfir[847];
  qword_261AAF8 = 26;
  dword_261AB00 = 22;
  qword_261AAD8 = (uint64_t)&aAccidentConfir[790];
  dword_261AAE8 = 120;
  qword_261AAE0 = 31;
  dword_261AAB8 = 118;
  qword_261AAC0 = (uint64_t)&aAccidentConfir[760];
  qword_261AAB0 = 33;
  qword_261AAC8 = 30;
  dword_261AA70 = 192;
  qword_261AAA8 = (uint64_t)&aAccidentConfir[727];
  qword_261AA98 = 13;
  dword_261AAA0 = 21;
  qword_261AA78 = (uint64_t)&aAccidentConfir[693];
  dword_261AA88 = 193;
  qword_261AA90 = (uint64_t)&aAccidentConfir[714];
  qword_261AA80 = 21;
  qword_261AA60 = (uint64_t)&aAccidentConfir[673];
  qword_261AA50 = 13;
  dword_261AA58 = 20;
  qword_261AA68 = 20;
  qword_261AA30 = (uint64_t)&aAccidentConfir[634];
  qword_261AA48 = (uint64_t)&aAccidentConfir[660];
  dword_261AA28 = 18;
  qword_261AA38 = 26;
  dword_261AA40 = 19;
  qword_261AA18 = (uint64_t)&aAccidentConfir[607];
  qword_261AA08 = 27;
  dword_261AA10 = 17;
  qword_261AA20 = 27;
  qword_261AA00 = (uint64_t)&aAccidentConfir[580];
  qword_261A9D0 = (uint64_t)&aAccidentConfir[516];
  unk_261A9D8 = 33;
  qword_261A9F0 = 31;
  dword_261A9F8 = 16;
  dword_261A9E0 = 15;
  qword_261A7D8 = (uint64_t)"LOG_DISCARD_TRIGGER_UNSPECIFIED";
  qword_261A9B8 = (uint64_t)&aAccidentConfir[489];
  unk_261A9C0 = 27;
  dword_261A9C8 = 14;
  dword_261A980 = 202;
  qword_261A9A0 = (uint64_t)&aAccidentConfir[462];
  unk_261A9A8 = 27;
  dword_261A998 = 12;
  dword_261A9B0 = 13;
  qword_261A988 = (uint64_t)&aAccidentConfir[427];
  qword_261A970 = (uint64_t)&aAccidentConfir[408];
  unk_261A978 = 19;
  qword_261A990 = 35;
  dword_261A950 = 10;
  qword_261A958 = (uint64_t)&aAccidentConfir[379];
  unk_261A960 = 29;
  dword_261A968 = 11;
  qword_261A940 = (uint64_t)&aAccidentConfir[349];
  qword_261A928 = (uint64_t)&aAccidentConfir[319];
  qword_261A930 = 30;
  dword_261A938 = 9;
  qword_261A948 = 30;
  qword_261A910 = (uint64_t)&aAccidentConfir[285];
  unk_261A918 = 34;
  dword_261A908 = 7;
  dword_261A920 = 8;
  qword_261A8F8 = (uint64_t)&aAccidentConfir[249];
  qword_261A8E0 = (uint64_t)&aAccidentConfir[219];
  unk_261A8E8 = 30;
  dword_261A8F0 = 6;
  qword_261A900 = 36;
  qword_261A8C8 = (uint64_t)&aAccidentConfir[189];
  unk_261A8D0 = 30;
  dword_261A8C0 = 4;
  dword_261A8D8 = 5;
  qword_261A8B0 = (uint64_t)&aAccidentConfir[151];
  qword_261A898 = (uint64_t)&aAccidentConfir[129];
  unk_261A8A0 = 22;
  dword_261A8A8 = 201;
  qword_261A8B8 = 38;
  dword_261A890 = 180;
  qword_261A880 = (uint64_t)&aAccidentConfir[109];
  unk_261A888 = 20;
  dword_261A848 = 177;
  dword_261A878 = 179;
  qword_261A868 = (uint64_t)&aAccidentConfir[94];
  unk_261A870 = 15;
  dword_261A860 = 178;
  qword_261A850 = (uint64_t)&aAccidentConfir[73];
  unk_261A858 = 21;
  qword_261A838 = (uint64_t)&aAccidentConfir[57];
  unk_261A840 = 16;
  qword_261A820 = (uint64_t)&aAccidentConfir[40];
  unk_261A828 = 17;
  dword_261A830 = 3;
  qword_261A808 = (uint64_t)&aAccidentConfir[21];
  unk_261A810 = 19;
  qword_261A7F0 = (uint64_t)aAccidentConfir;
  *(void *)algn_261A7F8 = 21;
  dword_261A800 = 1;
  dword_261A818 = 2;
  qword_261A7C0 = (uint64_t)"LOG_DISCARD_TRIGGER_RAPLOG_DISCARD_TRIGGER_UNSPECIFIED";
  unk_261A7C8 = 23;
  qword_261A7E0 = 31;
  dword_261A7E8 = 0;
  dword_261A7D0 = 2;
  qword_261A748 = (uint64_t)"VLFFinalState_FAILED_TO_INITIALIZEVLFFinalState_SUCCEEDEDVLFFinalState_UNKNOWNVLFFinalState_USER_ABANDONED";
  qword_261A7A8 = (uint64_t)"LOG_DISCARD_TRIGGER_POI_ENRICHMENTLOG_DISCARD_TRIGGER_RAPLOG_DISCARD_TRIGGER_UNSPECIFIED";
  unk_261A7B0 = 34;
  dword_261A7B8 = 1;
  dword_261A7A0 = 2;
  qword_261A790 = (uint64_t)"VLFFinalState_USER_ABANDONED";
  unk_261A798 = 28;
  qword_261A778 = (uint64_t)"VLFFinalState_UNKNOWNVLFFinalState_USER_ABANDONED";
  unk_261A780 = 21;
  dword_261A788 = 0;
  qword_261A730 = (uint64_t)"VLFFinalState_FAILEDVLFFinalState_FAILED_TO_INITIALIZEVLFFinalState_SUCCEEDEDVLFFinalState_UN"
                           "KNOWNVLFFinalState_USER_ABANDONED";
  *(void *)algn_261A738 = 20;
  qword_261A760 = (uint64_t)"VLFFinalState_SUCCEEDEDVLFFinalState_UNKNOWNVLFFinalState_USER_ABANDONED";
  unk_261A768 = 23;
  dword_261A758 = 1;
  dword_261A770 = 4;
  dword_261A740 = 3;
  qword_261A750 = 34;
  qword_261A718 = (uint64_t)"VLFDeviceOrientationType_UNKNOWN";
  unk_261A720 = 32;
  dword_261A728 = 0;
  qword_261A700 = (uint64_t)"VLFDeviceOrientationType_OUT_OF_POCKETVLFDeviceOrientationType_UNKNOWN";
  unk_261A708 = 38;
  qword_261A6E8 = (uint64_t)"VLFDeviceOrientationType_IN_POCKETVLFDeviceOrientationType_OUT_OF_POCKETVLFDeviceOrientationType_UNKNOWN";
  unk_261A6F0 = 34;
  dword_261A710 = 1;
  dword_261A6F8 = 2;
  qword_261A5E0 = (uint64_t)"VLFARGeoTrackingStateReason_GEO_DATA_NOT_LOADEDVLFARGeoTrackingStateReason_NEED_LOCATION_PERMISSIONSVLFARGeoTrackingStateReason_NONEVLFARGeoTrackingStateReason_NOT_AVAILABLE_AT_LOCATIONVLFARGeoTrackingStateReason_UNKNOWNVLFARGeoTrackingStateReason_VISUAL_LOCALIZATION_FAILEDVLFARGeoTrackingStateReason_WAITING_FOR_AVAILABILITY_CHECKVLFARGeoTrackingStateReason_WAITING_FOR_LOCATIONVLFARGeoTrackingStateReason_WORLD_TRACKING_UNSTABLE";
  dword_261A6C8 = 3;
  qword_261A6D0 = (uint64_t)"VLFDeviceOrientationType_FACE_DOWN_ON_TABLEVLFDeviceOrientationType_IN_POCKETVLFDeviceOrientationType_OUT_OF_POCKETVLFDeviceOrientationType_UNKNOWN";
  unk_261A6D8 = 43;
  dword_261A6E0 = 4;
  qword_261A6B8 = (uint64_t)"VLFDeviceOrientationType_FACE_DOWNVLFDeviceOrientationType_FACE_DOWN_ON_TABLEVLFDeviceOrienta"
                           "tionType_IN_POCKETVLFDeviceOrientationType_OUT_OF_POCKETVLFDeviceOrientationType_UNKNOWN";
  unk_261A6C0 = 34;
  qword_261A6A0 = (uint64_t)"VLFARGeoTrackingStateReason_WORLD_TRACKING_UNSTABLE";
  qword_261A6A8 = 51;
  dword_261A6B0 = 4;
  qword_261A688 = (uint64_t)"VLFARGeoTrackingStateReason_WAITING_FOR_LOCATIONVLFARGeoTrackingStateReason_WORLD_TRACKING_UNSTABLE";
  dword_261A680 = 6;
  qword_261A690 = 48;
  dword_261A698 = 5;
  qword_261A670 = (uint64_t)"VLFARGeoTrackingStateReason_WAITING_FOR_AVAILABILITY_CHECKVLFARGeoTrackingStateReason_WAITING_FOR_LOCATIONVLFARGeoTrackingStateReason_WORLD_TRACKING_UNSTABLE";
  qword_261A658 = (uint64_t)"VLFARGeoTrackingStateReason_VISUAL_LOCALIZATION_FAILEDVLFARGeoTrackingStateReason_WAITING_FOR_AVAILABILITY_CHECKVLFARGeoTrackingStateReason_WAITING_FOR_LOCATIONVLFARGeoTrackingStateReason_WORLD_TRACKING_UNSTABLE";
  unk_261A660 = 54;
  dword_261A668 = 9;
  qword_261A678 = 58;
  dword_261A638 = 2;
  qword_261A640 = (uint64_t)"VLFARGeoTrackingStateReason_UNKNOWNVLFARGeoTrackingStateReason_VISUAL_LOCALIZATION_FAILEDVLFARGeoTrackingStateReason_WAITING_FOR_AVAILABILITY_CHECKVLFARGeoTrackingStateReason_WAITING_FOR_LOCATIONVLFARGeoTrackingStateReason_WORLD_TRACKING_UNSTABLE";
  unk_261A648 = 35;
  dword_261A650 = 0;
  qword_261A628 = (uint64_t)"VLFARGeoTrackingStateReason_NOT_AVAILABLE_AT_LOCATIONVLFARGeoTrackingStateReason_UNKNOWNVLFARGeoTrackingStateReason_VISUAL_LOCALIZATION_FAILEDVLFARGeoTrackingStateReason_WAITING_FOR_AVAILABILITY_CHECKVLFARGeoTrackingStateReason_WAITING_FOR_LOCATIONVLFARGeoTrackingStateReason_WORLD_TRACKING_UNSTABLE";
  qword_261A610 = (uint64_t)"VLFARGeoTrackingStateReason_NONEVLFARGeoTrackingStateReason_NOT_AVAILABLE_AT_LOCATIONVLFARGeoTrackingStateReason_UNKNOWNVLFARGeoTrackingStateReason_VISUAL_LOCALIZATION_FAILEDVLFARGeoTrackingStateReason_WAITING_FOR_AVAILABILITY_CHECKVLFARGeoTrackingStateReason_WAITING_FOR_LOCATIONVLFARGeoTrackingStateReason_WORLD_TRACKING_UNSTABLE";
  unk_261A618 = 32;
  dword_261A620 = 1;
  qword_261A630 = 53;
  qword_261A5C8 = (uint64_t)"VLFARGeoTrackingStateReason_DEVICE_POINTED_TOO_LOWVLFARGeoTrackingStateReason_GEO_DATA_NOT_LO"
                           "ADEDVLFARGeoTrackingStateReason_NEED_LOCATION_PERMISSIONSVLFARGeoTrackingStateReason_NONEVLFA"
                           "RGeoTrackingStateReason_NOT_AVAILABLE_AT_LOCATIONVLFARGeoTrackingStateReason_UNKNOWNVLFARGeoT"
                           "rackingStateReason_VISUAL_LOCALIZATION_FAILEDVLFARGeoTrackingStateReason_WAITING_FOR_AVAILABI"
                           "LITY_CHECKVLFARGeoTrackingStateReason_WAITING_FOR_LOCATIONVLFARGeoTrackingStateReason_WORLD_T"
                           "RACKING_UNSTABLE";
  qword_261A5F8 = (uint64_t)"VLFARGeoTrackingStateReason_NEED_LOCATION_PERMISSIONSVLFARGeoTrackingStateReason_NONEVLFARGeoTrackingStateReason_NOT_AVAILABLE_AT_LOCATIONVLFARGeoTrackingStateReason_UNKNOWNVLFARGeoTrackingStateReason_VISUAL_LOCALIZATION_FAILEDVLFARGeoTrackingStateReason_WAITING_FOR_AVAILABILITY_CHECKVLFARGeoTrackingStateReason_WAITING_FOR_LOCATIONVLFARGeoTrackingStateReason_WORLD_TRACKING_UNSTABLE";
  unk_261A600 = 53;
  dword_261A5F0 = 7;
  dword_261A608 = 3;
  dword_261A5D8 = 8;
  qword_261A5E8 = 47;
  qword_261A5D0 = 50;
  qword_261A5B0 = (uint64_t)"VLFARGeoTrackingState_UNKNOWN";
  unk_261A5B8 = 29;
  dword_261A5C0 = 0;
  qword_261A598 = (uint64_t)"VLFARGeoTrackingState_NOT_AVAILABLEVLFARGeoTrackingState_UNKNOWN";
  unk_261A5A0 = 35;
  qword_261A580 = (uint64_t)"VLFARGeoTrackingState_LOCALIZINGVLFARGeoTrackingState_NOT_AVAILABLEVLFARGeoTrackingState_UNKNOWN";
  unk_261A588 = 32;
  dword_261A5A8 = 1;
  dword_261A590 = 3;
  qword_2619C20 = (uint64_t)"EARLIER_THAN_7MLATER_THAN_22MLATER_THAN_7MON_TIMETIME_TO_LEAVE_BUCKET_UNKNOWN";
  qword_261A550 = (uint64_t)"VLFARGeoTrackingState_INITIALIZINGVLFARGeoTrackingState_LOCALIZEDVLFARGeoTrackingState_LOCALI"
                           "ZINGVLFARGeoTrackingState_NOT_AVAILABLEVLFARGeoTrackingState_UNKNOWN";
  *(void *)algn_261A558 = 34;
  qword_261A568 = (uint64_t)"VLFARGeoTrackingState_LOCALIZEDVLFARGeoTrackingState_LOCALIZINGVLFARGeoTrackingState_NOT_AVAILABLEVLFARGeoTrackingState_UNKNOWN";
  unk_261A570 = 31;
  dword_261A578 = 4;
  dword_261A560 = 2;
  dword_261A530 = 12;
  qword_261A538 = (uint64_t)"VLFFailureReason_UNKNOWN";
  unk_261A540 = 24;
  dword_261A548 = 0;
  qword_261A520 = (uint64_t)"VLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  qword_261A508 = (uint64_t)"VLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  qword_261A510 = 36;
  dword_261A518 = 11;
  qword_261A528 = 36;
  qword_261A4F0 = (uint64_t)"VLFFailureReason_POSE_REJECTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  unk_261A4F8 = 34;
  dword_261A4E8 = 9;
  dword_261A500 = 5;
  qword_261A4D8 = (uint64_t)"VLFFailureReason_POSE_REJECTED_SCOREVLFFailureReason_POSE_REJECTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  unk_261A4E0 = 36;
  qword_261A4C0 = (uint64_t)"VLFFailureReason_POSE_REJECTED_HEIGHTVLFFailureReason_POSE_REJECTED_SCOREVLFFailureReason_POSE_REJECTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  unk_261A4C8 = 37;
  dword_261A4D0 = 6;
  qword_2619C80 = (uint64_t)"TIME_TO_LEAVE_BUCKET_UNKNOWN";
  qword_261A4A8 = (uint64_t)"VLFFailureReason_POSE_REJECTED_GRAVITYVLFFailureReason_POSE_REJECTED_HEIGHTVLFFailureReason_POSE_REJECTED_SCOREVLFFailureReason_POSE_REJECTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  unk_261A4B0 = 38;
  dword_261A4B8 = 7;
  qword_2619C88 = 28;
  dword_2619C90 = 0;
  qword_2619C98 = (uint64_t)"BOTH_SHOWNEARLY_SHOWNON_TIME_SHOWNTTL_UI_NOTIFICATION_NONE_SHOWN";
  dword_261A4A0 = 8;
  qword_2619C68 = (uint64_t)"ON_TIMETIME_TO_LEAVE_BUCKET_UNKNOWN";
  unk_2619C70 = 7;
  dword_2619C60 = 4;
  dword_2619C78 = 3;
  qword_2619C50 = (uint64_t)"LATER_THAN_7MON_TIMETIME_TO_LEAVE_BUCKET_UNKNOWN";
  qword_2619C38 = (uint64_t)"LATER_THAN_22MLATER_THAN_7MON_TIMETIME_TO_LEAVE_BUCKET_UNKNOWN";
  unk_2619C40 = 14;
  dword_2619C48 = 5;
  qword_2619C58 = 13;
  qword_2619C08 = (uint64_t)"EARLIER_THAN_22MEARLIER_THAN_7MLATER_THAN_22MLATER_THAN_7MON_TIMETIME_TO_LEAVE_BUCKET_UNKNOWN";
  unk_2619C10 = 16;
  dword_2619C18 = 1;
  qword_2619C28 = 15;
  dword_2619C30 = 2;
  qword_2619BD8 = (uint64_t)"DID_NOT_ARRIVEDID_NOT_DEPARTEARLIER_THAN_22MEARLIER_THAN_7MLATER_THAN_22MLATER_THAN_7MON_TIME"
                           "TIME_TO_LEAVE_BUCKET_UNKNOWN";
  qword_2619BE0 = 14;
  qword_2619BF0 = (uint64_t)"DID_NOT_DEPARTEARLIER_THAN_22MEARLIER_THAN_7MLATER_THAN_22MLATER_THAN_7MON_TIMETIME_TO_LEAVE_BUCKET_UNKNOWN";
  unk_2619BF8 = 14;
  dword_2619C00 = 7;
  dword_2619BE8 = 6;
  qword_2619BA8 = (uint64_t)"NAV_MODE_TYPE_LIGHT_GUIDANCENAV_MODE_TYPE_UNKNOWN";
  unk_2619BB0 = 28;
  qword_2619BC0 = (uint64_t)"NAV_MODE_TYPE_UNKNOWN";
  dword_2619BB8 = 1;
  qword_2619BC8 = 21;
  dword_2619BD0 = 0;
  qword_2619B90 = (uint64_t)"NAV_MODE_TYPE_FULL_GUIDANCENAV_MODE_TYPE_LIGHT_GUIDANCENAV_MODE_TYPE_UNKNOWN";
  *(void *)algn_2619B98 = 27;
  dword_2619BA0 = 2;
  dword_2619B70 = 0;
  qword_2619B78 = (uint64_t)"TREADSTONE_TRIGGERED";
  unk_2619B80 = 20;
  dword_2619B88 = 1;
  qword_2619AD0 = (uint64_t)"MARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  qword_2619B60 = (uint64_t)"MARCO_LITE_TRIGGEREDTREADSTONE_TRIGGERED";
  *(void *)algn_2619B68 = 20;
  qword_2619B50 = 25;
  dword_2619B58 = 18;
  qword_2619B30 = (uint64_t)"MARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  qword_2619B48 = (uint64_t)"MARCO_DISABLED_REASON_VLF";
  dword_2619B28 = 22;
  qword_2619B38 = 38;
  dword_2619B40 = 19;
  qword_2619B18 = (uint64_t)"MARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  qword_2619B08 = 27;
  dword_2619B10 = 17;
  qword_2619B20 = 37;
  qword_2619B00 = (uint64_t)"MARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  dword_2619AE0 = 20;
  qword_2619AE8 = (uint64_t)"MARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_2619AF0 = 39;
  dword_2619AF8 = 5;
  qword_2619AB8 = (uint64_t)"MARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_2619AC0 = 50;
  dword_2619AC8 = 23;
  qword_2619AD8 = 39;
  qword_2619A88 = (uint64_t)"MARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_2619A90 = 39;
  dword_2619A98 = 1;
  qword_2619AA0 = (uint64_t)"MARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_2619AA8 = 36;
  dword_2619AB0 = 21;
  qword_2619A70 = (uint64_t)"MARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_2619A78 = 43;
  dword_2619A80 = 0;
  qword_2619A40 = (uint64_t)"MARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  qword_2619A58 = (uint64_t)"MARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_2619A60 = 54;
  dword_2619A50 = 4;
  dword_2619A68 = 3;
  qword_2619A28 = (uint64_t)"MARCO_DISABLED_REASON_ARTRACKINGSTATE_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_2619A30 = 55;
  dword_2619A38 = 2;
  qword_2619A48 = 47;
  qword_26199F8 = (uint64_t)"MARCO_DISABLED_INITIALIZATION_FAILEDMARCO_DISABLED_REASON_APP_BACKGROUNDMARCO_DISABLED_REASON_ARTRACKINGSTATE_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_2619A00 = 36;
  qword_2619A10 = (uint64_t)"MARCO_DISABLED_REASON_APP_BACKGROUNDMARCO_DISABLED_REASON_ARTRACKINGSTATE_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_2619A18 = 36;
  dword_2619A08 = 16;
  dword_2619A20 = 24;
  qword_26199E0 = (uint64_t)"MARCO_DISABLED_END_NAVMARCO_DISABLED_INITIALIZATION_FAILEDMARCO_DISABLED_REASON_APP_BACKGROUNDMARCO_DISABLED_REASON_ARTRACKINGSTATE_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_26199E8 = 22;
  dword_26199F0 = 15;
  qword_26199B0 = (uint64_t)"MARCO_AR_TRACKING_NORMALMARCO_AR_TRACKING_NOT_AVAILABLEMARCO_DISABLED_END_NAVMARCO_DISABLED_INITIALIZATION_FAILEDMARCO_DISABLED_REASON_APP_BACKGROUNDMARCO_DISABLED_REASON_ARTRACKINGSTATE_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_26199B8 = 24;
  dword_26199C0 = 6;
  qword_26199C8 = (uint64_t)"MARCO_AR_TRACKING_NOT_AVAILABLEMARCO_DISABLED_END_NAVMARCO_DISABLED_INITIALIZATION_FAILEDMARCO_DISABLED_REASON_APP_BACKGROUNDMARCO_DISABLED_REASON_ARTRACKINGSTATE_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_26199D0 = 31;
  dword_26199D8 = 11;
  qword_2619998 = (uint64_t)"MARCO_AR_TRACKING_LIMITED_RELOCALIZINGMARCO_AR_TRACKING_NORMALMARCO_AR_TRACKING_NOT_AVAILABLEMARCO_DISABLED_END_NAVMARCO_DISABLED_INITIALIZATION_FAILEDMARCO_DISABLED_REASON_APP_BACKGROUNDMARCO_DISABLED_REASON_ARTRACKINGSTATE_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_26199A0 = 38;
  dword_26199A8 = 10;
  qword_2619968 = (uint64_t)"MARCO_AR_TRACKING_LIMITED_INSUFFICIENT_FEATURESMARCO_AR_TRACKING_LIMITED_LOW_LIGHTMARCO_AR_TRACKING_LIMITED_RELOCALIZINGMARCO_AR_TRACKING_NORMALMARCO_AR_TRACKING_NOT_AVAILABLEMARCO_DISABLED_END_NAVMARCO_DISABLED_INITIALIZATION_FAILEDMARCO_DISABLED_REASON_APP_BACKGROUNDMARCO_DISABLED_REASON_ARTRACKINGSTATE_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_2619970 = 47;
  qword_2619980 = (uint64_t)"MARCO_AR_TRACKING_LIMITED_LOW_LIGHTMARCO_AR_TRACKING_LIMITED_RELOCALIZINGMARCO_AR_TRACKING_NORMALMARCO_AR_TRACKING_NOT_AVAILABLEMARCO_DISABLED_END_NAVMARCO_DISABLED_INITIALIZATION_FAILEDMARCO_DISABLED_REASON_APP_BACKGROUNDMARCO_DISABLED_REASON_ARTRACKINGSTATE_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  dword_2619978 = 9;
  qword_2619988 = 35;
  dword_2619990 = 25;
  qword_2619950 = (uint64_t)"MARCO_AR_TRACKING_LIMITED_INITIALIZINGMARCO_AR_TRACKING_LIMITED_INSUFFICIENT_FEATURESMARCO_AR_TRACKING_LIMITED_LOW_LIGHTMARCO_AR_TRACKING_LIMITED_RELOCALIZINGMARCO_AR_TRACKING_NORMALMARCO_AR_TRACKING_NOT_AVAILABLEMARCO_DISABLED_END_NAVMARCO_DISABLED_INITIALIZATION_FAILEDMARCO_DISABLED_REASON_APP_BACKGROUNDMARCO_DISABLED_REASON_ARTRACKINGSTATE_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_2619958 = 38;
  dword_2619960 = 7;
  qword_2619920 = (uint64_t)"MARCO_AR_SESSION_INTERRUPTEDMARCO_AR_TRACKING_LIMITED_EXCESSIVE_MOTIONMARCO_AR_TRACKING_LIMITED_INITIALIZINGMARCO_AR_TRACKING_LIMITED_INSUFFICIENT_FEATURESMARCO_AR_TRACKING_LIMITED_LOW_LIGHTMARCO_AR_TRACKING_LIMITED_RELOCALIZINGMARCO_AR_TRACKING_NORMALMARCO_AR_TRACKING_NOT_AVAILABLEMARCO_DISABLED_END_NAVMARCO_DISABLED_INITIALIZATION_FAILEDMARCO_DISABLED_REASON_APP_BACKGROUNDMARCO_DISABLED_REASON_ARTRACKINGSTATE_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  dword_2619930 = 12;
  qword_2619938 = (uint64_t)"MARCO_AR_TRACKING_LIMITED_EXCESSIVE_MOTIONMARCO_AR_TRACKING_LIMITED_INITIALIZINGMARCO_AR_TRACKING_LIMITED_INSUFFICIENT_FEATURESMARCO_AR_TRACKING_LIMITED_LOW_LIGHTMARCO_AR_TRACKING_LIMITED_RELOCALIZINGMARCO_AR_TRACKING_NORMALMARCO_AR_TRACKING_NOT_AVAILABLEMARCO_DISABLED_END_NAVMARCO_DISABLED_INITIALIZATION_FAILEDMARCO_DISABLED_REASON_APP_BACKGROUNDMARCO_DISABLED_REASON_ARTRACKINGSTATE_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_2619940 = 42;
  dword_2619948 = 8;
  qword_2619908 = (uint64_t)"MARCO_AR_INITIALIZINGMARCO_AR_SESSION_INTERRUPTEDMARCO_AR_TRACKING_LIMITED_EXCESSIVE_MOTIONMARCO_AR_TRACKING_LIMITED_INITIALIZINGMARCO_AR_TRACKING_LIMITED_INSUFFICIENT_FEATURESMARCO_AR_TRACKING_LIMITED_LOW_LIGHTMARCO_AR_TRACKING_LIMITED_RELOCALIZINGMARCO_AR_TRACKING_NORMALMARCO_AR_TRACKING_NOT_AVAILABLEMARCO_DISABLED_END_NAVMARCO_DISABLED_INITIALIZATION_FAILEDMARCO_DISABLED_REASON_APP_BACKGROUNDMARCO_DISABLED_REASON_ARTRACKINGSTATE_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVICE_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_DEVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESSUREMARCO_DISABLED_REASON_VLF";
  unk_2619910 = 21;
  dword_2619918 = 13;
  qword_2619928 = 28;
  qword_26196E0 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_26198F0 = (uint64_t)"MARCO_AR_INITIALIZATION_SUCCESSMARCO_AR_INITIALIZINGMARCO_AR_SESSION_INTERRUPTEDMARCO_AR_TRAC"
                           "KING_LIMITED_EXCESSIVE_MOTIONMARCO_AR_TRACKING_LIMITED_INITIALIZINGMARCO_AR_TRACKING_LIMITED_"
                           "INSUFFICIENT_FEATURESMARCO_AR_TRACKING_LIMITED_LOW_LIGHTMARCO_AR_TRACKING_LIMITED_RELOCALIZIN"
                           "GMARCO_AR_TRACKING_NORMALMARCO_AR_TRACKING_NOT_AVAILABLEMARCO_DISABLED_END_NAVMARCO_DISABLED_"
                           "INITIALIZATION_FAILEDMARCO_DISABLED_REASON_APP_BACKGROUNDMARCO_DISABLED_REASON_ARTRACKINGSTAT"
                           "E_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DAILY_USAGE_LIMIT_REACHEDMARCO_DISABLED_REASON_DEVIC"
                           "E_BATTERY_THRESHOLD_REACHEDMARCO_DISABLED_REASON_DEVICE_LOW_POWER_MODEMARCO_DISABLED_REASON_D"
                           "EVICE_STATIONARYMARCO_DISABLED_REASON_FUSED_LOCATIONMARCO_DISABLED_REASON_HORIZONTAL_DISTANCE"
                           "_TRAVELEDMARCO_DISABLED_REASON_LOCATION_ACCURACYMARCO_DISABLED_REASON_MANUALLY_DISABLEDMARCO_"
                           "DISABLED_REASON_NIGHTMARCO_DISABLED_REASON_SESSION_TIMEOUTMARCO_DISABLED_REASON_THERMAL_PRESS"
                           "UREMARCO_DISABLED_REASON_VLF";
  *(void *)algn_26198F8 = 31;
  dword_2619900 = 14;
  dword_26198E8 = 25;
  qword_26198C0 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_26198D8 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_26198C8 = 41;
  dword_26198D0 = 2;
  qword_26198E0 = 32;
  qword_26198A8 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  dword_26198A0 = 5;
  qword_26198B0 = 34;
  dword_26198B8 = 1;
  qword_2619878 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_2619890 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_2619880 = 40;
  dword_2619888 = 14;
  qword_2619898 = 40;
  qword_2619860 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  dword_2619858 = 23;
  qword_2619868 = 31;
  dword_2619870 = 17;
  qword_2619830 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_2619848 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_2619838 = 32;
  dword_2619840 = 19;
  qword_2619850 = 32;
  qword_2619818 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  dword_2619810 = 4;
  qword_2619820 = 34;
  dword_2619828 = 12;
  qword_26197D0 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_2619800 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_26197F0 = 50;
  dword_26197F8 = 39;
  qword_2619808 = 47;
  qword_26197E8 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  dword_26197C8 = 40;
  qword_26197D8 = 49;
  dword_26197E0 = 42;
  qword_26197B8 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_26197A8 = 31;
  dword_26197B0 = 13;
  qword_26197C0 = 44;
  qword_2619788 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_26197A0 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  dword_2619780 = 0;
  qword_2619790 = 40;
  dword_2619798 = 31;
  qword_2619770 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_2619760 = 40;
  dword_2619768 = 29;
  qword_2619778 = 40;
  qword_2619740 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_2619758 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  dword_2619738 = 8;
  qword_2619748 = 39;
  dword_2619750 = 35;
  qword_2619728 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_2619718 = 46;
  dword_2619720 = 6;
  qword_2619730 = 47;
  qword_2619710 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_26196F8 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  unk_2619700 = 47;
  dword_26196F0 = 36;
  dword_2619708 = 7;
  qword_26196C8 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  unk_26196D0 = 45;
  dword_26196D8 = 15;
  qword_26196E8 = 46;
  qword_2619698 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  unk_26196A0 = 50;
  qword_26196B0 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  unk_26196B8 = 49;
  dword_26196A8 = 45;
  dword_26196C0 = 38;
  qword_2619680 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  unk_2619688 = 36;
  dword_2619690 = 3;
  qword_2619650 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  dword_2619660 = 43;
  qword_2619668 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  unk_2619670 = 30;
  dword_2619678 = 37;
  qword_2619638 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_HEAVY_RAINMSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  unk_2619640 = 37;
  dword_2619648 = 41;
  qword_2619658 = 37;
  dword_2619618 = 18;
  qword_2619620 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_HAZEMSG_WEATHER_TYPE_CONDITION_HEAVY_RAINMSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  unk_2619628 = 31;
  dword_2619630 = 22;
  qword_26195F0 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_FREEZING_RAINMSG_WEATHER_TYPE_CONDITION_HAILMSG_WEATHER_TYPE_CONDITION_HAZEMSG_WEATHER_TYPE_CONDITION_HEAVY_RAINMSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  unk_26195F8 = 40;
  dword_2619600 = 11;
  qword_2619608 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_HAILMSG_WEATHER_TYPE_CONDITION_HAZEMSG_WEATHER_TYPE_CONDITION_HEAVY_RAINMSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  unk_2619610 = 31;
  qword_26195D8 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_FREEZING_DRIZZLEMSG_WEATHER_TYPE_CONDITION_FREEZING_RAINMSG_WEATHER_TYPE_CONDITION_HAILMSG_WEATHER_TYPE_CONDITION_HAZEMSG_WEATHER_TYPE_CONDITION_HEAVY_RAINMSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  unk_26195E0 = 43;
  dword_26195D0 = 21;
  dword_26195E8 = 9;
  qword_2619500 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_BLIZZARDMSG_WEATHER_TYPE_CONDITION_BLOWING_SNOWMSG_WEATHER_TYPE_CO"
                           "NDITION_BLUSTERYMSG_WEATHER_TYPE_CONDITION_CLEARMSG_WEATHER_TYPE_CONDITION_CLOUDYMSG_WEATHER_"
                           "TYPE_CONDITION_COLDMSG_WEATHER_TYPE_CONDITION_DRIZZLEMSG_WEATHER_TYPE_CONDITION_DUSTMSG_WEATH"
                           "ER_TYPE_CONDITION_FOGGYMSG_WEATHER_TYPE_CONDITION_FREEZING_DRIZZLEMSG_WEATHER_TYPE_CONDITION_"
                           "FREEZING_RAINMSG_WEATHER_TYPE_CONDITION_HAILMSG_WEATHER_TYPE_CONDITION_HAZEMSG_WEATHER_TYPE_C"
                           "ONDITION_HEAVY_RAINMSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEA"
                           "THER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TY"
                           "PE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_T"
                           "YPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_T"
                           "YPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_T"
                           "YPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_"
                           "NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATH"
                           "ER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATH"
                           "ER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_W"
                           "EATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKY"
                           "MSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDI"
                           "TION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORM"
                           "MSG_WEATHER_TYPE_CONDITION_WINDY";
  qword_26195A8 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_DUSTMSG_WEATHER_TYPE_CONDITION_FOGGYMSG_WEATHER_TYPE_CONDITION_FREEZING_DRIZZLEMSG_WEATHER_TYPE_CONDITION_FREEZING_RAINMSG_WEATHER_TYPE_CONDITION_HAILMSG_WEATHER_TYPE_CONDITION_HAZEMSG_WEATHER_TYPE_CONDITION_HEAVY_RAINMSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  unk_26195B0 = 31;
  dword_26195B8 = 20;
  qword_26195C0 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_FOGGYMSG_WEATHER_TYPE_CONDITION_FREEZING_DRIZZLEMSG_WEATHER_TYPE_CONDITION_FREEZING_RAINMSG_WEATHER_TYPE_CONDITION_HAILMSG_WEATHER_TYPE_CONDITION_HAZEMSG_WEATHER_TYPE_CONDITION_HEAVY_RAINMSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  unk_26195C8 = 32;
  qword_2619578 = (uint64_t)"MSG_WEATHER_TYPE_CONDITION_COLDMSG_WEATHER_TYPE_CONDITION_DRIZZLEMSG_WEATHER_TYPE_CONDITION_DUSTMSG_WEATHER_TYPE_CONDITION_FOGGYMSG_WEATHER_TYPE_CONDITION_FREEZING_DRIZZLEMSG_WEATHER_TYPE_CONDITION_FREEZING_RAINMSG_WEATHER_TYPE_CONDITION_HAILMSG_WEATHER_TYPE_CONDITION_HAZEMSG_WEATHER_TYPE_CONDITION_HEAVY_RAINMSG_WEATHER_TYPE_CONDITION_HEAVY_SNOWMSG_WEATHER_TYPE_CONDITION_HOTMSG_WEATHER_TYPE_CONDITION_HURRICANEMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSHOWERSMSG_WEATHER_TYPE_CONDITION_ISOLATED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_LIGHT_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_HAILMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MIXED_RAIN_AND_SNOWMSG_WEATHER_TYPE_CONDITION_MIXED_SNOW_AND_SLEETMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLEARMSG_WEATHER_TYPE_CONDITION_MOSTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_NOT_AVAILABLEMSG_WEATHER_TYPE_CONDITION_PARTLY_CLOUDYMSG_WEATHER_TYPE_CONDITION_RAINMSG_WEATHER_TYPE_CONDITION_SCATTERED_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_SNOW_SHOWERSMSG_WEATHER_TYPE_CONDITION_SCATTERED_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SEVERE_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_SHOWERSMSG_WEATHER_TYPE_CONDITION_SLEETMSG_WEATHER_TYPE_CONDITION_SMOKYMSG_WEATHER_TYPE_CONDITION_SNOWMSG_WEATHER_TYPE_CONDITION_SNOW_FLURRIESMSG_WEATHER_TYPE_CONDITION_THUNDERSTORMSMSG_WEATHER_TYPE_CONDITION_TORNADOMSG_WEATHER_TYPE_CONDITION_TROPICAL_STORMMSG_WEATHER_TYPE_CONDITION_WINDY";
  unk_2619580 = 31;
  dword_2619588 = 26;
  qword_2619598 = 34;
  dword_26195A0 = 10;
  qword_2619508 = 35;
  dword_2619510 = 44;
  qword_2619550 = 32;
  dword_2619558 = 33;
  qword_2619568 = 33;
  dword_2619570 = 27;
  qword_2619520 = 39;
  dword_2619528 = 16;
  qword_2619538 = 35;
  dword_2619540 = 24;
  qword_26194A0 = (uint64_t)"MSG_DISTANCE_BUCKET_FARMSG_DISTANCE_BUCKET_UNKNOWNMSG_DISTANCE_BUCKET_VERY_NEARMSG_DISTANCE_B"
                           "UCKET_WALKING_DISTANCE";
  *(void *)algn_26194A8 = 23;
  dword_26194B0 = 3;
  qword_26194C0 = 27;
  dword_26194C8 = 0;
  qword_26194D8 = 29;
  dword_26194E0 = 1;
  dword_26194F8 = 2;
  qword_26194F0 = 36;
  qword_2619CB0 = (uint64_t)"EARLY_SHOWNON_TIME_SHOWNTTL_UI_NOTIFICATION_NONE_SHOWN";
  unk_2619CB8 = 11;
  qword_2619CC8 = (uint64_t)"ON_TIME_SHOWNTTL_UI_NOTIFICATION_NONE_SHOWN";
  unk_2619CD0 = 13;
  qword_2619CE0 = (uint64_t)"TTL_UI_NOTIFICATION_NONE_SHOWN";
  unk_2619CE8 = 30;
  qword_2619CA0 = 10;
  dword_2619CC0 = 1;
  dword_2619CD8 = 2;
  dword_2619CF0 = 0;
  qword_2619D28 = (uint64_t)"LESS_THAN_2HLESS_THAN_30MLESS_THAN_4HMORE_THAN_4HTTL_INITIAL_TRAVEL_TIME_BUCKET_UNKNOWN";
  qword_2619D40 = (uint64_t)"LESS_THAN_30MLESS_THAN_4HMORE_THAN_4HTTL_INITIAL_TRAVEL_TIME_BUCKET_UNKNOWN";
  qword_2619D58 = (uint64_t)"LESS_THAN_4HMORE_THAN_4HTTL_INITIAL_TRAVEL_TIME_BUCKET_UNKNOWN";
  qword_2619D70 = (uint64_t)"MORE_THAN_4HTTL_INITIAL_TRAVEL_TIME_BUCKET_UNKNOWN";
  qword_2619D88 = (uint64_t)"TTL_INITIAL_TRAVEL_TIME_BUCKET_UNKNOWN";
  qword_2619CF8 = (uint64_t)"LESS_THAN_15MLESS_THAN_1HLESS_THAN_2HLESS_THAN_30MLESS_THAN_4HMORE_THAN_4HTTL_INITIAL_TRAVEL_"
                           "TIME_BUCKET_UNKNOWN";
  unk_2619D00 = 13;
  dword_2619D08 = 1;
  qword_2619D10 = (uint64_t)"LESS_THAN_1HLESS_THAN_2HLESS_THAN_30MLESS_THAN_4HMORE_THAN_4HTTL_INITIAL_TRAVEL_TIME_BUCKET_UNKNOWN";
  unk_2619D18 = 12;
  dword_2619D20 = 3;
  qword_2619D30 = 12;
  dword_2619D38 = 4;
  qword_2619D48 = 13;
  dword_2619D50 = 2;
  qword_2619D60 = 12;
  dword_2619D68 = 5;
  qword_2619D78 = 12;
  dword_2619D80 = 6;
  qword_2619D90 = 38;
  dword_2619D98 = 0;
  qword_2619DB8 = (uint64_t)"FORCE_PURGE_METRICNETWORK_METRICPURGE_METRICUNKNOWN_METRIC_TYPE";
  unk_2619DC0 = 18;
  qword_2619DD0 = (uint64_t)"NETWORK_METRICPURGE_METRICUNKNOWN_METRIC_TYPE";
  qword_2619DE8 = (uint64_t)"PURGE_METRICUNKNOWN_METRIC_TYPE";
  unk_2619DF0 = 12;
  qword_2619DA0 = (uint64_t)"FAILED_MSG_METRICFORCE_PURGE_METRICNETWORK_METRICPURGE_METRICUNKNOWN_METRIC_TYPE";
  *(void *)algn_2619DA8 = 17;
  dword_2619DB0 = 4;
  dword_2619DC8 = 3;
  qword_2619DD8 = 14;
  dword_2619DE0 = 1;
  dword_2619DF8 = 2;
  qword_2619E00 = (uint64_t)"UNKNOWN_METRIC_TYPE";
  unk_2619E08 = 19;
  dword_2619E10 = 0;
  qword_2619E30 = (uint64_t)"FAILED_STATESUCCESS_STATEUNKNOWN_METRIC_STATE";
  unk_2619E38 = 12;
  qword_2619E48 = (uint64_t)"SUCCESS_STATEUNKNOWN_METRIC_STATE";
  unk_2619E50 = 13;
  qword_2619E18 = (uint64_t)"CANCELLED_STATEFAILED_STATESUCCESS_STATEUNKNOWN_METRIC_STATE";
  qword_2619E20 = 15;
  dword_2619E28 = 3;
  dword_2619E40 = 2;
  dword_2619E58 = 1;
  qword_2619E60 = (uint64_t)"UNKNOWN_METRIC_STATE";
  unk_2619E68 = 20;
  dword_2619E70 = 0;
  qword_2619E90 = (uint64_t)"PURGE_REASON_FORCE_PURGEPURGE_REASON_FRAMEWORK_BUDGETPURGE_REASON_SOURCE_BUDGETPURGE_REASON_UNKNOWN";
  unk_2619E98 = 24;
  qword_2619EA8 = (uint64_t)"PURGE_REASON_FRAMEWORK_BUDGETPURGE_REASON_SOURCE_BUDGETPURGE_REASON_UNKNOWN";
  unk_2619EB0 = 29;
  qword_2619EC0 = (uint64_t)"PURGE_REASON_SOURCE_BUDGETPURGE_REASON_UNKNOWN";
  qword_2619ED8 = (uint64_t)"PURGE_REASON_UNKNOWN";
  unk_2619EE0 = 20;
  qword_2619E78 = (uint64_t)"PURGE_REASON_EXPIRED_TIMEPURGE_REASON_FORCE_PURGEPURGE_REASON_FRAMEWORK_BUDGETPURGE_REASON_SO"
                           "URCE_BUDGETPURGE_REASON_UNKNOWN";
  unk_2619E80 = 25;
  dword_2619E88 = 1;
  dword_2619EA0 = 4;
  dword_2619EB8 = 2;
  qword_2619EC8 = 26;
  dword_2619ED0 = 3;
  dword_2619EE8 = 0;
  qword_2619F08 = (uint64_t)"SLOWSTILLUNKNOWN_SPEED_BUCKET";
  qword_2619F20 = (uint64_t)"STILLUNKNOWN_SPEED_BUCKET";
  unk_2619F28 = 5;
  qword_2619F38 = (uint64_t)"UNKNOWN_SPEED_BUCKET";
  unk_2619F40 = 20;
  qword_2619EF0 = (uint64_t)"FASTSLOWSTILLUNKNOWN_SPEED_BUCKET";
  qword_2619EF8 = 4;
  dword_2619F00 = 3;
  qword_2619F10 = 4;
  dword_2619F18 = 2;
  dword_2619F30 = 1;
  dword_2619F48 = 0;
  qword_2619F68 = (uint64_t)"OFFLINE_SERVICE_ETAOFFLINE_SERVICE_PLACEOFFLINE_SERVICE_TYPE_UNKNOWN";
  unk_2619F70 = 19;
  qword_2619F80 = (uint64_t)"OFFLINE_SERVICE_PLACEOFFLINE_SERVICE_TYPE_UNKNOWN";
  unk_2619F88 = 21;
  qword_2619F50 = (uint64_t)"OFFLINE_SERVICE_DIRECTIONSOFFLINE_SERVICE_ETAOFFLINE_SERVICE_PLACEOFFLINE_SERVICE_TYPE_UNKNOWN";
  *(void *)algn_2619F58 = 26;
  dword_2619F60 = 2;
  dword_2619F78 = 3;
  dword_2619F90 = 1;
  qword_2619F98 = (uint64_t)"OFFLINE_SERVICE_TYPE_UNKNOWN";
  unk_2619FA0 = 28;
  dword_2619FA8 = 0;
  qword_2619FC8 = (uint64_t)"OFFLINE_REASON_NO_CONNECTIONOFFLINE_REASON_TIMEOUTOFFLINE_REASON_UNKNOWN";
  unk_2619FD0 = 28;
  qword_2619FE0 = (uint64_t)"OFFLINE_REASON_TIMEOUTOFFLINE_REASON_UNKNOWN";
  qword_2619FB0 = (uint64_t)"OFFLINE_REASON_NETWORK_ERROROFFLINE_REASON_NO_CONNECTIONOFFLINE_REASON_TIMEOUTOFFLINE_REASON_UNKNOWN";
  *(void *)algn_2619FB8 = 28;
  dword_2619FC0 = 3;
  dword_2619FD8 = 2;
  qword_2619FE8 = 22;
  dword_2619FF0 = 1;
  qword_2619FF8 = (uint64_t)"OFFLINE_REASON_UNKNOWN";
  unk_261A000 = 22;
  dword_261A008 = 0;
  qword_261A028 = (uint64_t)"COMMUTE_WINDOW_LOCATION_OTHERCOMMUTE_WINDOW_LOCATION_SCHOOLCOMMUTE_WINDOW_LOCATION_WORKUNKNOWN_COMMUTE_LOCATION_TYPE";
  qword_261A040 = (uint64_t)"COMMUTE_WINDOW_LOCATION_SCHOOLCOMMUTE_WINDOW_LOCATION_WORKUNKNOWN_COMMUTE_LOCATION_TYPE";
  unk_261A048 = 30;
  qword_261A058 = (uint64_t)"COMMUTE_WINDOW_LOCATION_WORKUNKNOWN_COMMUTE_LOCATION_TYPE";
  unk_261A060 = 28;
  qword_261A010 = (uint64_t)"COMMUTE_WINDOW_LOCATION_HOMECOMMUTE_WINDOW_LOCATION_OTHERCOMMUTE_WINDOW_LOCATION_SCHOOLCOMMUT"
                           "E_WINDOW_LOCATION_WORKUNKNOWN_COMMUTE_LOCATION_TYPE";
  *(void *)algn_261A018 = 28;
  dword_261A020 = 2;
  qword_261A030 = 29;
  dword_261A038 = 1;
  dword_261A050 = 4;
  dword_261A068 = 3;
  qword_261A070 = (uint64_t)"UNKNOWN_COMMUTE_LOCATION_TYPE";
  unk_261A078 = 29;
  dword_261A080 = 0;
  qword_261A0A0 = (uint64_t)"COMMUTE_WINDOW_TIMED_OUTUNKNOWN_REASON";
  qword_261A0B8 = (uint64_t)"UNKNOWN_REASON";
  unk_261A0C0 = 14;
  qword_261A088 = (uint64_t)"COMMUTE_MISSION_COMPLETECOMMUTE_WINDOW_TIMED_OUTUNKNOWN_REASON";
  qword_261A090 = 24;
  dword_261A098 = 2;
  qword_261A0A8 = 24;
  dword_261A0B0 = 1;
  dword_261A0C8 = 0;
  qword_261A0E8 = (uint64_t)"PURPOSE_ETAPURPOSE_LAUNCH_AND_GOPURPOSE_QUICK_ETAPURPOSE_REROUTEPURPOSE_ROUTEPURPOSE_ROUTE_GENIUSPURPOSE_SEARCH_ALONG_ROUTEPURPOSE_TEST_OR_DEBUGPURPOSE_TIME_TO_LEAVEPURPOSE_UNKNOWN";
  qword_261A100 = (uint64_t)"PURPOSE_LAUNCH_AND_GOPURPOSE_QUICK_ETAPURPOSE_REROUTEPURPOSE_ROUTEPURPOSE_ROUTE_GENIUSPURPOSE_SEARCH_ALONG_ROUTEPURPOSE_TEST_OR_DEBUGPURPOSE_TIME_TO_LEAVEPURPOSE_UNKNOWN";
  qword_261A118 = (uint64_t)"PURPOSE_QUICK_ETAPURPOSE_REROUTEPURPOSE_ROUTEPURPOSE_ROUTE_GENIUSPURPOSE_SEARCH_ALONG_ROUTEPURPOSE_TEST_OR_DEBUGPURPOSE_TIME_TO_LEAVEPURPOSE_UNKNOWN";
  qword_261A130 = (uint64_t)"PURPOSE_REROUTEPURPOSE_ROUTEPURPOSE_ROUTE_GENIUSPURPOSE_SEARCH_ALONG_ROUTEPURPOSE_TEST_OR_DEBUGPURPOSE_TIME_TO_LEAVEPURPOSE_UNKNOWN";
  qword_261A148 = (uint64_t)"PURPOSE_ROUTEPURPOSE_ROUTE_GENIUSPURPOSE_SEARCH_ALONG_ROUTEPURPOSE_TEST_OR_DEBUGPURPOSE_TIME_TO_LEAVEPURPOSE_UNKNOWN";
  qword_261A160 = (uint64_t)"PURPOSE_ROUTE_GENIUSPURPOSE_SEARCH_ALONG_ROUTEPURPOSE_TEST_OR_DEBUGPURPOSE_TIME_TO_LEAVEPURPOSE_UNKNOWN";
  qword_261A178 = (uint64_t)"PURPOSE_SEARCH_ALONG_ROUTEPURPOSE_TEST_OR_DEBUGPURPOSE_TIME_TO_LEAVEPURPOSE_UNKNOWN";
  qword_261A190 = (uint64_t)"PURPOSE_TEST_OR_DEBUGPURPOSE_TIME_TO_LEAVEPURPOSE_UNKNOWN";
  qword_261A1A8 = (uint64_t)"PURPOSE_TIME_TO_LEAVEPURPOSE_UNKNOWN";
  qword_261A1C0 = (uint64_t)"PURPOSE_UNKNOWN";
  qword_261A0D0 = (uint64_t)"PURPOSE_DODGEBALL_OUTSIDE_OF_MAPSPURPOSE_ETAPURPOSE_LAUNCH_AND_GOPURPOSE_QUICK_ETAPURPOSE_RER"
                           "OUTEPURPOSE_ROUTEPURPOSE_ROUTE_GENIUSPURPOSE_SEARCH_ALONG_ROUTEPURPOSE_TEST_OR_DEBUGPURPOSE_T"
                           "IME_TO_LEAVEPURPOSE_UNKNOWN";
  qword_261A0D8 = 33;
  dword_261A0E0 = 8;
  qword_261A0F0 = 11;
  dword_261A0F8 = 2;
  qword_261A108 = 21;
  dword_261A110 = 10;
  qword_261A120 = 17;
  dword_261A128 = 3;
  qword_261A138 = 15;
  dword_261A140 = 5;
  qword_261A150 = 13;
  dword_261A158 = 4;
  qword_261A168 = 20;
  dword_261A170 = 6;
  qword_261A180 = 26;
  dword_261A188 = 7;
  qword_261A198 = 21;
  dword_261A1A0 = 1;
  qword_261A1B0 = 21;
  dword_261A1B8 = 9;
  qword_261A1C8 = 15;
  dword_261A1D0 = 0;
  qword_261A1F0 = (uint64_t)"LOCATION_NON_PROMINENTLOCATION_OTHER_PROMINENTLOCATION_UNKNOWNLOCATION_WORK";
  unk_261A1F8 = 22;
  qword_261A208 = (uint64_t)"LOCATION_OTHER_PROMINENTLOCATION_UNKNOWNLOCATION_WORK";
  unk_261A210 = 24;
  qword_261A220 = (uint64_t)"LOCATION_UNKNOWNLOCATION_WORK";
  qword_261A1D8 = (uint64_t)"LOCATION_HOMELOCATION_NON_PROMINENTLOCATION_OTHER_PROMINENTLOCATION_UNKNOWNLOCATION_WORK";
  qword_261A1E0 = 13;
  dword_261A1E8 = 1;
  dword_261A200 = 4;
  dword_261A218 = 3;
  qword_261A228 = 16;
  dword_261A230 = 0;
  qword_261A238 = (uint64_t)"LOCATION_WORK";
  unk_261A240 = 13;
  dword_261A248 = 2;
  qword_261A268 = (uint64_t)"DISMISSEDUNKNOWN";
  unk_261A270 = 9;
  qword_261A280 = (uint64_t)"UNKNOWN";
  unk_261A288 = 7;
  qword_261A250 = (uint64_t)"ACCEPTEDDISMISSEDUNKNOWN";
  *(void *)algn_261A258 = 8;
  dword_261A260 = 1;
  dword_261A278 = 2;
  dword_261A290 = 0;
  qword_261A2B0 = (uint64_t)"DodgeballAction_DISMISSEDDodgeballAction_UNKNOWN";
  unk_261A2B8 = 25;
  qword_261A298 = (uint64_t)"DodgeballAction_ACCEPTEDDodgeballAction_DISMISSEDDodgeballAction_UNKNOWN";
  unk_261A2A0 = 24;
  dword_261A2A8 = 1;
  dword_261A2C0 = 2;
  qword_261A2C8 = (uint64_t)"DodgeballAction_UNKNOWN";
  unk_261A2D0 = 23;
  dword_261A2D8 = 0;
  qword_261A2F8 = (uint64_t)"VLFUsageUserAccessPoint_AR_WALKING_ROUTE_PLANNINGVLFUsageUserAccessPoint_PUCK_ACTIVEVLFUsageUserAccessPoint_PUCK_PASSIVEVLFUsageUserAccessPoint_UNKNOWN";
  qword_261A310 = (uint64_t)"VLFUsageUserAccessPoint_PUCK_ACTIVEVLFUsageUserAccessPoint_PUCK_PASSIVEVLFUsageUserAccessPoint_UNKNOWN";
  qword_261A328 = (uint64_t)"VLFUsageUserAccessPoint_PUCK_PASSIVEVLFUsageUserAccessPoint_UNKNOWN";
  qword_261A2E0 = (uint64_t)"VLFUsageUserAccessPoint_AR_WALKING_NAVIGATIONVLFUsageUserAccessPoint_AR_WALKING_ROUTE_PLANNIN"
                           "GVLFUsageUserAccessPoint_PUCK_ACTIVEVLFUsageUserAccessPoint_PUCK_PASSIVEVLFUsageUserAccessPoint_UNKNOWN";
  *(void *)algn_261A2E8 = 45;
  dword_261A2F0 = 4;
  qword_261A300 = 49;
  dword_261A308 = 3;
  qword_261A318 = 35;
  dword_261A320 = 2;
  qword_261A330 = 36;
  dword_261A338 = 1;
  qword_261A340 = (uint64_t)"VLFUsageUserAccessPoint_UNKNOWN";
  unk_261A348 = 31;
  dword_261A350 = 0;
  qword_261A370 = (uint64_t)"VLFPositionContextType_OUTDOORVLFPositionContextType_UNKNOWN";
  qword_261A388 = (uint64_t)"VLFPositionContextType_UNKNOWN";
  qword_261A358 = (uint64_t)"VLFPositionContextType_INDOORVLFPositionContextType_OUTDOORVLFPositionContextType_UNKNOWN";
  unk_261A360 = 29;
  dword_261A368 = 2;
  qword_261A378 = 30;
  dword_261A380 = 1;
  qword_261A390 = 30;
  dword_261A398 = 0;
  qword_261A3B8 = (uint64_t)"VLFFailureReason_BAD_INPUTVLFFailureReason_MAP_DATA_MISSINGVLFFailureReason_MAP_DATA_PENDINGVLFFailureReason_POSE_DISCARDED_IMAGE_CALIBRATIONVLFFailureReason_POSE_DISCARDED_IMAGE_GRAVITYVLFFailureReason_POSE_DISCARDED_IMAGE_HORZ_UNCERTAINTYVLFFailureReason_POSE_DISCARDED_IMAGE_LOCATION_TYPEVLFFailureReason_POSE_DISCARDED_IMAGE_TILTVLFFailureReason_POSE_FAILEDVLFFailureReason_POSE_REJECTED_GPSVLFFailureReason_POSE_REJECTED_GRAVITYVLFFailureReason_POSE_REJECTED_HEIGHTVLFFailureReason_POSE_REJECTED_SCOREVLFFailureReason_POSE_REJECTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  qword_261A3D0 = (uint64_t)"VLFFailureReason_MAP_DATA_MISSINGVLFFailureReason_MAP_DATA_PENDINGVLFFailureReason_POSE_DISCARDED_IMAGE_CALIBRATIONVLFFailureReason_POSE_DISCARDED_IMAGE_GRAVITYVLFFailureReason_POSE_DISCARDED_IMAGE_HORZ_UNCERTAINTYVLFFailureReason_POSE_DISCARDED_IMAGE_LOCATION_TYPEVLFFailureReason_POSE_DISCARDED_IMAGE_TILTVLFFailureReason_POSE_FAILEDVLFFailureReason_POSE_REJECTED_GPSVLFFailureReason_POSE_REJECTED_GRAVITYVLFFailureReason_POSE_REJECTED_HEIGHTVLFFailureReason_POSE_REJECTED_SCOREVLFFailureReason_POSE_REJECTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  qword_261A3E8 = (uint64_t)"VLFFailureReason_MAP_DATA_PENDINGVLFFailureReason_POSE_DISCARDED_IMAGE_CALIBRATIONVLFFailureReason_POSE_DISCARDED_IMAGE_GRAVITYVLFFailureReason_POSE_DISCARDED_IMAGE_HORZ_UNCERTAINTYVLFFailureReason_POSE_DISCARDED_IMAGE_LOCATION_TYPEVLFFailureReason_POSE_DISCARDED_IMAGE_TILTVLFFailureReason_POSE_FAILEDVLFFailureReason_POSE_REJECTED_GPSVLFFailureReason_POSE_REJECTED_GRAVITYVLFFailureReason_POSE_REJECTED_HEIGHTVLFFailureReason_POSE_REJECTED_SCOREVLFFailureReason_POSE_REJECTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  qword_261A400 = (uint64_t)"VLFFailureReason_POSE_DISCARDED_IMAGE_CALIBRATIONVLFFailureReason_POSE_DISCARDED_IMAGE_GRAVITYVLFFailureReason_POSE_DISCARDED_IMAGE_HORZ_UNCERTAINTYVLFFailureReason_POSE_DISCARDED_IMAGE_LOCATION_TYPEVLFFailureReason_POSE_DISCARDED_IMAGE_TILTVLFFailureReason_POSE_FAILEDVLFFailureReason_POSE_REJECTED_GPSVLFFailureReason_POSE_REJECTED_GRAVITYVLFFailureReason_POSE_REJECTED_HEIGHTVLFFailureReason_POSE_REJECTED_SCOREVLFFailureReason_POSE_REJECTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  qword_261A418 = (uint64_t)"VLFFailureReason_POSE_DISCARDED_IMAGE_GRAVITYVLFFailureReason_POSE_DISCARDED_IMAGE_HORZ_UNCERTAINTYVLFFailureReason_POSE_DISCARDED_IMAGE_LOCATION_TYPEVLFFailureReason_POSE_DISCARDED_IMAGE_TILTVLFFailureReason_POSE_FAILEDVLFFailureReason_POSE_REJECTED_GPSVLFFailureReason_POSE_REJECTED_GRAVITYVLFFailureReason_POSE_REJECTED_HEIGHTVLFFailureReason_POSE_REJECTED_SCOREVLFFailureReason_POSE_REJECTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  qword_261A430 = (uint64_t)"VLFFailureReason_POSE_DISCARDED_IMAGE_HORZ_UNCERTAINTYVLFFailureReason_POSE_DISCARDED_IMAGE_LOCATION_TYPEVLFFailureReason_POSE_DISCARDED_IMAGE_TILTVLFFailureReason_POSE_FAILEDVLFFailureReason_POSE_REJECTED_GPSVLFFailureReason_POSE_REJECTED_GRAVITYVLFFailureReason_POSE_REJECTED_HEIGHTVLFFailureReason_POSE_REJECTED_SCOREVLFFailureReason_POSE_REJECTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  qword_261A448 = (uint64_t)"VLFFailureReason_POSE_DISCARDED_IMAGE_LOCATION_TYPEVLFFailureReason_POSE_DISCARDED_IMAGE_TILTVLFFailureReason_POSE_FAILEDVLFFailureReason_POSE_REJECTED_GPSVLFFailureReason_POSE_REJECTED_GRAVITYVLFFailureReason_POSE_REJECTED_HEIGHTVLFFailureReason_POSE_REJECTED_SCOREVLFFailureReason_POSE_REJECTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  qword_261A460 = (uint64_t)"VLFFailureReason_POSE_DISCARDED_IMAGE_TILTVLFFailureReason_POSE_FAILEDVLFFailureReason_POSE_REJECTED_GPSVLFFailureReason_POSE_REJECTED_GRAVITYVLFFailureReason_POSE_REJECTED_HEIGHTVLFFailureReason_POSE_REJECTED_SCOREVLFFailureReason_POSE_REJECTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  qword_261A478 = (uint64_t)"VLFFailureReason_POSE_FAILEDVLFFailureReason_POSE_REJECTED_GPSVLFFailureReason_POSE_REJECTED_GRAVITYVLFFailureReason_POSE_REJECTED_HEIGHTVLFFailureReason_POSE_REJECTED_SCOREVLFFailureReason_POSE_REJECTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  qword_261A490 = (uint64_t)"VLFFailureReason_POSE_REJECTED_GPSVLFFailureReason_POSE_REJECTED_GRAVITYVLFFailureReason_POSE_REJECTED_HEIGHTVLFFailureReason_POSE_REJECTED_SCOREVLFFailureReason_POSE_REJECTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  qword_261A3A0 = (uint64_t)"VLFFailureReason_BAD_IMAGEVLFFailureReason_BAD_INPUTVLFFailureReason_MAP_DATA_MISSINGVLFFailu"
                           "reReason_MAP_DATA_PENDINGVLFFailureReason_POSE_DISCARDED_IMAGE_CALIBRATIONVLFFailureReason_PO"
                           "SE_DISCARDED_IMAGE_GRAVITYVLFFailureReason_POSE_DISCARDED_IMAGE_HORZ_UNCERTAINTYVLFFailureRea"
                           "son_POSE_DISCARDED_IMAGE_LOCATION_TYPEVLFFailureReason_POSE_DISCARDED_IMAGE_TILTVLFFailureRea"
                           "son_POSE_FAILEDVLFFailureReason_POSE_REJECTED_GPSVLFFailureReason_POSE_REJECTED_GRAVITYVLFFai"
                           "lureReason_POSE_REJECTED_HEIGHTVLFFailureReason_POSE_REJECTED_SCOREVLFFailureReason_POSE_REJE"
                           "CTED_VIOVLFFailureReason_REJECTED_CONFIDENCEVLFFailureReason_REJECTED_COVARIANCEVLFFailureReason_UNKNOWN";
  *(void *)algn_261A3A8 = 26;
  dword_261A3B0 = 1;
  qword_261A3C0 = 26;
  dword_261A3C8 = 10;
  qword_261A3D8 = 33;
  dword_261A3E0 = 2;
  qword_261A3F0 = 33;
  dword_261A3F8 = 3;
  qword_261A408 = 49;
  dword_261A410 = 15;
  qword_261A420 = 45;
  dword_261A428 = 14;
  qword_261A438 = 54;
  dword_261A440 = 17;
  qword_261A450 = 51;
  dword_261A458 = 16;
  qword_261A468 = 42;
  dword_261A470 = 13;
  qword_261A480 = 28;
  qword_261A498 = 34;
  dword_261A488 = 4;
  qword_261AC28 = (uint64_t)"CURATED_COLLECTION_REMOVEDCURATED_COLLECTION_SAVEDCURATED_COLLECTION_SHAREDCURATED_COLLECTION_SHOWNCURATED_HIKE_SAVEDCUSTOM_HIKE_CREATION_TRAY_SHOWNCUSTOM_HIKE_SAVEDDEVICE_CONNECTEDDIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AC40 = (uint64_t)"CURATED_COLLECTION_SAVEDCURATED_COLLECTION_SHAREDCURATED_COLLECTION_SHOWNCURATED_HIKE_SAVEDCUSTOM_HIKE_CREATION_TRAY_SHOWNCUSTOM_HIKE_SAVEDDEVICE_CONNECTEDDIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AC48 = 24;
  qword_261AC58 = (uint64_t)"CURATED_COLLECTION_SHAREDCURATED_COLLECTION_SHOWNCURATED_HIKE_SAVEDCUSTOM_HIKE_CREATION_TRAY_SHOWNCUSTOM_HIKE_SAVEDDEVICE_CONNECTEDDIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AC70 = (uint64_t)"CURATED_COLLECTION_SHOWNCURATED_HIKE_SAVEDCUSTOM_HIKE_CREATION_TRAY_SHOWNCUSTOM_HIKE_SAVEDDEVICE_CONNECTEDDIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AC88 = (uint64_t)"CURATED_HIKE_SAVEDCUSTOM_HIKE_CREATION_TRAY_SHOWNCUSTOM_HIKE_SAVEDDEVICE_CONNECTEDDIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AC98 = 215;
  qword_261ACA0 = (uint64_t)"CUSTOM_HIKE_CREATION_TRAY_SHOWNCUSTOM_HIKE_SAVEDDEVICE_CONNECTEDDIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261ACB0 = 217;
  qword_261ACB8 = (uint64_t)"CUSTOM_HIKE_SAVEDDEVICE_CONNECTEDDIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261ACC8 = 216;
  qword_261ACD0 = (uint64_t)"DEVICE_CONNECTEDDIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261ACE8 = (uint64_t)"DIRECTIONSDIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AD00 = (uint64_t)"DIRECTIONS_FAVORITE_CARPLAY_UIDIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AD10 = 157;
  qword_261AD18 = (uint64_t)"DIRECTIONS_LIST_ITEM_CARPLAY_UIDIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AD28 = 156;
  qword_261AD30 = (uint64_t)"DIRECTIONS_PLACECARD_REVEAL_CARPLAY_UIDIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AD40 = 155;
  qword_261AD48 = (uint64_t)"DIRECTIONS_REQUESTED_CURATED_HIKEDIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AD58 = 218;
  qword_261AD60 = (uint64_t)"DIRECTIONS_REQUESTED_CUSTOM_HIKEDIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AD70 = 219;
  qword_261AD78 = (uint64_t)"DIRECTIONS_REQUESTED_CYCLINGDIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AD90 = (uint64_t)"DIRECTIONS_REQUESTED_DRIVINGDIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261ADA8 = (uint64_t)"DIRECTIONS_REQUESTED_DRIVING_CARPLAY_CONNECTEDDIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261ADB8 = 159;
  qword_261ADC0 = (uint64_t)"DIRECTIONS_REQUESTED_EBIKEDIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261ADD8 = (uint64_t)"DIRECTIONS_REQUESTED_EV_ROUTINGDIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261ADF0 = (uint64_t)"DIRECTIONS_REQUESTED_TRANSITDIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AE08 = (uint64_t)"DIRECTIONS_REQUESTED_WALKINGDIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AE20 = (uint64_t)"DIRECTIONS_SAFARIDIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AE38 = (uint64_t)"DIRECTIONS_SIRI_PLACECARDDIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AE50 = (uint64_t)"DIRECTIONS_SPOTLIGHTENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AE68 = (uint64_t)"ENRICHED_RESULTS_SHOWN_MAPSENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AE78 = 175;
  qword_261AE80 = (uint64_t)"ENTER_MAPSENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AE90 = 149;
  qword_261AE98 = (uint64_t)"ENTER_MAPS_CARPLAYENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AEB0 = (uint64_t)"ENTER_MAPS_DEVICEENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AEC0 = 152;
  qword_261AEC8 = (uint64_t)"ENTER_VENUE_EXPERIENCEETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AEE0 = (uint64_t)"ETA_OVERESTIMATE_DRIVINGETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AEF0 = 170;
  qword_261AEF8 = (uint64_t)"ETA_RECEIVEDETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AF10 = (uint64_t)"ETA_SHAREDETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261AF28 = (uint64_t)"ETA_SHARED_CYCLINGETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AF38 = 116;
  qword_261AF40 = (uint64_t)"ETA_SHARED_DRIVINGETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AF50 = 114;
  qword_261AF58 = (uint64_t)"ETA_SHARED_TRANSITETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AF68 = 146;
  qword_261AF70 = (uint64_t)"ETA_SHARED_WALKINGETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AF80 = 115;
  qword_261AF88 = (uint64_t)"ETA_UNDERESTIMATE_DRIVINGEXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AF98 = 172;
  qword_261AFA0 = (uint64_t)"EXIT_MAPSEXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AFB0 = 150;
  qword_261AFB8 = (uint64_t)"EXIT_MAPS_CARPLAYEXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AFC8 = 165;
  qword_261AFD0 = (uint64_t)"EXTREME_ETA_OVERESTIMATE_DRIVINGEXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AFE0 = 171;
  qword_261AFE8 = (uint64_t)"EXTREME_ETA_UNDERESTIMATE_DRIVINGFAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AFF8 = 173;
  qword_261B000 = (uint64_t)"FAVORITE_ADD_PLACEFAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B018 = (uint64_t)"FAVORITE_TAP_LIST_ITEMFLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B030 = (uint64_t)"FLYOVER_FOREGROUNDEDGET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B048 = (uint64_t)"GET_DIRECTIONS_CARPLAY_CONNECTEDHAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B058 = 158;
  qword_261B060 = (uint64_t)"HAS_REROUTE_DRIVINGHIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B070 = 169;
  qword_261B078 = (uint64_t)"HIKING_ENGAGEMENTHIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B088 = 206;
  qword_261B090 = (uint64_t)"HIKING_PLACECARDINCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B0A0 = 207;
  qword_261B0A8 = (uint64_t)"INCIDENT_SUBMISSIONJUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B0C0 = (uint64_t)"JUNCTION_VIEW_SHOWNLIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B0D0 = 113;
  qword_261B0D8 = (uint64_t)"LIBRARY_INTERACTIONLOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B0E8 = 226;
  qword_261B0F0 = (uint64_t)"LOOK_AROUND_FOREGROUNDEDLOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B108 = (uint64_t)"LOOK_AROUND_SHAREDMAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B120 = (uint64_t)"MAPSHOME_GET_DIRECTIONSMAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B138 = (uint64_t)"MAPS_HANDOFFMAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B148 = 117;
  qword_261B150 = (uint64_t)"MAPS_HANDOFF_FROM_IPADMAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B168 = (uint64_t)"MAPS_HANDOFF_FROM_MACMAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B180 = (uint64_t)"MAPS_HANDOFF_FROM_PHONEMAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B198 = (uint64_t)"MAPS_HANDOFF_FROM_WATCHMAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B1B0 = (uint64_t)"MAPS_SEARCH_CARPLAY_CONNECTEDMAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B1C0 = 164;
  qword_261B1C8 = (uint64_t)"MAP_MODE_DRIVING_SELECTEDMAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B1D8 = 130;
  qword_261B1E0 = (uint64_t)"MAP_MODE_DRIVING_USEDMAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B1F0 = 134;
  qword_261B1F8 = (uint64_t)"MAP_MODE_EXPLORE_SELECTEDMAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B208 = 131;
  qword_261B210 = (uint64_t)"MAP_MODE_EXPLORE_USEDMAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B220 = 135;
  qword_261B228 = (uint64_t)"MAP_MODE_SATELLITE_SELECTEDMAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B238 = 133;
  qword_261B240 = (uint64_t)"MAP_MODE_SATELLITE_USEDMAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B250 = 137;
  qword_261B258 = (uint64_t)"MAP_MODE_TRANSIT_SELECTEDMAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B268 = 132;
  qword_261B270 = (uint64_t)"MAP_MODE_TRANSIT_USEDMAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B280 = 136;
  qword_261B288 = (uint64_t)"MAP_VIEW_ACTIVATEDMAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B298 = 154;
  qword_261B2A0 = (uint64_t)"MAP_VIEW_FOREGROUNDEDMAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B2B8 = (uint64_t)"MAP_VIEW_INSTANTIATEDMODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B2C8 = 153;
  qword_261B2D0 = (uint64_t)"MODERN_MAP_EXPLOREDNAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B2E0 = 198;
  qword_261B2E8 = (uint64_t)"NAV_FEEDBACK_DRIVINGNAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B2F8 = 167;
  qword_261B300 = (uint64_t)"NAV_SESSION_COARSE_LOCATIONNAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B318 = (uint64_t)"NAV_SESSION_PRECISE_LOCATIONNAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B330 = (uint64_t)"NAV_STARTED_CARPLAYNAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B348 = (uint64_t)"NAV_STARTED_CURATED_HIKENAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B358 = 220;
  qword_261B360 = (uint64_t)"NAV_STARTED_CUSTOM_HIKENAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B370 = 221;
  qword_261B378 = (uint64_t)"NAV_STARTED_CYCLINGNAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B390 = (uint64_t)"NAV_STARTED_DRIVINGNAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B3A0 = 65;
  qword_261B3A8 = (uint64_t)"NAV_STARTED_EBIKENAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B3B8 = 66;
  qword_261B3C0 = (uint64_t)"NAV_STARTED_EV_ROUTINGNAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B3D0 = 67;
  qword_261B3D8 = (uint64_t)"NAV_STARTED_JUNCTION_VIEWNAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B3E8 = 68;
  qword_261B3F0 = (uint64_t)"NAV_STARTED_LANE_GUIDANCENAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B400 = 69;
  qword_261B408 = (uint64_t)"NAV_STARTED_TRANSITNAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B418 = 70;
  qword_261B420 = (uint64_t)"NAV_STARTED_WALKINGNEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B430 = 71;
  qword_261B438 = (uint64_t)"NEARBY_TRANSIT_SHOWNNEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B448 = 123;
  qword_261B450 = (uint64_t)"NEARBY_TRANSIT_TAPPEDNO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B460 = 124;
  qword_261B468 = (uint64_t)"NO_SEARCH_RESULTSOPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B478 = 208;
  qword_261B480 = (uint64_t)"OPEN_INDOOR_MAPOPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B490 = 72;
  qword_261B498 = (uint64_t)"OPEN_KEYBOARD_CARPLAY_UIOPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B4A8 = 161;
  qword_261B4B0 = (uint64_t)"OPEN_SEARCH_CARPLAY_UIOTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B4C0 = 163;
  qword_261B4C8 = (uint64_t)"OTHER_GET_DIRECTIONSPLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B4D8 = 73;
  qword_261B4E0 = (uint64_t)"PLACECARD_GET_DIRECTIONSPLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B4F0 = 74;
  qword_261B4F8 = (uint64_t)"PLACECARD_RICH_DATA_USEDPLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B508 = 75;
  qword_261B510 = (uint64_t)"PLACECARD_SHAREDPLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B520 = 76;
  qword_261B528 = (uint64_t)"PLACECARD_SHOWNPLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B538 = 77;
  qword_261B540 = (uint64_t)"PLACECARD_SHOWN_SAFARIPLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B550 = 78;
  qword_261B558 = (uint64_t)"PLACECARD_SHOWN_SIRIPLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B568 = 79;
  qword_261B570 = (uint64_t)"PLACECARD_SHOWN_SPOTLIGHTPLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B580 = 80;
  qword_261B588 = (uint64_t)"PLACECARD_START_NAVPOSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B598 = 81;
  qword_261B5A0 = (uint64_t)"POSITIVE_SEARCH_ENGAGEMENTPROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B5B0 = 203;
  qword_261B5B8 = (uint64_t)"PROMINENT_GET_DIRECTIONSPUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B5C8 = 82;
  qword_261B5D0 = (uint64_t)"PUNCH_IN_3RD_PARTYPUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B5E0 = 189;
  qword_261B5E8 = (uint64_t)"PUNCH_IN_FINDMYPUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B5F8 = 187;
  qword_261B600 = (uint64_t)"PUNCH_IN_OTHER_2ND_PARTYPUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B610 = 188;
  qword_261B618 = (uint64_t)"PUNCH_IN_SAFARIPUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B628 = 184;
  qword_261B630 = (uint64_t)"PUNCH_IN_SHOWCASEPUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B640 = 209;
  qword_261B648 = (uint64_t)"PUNCH_IN_SIRIPUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B658 = 183;
  qword_261B660 = (uint64_t)"PUNCH_IN_SMSPUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B670 = 186;
  qword_261B678 = (uint64_t)"PUNCH_IN_SPOTLIGHTPUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B688 = 185;
  qword_261B690 = (uint64_t)"PUNCH_OUT_FINDMYRAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B6A0 = 204;
  qword_261B6A8 = (uint64_t)"RAP_GOOD_TRIPRAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B6B8 = 174;
  qword_261B6C0 = (uint64_t)"RAP_STARTEDRAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B6D0 = 83;
  qword_261B6D8 = (uint64_t)"RAP_SUBMITTEDRIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B6E8 = 191;
  qword_261B6F0 = (uint64_t)"RIDESHARE_REQUESTEDROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B700 = 84;
  qword_261B708 = (uint64_t)"ROUTING_TRAY_CURATED_HIKE_SHOWNROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B718 = 222;
  qword_261B720 = (uint64_t)"ROUTING_TRAY_CUSTOM_HIKE_SHOWNSEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B730 = 223;
  qword_261B738 = (uint64_t)"SEARCH_FILTER_INTERACTIONSEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B748 = 227;
  qword_261B750 = (uint64_t)"SEARCH_NEARBY_CATEGORY_TAPPEDSEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B760 = 85;
  qword_261B768 = (uint64_t)"SEARCH_PHOTO_INTERACTIONSEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B778 = 224;
  qword_261B780 = (uint64_t)"SEARCH_RECENTLY_VIEWED_TAPPEDSEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B790 = 86;
  qword_261B798 = (uint64_t)"SEARCH_RECENT_SEARCHES_TAPPEDSEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B7A8 = 87;
  qword_261B7B0 = (uint64_t)"SEARCH_RESULTS_SHOWN_MAPSSEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B7C0 = 88;
  qword_261B7C8 = (uint64_t)"SEARCH_RESULTS_SHOWN_SAFARISEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B7D8 = 89;
  qword_261B7E0 = (uint64_t)"SEARCH_RESULTS_SHOWN_SIRISEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B7F0 = 90;
  qword_261B7F8 = (uint64_t)"SEARCH_RESULTS_SHOWN_SPOTLIGHTSEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B808 = 91;
  qword_261B810 = (uint64_t)"SEARCH_RESULTS_TAPPED_SAFARISEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B820 = 92;
  qword_261B828 = (uint64_t)"SEARCH_RESULTS_TAPPED_SIRISEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B838 = 93;
  qword_261B840 = (uint64_t)"SEARCH_RESULTS_TAPPED_SPOTLIGHTSEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B850 = 94;
  qword_261B858 = (uint64_t)"SEARCH_RESULT_TAPPED_MAPSSEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B868 = 95;
  qword_261B870 = (uint64_t)"SEARCH_SUGGESTION_TAPPEDSHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B880 = 96;
  qword_261B888 = (uint64_t)"SHARED_LOCATION_ENGAGEMENTSHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B898 = 210;
  qword_261B8A0 = (uint64_t)"SHARE_DRIVING_ROUTESSHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B8B0 = 97;
  qword_261B8B8 = (uint64_t)"SHARE_FAVORITESSHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B8C8 = 98;
  qword_261B8D0 = (uint64_t)"SHARE_MYLOCATIONSHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B8E0 = 99;
  qword_261B8E8 = (uint64_t)"SHARE_SHOWCASESHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B8F8 = 211;
  qword_261B900 = (uint64_t)"SHARE_TO_DEVICESHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B918 = (uint64_t)"SHARE_TRANSIT_ROUTESSHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B928 = 101;
  qword_261B930 = (uint64_t)"SHARE_WALKING_ROUTESSHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B940 = 102;
  qword_261B948 = (uint64_t)"SHOWCASE_SHOWNSHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B958 = 181;
  qword_261B960 = (uint64_t)"SHOWCASE_TAPPEDSHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B970 = 182;
  qword_261B978 = (uint64_t)"SHOW_MAPS_SETTINGSSIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B990 = (uint64_t)"SIRI_SEARCH_CARPLAY_UISIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261B9A0 = 160;
  qword_261B9A8 = (uint64_t)"SIRI_START_NAVSNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261AC20 = 29;
  qword_261AC30 = 26;
  dword_261AC38 = 30;
  qword_261BBE8 = (uint64_t)"VLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261C588 = 301;
  dword_261CA98 = 503;
  qword_261CAA0 = (uint64_t)"TRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261CAA8 = 12;
  dword_261CA80 = 706;
  qword_261CA88 = (uint64_t)"TRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261CA78 = 8;
  qword_261CA90 = 7;
  dword_261CA38 = 710;
  qword_261CA70 = (uint64_t)"TILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261CA60 = 9;
  dword_261CA68 = 11;
  qword_261CA40 = (uint64_t)"SUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  dword_261CA50 = 714;
  qword_261CA58 = (uint64_t)"TAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261CA48 = 23;
  qword_261CA28 = (uint64_t)"SUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261CA18 = 14;
  dword_261CA20 = 8;
  qword_261CA30 = 11;
  qword_261C968 = (uint64_t)"RATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261CA10 = (uint64_t)"SEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261CA00 = 17;
  dword_261CA08 = 13;
  qword_261C9E0 = (uint64_t)"ROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  dword_261C9F0 = 723;
  qword_261C9F8 = (uint64_t)"ROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C9E8 = 16;
  qword_261C9C8 = (uint64_t)"ROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  dword_261C9D8 = 703;
  qword_261C9D0 = 5;
  dword_261C9A8 = 712;
  qword_261C9B0 = (uint64_t)"REPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  dword_261C9C0 = 711;
  qword_261C9B8 = 15;
  dword_261C990 = 727;
  qword_261C998 = (uint64_t)"REALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C988 = 17;
  qword_261C9A0 = 16;
  dword_261C978 = 728;
  qword_261C980 = (uint64_t)"RATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C970 = 23;
  dword_261C720 = 724;
  qword_261C950 = (uint64_t)"RAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  dword_261C948 = 5;
  qword_261C958 = 3;
  dword_261C960 = 4;
  dword_261C930 = 707;
  qword_261C938 = (uint64_t)"PLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C928 = 13;
  qword_261C940 = 20;
  dword_261C918 = 730;
  qword_261C920 = (uint64_t)"PLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C910 = 14;
  qword_261C8F0 = (uint64_t)"PLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  dword_261C900 = 702;
  qword_261C908 = (uint64_t)"PLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C8F8 = 10;
  qword_261C8D8 = (uint64_t)"PHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  dword_261C8E8 = 726;
  qword_261C8E0 = 16;
  dword_261C8B8 = 731;
  qword_261C8C0 = (uint64_t)"PAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  dword_261C8D0 = 405;
  qword_261C8C8 = 13;
  dword_261C8A0 = 713;
  qword_261C8A8 = (uint64_t)"OFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C898 = 7;
  qword_261C8B0 = 16;
  qword_261C878 = (uint64_t)"NEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C890 = (uint64_t)"OFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C880 = 14;
  dword_261C888 = 7;
  qword_261C860 = (uint64_t)"NAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  dword_261C870 = 708;
  qword_261C868 = 10;
  dword_261C840 = 722;
  qword_261C848 = (uint64_t)"MUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  dword_261C858 = 717;
  qword_261C850 = 18;
  dword_261C828 = 502;
  qword_261C830 = (uint64_t)"MARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C820 = 17;
  qword_261C838 = 6;
  dword_261C810 = 501;
  qword_261C818 = (uint64_t)"MAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C808 = 8;
  qword_261C7E8 = (uint64_t)"MAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  dword_261C7F8 = 506;
  qword_261C800 = (uint64_t)"MAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C7F0 = 12;
  qword_261C7D0 = (uint64_t)"MAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  dword_261C7E0 = 505;
  qword_261C7D8 = 6;
  dword_261C7B0 = 709;
  qword_261C7B8 = (uint64_t)"MAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  dword_261C7C8 = 504;
  qword_261C7C0 = 12;
  dword_261C798 = 725;
  qword_261C7A0 = (uint64_t)"MAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C790 = 18;
  qword_261C7A8 = 11;
  qword_261C770 = (uint64_t)"MAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C788 = (uint64_t)"MAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  qword_261C778 = 9;
  dword_261C780 = 2;
  qword_261C758 = (uint64_t)"MAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  dword_261C768 = 705;
  qword_261C760 = 11;
  dword_261C738 = 718;
  dword_261C750 = 729;
  qword_261C740 = (uint64_t)"MAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C748 = 14;
  qword_261C728 = (uint64_t)"MAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C730 = 11;
  qword_261C710 = (uint64_t)"MAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C718 = 13;
  dword_261C708 = 716;
  qword_261C6F8 = (uint64_t)"LOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C700 = 16;
  dword_261C6C0 = 704;
  qword_261C6E0 = (uint64_t)"LOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C6E8 = 26;
  dword_261C6D8 = 10;
  dword_261C6F0 = 0;
  qword_261C6C8 = (uint64_t)"IMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C6D0 = 17;
  qword_261C6B0 = (uint64_t)"FLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C6B8 = 7;
  dword_261C6A8 = 406;
  qword_261C698 = (uint64_t)"EXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C6A0 = 9;
  dword_261C648 = 407;
  dword_261C690 = 602;
  qword_261C680 = (uint64_t)"EXPERIMENTSEXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C688 = 11;
  dword_261C660 = 721;
  qword_261C668 = (uint64_t)"ELEMENT_IMPRESSIONEXPERIMENTSEXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C670 = 18;
  dword_261C678 = 9;
  qword_261C650 = (uint64_t)"DIRECTIONS_DETAILELEMENT_IMPRESSIONEXPERIMENTSEXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C658 = 17;
  qword_261C638 = (uint64_t)"DEVICE_SETTINGSDIRECTIONS_DETAILELEMENT_IMPRESSIONEXPERIMENTSEXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C640 = 15;
  dword_261C5E8 = 401;
  dword_261C630 = 402;
  qword_261C620 = (uint64_t)"DEVICE_LOCALEDEVICE_SETTINGSDIRECTIONS_DETAILELEMENT_IMPRESSIONEXPERIMENTSEXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C628 = 13;
  dword_261C600 = 403;
  dword_261C618 = 201;
  qword_261C608 = (uint64_t)"DEVICE_IDENTIFIERDEVICE_LOCALEDEVICE_SETTINGSDIRECTIONS_DETAILELEMENT_IMPRESSIONEXPERIMENTSEXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C610 = 17;
  qword_261C5F0 = (uint64_t)"DEVICE_CONNECTIONDEVICE_IDENTIFIERDEVICE_LOCALEDEVICE_SETTINGSDIRECTIONS_DETAILELEMENT_IMPRESSIONEXPERIMENTSEXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C5F8 = 17;
  qword_261C5D8 = (uint64_t)"DEVICE_BASEDEVICE_CONNECTIONDEVICE_IDENTIFIERDEVICE_LOCALEDEVICE_SETTINGSDIRECTIONS_DETAILELEMENT_IMPRESSIONEXPERIMENTSEXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C5E0 = 11;
  dword_261C5D0 = 715;
  qword_261C5C0 = (uint64_t)"DETAIL_LOOK_AROUND_LOGDEVICE_BASEDEVICE_CONNECTIONDEVICE_IDENTIFIERDEVICE_LOCALEDEVICE_SETTINGSDIRECTIONS_DETAILELEMENT_IMPRESSIONEXPERIMENTSEXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C5C8 = 22;
  qword_261C590 = (uint64_t)"CAR_PLAYCURATED_COLLECTIONDETAIL_LOOK_AROUND_LOGDEVICE_BASEDEVICE_CONNECTIONDEVICE_IDENTIFIERDEVICE_LOCALEDEVICE_SETTINGSDIRECTIONS_DETAILELEMENT_IMPRESSIONEXPERIMENTSEXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C598 = 8;
  dword_261C5B8 = 719;
  qword_261C5A8 = (uint64_t)"CURATED_COLLECTIONDETAIL_LOOK_AROUND_LOGDEVICE_BASEDEVICE_CONNECTIONDEVICE_IDENTIFIERDEVICE_LOCALEDEVICE_SETTINGSDIRECTIONS_DETAILELEMENT_IMPRESSIONEXPERIMENTSEXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C5B0 = 18;
  dword_261C5A0 = 404;
  qword_261C578 = (uint64_t)"APPLICATION_IDENTIFIERCAR_PLAYCURATED_COLLECTIONDETAIL_LOOK_AROUND_LOGDEVICE_BASEDEVICE_CONNECTIONDEVICE_IDENTIFIERDEVICE_LOCALEDEVICE_SETTINGSDIRECTIONS_DETAILELEMENT_IMPRESSIONEXPERIMENTSEXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C580 = 22;
  dword_261B9B8 = 104;
  qword_261C548 = (uint64_t)"ACCOUNTACTION_BUTTON_DETAILSAPPLICATION_IDENTIFIERCAR_PLAYCURATED_COLLECTIONDETAIL_LOOK_AROUN"
                           "D_LOGDEVICE_BASEDEVICE_CONNECTIONDEVICE_IDENTIFIERDEVICE_LOCALEDEVICE_SETTINGSDIRECTIONS_DETA"
                           "ILELEMENT_IMPRESSIONEXPERIMENTSEXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOO"
                           "K_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_"
                           "RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGAT"
                           "IONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAP"
                           "PLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICR"
                           "EPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_ARO"
                           "UND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C550 = 7;
  qword_261C560 = (uint64_t)"ACTION_BUTTON_DETAILSAPPLICATION_IDENTIFIERCAR_PLAYCURATED_COLLECTIONDETAIL_LOOK_AROUND_LOGDEVICE_BASEDEVICE_CONNECTIONDEVICE_IDENTIFIERDEVICE_LOCALEDEVICE_SETTINGSDIRECTIONS_DETAILELEMENT_IMPRESSIONEXPERIMENTSEXTENSIONFLYOVERIMPRESSION_OBJECTLOG_MSG_STATE_TYPE_UNKNOWNLOOK_AROUND_VIEWMAPS_FEATURESMAPS_LAUNCHMAPS_PLACE_IDSMAPS_SERVERMAPS_USERMAPS_USER_SETTINGSMAP_RESTOREMAP_SETTINGSMAP_UIMAP_UI_SHOWNMAP_VIEWMAP_VIEW_LOCATIONMARKETMUNIN_RESOURCE_LOGNAVIGATIONNEARBY_TRANSITOFFLINEOFFLINE_DOWNLOADPAIRED_DEVICEPHOTO_SUBMISSIONPLACE_CARDPLACE_CARD_RAPPLACE_REQUESTPLACE_SUMMARY_LAYOUTRAPRATING_PHOTO_SUBMISSIONRATING_SUBMISSIONREALTIME_TRAFFICREPORT_AN_ISSUEROUTEROUTING_SETTINGSROUTING_WAYPOINTSSEARCH_RESULTSSUGGESTIONSSUMMARY_LOOK_AROUND_LOGTAP_EVENTTILE_SETTRANSITTRANSIT_STEPUGC_PHOTOUSER_SESSION";
  unk_261C568 = 21;
  dword_261C570 = 12;
  dword_261C558 = 3;
  qword_261C530 = (uint64_t)"SESSION_STATE";
  unk_261C538 = 13;
  dword_261C540 = 600;
  dword_261C4F8 = 700;
  dword_261C510 = 100;
  qword_261C518 = (uint64_t)"LOG_MSG_STATE_GROUP_UNKNOWNSESSION_STATE";
  unk_261C520 = 27;
  dword_261C528 = 0;
  qword_261C500 = (uint64_t)"LOG_MSG_STATE_GROUP_BASELOG_MSG_STATE_GROUP_UNKNOWNSESSION_STATE";
  unk_261C508 = 24;
  qword_261C4E8 = (uint64_t)"FEATURE_STATELOG_MSG_STATE_GROUP_BASELOG_MSG_STATE_GROUP_UNKNOWNSESSION_STATE";
  unk_261C4F0 = 13;
  dword_261C4E0 = 400;
  qword_261C4D0 = (uint64_t)"DEVICE_STATEFEATURE_STATELOG_MSG_STATE_GROUP_BASELOG_MSG_STATE_GROUP_UNKNOWNSESSION_STATE";
  unk_261C4D8 = 12;
  dword_261C468 = 10000;
  dword_261C4C8 = 200;
  qword_261C4B8 = (uint64_t)"DEVICE_CONFIGDEVICE_STATEFEATURE_STATELOG_MSG_STATE_GROUP_BASELOG_MSG_STATE_GROUP_UNKNOWNSESSION_STATE";
  unk_261C4C0 = 13;
  qword_261C4A0 = (uint64_t)"APP_STATEDEVICE_CONFIGDEVICE_STATEFEATURE_STATELOG_MSG_STATE_GROUP_BASELOG_MSG_STATE_GROUP_UNKNOWNSESSION_STATE";
  dword_261C498 = 300;
  qword_261C4A8 = 9;
  dword_261C4B0 = 500;
  dword_261C480 = 50002;
  qword_261C488 = (uint64_t)"APP_CONFIGAPP_STATEDEVICE_CONFIGDEVICE_STATEFEATURE_STATELOG_MSG_STATE_GROUP_BASELOG_MSG_STAT"
                           "E_GROUP_UNKNOWNSESSION_STATE";
  unk_261C490 = 10;
  qword_261C470 = (uint64_t)"WIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  qword_261C458 = (uint64_t)"USAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  unk_261C460 = 5;
  qword_261C478 = 40;
  dword_261C450 = 40000;
  qword_261C440 = (uint64_t)"TELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  unk_261C448 = 9;
  dword_261C408 = 50000;
  dword_261C438 = 11000;
  qword_261C428 = (uint64_t)"SHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  unk_261C430 = 19;
  dword_261C420 = 13000;
  qword_261C410 = (uint64_t)"SESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  unk_261C418 = 17;
  qword_261C3F8 = (uint64_t)"REALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  unk_261C400 = 22;
  qword_261C3E0 = (uint64_t)"PRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  unk_261C3E8 = 21;
  dword_261C3F0 = 4;
  dword_261C390 = 30000;
  qword_261C3C8 = (uint64_t)"POI_BUSYNESS_DATA_SESSIONPRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  qword_261C3D0 = 25;
  dword_261C3D8 = 5;
  dword_261C3C0 = 20000;
  qword_261C3B0 = (uint64_t)"PERFORMANCEPOI_BUSYNESS_DATA_SESSIONPRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  unk_261C3B8 = 11;
  dword_261C3A8 = 7;
  qword_261C398 = (uint64_t)"NETWORK_SELECTION_HARVEST_SESSIONPERFORMANCEPOI_BUSYNESS_DATA_SESSIONPRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  qword_261C380 = (uint64_t)"NAVIGATION_TRACENETWORK_SELECTION_HARVEST_SESSIONPERFORMANCEPOI_BUSYNESS_DATA_SESSIONPRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  unk_261C388 = 16;
  qword_261C3A0 = 33;
  dword_261C378 = 12000;
  qword_261C368 = (uint64_t)"LONG_SESSION_USAGENAVIGATION_TRACENETWORK_SELECTION_HARVEST_SESSIONPERFORMANCEPOI_BUSYNESS_DATA_SESSIONPRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  unk_261C370 = 18;
  dword_261C360 = 14000;
  qword_261C350 = (uint64_t)"LONG_SESSION_LOG_FRAMEWORK_USAGELONG_SESSION_USAGENAVIGATION_TRACENETWORK_SELECTION_HARVEST_SESSIONPERFORMANCEPOI_BUSYNESS_DATA_SESSIONPRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  qword_261C358 = 32;
  qword_261B9C0 = (uint64_t)"SNAPSHOTTER_USEDSPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261BBC8 = 109;
  qword_261BBC0 = 24;
  dword_261C348 = 0;
  dword_261BBB0 = 148;
  qword_261BBB8 = (uint64_t)"VLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BBA8 = 17;
  dword_261BB98 = 129;
  qword_261BBA0 = (uint64_t)"VENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BB90 = 18;
  dword_261BB80 = 128;
  qword_261BB88 = (uint64_t)"USER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BB78 = 27;
  dword_261BB68 = 147;
  qword_261BB70 = (uint64_t)"USER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BB60 = 19;
  dword_261B9D0 = 105;
  qword_261BB58 = (uint64_t)"USER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BB48 = 13;
  dword_261BB50 = 0;
  dword_261BB38 = 108;
  qword_261BB40 = (uint64_t)"UNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BB30 = 21;
  dword_261BB20 = 107;
  qword_261BB28 = (uint64_t)"UGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BB18 = 20;
  dword_261BB08 = 168;
  qword_261BB10 = (uint64_t)"UGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BB00 = 22;
  dword_261BAF0 = 127;
  qword_261BAF8 = (uint64_t)"TRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BAE8 = 20;
  dword_261BAD8 = 194;
  qword_261BAE0 = (uint64_t)"TRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BAD0 = 23;
  dword_261BAC0 = 196;
  qword_261BAC8 = (uint64_t)"TRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BAB8 = 24;
  dword_261BAA8 = 195;
  qword_261BAB0 = (uint64_t)"TRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BAA0 = 24;
  dword_261BA90 = 197;
  qword_261BA98 = (uint64_t)"TRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BA88 = 22;
  dword_261BA78 = 151;
  qword_261BA80 = (uint64_t)"TRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BA70 = 28;
  dword_261BA60 = 166;
  qword_261BA68 = (uint64_t)"TOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BA58 = 29;
  dword_261BA48 = 176;
  qword_261BA50 = (uint64_t)"TOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BA40 = 18;
  dword_261BA30 = 162;
  qword_261BA38 = (uint64_t)"TAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BA28 = 21;
  dword_261BA18 = 106;
  qword_261BA20 = (uint64_t)"TAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261BA10 = 16;
  dword_261BA00 = 126;
  qword_261BA08 = (uint64_t)"TAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B9F8 = 19;
  dword_261B9E8 = 125;
  qword_261B9F0 = (uint64_t)"SPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B9E0 = 18;
  qword_261B9D8 = (uint64_t)"SPR_GLOBE_EXPLOREDSPR_METROS_EXPLOREDTAP_COMPASS_MODETAP_SEARCH_CARPLAY_UITAP_TRANSIT_TIPKITTOTAL_SECONDS_IN_MAPS_CARPLAYTOTAL_SECONDS_IN_MAPS_DEVICETRAFFIC_INCIDENT_CLEARTRAFFIC_INCIDENT_CONFIRMTRAFFIC_INCIDENT_DISMISSTRAFFIC_INCIDENT_REPORTTRANSIT_DETAILS_USEDTRIP_COMPLETED_DRIVINGUGC_PHOTO_SUBMISSIONUGC_RATING_SUBMISSIONUNKNOWN_EVENTUSER_ACCOUNT_OPENEDUSER_ACCOUNT_OPENED_ACCOUNTUSER_ACCOUNT_SHOWNVENUE_INTERACTIONVLF_CORRECTION_ATTEMPTEDVLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B9C8 = 16;
  qword_261BBD0 = (uint64_t)"VLF_CORRECTION_FAILEDVLF_CORRECTION_SUCCESSWATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261BBE0 = 110;
  dword_261BBF8 = 111;
  qword_261B9B0 = 14;
  qword_261BC00 = (uint64_t)"WATCH_GET_DIRECTIONS_CYCLINGWATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  dword_261BC10 = 138;
  qword_261B998 = 22;
  qword_261BC18 = (uint64_t)"WATCH_GET_DIRECTIONS_DRIVINGWATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B980 = 18;
  dword_261B988 = 103;
  dword_261BC28 = 144;
  qword_261BC30 = (uint64_t)"WATCH_GET_DIRECTIONS_TRANSITWATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B968 = 15;
  dword_261BC40 = 142;
  qword_261BC48 = (uint64_t)"WATCH_GET_DIRECTIONS_WALKINGWATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B950 = 14;
  dword_261BC58 = 140;
  qword_261BC60 = (uint64_t)"WATCH_MAP_VIEWWATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B938 = 20;
  dword_261BC70 = 212;
  qword_261BC78 = (uint64_t)"WATCH_PLACECARDWATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B920 = 20;
  dword_261BC88 = 213;
  qword_261BC90 = (uint64_t)"WATCH_SEARCHWATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B908 = 15;
  dword_261B910 = 100;
  dword_261BCA0 = 214;
  qword_261BCA8 = (uint64_t)"WATCH_START_NAVWATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B8F0 = 14;
  dword_261BCB8 = 205;
  qword_261BCC0 = (uint64_t)"WATCH_START_NAV_CYCLINGWATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B8D8 = 16;
  dword_261BCD0 = 139;
  qword_261BCD8 = (uint64_t)"WATCH_START_NAV_DRIVINGWATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B8C0 = 15;
  dword_261BCE8 = 145;
  qword_261BCF0 = (uint64_t)"WATCH_START_NAV_TRANSITWATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B8A8 = 20;
  dword_261BD00 = 143;
  qword_261BD08 = (uint64_t)"WATCH_START_NAV_WALKINGWIDGET_ENTER";
  qword_261B890 = 26;
  dword_261BD18 = 141;
  qword_261B860 = 25;
  qword_261B878 = 24;
  qword_261BD20 = (uint64_t)"WIDGET_ENTER";
  dword_261BD30 = 112;
  dword_261AC50 = 31;
  qword_261B830 = 26;
  qword_261B848 = 31;
  qword_261AC60 = 25;
  dword_261AC68 = 32;
  qword_261AC78 = 24;
  dword_261AC80 = 33;
  qword_261B800 = 30;
  qword_261B818 = 28;
  qword_261AC90 = 18;
  qword_261ACA8 = 31;
  qword_261ACC0 = 17;
  qword_261ACD8 = 16;
  qword_261B7D0 = 27;
  qword_261B7E8 = 25;
  dword_261ACE0 = 34;
  qword_261ACF0 = 10;
  dword_261ACF8 = 35;
  qword_261AD08 = 30;
  qword_261B7A0 = 29;
  qword_261B7B8 = 25;
  qword_261AD20 = 31;
  qword_261AD38 = 38;
  qword_261AD50 = 33;
  qword_261AD68 = 32;
  qword_261B770 = 24;
  qword_261B788 = 29;
  qword_261AD80 = 28;
  dword_261AD88 = 36;
  qword_261AD98 = 28;
  dword_261ADA0 = 37;
  qword_261B740 = 25;
  qword_261B758 = 29;
  qword_261ADB0 = 46;
  qword_261ADC8 = 26;
  dword_261ADD0 = 38;
  qword_261ADE0 = 31;
  qword_261B710 = 31;
  qword_261B728 = 30;
  dword_261ADE8 = 39;
  qword_261ADF8 = 28;
  dword_261AE00 = 40;
  qword_261AE10 = 28;
  qword_261B6E0 = 13;
  qword_261B6F8 = 19;
  dword_261AE18 = 41;
  qword_261AE28 = 17;
  dword_261AE30 = 42;
  qword_261AE40 = 25;
  qword_261B6B0 = 13;
  qword_261B6C8 = 11;
  dword_261AE48 = 43;
  qword_261AE58 = 20;
  dword_261AE60 = 44;
  qword_261AE70 = 27;
  qword_261B680 = 18;
  qword_261B698 = 16;
  qword_261AE88 = 10;
  qword_261AEA0 = 18;
  dword_261AEA8 = 45;
  qword_261AEB8 = 17;
  qword_261B650 = 13;
  qword_261B668 = 12;
  qword_261AED0 = 22;
  dword_261AED8 = 46;
  qword_261AEE8 = 24;
  qword_261AF00 = 12;
  qword_261B620 = 15;
  qword_261B638 = 17;
  dword_261AF08 = 47;
  qword_261AF18 = 10;
  dword_261AF20 = 48;
  qword_261AF30 = 18;
  qword_261B5F0 = 15;
  qword_261B608 = 24;
  qword_261AF48 = 18;
  qword_261AF60 = 18;
  qword_261AF78 = 18;
  qword_261AF90 = 25;
  qword_261B5C0 = 24;
  qword_261B5D8 = 18;
  qword_261AFA8 = 9;
  qword_261AFC0 = 17;
  qword_261AFD8 = 32;
  qword_261AFF0 = 33;
  qword_261B590 = 19;
  qword_261B5A8 = 26;
  qword_261B008 = 18;
  dword_261B010 = 49;
  qword_261B020 = 22;
  dword_261B028 = 50;
  qword_261B560 = 20;
  qword_261B578 = 25;
  qword_261B038 = 20;
  dword_261B040 = 51;
  qword_261B050 = 32;
  qword_261B068 = 19;
  qword_261B530 = 15;
  qword_261B548 = 22;
  qword_261B080 = 17;
  qword_261B098 = 16;
  qword_261B0B0 = 19;
  dword_261B0B8 = 52;
  qword_261B500 = 24;
  qword_261B518 = 16;
  qword_261B0C8 = 19;
  qword_261B0E0 = 19;
  qword_261B0F8 = 24;
  dword_261B100 = 53;
  qword_261B4D0 = 20;
  qword_261B4E8 = 24;
  qword_261B110 = 18;
  dword_261B118 = 54;
  qword_261B128 = 23;
  dword_261B130 = 55;
  qword_261B4A0 = 24;
  qword_261B4B8 = 22;
  qword_261B140 = 12;
  qword_261B158 = 22;
  dword_261B160 = 56;
  qword_261B170 = 21;
  qword_261B470 = 17;
  qword_261B488 = 15;
  dword_261B178 = 57;
  qword_261B188 = 23;
  dword_261B190 = 58;
  qword_261B1A0 = 23;
  qword_261B458 = 21;
  dword_261B1A8 = 59;
  qword_261B1B8 = 29;
  qword_261B1D0 = 25;
  qword_261B1E8 = 21;
  qword_261B428 = 19;
  qword_261B440 = 20;
  qword_261B200 = 25;
  qword_261B218 = 21;
  qword_261B230 = 27;
  qword_261B248 = 23;
  qword_261B3F8 = 25;
  qword_261B410 = 19;
  qword_261B260 = 25;
  qword_261B278 = 21;
  qword_261B290 = 18;
  qword_261B2A8 = 21;
  qword_261B3C8 = 22;
  qword_261B3E0 = 25;
  dword_261B2B0 = 60;
  qword_261B2C0 = 21;
  qword_261B2D8 = 19;
  qword_261B398 = 19;
  qword_261B3B0 = 17;
  qword_261B2F0 = 20;
  qword_261B308 = 27;
  qword_261B380 = 19;
  dword_261B388 = 64;
  dword_261B310 = 61;
  qword_261B320 = 28;
  dword_261B328 = 62;
  qword_261B350 = 24;
  qword_261B368 = 23;
  qword_261B338 = 19;
  dword_261B340 = 63;
  qword_261BBD8 = 21;
  qword_261BBF0 = 22;
  qword_261BC08 = 28;
  qword_261BC20 = 28;
  qword_261BC38 = 28;
  qword_261BC50 = 28;
  qword_261BC68 = 14;
  qword_261BC80 = 15;
  qword_261BC98 = 12;
  qword_261BCB0 = 15;
  qword_261BCC8 = 23;
  qword_261BCE0 = 23;
  qword_261BCF8 = 23;
  qword_261BD10 = 23;
  qword_261BD28 = 12;
  qword_261BD50 = (uint64_t)"UseSummaryPeriod_MONTHLYUseSummaryPeriod_UNSPECIFIED";
  unk_261BD58 = 24;
  qword_261BD68 = (uint64_t)"UseSummaryPeriod_UNSPECIFIED";
  unk_261BD70 = 28;
  qword_261BD38 = (uint64_t)"UseSummaryPeriod_DAILYUseSummaryPeriod_MONTHLYUseSummaryPeriod_UNSPECIFIED";
  unk_261BD40 = 22;
  dword_261BD48 = 1;
  dword_261BD60 = 2;
  dword_261BD78 = 0;
  qword_261BD98 = (uint64_t)"MAP_FEATURE_TREESMAP_FEATURE_UNKNOWN";
  unk_261BDA0 = 17;
  qword_261BDB0 = (uint64_t)"MAP_FEATURE_UNKNOWN";
  unk_261BDB8 = 19;
  qword_261BD80 = (uint64_t)"MAP_FEATURE_SHADOWSMAP_FEATURE_TREESMAP_FEATURE_UNKNOWN";
  *(void *)algn_261BD88 = 19;
  dword_261BD90 = 2;
  dword_261BDA8 = 1;
  dword_261BDC0 = 0;
  qword_261BDE0 = (uint64_t)"NAV_MAP_TYPE_MERCATORNAV_MAP_TYPE_MODERNNAV_MAP_TYPE_UNKNOWN";
  unk_261BDE8 = 21;
  qword_261BDF8 = (uint64_t)"NAV_MAP_TYPE_MODERNNAV_MAP_TYPE_UNKNOWN";
  unk_261BE00 = 19;
  qword_261BE10 = (uint64_t)"NAV_MAP_TYPE_UNKNOWN";
  unk_261BE18 = 20;
  qword_261BDC8 = (uint64_t)"NAV_MAP_TYPE_ADVANCEDNAV_MAP_TYPE_MERCATORNAV_MAP_TYPE_MODERNNAV_MAP_TYPE_UNKNOWN";
  unk_261BDD0 = 21;
  dword_261BDD8 = 2;
  dword_261BDF0 = 3;
  dword_261BE08 = 1;
  dword_261BE20 = 0;
  qword_261BE40 = (uint64_t)"COLLECTION_TRIGGER_END_NAVCOLLECTION_TRIGGER_START_NAVCOLLECTION_TRIGGER_THERMAL_PRESSURE_DELTACOLLECTION_TRIGGER_UNKNOWN";
  qword_261BE58 = (uint64_t)"COLLECTION_TRIGGER_START_NAVCOLLECTION_TRIGGER_THERMAL_PRESSURE_DELTACOLLECTION_TRIGGER_UNKNOWN";
  unk_261BE60 = 28;
  qword_261BE70 = (uint64_t)"COLLECTION_TRIGGER_THERMAL_PRESSURE_DELTACOLLECTION_TRIGGER_UNKNOWN";
  unk_261BE78 = 41;
  qword_261BE28 = (uint64_t)"CHARGING_STATE_CHANGECOLLECTION_TRIGGER_END_NAVCOLLECTION_TRIGGER_START_NAVCOLLECTION_TRIGGER"
                           "_THERMAL_PRESSURE_DELTACOLLECTION_TRIGGER_UNKNOWN";
  unk_261BE30 = 21;
  dword_261BE38 = 4;
  qword_261BE48 = 26;
  dword_261BE50 = 2;
  dword_261BE68 = 1;
  dword_261BE80 = 3;
  qword_261BE88 = (uint64_t)"COLLECTION_TRIGGER_UNKNOWN";
  unk_261BE90 = 26;
  dword_261BE98 = 0;
  qword_261BEB8 = (uint64_t)"CHARGING_STATE_UNKNOWNCHARGING_STATE_WIRED_CHARGINGCHARGING_STATE_WIRELESS_CHARGING";
  unk_261BEC0 = 22;
  qword_261BED0 = (uint64_t)"CHARGING_STATE_WIRED_CHARGINGCHARGING_STATE_WIRELESS_CHARGING";
  qword_261BEA0 = (uint64_t)"CHARGING_STATE_NOT_CHARGINGCHARGING_STATE_UNKNOWNCHARGING_STATE_WIRED_CHARGINGCHARGING_STATE_"
                           "WIRELESS_CHARGING";
  *(void *)algn_261BEA8 = 27;
  dword_261BEB0 = 1;
  dword_261BEC8 = 0;
  qword_261BED8 = 29;
  dword_261BEE0 = 2;
  qword_261BEE8 = (uint64_t)"CHARGING_STATE_WIRELESS_CHARGING";
  unk_261BEF0 = 32;
  dword_261BEF8 = 3;
  qword_261BF18 = (uint64_t)"AR_ELEMENT_CONTINUEAR_ELEMENT_MANEUVERAR_ELEMENT_NONEAR_ELEMENT_UNKNOWN";
  qword_261BF30 = (uint64_t)"AR_ELEMENT_MANEUVERAR_ELEMENT_NONEAR_ELEMENT_UNKNOWN";
  qword_261BF48 = (uint64_t)"AR_ELEMENT_NONEAR_ELEMENT_UNKNOWN";
  unk_261BF50 = 15;
  qword_261BF60 = (uint64_t)"AR_ELEMENT_UNKNOWN";
  unk_261BF68 = 18;
  qword_261BF00 = (uint64_t)"AR_ELEMENT_ARRIVALAR_ELEMENT_CONTINUEAR_ELEMENT_MANEUVERAR_ELEMENT_NONEAR_ELEMENT_UNKNOWN";
  *(void *)algn_261BF08 = 18;
  dword_261BF10 = 4;
  qword_261BF20 = 19;
  dword_261BF28 = 2;
  qword_261BF38 = 19;
  dword_261BF40 = 3;
  dword_261BF58 = 1;
  dword_261BF70 = 0;
  qword_261BF90 = (uint64_t)"AR_SESSION_COLLECTION_COLLECTION_TRIGGER_END_ARAR_SESSION_COLLECTION_COLLECTION_TRIGGER_START_ARAR_SESSION_COLLECTION_COLLECTION_TRIGGER_THERMAL_PRESSURE_DELTAAR_SESSION_COLLECTION_COLLECTION_TRIGGER_UNKNOWN";
  unk_261BF98 = 47;
  qword_261BFA8 = (uint64_t)"AR_SESSION_COLLECTION_COLLECTION_TRIGGER_START_ARAR_SESSION_COLLECTION_COLLECTION_TRIGGER_THERMAL_PRESSURE_DELTAAR_SESSION_COLLECTION_COLLECTION_TRIGGER_UNKNOWN";
  unk_261BFB0 = 49;
  qword_261BFC0 = (uint64_t)"AR_SESSION_COLLECTION_COLLECTION_TRIGGER_THERMAL_PRESSURE_DELTAAR_SESSION_COLLECTION_COLLECTION_TRIGGER_UNKNOWN";
  unk_261BFC8 = 63;
  qword_261BF78 = (uint64_t)"AR_SESSION_COLLECTION_COLLECTION_TRIGGER_CHARGE_STATE_CHANGEAR_SESSION_COLLECTION_COLLECTION_"
                           "TRIGGER_END_ARAR_SESSION_COLLECTION_COLLECTION_TRIGGER_START_ARAR_SESSION_COLLECTION_COLLECTI"
                           "ON_TRIGGER_THERMAL_PRESSURE_DELTAAR_SESSION_COLLECTION_COLLECTION_TRIGGER_UNKNOWN";
  unk_261BF80 = 60;
  dword_261BF88 = 5;
  dword_261BFA0 = 3;
  dword_261BFB8 = 2;
  dword_261BFD0 = 4;
  qword_261BFD8 = (uint64_t)"AR_SESSION_COLLECTION_COLLECTION_TRIGGER_UNKNOWN";
  unk_261BFE0 = 48;
  dword_261BFE8 = 1;
  qword_261C008 = (uint64_t)"SHOWCASE_APP_EXTENSION_UNAVAILABLESHOWCASE_APP_QUICK_LINK_UNAVAILABLESHOWCASE_ARP_PHOTOS_UNSUPPORTEDSHOWCASE_ARP_RATING_UNSUPPORTEDSHOWCASE_DIRECTIONS_UNAVAILABLESHOWCASE_MESSAGE_URL_UNAVAILABLESHOWCASE_OTHER_SUPPRESSION_REASONSHOWCASE_PHONE_NUMBER_UNAVAILABLESHOWCASE_WEBSITE_URL_UNAVAILABLE";
  qword_261C020 = (uint64_t)"SHOWCASE_APP_QUICK_LINK_UNAVAILABLESHOWCASE_ARP_PHOTOS_UNSUPPORTEDSHOWCASE_ARP_RATING_UNSUPPORTEDSHOWCASE_DIRECTIONS_UNAVAILABLESHOWCASE_MESSAGE_URL_UNAVAILABLESHOWCASE_OTHER_SUPPRESSION_REASONSHOWCASE_PHONE_NUMBER_UNAVAILABLESHOWCASE_WEBSITE_URL_UNAVAILABLE";
  qword_261C038 = (uint64_t)"SHOWCASE_ARP_PHOTOS_UNSUPPORTEDSHOWCASE_ARP_RATING_UNSUPPORTEDSHOWCASE_DIRECTIONS_UNAVAILABLESHOWCASE_MESSAGE_URL_UNAVAILABLESHOWCASE_OTHER_SUPPRESSION_REASONSHOWCASE_PHONE_NUMBER_UNAVAILABLESHOWCASE_WEBSITE_URL_UNAVAILABLE";
  qword_261C050 = (uint64_t)"SHOWCASE_ARP_RATING_UNSUPPORTEDSHOWCASE_DIRECTIONS_UNAVAILABLESHOWCASE_MESSAGE_URL_UNAVAILABLESHOWCASE_OTHER_SUPPRESSION_REASONSHOWCASE_PHONE_NUMBER_UNAVAILABLESHOWCASE_WEBSITE_URL_UNAVAILABLE";
  qword_261C068 = (uint64_t)"SHOWCASE_DIRECTIONS_UNAVAILABLESHOWCASE_MESSAGE_URL_UNAVAILABLESHOWCASE_OTHER_SUPPRESSION_REASONSHOWCASE_PHONE_NUMBER_UNAVAILABLESHOWCASE_WEBSITE_URL_UNAVAILABLE";
  qword_261C080 = (uint64_t)"SHOWCASE_MESSAGE_URL_UNAVAILABLESHOWCASE_OTHER_SUPPRESSION_REASONSHOWCASE_PHONE_NUMBER_UNAVAILABLESHOWCASE_WEBSITE_URL_UNAVAILABLE";
  qword_261C098 = (uint64_t)"SHOWCASE_OTHER_SUPPRESSION_REASONSHOWCASE_PHONE_NUMBER_UNAVAILABLESHOWCASE_WEBSITE_URL_UNAVAILABLE";
  qword_261C0B0 = (uint64_t)"SHOWCASE_PHONE_NUMBER_UNAVAILABLESHOWCASE_WEBSITE_URL_UNAVAILABLE";
  qword_261C0C8 = (uint64_t)"SHOWCASE_WEBSITE_URL_UNAVAILABLE";
  qword_261BFF0 = (uint64_t)"SHOWCASE_APP_CLIP_UNAVAILABLESHOWCASE_APP_EXTENSION_UNAVAILABLESHOWCASE_APP_QUICK_LINK_UNAVAI"
                           "LABLESHOWCASE_ARP_PHOTOS_UNSUPPORTEDSHOWCASE_ARP_RATING_UNSUPPORTEDSHOWCASE_DIRECTIONS_UNAVAI"
                           "LABLESHOWCASE_MESSAGE_URL_UNAVAILABLESHOWCASE_OTHER_SUPPRESSION_REASONSHOWCASE_PHONE_NUMBER_U"
                           "NAVAILABLESHOWCASE_WEBSITE_URL_UNAVAILABLE";
  *(void *)algn_261BFF8 = 29;
  dword_261C000 = 3;
  qword_261C010 = 34;
  dword_261C018 = 2;
  qword_261C028 = 35;
  dword_261C030 = 4;
  qword_261C040 = 31;
  dword_261C048 = 9;
  qword_261C058 = 31;
  dword_261C060 = 8;
  qword_261C070 = 31;
  dword_261C078 = 1;
  qword_261C088 = 32;
  dword_261C090 = 6;
  qword_261C0A0 = 33;
  dword_261C0A8 = 0;
  qword_261C0B8 = 33;
  dword_261C0C0 = 5;
  qword_261C0D0 = 32;
  dword_261C0D8 = 7;
  qword_261C0F8 = (uint64_t)"PLACE_CACHE_LOOKUP_RESULT_UNKNOWNPLACE_CACHE_LOOKUP_RESULT_UNUSABLEPLACE_CACHE_LOOKUP_RESULT_USABLE";
  unk_261C100 = 33;
  qword_261C110 = (uint64_t)"PLACE_CACHE_LOOKUP_RESULT_UNUSABLEPLACE_CACHE_LOOKUP_RESULT_USABLE";
  unk_261C118 = 34;
  qword_261C128 = (uint64_t)"PLACE_CACHE_LOOKUP_RESULT_USABLE";
  unk_261C130 = 32;
  qword_261C0E0 = (uint64_t)"PLACE_CACHE_LOOKUP_RESULT_UNAVAILABLEPLACE_CACHE_LOOKUP_RESULT_UNKNOWNPLACE_CACHE_LOOKUP_RESU"
                           "LT_UNUSABLEPLACE_CACHE_LOOKUP_RESULT_USABLE";
  *(void *)algn_261C0E8 = 37;
  dword_261C0F0 = 1;
  dword_261C108 = 0;
  dword_261C120 = 2;
  dword_261C138 = 3;
  qword_261C158 = (uint64_t)"MAPS_INTERACTION_TYPE_UNKNOWN";
  unk_261C160 = 29;
  qword_261C140 = (uint64_t)"MAPS_INTERACTION_TYPE_POSITIVE_SEARCH_ENGAGEMENTMAPS_INTERACTION_TYPE_UNKNOWN";
  *(void *)algn_261C148 = 48;
  dword_261C150 = 1;
  dword_261C168 = 0;
  qword_261C188 = (uint64_t)"OfflineDownloadSize_LESS_THAN_100MBOfflineDownloadSize_LESS_THAN_1GBOfflineDownloadSize_LESS_THAN_2GBOfflineDownloadSize_LESS_THAN_500MBOfflineDownloadSize_UNKNOWN";
  qword_261C1A0 = (uint64_t)"OfflineDownloadSize_LESS_THAN_1GBOfflineDownloadSize_LESS_THAN_2GBOfflineDownloadSize_LESS_THAN_500MBOfflineDownloadSize_UNKNOWN";
  qword_261C1B8 = (uint64_t)"OfflineDownloadSize_LESS_THAN_2GBOfflineDownloadSize_LESS_THAN_500MBOfflineDownloadSize_UNKNOWN";
  qword_261C1D0 = (uint64_t)"OfflineDownloadSize_LESS_THAN_500MBOfflineDownloadSize_UNKNOWN";
  qword_261C1E8 = (uint64_t)"OfflineDownloadSize_UNKNOWN";
  unk_261C1F0 = 27;
  qword_261C170 = (uint64_t)"OfflineDownloadSize_GREATER_THAN_2GBOfflineDownloadSize_LESS_THAN_100MBOfflineDownloadSize_LE"
                           "SS_THAN_1GBOfflineDownloadSize_LESS_THAN_2GBOfflineDownloadSize_LESS_THAN_500MBOfflineDownloadSize_UNKNOWN";
  qword_261C178 = 36;
  dword_261C180 = 5;
  qword_261C190 = 35;
  dword_261C198 = 1;
  qword_261C1A8 = 33;
  dword_261C1B0 = 3;
  qword_261C1C0 = 33;
  dword_261C1C8 = 4;
  qword_261C1D8 = 35;
  dword_261C1E0 = 2;
  dword_261C1F8 = 0;
  qword_261C218 = (uint64_t)"ServiceMetadataType_PLACESServiceMetadataType_UNKNOWN";
  unk_261C220 = 26;
  qword_261C230 = (uint64_t)"ServiceMetadataType_UNKNOWN";
  unk_261C238 = 27;
  qword_261C200 = (uint64_t)"ServiceMetadataType_DIRECTIONSServiceMetadataType_PLACESServiceMetadataType_UNKNOWN";
  *(void *)algn_261C208 = 30;
  dword_261C210 = 1;
  dword_261C228 = 2;
  dword_261C240 = 0;
  qword_261C260 = (uint64_t)"EngagementReportingChannel_IN_PROCESSEngagementReportingChannel_UNKNOWN";
  unk_261C268 = 37;
  qword_261C278 = (uint64_t)"EngagementReportingChannel_UNKNOWN";
  unk_261C280 = 34;
  qword_261C248 = (uint64_t)"EngagementReportingChannel_GEOANALYTICSDEngagementReportingChannel_IN_PROCESSEngagementReport"
                           "ingChannel_UNKNOWN";
  qword_261C250 = 40;
  dword_261C258 = 2;
  dword_261C270 = 1;
  dword_261C288 = 0;
  dword_261C2A0 = 50001;
  qword_261C2A8 = (uint64_t)"COHORTS_SESSION_USAGECURATED_COLLECTION_SESSIONDEBUGLOGFIFTEEN_MONTH_SESSIONFIFTEEN_MONTH_USER_SESSIONLOG_DISCARD_EVENTLOG_MESSAGE_TYPE_UNKNOWNLONG_SESSION_LOG_FRAMEWORK_USAGELONG_SESSION_USAGENAVIGATION_TRACENETWORK_SELECTION_HARVEST_SESSIONPERFORMANCEPOI_BUSYNESS_DATA_SESSIONPRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  unk_261C2B0 = 21;
  dword_261C2B8 = 15000;
  qword_261C2D8 = (uint64_t)"DEBUGLOGFIFTEEN_MONTH_SESSIONFIFTEEN_MONTH_USER_SESSIONLOG_DISCARD_EVENTLOG_MESSAGE_TYPE_UNKNOWNLONG_SESSION_LOG_FRAMEWORK_USAGELONG_SESSION_USAGENAVIGATION_TRACENETWORK_SELECTION_HARVEST_SESSIONPERFORMANCEPOI_BUSYNESS_DATA_SESSIONPRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  qword_261C2F0 = (uint64_t)"FIFTEEN_MONTH_SESSIONFIFTEEN_MONTH_USER_SESSIONLOG_DISCARD_EVENTLOG_MESSAGE_TYPE_UNKNOWNLONG_SESSION_LOG_FRAMEWORK_USAGELONG_SESSION_USAGENAVIGATION_TRACENETWORK_SELECTION_HARVEST_SESSIONPERFORMANCEPOI_BUSYNESS_DATA_SESSIONPRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  unk_261C2F8 = 21;
  qword_261C308 = (uint64_t)"FIFTEEN_MONTH_USER_SESSIONLOG_DISCARD_EVENTLOG_MESSAGE_TYPE_UNKNOWNLONG_SESSION_LOG_FRAMEWORK_USAGELONG_SESSION_USAGENAVIGATION_TRACENETWORK_SELECTION_HARVEST_SESSIONPERFORMANCEPOI_BUSYNESS_DATA_SESSIONPRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  qword_261C320 = (uint64_t)"LOG_DISCARD_EVENTLOG_MESSAGE_TYPE_UNKNOWNLONG_SESSION_LOG_FRAMEWORK_USAGELONG_SESSION_USAGENAVIGATION_TRACENETWORK_SELECTION_HARVEST_SESSIONPERFORMANCEPOI_BUSYNESS_DATA_SESSIONPRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  unk_261C328 = 17;
  dword_261C330 = 50003;
  qword_261C338 = (uint64_t)"LOG_MESSAGE_TYPE_UNKNOWNLONG_SESSION_LOG_FRAMEWORK_USAGELONG_SESSION_USAGENAVIGATION_TRACENETWORK_SELECTION_HARVEST_SESSIONPERFORMANCEPOI_BUSYNESS_DATA_SESSIONPRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  qword_261C290 = (uint64_t)"BATCH_TRAFFIC_PROBECOHORTS_SESSION_USAGECURATED_COLLECTION_SESSIONDEBUGLOGFIFTEEN_MONTH_SESSI"
                           "ONFIFTEEN_MONTH_USER_SESSIONLOG_DISCARD_EVENTLOG_MESSAGE_TYPE_UNKNOWNLONG_SESSION_LOG_FRAMEWO"
                           "RK_USAGELONG_SESSION_USAGENAVIGATION_TRACENETWORK_SELECTION_HARVEST_SESSIONPERFORMANCEPOI_BUS"
                           "YNESS_DATA_SESSIONPRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_U"
                           "SAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  *(void *)algn_261C298 = 19;
  qword_261C2C0 = (uint64_t)"CURATED_COLLECTION_SESSIONDEBUGLOGFIFTEEN_MONTH_SESSIONFIFTEEN_MONTH_USER_SESSIONLOG_DISCARD_EVENTLOG_MESSAGE_TYPE_UNKNOWNLONG_SESSION_LOG_FRAMEWORK_USAGELONG_SESSION_USAGENAVIGATION_TRACENETWORK_SELECTION_HARVEST_SESSIONPERFORMANCEPOI_BUSYNESS_DATA_SESSIONPRESSURE_DATA_SESSIONREALTIME_TRAFFIC_PROBESESSIONLESS_USAGESHORT_SESSION_USAGETELEMETRYUSAGEWIFI_CONNECTION_QUALITY_PROBE_COLLECTION";
  unk_261C2C8 = 26;
  dword_261C2D0 = 2;
  qword_261C2E0 = 8;
  dword_261C2E8 = 1;
  dword_261C300 = 3;
  qword_261C310 = 26;
  dword_261C318 = 6;
  qword_261C340 = 24;
  qword_261CAB8 = (uint64_t)"UGC_PHOTOUSER_SESSION";
  dword_261CAC8 = 720;
  qword_261CAD0 = (uint64_t)"USER_SESSION";
  dword_261CAB0 = 6;
  qword_261CAC0 = 9;
  qword_261CAD8 = 12;
  dword_261CAE0 = 601;
  qword_261CB00 = (uint64_t)"PAIRED_DEVICE_UNKNOWNPAIRED_DEVICE_WATCH";
  unk_261CB08 = 21;
  qword_261CAE8 = (uint64_t)"PAIRED_DEVICE_PHONEPAIRED_DEVICE_UNKNOWNPAIRED_DEVICE_WATCH";
  qword_261CAF0 = 19;
  dword_261CAF8 = 2;
  dword_261CB10 = 0;
  qword_261CB18 = (uint64_t)"PAIRED_DEVICE_WATCH";
  unk_261CB20 = 19;
  dword_261CB28 = 1;
  qword_261CB60 = (uint64_t)"RIDESHARE_MODETRANSIT_MODEUNKNOWN_TRANSPORT_MODEWALKING_MODE";
  qword_261CB78 = (uint64_t)"TRANSIT_MODEUNKNOWN_TRANSPORT_MODEWALKING_MODE";
  dword_261CB88 = 3;
  qword_261CB90 = (uint64_t)"UNKNOWN_TRANSPORT_MODEWALKING_MODE";
  qword_261CBA8 = (uint64_t)"WALKING_MODE";
  qword_261CB30 = (uint64_t)"CYCLING_MODEDRIVING_MODERIDESHARE_MODETRANSIT_MODEUNKNOWN_TRANSPORT_MODEWALKING_MODE";
  qword_261CB38 = 12;
  dword_261CB40 = 5;
  qword_261CB48 = (uint64_t)"DRIVING_MODERIDESHARE_MODETRANSIT_MODEUNKNOWN_TRANSPORT_MODEWALKING_MODE";
  unk_261CB50 = 12;
  dword_261CB58 = 1;
  qword_261CB68 = 14;
  dword_261CB70 = 4;
  qword_261CB80 = 12;
  qword_261CB98 = 22;
  dword_261CBA0 = 0;
  qword_261CBB0 = 12;
  dword_261CBB8 = 2;
  qword_261CBD8 = (uint64_t)"LOW_VOLUMENORMAL_VOLUMENO_VOICEUNKNOWN_VOICE_VOLUME";
  qword_261CBF0 = (uint64_t)"NORMAL_VOLUMENO_VOICEUNKNOWN_VOICE_VOLUME";
  qword_261CC08 = (uint64_t)"NO_VOICEUNKNOWN_VOICE_VOLUME";
  unk_261CC10 = 8;
  qword_261CBC0 = (uint64_t)"LOUD_VOLUMELOW_VOLUMENORMAL_VOLUMENO_VOICEUNKNOWN_VOICE_VOLUME";
  qword_261CBC8 = 11;
  dword_261CBD0 = 4;
  qword_261CBE0 = 10;
  dword_261CBE8 = 2;
  qword_261CBF8 = 13;
  dword_261CC00 = 3;
  dword_261CC18 = 1;
  qword_261CC20 = (uint64_t)"UNKNOWN_VOICE_VOLUME";
  unk_261CC28 = 20;
  dword_261CC30 = 0;
  qword_261CC50 = (uint64_t)"MINI_LAYOUTPARTIAL_LAYOUTUNKNOWN_LAYOUT";
  qword_261CC68 = (uint64_t)"PARTIAL_LAYOUTUNKNOWN_LAYOUT";
  qword_261CC38 = (uint64_t)"FULL_LAYOUTMINI_LAYOUTPARTIAL_LAYOUTUNKNOWN_LAYOUT";
  qword_261CC40 = 11;
  dword_261CC48 = 3;
  qword_261CC58 = 11;
  dword_261CC60 = 1;
  qword_261CC70 = 14;
  dword_261CC78 = 2;
  qword_261CC80 = (uint64_t)"UNKNOWN_LAYOUT";
  unk_261CC88 = 14;
  dword_261CC90 = 0;
  qword_261CCB0 = (uint64_t)"FLOATING_STYLESIDE_BAR_STYLESTANDARD_SIDE_STYLESTANDARD_STYLEUNKNOWN_STYLE";
  qword_261CCC8 = (uint64_t)"SIDE_BAR_STYLESTANDARD_SIDE_STYLESTANDARD_STYLEUNKNOWN_STYLE";
  qword_261CCE0 = (uint64_t)"STANDARD_SIDE_STYLESTANDARD_STYLEUNKNOWN_STYLE";
  unk_261CCE8 = 19;
  qword_261CCF8 = (uint64_t)"STANDARD_STYLEUNKNOWN_STYLE";
  qword_261CC98 = (uint64_t)"COMPACT_STYLEFLOATING_STYLESIDE_BAR_STYLESTANDARD_SIDE_STYLESTANDARD_STYLEUNKNOWN_STYLE";
  unk_261CCA0 = 13;
  dword_261CCA8 = 2;
  qword_261CCB8 = 14;
  dword_261CCC0 = 4;
  qword_261CCD0 = 14;
  dword_261CCD8 = 3;
  dword_261CCF0 = 5;
  qword_261CD00 = 14;
  dword_261CD08 = 1;
  qword_261CD10 = (uint64_t)"UNKNOWN_STYLE";
  unk_261CD18 = 13;
  dword_261CD20 = 0;
  qword_261CD40 = (uint64_t)"CLOSED_NOWETAHOURSREVIEW_RATINGTRANSIT_ADVISORYUNKNOWN_UI_ELEMENTUSEFUL_TO_KNOW";
  unk_261CD48 = 10;
  qword_261CD58 = (uint64_t)"ETAHOURSREVIEW_RATINGTRANSIT_ADVISORYUNKNOWN_UI_ELEMENTUSEFUL_TO_KNOW";
  qword_261CD70 = (uint64_t)"HOURSREVIEW_RATINGTRANSIT_ADVISORYUNKNOWN_UI_ELEMENTUSEFUL_TO_KNOW";
  unk_261CD78 = 5;
  qword_261CD88 = (uint64_t)"REVIEW_RATINGTRANSIT_ADVISORYUNKNOWN_UI_ELEMENTUSEFUL_TO_KNOW";
  unk_261CD90 = 13;
  qword_261CDA0 = (uint64_t)"TRANSIT_ADVISORYUNKNOWN_UI_ELEMENTUSEFUL_TO_KNOW";
  qword_261CDB8 = (uint64_t)"UNKNOWN_UI_ELEMENTUSEFUL_TO_KNOW";
  unk_261CDC0 = 18;
  qword_261CDD0 = (uint64_t)"USEFUL_TO_KNOW";
  unk_261CDD8 = 14;
  qword_261CD28 = (uint64_t)"APPLE_PAYCLOSED_NOWETAHOURSREVIEW_RATINGTRANSIT_ADVISORYUNKNOWN_UI_ELEMENTUSEFUL_TO_KNOW";
  unk_261CD30 = 9;
  dword_261CD38 = 3;
  dword_261CD50 = 2;
  qword_261CD60 = 3;
  dword_261CD68 = 1;
  dword_261CD80 = 4;
  dword_261CD98 = 6;
  qword_261CDA8 = 16;
  dword_261CDB0 = 7;
  dword_261CDC8 = 0;
  dword_261CDE0 = 5;
  qword_261CE00 = (uint64_t)"BRAND_PLACECARDBUSINESS_PLACECARDCALENDAR_PLACECARDCURATED_COLLECTION_PLACECARDCURRENT_LOCATION_PLACECARDDROPPED_PIN_PLACECARDFLYOVER_PLACECARDLANDMARK_PLACECARDOTHERSAR_PLACECARDTRANSIT_LINE_PLACECARDTRANSIT_PLACECARDTRANSIT_STATION_PLACECARDUNKNOWN_PLACECARDVENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CE18 = (uint64_t)"BUSINESS_PLACECARDCALENDAR_PLACECARDCURATED_COLLECTION_PLACECARDCURRENT_LOCATION_PLACECARDDROPPED_PIN_PLACECARDFLYOVER_PLACECARDLANDMARK_PLACECARDOTHERSAR_PLACECARDTRANSIT_LINE_PLACECARDTRANSIT_PLACECARDTRANSIT_STATION_PLACECARDUNKNOWN_PLACECARDVENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CE30 = (uint64_t)"CALENDAR_PLACECARDCURATED_COLLECTION_PLACECARDCURRENT_LOCATION_PLACECARDDROPPED_PIN_PLACECARDFLYOVER_PLACECARDLANDMARK_PLACECARDOTHERSAR_PLACECARDTRANSIT_LINE_PLACECARDTRANSIT_PLACECARDTRANSIT_STATION_PLACECARDUNKNOWN_PLACECARDVENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CE48 = (uint64_t)"CURATED_COLLECTION_PLACECARDCURRENT_LOCATION_PLACECARDDROPPED_PIN_PLACECARDFLYOVER_PLACECARDLANDMARK_PLACECARDOTHERSAR_PLACECARDTRANSIT_LINE_PLACECARDTRANSIT_PLACECARDTRANSIT_STATION_PLACECARDUNKNOWN_PLACECARDVENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CE60 = (uint64_t)"CURRENT_LOCATION_PLACECARDDROPPED_PIN_PLACECARDFLYOVER_PLACECARDLANDMARK_PLACECARDOTHERSAR_PLACECARDTRANSIT_LINE_PLACECARDTRANSIT_PLACECARDTRANSIT_STATION_PLACECARDUNKNOWN_PLACECARDVENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CE78 = (uint64_t)"DROPPED_PIN_PLACECARDFLYOVER_PLACECARDLANDMARK_PLACECARDOTHERSAR_PLACECARDTRANSIT_LINE_PLACECARDTRANSIT_PLACECARDTRANSIT_STATION_PLACECARDUNKNOWN_PLACECARDVENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CE90 = (uint64_t)"FLYOVER_PLACECARDLANDMARK_PLACECARDOTHERSAR_PLACECARDTRANSIT_LINE_PLACECARDTRANSIT_PLACECARDTRANSIT_STATION_PLACECARDUNKNOWN_PLACECARDVENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CEA8 = (uint64_t)"LANDMARK_PLACECARDOTHERSAR_PLACECARDTRANSIT_LINE_PLACECARDTRANSIT_PLACECARDTRANSIT_STATION_PLACECARDUNKNOWN_PLACECARDVENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CEC0 = (uint64_t)"OTHERSAR_PLACECARDTRANSIT_LINE_PLACECARDTRANSIT_PLACECARDTRANSIT_STATION_PLACECARDUNKNOWN_PLACECARDVENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CED8 = (uint64_t)"SAR_PLACECARDTRANSIT_LINE_PLACECARDTRANSIT_PLACECARDTRANSIT_STATION_PLACECARDUNKNOWN_PLACECARDVENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CEF0 = (uint64_t)"TRANSIT_LINE_PLACECARDTRANSIT_PLACECARDTRANSIT_STATION_PLACECARDUNKNOWN_PLACECARDVENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CF08 = (uint64_t)"TRANSIT_PLACECARDTRANSIT_STATION_PLACECARDUNKNOWN_PLACECARDVENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CF20 = (uint64_t)"TRANSIT_STATION_PLACECARDUNKNOWN_PLACECARDVENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CF38 = (uint64_t)"UNKNOWN_PLACECARDVENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CF50 = (uint64_t)"VENUE_BUILDING_PLACECARDVENUE_PLACECARD";
  qword_261CF68 = (uint64_t)"VENUE_PLACECARD";
  qword_261CDE8 = (uint64_t)"ADDRESS_PLACECARDBRAND_PLACECARDBUSINESS_PLACECARDCALENDAR_PLACECARDCURATED_COLLECTION_PLACEC"
                           "ARDCURRENT_LOCATION_PLACECARDDROPPED_PIN_PLACECARDFLYOVER_PLACECARDLANDMARK_PLACECARDOTHERSAR"
                           "_PLACECARDTRANSIT_LINE_PLACECARDTRANSIT_PLACECARDTRANSIT_STATION_PLACECARDUNKNOWN_PLACECARDVE"
                           "NUE_BUILDING_PLACECARDVENUE_PLACECARD";
  unk_261CDF0 = 17;
  dword_261CDF8 = 1;
  qword_261CE08 = 15;
  dword_261CE10 = 11;
  qword_261CE20 = 18;
  dword_261CE28 = 2;
  qword_261CE38 = 18;
  dword_261CE40 = 4;
  qword_261CE50 = 28;
  dword_261CE58 = 14;
  qword_261CE68 = 26;
  dword_261CE70 = 5;
  qword_261CE80 = 21;
  dword_261CE88 = 3;
  qword_261CE98 = 17;
  dword_261CEA0 = 9;
  qword_261CEB0 = 18;
  dword_261CEB8 = 8;
  qword_261CEC8 = 5;
  dword_261CED0 = 17;
  qword_261CEE0 = 13;
  dword_261CEE8 = 10;
  qword_261CEF8 = 22;
  dword_261CF00 = 6;
  qword_261CF10 = 17;
  dword_261CF18 = 15;
  qword_261CF28 = 25;
  dword_261CF30 = 7;
  qword_261CF40 = 17;
  dword_261CF48 = 0;
  qword_261CF58 = 24;
  dword_261CF60 = 13;
  qword_261CF70 = 15;
  dword_261CF78 = 12;
  dword_261CF90 = 55;
  qword_261CF98 = (uint64_t)"BATCH_TRAFFIC_PROBE_COLLECTIONCACHE_HITCLIENT_AC_SUGGESTIONSCOMMUTE_WINDOWCURATED_COLLECTION_STATSCURATED_COLLECTION_USAGEDAILY_USE_SUMMARYDEVICE_SYNC_STATUSDIRECTIONSDIRECTIONS_REQUEST_DETAILSDISPLAY_ANALYTICEV_ROUTING_VEHICLE_DETAILSEV_TRIPFULL_NAV_TRACEGENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261CFB0 = (uint64_t)"CACHE_HITCLIENT_AC_SUGGESTIONSCOMMUTE_WINDOWCURATED_COLLECTION_STATSCURATED_COLLECTION_USAGEDAILY_USE_SUMMARYDEVICE_SYNC_STATUSDIRECTIONSDIRECTIONS_REQUEST_DETAILSDISPLAY_ANALYTICEV_ROUTING_VEHICLE_DETAILSEV_TRIPFULL_NAV_TRACEGENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261CFC8 = (uint64_t)"CLIENT_AC_SUGGESTIONSCOMMUTE_WINDOWCURATED_COLLECTION_STATSCURATED_COLLECTION_USAGEDAILY_USE_SUMMARYDEVICE_SYNC_STATUSDIRECTIONSDIRECTIONS_REQUEST_DETAILSDISPLAY_ANALYTICEV_ROUTING_VEHICLE_DETAILSEV_TRIPFULL_NAV_TRACEGENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261CFE0 = (uint64_t)"COMMUTE_WINDOWCURATED_COLLECTION_STATSCURATED_COLLECTION_USAGEDAILY_USE_SUMMARYDEVICE_SYNC_STATUSDIRECTIONSDIRECTIONS_REQUEST_DETAILSDISPLAY_ANALYTICEV_ROUTING_VEHICLE_DETAILSEV_TRIPFULL_NAV_TRACEGENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261CFF8 = (uint64_t)"CURATED_COLLECTION_STATSCURATED_COLLECTION_USAGEDAILY_USE_SUMMARYDEVICE_SYNC_STATUSDIRECTIONSDIRECTIONS_REQUEST_DETAILSDISPLAY_ANALYTICEV_ROUTING_VEHICLE_DETAILSEV_TRIPFULL_NAV_TRACEGENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D010 = (uint64_t)"CURATED_COLLECTION_USAGEDAILY_USE_SUMMARYDEVICE_SYNC_STATUSDIRECTIONSDIRECTIONS_REQUEST_DETAILSDISPLAY_ANALYTICEV_ROUTING_VEHICLE_DETAILSEV_TRIPFULL_NAV_TRACEGENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D028 = (uint64_t)"DAILY_USE_SUMMARYDEVICE_SYNC_STATUSDIRECTIONSDIRECTIONS_REQUEST_DETAILSDISPLAY_ANALYTICEV_ROUTING_VEHICLE_DETAILSEV_TRIPFULL_NAV_TRACEGENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D040 = (uint64_t)"DEVICE_SYNC_STATUSDIRECTIONSDIRECTIONS_REQUEST_DETAILSDISPLAY_ANALYTICEV_ROUTING_VEHICLE_DETAILSEV_TRIPFULL_NAV_TRACEGENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  dword_261D050 = 60;
  qword_261D058 = (uint64_t)"DIRECTIONSDIRECTIONS_REQUEST_DETAILSDISPLAY_ANALYTICEV_ROUTING_VEHICLE_DETAILSEV_TRIPFULL_NAV_TRACEGENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D088 = (uint64_t)"DISPLAY_ANALYTICEV_ROUTING_VEHICLE_DETAILSEV_TRIPFULL_NAV_TRACEGENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D0A0 = (uint64_t)"EV_ROUTING_VEHICLE_DETAILSEV_TRIPFULL_NAV_TRACEGENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D0B8 = (uint64_t)"EV_TRIPFULL_NAV_TRACEGENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D0D0 = (uint64_t)"FULL_NAV_TRACEGENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D0E8 = (uint64_t)"GENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D100 = (uint64_t)"GRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D118 = (uint64_t)"HARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D130 = (uint64_t)"IMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  dword_261D140 = 57;
  qword_261D148 = (uint64_t)"LIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D160 = (uint64_t)"LOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D178 = (uint64_t)"LOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D190 = (uint64_t)"LOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D1A8 = (uint64_t)"MAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D1C0 = (uint64_t)"MAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  dword_261D1D0 = 64;
  qword_261D1D8 = (uint64_t)"MAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  dword_261D1E8 = 61;
  qword_261D1F0 = (uint64_t)"MAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D208 = (uint64_t)"MAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D220 = (uint64_t)"MAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D238 = (uint64_t)"MARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D250 = (uint64_t)"NETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D268 = (uint64_t)"NETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  dword_261D278 = 62;
  qword_261D280 = (uint64_t)"NETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  dword_261D290 = 56;
  qword_261D298 = (uint64_t)"OFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D2B0 = (uint64_t)"PARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D2C8 = (uint64_t)"PERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  dword_261D2D8 = 53;
  qword_261D2E0 = (uint64_t)"PLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  dword_261D2F0 = 59;
  qword_261D2F8 = (uint64_t)"PLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D310 = (uint64_t)"POI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  dword_261D320 = 52;
  qword_261D328 = (uint64_t)"PRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D340 = (uint64_t)"PRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  dword_261D350 = 51;
  qword_261D358 = (uint64_t)"PROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D370 = (uint64_t)"REALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D388 = (uint64_t)"REFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D3A0 = (uint64_t)"RIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D3B8 = (uint64_t)"RIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D3D0 = (uint64_t)"SERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  dword_261D3E0 = 63;
  qword_261D3E8 = (uint64_t)"SHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  dword_261D3F8 = 58;
  qword_261D400 = (uint64_t)"STALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D418 = (uint64_t)"STATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D430 = (uint64_t)"TABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D448 = (uint64_t)"TABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D460 = (uint64_t)"TELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D478 = (uint64_t)"THERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  dword_261D488 = 54;
  qword_261D490 = (uint64_t)"THROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D4A8 = (uint64_t)"TILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D4C0 = (uint64_t)"TILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D4D8 = (uint64_t)"TIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D4F0 = (uint64_t)"TIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D508 = (uint64_t)"TRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D520 = (uint64_t)"TRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D538 = (uint64_t)"USER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D550 = (uint64_t)"VLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  qword_261D568 = (uint64_t)"WIFI_CONNECTION_QUALITY_PROBE";
  qword_261D598 = (uint64_t)"FERRYFREEWAY_CONTROLLEDFREEWAY_UNCONTROLLEDGATEHIDDENHIGHWAYLOCAL_MAJOR_ROADLOCAL_ROADMAJOR_HIGHWAYMINOR_ROADPARKING_LOT_ROADPARKING_STRUCTUREPEDESTRIAN_OVERPASSPEDESTRIAN_OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D5B0 = (uint64_t)"FREEWAY_CONTROLLEDFREEWAY_UNCONTROLLEDGATEHIDDENHIGHWAYLOCAL_MAJOR_ROADLOCAL_ROADMAJOR_HIGHWAYMINOR_ROADPARKING_LOT_ROADPARKING_STRUCTUREPEDESTRIAN_OVERPASSPEDESTRIAN_OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D5C8 = (uint64_t)"FREEWAY_UNCONTROLLEDGATEHIDDENHIGHWAYLOCAL_MAJOR_ROADLOCAL_ROADMAJOR_HIGHWAYMINOR_ROADPARKING_LOT_ROADPARKING_STRUCTUREPEDESTRIAN_OVERPASSPEDESTRIAN_OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D5E0 = (uint64_t)"GATEHIDDENHIGHWAYLOCAL_MAJOR_ROADLOCAL_ROADMAJOR_HIGHWAYMINOR_ROADPARKING_LOT_ROADPARKING_STRUCTUREPEDESTRIAN_OVERPASSPEDESTRIAN_OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D5F8 = (uint64_t)"HIDDENHIGHWAYLOCAL_MAJOR_ROADLOCAL_ROADMAJOR_HIGHWAYMINOR_ROADPARKING_LOT_ROADPARKING_STRUCTUREPEDESTRIAN_OVERPASSPEDESTRIAN_OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D610 = (uint64_t)"HIGHWAYLOCAL_MAJOR_ROADLOCAL_ROADMAJOR_HIGHWAYMINOR_ROADPARKING_LOT_ROADPARKING_STRUCTUREPEDESTRIAN_OVERPASSPEDESTRIAN_OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D628 = (uint64_t)"LOCAL_MAJOR_ROADLOCAL_ROADMAJOR_HIGHWAYMINOR_ROADPARKING_LOT_ROADPARKING_STRUCTUREPEDESTRIAN_OVERPASSPEDESTRIAN_OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D640 = (uint64_t)"LOCAL_ROADMAJOR_HIGHWAYMINOR_ROADPARKING_LOT_ROADPARKING_STRUCTUREPEDESTRIAN_OVERPASSPEDESTRIAN_OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D658 = (uint64_t)"MAJOR_HIGHWAYMINOR_ROADPARKING_LOT_ROADPARKING_STRUCTUREPEDESTRIAN_OVERPASSPEDESTRIAN_OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D670 = (uint64_t)"MINOR_ROADPARKING_LOT_ROADPARKING_STRUCTUREPEDESTRIAN_OVERPASSPEDESTRIAN_OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D688 = (uint64_t)"PARKING_LOT_ROADPARKING_STRUCTUREPEDESTRIAN_OVERPASSPEDESTRIAN_OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D6A0 = (uint64_t)"PARKING_STRUCTUREPEDESTRIAN_OVERPASSPEDESTRIAN_OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D6B8 = (uint64_t)"PEDESTRIAN_OVERPASSPEDESTRIAN_OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D6D0 = (uint64_t)"PEDESTRIAN_OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D6E8 = (uint64_t)"PEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D700 = (uint64_t)"PEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D718 = (uint64_t)"PEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D730 = (uint64_t)"PEDESTRIAN_UNDERPASSPEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D748 = (uint64_t)"PEDESTRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D760 = (uint64_t)"PEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D778 = (uint64_t)"PRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D790 = (uint64_t)"SERVICE_ROADSPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D7A8 = (uint64_t)"SPUTNIK_BORDERTRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D7C0 = (uint64_t)"TRANSIT_STATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261DAC0 = (uint64_t)"MAPS_WIDGET_TYPE_NEARBYMAPS_WIDGET_TYPE_TRANSITMAPS_WIDGET_TYPE_UNKNOWN";
  qword_261DAD8 = (uint64_t)"MAPS_WIDGET_TYPE_TRANSITMAPS_WIDGET_TYPE_UNKNOWN";
  qword_261DB20 = (uint64_t)"MPSES_INTERACTEDMPSES_UNKNOWN";
  unk_261DB28 = 16;
  qword_261DB68 = (uint64_t)"PREPARATION_METHOD_TYPE_BARBEQUEDPREPARATION_METHOD_TYPE_BASTEDPREPARATION_METHOD_TYPE_BLACKENEDPREPARATION_METHOD_TYPE_BLANCHEDPREPARATION_METHOD_TYPE_BOILEDPREPARATION_METHOD_TYPE_BRAISEDPREPARATION_METHOD_TYPE_BRINEDPREPARATION_METHOD_TYPE_BROILEDPREPARATION_METHOD_TYPE_CODDLINGPREPARATION_METHOD_TYPE_CUREDPREPARATION_METHOD_TYPE_DEEP_FRIEDPREPARATION_METHOD_TYPE_DRIEDPREPARATION_METHOD_TYPE_EN_PAPILLOTEPREPARATION_METHOD_TYPE_FERMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DB98 = (uint64_t)"PREPARATION_METHOD_TYPE_BLACKENEDPREPARATION_METHOD_TYPE_BLANCHEDPREPARATION_METHOD_TYPE_BOILEDPREPARATION_METHOD_TYPE_BRAISEDPREPARATION_METHOD_TYPE_BRINEDPREPARATION_METHOD_TYPE_BROILEDPREPARATION_METHOD_TYPE_CODDLINGPREPARATION_METHOD_TYPE_CUREDPREPARATION_METHOD_TYPE_DEEP_FRIEDPREPARATION_METHOD_TYPE_DRIEDPREPARATION_METHOD_TYPE_EN_PAPILLOTEPREPARATION_METHOD_TYPE_FERMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DBC8 = (uint64_t)"PREPARATION_METHOD_TYPE_BOILEDPREPARATION_METHOD_TYPE_BRAISEDPREPARATION_METHOD_TYPE_BRINEDPREPARATION_METHOD_TYPE_BROILEDPREPARATION_METHOD_TYPE_CODDLINGPREPARATION_METHOD_TYPE_CUREDPREPARATION_METHOD_TYPE_DEEP_FRIEDPREPARATION_METHOD_TYPE_DRIEDPREPARATION_METHOD_TYPE_EN_PAPILLOTEPREPARATION_METHOD_TYPE_FERMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DBE0 = (uint64_t)"PREPARATION_METHOD_TYPE_BRAISEDPREPARATION_METHOD_TYPE_BRINEDPREPARATION_METHOD_TYPE_BROILEDPREPARATION_METHOD_TYPE_CODDLINGPREPARATION_METHOD_TYPE_CUREDPREPARATION_METHOD_TYPE_DEEP_FRIEDPREPARATION_METHOD_TYPE_DRIEDPREPARATION_METHOD_TYPE_EN_PAPILLOTEPREPARATION_METHOD_TYPE_FERMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DC10 = (uint64_t)"PREPARATION_METHOD_TYPE_BROILEDPREPARATION_METHOD_TYPE_CODDLINGPREPARATION_METHOD_TYPE_CUREDPREPARATION_METHOD_TYPE_DEEP_FRIEDPREPARATION_METHOD_TYPE_DRIEDPREPARATION_METHOD_TYPE_EN_PAPILLOTEPREPARATION_METHOD_TYPE_FERMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DC58 = (uint64_t)"PREPARATION_METHOD_TYPE_DEEP_FRIEDPREPARATION_METHOD_TYPE_DRIEDPREPARATION_METHOD_TYPE_EN_PAPILLOTEPREPARATION_METHOD_TYPE_FERMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DDD8 = (uint64_t)"PREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DDF0 = (uint64_t)"PREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DE08 = (uint64_t)"PREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DE20 = (uint64_t)"PREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DE38 = (uint64_t)"PREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DE50 = (uint64_t)"PREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DEB0 = (uint64_t)"PREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DEE0 = (uint64_t)"PREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DEF8 = (uint64_t)"PREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  dword_261D020 = 45;
  dword_261DF08 = 45;
  dword_261D080 = 41;
  dword_261DF50 = 41;
  qword_261DF70 = (uint64_t)"PREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261E018 = (uint64_t)"DIETARY_RESTRICTION_TYPE_FISH_FREEDIETARY_RESTRICTION_TYPE_GLUTEN_FREEDIETARY_RESTRICTION_TYPE_HALALDIETARY_RESTRICTION_TYPE_INCLUDES_DAIRYDIETARY_RESTRICTION_TYPE_INCLUDES_FISHDIETARY_RESTRICTION_TYPE_INCLUDES_GLUTENDIETARY_RESTRICTION_TYPE_INCLUDES_NUTSDIETARY_RESTRICTION_TYPE_INCLUDES_SHELLFISHDIETARY_RESTRICTION_TYPE_INCLUDES_SOYDIETARY_RESTRICTION_TYPE_KOSHERDIETARY_RESTRICTION_TYPE_LACTOSE_FREEDIETARY_RESTRICTION_TYPE_NUT_FREEDIETARY_RESTRICTION_TYPE_SHELLFISH_FREEDIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  qword_261E2B8 = (uint64_t)"NUTRITION_UNIT_TRANS_FATNUTRITION_UNIT_UNKNOWN";
  qword_261E2A0 = (uint64_t)"NUTRITION_UNIT_TOTAL_FATNUTRITION_UNIT_TRANS_FATNUTRITION_UNIT_UNKNOWN";
  unk_261E2A8 = 24;
  dword_261E2B0 = 7;
  qword_261E288 = (uint64_t)"NUTRITION_UNIT_TOTAL_CARBSNUTRITION_UNIT_TOTAL_FATNUTRITION_UNIT_TRANS_FATNUTRITION_UNIT_UNKNOWN";
  unk_261E290 = 26;
  dword_261E280 = 8;
  dword_261E298 = 10;
  qword_261E258 = (uint64_t)"NUTRITION_UNIT_SODIUMNUTRITION_UNIT_SUGARSNUTRITION_UNIT_TOTAL_CARBSNUTRITION_UNIT_TOTAL_FATNUTRITION_UNIT_TRANS_FATNUTRITION_UNIT_UNKNOWN";
  unk_261E260 = 21;
  dword_261E268 = 9;
  qword_261E270 = (uint64_t)"NUTRITION_UNIT_SUGARSNUTRITION_UNIT_TOTAL_CARBSNUTRITION_UNIT_TOTAL_FATNUTRITION_UNIT_TRANS_FATNUTRITION_UNIT_UNKNOWN";
  unk_261E278 = 21;
  qword_261E228 = (uint64_t)"NUTRITION_UNIT_PROTEINNUTRITION_UNIT_SATURATED_FATNUTRITION_UNIT_SODIUMNUTRITION_UNIT_SUGARSNUTRITION_UNIT_TOTAL_CARBSNUTRITION_UNIT_TOTAL_FATNUTRITION_UNIT_TRANS_FATNUTRITION_UNIT_UNKNOWN";
  dword_261E238 = 12;
  qword_261E240 = (uint64_t)"NUTRITION_UNIT_SATURATED_FATNUTRITION_UNIT_SODIUMNUTRITION_UNIT_SUGARSNUTRITION_UNIT_TOTAL_CARBSNUTRITION_UNIT_TOTAL_FATNUTRITION_UNIT_TRANS_FATNUTRITION_UNIT_UNKNOWN";
  unk_261E248 = 28;
  dword_261E250 = 5;
  qword_261E210 = (uint64_t)"NUTRITION_UNIT_FATNUTRITION_UNIT_PROTEINNUTRITION_UNIT_SATURATED_FATNUTRITION_UNIT_SODIUMNUTRITION_UNIT_SUGARSNUTRITION_UNIT_TOTAL_CARBSNUTRITION_UNIT_TOTAL_FATNUTRITION_UNIT_TRANS_FATNUTRITION_UNIT_UNKNOWN";
  unk_261E218 = 18;
  dword_261E220 = 4;
  qword_261E230 = 22;
  qword_261E1E0 = (uint64_t)"NUTRITION_UNIT_CHOLESTEROLNUTRITION_UNIT_DIETARY_FIBERNUTRITION_UNIT_FATNUTRITION_UNIT_PROTEINNUTRITION_UNIT_SATURATED_FATNUTRITION_UNIT_SODIUMNUTRITION_UNIT_SUGARSNUTRITION_UNIT_TOTAL_CARBSNUTRITION_UNIT_TOTAL_FATNUTRITION_UNIT_TRANS_FATNUTRITION_UNIT_UNKNOWN";
  unk_261E1E8 = 26;
  qword_261E1F8 = (uint64_t)"NUTRITION_UNIT_DIETARY_FIBERNUTRITION_UNIT_FATNUTRITION_UNIT_PROTEINNUTRITION_UNIT_SATURATED_FATNUTRITION_UNIT_SODIUMNUTRITION_UNIT_SUGARSNUTRITION_UNIT_TOTAL_CARBSNUTRITION_UNIT_TOTAL_FATNUTRITION_UNIT_TRANS_FATNUTRITION_UNIT_UNKNOWN";
  unk_261E200 = 28;
  dword_261E1F0 = 3;
  dword_261E208 = 11;
  qword_261E1C8 = (uint64_t)"NUTRITION_UNIT_CALORIES_FROM_FATNUTRITION_UNIT_CHOLESTEROLNUTRITION_UNIT_DIETARY_FIBERNUTRITION_UNIT_FATNUTRITION_UNIT_PROTEINNUTRITION_UNIT_SATURATED_FATNUTRITION_UNIT_SODIUMNUTRITION_UNIT_SUGARSNUTRITION_UNIT_TOTAL_CARBSNUTRITION_UNIT_TOTAL_FATNUTRITION_UNIT_TRANS_FATNUTRITION_UNIT_UNKNOWN";
  unk_261E1D0 = 32;
  dword_261E1D8 = 2;
  qword_261E048 = (uint64_t)"DIETARY_RESTRICTION_TYPE_HALALDIETARY_RESTRICTION_TYPE_INCLUDES_DAIRYDIETARY_RESTRICTION_TYPE_INCLUDES_FISHDIETARY_RESTRICTION_TYPE_INCLUDES_GLUTENDIETARY_RESTRICTION_TYPE_INCLUDES_NUTSDIETARY_RESTRICTION_TYPE_INCLUDES_SHELLFISHDIETARY_RESTRICTION_TYPE_INCLUDES_SOYDIETARY_RESTRICTION_TYPE_KOSHERDIETARY_RESTRICTION_TYPE_LACTOSE_FREEDIETARY_RESTRICTION_TYPE_NUT_FREEDIETARY_RESTRICTION_TYPE_SHELLFISH_FREEDIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  dword_261E1A8 = 2;
  qword_261E1B0 = (uint64_t)"NUTRITION_UNIT_CALORIESNUTRITION_UNIT_CALORIES_FROM_FATNUTRITION_UNIT_CHOLESTEROLNUTRITION_UN"
                           "IT_DIETARY_FIBERNUTRITION_UNIT_FATNUTRITION_UNIT_PROTEINNUTRITION_UNIT_SATURATED_FATNUTRITION"
                           "_UNIT_SODIUMNUTRITION_UNIT_SUGARSNUTRITION_UNIT_TOTAL_CARBSNUTRITION_UNIT_TOTAL_FATNUTRITION_"
                           "UNIT_TRANS_FATNUTRITION_UNIT_UNKNOWN";
  *(void *)algn_261E1B8 = 23;
  dword_261E1C0 = 1;
  qword_261E198 = (uint64_t)"DIETARY_RESTRICTION_TYPE_VEGETARIAN";
  qword_261E180 = (uint64_t)"DIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  unk_261E188 = 30;
  dword_261E190 = 1;
  qword_261E1A0 = 35;
  qword_261E168 = (uint64_t)"DIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  unk_261E170 = 32;
  dword_261E160 = 13;
  dword_261E178 = 0;
  qword_261E150 = (uint64_t)"DIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  qword_261E138 = (uint64_t)"DIETARY_RESTRICTION_TYPE_SHELLFISH_FREEDIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  unk_261E140 = 39;
  dword_261E148 = 9;
  qword_261E158 = 33;
  qword_261E120 = (uint64_t)"DIETARY_RESTRICTION_TYPE_NUT_FREEDIETARY_RESTRICTION_TYPE_SHELLFISH_FREEDIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  unk_261E128 = 33;
  dword_261E118 = 4;
  dword_261E130 = 7;
  qword_261E108 = (uint64_t)"DIETARY_RESTRICTION_TYPE_LACTOSE_FREEDIETARY_RESTRICTION_TYPE_NUT_FREEDIETARY_RESTRICTION_TYPE_SHELLFISH_FREEDIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  qword_261E0F0 = (uint64_t)"DIETARY_RESTRICTION_TYPE_KOSHERDIETARY_RESTRICTION_TYPE_LACTOSE_FREEDIETARY_RESTRICTION_TYPE_NUT_FREEDIETARY_RESTRICTION_TYPE_SHELLFISH_FREEDIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  unk_261E0F8 = 31;
  dword_261E100 = 17;
  qword_261E110 = 37;
  qword_261E0D8 = (uint64_t)"DIETARY_RESTRICTION_TYPE_INCLUDES_SOYDIETARY_RESTRICTION_TYPE_KOSHERDIETARY_RESTRICTION_TYPE_LACTOSE_FREEDIETARY_RESTRICTION_TYPE_NUT_FREEDIETARY_RESTRICTION_TYPE_SHELLFISH_FREEDIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  unk_261E0E0 = 37;
  dword_261E0D0 = 10;
  dword_261E0E8 = 14;
  qword_261E0C0 = (uint64_t)"DIETARY_RESTRICTION_TYPE_INCLUDES_SHELLFISHDIETARY_RESTRICTION_TYPE_INCLUDES_SOYDIETARY_RESTRICTION_TYPE_KOSHERDIETARY_RESTRICTION_TYPE_LACTOSE_FREEDIETARY_RESTRICTION_TYPE_NUT_FREEDIETARY_RESTRICTION_TYPE_SHELLFISH_FREEDIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  qword_261E0A8 = (uint64_t)"DIETARY_RESTRICTION_TYPE_INCLUDES_NUTSDIETARY_RESTRICTION_TYPE_INCLUDES_SHELLFISHDIETARY_RESTRICTION_TYPE_INCLUDES_SOYDIETARY_RESTRICTION_TYPE_KOSHERDIETARY_RESTRICTION_TYPE_LACTOSE_FREEDIETARY_RESTRICTION_TYPE_NUT_FREEDIETARY_RESTRICTION_TYPE_SHELLFISH_FREEDIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  unk_261E0B0 = 38;
  dword_261E0B8 = 8;
  qword_261E0C8 = 43;
  dword_261E088 = 16;
  qword_261E090 = (uint64_t)"DIETARY_RESTRICTION_TYPE_INCLUDES_GLUTENDIETARY_RESTRICTION_TYPE_INCLUDES_NUTSDIETARY_RESTRICTION_TYPE_INCLUDES_SHELLFISHDIETARY_RESTRICTION_TYPE_INCLUDES_SOYDIETARY_RESTRICTION_TYPE_KOSHERDIETARY_RESTRICTION_TYPE_LACTOSE_FREEDIETARY_RESTRICTION_TYPE_NUT_FREEDIETARY_RESTRICTION_TYPE_SHELLFISH_FREEDIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  unk_261E098 = 40;
  dword_261E0A0 = 6;
  qword_261E078 = (uint64_t)"DIETARY_RESTRICTION_TYPE_INCLUDES_FISHDIETARY_RESTRICTION_TYPE_INCLUDES_GLUTENDIETARY_RESTRICTION_TYPE_INCLUDES_NUTSDIETARY_RESTRICTION_TYPE_INCLUDES_SHELLFISHDIETARY_RESTRICTION_TYPE_INCLUDES_SOYDIETARY_RESTRICTION_TYPE_KOSHERDIETARY_RESTRICTION_TYPE_LACTOSE_FREEDIETARY_RESTRICTION_TYPE_NUT_FREEDIETARY_RESTRICTION_TYPE_SHELLFISH_FREEDIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  unk_261E080 = 38;
  qword_261E060 = (uint64_t)"DIETARY_RESTRICTION_TYPE_INCLUDES_DAIRYDIETARY_RESTRICTION_TYPE_INCLUDES_FISHDIETARY_RESTRICTION_TYPE_INCLUDES_GLUTENDIETARY_RESTRICTION_TYPE_INCLUDES_NUTSDIETARY_RESTRICTION_TYPE_INCLUDES_SHELLFISHDIETARY_RESTRICTION_TYPE_INCLUDES_SOYDIETARY_RESTRICTION_TYPE_KOSHERDIETARY_RESTRICTION_TYPE_LACTOSE_FREEDIETARY_RESTRICTION_TYPE_NUT_FREEDIETARY_RESTRICTION_TYPE_SHELLFISH_FREEDIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  unk_261E068 = 39;
  dword_261E070 = 12;
  qword_261E030 = (uint64_t)"DIETARY_RESTRICTION_TYPE_GLUTEN_FREEDIETARY_RESTRICTION_TYPE_HALALDIETARY_RESTRICTION_TYPE_INCLUDES_DAIRYDIETARY_RESTRICTION_TYPE_INCLUDES_FISHDIETARY_RESTRICTION_TYPE_INCLUDES_GLUTENDIETARY_RESTRICTION_TYPE_INCLUDES_NUTSDIETARY_RESTRICTION_TYPE_INCLUDES_SHELLFISHDIETARY_RESTRICTION_TYPE_INCLUDES_SOYDIETARY_RESTRICTION_TYPE_KOSHERDIETARY_RESTRICTION_TYPE_LACTOSE_FREEDIETARY_RESTRICTION_TYPE_NUT_FREEDIETARY_RESTRICTION_TYPE_SHELLFISH_FREEDIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRICTION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  unk_261E038 = 36;
  dword_261E040 = 3;
  qword_261E050 = 30;
  dword_261E058 = 5;
  qword_261E000 = (uint64_t)"DIETARY_RESTRICTION_TYPE_DAIRY_FREEDIETARY_RESTRICTION_TYPE_FISH_FREEDIETARY_RESTRICTION_TYPE"
                           "_GLUTEN_FREEDIETARY_RESTRICTION_TYPE_HALALDIETARY_RESTRICTION_TYPE_INCLUDES_DAIRYDIETARY_REST"
                           "RICTION_TYPE_INCLUDES_FISHDIETARY_RESTRICTION_TYPE_INCLUDES_GLUTENDIETARY_RESTRICTION_TYPE_IN"
                           "CLUDES_NUTSDIETARY_RESTRICTION_TYPE_INCLUDES_SHELLFISHDIETARY_RESTRICTION_TYPE_INCLUDES_SOYDI"
                           "ETARY_RESTRICTION_TYPE_KOSHERDIETARY_RESTRICTION_TYPE_LACTOSE_FREEDIETARY_RESTRICTION_TYPE_NU"
                           "T_FREEDIETARY_RESTRICTION_TYPE_SHELLFISH_FREEDIETARY_RESTRICTION_TYPE_SOY_FREEDIETARY_RESTRIC"
                           "TION_TYPE_UNKNOWNDIETARY_RESTRICTION_TYPE_VEGANDIETARY_RESTRICTION_TYPE_VEGETARIAN";
  *(void *)algn_261E008 = 35;
  dword_261E010 = 11;
  qword_261E020 = 34;
  dword_261E028 = 15;
  dword_261D008 = 44;
  dword_261DF98 = 44;
  qword_261DFE8 = (uint64_t)"PREPARATION_METHOD_TYPE_VELVETED";
  dword_261DFE0 = 0;
  qword_261DFF0 = 32;
  dword_261DFF8 = 49;
  qword_261DFD0 = (uint64_t)"PREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DFC0 = 31;
  dword_261DFC8 = 47;
  qword_261DFD8 = 31;
  qword_261DFA0 = (uint64_t)"PREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  dword_261D560 = 48;
  dword_261DFB0 = 48;
  qword_261DFB8 = (uint64_t)"PREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DFA8 = 31;
  dword_261D0C8 = 43;
  dword_261DF80 = 43;
  qword_261DF88 = (uint64_t)"PREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DF78 = 30;
  qword_261DF90 = 34;
  qword_261DF58 = (uint64_t)"PREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  dword_261D0B0 = 42;
  dword_261DF68 = 42;
  qword_261DF60 = 31;
  qword_261DF28 = (uint64_t)"PREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DF40 = (uint64_t)"PREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DF30 = 33;
  dword_261DF38 = 40;
  qword_261DF48 = 31;
  qword_261DF10 = (uint64_t)"PREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  dword_261D1B8 = 46;
  dword_261DF20 = 46;
  qword_261DF00 = 30;
  qword_261DF18 = 33;
  dword_261D338 = 38;
  qword_261DDE0 = 38;
  qword_261DEE8 = 38;
  dword_261DEF0 = 38;
  qword_261DED0 = 32;
  dword_261DED8 = 37;
  qword_261DEC8 = (uint64_t)"PREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  dword_261D098 = 35;
  dword_261DEA8 = 36;
  qword_261DEB8 = 37;
  dword_261DEC0 = 39;
  dword_261DE90 = 35;
  qword_261DE98 = (uint64_t)"PREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DE88 = 31;
  qword_261DEA0 = 30;
  qword_261DE68 = (uint64_t)"PREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DE80 = (uint64_t)"PREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  dword_261DE60 = 33;
  qword_261DE70 = 31;
  dword_261DE78 = 34;
  qword_261D070 = (uint64_t)"DIRECTIONS_REQUEST_DETAILSDISPLAY_ANALYTICEV_ROUTING_VEHICLE_DETAILSEV_TRIPFULL_NAV_TRACEGENERIC_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEWORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_HARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAFFIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METADATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTELEMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTION_QUALITY_PROBE";
  dword_261DE30 = 31;
  qword_261DE40 = 34;
  dword_261DE48 = 32;
  qword_261DE58 = 30;
  qword_261D078 = 26;
  qword_261D0A8 = 26;
  dword_261DE00 = 29;
  qword_261DE10 = 34;
  dword_261DE18 = 30;
  qword_261DE28 = 31;
  qword_261D198 = 26;
  dword_261D380 = 26;
  qword_261D768 = 26;
  dword_261D7D0 = 26;
  dword_261DDE8 = 28;
  qword_261DDF8 = 27;
  dword_261DDB8 = 26;
  qword_261DDC0 = (uint64_t)"PREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DDC8 = 39;
  dword_261DDD0 = 27;
  qword_261DD90 = (uint64_t)"PREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DDA8 = (uint64_t)"PREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DD98 = 31;
  dword_261DDA0 = 25;
  qword_261DDB0 = 31;
  qword_261DD78 = (uint64_t)"PREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  dword_261DD70 = 23;
  qword_261DD80 = 34;
  dword_261DD88 = 24;
  qword_261DD60 = (uint64_t)"PREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DD48 = (uint64_t)"PREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DD50 = 33;
  dword_261DD58 = 22;
  qword_261DD68 = 33;
  qword_261DD30 = (uint64_t)"PREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  unk_261DD38 = 31;
  dword_261DD28 = 20;
  dword_261DD40 = 21;
  qword_261DD18 = (uint64_t)"PREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DD00 = (uint64_t)"PREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  unk_261DD08 = 30;
  dword_261DD10 = 19;
  qword_261DD20 = 29;
  qword_261DCE8 = (uint64_t)"PREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  unk_261DCF0 = 31;
  dword_261DCE0 = 17;
  dword_261DCF8 = 18;
  qword_261DCD0 = (uint64_t)"PREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  unk_261DCD8 = 29;
  qword_261DCB8 = (uint64_t)"PREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  unk_261DCC0 = 32;
  dword_261DCC8 = 16;
  qword_261DCA0 = (uint64_t)"PREPARATION_METHOD_TYPE_FERMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  unk_261DCA8 = 33;
  dword_261DC98 = 14;
  dword_261DCB0 = 15;
  qword_261DC88 = (uint64_t)"PREPARATION_METHOD_TYPE_EN_PAPILLOTEPREPARATION_METHOD_TYPE_FERMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  unk_261DC90 = 36;
  qword_261DC70 = (uint64_t)"PREPARATION_METHOD_TYPE_DRIEDPREPARATION_METHOD_TYPE_EN_PAPILLOTEPREPARATION_METHOD_TYPE_FERMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  unk_261DC78 = 29;
  dword_261DC80 = 13;
  qword_261DC40 = (uint64_t)"PREPARATION_METHOD_TYPE_CUREDPREPARATION_METHOD_TYPE_DEEP_FRIEDPREPARATION_METHOD_TYPE_DRIEDPREPARATION_METHOD_TYPE_EN_PAPILLOTEPREPARATION_METHOD_TYPE_FERMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  unk_261DC48 = 29;
  dword_261DC50 = 11;
  qword_261DC60 = 34;
  dword_261DC68 = 12;
  qword_261DC28 = (uint64_t)"PREPARATION_METHOD_TYPE_CODDLINGPREPARATION_METHOD_TYPE_CUREDPREPARATION_METHOD_TYPE_DEEP_FRIEDPREPARATION_METHOD_TYPE_DRIEDPREPARATION_METHOD_TYPE_EN_PAPILLOTEPREPARATION_METHOD_TYPE_FERMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  unk_261DC30 = 32;
  dword_261DC20 = 9;
  dword_261DC38 = 10;
  qword_261DBF8 = (uint64_t)"PREPARATION_METHOD_TYPE_BRINEDPREPARATION_METHOD_TYPE_BROILEDPREPARATION_METHOD_TYPE_CODDLINGPREPARATION_METHOD_TYPE_CUREDPREPARATION_METHOD_TYPE_DEEP_FRIEDPREPARATION_METHOD_TYPE_DRIEDPREPARATION_METHOD_TYPE_EN_PAPILLOTEPREPARATION_METHOD_TYPE_FERMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  unk_261DC00 = 30;
  qword_261D378 = 33;
  dword_261DBF0 = 6;
  dword_261DC08 = 7;
  qword_261DC18 = 31;
  dword_261D4B8 = 33;
  qword_261D4F8 = 33;
  qword_261DB70 = 33;
  qword_261DBD0 = 30;
  dword_261DBD8 = 8;
  qword_261DBE8 = 31;
  qword_261DBA0 = 33;
  qword_261DBB0 = (uint64_t)"PREPARATION_METHOD_TYPE_BLANCHEDPREPARATION_METHOD_TYPE_BOILEDPREPARATION_METHOD_TYPE_BRAISEDPREPARATION_METHOD_TYPE_BRINEDPREPARATION_METHOD_TYPE_BROILEDPREPARATION_METHOD_TYPE_CODDLINGPREPARATION_METHOD_TYPE_CUREDPREPARATION_METHOD_TYPE_DEEP_FRIEDPREPARATION_METHOD_TYPE_DRIEDPREPARATION_METHOD_TYPE_EN_PAPILLOTEPREPARATION_METHOD_TYPE_FERMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  unk_261DBB8 = 32;
  dword_261DBA8 = 5;
  dword_261DBC0 = 4;
  qword_261DB50 = (uint64_t)"PREPARATION_METHOD_TYPE_BAKEDPREPARATION_METHOD_TYPE_BARBEQUEDPREPARATION_METHOD_TYPE_BASTEDP"
                           "REPARATION_METHOD_TYPE_BLACKENEDPREPARATION_METHOD_TYPE_BLANCHEDPREPARATION_METHOD_TYPE_BOILE"
                           "DPREPARATION_METHOD_TYPE_BRAISEDPREPARATION_METHOD_TYPE_BRINEDPREPARATION_METHOD_TYPE_BROILED"
                           "PREPARATION_METHOD_TYPE_CODDLINGPREPARATION_METHOD_TYPE_CUREDPREPARATION_METHOD_TYPE_DEEP_FRI"
                           "EDPREPARATION_METHOD_TYPE_DRIEDPREPARATION_METHOD_TYPE_EN_PAPILLOTEPREPARATION_METHOD_TYPE_FE"
                           "RMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_G"
                           "RILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARA"
                           "AGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_"
                           "MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TY"
                           "PE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATIO"
                           "N_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREP"
                           "ARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPA"
                           "RATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMERE"
                           "DPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_"
                           "SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_T"
                           "YPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD"
                           "_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  qword_261DB80 = (uint64_t)"PREPARATION_METHOD_TYPE_BASTEDPREPARATION_METHOD_TYPE_BLACKENEDPREPARATION_METHOD_TYPE_BLANCHEDPREPARATION_METHOD_TYPE_BOILEDPREPARATION_METHOD_TYPE_BRAISEDPREPARATION_METHOD_TYPE_BRINEDPREPARATION_METHOD_TYPE_BROILEDPREPARATION_METHOD_TYPE_CODDLINGPREPARATION_METHOD_TYPE_CUREDPREPARATION_METHOD_TYPE_DEEP_FRIEDPREPARATION_METHOD_TYPE_DRIEDPREPARATION_METHOD_TYPE_EN_PAPILLOTEPREPARATION_METHOD_TYPE_FERMENTEDPREPARATION_METHOD_TYPE_FLAMBEEDPREPARATION_METHOD_TYPE_FRIEDPREPARATION_METHOD_TYPE_GRILLEDPREPARATION_METHOD_TYPE_JUGGEDPREPARATION_METHOD_TYPE_KALUAPREPARATION_METHOD_TYPE_KARAAGEPREPARATION_METHOD_TYPE_MARINATEDPREPARATION_METHOD_TYPE_MEUNIEREDPREPARATION_METHOD_TYPE_MICROWAVEDPREPARATION_METHOD_TYPE_PICKLEDPREPARATION_METHOD_TYPE_POACHEDPREPARATION_METHOD_TYPE_PRESSURE_COOKEDPREPARATION_METHOD_TYPE_PRESSURE_FRIEDPREPARATION_METHOD_TYPE_RAWPREPARATION_METHOD_TYPE_REN_VESSIEPREPARATION_METHOD_TYPE_ROASTEDPREPARATION_METHOD_TYPE_ROBATAYAKIPREPARATION_METHOD_TYPE_SALTEDPREPARATION_METHOD_TYPE_SAUTEEDPREPARATION_METHOD_TYPE_SCALDEDPREPARATION_METHOD_TYPE_SEAREDPREPARATION_METHOD_TYPE_SHALLOW_FRIEDPREPARATION_METHOD_TYPE_SIMMEREDPREPARATION_METHOD_TYPE_SKILLET_COOKEDPREPARATION_METHOD_TYPE_SMOKEDPREPARATION_METHOD_TYPE_SMOTHEREDPREPARATION_METHOD_TYPE_SOUS_VIDEPREPARATION_METHOD_TYPE_STEAMEDPREPARATION_METHOD_TYPE_STEEPEDPREPARATION_METHOD_TYPE_STEWEDPREPARATION_METHOD_TYPE_STIR_FRIEDPREPARATION_METHOD_TYPE_SUGAREDPREPARATION_METHOD_TYPE_SWEATEDPREPARATION_METHOD_TYPE_UNKNOWNPREPARATION_METHOD_TYPE_VELVETED";
  unk_261DB88 = 30;
  dword_261DB78 = 3;
  dword_261DB90 = 2;
  dword_261CFF0 = 29;
  qword_261D570 = 29;
  qword_261DAB0 = 29;
  qword_261DB58 = 29;
  dword_261DB60 = 1;
  dword_261DB48 = 0;
  qword_261DB08 = (uint64_t)"MPSES_ABANDONEDMPSES_INTERACTEDMPSES_UNKNOWN";
  unk_261DB10 = 15;
  qword_261DB38 = (uint64_t)"MPSES_UNKNOWN";
  unk_261DB40 = 13;
  dword_261DB18 = 2;
  dword_261DB30 = 1;
  qword_261DAA8 = (uint64_t)"MAPS_WIDGET_TYPE_DESTINATIONSMAPS_WIDGET_TYPE_NEARBYMAPS_WIDGET_TYPE_TRANSITMAPS_WIDGET_TYPE_UNKNOWN";
  qword_261DAF0 = (uint64_t)"MAPS_WIDGET_TYPE_UNKNOWN";
  qword_261DAF8 = 24;
  dword_261DB00 = 0;
  dword_261DAB8 = 1;
  qword_261DAC8 = 23;
  qword_261DAE0 = 24;
  dword_261DAE8 = 2;
  dword_261DAD0 = 3;
  qword_261DA60 = (uint64_t)"TRANSIT_MESSAGE_TYPE_NO_FAVORITE_LINETRANSIT_MESSAGE_TYPE_SINGLE_ADVISORYTRANSIT_MESSAGE_TYPE_UNKNOWN";
  unk_261DA68 = 37;
  dword_261D218 = 37;
  qword_261DA90 = (uint64_t)"TRANSIT_MESSAGE_TYPE_UNKNOWN";
  unk_261DA98 = 28;
  dword_261DAA0 = 0;
  qword_261DA78 = (uint64_t)"TRANSIT_MESSAGE_TYPE_SINGLE_ADVISORYTRANSIT_MESSAGE_TYPE_UNKNOWN";
  dword_261D4A0 = 36;
  qword_261DA80 = 36;
  dword_261D530 = 40;
  dword_261DA70 = 1;
  dword_261DA88 = 3;
  qword_261DA30 = (uint64_t)"TRANSIT_MESSAGE_TYPE_MULTIPLE_ADVISORIESTRANSIT_MESSAGE_TYPE_NO_ADVISORYTRANSIT_MESSAGE_TYPE_"
                           "NO_FAVORITE_LINETRANSIT_MESSAGE_TYPE_SINGLE_ADVISORYTRANSIT_MESSAGE_TYPE_UNKNOWN";
  *(void *)algn_261DA38 = 40;
  qword_261DA48 = (uint64_t)"TRANSIT_MESSAGE_TYPE_NO_ADVISORYTRANSIT_MESSAGE_TYPE_NO_FAVORITE_LINETRANSIT_MESSAGE_TYPE_SINGLE_ADVISORYTRANSIT_MESSAGE_TYPE_UNKNOWN";
  unk_261DA50 = 32;
  dword_261DA58 = 2;
  dword_261DA40 = 4;
  qword_261DA00 = (uint64_t)"JPEGPNG";
  unk_261DA08 = 4;
  qword_261DA18 = (uint64_t)"PNG";
  dword_261DA10 = 2;
  qword_261DA20 = 3;
  dword_261DA28 = 0;
  qword_261D9E8 = (uint64_t)"GIFJPEGPNG";
  unk_261D9F0 = 3;
  dword_261D9F8 = 1;
  qword_261D9B8 = (uint64_t)"GEOCODE_REQUEST_TYPESEARCH_REQUEST_TYPE";
  unk_261D9C0 = 20;
  dword_261D9E0 = 1;
  dword_261D9C8 = 2;
  qword_261D9D0 = (uint64_t)"SEARCH_REQUEST_TYPE";
  unk_261D9D8 = 19;
  qword_261D9A0 = (uint64_t)"VERY_NEAR";
  unk_261D9A8 = 9;
  dword_261D9B0 = 3;
  qword_261D970 = (uint64_t)"UNKNOWN_DISTANCE_TO_MANEUVERVERY_FARVERY_NEAR";
  unk_261D978 = 28;
  qword_261D988 = (uint64_t)"VERY_FARVERY_NEAR";
  unk_261D990 = 8;
  dword_261D980 = 0;
  dword_261D998 = 7;
  qword_261D958 = (uint64_t)"NEARUNKNOWN_DISTANCE_TO_MANEUVERVERY_FARVERY_NEAR";
  qword_261D960 = 4;
  dword_261D968 = 4;
  qword_261D940 = (uint64_t)"MEDIUMNEARUNKNOWN_DISTANCE_TO_MANEUVERVERY_FARVERY_NEAR";
  qword_261D928 = (uint64_t)"IMMEDIATEMEDIUMNEARUNKNOWN_DISTANCE_TO_MANEUVERVERY_FARVERY_NEAR";
  unk_261D930 = 9;
  qword_261D948 = 6;
  dword_261D950 = 5;
  dword_261D938 = 1;
  qword_261D880 = (uint64_t)"OFF_ROUTEON_ROUTEPROCEEDING_TO_ROUTERECALCULATING";
  qword_261D910 = (uint64_t)"FARIMMEDIATEMEDIUMNEARUNKNOWN_DISTANCE_TO_MANEUVERVERY_FARVERY_NEAR";
  unk_261D918 = 3;
  dword_261D908 = 2;
  dword_261D920 = 6;
  qword_261D8F8 = (uint64_t)"EXTREMELY_NEARFARIMMEDIATEMEDIUMNEARUNKNOWN_DISTANCE_TO_MANEUVERVERY_FARVERY_NEAR";
  qword_261D8E0 = (uint64_t)"EXTREMELY_FAREXTREMELY_NEARFARIMMEDIATEMEDIUMNEARUNKNOWN_DISTANCE_TO_MANEUVERVERY_FARVERY_NEAR";
  *(void *)algn_261D8E8 = 13;
  dword_261D8F0 = 8;
  qword_261D900 = 14;
  qword_261D8C8 = (uint64_t)"RECALCULATING";
  unk_261D8D0 = 13;
  dword_261D8C0 = 1;
  dword_261D8D8 = 5;
  qword_261D8B0 = (uint64_t)"PROCEEDING_TO_ROUTERECALCULATING";
  unk_261D8B8 = 19;
  qword_261D898 = (uint64_t)"ON_ROUTEPROCEEDING_TO_ROUTERECALCULATING";
  unk_261D8A0 = 8;
  dword_261D8A8 = 2;
  qword_261D868 = (uint64_t)"NOT_NAVIGATINGOFF_ROUTEON_ROUTEPROCEEDING_TO_ROUTERECALCULATING";
  unk_261D870 = 14;
  dword_261D878 = 0;
  qword_261D888 = 9;
  dword_261D890 = 3;
  qword_261D850 = (uint64_t)"END_OF_SEGMENTNOT_NAVIGATINGOFF_ROUTEON_ROUTEPROCEEDING_TO_ROUTERECALCULATING";
  unk_261D858 = 14;
  dword_261D848 = 6;
  dword_261D860 = 7;
  qword_261D820 = (uint64_t)"BAD_ROUTEEND_OF_ROUTEEND_OF_SEGMENTNOT_NAVIGATINGOFF_ROUTEON_ROUTEPROCEEDING_TO_ROUTERECALCULATING";
  *(void *)algn_261D828 = 9;
  dword_261D830 = 4;
  qword_261D838 = (uint64_t)"END_OF_ROUTEEND_OF_SEGMENTNOT_NAVIGATINGOFF_ROUTEON_ROUTEPROCEEDING_TO_ROUTERECALCULATING";
  unk_261D840 = 12;
  qword_261D7D8 = (uint64_t)"TRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  qword_261D808 = (uint64_t)"WATER";
  dword_261D800 = 0;
  qword_261D810 = 5;
  dword_261D818 = 12;
  qword_261D7F0 = (uint64_t)"UNKNOWN_LINE_TYPEWATER";
  qword_261D7E0 = 16;
  dword_261D7E8 = 16;
  qword_261D7F8 = 17;
  qword_261D580 = (uint64_t)"CONNECTOR_ROADFERRYFREEWAY_CONTROLLEDFREEWAY_UNCONTROLLEDGATEHIDDENHIGHWAYLOCAL_MAJOR_ROADLOC"
                           "AL_ROADMAJOR_HIGHWAYMINOR_ROADPARKING_LOT_ROADPARKING_STRUCTUREPEDESTRIAN_OVERPASSPEDESTRIAN_"
                           "OVERPASS_RAMPPEDESTRIAN_OVERPASS_STEPSPEDESTRIAN_PATHPEDESTRIAN_ROADPEDESTRIAN_UNDERPASSPEDES"
                           "TRIAN_UNDERPASS_RAMPPEDESTRIAN_UNDERPASS_STEPSPRIVATE_PATHSERVICE_ROADSPUTNIK_BORDERTRANSIT_S"
                           "TATION_GRAPHTRANSIT_TRANSFERUNKNOWN_LINE_TYPEWATER";
  *(void *)algn_261D588 = 14;
  dword_261D590 = 6;
  dword_261D7A0 = 23;
  qword_261D7B0 = 14;
  dword_261D7B8 = 13;
  qword_261D7C8 = 21;
  qword_261D5A0 = 5;
  dword_261D5A8 = 11;
  dword_261D770 = 21;
  qword_261D780 = 12;
  dword_261D788 = 2;
  qword_261D798 = 12;
  qword_261D5B8 = 18;
  dword_261D5C0 = 9;
  qword_261D5D0 = 20;
  dword_261D740 = 20;
  qword_261D750 = 25;
  dword_261D758 = 22;
  dword_261D5D8 = 10;
  qword_261D5E8 = 4;
  dword_261D710 = 1;
  qword_261D720 = 15;
  dword_261D728 = 15;
  qword_261D738 = 20;
  dword_261D5F0 = 24;
  qword_261D600 = 6;
  dword_261D6E0 = 19;
  qword_261D6F0 = 25;
  dword_261D6F8 = 18;
  qword_261D708 = 15;
  dword_261D608 = 27;
  qword_261D618 = 7;
  dword_261D6B0 = 14;
  qword_261D6C0 = 19;
  dword_261D6C8 = 17;
  qword_261D6D8 = 24;
  dword_261D620 = 7;
  qword_261D630 = 16;
  dword_261D680 = 3;
  qword_261D690 = 16;
  dword_261D698 = 25;
  qword_261D6A8 = 17;
  dword_261D638 = 5;
  qword_261D648 = 10;
  dword_261D650 = 4;
  qword_261D660 = 13;
  dword_261D668 = 8;
  qword_261D678 = 10;
  qword_261CF80 = (uint64_t)"AR_SESSION_USAGEBATCH_TRAFFIC_PROBE_COLLECTIONCACHE_HITCLIENT_AC_SUGGESTIONSCOMMUTE_WINDOWCUR"
                           "ATED_COLLECTION_STATSCURATED_COLLECTION_USAGEDAILY_USE_SUMMARYDEVICE_SYNC_STATUSDIRECTIONSDIR"
                           "ECTIONS_REQUEST_DETAILSDISPLAY_ANALYTICEV_ROUTING_VEHICLE_DETAILSEV_TRIPFULL_NAV_TRACEGENERIC"
                           "_APP_ERRORGRID_DURATIONHARD_STOPIMPRESSION_EVENTLIST_INTERACTION_SESSIONLOG_DISCARDLOG_FRAMEW"
                           "ORKLOG_MSG_EVENT_TYPE_UNKNOWNMAPS_DEVICE_SETTINGSMAPS_ENGAGEMENTMAPS_INTERACTIONMAPS_WIDGETS_"
                           "SESSIONMAP_KIT_COUNTSMAP_LAUNCHMARCOLITE_USAGENETWORKNETWORK_EVENT_SUMMARYNETWORK_SELECTION_H"
                           "ARVESTOFFLINE_REQUEST_RESPONSEPARKED_CARPERIODIC_SETTINGS_SUMMARYPLACE_CACHE_LOOKUPPLACE_DATA"
                           "_CACHEPOI_BUSYNESS_DATAPRED_EX_TRAININGPRESSURE_DATAPROACTIVE_SUGGESTION_SESSIONREALTIME_TRAF"
                           "FIC_PROBE_COLLECTIONREFINE_SEARCH_SESSIONRIDE_BOOKED_SESSIONRIDE_BOOKING_SESSIONSERVICE_METAD"
                           "ATASHOWCASE_SUPPRESSIONSTALE_RESOURCESTATE_TIMINGTABLE_BOOKED_SESSIONTABLE_BOOKING_SESSIONTEL"
                           "EMETRICTHERMAL_PRESSURETHROTTLETILE_CACHE_ANALYTICTILE_SET_STATETIME_TO_LEAVE_HYPOTHESISTIME_"
                           "TO_LEAVE_INITIAL_TRAVEL_TIMETRANSIT_APP_LAUNCHTRIP_DEPARTUREUSER_ACTIONVLF_USAGEWIFI_CONNECTI"
                           "ON_QUALITY_PROBE";
  *(void *)algn_261CF88 = 16;
  qword_261CFA0 = 30;
  dword_261CFA8 = 27;
  qword_261CFB8 = 9;
  dword_261CFC0 = 7;
  qword_261CFD0 = 21;
  dword_261CFD8 = 25;
  qword_261CFE8 = 14;
  qword_261D000 = 24;
  qword_261D018 = 24;
  qword_261D030 = 17;
  dword_261D038 = 50;
  qword_261D048 = 18;
  qword_261D060 = 10;
  dword_261D068 = 8;
  qword_261D090 = 16;
  qword_261D0C0 = 7;
  qword_261D0D8 = 14;
  dword_261D0E0 = 23;
  qword_261D0F0 = 17;
  dword_261D0F8 = 30;
  qword_261D108 = 13;
  dword_261D110 = 34;
  qword_261D120 = 9;
  dword_261D128 = 47;
  qword_261D138 = 16;
  qword_261D150 = 24;
  dword_261D158 = 14;
  dword_261D578 = 31;
  qword_261D168 = 11;
  dword_261D170 = 49;
  qword_261D180 = 13;
  qword_261D540 = 11;
  dword_261D548 = 1;
  qword_261D558 = 9;
  dword_261D188 = 12;
  dword_261D1A0 = 0;
  dword_261D500 = 11;
  qword_261D510 = 18;
  dword_261D518 = 9;
  qword_261D528 = 14;
  qword_261D1B0 = 20;
  qword_261D1C8 = 15;
  qword_261D1E0 = 16;
  dword_261D4D0 = 4;
  qword_261D4E0 = 24;
  dword_261D4E8 = 10;
  qword_261D1F8 = 20;
  dword_261D200 = 13;
  qword_261D210 = 14;
  qword_261D228 = 10;
  qword_261D4B0 = 19;
  qword_261D4C8 = 14;
  dword_261D230 = 17;
  qword_261D240 = 15;
  dword_261D248 = 39;
  dword_261D470 = 24;
  qword_261D480 = 16;
  qword_261D498 = 8;
  qword_261D258 = 7;
  dword_261D260 = 6;
  dword_261D440 = 21;
  qword_261D450 = 21;
  dword_261D458 = 20;
  qword_261D468 = 10;
  qword_261D270 = 21;
  qword_261D288 = 25;
  dword_261D410 = 22;
  qword_261D420 = 12;
  dword_261D428 = 2;
  qword_261D438 = 20;
  qword_261D2A0 = 24;
  dword_261D2A8 = 28;
  qword_261D2B8 = 10;
  dword_261D2C0 = 32;
  qword_261D3F0 = 20;
  qword_261D408 = 14;
  qword_261D2D0 = 25;
  qword_261D2E8 = 18;
  dword_261D3B0 = 19;
  qword_261D3C0 = 20;
  dword_261D3C8 = 18;
  qword_261D3D8 = 16;
  qword_261D300 = 16;
  dword_261D308 = 5;
  qword_261D318 = 17;
  qword_261D390 = 21;
  dword_261D398 = 15;
  qword_261D3A8 = 19;
  qword_261D330 = 16;
  qword_261D348 = 13;
  qword_261D360 = 28;
  dword_261D368 = 16;
  qword_261E2D0 = (uint64_t)"NUTRITION_UNIT_UNKNOWN";
  unk_261E2D8 = 22;
  qword_261E2C0 = 24;
  dword_261E2C8 = 6;
  dword_261E2E0 = 0;
  qword_261E300 = (uint64_t)"FOOD_MENU_TYPE_BRUNCHFOOD_MENU_TYPE_COCKTAILSFOOD_MENU_TYPE_DINNERFOOD_MENU_TYPE_DRINKSFOOD_MENU_TYPE_HAPPY_HOURFOOD_MENU_TYPE_LUNCHFOOD_MENU_TYPE_SPECIALSFOOD_MENU_TYPE_SPECIAL_EVENTFOOD_MENU_TYPE_UNKNOWN";
  qword_261E318 = (uint64_t)"FOOD_MENU_TYPE_COCKTAILSFOOD_MENU_TYPE_DINNERFOOD_MENU_TYPE_DRINKSFOOD_MENU_TYPE_HAPPY_HOURFOOD_MENU_TYPE_LUNCHFOOD_MENU_TYPE_SPECIALSFOOD_MENU_TYPE_SPECIAL_EVENTFOOD_MENU_TYPE_UNKNOWN";
  qword_261E330 = (uint64_t)"FOOD_MENU_TYPE_DINNERFOOD_MENU_TYPE_DRINKSFOOD_MENU_TYPE_HAPPY_HOURFOOD_MENU_TYPE_LUNCHFOOD_MENU_TYPE_SPECIALSFOOD_MENU_TYPE_SPECIAL_EVENTFOOD_MENU_TYPE_UNKNOWN";
  qword_261E348 = (uint64_t)"FOOD_MENU_TYPE_DRINKSFOOD_MENU_TYPE_HAPPY_HOURFOOD_MENU_TYPE_LUNCHFOOD_MENU_TYPE_SPECIALSFOOD_MENU_TYPE_SPECIAL_EVENTFOOD_MENU_TYPE_UNKNOWN";
  qword_261E360 = (uint64_t)"FOOD_MENU_TYPE_HAPPY_HOURFOOD_MENU_TYPE_LUNCHFOOD_MENU_TYPE_SPECIALSFOOD_MENU_TYPE_SPECIAL_EVENTFOOD_MENU_TYPE_UNKNOWN";
  qword_261E378 = (uint64_t)"FOOD_MENU_TYPE_LUNCHFOOD_MENU_TYPE_SPECIALSFOOD_MENU_TYPE_SPECIAL_EVENTFOOD_MENU_TYPE_UNKNOWN";
  qword_261E390 = (uint64_t)"FOOD_MENU_TYPE_SPECIALSFOOD_MENU_TYPE_SPECIAL_EVENTFOOD_MENU_TYPE_UNKNOWN";
  qword_261E3A8 = (uint64_t)"FOOD_MENU_TYPE_SPECIAL_EVENTFOOD_MENU_TYPE_UNKNOWN";
  qword_261E3C0 = (uint64_t)"FOOD_MENU_TYPE_UNKNOWN";
  qword_261E2E8 = (uint64_t)"FOOD_MENU_TYPE_BREAKFASTFOOD_MENU_TYPE_BRUNCHFOOD_MENU_TYPE_COCKTAILSFOOD_MENU_TYPE_DINNERFOO"
                           "D_MENU_TYPE_DRINKSFOOD_MENU_TYPE_HAPPY_HOURFOOD_MENU_TYPE_LUNCHFOOD_MENU_TYPE_SPECIALSFOOD_ME"
                           "NU_TYPE_SPECIAL_EVENTFOOD_MENU_TYPE_UNKNOWN";
  unk_261E2F0 = 24;
  dword_261E2F8 = 1;
  qword_261E308 = 21;
  dword_261E310 = 3;
  qword_261E320 = 24;
  uint64_t result = 24;
  dword_261E328 = 7;
  qword_261E338 = 21;
  dword_261E340 = 4;
  qword_261E350 = 21;
  dword_261E358 = 6;
  qword_261E368 = 25;
  dword_261E370 = 9;
  qword_261E380 = 20;
  dword_261E388 = 2;
  qword_261E398 = 23;
  dword_261E3A0 = 5;
  qword_261E3B0 = 28;
  dword_261E3B8 = 8;
  qword_261E3C8 = 22;
  dword_261E3D0 = 0;
  qword_261E3F0 = (uint64_t)"MENU_ORIGIN_CURATIONMENU_ORIGIN_IMAGEMENU_ORIGIN_UNKNOWNMENU_ORIGIN_VENDORMENU_ORIGIN_WEB_BRAND_SCRAPINGMENU_ORIGIN_WEB_SCRAPING";
  unk_261E3F8 = 20;
  qword_261E408 = (uint64_t)"MENU_ORIGIN_IMAGEMENU_ORIGIN_UNKNOWNMENU_ORIGIN_VENDORMENU_ORIGIN_WEB_BRAND_SCRAPINGMENU_ORIGIN_WEB_SCRAPING";
  unk_261E410 = 17;
  qword_261E420 = (uint64_t)"MENU_ORIGIN_UNKNOWNMENU_ORIGIN_VENDORMENU_ORIGIN_WEB_BRAND_SCRAPINGMENU_ORIGIN_WEB_SCRAPING";
  unk_261E428 = 19;
  qword_261E438 = (uint64_t)"MENU_ORIGIN_VENDORMENU_ORIGIN_WEB_BRAND_SCRAPINGMENU_ORIGIN_WEB_SCRAPING";
  unk_261E440 = 18;
  qword_261E450 = (uint64_t)"MENU_ORIGIN_WEB_BRAND_SCRAPINGMENU_ORIGIN_WEB_SCRAPING";
  qword_261E458 = 30;
  qword_261E468 = (uint64_t)"MENU_ORIGIN_WEB_SCRAPING";
  unk_261E470 = 24;
  qword_261E3D8 = (uint64_t)"MENU_ORIGIN_BUSINESS_CONNECTMENU_ORIGIN_CURATIONMENU_ORIGIN_IMAGEMENU_ORIGIN_UNKNOWNMENU_ORIG"
                           "IN_VENDORMENU_ORIGIN_WEB_BRAND_SCRAPINGMENU_ORIGIN_WEB_SCRAPING";
  unk_261E3E0 = 28;
  dword_261E3E8 = 2;
  dword_261E400 = 6;
  dword_261E418 = 5;
  dword_261E430 = 0;
  dword_261E448 = 1;
  dword_261E460 = 4;
  dword_261E478 = 3;
  qword_261E498 = (uint64_t)"POPULARITY_LOWPOPULARITY_MEDIUMPOPULARITY_UNKNOWN";
  unk_261E4A0 = 14;
  qword_261E4B0 = (uint64_t)"POPULARITY_MEDIUMPOPULARITY_UNKNOWN";
  unk_261E4B8 = 17;
  qword_261E4C8 = (uint64_t)"POPULARITY_UNKNOWN";
  unk_261E4D0 = 18;
  qword_261E480 = (uint64_t)"POPULARITY_HIGHPOPULARITY_LOWPOPULARITY_MEDIUMPOPULARITY_UNKNOWN";
  *(void *)algn_261E488 = 15;
  dword_261E490 = 3;
  dword_261E4A8 = 1;
  dword_261E4C0 = 2;
  dword_261E4D8 = 0;
  qword_261E510 = (uint64_t)"OFFLINE_MESSAGE_TYPE_ETA_TRAFFIC_UPDATE_REQUESTOFFLINE_MESSAGE_TYPE_PLACE_REQUESTOFFLINE_MESSAGE_TYPE_TRANSIT_ROUTE_UPDATE_REQUESTOFFLINE_MESSAGE_TYPE_UNKNOWN";
  unk_261E518 = 47;
  qword_261E528 = (uint64_t)"OFFLINE_MESSAGE_TYPE_PLACE_REQUESTOFFLINE_MESSAGE_TYPE_TRANSIT_ROUTE_UPDATE_REQUESTOFFLINE_MESSAGE_TYPE_UNKNOWN";
  qword_261E540 = (uint64_t)"OFFLINE_MESSAGE_TYPE_TRANSIT_ROUTE_UPDATE_REQUESTOFFLINE_MESSAGE_TYPE_UNKNOWN";
  qword_261E548 = 49;
  qword_261E558 = (uint64_t)"OFFLINE_MESSAGE_TYPE_UNKNOWN";
  unk_261E560 = 28;
  qword_261E4E0 = (uint64_t)"OFFLINE_MESSAGE_TYPE_DIRECTIONS_REQUESTOFFLINE_MESSAGE_TYPE_ETA_REQUESTOFFLINE_MESSAGE_TYPE_E"
                           "TA_TRAFFIC_UPDATE_REQUESTOFFLINE_MESSAGE_TYPE_PLACE_REQUESTOFFLINE_MESSAGE_TYPE_TRANSIT_ROUTE"
                           "_UPDATE_REQUESTOFFLINE_MESSAGE_TYPE_UNKNOWN";
  *(void *)algn_261E4E8 = 39;
  dword_261E4F0 = 2;
  qword_261E4F8 = (uint64_t)"OFFLINE_MESSAGE_TYPE_ETA_REQUESTOFFLINE_MESSAGE_TYPE_ETA_TRAFFIC_UPDATE_REQUESTOFFLINE_MESSAGE_TYPE_PLACE_REQUESTOFFLINE_MESSAGE_TYPE_TRANSIT_ROUTE_UPDATE_REQUESTOFFLINE_MESSAGE_TYPE_UNKNOWN";
  unk_261E500 = 32;
  dword_261E508 = 3;
  dword_261E520 = 4;
  qword_261E530 = 34;
  dword_261E538 = 1;
  dword_261E550 = 5;
  dword_261E568 = 0;
  qword_261E640 = (uint64_t)"OFFLINE_SERVICE_TYPE_REVGEOOFFLINE_SERVICE_TYPE_ROUTINGOFFLINE_SERVICE_TYPE_SEARCHOFFLINE_SERVICE_TYPE_UNKNOWNOFFLINE_SERVICE_TYPE_VECTOR_PARSEC";
  qword_261E670 = (uint64_t)"OFFLINE_SERVICE_TYPE_SEARCHOFFLINE_SERVICE_TYPE_UNKNOWNOFFLINE_SERVICE_TYPE_VECTOR_PARSEC";
  qword_261E688 = (uint64_t)"OFFLINE_SERVICE_TYPE_UNKNOWNOFFLINE_SERVICE_TYPE_VECTOR_PARSEC";
  qword_261E658 = (uint64_t)"OFFLINE_SERVICE_TYPE_ROUTINGOFFLINE_SERVICE_TYPE_SEARCHOFFLINE_SERVICE_TYPE_UNKNOWNOFFLINE_SERVICE_TYPE_VECTOR_PARSEC";
  qword_261E660 = 28;
  qword_261E690 = 28;
  qword_261E6A0 = (uint64_t)"OFFLINE_SERVICE_TYPE_VECTOR_PARSEC";
  unk_261E6A8 = 34;
  qword_261E610 = (uint64_t)"OFFLINE_SERVICE_TYPE_DISPATCHEROFFLINE_SERVICE_TYPE_PLACESOFFLINE_SERVICE_TYPE_REVGEOOFFLINE_"
                           "SERVICE_TYPE_ROUTINGOFFLINE_SERVICE_TYPE_SEARCHOFFLINE_SERVICE_TYPE_UNKNOWNOFFLINE_SERVICE_TY"
                           "PE_VECTOR_PARSEC";
  *(void *)algn_261E618 = 31;
  qword_261E628 = (uint64_t)"OFFLINE_SERVICE_TYPE_PLACESOFFLINE_SERVICE_TYPE_REVGEOOFFLINE_SERVICE_TYPE_ROUTINGOFFLINE_SERVICE_TYPE_SEARCHOFFLINE_SERVICE_TYPE_UNKNOWNOFFLINE_SERVICE_TYPE_VECTOR_PARSEC";
  dword_261E620 = 1;
  qword_261E630 = 27;
  dword_261E638 = 3;
  qword_261E648 = 27;
  dword_261E650 = 6;
  dword_261E668 = 4;
  qword_261E678 = 27;
  dword_261E680 = 2;
  dword_261E698 = 0;
  dword_261E6B0 = 5;
  qword_261E6C0 = 32;
  qword_261E6D0 = (uint64_t)"LAYER_FARPOINT_METADATALAYER_GEO_SEARCHLAYER_GEO_SEARCH_V2LAYER_POI_SEARCH_AND_PLACESLAYER_REVGEOLAYER_ROUTINGLAYER_ROUTING_V2LAYER_ROUTING_V2_TRAFFIC_INCIDENTSLAYER_ROUTING_V2_TRANSITLAYER_ROUTING_V3LAYER_ROUTING_V3_METADATALAYER_ROUTING_V3_TRAFFIC_INCIDENTSLAYER_ROUTING_V3_TRANSITLAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  unk_261E6D8 = 23;
  qword_261E760 = (uint64_t)"LAYER_ROUTING_V2LAYER_ROUTING_V2_TRAFFIC_INCIDENTSLAYER_ROUTING_V2_TRANSITLAYER_ROUTING_V3LAYER_ROUTING_V3_METADATALAYER_ROUTING_V3_TRAFFIC_INCIDENTSLAYER_ROUTING_V3_TRANSITLAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  qword_261E7A8 = (uint64_t)"LAYER_ROUTING_V3LAYER_ROUTING_V3_METADATALAYER_ROUTING_V3_TRAFFIC_INCIDENTSLAYER_ROUTING_V3_TRANSITLAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  qword_261E6E8 = (uint64_t)"LAYER_GEO_SEARCHLAYER_GEO_SEARCH_V2LAYER_POI_SEARCH_AND_PLACESLAYER_REVGEOLAYER_ROUTINGLAYER_ROUTING_V2LAYER_ROUTING_V2_TRAFFIC_INCIDENTSLAYER_ROUTING_V2_TRANSITLAYER_ROUTING_V3LAYER_ROUTING_V3_METADATALAYER_ROUTING_V3_TRAFFIC_INCIDENTSLAYER_ROUTING_V3_TRANSITLAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  qword_261E6F0 = 16;
  dword_261E710 = 16;
  qword_261E768 = 16;
  qword_261E7B0 = 16;
  qword_261E7D8 = (uint64_t)"LAYER_ROUTING_V3_TRAFFIC_INCIDENTSLAYER_ROUTING_V3_TRANSITLAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  qword_261E778 = (uint64_t)"LAYER_ROUTING_V2_TRAFFIC_INCIDENTSLAYER_ROUTING_V2_TRANSITLAYER_ROUTING_V3LAYER_ROUTING_V3_METADATALAYER_ROUTING_V3_TRAFFIC_INCIDENTSLAYER_ROUTING_V3_TRANSITLAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  qword_261E780 = 34;
  qword_261E7E0 = 34;
  qword_261E7F0 = (uint64_t)"LAYER_ROUTING_V3_TRANSITLAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  qword_261E808 = (uint64_t)"LAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  unk_261E810 = 22;
  qword_261E820 = (uint64_t)"LAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  unk_261E828 = 27;
  qword_261E718 = (uint64_t)"LAYER_POI_SEARCH_AND_PLACESLAYER_REVGEOLAYER_ROUTINGLAYER_ROUTING_V2LAYER_ROUTING_V2_TRAFFIC_INCIDENTSLAYER_ROUTING_V2_TRANSITLAYER_ROUTING_V3LAYER_ROUTING_V3_METADATALAYER_ROUTING_V3_TRAFFIC_INCIDENTSLAYER_ROUTING_V3_TRANSITLAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  unk_261E720 = 27;
  qword_261E838 = (uint64_t)"LAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  qword_261E868 = (uint64_t)"LAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  qword_261E790 = (uint64_t)"LAYER_ROUTING_V2_TRANSITLAYER_ROUTING_V3LAYER_ROUTING_V3_METADATALAYER_ROUTING_V3_TRAFFIC_INCIDENTSLAYER_ROUTING_V3_TRANSITLAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  dword_261E728 = 3;
  qword_261E798 = 24;
  qword_261E7F8 = 24;
  qword_261E870 = 24;
  qword_261E880 = (uint64_t)"LAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  dword_261E8C0 = 3;
  dword_261E8D8 = 270;
  qword_261E8E0 = (uint64_t)"CDM_BUILDINGSCDM_FEATURE_LOOKUPCDM_HSPCDM_ISLANDSCDM_POISCDM_RAILWAYSCDM_ROADSCDM_ROADS_DEBUGCDM_TERRITORIESCDM_TIME_ZONESCDM_TRANSIT_DEBUGCDM_TRANSIT_DISPLAYCDM_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  dword_261E8F0 = 260;
  qword_261E8F8 = (uint64_t)"CDM_FEATURE_LOOKUPCDM_HSPCDM_ISLANDSCDM_POISCDM_RAILWAYSCDM_ROADSCDM_ROADS_DEBUGCDM_TERRITORIESCDM_TIME_ZONESCDM_TRANSIT_DEBUGCDM_TRANSIT_DISPLAYCDM_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  dword_261E920 = 50;
  dword_261E938 = 290;
  qword_261E940 = (uint64_t)"CDM_POISCDM_RAILWAYSCDM_ROADSCDM_ROADS_DEBUGCDM_TERRITORIESCDM_TIME_ZONESCDM_TRANSIT_DEBUGCDM_TRANSIT_DISPLAYCDM_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  dword_261E758 = 2;
  dword_261E950 = 2;
  qword_261E958 = (uint64_t)"CDM_RAILWAYSCDM_ROADSCDM_ROADS_DEBUGCDM_TERRITORIESCDM_TIME_ZONESCDM_TRANSIT_DEBUGCDM_TRANSIT_DISPLAYCDM_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  dword_261E6F8 = 7;
  qword_261E910 = (uint64_t)"CDM_HSPCDM_ISLANDSCDM_POISCDM_RAILWAYSCDM_ROADSCDM_ROADS_DEBUGCDM_TERRITORIESCDM_TIME_ZONESCDM_TRANSIT_DEBUGCDM_TRANSIT_DISPLAYCDM_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  unk_261E918 = 7;
  dword_261E968 = 7;
  dword_261E6E0 = 1;
  dword_261E980 = 1;
  qword_261E9A0 = (uint64_t)"CDM_TERRITORIESCDM_TIME_ZONESCDM_TRANSIT_DEBUGCDM_TRANSIT_DISPLAYCDM_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  unk_261E9A8 = 15;
  qword_261E988 = (uint64_t)"CDM_ROADS_DEBUGCDM_TERRITORIESCDM_TIME_ZONESCDM_TRANSIT_DEBUGCDM_TRANSIT_DISPLAYCDM_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  unk_261E990 = 15;
  dword_261E788 = 15;
  dword_261E9B0 = 240;
  qword_261E9B8 = (uint64_t)"CDM_TIME_ZONESCDM_TRANSIT_DEBUGCDM_TRANSIT_DISPLAYCDM_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  unk_261E9C0 = 14;
  dword_261E7A0 = 14;
  dword_261E9C8 = 280;
  qword_261E9D0 = (uint64_t)"CDM_TRANSIT_DEBUGCDM_TRANSIT_DISPLAYCDM_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  dword_261E9E0 = 360;
  dword_261E9F8 = 300;
  qword_261EA00 = (uint64_t)"CDM_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  qword_261E700 = (uint64_t)"LAYER_GEO_SEARCH_V2LAYER_POI_SEARCH_AND_PLACESLAYER_REVGEOLAYER_ROUTINGLAYER_ROUTING_V2LAYER_ROUTING_V2_TRAFFIC_INCIDENTSLAYER_ROUTING_V2_TRANSITLAYER_ROUTING_V3LAYER_ROUTING_V3_METADATALAYER_ROUTING_V3_TRAFFIC_INCIDENTSLAYER_ROUTING_V3_TRANSITLAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  qword_261E708 = 19;
  dword_261E800 = 19;
  qword_261E9E8 = (uint64_t)"CDM_TRANSIT_DISPLAYCDM_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  unk_261E9F0 = 19;
  qword_261EA08 = 19;
  dword_261EA10 = 350;
  dword_261E7E8 = 20;
  dword_261EA28 = 20;
  qword_261EA30 = (uint64_t)"CDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  dword_261EA40 = 250;
  qword_261E8C8 = (uint64_t)"CDM_AOISCDM_BUILDINGSCDM_FEATURE_LOOKUPCDM_HSPCDM_ISLANDSCDM_POISCDM_RAILWAYSCDM_ROADSCDM_ROADS_DEBUGCDM_TERRITORIESCDM_TIME_ZONESCDM_TRANSIT_DEBUGCDM_TRANSIT_DISPLAYCDM_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  dword_261E830 = 8;
  qword_261E8D0 = 8;
  qword_261E948 = 8;
  qword_261EA48 = (uint64_t)"RDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  unk_261EA50 = 8;
  dword_261EA58 = 830;
  qword_261EA60 = (uint64_t)"RDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  dword_261EA70 = 850;
  qword_261EA78 = (uint64_t)"SDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  dword_261E740 = 5;
  dword_261EA88 = 5;
  qword_261EA18 = (uint64_t)"CDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  dword_261E6C8 = 10;
  dword_261E998 = 10;
  qword_261EA20 = 10;
  qword_261EA38 = 10;
  qword_261EA90 = (uint64_t)"SDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  unk_261EA98 = 10;
  dword_261EAA0 = 600;
  qword_261EAA8 = (uint64_t)"SDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  dword_261E890 = 4;
  dword_261EAB8 = 4;
  qword_261EAC0 = (uint64_t)"SDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  qword_261E7C0 = (uint64_t)"LAYER_ROUTING_V3_METADATALAYER_ROUTING_V3_TRAFFIC_INCIDENTSLAYER_ROUTING_V3_TRANSITLAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  unk_261E7C8 = 25;
  qword_261E888 = 25;
  qword_261EAC8 = 25;
  dword_261EAD0 = 601;
  qword_261EAD8 = (uint64_t)"SDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  dword_261E7B8 = 17;
  qword_261E898 = (uint64_t)"LAYER_VECTOR_TILE";
  unk_261E8A0 = 17;
  qword_261E9D8 = 17;
  qword_261EA80 = 17;
  qword_261EAE0 = 17;
  dword_261E878 = 6;
  dword_261EAE8 = 6;
  qword_261EAF0 = (uint64_t)"TDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  dword_261E860 = 11;
  dword_261E908 = 11;
  qword_261E928 = (uint64_t)"CDM_ISLANDSCDM_POISCDM_RAILWAYSCDM_ROADSCDM_ROADS_DEBUGCDM_TERRITORIESCDM_TIME_ZONESCDM_TRANSIT_DEBUGCDM_TRANSIT_DISPLAYCDM_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  unk_261E930 = 11;
  qword_261EA68 = 11;
  qword_261EAF8 = 11;
  dword_261EB00 = 500;
  qword_261EB08 = (uint64_t)"TDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  qword_261EB10 = 21;
  dword_261EB18 = 510;
  qword_261EB20 = (uint64_t)"VDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  qword_261E748 = (uint64_t)"LAYER_ROUTINGLAYER_ROUTING_V2LAYER_ROUTING_V2_TRAFFIC_INCIDENTSLAYER_ROUTING_V2_TRANSITLAYER_ROUTING_V3LAYER_ROUTING_V3_METADATALAYER_ROUTING_V3_TRAFFIC_INCIDENTSLAYER_ROUTING_V3_TRANSITLAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  unk_261E750 = 13;
  dword_261E770 = 13;
  qword_261E840 = 13;
  qword_261E8E8 = 13;
  qword_261EAB0 = 13;
  qword_261EB28 = 13;
  dword_261EB30 = 103;
  qword_261EB38 = (uint64_t)"VDM_DEBUGVDM_FEATURE_LOOKUP";
  dword_261EB48 = 100;
  qword_261EB50 = (uint64_t)"VDM_FEATURE_LOOKUP";
  dword_261E7D0 = 18;
  qword_261E850 = (uint64_t)"LAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  unk_261E858 = 18;
  qword_261E8B0 = (uint64_t)"CDM_ADDRESS_POINTSCDM_AOISCDM_BUILDINGSCDM_FEATURE_LOOKUPCDM_HSPCDM_ISLANDSCDM_POISCDM_RAILWA"
                           "YSCDM_ROADSCDM_ROADS_DEBUGCDM_TERRITORIESCDM_TIME_ZONESCDM_TRANSIT_DEBUGCDM_TRANSIT_DISPLAYCD"
                           "M_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_IN"
                           "DEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM"
                           "_DEBUGVDM_FEATURE_LOOKUP";
  *(void *)algn_261E8B8 = 18;
  qword_261E900 = 18;
  qword_261EB58 = 18;
  qword_261E6B8 = (uint64_t)"LAYER_BROWSE_AND_CATEGORY_SEARCHLAYER_FARPOINT_METADATALAYER_GEO_SEARCHLAYER_GEO_SEARCH_V2LAY"
                           "ER_POI_SEARCH_AND_PLACESLAYER_REVGEOLAYER_ROUTINGLAYER_ROUTING_V2LAYER_ROUTING_V2_TRAFFIC_INC"
                           "IDENTSLAYER_ROUTING_V2_TRANSITLAYER_ROUTING_V3LAYER_ROUTING_V3_METADATALAYER_ROUTING_V3_TRAFF"
                           "IC_INCIDENTSLAYER_ROUTING_V3_TRANSITLAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UN"
                           "KNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  qword_261E730 = (uint64_t)"LAYER_REVGEOLAYER_ROUTINGLAYER_ROUTING_V2LAYER_ROUTING_V2_TRAFFIC_INCIDENTSLAYER_ROUTING_V2_TRANSITLAYER_ROUTING_V3LAYER_ROUTING_V3_METADATALAYER_ROUTING_V3_TRAFFIC_INCIDENTSLAYER_ROUTING_V3_TRANSITLAYER_SEARCH_ML_MODELSLAYER_SEARCH_STATIC_CONTENTLAYER_UNKNOWNLAYER_VECTOR_ASSETLAYER_VECTOR_PARSEC_DATALAYER_VECTOR_PARSEC_INDEXLAYER_VECTOR_TILE";
  qword_261E738 = 12;
  dword_261E818 = 12;
  qword_261E960 = 12;
  dword_261EB60 = 12;
  qword_261E970 = (uint64_t)"CDM_ROADSCDM_ROADS_DEBUGCDM_TERRITORIESCDM_TIME_ZONESCDM_TRANSIT_DEBUGCDM_TRANSIT_DISPLAYCDM_TRANSIT_ROUTINGCDM_VENUESCDM_WATERSRDM_ROADRDM_TRANSITSDM_ADDRESS_INDEXSDM_CONFIGSDM_POI_INDEXSDM_TERRITORY_TYPE_CONFIGSDM_TRIGGER_INDEXTDM_TRAFFICTDM_TRANSIT_INCIDENTSVDM_COMPOSITEVDM_DEBUGVDM_FEATURE_LOOKUP";
  qword_261E978 = 9;
  qword_261EB40 = 9;
  dword_261E8A8 = 9;
  dword_261E848 = 0;
  return result;
}

uint64_t sub_164C24C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_164C304(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_164C328(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = &off_24CC010;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = a2;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = a2;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = a2;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = &qword_2550250;
  *(void *)(a1 + 232) = &qword_2550250;
  *(void *)(a1 + 240) = &qword_2550250;
  *(void *)(a1 + 248) = &qword_2550250;
  *(void *)(a1 + 256) = &qword_2550250;
  *(void *)(a1 + 264) = &qword_2550250;
  *(void *)(a1 + 272) = &qword_2550250;
  *(void *)(a1 + 280) = &qword_2550250;
  *(void *)(a1 + 288) = &qword_2550250;
  *(void *)(a1 + 296) = &qword_2550250;
  *(void *)(a1 + 304) = &qword_2550250;
  *(void *)(a1 + 312) = &qword_2550250;
  *(void *)(a1 + 320) = &qword_2550250;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  *(void *)(a1 + 488) = -1;
  return a1;
}

void sub_164C404(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_164C434(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_164C510((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_16649FC(a1 + 25);
  sub_124F76C(a1 + 22);
  sub_1889DE8(a1 + 19);
  sub_124FA0C(a1 + 16);
  sub_149EC7C(a1 + 13);
  sub_124FA8C(a1 + 10);
  sub_11DB1BC(a1 + 7);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_164C510(uint64_t a1)
{
  unint64_t v3 = *(uint64_t **)(a1 + 224);
  uint64_t v2 = (void ***)(a1 + 224);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 232) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 232));
  }
  if (*(uint64_t **)(a1 + 240) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 240));
  }
  uint64_t result = (void ***)(a1 + 248);
  if (*(uint64_t **)(a1 + 248) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if (*(uint64_t **)(a1 + 256) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 256));
  }
  if (*(uint64_t **)(a1 + 264) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 264));
  }
  if (*(uint64_t **)(a1 + 272) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 272));
  }
  if (*(uint64_t **)(a1 + 280) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 280));
  }
  if (*(uint64_t **)(a1 + 288) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 288));
  }
  if (*(uint64_t **)(a1 + 296) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 296));
  }
  if (*(uint64_t **)(a1 + 304) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 304));
  }
  if (*(uint64_t **)(a1 + 312) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 312));
  }
  if (*(uint64_t **)(a1 + 320) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 320));
  }
  if ((uint64_t (***)())a1 != &off_25422C8)
  {
    if (*(void *)(a1 + 328))
    {
      sub_15B9F30();
      operator delete();
    }
    if (*(void *)(a1 + 336))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 344);
    if (v5)
    {
      sub_1652EDC(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 352);
    if (v6)
    {
      sub_16630D4(v6);
      operator delete();
    }
    if (*(void *)(a1 + 360))
    {
      sub_1495E9C();
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 368);
    if (v7)
    {
      sub_1651230(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 376);
    if (v8)
    {
      sub_15B1678(v8);
      operator delete();
    }
    uint64_t v9 = *(void *)(a1 + 384);
    if (v9)
    {
      sub_1652EDC(v9);
      operator delete();
    }
    if (*(void *)(a1 + 392))
    {
      sub_1495E9C();
      operator delete();
    }
    if (*(void *)(a1 + 400))
    {
      sub_15BF110();
      operator delete();
    }
    std::string::size_type v10 = *(void **)(a1 + 408);
    if (v10)
    {
      sub_1663B0C(v10);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 416);
    if (result)
    {
      sub_12A0FF0();
      operator delete();
    }
  }
  return result;
}

void sub_164C7E4(void *a1)
{
  sub_164C434(a1);

  operator delete();
}

uint64_t sub_164C81C(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 64);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(a1 + 72) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_15BAAF0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 64) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 88);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 96) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_1651320(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 88) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 112);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 120) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_1497FB8(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 112) = 0;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 136);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 144) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_164CE1C(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 136) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 152);
  uint64_t v15 = *(unsigned int *)(a1 + 184);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 192) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_1663708(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 184) = 0;
  }
  uint64_t v18 = *(unsigned int *)(a1 + 208);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 216) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t result = sub_17EFBC0(v20);
      --v18;
    }
    while (v18);
    *(_DWORD *)(a1 + 208) = 0;
  }
  unsigned int v21 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v21)
  {
    if ((v21 & 1) == 0)
    {
      if ((v21 & 2) == 0) {
        goto LABEL_28;
      }
LABEL_39:
      unint64_t v23 = *(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v23 + 23) < 0)
      {
        **(unsigned char **)unint64_t v23 = 0;
        *(void *)(v23 + 8) = 0;
        if ((v21 & 4) != 0) {
          goto LABEL_43;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v23 = 0;
        *(unsigned char *)(v23 + 23) = 0;
        if ((v21 & 4) != 0) {
          goto LABEL_43;
        }
      }
LABEL_29:
      if ((v21 & 8) == 0) {
        goto LABEL_30;
      }
LABEL_47:
      unint64_t v25 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v25 + 23) < 0)
      {
        **(unsigned char **)unint64_t v25 = 0;
        *(void *)(v25 + 8) = 0;
        if ((v21 & 0x10) != 0) {
          goto LABEL_51;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v25 = 0;
        *(unsigned char *)(v25 + 23) = 0;
        if ((v21 & 0x10) != 0) {
          goto LABEL_51;
        }
      }
LABEL_31:
      if ((v21 & 0x20) == 0) {
        goto LABEL_32;
      }
LABEL_55:
      unint64_t v27 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v27 + 23) < 0)
      {
        **(unsigned char **)unint64_t v27 = 0;
        *(void *)(v27 + 8) = 0;
        if ((v21 & 0x40) != 0) {
          goto LABEL_59;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v27 = 0;
        *(unsigned char *)(v27 + 23) = 0;
        if ((v21 & 0x40) != 0) {
          goto LABEL_59;
        }
      }
LABEL_33:
      if ((v21 & 0x80) == 0) {
        goto LABEL_66;
      }
LABEL_63:
      unint64_t v29 = *(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v29 + 23) < 0)
      {
        **(unsigned char **)unint64_t v29 = 0;
        *(void *)(v29 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v29 = 0;
        *(unsigned char *)(v29 + 23) = 0;
      }
      goto LABEL_66;
    }
    unint64_t v22 = *(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v22 + 23) < 0)
    {
      **(unsigned char **)unint64_t v22 = 0;
      *(void *)(v22 + 8) = 0;
      if ((v21 & 2) != 0) {
        goto LABEL_39;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v22 = 0;
      *(unsigned char *)(v22 + 23) = 0;
      if ((v21 & 2) != 0) {
        goto LABEL_39;
      }
    }
LABEL_28:
    if ((v21 & 4) == 0) {
      goto LABEL_29;
    }
LABEL_43:
    unint64_t v24 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v24 + 23) < 0)
    {
      **(unsigned char **)unint64_t v24 = 0;
      *(void *)(v24 + 8) = 0;
      if ((v21 & 8) != 0) {
        goto LABEL_47;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v24 = 0;
      *(unsigned char *)(v24 + 23) = 0;
      if ((v21 & 8) != 0) {
        goto LABEL_47;
      }
    }
LABEL_30:
    if ((v21 & 0x10) == 0) {
      goto LABEL_31;
    }
LABEL_51:
    unint64_t v26 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v26 + 23) < 0)
    {
      **(unsigned char **)unint64_t v26 = 0;
      *(void *)(v26 + 8) = 0;
      if ((v21 & 0x20) != 0) {
        goto LABEL_55;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v26 = 0;
      *(unsigned char *)(v26 + 23) = 0;
      if ((v21 & 0x20) != 0) {
        goto LABEL_55;
      }
    }
LABEL_32:
    if ((v21 & 0x40) == 0) {
      goto LABEL_33;
    }
LABEL_59:
    unint64_t v28 = *(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v28 + 23) < 0)
    {
      **(unsigned char **)unint64_t v28 = 0;
      *(void *)(v28 + 8) = 0;
      if ((v21 & 0x80) == 0) {
        goto LABEL_66;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v28 = 0;
      *(unsigned char *)(v28 + 23) = 0;
      if ((v21 & 0x80) == 0) {
        goto LABEL_66;
      }
    }
    goto LABEL_63;
  }
LABEL_66:
  if ((v21 & 0xFF00) == 0) {
    goto LABEL_76;
  }
  if ((v21 & 0x100) != 0)
  {
    unint64_t v32 = *(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v32 + 23) < 0)
    {
      **(unsigned char **)unint64_t v32 = 0;
      *(void *)(v32 + 8) = 0;
      if ((v21 & 0x200) != 0) {
        goto LABEL_108;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v32 = 0;
      *(unsigned char *)(v32 + 23) = 0;
      if ((v21 & 0x200) != 0) {
        goto LABEL_108;
      }
    }
LABEL_69:
    if ((v21 & 0x400) == 0) {
      goto LABEL_70;
    }
LABEL_112:
    unint64_t v34 = *(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v34 + 23) < 0)
    {
      **(unsigned char **)unint64_t v34 = 0;
      *(void *)(v34 + 8) = 0;
      if ((v21 & 0x800) != 0) {
        goto LABEL_116;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v34 = 0;
      *(unsigned char *)(v34 + 23) = 0;
      if ((v21 & 0x800) != 0) {
        goto LABEL_116;
      }
    }
LABEL_71:
    if ((v21 & 0x1000) == 0) {
      goto LABEL_72;
    }
LABEL_120:
    unint64_t v36 = *(void *)(a1 + 320) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v36 + 23) < 0)
    {
      **(unsigned char **)unint64_t v36 = 0;
      *(void *)(v36 + 8) = 0;
      if ((v21 & 0x2000) != 0) {
        goto LABEL_124;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v36 = 0;
      *(unsigned char *)(v36 + 23) = 0;
      if ((v21 & 0x2000) != 0) {
        goto LABEL_124;
      }
    }
LABEL_73:
    if ((v21 & 0x4000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_125;
  }
  if ((v21 & 0x200) == 0) {
    goto LABEL_69;
  }
LABEL_108:
  unint64_t v33 = *(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v33 + 23) < 0)
  {
    **(unsigned char **)unint64_t v33 = 0;
    *(void *)(v33 + 8) = 0;
    if ((v21 & 0x400) != 0) {
      goto LABEL_112;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v33 = 0;
    *(unsigned char *)(v33 + 23) = 0;
    if ((v21 & 0x400) != 0) {
      goto LABEL_112;
    }
  }
LABEL_70:
  if ((v21 & 0x800) == 0) {
    goto LABEL_71;
  }
LABEL_116:
  unint64_t v35 = *(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v35 + 23) < 0)
  {
    **(unsigned char **)unint64_t v35 = 0;
    *(void *)(v35 + 8) = 0;
    if ((v21 & 0x1000) != 0) {
      goto LABEL_120;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v35 = 0;
    *(unsigned char *)(v35 + 23) = 0;
    if ((v21 & 0x1000) != 0) {
      goto LABEL_120;
    }
  }
LABEL_72:
  if ((v21 & 0x2000) == 0) {
    goto LABEL_73;
  }
LABEL_124:
  uint64_t result = sub_15B9F6C(*(void *)(a1 + 328));
  if ((v21 & 0x4000) == 0)
  {
LABEL_74:
    if ((v21 & 0x8000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_75;
  }
LABEL_125:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 336));
  if ((v21 & 0x8000) != 0) {
LABEL_75:
  }
    uint64_t result = sub_164CD2C(*(void *)(a1 + 344));
LABEL_76:
  if ((v21 & 0xFF0000) == 0) {
    goto LABEL_86;
  }
  if ((v21 & 0x10000) != 0)
  {
    uint64_t result = sub_164C24C(*(void *)(a1 + 352));
    if ((v21 & 0x20000) == 0)
    {
LABEL_79:
      if ((v21 & 0x40000) == 0) {
        goto LABEL_80;
      }
      goto LABEL_101;
    }
  }
  else if ((v21 & 0x20000) == 0)
  {
    goto LABEL_79;
  }
  uint64_t result = sub_1495118(*(void *)(a1 + 360));
  if ((v21 & 0x40000) == 0)
  {
LABEL_80:
    if ((v21 & 0x80000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_102;
  }
LABEL_101:
  uint64_t result = sub_164CE1C(*(void *)(a1 + 368));
  if ((v21 & 0x80000) == 0)
  {
LABEL_81:
    if ((v21 & 0x100000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_103;
  }
LABEL_102:
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 376));
  if ((v21 & 0x100000) == 0)
  {
LABEL_82:
    if ((v21 & 0x200000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_104;
  }
LABEL_103:
  uint64_t result = sub_164CD2C(*(void *)(a1 + 384));
  if ((v21 & 0x200000) == 0)
  {
LABEL_83:
    if ((v21 & 0x400000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_105;
  }
LABEL_104:
  uint64_t result = sub_1495118(*(void *)(a1 + 392));
  if ((v21 & 0x400000) == 0)
  {
LABEL_84:
    if ((v21 & 0x800000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_85;
  }
LABEL_105:
  uint64_t result = (uint64_t)sub_15BF14C(*(void *)(a1 + 400));
  if ((v21 & 0x800000) != 0) {
LABEL_85:
  }
    uint64_t result = sub_164C304(*(void *)(a1 + 408));
LABEL_86:
  if ((v21 & 0x1000000) != 0) {
    uint64_t result = sub_12A102C(*(void *)(a1 + 416));
  }
  if (v21 >> 25)
  {
    *(_DWORD *)(a1 + 456) = 0;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
  }
  if (*(unsigned char *)(a1 + 44))
  {
    *(void *)(a1 + 468) = 0;
    *(void *)(a1 + 460) = 0;
    *(void *)(a1 + 476) = 0;
    *(void *)(a1 + 484) = 0xFFFFFFFF00000000;
  }
  char v31 = *(unsigned char *)(a1 + 8);
  uint64_t v30 = a1 + 8;
  *(_DWORD *)(v30 + 484) = -1;
  *(void *)(v30 + 32) = 0;
  if (v31)
  {
    return sub_188B4AC((uint64_t *)v30);
  }
  return result;
}

uint64_t sub_164CD2C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1651320(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1497FB8(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_1663708(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if (v11) {
    uint64_t result = sub_1495118(*(void *)(v1 + 96));
  }
  if ((v11 & 6) != 0)
  {
    *(unsigned char *)(v1 + 112) = 0;
    *(void *)(v1 + 104) = 0;
  }
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_164CE1C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1651320(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_164CE7C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v152 = a2;
  char v5 = sub_11947B8((uint64_t)a3, &v152, a3[11].i32[1]);
  uint64_t result = v152;
  if ((v5 & 1) == 0)
  {
    uint64_t v151 = (uint64_t *)(a1 + 8);
    uint64_t v7 = (uint64_t **)(a1 + 152);
    while (1)
    {
      uint64_t v8 = result + 1;
      unsigned int v9 = *result;
      if (*result < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          uint64_t v8 = (char *)sub_188C180((uint64_t)result, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = result + 2;
        }
      }
      uint64_t v152 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x2000u;
          uint64_t v12 = *(void **)(a1 + 328);
          if (!v12)
          {
            char v13 = (void *)(*v151 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v151) {
              char v13 = (void *)*v13;
            }
            uint64_t v12 = sub_15C2014((uint64_t)v13);
            *(void *)(a1 + 328) = v12;
            uint64_t v8 = v152;
          }
          uint64_t result = sub_11EAA5C(a3, (uint64_t)v12, (unsigned __int8 *)v8);
          goto LABEL_230;
        case 2u:
          if (v9 != 17) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x2000000u;
          uint64_t v15 = *(void *)v8;
          uint64_t v14 = v8 + 8;
          *(void *)(a1 + 424) = v15;
          goto LABEL_277;
        case 3u:
          if (v9 != 24) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x4000000u;
          uint64_t v17 = v8 + 1;
          LODWORD(v16) = *v8;
          if ((v16 & 0x80) == 0) {
            goto LABEL_21;
          }
          int v18 = *v17;
          uint64_t v16 = v16 + (v18 << 7) - 128;
          if (v18 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v16);
            uint64_t v152 = result;
            *(_DWORD *)(a1 + 432) = v135;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v17 = v8 + 2;
LABEL_21:
            uint64_t v152 = v17;
            *(_DWORD *)(a1 + 432) = v16;
          }
          goto LABEL_231;
        case 4u:
          if (v9 != 34) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v19 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
          if (v19) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          unsigned int v21 = (void *)(a1 + 224);
          goto LABEL_229;
        case 5u:
          if (v9 != 42) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 2u;
          uint64_t v22 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
          if (v22) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          unsigned int v21 = (void *)(a1 + 232);
          goto LABEL_229;
        case 6u:
          if (v9 != 50) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 4u;
          uint64_t v23 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
          if (v23) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          unsigned int v21 = (void *)(a1 + 240);
          goto LABEL_229;
        case 7u:
          if (v9 != 58) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 8u;
          uint64_t v24 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
          if (v24) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          unsigned int v21 = (void *)(a1 + 248);
          goto LABEL_229;
        case 8u:
          if (v9 != 66) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x10u;
          uint64_t v25 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
          if (v25) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          unsigned int v21 = (void *)(a1 + 256);
          goto LABEL_229;
        case 9u:
          if (v9 != 74) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x20u;
          uint64_t v26 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
          if (v26) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          unsigned int v21 = (void *)(a1 + 264);
          goto LABEL_229;
        case 0xAu:
          if (v9 != 82) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x40u;
          uint64_t v27 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
          if (v27) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          unsigned int v21 = (void *)(a1 + 272);
          goto LABEL_229;
        case 0xBu:
          if (v9 != 90) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x80u;
          uint64_t v28 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
          if (v28) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          unsigned int v21 = (void *)(a1 + 280);
          goto LABEL_229;
        case 0xCu:
          if (v9 != 98) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x100u;
          uint64_t v29 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
          if (v29) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          unsigned int v21 = (void *)(a1 + 288);
          goto LABEL_229;
        case 0x10u:
          if (v9 != 130) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x4000u;
          uint64_t v30 = *(void *)(a1 + 336);
          if (!v30)
          {
            char v31 = (void *)(*v151 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v151) {
              char v31 = (void *)*v31;
            }
            uint64_t v30 = sub_15C1918((uint64_t)v31);
            *(void *)(a1 + 336) = v30;
            uint64_t v8 = v152;
          }
          uint64_t result = sub_1198F14(a3, v30, (unsigned __int8 *)v8);
          goto LABEL_230;
        case 0x14u:
          if (v9 != 162) {
            goto LABEL_288;
          }
          uint64_t result = v8 - 2;
          while (1)
          {
            unint64_t v32 = (unsigned __int8 *)(result + 2);
            uint64_t v152 = result + 2;
            unint64_t v33 = *(_DWORD **)(a1 + 72);
            if (v33 && (uint64_t v34 = *(int *)(a1 + 64), (int)v34 < *v33))
            {
              *(_DWORD *)(a1 + 64) = v34 + 1;
              uint64_t v35 = *(void *)&v33[2 * v34 + 2];
            }
            else
            {
              uint64_t v36 = sub_15C2114(*(void *)(a1 + 56));
              uint64_t v35 = sub_188CDC8(a1 + 56, v36);
              unint64_t v32 = (unsigned __int8 *)v152;
            }
            uint64_t result = (char *)sub_11A058C(a3, v35, v32);
            uint64_t v152 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 418) {
              goto LABEL_231;
            }
          }
        case 0x18u:
          if (v9 != 192) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x8000000u;
          unint64_t v37 = v8 + 1;
          int v38 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_78;
          }
          int v39 = *v37;
          int v38 = v38 + (v39 << 7) - 128;
          if (v39 < 0)
          {
            uint64_t result = (char *)sub_188C0D0((uint64_t)v8, v38);
            uint64_t v152 = result;
            *(_DWORD *)(a1 + 436) = v136;
            if (!result) {
              return result;
            }
          }
          else
          {
            unint64_t v37 = v8 + 2;
LABEL_78:
            uint64_t v152 = v37;
            *(_DWORD *)(a1 + 436) = v38;
          }
          goto LABEL_231;
        case 0x19u:
          if (v9 != 200) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x10000000u;
          uint64_t v40 = v8 + 1;
          uint64_t v41 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_83;
          }
          int v42 = *v40;
          uint64_t v41 = v41 + (v42 << 7) - 128;
          if (v42 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v41);
            uint64_t v152 = result;
            *(void *)(a1 + 440) = v137;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v40 = v8 + 2;
LABEL_83:
            uint64_t v152 = v40;
            *(void *)(a1 + 440) = v41;
          }
          goto LABEL_231;
        case 0x32u:
          if (v9 != 144) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 44) |= 2u;
          uint64_t v43 = v8 + 1;
          uint64_t v44 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_88;
          }
          int v45 = *v43;
          uint64_t v44 = v44 + (v45 << 7) - 128;
          if (v45 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v44);
            uint64_t v152 = result;
            *(unsigned char *)(a1 + 464) = v138 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            uint64_t v43 = v8 + 2;
LABEL_88:
            uint64_t v152 = v43;
            *(unsigned char *)(a1 + 464) = v44 != 0;
          }
          goto LABEL_231;
        case 0x33u:
          if (v9 != 154) {
            goto LABEL_288;
          }
          uint64_t result = v8 - 2;
          while (1)
          {
            uint64_t v46 = (unsigned __int8 *)(result + 2);
            uint64_t v152 = result + 2;
            int v47 = *(_DWORD **)(a1 + 96);
            if (v47 && (uint64_t v48 = *(int *)(a1 + 88), (int)v48 < *v47))
            {
              *(_DWORD *)(a1 + 88) = v48 + 1;
              uint64_t v49 = *(void *)&v47[2 * v48 + 2];
            }
            else
            {
              sub_1653A3C(*(void *)(a1 + 80));
              uint64_t v49 = sub_188CDC8(a1 + 80, v50);
              uint64_t v46 = (unsigned __int8 *)v152;
            }
            uint64_t result = (char *)sub_124C5EC(a3, v49, v46);
            uint64_t v152 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 922) {
              goto LABEL_231;
            }
          }
        case 0x34u:
          if (v9 != 160) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 44) |= 0x80u;
          unsigned int v52 = v8 + 1;
          LODWORD(v51) = *v8;
          if ((v51 & 0x80) == 0) {
            goto LABEL_103;
          }
          int v53 = *v52;
          uint64_t v51 = v51 + (v53 << 7) - 128;
          if (v53 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v51);
            uint64_t v152 = result;
            *(_DWORD *)(a1 + 488) = v139;
            if (!result) {
              return result;
            }
          }
          else
          {
            unsigned int v52 = v8 + 2;
LABEL_103:
            uint64_t v152 = v52;
            *(_DWORD *)(a1 + 488) = v51;
          }
          goto LABEL_231;
        case 0x36u:
          if (v9 != 176) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x40000000u;
          unsigned int v55 = v8 + 1;
          LODWORD(v54) = *v8;
          if ((v54 & 0x80) == 0) {
            goto LABEL_108;
          }
          int v56 = *v55;
          uint64_t v54 = v54 + (v56 << 7) - 128;
          if (v56 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v54);
            uint64_t v152 = result;
            *(_DWORD *)(a1 + 452) = v140;
            if (!result) {
              return result;
            }
          }
          else
          {
            unsigned int v55 = v8 + 2;
LABEL_108:
            uint64_t v152 = v55;
            *(_DWORD *)(a1 + 452) = v54;
          }
          goto LABEL_231;
        case 0x37u:
          if (v9 != 184) {
            goto LABEL_288;
          }
          int v57 = v8 + 1;
          unint64_t v58 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_113;
          }
          int v59 = *v57;
          int v60 = v58 + (v59 << 7);
          unint64_t v58 = (v60 - 128);
          if (v59 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, (v60 - 128));
            uint64_t v152 = result;
            if (!result) {
              return result;
            }
            unint64_t v58 = v141;
          }
          else
          {
            int v57 = v8 + 2;
LABEL_113:
            uint64_t v152 = v57;
          }
          if (v58 <= 3)
          {
            *(_DWORD *)(a1 + 40) |= 0x80000000;
            *(_DWORD *)(a1 + 456) = v58;
            goto LABEL_231;
          }
          if (*v151) {
            uint64_t v149 = (std::string *)((*v151 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v149 = (std::string *)sub_188DBD8(v151);
          }
          int v150 = 55;
          goto LABEL_331;
        case 0x3Cu:
          if (v9 != 226) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x200u;
          uint64_t v61 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v61 & 0xFFFFFFFFFFFFFFFCLL);
          if (v61) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          unsigned int v21 = (void *)(a1 + 296);
          goto LABEL_229;
        case 0x3Du:
          if (v9 != 232) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 44) |= 1u;
          unint64_t v62 = v8 + 1;
          int v63 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_124;
          }
          int v64 = *v62;
          int v63 = v63 + (v64 << 7) - 128;
          if (v64 < 0)
          {
            uint64_t result = (char *)sub_188C0D0((uint64_t)v8, v63);
            uint64_t v152 = result;
            *(_DWORD *)(a1 + 460) = v142;
            if (!result) {
              return result;
            }
          }
          else
          {
            unint64_t v62 = v8 + 2;
LABEL_124:
            uint64_t v152 = v62;
            *(_DWORD *)(a1 + 460) = v63;
          }
          goto LABEL_231;
        case 0x3Fu:
          if (v9 != 250) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x8000u;
          uint64_t v65 = *(void *)(a1 + 344);
          if (v65) {
            goto LABEL_239;
          }
          unint64_t v66 = (void *)(*v151 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v151) {
            unint64_t v66 = (void *)*v66;
          }
          uint64_t v65 = sub_1653ACC((uint64_t)v66);
          *(void *)(a1 + 344) = v65;
          goto LABEL_238;
        case 0x40u:
          if (v9 != 2) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x10000u;
          unint64_t v67 = *(void **)(a1 + 352);
          if (!v67)
          {
            unint64_t v68 = (void *)(*v151 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v151) {
              unint64_t v68 = (void *)*v68;
            }
            unint64_t v67 = sub_166401C((uint64_t)v68);
            *(void *)(a1 + 352) = v67;
            uint64_t v8 = v152;
          }
          uint64_t result = (char *)sub_164E380(a3, (uint64_t)v67, (unsigned __int8 *)v8);
          goto LABEL_230;
        case 0x41u:
          if (v9 != 10) {
            goto LABEL_288;
          }
          uint64_t result = v8 - 2;
          while (1)
          {
            char v69 = (unsigned __int8 *)(result + 2);
            uint64_t v152 = result + 2;
            char v70 = *(_DWORD **)(a1 + 120);
            if (v70 && (uint64_t v71 = *(int *)(a1 + 112), (int)v71 < *v70))
            {
              *(_DWORD *)(a1 + 112) = v71 + 1;
              uint64_t v72 = *(void *)&v70[2 * v71 + 2];
            }
            else
            {
              uint64_t v73 = sub_14984AC(*(void *)(a1 + 104));
              uint64_t v72 = sub_188CDC8(a1 + 104, v73);
              char v69 = (unsigned __int8 *)v152;
            }
            uint64_t result = (char *)sub_14977C8(a3, v72, v69);
            uint64_t v152 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1162) {
              goto LABEL_231;
            }
          }
        case 0x42u:
          if (v9 != 18) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x20000u;
          uint64_t v74 = *(void *)(a1 + 360);
          if (v74) {
            goto LABEL_246;
          }
          char v75 = (void *)(*v151 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v151) {
            char v75 = (void *)*v75;
          }
          uint64_t v74 = sub_1497018((uint64_t)v75);
          *(void *)(a1 + 360) = v74;
          goto LABEL_245;
        case 0x43u:
          if (v9 != 24) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 44) |= 0x100u;
          char v77 = v8 + 1;
          LODWORD(v76) = *v8;
          if ((v76 & 0x80) == 0) {
            goto LABEL_155;
          }
          int v78 = *v77;
          uint64_t v76 = v76 + (v78 << 7) - 128;
          if (v78 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v76);
            uint64_t v152 = result;
            *(_DWORD *)(a1 + 492) = v143;
            if (!result) {
              return result;
            }
          }
          else
          {
            char v77 = v8 + 2;
LABEL_155:
            uint64_t v152 = v77;
            *(_DWORD *)(a1 + 492) = v76;
          }
          goto LABEL_231;
        case 0x44u:
          if (v9 != 32) {
            goto LABEL_288;
          }
          char v79 = v8 + 1;
          unint64_t v58 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_160;
          }
          int v80 = *v79;
          int v81 = v58 + (v80 << 7);
          unint64_t v58 = (v81 - 128);
          if (v80 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, (v81 - 128));
            uint64_t v152 = result;
            if (!result) {
              return result;
            }
            unint64_t v58 = v144;
          }
          else
          {
            char v79 = v8 + 2;
LABEL_160:
            uint64_t v152 = v79;
          }
          if (sub_125D180(v58))
          {
            *(_DWORD *)(a1 + 44) |= 0x10u;
            *(_DWORD *)(a1 + 468) = v58;
          }
          else
          {
            if (*v151) {
              uint64_t v149 = (std::string *)((*v151 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v149 = (std::string *)sub_188DBD8(v151);
            }
            int v150 = 68;
LABEL_331:
            sub_188C020(v150, v58, v149);
          }
          goto LABEL_231;
        case 0x45u:
          if (v9 != 42) {
            goto LABEL_288;
          }
          uint64_t result = v8 - 2;
          while (1)
          {
            uint64_t v82 = (unsigned __int8 *)(result + 2);
            uint64_t v152 = result + 2;
            int v83 = *(_DWORD **)(a1 + 144);
            if (v83 && (uint64_t v84 = *(int *)(a1 + 136), (int)v84 < *v83))
            {
              *(_DWORD *)(a1 + 136) = v84 + 1;
              uint64_t v85 = *(void *)&v83[2 * v84 + 2];
            }
            else
            {
              uint64_t v86 = sub_16539C0(*(void *)(a1 + 128));
              uint64_t v85 = sub_188CDC8(a1 + 128, v86);
              uint64_t v82 = (unsigned __int8 *)v152;
            }
            uint64_t result = sub_124C55C(a3, v85, v82);
            uint64_t v152 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1194) {
              goto LABEL_231;
            }
          }
        case 0x46u:
          if (v9 != 50) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x40000u;
          uint64_t v87 = *(void *)(a1 + 368);
          if (!v87)
          {
            unsigned int v88 = (void *)(*v151 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v151) {
              unsigned int v88 = (void *)*v88;
            }
            uint64_t v87 = sub_16539C0((uint64_t)v88);
            *(void *)(a1 + 368) = v87;
            uint64_t v8 = v152;
          }
          uint64_t result = sub_124C55C(a3, v87, (unsigned __int8 *)v8);
          goto LABEL_230;
        case 0x47u:
          if (v9 != 58) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x400u;
          uint64_t v89 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v89 & 0xFFFFFFFFFFFFFFFCLL);
          if (v89) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          unsigned int v21 = (void *)(a1 + 304);
          goto LABEL_229;
        case 0x48u:
          if (v9 != 64) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 44) |= 4u;
          unsigned int v90 = v8 + 1;
          uint64_t v91 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_187;
          }
          int v92 = *v90;
          uint64_t v91 = v91 + (v92 << 7) - 128;
          if (v92 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v91);
            uint64_t v152 = result;
            *(unsigned char *)(a1 + 465) = v145 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            unsigned int v90 = v8 + 2;
LABEL_187:
            uint64_t v152 = v90;
            *(unsigned char *)(a1 + 465) = v91 != 0;
          }
          goto LABEL_231;
        case 0x49u:
          if (v9 != 72) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 44) |= 8u;
          int v93 = v8 + 1;
          uint64_t v94 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_192;
          }
          int v95 = *v93;
          uint64_t v94 = v94 + (v95 << 7) - 128;
          if (v95 < 0)
          {
            uint64_t result = (char *)sub_188C138((uint64_t)v8, v94);
            uint64_t v152 = result;
            *(unsigned char *)(a1 + 466) = v146 != 0;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v93 = v8 + 2;
LABEL_192:
            uint64_t v152 = v93;
            *(unsigned char *)(a1 + 466) = v94 != 0;
          }
          goto LABEL_231;
        case 0x4Au:
          if (v9 != 80) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 44) |= 0x20u;
          unint64_t v96 = v8 + 1;
          int v97 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_197;
          }
          int v98 = *v96;
          int v97 = v97 + (v98 << 7) - 128;
          if (v98 < 0)
          {
            uint64_t result = (char *)sub_188C0D0((uint64_t)v8, v97);
            uint64_t v152 = result;
            *(_DWORD *)(a1 + 472) = v147;
            if (!result) {
              return result;
            }
          }
          else
          {
            unint64_t v96 = v8 + 2;
LABEL_197:
            uint64_t v152 = v96;
            *(_DWORD *)(a1 + 472) = v97;
          }
          goto LABEL_231;
        case 0x4Bu:
          if (v9 != 90) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x800u;
          uint64_t v99 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v99 & 0xFFFFFFFFFFFFFFFCLL);
          if (v99) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          unsigned int v21 = (void *)(a1 + 312);
          goto LABEL_229;
        case 0x4Cu:
          if (v9 != 98) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x80000u;
          uint64_t v100 = *(void *)(a1 + 376);
          if (!v100)
          {
            int v101 = (void *)(*v151 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v151) {
              int v101 = (void *)*v101;
            }
            uint64_t v100 = sub_15C19EC((uint64_t)v101);
            *(void *)(a1 + 376) = v100;
            uint64_t v8 = v152;
          }
          uint64_t result = sub_11E1C60(a3, v100, (unsigned __int8 *)v8);
          goto LABEL_230;
        case 0x4Du:
          if (v9 != 104) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x20000000u;
          int v102 = v8 + 1;
          int v103 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_212;
          }
          int v104 = *v102;
          int v103 = v103 + (v104 << 7) - 128;
          if (v104 < 0)
          {
            uint64_t result = (char *)sub_188C0D0((uint64_t)v8, v103);
            uint64_t v152 = result;
            *(_DWORD *)(a1 + 448) = v148;
            if (!result) {
              return result;
            }
          }
          else
          {
            int v102 = v8 + 2;
LABEL_212:
            uint64_t v152 = v102;
            *(_DWORD *)(a1 + 448) = v103;
          }
          goto LABEL_231;
        case 0x4Eu:
          if (v9 != 114) {
            goto LABEL_288;
          }
          uint64_t result = v8 - 2;
          while (1)
          {
            uint64_t v105 = result + 2;
            uint64_t v152 = result + 2;
            int v106 = *(_DWORD **)(a1 + 168);
            if (v106 && (uint64_t v107 = *(int *)(a1 + 160), (int)v107 < *v106))
            {
              *(_DWORD *)(a1 + 160) = v107 + 1;
              uint64_t v108 = *(std::string **)&v106[2 * v107 + 2];
            }
            else
            {
              if (!*v7) {
                operator new();
              }
              *uint64_t v110 = v109;
              v110[1] = sub_3A6EDC;
              void *v109 = 0;
              v109[1] = 0;
              v109[2] = 0;
              uint64_t v108 = (std::string *)sub_188CDC8(a1 + 152, (uint64_t)v109);
              uint64_t v105 = v152;
            }
            uint64_t result = (char *)sub_188C244(v108, v105, (uint64_t)a3);
            uint64_t v152 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1266) {
              goto LABEL_231;
            }
          }
        case 0x4Fu:
          if (v9 != 122) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x1000u;
          uint64_t v111 = *(void *)(a1 + 8);
          uint64_t v20 = (uint64_t *)(v111 & 0xFFFFFFFFFFFFFFFCLL);
          if (v111) {
            uint64_t v20 = (uint64_t *)*v20;
          }
          unsigned int v21 = (void *)(a1 + 320);
LABEL_229:
          int v112 = (std::string *)sub_1880F84(v21, v20);
          uint64_t result = (char *)sub_188C244(v112, v152, (uint64_t)a3);
          goto LABEL_230;
        case 0x50u:
          if (v9 != 130) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x100000u;
          uint64_t v65 = *(void *)(a1 + 384);
          if (v65) {
            goto LABEL_239;
          }
          uint64_t v114 = (void *)(*v151 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v151) {
            uint64_t v114 = (void *)*v114;
          }
          uint64_t v65 = sub_1653ACC((uint64_t)v114);
          *(void *)(a1 + 384) = v65;
LABEL_238:
          uint64_t v8 = v152;
LABEL_239:
          uint64_t result = sub_164E2F0(a3, v65, (unsigned __int8 *)v8);
          goto LABEL_230;
        case 0x51u:
          if (v9 != 138) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x200000u;
          uint64_t v74 = *(void *)(a1 + 392);
          if (v74) {
            goto LABEL_246;
          }
          int v115 = (void *)(*v151 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v151) {
            int v115 = (void *)*v115;
          }
          uint64_t v74 = sub_1497018((uint64_t)v115);
          *(void *)(a1 + 392) = v74;
LABEL_245:
          uint64_t v8 = v152;
LABEL_246:
          uint64_t result = (char *)sub_11920F8(a3, v74, (unsigned __int8 *)v8);
          goto LABEL_230;
        case 0x52u:
          if (v9 != 146) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x400000u;
          uint64_t v116 = *(void **)(a1 + 400);
          if (!v116)
          {
            uint64_t v117 = (void *)(*v151 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v151) {
              uint64_t v117 = (void *)*v117;
            }
            uint64_t v116 = sub_15C24B4((uint64_t)v117);
            *(void *)(a1 + 400) = v116;
            uint64_t v8 = v152;
          }
          uint64_t result = (char *)sub_145C8FC(a3, (uint64_t)v116, (unsigned __int8 *)v8);
          goto LABEL_230;
        case 0x53u:
          if (v9 != 154) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x800000u;
          int v118 = *(void **)(a1 + 408);
          if (!v118)
          {
            uint64_t v119 = (void *)(*v151 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v151) {
              uint64_t v119 = (void *)*v119;
            }
            int v118 = sub_1664128((uint64_t)v119);
            *(void *)(a1 + 408) = v118;
            uint64_t v8 = v152;
          }
          uint64_t result = sub_164E410(a3, (uint64_t)v118, (unsigned __int8 *)v8);
          goto LABEL_230;
        case 0x54u:
          if (v9 != 162) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 40) |= 0x1000000u;
          uint64_t v120 = *(void *)(a1 + 416);
          if (!v120)
          {
            int v121 = (void *)(*v151 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v151) {
              int v121 = (void *)*v121;
            }
            uint64_t v120 = sub_12BBB40((uint64_t)v121);
            *(void *)(a1 + 416) = v120;
            uint64_t v8 = v152;
          }
          uint64_t result = (char *)sub_120AA94(a3, v120, (unsigned __int8 *)v8);
          goto LABEL_230;
        case 0x55u:
          if (v9 != 170) {
            goto LABEL_288;
          }
          uint64_t result = v8 - 2;
          while (1)
          {
            uint64_t v122 = (unsigned __int8 *)(result + 2);
            uint64_t v152 = result + 2;
            uint64_t v123 = *(_DWORD **)(a1 + 192);
            if (v123 && (uint64_t v124 = *(int *)(a1 + 184), (int)v124 < *v123))
            {
              *(_DWORD *)(a1 + 184) = v124 + 1;
              uint64_t v125 = *(void *)&v123[2 * v124 + 2];
            }
            else
            {
              uint64_t v126 = sub_16640A4(*(void *)(a1 + 176));
              uint64_t v125 = sub_188CDC8(a1 + 176, (uint64_t)v126);
              uint64_t v122 = (unsigned __int8 *)v152;
            }
            uint64_t result = (char *)sub_124C4CC(a3, v125, v122);
            uint64_t v152 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1450) {
              goto LABEL_231;
            }
          }
        case 0x56u:
          if (v9 != 177) {
            goto LABEL_288;
          }
          *(_DWORD *)(a1 + 44) |= 0x40u;
          uint64_t v127 = *(void *)v8;
          uint64_t v14 = v8 + 8;
          *(void *)(a1 + 480) = v127;
LABEL_277:
          uint64_t v152 = v14;
          goto LABEL_231;
        case 0x57u:
          if (v9 != 186) {
            goto LABEL_288;
          }
          uint64_t result = v8 - 2;
          while (1)
          {
            uint64_t v128 = (unsigned __int8 *)(result + 2);
            uint64_t v152 = result + 2;
            uint64_t v129 = *(_DWORD **)(a1 + 216);
            if (v129 && (uint64_t v130 = *(int *)(a1 + 208), (int)v130 < *v129))
            {
              *(_DWORD *)(a1 + 208) = v130 + 1;
              uint64_t v131 = *(void *)&v129[2 * v130 + 2];
            }
            else
            {
              uint64_t v132 = sub_183492C(*(void *)(a1 + 200));
              uint64_t v131 = sub_188CDC8(a1 + 200, v132);
              uint64_t v128 = (unsigned __int8 *)v152;
            }
            uint64_t result = sub_164E4A0(a3, v131, v128);
            uint64_t v152 = result;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1466) {
              goto LABEL_231;
            }
          }
        default:
LABEL_288:
          if (v9) {
            BOOL v133 = (v9 & 7) == 4;
          }
          else {
            BOOL v133 = 1;
          }
          if (v133)
          {
            if (!v8) {
              return 0;
            }
            a3[10].i32[0] = v9 - 1;
            return v8;
          }
          if (v9 - 80000 > 0x31F)
          {
            if (*v151)
            {
              uint64_t v134 = (std::string *)((*v151 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v134 = (std::string *)sub_188DBD8(v151);
              uint64_t v8 = v152;
            }
            uint64_t result = (char *)sub_1885AC0(v9, v134, v8, a3);
          }
          else
          {
            uint64_t result = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25422C8, v151, a3);
          }
LABEL_230:
          uint64_t v152 = result;
          if (!result) {
            return result;
          }
LABEL_231:
          int v113 = sub_11947B8((uint64_t)a3, &v152, a3[11].i32[1]);
          uint64_t result = v152;
          if (v113) {
            return result;
          }
          break;
      }
    }
  }
  return result;
}

char *sub_164E2F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1652FF0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_164E380(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16631D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_164E410(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1663BB8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_164E4A0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17EFBE8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_164E530(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 328);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15BA180(v7, (unint64_t)v9, a3);
    if ((v6 & 0x2000000) == 0)
    {
LABEL_3:
      if ((v6 & 0x4000000) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 0x2000000) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 424);
  char *v4 = 17;
  *(void *)(v4 + 1) = v10;
  v4 += 9;
  if ((v6 & 0x4000000) != 0)
  {
LABEL_14:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 432);
    char *v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_20:
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_22:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_33;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_22;
  }
  uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_23:
    if ((v6 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_24:
    if ((v6 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_25:
    if ((v6 & 0x20) == 0) {
      goto LABEL_26;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_26:
    if ((v6 & 0x40) == 0) {
      goto LABEL_27;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_27:
    if ((v6 & 0x80) == 0) {
      goto LABEL_28;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_28:
    if ((v6 & 0x100) == 0) {
      goto LABEL_29;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0)
  {
LABEL_29:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x4000) == 0) {
    goto LABEL_46;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 336);
  *(_WORD *)uint64_t v4 = 386;
  unsigned int v15 = *(_DWORD *)(v14 + 44);
  v4[2] = v15;
  if (v15 > 0x7F) {
    uint64_t v16 = sub_188A9CC(v15, v4 + 2);
  }
  else {
    uint64_t v16 = v4 + 3;
  }
  uint64_t v4 = sub_15B0C0C(v14, v16, a3);
LABEL_46:
  int v17 = *(_DWORD *)(a1 + 64);
  if (v17)
  {
    for (int i = 0; i != v17; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 72) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 418;
      unsigned int v20 = *(_DWORD *)(v19 + 20);
      v4[2] = v20;
      if (v20 > 0x7F) {
        unsigned int v21 = sub_188A9CC(v20, v4 + 2);
      }
      else {
        unsigned int v21 = v4 + 3;
      }
      uint64_t v4 = sub_15BAD4C(v19, (unint64_t)v21, a3);
    }
  }
  if ((v6 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 436);
    *(_WORD *)uint64_t v4 = 448;
    v4[2] = v22;
    if (v22 > 0x7F)
    {
      v4[2] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[3] = v22 >> 7;
      v4 += 4;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x10000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(void *)(a1 + 440);
    *(_WORD *)uint64_t v4 = 456;
    v4[2] = v25;
    if (v25 > 0x7F)
    {
      v4[2] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[3] = v25 >> 7;
      v4 += 4;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v28 = *(_DWORD *)(a1 + 44);
  if ((v28 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v29 = *(unsigned char *)(a1 + 464);
    *(_WORD *)uint64_t v4 = 912;
    v4[2] = v29;
    v4 += 3;
  }
  int v30 = *(_DWORD *)(a1 + 88);
  if (v30)
  {
    for (int j = 0; j != v30; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 96) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 922;
      unsigned int v33 = *(_DWORD *)(v32 + 20);
      v4[2] = v33;
      if (v33 > 0x7F) {
        uint64_t v34 = sub_188A9CC(v33, v4 + 2);
      }
      else {
        uint64_t v34 = v4 + 3;
      }
      uint64_t v4 = sub_16525CC(v32, v34, a3);
    }
  }
  if ((v28 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v35 = *(int *)(a1 + 488);
    *(_WORD *)uint64_t v4 = 928;
    v4[2] = v35;
    if (v35 > 0x7F)
    {
      v4[2] = v35 | 0x80;
      unint64_t v36 = v35 >> 7;
      v4[3] = v35 >> 7;
      v4 += 4;
      if (v35 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v37 = v36 >> 14;
          v36 >>= 7;
          *v4++ = v36;
        }
        while (v37);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v38 = *(_DWORD *)(a1 + 40);
  if ((v38 & 0x40000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v39 = *(int *)(a1 + 452);
    *(_WORD *)uint64_t v4 = 944;
    v4[2] = v39;
    if (v39 > 0x7F)
    {
      v4[2] = v39 | 0x80;
      unint64_t v40 = v39 >> 7;
      v4[3] = v39 >> 7;
      v4 += 4;
      if (v39 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v41 = v40 >> 14;
          v40 >>= 7;
          *v4++ = v40;
        }
        while (v41);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if (v38 < 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v42 = *(int *)(a1 + 456);
    *(_WORD *)uint64_t v4 = 952;
    v4[2] = v42;
    if (v42 > 0x7F)
    {
      v4[2] = v42 | 0x80;
      unint64_t v43 = v42 >> 7;
      v4[3] = v42 >> 7;
      v4 += 4;
      if (v42 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v44 = v43 >> 14;
          v43 >>= 7;
          *v4++ = v43;
        }
        while (v44);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v38 & 0x200) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 60, (const void **)(*(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(unsigned char *)(a1 + 44))
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v45 = *(_DWORD *)(a1 + 460);
    *(_WORD *)uint64_t v4 = 1000;
    v4[2] = v45;
    if (v45 > 0x7F)
    {
      v4[2] = v45 | 0x80;
      unsigned int v46 = v45 >> 7;
      v4[3] = v45 >> 7;
      v4 += 4;
      if (v45 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v47 = v46 >> 14;
          v46 >>= 7;
          *v4++ = v46;
        }
        while (v47);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v48 = *(_DWORD *)(a1 + 40);
  if ((v48 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v49 = *(void *)(a1 + 344);
    *(_WORD *)uint64_t v4 = 1018;
    unsigned int v50 = *(_DWORD *)(v49 + 20);
    v4[2] = v50;
    if (v50 > 0x7F) {
      uint64_t v51 = sub_188A9CC(v50, v4 + 2);
    }
    else {
      uint64_t v51 = v4 + 3;
    }
    uint64_t v4 = sub_1653430(v49, (unint64_t)v51, a3);
  }
  if ((v48 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v52 = *(void *)(a1 + 352);
    *(_WORD *)uint64_t v4 = 1154;
    unsigned int v53 = *(_DWORD *)(v52 + 20);
    v4[2] = v53;
    if (v53 > 0x7F) {
      uint64_t v54 = sub_188A9CC(v53, v4 + 2);
    }
    else {
      uint64_t v54 = v4 + 3;
    }
    uint64_t v4 = sub_16633C8(v52, v54, a3);
  }
  int v55 = *(_DWORD *)(a1 + 112);
  if (v55)
  {
    for (int k = 0; k != v55; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v57 = *(void *)(*(void *)(a1 + 120) + 8 * k + 8);
      *(_WORD *)uint64_t v4 = 1162;
      unsigned int v58 = *(_DWORD *)(v57 + 20);
      v4[2] = v58;
      if (v58 > 0x7F) {
        int v59 = sub_188A9CC(v58, v4 + 2);
      }
      else {
        int v59 = v4 + 3;
      }
      uint64_t v4 = sub_14981DC(v57, (unint64_t)v59, a3);
    }
  }
  if ((v48 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v60 = *(void *)(a1 + 360);
    *(_WORD *)uint64_t v4 = 1170;
    unsigned int v61 = *(_DWORD *)(v60 + 20);
    v4[2] = v61;
    if (v61 > 0x7F) {
      unint64_t v62 = sub_188A9CC(v61, v4 + 2);
    }
    else {
      unint64_t v62 = v4 + 3;
    }
    uint64_t v4 = sub_1496514(v60, v62, a3);
  }
  int v63 = *(_DWORD *)(a1 + 44);
  if ((v63 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v64 = *(int *)(a1 + 492);
    *(_WORD *)uint64_t v4 = 1176;
    v4[2] = v64;
    if (v64 > 0x7F)
    {
      v4[2] = v64 | 0x80;
      unint64_t v65 = v64 >> 7;
      v4[3] = v64 >> 7;
      v4 += 4;
      if (v64 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v66 = v65 >> 14;
          v65 >>= 7;
          *v4++ = v65;
        }
        while (v66);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v63 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v67 = *(int *)(a1 + 468);
    *(_WORD *)uint64_t v4 = 1184;
    v4[2] = v67;
    if (v67 > 0x7F)
    {
      v4[2] = v67 | 0x80;
      unint64_t v68 = v67 >> 7;
      v4[3] = v67 >> 7;
      v4 += 4;
      if (v67 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v69 = v68 >> 14;
          v68 >>= 7;
          *v4++ = v68;
        }
        while (v69);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v70 = *(_DWORD *)(a1 + 136);
  if (v70)
  {
    for (int m = 0; m != v70; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v72 = *(void *)(*(void *)(a1 + 144) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 1194;
      unsigned int v73 = *(_DWORD *)(v72 + 20);
      v4[2] = v73;
      if (v73 > 0x7F) {
        uint64_t v74 = sub_188A9CC(v73, v4 + 2);
      }
      else {
        uint64_t v74 = v4 + 3;
      }
      uint64_t v4 = sub_1651780(v72, (unint64_t)v74, a3);
    }
  }
  int v75 = *(_DWORD *)(a1 + 40);
  if ((v75 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v76 = *(void *)(a1 + 368);
    *(_WORD *)uint64_t v4 = 1202;
    unsigned int v77 = *(_DWORD *)(v76 + 20);
    v4[2] = v77;
    if (v77 > 0x7F) {
      int v78 = sub_188A9CC(v77, v4 + 2);
    }
    else {
      int v78 = v4 + 3;
    }
    uint64_t v4 = sub_1651780(v76, (unint64_t)v78, a3);
  }
  if ((v75 & 0x400) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 71, (const void **)(*(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v79 = *(_DWORD *)(a1 + 44);
  if ((v79 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v80 = *(unsigned char *)(a1 + 465);
    *(_WORD *)uint64_t v4 = 1216;
    v4[2] = v80;
    v4 += 3;
    if ((v79 & 8) == 0)
    {
LABEL_172:
      if ((v79 & 0x20) == 0) {
        goto LABEL_186;
      }
      goto LABEL_180;
    }
  }
  else if ((v79 & 8) == 0)
  {
    goto LABEL_172;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v81 = *(unsigned char *)(a1 + 466);
  *(_WORD *)uint64_t v4 = 1224;
  v4[2] = v81;
  v4 += 3;
  if ((v79 & 0x20) != 0)
  {
LABEL_180:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v82 = *(_DWORD *)(a1 + 472);
    *(_WORD *)uint64_t v4 = 1232;
    v4[2] = v82;
    if (v82 > 0x7F)
    {
      v4[2] = v82 | 0x80;
      unsigned int v83 = v82 >> 7;
      v4[3] = v82 >> 7;
      v4 += 4;
      if (v82 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v84 = v83 >> 14;
          v83 >>= 7;
          *v4++ = v83;
        }
        while (v84);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_186:
  int v85 = *(_DWORD *)(a1 + 40);
  if ((v85 & 0x800) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 75, (const void **)(*(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v85 & 0x80000) == 0)
    {
LABEL_188:
      if ((v85 & 0x20000000) == 0) {
        goto LABEL_203;
      }
      goto LABEL_197;
    }
  }
  else if ((v85 & 0x80000) == 0)
  {
    goto LABEL_188;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v86 = *(void *)(a1 + 376);
  *(_WORD *)uint64_t v4 = 1250;
  unsigned int v87 = *(_DWORD *)(v86 + 20);
  v4[2] = v87;
  if (v87 > 0x7F) {
    unsigned int v88 = sub_188A9CC(v87, v4 + 2);
  }
  else {
    unsigned int v88 = v4 + 3;
  }
  uint64_t v4 = sub_15B1A68(v86, (unint64_t)v88, a3);
  if ((v85 & 0x20000000) != 0)
  {
LABEL_197:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v89 = *(_DWORD *)(a1 + 448);
    *(_WORD *)uint64_t v4 = 1256;
    v4[2] = v89;
    if (v89 > 0x7F)
    {
      v4[2] = v89 | 0x80;
      unsigned int v90 = v89 >> 7;
      v4[3] = v89 >> 7;
      v4 += 4;
      if (v89 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v91 = v90 >> 14;
          v90 >>= 7;
          *v4++ = v90;
        }
        while (v91);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_203:
  uint64_t v92 = *(unsigned int *)(a1 + 160);
  if ((int)v92 >= 1)
  {
    uint64_t v93 = 0;
    uint64_t v94 = 8 * v92;
    do
    {
      int v95 = *(void **)(*(void *)(a1 + 168) + v93 + 8);
      if (*((char *)v95 + 23) < 0)
      {
        int64_t v96 = v95[1];
        if (v96 > 127) {
          goto LABEL_214;
        }
      }
      else
      {
        int64_t v96 = *((unsigned __int8 *)v95 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v96)
      {
        *(_WORD *)uint64_t v4 = 1266;
        v4[2] = v96;
        if (*((char *)v95 + 23) < 0) {
          int v95 = (void *)*v95;
        }
        int v97 = v4 + 3;
        memcpy(v97, v95, v96);
        uint64_t v4 = &v97[v96];
        goto LABEL_212;
      }
LABEL_214:
      uint64_t v4 = (char *)sub_188A868(a3, 78, (uint64_t)v95, v4);
LABEL_212:
      v93 += 8;
    }
    while (v94 != v93);
  }
  if ((v85 & 0x1000) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 79, (const void **)(*(void *)(a1 + 320) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v85 & 0x100000) == 0)
    {
LABEL_217:
      if ((v85 & 0x200000) == 0) {
        goto LABEL_218;
      }
      goto LABEL_229;
    }
  }
  else if ((v85 & 0x100000) == 0)
  {
    goto LABEL_217;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v98 = *(void *)(a1 + 384);
  *(_WORD *)uint64_t v4 = 1410;
  unsigned int v99 = *(_DWORD *)(v98 + 20);
  v4[2] = v99;
  if (v99 > 0x7F) {
    uint64_t v100 = sub_188A9CC(v99, v4 + 2);
  }
  else {
    uint64_t v100 = v4 + 3;
  }
  uint64_t v4 = sub_1653430(v98, (unint64_t)v100, a3);
  if ((v85 & 0x200000) == 0)
  {
LABEL_218:
    if ((v85 & 0x400000) == 0) {
      goto LABEL_219;
    }
    goto LABEL_235;
  }
LABEL_229:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v101 = *(void *)(a1 + 392);
  *(_WORD *)uint64_t v4 = 1418;
  unsigned int v102 = *(_DWORD *)(v101 + 20);
  v4[2] = v102;
  if (v102 > 0x7F) {
    int v103 = sub_188A9CC(v102, v4 + 2);
  }
  else {
    int v103 = v4 + 3;
  }
  uint64_t v4 = sub_1496514(v101, v103, a3);
  if ((v85 & 0x400000) == 0)
  {
LABEL_219:
    if ((v85 & 0x800000) == 0) {
      goto LABEL_220;
    }
    goto LABEL_241;
  }
LABEL_235:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v104 = *(void *)(a1 + 400);
  *(_WORD *)uint64_t v4 = 1426;
  unsigned int v105 = *(_DWORD *)(v104 + 44);
  v4[2] = v105;
  if (v105 > 0x7F) {
    int v106 = sub_188A9CC(v105, v4 + 2);
  }
  else {
    int v106 = v4 + 3;
  }
  uint64_t v4 = sub_15BF3F8(v104, v106, a3);
  if ((v85 & 0x800000) == 0)
  {
LABEL_220:
    if ((v85 & 0x1000000) == 0) {
      goto LABEL_253;
    }
    goto LABEL_247;
  }
LABEL_241:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v107 = *(void *)(a1 + 408);
  *(_WORD *)uint64_t v4 = 1434;
  unsigned int v108 = *(_DWORD *)(v107 + 20);
  v4[2] = v108;
  if (v108 > 0x7F) {
    int v109 = sub_188A9CC(v108, v4 + 2);
  }
  else {
    int v109 = v4 + 3;
  }
  uint64_t v4 = sub_1663DA0(v107, (unint64_t)v109, a3);
  if ((v85 & 0x1000000) != 0)
  {
LABEL_247:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v110 = *(void *)(a1 + 416);
    *(_WORD *)uint64_t v4 = 1442;
    unsigned int v111 = *(_DWORD *)(v110 + 20);
    v4[2] = v111;
    if (v111 > 0x7F) {
      int v112 = sub_188A9CC(v111, v4 + 2);
    }
    else {
      int v112 = v4 + 3;
    }
    uint64_t v4 = sub_12A12FC(v110, v112, a3);
  }
LABEL_253:
  int v113 = *(_DWORD *)(a1 + 184);
  if (v113)
  {
    for (int n = 0; n != v113; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v115 = *(void *)(*(void *)(a1 + 192) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 1450;
      unsigned int v116 = *(_DWORD *)(v115 + 20);
      v4[2] = v116;
      if (v116 > 0x7F) {
        uint64_t v117 = sub_188A9CC(v116, v4 + 2);
      }
      else {
        uint64_t v117 = v4 + 3;
      }
      uint64_t v4 = sub_166392C(v115, v117, a3);
    }
  }
  if ((*(unsigned char *)(a1 + 44) & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v118 = *(void *)(a1 + 480);
    *(_WORD *)uint64_t v4 = 1457;
    *(void *)(v4 + 2) = v118;
    v4 += 10;
  }
  int v119 = *(_DWORD *)(a1 + 208);
  if (v119)
  {
    for (iint i = 0; ii != v119; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v121 = *(void *)(*(void *)(a1 + 216) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 1466;
      unsigned int v122 = *(_DWORD *)(v121 + 20);
      v4[2] = v122;
      if (v122 > 0x7F) {
        uint64_t v123 = sub_188A9CC(v122, v4 + 2);
      }
      else {
        uint64_t v123 = v4 + 3;
      }
      uint64_t v4 = sub_17EFEBC(v121, (unint64_t)v123, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 10000, 10100, v4, a3);
  }
  uint64_t v124 = *(void *)(a1 + 8);
  if ((v124 & 1) == 0) {
    return v4;
  }
  unint64_t v126 = v124 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v126 + 31) < 0)
  {
    uint64_t v127 = *(void **)(v126 + 8);
    uint64_t v128 = *(void *)(v126 + 16);
  }
  else
  {
    uint64_t v127 = (void *)(v126 + 8);
    LODWORD(v128) = *(unsigned __int8 *)(v126 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v128)
  {
    uint64_t v129 = (int)v128;
    memcpy(v4, v127, (int)v128);
    v4 += v129;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v127, v128, v4);
}

uint64_t sub_164F71C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 64);
  uint64_t v4 = v2 + 2 * v3;
  uint64_t v5 = *(void *)(a1 + 72);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15BAE94(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 88);
  uint64_t v11 = v4 + 2 * v10;
  uint64_t v12 = *(void *)(a1 + 96);
  if (v12) {
    unint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1652ABC(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 112);
  uint64_t v18 = v11 + 2 * v17;
  uint64_t v19 = *(void *)(a1 + 120);
  if (v19) {
    unsigned int v20 = (uint64_t *)(v19 + 8);
  }
  else {
    unsigned int v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_1498324(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 136);
  uint64_t v25 = v18 + 2 * v24;
  uint64_t v26 = *(void *)(a1 + 144);
  if (v26) {
    unint64_t v27 = (uint64_t *)(v26 + 8);
  }
  else {
    unint64_t v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_1651918(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  uint64_t v31 = *(unsigned int *)(a1 + 160);
  uint64_t v32 = v25 + 2 * v31;
  if ((int)v31 >= 1)
  {
    unsigned int v33 = (uint64_t *)(*(void *)(a1 + 168) + 8);
    do
    {
      uint64_t v34 = *v33++;
      uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
      uint64_t v36 = *(void *)(v34 + 8);
      if ((v35 & 0x80u) == 0) {
        uint64_t v36 = v35;
      }
      v32 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6);
      --v31;
    }
    while (v31);
  }
  uint64_t v37 = *(int *)(a1 + 184);
  uint64_t v38 = v32 + 2 * v37;
  uint64_t v39 = *(void *)(a1 + 192);
  if (v39) {
    unint64_t v40 = (uint64_t *)(v39 + 8);
  }
  else {
    unint64_t v40 = 0;
  }
  if (v37)
  {
    uint64_t v41 = 8 * v37;
    do
    {
      uint64_t v42 = *v40++;
      uint64_t v43 = sub_1663A18(v42);
      v38 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6);
      v41 -= 8;
    }
    while (v41);
  }
  uint64_t v44 = *(int *)(a1 + 208);
  uint64_t v45 = v38 + 2 * v44;
  uint64_t v46 = *(void *)(a1 + 216);
  if (v46) {
    unsigned int v47 = (uint64_t *)(v46 + 8);
  }
  else {
    unsigned int v47 = 0;
  }
  if (v44)
  {
    uint64_t v48 = 8 * v44;
    do
    {
      uint64_t v49 = *v47++;
      uint64_t v50 = sub_17F00DC(v49);
      v45 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6);
      v48 -= 8;
    }
    while (v48);
  }
  unsigned int v51 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v51) {
    goto LABEL_54;
  }
  if (v51)
  {
    unint64_t v71 = *(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v72 = *(unsigned __int8 *)(v71 + 23);
    uint64_t v73 = *(void *)(v71 + 8);
    if ((v72 & 0x80u) == 0) {
      uint64_t v73 = v72;
    }
    v45 += v73 + ((9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v51 & 2) == 0)
    {
LABEL_45:
      if ((v51 & 4) == 0) {
        goto LABEL_46;
      }
      goto LABEL_122;
    }
  }
  else if ((v51 & 2) == 0)
  {
    goto LABEL_45;
  }
  unint64_t v74 = *(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v75 = *(unsigned __int8 *)(v74 + 23);
  uint64_t v76 = *(void *)(v74 + 8);
  if ((v75 & 0x80u) == 0) {
    uint64_t v76 = v75;
  }
  v45 += v76 + ((9 * (__clz(v76 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v51 & 4) == 0)
  {
LABEL_46:
    if ((v51 & 8) == 0) {
      goto LABEL_47;
    }
    goto LABEL_125;
  }
LABEL_122:
  unint64_t v77 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v78 = *(unsigned __int8 *)(v77 + 23);
  uint64_t v79 = *(void *)(v77 + 8);
  if ((v78 & 0x80u) == 0) {
    uint64_t v79 = v78;
  }
  v45 += v79 + ((9 * (__clz(v79 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v51 & 8) == 0)
  {
LABEL_47:
    if ((v51 & 0x10) == 0) {
      goto LABEL_48;
    }
    goto LABEL_128;
  }
LABEL_125:
  unint64_t v80 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v81 = *(unsigned __int8 *)(v80 + 23);
  uint64_t v82 = *(void *)(v80 + 8);
  if ((v81 & 0x80u) == 0) {
    uint64_t v82 = v81;
  }
  v45 += v82 + ((9 * (__clz(v82 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v51 & 0x10) == 0)
  {
LABEL_48:
    if ((v51 & 0x20) == 0) {
      goto LABEL_49;
    }
LABEL_131:
    unint64_t v86 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v87 = *(unsigned __int8 *)(v86 + 23);
    uint64_t v88 = *(void *)(v86 + 8);
    if ((v87 & 0x80u) == 0) {
      uint64_t v88 = v87;
    }
    v45 += v88 + ((9 * (__clz(v88 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v51 & 0x40) == 0)
    {
LABEL_50:
      if ((v51 & 0x80) == 0) {
        goto LABEL_54;
      }
      goto LABEL_51;
    }
    goto LABEL_134;
  }
LABEL_128:
  unint64_t v83 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v84 = *(unsigned __int8 *)(v83 + 23);
  uint64_t v85 = *(void *)(v83 + 8);
  if ((v84 & 0x80u) == 0) {
    uint64_t v85 = v84;
  }
  v45 += v85 + ((9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v51 & 0x20) != 0) {
    goto LABEL_131;
  }
LABEL_49:
  if ((v51 & 0x40) == 0) {
    goto LABEL_50;
  }
LABEL_134:
  unint64_t v89 = *(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v90 = *(unsigned __int8 *)(v89 + 23);
  uint64_t v91 = *(void *)(v89 + 8);
  if ((v90 & 0x80u) == 0) {
    uint64_t v91 = v90;
  }
  v45 += v91 + ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v51 & 0x80) != 0)
  {
LABEL_51:
    unint64_t v52 = *(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v53 = *(unsigned __int8 *)(v52 + 23);
    uint64_t v54 = *(void *)(v52 + 8);
    if ((v53 & 0x80u) == 0) {
      uint64_t v54 = v53;
    }
    v45 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_54:
  if ((v51 & 0xFF00) == 0) {
    goto LABEL_64;
  }
  if ((v51 & 0x100) != 0)
  {
    unint64_t v92 = *(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v93 = *(unsigned __int8 *)(v92 + 23);
    uint64_t v94 = *(void *)(v92 + 8);
    if ((v93 & 0x80u) == 0) {
      uint64_t v94 = v93;
    }
    v45 += v94 + ((9 * (__clz(v94 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v51 & 0x200) == 0)
    {
LABEL_57:
      if ((v51 & 0x400) == 0) {
        goto LABEL_58;
      }
      goto LABEL_144;
    }
  }
  else if ((v51 & 0x200) == 0)
  {
    goto LABEL_57;
  }
  unint64_t v95 = *(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v96 = *(unsigned __int8 *)(v95 + 23);
  uint64_t v97 = *(void *)(v95 + 8);
  if ((v96 & 0x80u) == 0) {
    uint64_t v97 = v96;
  }
  v45 += v97 + ((9 * (__clz(v97 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v51 & 0x400) == 0)
  {
LABEL_58:
    if ((v51 & 0x800) == 0) {
      goto LABEL_59;
    }
    goto LABEL_147;
  }
LABEL_144:
  unint64_t v98 = *(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v99 = *(unsigned __int8 *)(v98 + 23);
  uint64_t v100 = *(void *)(v98 + 8);
  if ((v99 & 0x80u) == 0) {
    uint64_t v100 = v99;
  }
  v45 += v100 + ((9 * (__clz(v100 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v51 & 0x800) == 0)
  {
LABEL_59:
    if ((v51 & 0x1000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_150;
  }
LABEL_147:
  unint64_t v101 = *(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v102 = *(unsigned __int8 *)(v101 + 23);
  uint64_t v103 = *(void *)(v101 + 8);
  if ((v102 & 0x80u) == 0) {
    uint64_t v103 = v102;
  }
  v45 += v103 + ((9 * (__clz(v103 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v51 & 0x1000) == 0)
  {
LABEL_60:
    if ((v51 & 0x2000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_153;
  }
LABEL_150:
  unint64_t v104 = *(void *)(a1 + 320) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v105 = *(unsigned __int8 *)(v104 + 23);
  uint64_t v106 = *(void *)(v104 + 8);
  if ((v105 & 0x80u) == 0) {
    uint64_t v106 = v105;
  }
  v45 += v106 + ((9 * (__clz(v106 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v51 & 0x2000) == 0)
  {
LABEL_61:
    if ((v51 & 0x4000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_154;
  }
LABEL_153:
  unint64_t v107 = sub_15BA324(*(void *)(a1 + 328));
  v45 += v107 + ((9 * (__clz(v107 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v51 & 0x4000) == 0)
  {
LABEL_62:
    if ((v51 & 0x8000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_63;
  }
LABEL_154:
  uint64_t v108 = sub_15B0D90(*(void *)(a1 + 336));
  v45 += v108 + ((9 * (__clz(v108 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v51 & 0x8000) != 0)
  {
LABEL_63:
    uint64_t v55 = sub_1653798(*(void *)(a1 + 344));
    v45 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_64:
  if ((v51 & 0xFF0000) == 0) {
    goto LABEL_74;
  }
  if ((v51 & 0x10000) != 0)
  {
    uint64_t v109 = sub_16634E0(*(void *)(a1 + 352));
    v45 += v109 + ((9 * (__clz(v109 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v51 & 0x20000) == 0)
    {
LABEL_67:
      if ((v51 & 0x40000) == 0) {
        goto LABEL_68;
      }
      goto LABEL_158;
    }
  }
  else if ((v51 & 0x20000) == 0)
  {
    goto LABEL_67;
  }
  uint64_t v110 = sub_1496860(*(void *)(a1 + 360));
  v45 += v110 + ((9 * (__clz(v110 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v51 & 0x40000) == 0)
  {
LABEL_68:
    if ((v51 & 0x80000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_159;
  }
LABEL_158:
  uint64_t v111 = sub_1651918(*(void *)(a1 + 368));
  v45 += v111 + ((9 * (__clz(v111 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v51 & 0x80000) == 0)
  {
LABEL_69:
    if ((v51 & 0x100000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_160;
  }
LABEL_159:
  uint64_t v112 = sub_15B1D1C(*(void *)(a1 + 376));
  v45 += v112 + ((9 * (__clz(v112 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v51 & 0x100000) == 0)
  {
LABEL_70:
    if ((v51 & 0x200000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_161;
  }
LABEL_160:
  uint64_t v113 = sub_1653798(*(void *)(a1 + 384));
  v45 += v113 + ((9 * (__clz(v113 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v51 & 0x200000) == 0)
  {
LABEL_71:
    if ((v51 & 0x400000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_162;
  }
LABEL_161:
  uint64_t v114 = sub_1496860(*(void *)(a1 + 392));
  v45 += v114 + ((9 * (__clz(v114 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v51 & 0x400000) == 0)
  {
LABEL_72:
    if ((v51 & 0x800000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_73;
  }
LABEL_162:
  uint64_t v115 = sub_15BF564(*(void *)(a1 + 400));
  v45 += v115 + ((9 * (__clz(v115 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v51 & 0x800000) != 0)
  {
LABEL_73:
    uint64_t v56 = sub_1663F44(*(void *)(a1 + 408));
    v45 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_74:
  if (!HIBYTE(v51)) {
    goto LABEL_85;
  }
  if ((v51 & 0x1000000) != 0)
  {
    uint64_t v57 = sub_12A1464(*(void *)(a1 + 416));
    v45 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  if ((v51 & 0x2000000) != 0) {
    v45 += 9;
  }
  if ((v51 & 0x4000000) != 0)
  {
    int v116 = *(_DWORD *)(a1 + 432);
    uint64_t v117 = (9 * (__clz(v116 | 1) ^ 0x1F) + 73) >> 6;
    if (v116 >= 0) {
      uint64_t v118 = v117;
    }
    else {
      uint64_t v118 = 10;
    }
    v45 += v118 + 1;
    if ((v51 & 0x8000000) == 0)
    {
LABEL_81:
      if ((v51 & 0x10000000) == 0) {
        goto LABEL_82;
      }
      goto LABEL_169;
    }
  }
  else if ((v51 & 0x8000000) == 0)
  {
    goto LABEL_81;
  }
  v45 += ((9 * (__clz(*(_DWORD *)(a1 + 436) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v51 & 0x10000000) == 0)
  {
LABEL_82:
    if ((v51 & 0x20000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_170;
  }
LABEL_169:
  v45 += ((9 * (__clz(*(void *)(a1 + 440) | 1) ^ 0x3F) + 73) >> 6) + 2;
  if ((v51 & 0x20000000) == 0)
  {
LABEL_83:
    if ((v51 & 0x40000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_171;
  }
LABEL_170:
  v45 += ((9 * (__clz(*(_DWORD *)(a1 + 448) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v51 & 0x40000000) == 0)
  {
LABEL_84:
    if ((v51 & 0x80000000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_175;
  }
LABEL_171:
  int v119 = *(_DWORD *)(a1 + 452);
  uint64_t v120 = ((9 * (__clz(v119 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v119 >= 0) {
    uint64_t v121 = v120;
  }
  else {
    uint64_t v121 = 12;
  }
  v45 += v121;
  if ((v51 & 0x80000000) != 0)
  {
LABEL_175:
    int v122 = *(_DWORD *)(a1 + 456);
    uint64_t v123 = ((9 * (__clz(v122 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v122 >= 0) {
      uint64_t v124 = v123;
    }
    else {
      uint64_t v124 = 12;
    }
    v45 += v124;
  }
LABEL_85:
  int v58 = *(_DWORD *)(a1 + 44);
  if ((_BYTE)v58)
  {
    if (v58) {
      v45 += ((9 * (__clz(*(_DWORD *)(a1 + 460) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v59 = v45 + 3;
    if ((v58 & 2) == 0) {
      uint64_t v59 = v45;
    }
    if ((v58 & 4) != 0) {
      v59 += 3;
    }
    if ((v58 & 8) != 0) {
      v59 += 3;
    }
    if ((v58 & 0x10) != 0)
    {
      int v60 = *(_DWORD *)(a1 + 468);
      uint64_t v61 = ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v60 >= 0) {
        uint64_t v62 = v61;
      }
      else {
        uint64_t v62 = 12;
      }
      v59 += v62;
    }
    if ((v58 & 0x20) != 0) {
      v59 += ((9 * (__clz(*(_DWORD *)(a1 + 472) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v58 & 0x40) != 0) {
      uint64_t v45 = v59 + 10;
    }
    else {
      uint64_t v45 = v59;
    }
    if ((v58 & 0x80) != 0)
    {
      int v63 = *(_DWORD *)(a1 + 488);
      uint64_t v64 = ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v63 >= 0) {
        uint64_t v65 = v64;
      }
      else {
        uint64_t v65 = 12;
      }
      v45 += v65;
    }
  }
  if ((v58 & 0x100) != 0)
  {
    int v66 = *(_DWORD *)(a1 + 492);
    uint64_t v67 = ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v66 >= 0) {
      uint64_t v68 = v67;
    }
    else {
      uint64_t v68 = 12;
    }
    v45 += v68;
  }
  uint64_t v69 = *(void *)(a1 + 8);
  if (v69)
  {
    unint64_t v125 = v69 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v125 + 31) < 0) {
      uint64_t v126 = *(void *)(v125 + 16);
    }
    else {
      uint64_t v126 = *(unsigned __int8 *)(v125 + 31);
    }
    v45 += v126;
  }
  *(_DWORD *)(a1 + 48) = v45;
  return v45;
}

void sub_165024C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 64);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 72) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 56, *(_DWORD *)(a2 + 64));
    sub_11DB348((uint64_t *)(a1 + 56), v6, v5, v4, **(_DWORD **)(a1 + 72) - *(_DWORD *)(a1 + 64));
    int v7 = *(_DWORD *)(a1 + 64) + v4;
    *(_DWORD *)(a1 + 64) = v7;
    uint64_t v8 = *(int **)(a1 + 72);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 88);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 96) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 80, *(_DWORD *)(a2 + 88));
    sub_124FB98((uint64_t *)(a1 + 80), v11, v10, v9, **(_DWORD **)(a1 + 96) - *(_DWORD *)(a1 + 88));
    int v12 = *(_DWORD *)(a1 + 88) + v9;
    *(_DWORD *)(a1 + 88) = v12;
    unint64_t v13 = *(int **)(a1 + 96);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 112);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 120) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 104, *(_DWORD *)(a2 + 112));
    sub_149ECFC((uint64_t *)(a1 + 104), v16, v15, v14, **(_DWORD **)(a1 + 120) - *(_DWORD *)(a1 + 112));
    int v17 = *(_DWORD *)(a1 + 112) + v14;
    *(_DWORD *)(a1 + 112) = v17;
    uint64_t v18 = *(int **)(a1 + 120);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 136);
  if (v19)
  {
    unsigned int v20 = (uint64_t *)(*(void *)(a2 + 144) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 128, *(_DWORD *)(a2 + 136));
    sub_124FB0C((uint64_t *)(a1 + 128), v21, v20, v19, **(_DWORD **)(a1 + 144) - *(_DWORD *)(a1 + 136));
    int v22 = *(_DWORD *)(a1 + 136) + v19;
    *(_DWORD *)(a1 + 136) = v22;
    uint64_t v23 = *(int **)(a1 + 144);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 160);
  if (v24)
  {
    uint64_t v25 = (const std::string **)(*(void *)(a2 + 168) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 152, *(_DWORD *)(a2 + 160));
    sub_188FB98(a1 + 152, v26, v25, v24, **(_DWORD **)(a1 + 168) - *(_DWORD *)(a1 + 160));
    int v27 = *(_DWORD *)(a1 + 160) + v24;
    *(_DWORD *)(a1 + 160) = v27;
    uint64_t v28 = *(int **)(a1 + 168);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 184);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 192) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4(a1 + 176, *(_DWORD *)(a2 + 184));
    sub_124F990((std::string *)(a1 + 176), v31, v30, v29, **(_DWORD **)(a1 + 192) - *(_DWORD *)(a1 + 184));
    int v32 = *(_DWORD *)(a1 + 184) + v29;
    *(_DWORD *)(a1 + 184) = v32;
    unsigned int v33 = *(int **)(a1 + 192);
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 208);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 216) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4(a1 + 200, *(_DWORD *)(a2 + 208));
    sub_1664A7C((uint64_t *)(a1 + 200), v36, v35, v34, **(_DWORD **)(a1 + 216) - *(_DWORD *)(a1 + 208));
    int v37 = *(_DWORD *)(a1 + 208) + v34;
    *(_DWORD *)(a1 + 208) = v37;
    uint64_t v38 = *(int **)(a1 + 216);
    if (*v38 < v37) {
      int *v38 = v37;
    }
  }
  unsigned int v39 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v39) {
    goto LABEL_56;
  }
  if (v39)
  {
    unint64_t v40 = (long long *)(*(void *)(a2 + 224) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v41 = *(void *)(a1 + 8);
    uint64_t v42 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
    if (v41) {
      uint64_t v42 = (uint64_t *)*v42;
    }
    sub_1881DF4((std::string **)(a1 + 224), v40, v42);
    if ((v39 & 2) == 0)
    {
LABEL_25:
      if ((v39 & 4) == 0) {
        goto LABEL_26;
      }
      goto LABEL_38;
    }
  }
  else if ((v39 & 2) == 0)
  {
    goto LABEL_25;
  }
  uint64_t v43 = (long long *)(*(void *)(a2 + 232) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v44 = *(void *)(a1 + 8);
  uint64_t v45 = (uint64_t *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
  if (v44) {
    uint64_t v45 = (uint64_t *)*v45;
  }
  sub_1881DF4((std::string **)(a1 + 232), v43, v45);
  if ((v39 & 4) == 0)
  {
LABEL_26:
    if ((v39 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_41;
  }
LABEL_38:
  uint64_t v46 = (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v47 = *(void *)(a1 + 8);
  uint64_t v48 = (uint64_t *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
  if (v47) {
    uint64_t v48 = (uint64_t *)*v48;
  }
  sub_1881DF4((std::string **)(a1 + 240), v46, v48);
  if ((v39 & 8) == 0)
  {
LABEL_27:
    if ((v39 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v49 = (long long *)(*(void *)(a2 + 248) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v50 = *(void *)(a1 + 8);
  unsigned int v51 = (uint64_t *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
  if (v50) {
    unsigned int v51 = (uint64_t *)*v51;
  }
  sub_1881DF4((std::string **)(a1 + 248), v49, v51);
  if ((v39 & 0x10) == 0)
  {
LABEL_28:
    if ((v39 & 0x20) == 0) {
      goto LABEL_29;
    }
LABEL_47:
    uint64_t v55 = (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v56 = *(void *)(a1 + 8);
    uint64_t v57 = (uint64_t *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (v56) {
      uint64_t v57 = (uint64_t *)*v57;
    }
    sub_1881DF4((std::string **)(a1 + 264), v55, v57);
    if ((v39 & 0x40) == 0)
    {
LABEL_30:
      if ((v39 & 0x80) == 0) {
        goto LABEL_56;
      }
      goto LABEL_53;
    }
    goto LABEL_50;
  }
LABEL_44:
  unint64_t v52 = (long long *)(*(void *)(a2 + 256) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v53 = *(void *)(a1 + 8);
  uint64_t v54 = (uint64_t *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
  if (v53) {
    uint64_t v54 = (uint64_t *)*v54;
  }
  sub_1881DF4((std::string **)(a1 + 256), v52, v54);
  if ((v39 & 0x20) != 0) {
    goto LABEL_47;
  }
LABEL_29:
  if ((v39 & 0x40) == 0) {
    goto LABEL_30;
  }
LABEL_50:
  int v58 = (long long *)(*(void *)(a2 + 272) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v59 = *(void *)(a1 + 8);
  int v60 = (uint64_t *)(v59 & 0xFFFFFFFFFFFFFFFCLL);
  if (v59) {
    int v60 = (uint64_t *)*v60;
  }
  sub_1881DF4((std::string **)(a1 + 272), v58, v60);
  if ((v39 & 0x80) != 0)
  {
LABEL_53:
    uint64_t v61 = (long long *)(*(void *)(a2 + 280) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v62 = *(void *)(a1 + 8);
    int v63 = (uint64_t *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
    if (v62) {
      int v63 = (uint64_t *)*v63;
    }
    sub_1881DF4((std::string **)(a1 + 280), v61, v63);
  }
LABEL_56:
  if ((v39 & 0xFF00) == 0) {
    goto LABEL_105;
  }
  if ((v39 & 0x100) != 0)
  {
    uint64_t v64 = (long long *)(*(void *)(a2 + 288) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v65 = *(void *)(a1 + 8);
    int v66 = (uint64_t *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
    if (v65) {
      int v66 = (uint64_t *)*v66;
    }
    sub_1881DF4((std::string **)(a1 + 288), v64, v66);
    if ((v39 & 0x200) == 0)
    {
LABEL_59:
      if ((v39 & 0x400) == 0) {
        goto LABEL_60;
      }
      goto LABEL_72;
    }
  }
  else if ((v39 & 0x200) == 0)
  {
    goto LABEL_59;
  }
  uint64_t v67 = (long long *)(*(void *)(a2 + 296) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v68 = *(void *)(a1 + 8);
  uint64_t v69 = (uint64_t *)(v68 & 0xFFFFFFFFFFFFFFFCLL);
  if (v68) {
    uint64_t v69 = (uint64_t *)*v69;
  }
  sub_1881DF4((std::string **)(a1 + 296), v67, v69);
  if ((v39 & 0x400) == 0)
  {
LABEL_60:
    if ((v39 & 0x800) == 0) {
      goto LABEL_61;
    }
    goto LABEL_75;
  }
LABEL_72:
  int v70 = (long long *)(*(void *)(a2 + 304) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x400u;
  uint64_t v71 = *(void *)(a1 + 8);
  uint64_t v72 = (uint64_t *)(v71 & 0xFFFFFFFFFFFFFFFCLL);
  if (v71) {
    uint64_t v72 = (uint64_t *)*v72;
  }
  sub_1881DF4((std::string **)(a1 + 304), v70, v72);
  if ((v39 & 0x800) == 0)
  {
LABEL_61:
    if ((v39 & 0x1000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_78;
  }
LABEL_75:
  uint64_t v73 = (long long *)(*(void *)(a2 + 312) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v74 = *(void *)(a1 + 8);
  uint64_t v75 = (uint64_t *)(v74 & 0xFFFFFFFFFFFFFFFCLL);
  if (v74) {
    uint64_t v75 = (uint64_t *)*v75;
  }
  sub_1881DF4((std::string **)(a1 + 312), v73, v75);
  if ((v39 & 0x1000) == 0)
  {
LABEL_62:
    if ((v39 & 0x2000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_81;
  }
LABEL_78:
  uint64_t v76 = (long long *)(*(void *)(a2 + 320) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  uint64_t v77 = *(void *)(a1 + 8);
  uint64_t v78 = (uint64_t *)(v77 & 0xFFFFFFFFFFFFFFFCLL);
  if (v77) {
    uint64_t v78 = (uint64_t *)*v78;
  }
  sub_1881DF4((std::string **)(a1 + 320), v76, v78);
  if ((v39 & 0x2000) == 0)
  {
LABEL_63:
    if ((v39 & 0x4000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_89;
  }
LABEL_81:
  *(_DWORD *)(a1 + 40) |= 0x2000u;
  uint64_t v79 = *(std::string **)(a1 + 328);
  if (!v79)
  {
    uint64_t v80 = *(void *)(a1 + 8);
    uint64_t v81 = (void *)(v80 & 0xFFFFFFFFFFFFFFFCLL);
    if (v80) {
      uint64_t v81 = (void *)*v81;
    }
    uint64_t v79 = (std::string *)sub_15C2014((uint64_t)v81);
    *(void *)(a1 + 328) = v79;
  }
  if (*(void *)(a2 + 328)) {
    uint64_t v82 = *(uint64_t (****)())(a2 + 328);
  }
  else {
    uint64_t v82 = &off_253F530;
  }
  sub_1113E40(v79, (uint64_t)v82);
  if ((v39 & 0x4000) == 0)
  {
LABEL_64:
    if ((v39 & 0x8000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_97;
  }
LABEL_89:
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  uint64_t v83 = *(void *)(a1 + 336);
  if (!v83)
  {
    uint64_t v84 = *(void *)(a1 + 8);
    uint64_t v85 = (void *)(v84 & 0xFFFFFFFFFFFFFFFCLL);
    if (v84) {
      uint64_t v85 = (void *)*v85;
    }
    uint64_t v83 = sub_15C1918((uint64_t)v85);
    *(void *)(a1 + 336) = v83;
  }
  if (*(void *)(a2 + 336)) {
    unint64_t v86 = *(uint64_t (****)())(a2 + 336);
  }
  else {
    unint64_t v86 = &off_253F1A0;
  }
  sub_15B0E24(v83, (uint64_t)v86);
  if ((v39 & 0x8000) != 0)
  {
LABEL_97:
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    uint64_t v87 = *(void *)(a1 + 344);
    if (!v87)
    {
      uint64_t v88 = *(void *)(a1 + 8);
      unint64_t v89 = (void *)(v88 & 0xFFFFFFFFFFFFFFFCLL);
      if (v88) {
        unint64_t v89 = (void *)*v89;
      }
      uint64_t v87 = sub_1653ACC((uint64_t)v89);
      *(void *)(a1 + 344) = v87;
    }
    if (*(void *)(a2 + 344)) {
      uint64_t v90 = *(uint64_t (****)())(a2 + 344);
    }
    else {
      uint64_t v90 = &off_2542570;
    }
    sub_1650D5C(v87, (uint64_t)v90);
  }
LABEL_105:
  if ((v39 & 0xFF0000) == 0) {
    goto LABEL_179;
  }
  if ((v39 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    uint64_t v91 = *(std::string **)(a1 + 352);
    if (!v91)
    {
      uint64_t v92 = *(void *)(a1 + 8);
      uint64_t v93 = (void *)(v92 & 0xFFFFFFFFFFFFFFFCLL);
      if (v92) {
        uint64_t v93 = (void *)*v93;
      }
      uint64_t v91 = (std::string *)sub_166401C((uint64_t)v93);
      *(void *)(a1 + 352) = v91;
    }
    if (*(void *)(a2 + 352)) {
      uint64_t v94 = *(uint64_t (****)(uint64_t))(a2 + 352);
    }
    else {
      uint64_t v94 = &off_2542AA0;
    }
    sub_11D2930(v91, (uint64_t)v94);
  }
  if ((v39 & 0x20000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x20000u;
    unint64_t v95 = *(std::string **)(a1 + 360);
    if (!v95)
    {
      uint64_t v96 = *(void *)(a1 + 8);
      uint64_t v97 = (void *)(v96 & 0xFFFFFFFFFFFFFFFCLL);
      if (v96) {
        uint64_t v97 = (void *)*v97;
      }
      unint64_t v95 = (std::string *)sub_1497018((uint64_t)v97);
      *(void *)(a1 + 360) = v95;
    }
    if (*(void *)(a2 + 360)) {
      unint64_t v98 = *(uint64_t (****)())(a2 + 360);
    }
    else {
      unint64_t v98 = &off_253A070;
    }
    sub_1495A3C(v95, (uint64_t)v98);
    if ((v39 & 0x40000) == 0)
    {
LABEL_117:
      if ((v39 & 0x80000) == 0) {
        goto LABEL_118;
      }
      goto LABEL_139;
    }
  }
  else if ((v39 & 0x40000) == 0)
  {
    goto LABEL_117;
  }
  *(_DWORD *)(a1 + 40) |= 0x40000u;
  uint64_t v99 = *(void *)(a1 + 368);
  if (!v99)
  {
    uint64_t v100 = *(void *)(a1 + 8);
    unint64_t v101 = (void *)(v100 & 0xFFFFFFFFFFFFFFFCLL);
    if (v100) {
      unint64_t v101 = (void *)*v101;
    }
    uint64_t v99 = sub_16539C0((uint64_t)v101);
    *(void *)(a1 + 368) = v99;
  }
  if (*(void *)(a2 + 368)) {
    uint64_t v102 = *(uint64_t (****)())(a2 + 368);
  }
  else {
    uint64_t v102 = &off_25424B8;
  }
  sub_1650F7C(v99, (uint64_t)v102);
  if ((v39 & 0x80000) == 0)
  {
LABEL_118:
    if ((v39 & 0x100000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_147;
  }
LABEL_139:
  *(_DWORD *)(a1 + 40) |= 0x80000u;
  uint64_t v103 = *(void *)(a1 + 376);
  if (!v103)
  {
    uint64_t v104 = *(void *)(a1 + 8);
    uint64_t v105 = (void *)(v104 & 0xFFFFFFFFFFFFFFFCLL);
    if (v104) {
      uint64_t v105 = (void *)*v105;
    }
    uint64_t v103 = sub_15C19EC((uint64_t)v105);
    *(void *)(a1 + 376) = v103;
  }
  if (*(void *)(a2 + 376)) {
    uint64_t v106 = *(uint64_t (****)())(a2 + 376);
  }
  else {
    uint64_t v106 = &off_253F208;
  }
  sub_15B1E3C(v103, (uint64_t)v106);
  if ((v39 & 0x100000) == 0)
  {
LABEL_119:
    if ((v39 & 0x200000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_155;
  }
LABEL_147:
  *(_DWORD *)(a1 + 40) |= 0x100000u;
  uint64_t v107 = *(void *)(a1 + 384);
  if (!v107)
  {
    uint64_t v108 = *(void *)(a1 + 8);
    uint64_t v109 = (void *)(v108 & 0xFFFFFFFFFFFFFFFCLL);
    if (v108) {
      uint64_t v109 = (void *)*v109;
    }
    uint64_t v107 = sub_1653ACC((uint64_t)v109);
    *(void *)(a1 + 384) = v107;
  }
  if (*(void *)(a2 + 384)) {
    uint64_t v110 = *(uint64_t (****)())(a2 + 384);
  }
  else {
    uint64_t v110 = &off_2542570;
  }
  sub_1650D5C(v107, (uint64_t)v110);
  if ((v39 & 0x200000) == 0)
  {
LABEL_120:
    if ((v39 & 0x400000) == 0) {
      goto LABEL_121;
    }
    goto LABEL_163;
  }
LABEL_155:
  *(_DWORD *)(a1 + 40) |= 0x200000u;
  uint64_t v111 = *(std::string **)(a1 + 392);
  if (!v111)
  {
    uint64_t v112 = *(void *)(a1 + 8);
    uint64_t v113 = (void *)(v112 & 0xFFFFFFFFFFFFFFFCLL);
    if (v112) {
      uint64_t v113 = (void *)*v113;
    }
    uint64_t v111 = (std::string *)sub_1497018((uint64_t)v113);
    *(void *)(a1 + 392) = v111;
  }
  if (*(void *)(a2 + 392)) {
    uint64_t v114 = *(uint64_t (****)())(a2 + 392);
  }
  else {
    uint64_t v114 = &off_253A070;
  }
  sub_1495A3C(v111, (uint64_t)v114);
  if ((v39 & 0x400000) == 0)
  {
LABEL_121:
    if ((v39 & 0x800000) == 0) {
      goto LABEL_179;
    }
    goto LABEL_171;
  }
LABEL_163:
  *(_DWORD *)(a1 + 40) |= 0x400000u;
  uint64_t v115 = *(void **)(a1 + 400);
  if (!v115)
  {
    uint64_t v116 = *(void *)(a1 + 8);
    uint64_t v117 = (void *)(v116 & 0xFFFFFFFFFFFFFFFCLL);
    if (v116) {
      uint64_t v117 = (void *)*v117;
    }
    uint64_t v115 = sub_15C24B4((uint64_t)v117);
    *(void *)(a1 + 400) = v115;
  }
  if (*(void *)(a2 + 400)) {
    uint64_t v118 = *(uint64_t (****)())(a2 + 400);
  }
  else {
    uint64_t v118 = &off_253F6E8;
  }
  sub_15BF630((uint64_t)v115, (uint64_t)v118);
  if ((v39 & 0x800000) != 0)
  {
LABEL_171:
    *(_DWORD *)(a1 + 40) |= 0x800000u;
    int v119 = *(std::string **)(a1 + 408);
    if (!v119)
    {
      uint64_t v120 = *(void *)(a1 + 8);
      uint64_t v121 = (void *)(v120 & 0xFFFFFFFFFFFFFFFCLL);
      if (v120) {
        uint64_t v121 = (void *)*v121;
      }
      int v119 = (std::string *)sub_1664128((uint64_t)v121);
      *(void *)(a1 + 408) = v119;
    }
    if (*(void *)(a2 + 408)) {
      int v122 = *(void *(****)(void *))(a2 + 408);
    }
    else {
      int v122 = &off_2542AD0;
    }
    sub_117EF04(v119, (uint64_t)v122);
  }
LABEL_179:
  if (!HIBYTE(v39)) {
    goto LABEL_189;
  }
  if ((v39 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x1000000u;
    uint64_t v126 = *(std::string **)(a1 + 416);
    if (!v126)
    {
      uint64_t v127 = *(void *)(a1 + 8);
      uint64_t v128 = (void *)(v127 & 0xFFFFFFFFFFFFFFFCLL);
      if (v127) {
        uint64_t v128 = (void *)*v128;
      }
      uint64_t v126 = (std::string *)sub_12BBB40((uint64_t)v128);
      *(void *)(a1 + 416) = v126;
    }
    if (*(void *)(a2 + 416)) {
      uint64_t v129 = *(uint64_t (****)())(a2 + 416);
    }
    else {
      uint64_t v129 = &off_2530888;
    }
    sub_117DA78(v126, (uint64_t)v129);
    if ((v39 & 0x2000000) == 0)
    {
LABEL_182:
      if ((v39 & 0x4000000) == 0) {
        goto LABEL_183;
      }
      goto LABEL_223;
    }
  }
  else if ((v39 & 0x2000000) == 0)
  {
    goto LABEL_182;
  }
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  if ((v39 & 0x4000000) == 0)
  {
LABEL_183:
    if ((v39 & 0x8000000) == 0) {
      goto LABEL_184;
    }
    goto LABEL_224;
  }
LABEL_223:
  *(_DWORD *)(a1 + 432) = *(_DWORD *)(a2 + 432);
  if ((v39 & 0x8000000) == 0)
  {
LABEL_184:
    if ((v39 & 0x10000000) == 0) {
      goto LABEL_185;
    }
    goto LABEL_225;
  }
LABEL_224:
  *(_DWORD *)(a1 + 436) = *(_DWORD *)(a2 + 436);
  if ((v39 & 0x10000000) == 0)
  {
LABEL_185:
    if ((v39 & 0x20000000) == 0) {
      goto LABEL_186;
    }
    goto LABEL_226;
  }
LABEL_225:
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  if ((v39 & 0x20000000) == 0)
  {
LABEL_186:
    if ((v39 & 0x40000000) == 0) {
      goto LABEL_187;
    }
LABEL_227:
    *(_DWORD *)(a1 + 452) = *(_DWORD *)(a2 + 452);
    if ((v39 & 0x80000000) == 0) {
      goto LABEL_188;
    }
LABEL_228:
    *(_DWORD *)(a1 + 456) = *(_DWORD *)(a2 + 456);
    goto LABEL_188;
  }
LABEL_226:
  *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
  if ((v39 & 0x40000000) != 0) {
    goto LABEL_227;
  }
LABEL_187:
  if ((v39 & 0x80000000) != 0) {
    goto LABEL_228;
  }
LABEL_188:
  *(_DWORD *)(a1 + 40) |= v39;
LABEL_189:
  int v123 = *(_DWORD *)(a2 + 44);
  if (!(_BYTE)v123) {
    goto LABEL_200;
  }
  if (v123)
  {
    *(_DWORD *)(a1 + 460) = *(_DWORD *)(a2 + 460);
    if ((v123 & 2) == 0)
    {
LABEL_192:
      if ((v123 & 4) == 0) {
        goto LABEL_193;
      }
      goto LABEL_208;
    }
  }
  else if ((v123 & 2) == 0)
  {
    goto LABEL_192;
  }
  *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
  if ((v123 & 4) == 0)
  {
LABEL_193:
    if ((v123 & 8) == 0) {
      goto LABEL_194;
    }
    goto LABEL_209;
  }
LABEL_208:
  *(unsigned char *)(a1 + 465) = *(unsigned char *)(a2 + 465);
  if ((v123 & 8) == 0)
  {
LABEL_194:
    if ((v123 & 0x10) == 0) {
      goto LABEL_195;
    }
    goto LABEL_210;
  }
LABEL_209:
  *(unsigned char *)(a1 + 466) = *(unsigned char *)(a2 + 466);
  if ((v123 & 0x10) == 0)
  {
LABEL_195:
    if ((v123 & 0x20) == 0) {
      goto LABEL_196;
    }
    goto LABEL_211;
  }
LABEL_210:
  *(_DWORD *)(a1 + 468) = *(_DWORD *)(a2 + 468);
  if ((v123 & 0x20) == 0)
  {
LABEL_196:
    if ((v123 & 0x40) == 0) {
      goto LABEL_197;
    }
LABEL_212:
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    if ((v123 & 0x80) == 0) {
      goto LABEL_199;
    }
    goto LABEL_198;
  }
LABEL_211:
  *(_DWORD *)(a1 + 472) = *(_DWORD *)(a2 + 472);
  if ((v123 & 0x40) != 0) {
    goto LABEL_212;
  }
LABEL_197:
  if ((v123 & 0x80) != 0) {
LABEL_198:
  }
    *(_DWORD *)(a1 + 488) = *(_DWORD *)(a2 + 488);
LABEL_199:
  *(_DWORD *)(a1 + 44) |= v123;
LABEL_200:
  if ((v123 & 0x100) != 0)
  {
    int v124 = *(_DWORD *)(a2 + 492);
    *(_DWORD *)(a1 + 44) |= 0x100u;
    *(_DWORD *)(a1 + 492) = v124;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v125 = *(void *)(a2 + 8);
  if (v125)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v125 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1650D5C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_124FB98((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_149ECFC((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    unint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_124F990((std::string *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 7) != 0)
  {
    if (v19)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v21 = *(std::string **)(a1 + 96);
      if (!v21)
      {
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v23 = (void *)*v23;
        }
        uint64_t v21 = (std::string *)sub_1497018((uint64_t)v23);
        *(void *)(a1 + 96) = v21;
      }
      if (*(void *)(a2 + 96)) {
        int v24 = *(uint64_t (****)())(a2 + 96);
      }
      else {
        int v24 = &off_253A070;
      }
      sub_1495A3C(v21, (uint64_t)v24);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0)
        {
LABEL_15:
          *(_DWORD *)(a1 + 16) |= v19;
          goto LABEL_16;
        }
LABEL_14:
        *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
        goto LABEL_15;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    if ((v19 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1650F7C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          int v7 = (void *)*v7;
        }
        sub_1653A3C((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v8 = &off_25424E0;
      }
      sub_16519E8(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_165104C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 64);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_15BAF9C(*(void *)(*(void *)(a1 + 72) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t result = sub_1651170(a1 + 80);
    if (!result) {
      return result;
    }
    uint64_t v6 = *(unsigned int *)(a1 + 136);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_16511E8(*(void *)(*(void *)(a1 + 144) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    int v9 = *(_DWORD *)(a1 + 40);
    if ((v9 & 0x2000) != 0)
    {
      uint64_t result = sub_15BA3C8(*(void *)(a1 + 328));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x4000) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 336));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x8000) != 0)
    {
      uint64_t result = sub_1651170(*(void *)(a1 + 344) + 24);
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x40000) != 0)
    {
      uint64_t result = sub_16511E8(*(void *)(a1 + 368));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x80000) != 0)
    {
      uint64_t result = sub_15B1FC0(*(void *)(a1 + 376));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x100000) != 0)
    {
      uint64_t result = sub_1651170(*(void *)(a1 + 384) + 24);
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x400000) == 0) {
      return 1;
    }
    uint64_t result = sub_15BF6F4(*(void *)(a1 + 400));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1651170(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 17))
    {
      uint64_t result = sub_15B0F18(*(void *)(v5 + 88));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_16511E0(uint64_t a1)
{
  return sub_1651170(a1 + 24);
}

uint64_t sub_16511E8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 24);
  if ((*(unsigned char *)(v1 + 17) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(v1 + 88));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1651220@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.AutoCompleteSummary");
}

uint64_t sub_1651230(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25424B8)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1651DD4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16512E8(uint64_t a1)
{
  sub_1651230(a1);

  operator delete();
}

uint64_t sub_1651320(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) == 0)
    {
      if ((v2 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      unint64_t v4 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_19;
        }
      }
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_23:
      unint64_t v6 = *(void *)(result + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v2 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v6 = 0;
        *(unsigned char *)(v6 + 23) = 0;
        if ((v2 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
LABEL_31:
      unint64_t v8 = *(void *)(result + 64) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v2 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v2 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
LABEL_39:
      unint64_t v10 = *(void *)(result + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)unint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
      }
      goto LABEL_42;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    unint64_t v5 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    unint64_t v7 = *(void *)(result + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_35:
    unint64_t v9 = *(void *)(result + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    goto LABEL_39;
  }
LABEL_42:
  if ((v2 & 0xF00) == 0) {
    goto LABEL_48;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(result + 88));
    if ((v2 & 0x200) == 0)
    {
LABEL_45:
      if ((v2 & 0x400) == 0) {
        goto LABEL_46;
      }
      goto LABEL_56;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_45;
  }
  uint64_t result = sub_176443C(*(void *)(v1 + 96));
  if ((v2 & 0x400) == 0)
  {
LABEL_46:
    if ((v2 & 0x800) == 0) {
      goto LABEL_48;
    }
    goto LABEL_47;
  }
LABEL_56:
  uint64_t result = sub_12A102C(*(void *)(v1 + 104));
  if ((v2 & 0x800) != 0) {
LABEL_47:
  }
    uint64_t result = sub_151021C(*(void *)(v1 + 112));
LABEL_48:
  if ((v2 & 0x7000) != 0)
  {
    *(void *)(v1 + 120) = 0;
    *(void *)(v1 + 128) = 0;
    *(_DWORD *)(v1 + 136) = 0;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

char *sub_165156C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v24 + 2;
      }
    }
    int v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v20 = (void *)*v20;
      }
      sub_1653A3C((uint64_t)v20);
      uint64_t v19 = v21;
      *(void *)(a1 + 24) = v21;
      unint64_t v7 = v24;
    }
    int v14 = (char *)sub_124C5EC(a3, v19, (unsigned __int8 *)v7);
LABEL_32:
    int v24 = v14;
    if (!v14) {
      return 0;
    }
LABEL_33:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 == 16)
  {
    uint64_t v15 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        int v24 = (char *)sub_188C138((uint64_t)v7, (v18 - 128));
        if (!v24) {
          return 0;
        }
        unint64_t v16 = v22;
        goto LABEL_25;
      }
      uint64_t v15 = v7 + 2;
    }
    int v24 = v15;
LABEL_25:
    if (sub_12BD228(v16))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    else
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v23);
    }
    goto LABEL_33;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v24;
    }
    int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_32;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

char *sub_1651780(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    unint64_t v4 = sub_16525CC(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1651918(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_1652ABC(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_16519E8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_35;
  }
  if (v4)
  {
    int v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    unint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      unint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    unint64_t v11 = (uint64_t *)*v11;
  }
  sub_1881DF4((std::string **)(a1 + 32), v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_17:
  unint64_t v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 8);
  int v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    int v14 = (uint64_t *)*v14;
  }
  sub_1881DF4((std::string **)(a1 + 40), v12, v14);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_20:
  unint64_t v15 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    uint64_t v17 = (uint64_t *)*v17;
  }
  sub_1881DF4((std::string **)(a1 + 48), v15, v17);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v18 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
  if (v19) {
    uint64_t v20 = (uint64_t *)*v20;
  }
  sub_1881DF4((std::string **)(a1 + 56), v18, v20);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v21 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x20u;
  uint64_t v22 = *(void *)(a1 + 8);
  uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
  if (v22) {
    uint64_t v23 = (uint64_t *)*v23;
  }
  sub_1881DF4((std::string **)(a1 + 64), v21, v23);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_35;
    }
    goto LABEL_32;
  }
LABEL_29:
  int v24 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v25 = *(void *)(a1 + 8);
  uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
  if (v25) {
    uint64_t v26 = (uint64_t *)*v26;
  }
  sub_1881DF4((std::string **)(a1 + 72), v24, v26);
  if ((v4 & 0x80) != 0)
  {
LABEL_32:
    int v27 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v28 = *(void *)(a1 + 8);
    int v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      int v29 = (uint64_t *)*v29;
    }
    sub_1881DF4((std::string **)(a1 + 80), v27, v29);
  }
LABEL_35:
  if ((v4 & 0x7F00) == 0) {
    goto LABEL_45;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v31 = *(void *)(a1 + 88);
    if (!v31)
    {
      uint64_t v32 = *(void *)(a1 + 8);
      unsigned int v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        unsigned int v33 = (void *)*v33;
      }
      uint64_t v31 = sub_15C1918((uint64_t)v33);
      *(void *)(a1 + 88) = v31;
    }
    if (*(void *)(a2 + 88)) {
      int v34 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      int v34 = &off_253F1A0;
    }
    sub_15B0E24(v31, (uint64_t)v34);
    if ((v4 & 0x200) == 0)
    {
LABEL_38:
      if ((v4 & 0x400) == 0) {
        goto LABEL_39;
      }
      goto LABEL_65;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_38;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v35 = *(std::string **)(a1 + 96);
  if (!v35)
  {
    uint64_t v36 = *(void *)(a1 + 8);
    int v37 = (void *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
    if (v36) {
      int v37 = (void *)*v37;
    }
    uint64_t v35 = (std::string *)sub_178CE04((uint64_t)v37);
    *(void *)(a1 + 96) = v35;
  }
  if (*(void *)(a2 + 96)) {
    uint64_t v38 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    uint64_t v38 = &off_2548768;
  }
  sub_1764A74(v35, (uint64_t)v38);
  if ((v4 & 0x400) == 0)
  {
LABEL_39:
    if ((v4 & 0x800) == 0) {
      goto LABEL_40;
    }
    goto LABEL_73;
  }
LABEL_65:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  unsigned int v39 = *(std::string **)(a1 + 104);
  if (!v39)
  {
    uint64_t v40 = *(void *)(a1 + 8);
    uint64_t v41 = (void *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
    if (v40) {
      uint64_t v41 = (void *)*v41;
    }
    unsigned int v39 = (std::string *)sub_12BBB40((uint64_t)v41);
    *(void *)(a1 + 104) = v39;
  }
  if (*(void *)(a2 + 104)) {
    uint64_t v42 = *(uint64_t (****)())(a2 + 104);
  }
  else {
    uint64_t v42 = &off_2530888;
  }
  sub_117DA78(v39, (uint64_t)v42);
  if ((v4 & 0x800) == 0)
  {
LABEL_40:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_81;
  }
LABEL_73:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v43 = *(std::string **)(a1 + 112);
  if (!v43)
  {
    uint64_t v44 = *(void *)(a1 + 8);
    uint64_t v45 = (void *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
    if (v44) {
      uint64_t v45 = (void *)*v45;
    }
    sub_15127EC((uint64_t)v45);
    *(void *)(a1 + 112) = v43;
  }
  if (*(void *)(a2 + 112)) {
    uint64_t v46 = *(uint64_t (****)())(a2 + 112);
  }
  else {
    uint64_t v46 = &off_253C5F0;
  }
  sub_1512230(v43, (uint64_t)v46);
  if ((v4 & 0x1000) == 0)
  {
LABEL_41:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_42;
    }
LABEL_82:
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    if ((v4 & 0x4000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_43;
  }
LABEL_81:
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  if ((v4 & 0x2000) != 0) {
    goto LABEL_82;
  }
LABEL_42:
  if ((v4 & 0x4000) != 0) {
LABEL_43:
  }
    *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
LABEL_44:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_45:
  uint64_t v30 = *(void *)(a2 + 8);
  if (v30)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v30 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1651D98(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 17) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 88));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1651DC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.GlobalACResult");
}

void *sub_1651DD4(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1651E58((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1651E58(uint64_t a1)
{
  unint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  uint64_t result = (void ***)(a1 + 80);
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_25424E0)
  {
    if (*(void *)(a1 + 88))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 96))
    {
      sub_1764400();
      operator delete();
    }
    if (*(void *)(a1 + 104))
    {
      sub_12A0FF0();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 112);
    if (result)
    {
      sub_15101E0((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_1651FC8(void *a1)
{
  sub_1651DD4(a1);

  operator delete();
}

uint64_t sub_1652000(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v50 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v50, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v50 + 1);
    unsigned int v9 = **(unsigned char **)v50;
    if ((char)**(unsigned char **)v50 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v50, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v50 + 2);
      }
    }
    *(void *)uint64_t v50 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_84;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 24);
        goto LABEL_57;
      case 2u:
        if (v9 != 18) {
          goto LABEL_84;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 32);
        goto LABEL_57;
      case 3u:
        if (v9 != 26) {
          goto LABEL_84;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 40);
        goto LABEL_57;
      case 4u:
        if (v9 != 34) {
          goto LABEL_84;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 48);
        goto LABEL_57;
      case 5u:
        if (v9 != 42) {
          goto LABEL_84;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v18 = *(void *)(a1 + 88);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_15C1918((uint64_t)v19);
          *(void *)(a1 + 88) = v18;
          unint64_t v8 = *(unsigned __int8 **)v50;
        }
        uint64_t v20 = (uint64_t)sub_1198F14(a3, v18, v8);
        goto LABEL_58;
      case 6u:
        if (v9 != 48) {
          goto LABEL_84;
        }
        v5 |= 0x1000u;
        uint64_t v21 = (char *)(v8 + 1);
        uint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v44 = sub_188C138((uint64_t)v8, v22);
          *(void *)uint64_t v50 = v44;
          *(void *)(a1 + 120) = v45;
          if (!v44) {
            goto LABEL_100;
          }
        }
        else
        {
          uint64_t v21 = (char *)(v8 + 2);
LABEL_35:
          *(void *)uint64_t v50 = v21;
          *(void *)(a1 + 120) = v22;
        }
        goto LABEL_59;
      case 7u:
        if (v9 != 56) {
          goto LABEL_84;
        }
        v5 |= 0x2000u;
        int v24 = (char *)(v8 + 1);
        uint64_t v25 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v8, v25);
          *(void *)uint64_t v50 = v46;
          *(void *)(a1 + 128) = v47;
          if (!v46) {
            goto LABEL_100;
          }
        }
        else
        {
          int v24 = (char *)(v8 + 2);
LABEL_40:
          *(void *)uint64_t v50 = v24;
          *(void *)(a1 + 128) = v25;
        }
        goto LABEL_59;
      case 8u:
        if (v9 != 66) {
          goto LABEL_84;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 56);
        goto LABEL_57;
      case 9u:
        if (v9 != 74) {
          goto LABEL_84;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v28 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 64);
        goto LABEL_57;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_84;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v29 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 72);
        goto LABEL_57;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_84;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v30 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 80);
LABEL_57:
        uint64_t v31 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v20 = (uint64_t)sub_188C244(v31, *(char **)v50, (uint64_t)a3);
        goto LABEL_58;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_84;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v32 = *(void *)(a1 + 96);
        if (!v32)
        {
          unsigned int v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v33 = (void *)*v33;
          }
          uint64_t v32 = sub_178CE04((uint64_t)v33);
          *(void *)(a1 + 96) = v32;
          unint64_t v8 = *(unsigned __int8 **)v50;
        }
        uint64_t v20 = (uint64_t)sub_1317850(a3, v32, v8);
        goto LABEL_58;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_84;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v34 = *(void *)(a1 + 104);
        if (!v34)
        {
          uint64_t v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v35 = (void *)*v35;
          }
          uint64_t v34 = sub_12BBB40((uint64_t)v35);
          *(void *)(a1 + 104) = v34;
          unint64_t v8 = *(unsigned __int8 **)v50;
        }
        uint64_t v20 = sub_120AA94(a3, v34, v8);
        goto LABEL_58;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_84;
        }
        v5 |= 0x4000u;
        int v37 = (char *)(v8 + 1);
        LODWORD(v36) = *v8;
        if ((v36 & 0x80) == 0) {
          goto LABEL_77;
        }
        int v38 = *v37;
        uint64_t v36 = v36 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v48 = sub_188C138((uint64_t)v8, v36);
          *(void *)uint64_t v50 = v48;
          *(_DWORD *)(a1 + 136) = v49;
          if (!v48) {
            goto LABEL_100;
          }
        }
        else
        {
          int v37 = (char *)(v8 + 2);
LABEL_77:
          *(void *)uint64_t v50 = v37;
          *(_DWORD *)(a1 + 136) = v36;
        }
        goto LABEL_59;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_84;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        uint64_t v39 = *(void *)(a1 + 112);
        if (!v39)
        {
          uint64_t v40 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v40 = (void *)*v40;
          }
          sub_15127EC((uint64_t)v40);
          uint64_t v39 = v41;
          *(void *)(a1 + 112) = v41;
          unint64_t v8 = *(unsigned __int8 **)v50;
        }
        uint64_t v20 = sub_12C8A40(a3, v39, v8);
        goto LABEL_58;
      default:
LABEL_84:
        if (v9) {
          BOOL v42 = (v9 & 7) == 4;
        }
        else {
          BOOL v42 = 1;
        }
        if (!v42)
        {
          if (*v7)
          {
            uint64_t v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v50;
          }
          uint64_t v20 = (uint64_t)sub_1885AC0(v9, v43, (char *)v8, a3);
LABEL_58:
          *(void *)uint64_t v50 = v20;
          if (!v20) {
            goto LABEL_100;
          }
LABEL_59:
          if (sub_11947B8((uint64_t)a3, (char **)v50, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_100:
        }
          *(void *)uint64_t v50 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v50;
    }
  }
}

char *sub_16525CC(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0)
  {
LABEL_6:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_18;
  }
LABEL_12:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 88);
  char *v4 = 42;
  unsigned int v8 = *(_DWORD *)(v7 + 44);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  int v4 = sub_15B0C0C(v7, v9, a3);
  if ((v6 & 0x1000) != 0)
  {
LABEL_18:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 120);
    char *v4 = 48;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_24:
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 128);
    char *v4 = 56;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    int v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x20) == 0)
    {
LABEL_33:
      if ((v6 & 0x40) == 0) {
        goto LABEL_34;
      }
      goto LABEL_41;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_33;
  }
  int v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_34:
    if ((v6 & 0x80) == 0) {
      goto LABEL_35;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_35:
    if ((v6 & 0x200) == 0) {
      goto LABEL_36;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0)
  {
LABEL_36:
    if ((v6 & 0x400) == 0) {
      goto LABEL_37;
    }
    goto LABEL_49;
  }
LABEL_43:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 96);
  char *v4 = 98;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  int v4 = sub_1764760(v16, (unint64_t)v18, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_37:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_55;
  }
LABEL_49:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 104);
  char *v4 = 106;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  int v4 = sub_12A12FC(v19, v21, a3);
  if ((v6 & 0x4000) != 0)
  {
LABEL_55:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 136);
    char *v4 = 112;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_61:
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 112);
    char *v4 = 122;
    unsigned int v26 = *(_DWORD *)(v25 + 20);
    v4[1] = v26;
    if (v26 > 0x7F) {
      uint64_t v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      uint64_t v27 = v4 + 2;
    }
    int v4 = sub_151138C(v25, v27, a3);
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    uint64_t v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    uint64_t v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_1652ABC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_21;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v13 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_36;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v16 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_36:
  unint64_t v19 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
  uint64_t v21 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    uint64_t v21 = v20;
  }
  v3 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_42;
  }
LABEL_39:
  unint64_t v22 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v3 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_18;
  }
LABEL_42:
  unint64_t v25 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
  uint64_t v27 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    uint64_t v27 = v26;
  }
  v3 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_18:
    unint64_t v10 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_21:
  if ((v2 & 0x7F00) == 0) {
    goto LABEL_56;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v28 = sub_15B0D90(*(void *)(a1 + 88));
    v3 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_24:
      if ((v2 & 0x400) == 0) {
        goto LABEL_25;
      }
      goto LABEL_48;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v29 = sub_1764968(*(void *)(a1 + 96));
  v3 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x400) == 0)
  {
LABEL_25:
    if ((v2 & 0x800) == 0) {
      goto LABEL_26;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t v30 = sub_12A1464(*(void *)(a1 + 104));
  v3 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x800) == 0)
  {
LABEL_26:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t v31 = sub_1511D64(*(void *)(a1 + 112));
  v3 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x1000) == 0)
  {
LABEL_27:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_51;
  }
LABEL_50:
  v3 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x2000) == 0)
  {
LABEL_28:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_52;
  }
LABEL_51:
  v3 += ((9 * (__clz(*(void *)(a1 + 128) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x4000) == 0) {
    goto LABEL_56;
  }
LABEL_52:
  int v32 = *(_DWORD *)(a1 + 136);
  if (v32 < 0) {
    uint64_t v33 = 11;
  }
  else {
    uint64_t v33 = ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v33;
LABEL_56:
  uint64_t v34 = *(void *)(a1 + 8);
  if (v34)
  {
    unint64_t v36 = v34 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v36 + 31) < 0) {
      uint64_t v37 = *(void *)(v36 + 16);
    }
    else {
      uint64_t v37 = *(unsigned __int8 *)(v36 + 31);
    }
    v3 += v37;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_1652ECC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.AutoCompleteResult");
}

uint64_t sub_1652EDC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2542570 && *(void *)(a1 + 96))
  {
    sub_1495E9C();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_124F76C((void *)(a1 + 72));
  sub_149EC7C((void *)(a1 + 48));
  sub_124FA8C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1652FB8(uint64_t a1)
{
  sub_1652EDC(a1);

  operator delete();
}

char *sub_1652FF0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v45 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v45, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v45 + 1;
    unsigned int v9 = *v45;
    if (*v45 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v45, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v45 + 2;
      }
    }
    uint64_t v45 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_55;
        }
        v5 |= 4u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v45 = v12;
          *(unsigned char *)(a1 + 112) = v13 != 0;
          goto LABEL_63;
        }
        uint64_t v41 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v45 = v41;
        *(unsigned char *)(a1 + 112) = v42 != 0;
        if (v41) {
          goto LABEL_63;
        }
        goto LABEL_72;
      case 2u:
        if (v9 != 16) {
          goto LABEL_55;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v43 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v45 = v43;
          *(void *)(a1 + 104) = v44;
          if (!v43) {
            goto LABEL_72;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v45 = v15;
          *(void *)(a1 + 104) = v16;
        }
        goto LABEL_63;
      case 3u:
        if (v9 != 26) {
          goto LABEL_55;
        }
        uint64_t v18 = v8 - 1;
        while (1)
        {
          unint64_t v19 = (unsigned __int8 *)(v18 + 1);
          uint64_t v45 = v18 + 1;
          uint64_t v20 = *(_DWORD **)(a1 + 40);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 32) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            sub_1653A3C(*(void *)(a1 + 24));
            uint64_t v22 = sub_188CDC8(a1 + 24, v23);
            unint64_t v19 = (unsigned __int8 *)v45;
          }
          uint64_t v18 = (char *)sub_124C5EC(a3, v22, v19);
          uint64_t v45 = v18;
          if (!v18) {
            goto LABEL_72;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
            goto LABEL_63;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_55;
        }
        uint64_t v24 = v8 - 1;
        while (1)
        {
          unint64_t v25 = (unsigned __int8 *)(v24 + 1);
          uint64_t v45 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 64);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 56), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 56) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_14984AC(*(void *)(a1 + 48));
            uint64_t v28 = sub_188CDC8(a1 + 48, v29);
            unint64_t v25 = (unsigned __int8 *)v45;
          }
          uint64_t v24 = (char *)sub_14977C8(a3, v28, v25);
          uint64_t v45 = v24;
          if (!v24) {
            goto LABEL_72;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 34) {
            goto LABEL_63;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v30 = *(void *)(a1 + 96);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_1497018((uint64_t)v31);
          *(void *)(a1 + 96) = v30;
          uint64_t v8 = v45;
        }
        int v32 = (char *)sub_11920F8(a3, v30, (unsigned __int8 *)v8);
        goto LABEL_62;
      case 6u:
        if (v9 != 50) {
          goto LABEL_55;
        }
        uint64_t v33 = v8 - 1;
        while (1)
        {
          uint64_t v34 = (unsigned __int8 *)(v33 + 1);
          uint64_t v45 = v33 + 1;
          uint64_t v35 = *(_DWORD **)(a1 + 88);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 80), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 80) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            int v38 = sub_16640A4(*(void *)(a1 + 72));
            uint64_t v37 = sub_188CDC8(a1 + 72, (uint64_t)v38);
            uint64_t v34 = (unsigned __int8 *)v45;
          }
          uint64_t v33 = (char *)sub_124C4CC(a3, v37, v34);
          uint64_t v45 = v33;
          if (!v33) {
            goto LABEL_72;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 50) {
            goto LABEL_63;
          }
        }
      default:
LABEL_55:
        if (v9) {
          BOOL v39 = (v9 & 7) == 4;
        }
        else {
          BOOL v39 = 1;
        }
        if (!v39)
        {
          if (*v7)
          {
            uint64_t v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v45;
          }
          int v32 = (char *)sub_1885AC0(v9, v40, v8, a3);
LABEL_62:
          uint64_t v45 = v32;
          if (!v32) {
            goto LABEL_72;
          }
LABEL_63:
          if (sub_11947B8((uint64_t)a3, &v45, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_72:
        }
          uint64_t v45 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v45;
    }
  }
}

char *sub_1653430(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 112);
    char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(void *)(a1 + 104);
    char *v4 = 16;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v11 = *(_DWORD *)(a1 + 32);
  if (v11)
  {
    for (int i = 0; i != v11; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      v4[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, v4 + 1);
      }
      else {
        uint64_t v15 = v4 + 2;
      }
      unint64_t v4 = sub_16525CC(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int j = 0; j != v16; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      unint64_t v4 = sub_14981DC(v18, (unint64_t)v20, a3);
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 96);
    char *v4 = 42;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    v4[1] = v22;
    if (v22 > 0x7F) {
      uint64_t v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      uint64_t v23 = v4 + 2;
    }
    unint64_t v4 = sub_1496514(v21, v23, a3);
  }
  int v24 = *(_DWORD *)(a1 + 80);
  if (v24)
  {
    for (int k = 0; k != v24; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      char *v4 = 50;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      v4[1] = v27;
      if (v27 > 0x7F) {
        uint64_t v28 = sub_188A9CC(v27, v4 + 1);
      }
      else {
        uint64_t v28 = v4 + 2;
      }
      unint64_t v4 = sub_166392C(v26, v28, a3);
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    int v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    int v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_1653798(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1652ABC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1498324(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1663A18(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 7) != 0)
  {
    if (v22)
    {
      uint64_t v23 = sub_1496860(*(void *)(a1 + 96));
      v16 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v22 & 2) != 0) {
      v16 += ((9 * (__clz(*(void *)(a1 + 104) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v22 & 4) != 0) {
      v16 += 2;
    }
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if (v24)
  {
    unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v26 + 31) < 0) {
      uint64_t v27 = *(void *)(v26 + 16);
    }
    else {
      uint64_t v27 = *(unsigned __int8 *)(v26 + 31);
    }
    v16 += v27;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void *sub_1653954@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.AutoCompleteCounterfactual");
}

uint64_t sub_1653964(uint64_t a1)
{
  if (!a1)
  {
    sub_1664AF8();
  }

  return sub_164C328(v3, a1, 0);
}

uint64_t sub_16539C0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24CC090;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1653A3C(uint64_t a1)
{
  if (!a1)
  {
    sub_1664B64();
  }
  *(void *)uint64_t v3 = &off_24CC110;
  *(void *)(v3 + 8) = a1;
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = &qword_2550250;
  *(void *)(v3 + 32) = &qword_2550250;
  *(void *)(v3 + 40) = &qword_2550250;
  *(void *)(v3 + 48) = &qword_2550250;
  *(void *)(v3 + 56) = &qword_2550250;
  *(void *)(v3 + 64) = &qword_2550250;
  *(void *)(v3 + 72) = &qword_2550250;
  *(void *)(v3 + 80) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v3 + 88) = 0u;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_DWORD *)(v3 + 136) = 0;
  return result;
}

uint64_t sub_1653ACC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24CC190;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(unsigned char *)(result + 112) = 0;
  return result;
}

uint64_t sub_1653B7C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1653C48(uint64_t a1)
{
  sub_1653B7C(a1);

  operator delete();
}

uint64_t sub_1653C80(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
LABEL_17:
  if ((v1 & 0xF8) != 0)
  {
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 69) = 0;
    *(void *)(a1 + 64) = 0;
  }
  if ((v1 & 0x300) != 0)
  {
    *(void *)(a1 + 80) = 0;
    *(_DWORD *)(a1 + 88) = -1;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1653D60(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v49 + 1);
    unsigned int v9 = **(unsigned char **)v49;
    if ((char)**(unsigned char **)v49 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v49, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v49 + 2);
      }
    }
    *(void *)int v49 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_52;
        }
        v5 |= 8u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)int v49 = v12;
          *(void *)(a1 + 48) = v13;
          goto LABEL_60;
        }
        uint64_t v39 = sub_188C138((uint64_t)v8, v13);
        *(void *)int v49 = v39;
        *(void *)(a1 + 48) = v40;
        if (v39) {
          goto LABEL_60;
        }
        goto LABEL_75;
      case 2u:
        if (v9 != 18) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_51;
      case 3u:
        if (v9 != 25) {
          goto LABEL_52;
        }
        uint64_t v19 = *(void *)v8;
        uint64_t v18 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 56) = v19;
        goto LABEL_46;
      case 4u:
        if (v9 != 32) {
          goto LABEL_52;
        }
        v5 |= 0x20u;
        uint64_t v20 = v8 + 1;
        uint64_t v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v41 = sub_188C138((uint64_t)v8, v21);
          *(void *)int v49 = v41;
          *(void *)(a1 + 64) = v42;
          if (!v41) {
            goto LABEL_75;
          }
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_24:
          *(void *)int v49 = v20;
          *(void *)(a1 + 64) = v21;
        }
        goto LABEL_60;
      case 5u:
        if (v9 != 40) {
          goto LABEL_52;
        }
        v5 |= 0x40u;
        uint64_t v24 = v8 + 1;
        LODWORD(v23) = *v8;
        if ((v23 & 0x80) == 0) {
          goto LABEL_29;
        }
        int v25 = *v24;
        uint64_t v23 = v23 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v43 = sub_188C138((uint64_t)v8, v23);
          *(void *)int v49 = v43;
          *(_DWORD *)(a1 + 72) = v44;
          if (!v43) {
            goto LABEL_75;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_29:
          *(void *)int v49 = v24;
          *(_DWORD *)(a1 + 72) = v23;
        }
        goto LABEL_60;
      case 6u:
        if (v9 != 48) {
          goto LABEL_52;
        }
        v5 |= 0x200u;
        uint64_t v27 = v8 + 1;
        LODWORD(v26) = *v8;
        if ((v26 & 0x80) == 0) {
          goto LABEL_34;
        }
        int v28 = *v27;
        uint64_t v26 = v26 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v45 = sub_188C138((uint64_t)v8, v26);
          *(void *)int v49 = v45;
          *(_DWORD *)(a1 + 88) = v46;
          if (!v45) {
            goto LABEL_75;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_34:
          *(void *)int v49 = v27;
          *(_DWORD *)(a1 + 88) = v26;
        }
        goto LABEL_60;
      case 7u:
        if (v9 != 58) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v29 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_51;
      case 8u:
        if (v9 != 64) {
          goto LABEL_52;
        }
        v5 |= 0x80u;
        uint64_t v30 = v8 + 1;
        uint64_t v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v47 = sub_188C138((uint64_t)v8, v31);
          *(void *)int v49 = v47;
          *(unsigned char *)(a1 + 76) = v48 != 0;
          if (!v47) {
            goto LABEL_75;
          }
        }
        else
        {
          uint64_t v30 = v8 + 2;
LABEL_43:
          *(void *)int v49 = v30;
          *(unsigned char *)(a1 + 76) = v31 != 0;
        }
        goto LABEL_60;
      case 9u:
        if (v9 != 73) {
          goto LABEL_52;
        }
        uint64_t v33 = *(void *)v8;
        uint64_t v18 = v8 + 8;
        v5 |= 0x100u;
        *(void *)(a1 + 80) = v33;
LABEL_46:
        *(void *)int v49 = v18;
        goto LABEL_60;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v34 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
        if (v34) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 40);
LABEL_51:
        uint64_t v35 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v36 = (void *)sub_188C244(v35, *(char **)v49, (uint64_t)a3);
        goto LABEL_59;
      default:
LABEL_52:
        if (v9) {
          BOOL v37 = (v9 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v7)
          {
            int v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v49;
          }
          uint64_t v36 = sub_1885AC0(v9, v38, v8, a3);
LABEL_59:
          *(void *)int v49 = v36;
          if (!v36) {
            goto LABEL_75;
          }
LABEL_60:
          if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_75:
        }
          *(void *)int v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v49;
    }
  }
}

unsigned char *sub_16541B0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x10) == 0)
    {
LABEL_10:
      if ((v6 & 0x20) == 0) {
        goto LABEL_22;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  unsigned char *v4 = 25;
  *(void *)(v4 + 1) = v10;
  v4 += 9;
  if ((v6 & 0x20) != 0)
  {
LABEL_16:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(void *)(a1 + 64);
    unsigned char *v4 = 32;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_22:
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(int *)(a1 + 72);
    unsigned char *v4 = 40;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v17 = *(int *)(a1 + 88);
    unsigned char *v4 = 48;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    unint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x80) == 0)
    {
LABEL_38:
      if ((v6 & 0x100) == 0) {
        goto LABEL_39;
      }
      goto LABEL_47;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_38;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v22 = *(unsigned char *)(a1 + 76);
  unsigned char *v4 = 64;
  v4[1] = v22;
  v4 += 2;
  if ((v6 & 0x100) == 0)
  {
LABEL_39:
    if ((v6 & 4) == 0) {
      goto LABEL_41;
    }
    goto LABEL_40;
  }
LABEL_47:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v23 = *(void *)(a1 + 80);
  unsigned char *v4 = 73;
  *(void *)(v4 + 1) = v23;
  v4 += 9;
  if ((v6 & 4) != 0) {
LABEL_40:
  }
    unint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_41:
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    int v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    int v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_1654570(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0;
    goto LABEL_30;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v11 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if ((v1 & 8) != 0) {
LABEL_14:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_15:
  if ((v1 & 0x10) != 0) {
    v2 += 9;
  }
  if ((v1 & 0x20) != 0) {
    v2 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if ((v1 & 0x40) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 72);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
  if ((v1 & 0x80) != 0) {
    v2 += 2;
  }
LABEL_30:
  if ((v1 & 0x300) != 0)
  {
    if ((v1 & 0x100) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x200) != 0)
    {
      int v14 = *(_DWORD *)(a1 + 88);
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v14 >= 0) {
        uint64_t v16 = v15;
      }
      else {
        uint64_t v16 = 11;
      }
      v2 += v16;
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v2 += v20;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1654774(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_31;
    }
LABEL_28:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_32;
    }
LABEL_31:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_33;
    }
LABEL_32:
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_34;
    }
LABEL_33:
    v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      v3[3].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 76);
      goto LABEL_11;
    }
LABEL_34:
    LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x300) != 0)
  {
    if ((v4 & 0x100) != 0) {
      v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
    }
    if ((v4 & 0x200) != 0) {
      LODWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1654910()
{
  return 1;
}

void *sub_1654918@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.UserAction");
}

uint64_t sub_1654928(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25425E8 && *(void *)(a1 + 32))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16549F4(uint64_t a1)
{
  sub_1654928(a1);

  operator delete();
}

unsigned char *sub_1654A2C(unsigned char *result)
{
  int v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_15B09D0(*((void *)result + 4));
  }
LABEL_7:
  if ((v2 & 0xC) != 0) {
    *((void *)v1 + 5) = 0;
  }
  char v5 = v1[8];
  int v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1654ACC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v30, (uint64_t)a3);
        goto LABEL_36;
      case 2u:
        if (v9 != 16) {
          goto LABEL_29;
        }
        v5 |= 4u;
        uint64_t v17 = (char *)(v8 + 1);
        LODWORD(v16) = *v8;
        if ((v16 & 0x80) == 0) {
          goto LABEL_17;
        }
        int v18 = *v17;
        uint64_t v16 = v16 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v8, v16);
          *(void *)uint64_t v30 = v26;
          *(_DWORD *)(a1 + 40) = v27;
          if (!v26) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v17 = (char *)(v8 + 2);
LABEL_17:
          *(void *)uint64_t v30 = v17;
          *(_DWORD *)(a1 + 40) = v16;
        }
        goto LABEL_37;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 8u;
        uint64_t v20 = (char *)(v8 + 1);
        LODWORD(v19) = *v8;
        if ((v19 & 0x80) == 0) {
          goto LABEL_22;
        }
        int v21 = *v20;
        uint64_t v19 = v19 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v30 = v28;
          *(_DWORD *)(a1 + 44) = v29;
          if (!v28) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v20 = (char *)(v8 + 2);
LABEL_22:
          *(void *)uint64_t v30 = v20;
          *(_DWORD *)(a1 + 44) = v19;
        }
        goto LABEL_37;
      case 4u:
        if (v9 != 34) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 32);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_15C1918((uint64_t)v23);
          *(void *)(a1 + 32) = v22;
          uint64_t v8 = *(unsigned __int8 **)v30;
        }
        uint64_t v15 = sub_1198F14(a3, v22, v8);
        goto LABEL_36;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            int v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v30;
          }
          uint64_t v15 = sub_1885AC0(v9, v25, (char *)v8, a3);
LABEL_36:
          *(void *)uint64_t v30 = v15;
          if (!v15) {
            goto LABEL_46;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_46:
        }
          *(void *)uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

char *sub_1654D7C(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    char *v4 = 34;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    int v4 = sub_15B0C0C(v13, v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1654FA4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_21;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_21;
    }
    goto LABEL_17;
  }
  int v8 = *(_DWORD *)(a1 + 40);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v9;
  if ((v2 & 8) != 0)
  {
LABEL_17:
    int v10 = *(_DWORD *)(a1 + 44);
    if (v10 < 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v11;
  }
LABEL_21:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1655100(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_165512C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.SuggestionSelect");
}

uint64_t sub_165513C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if ((uint64_t (***)())a1 != &off_2542618 && *(void *)(a1 + 56))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_165524C(uint64_t a1)
{
  sub_165513C(a1);

  operator delete();
}

unsigned char *sub_1655284(unsigned char *result)
{
  int v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_16:
    unint64_t v6 = *((void *)result + 4) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_20;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
  unint64_t v5 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_20:
  unint64_t v7 = *((void *)result + 5) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_24;
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_24:
  unint64_t v8 = *((void *)result + 6) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v8 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t result = sub_15B09D0(*((void *)result + 7));
    goto LABEL_8;
  }
  **(unsigned char **)unint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  if ((v2 & 0x10) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((void *)v3 + 7) = 0;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_16553C0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v29 + 1);
    unsigned int v9 = **(unsigned char **)v29;
    if ((char)**(unsigned char **)v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v29 + 2);
      }
    }
    *(void *)int v29 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_40;
        }
        v5 |= 0x20u;
        uint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)int v29 = v12;
          *(void *)(a1 + 64) = v13;
          goto LABEL_38;
        }
        uint64_t v27 = sub_188C138((uint64_t)v8, v13);
        *(void *)int v29 = v27;
        *(void *)(a1 + 64) = v28;
        if (v27) {
          goto LABEL_38;
        }
        goto LABEL_52;
      case 2u:
        if (v9 != 18) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_36;
      case 3u:
        if (v9 != 26) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_36;
      case 4u:
        if (v9 != 34) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 40);
        goto LABEL_36;
      case 5u:
        if (v9 != 42) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_15C1918((uint64_t)v21);
          *(void *)(a1 + 56) = v20;
          unint64_t v8 = *(unsigned __int8 **)v29;
        }
        uint64_t v22 = sub_1198F14(a3, v20, v8);
        goto LABEL_37;
      case 6u:
        if (v9 != 50) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 48);
LABEL_36:
        BOOL v24 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v22 = (void *)sub_188C244(v24, *(char **)v29, (uint64_t)a3);
        goto LABEL_37;
      default:
LABEL_40:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v29;
          }
          uint64_t v22 = sub_1885AC0(v9, v26, (char *)v8, a3);
LABEL_37:
          *(void *)int v29 = v22;
          if (!v22) {
            goto LABEL_52;
          }
LABEL_38:
          if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          *(void *)int v29 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v29;
    }
  }
}

char *sub_16556DC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 64);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_12:
    if ((v6 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 56);
  char *v4 = 42;
  unsigned int v13 = *(_DWORD *)(v12 + 44);
  v4[1] = v13;
  if (v13 > 0x7F) {
    int v14 = sub_188A9CC(v13, v4 + 1);
  }
  else {
    int v14 = v4 + 2;
  }
  char v4 = sub_15B0C0C(v12, v14, a3);
  if ((v6 & 8) != 0) {
LABEL_13:
  }
    char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1655908(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_17;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v12 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_25;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v15 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v3 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_25:
  uint64_t v18 = sub_15B0D90(*(void *)(a1 + 56));
  v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0) {
LABEL_16:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_17:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v19 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v3 += v20;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1655AF4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 32), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_20:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 8);
    unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 40), v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
LABEL_23:
    uint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 48), v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      goto LABEL_9;
    }
LABEL_26:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v19 = *(void *)(a1 + 56);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v19 = sub_15C1918((uint64_t)v21);
      *(void *)(a1 + 56) = v19;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v22 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v22 = &off_253F1A0;
    }
    sub_15B0E24(v19, (uint64_t)v22);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1655CAC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1655CD8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.AddressResult");
}

uint64_t sub_1655CE8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 112);
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2542660)
  {
    if (*(void *)(a1 + 120))
    {
      sub_1495E9C();
      operator delete();
    }
    if (*(void *)(a1 + 128))
    {
      sub_1764400();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_124F76C((void *)(a1 + 88));
  sub_149EC7C((void *)(a1 + 64));
  sub_1889DA8(a1 + 48);
  sub_124F5EC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1655E00(uint64_t a1)
{
  sub_1655CE8(a1);

  operator delete();
}

uint64_t sub_1655E38(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*(void *)(result + 40) + 8);
    do
    {
      int v4 = *v3++;
      uint64_t result = (uint64_t)sub_1655284(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  *(_DWORD *)(v1 + 48) = 0;
  uint64_t v5 = *(unsigned int *)(v1 + 72);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 80) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1497FB8(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 72) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 96);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 104) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_1663708(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 96) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if ((v11 & 7) == 0) {
    goto LABEL_18;
  }
  if ((v11 & 1) == 0)
  {
    if ((v11 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v14 + 23) < 0)
  {
    **(unsigned char **)unint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    if ((v11 & 2) != 0) {
      goto LABEL_30;
    }
LABEL_16:
    if ((v11 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  *(unsigned char *)unint64_t v14 = 0;
  *(unsigned char *)(v14 + 23) = 0;
  if ((v11 & 2) == 0) {
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_1495118(*(void *)(v1 + 120));
  if ((v11 & 4) != 0) {
LABEL_17:
  }
    uint64_t result = sub_176443C(*(void *)(v1 + 128));
LABEL_18:
  if ((v11 & 0xF8) != 0)
  {
    *(void *)(v1 + 136) = 0;
    *(void *)(v1 + 144) = 0;
  }
  if ((v11 & 0x300) != 0)
  {
    *(_DWORD *)(v1 + 160) = 0;
    *(void *)(v1 + 152) = 0;
  }
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_1655F88(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v81 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v81, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v80 = (uint64_t *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = (unsigned __int8 *)(*(void *)v81 + 1);
      unsigned int v8 = **(unsigned char **)v81;
      if ((char)**(unsigned char **)v81 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if ((char)*v7 < 0)
        {
          uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v81, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = (unsigned __int8 *)(*(void *)v81 + 2);
        }
      }
      *(void *)uint64_t v81 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_120;
          }
          v5 |= 0x20u;
          int v11 = (char *)(v7 + 1);
          uint64_t v12 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v13 = *v11;
          uint64_t v12 = v12 + (v13 << 7) - 128;
          if ((v13 & 0x80000000) == 0)
          {
            int v11 = (char *)(v7 + 2);
LABEL_13:
            *(void *)uint64_t v81 = v11;
            *(unsigned char *)(a1 + 144) = v12 != 0;
            goto LABEL_128;
          }
          uint64_t v64 = sub_188C138((uint64_t)v7, v12);
          *(void *)uint64_t v81 = v64;
          *(unsigned char *)(a1 + 144) = v65 != 0;
          if (!v64) {
            goto LABEL_133;
          }
          goto LABEL_128;
        case 2u:
          if (v8 != 16) {
            goto LABEL_120;
          }
          v5 |= 8u;
          unint64_t v14 = (char *)(v7 + 1);
          int v15 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_18;
          }
          int v16 = *v14;
          int v15 = v15 + (v16 << 7) - 128;
          if (v16 < 0)
          {
            uint64_t v66 = sub_188C0D0((uint64_t)v7, v15);
            *(void *)uint64_t v81 = v66;
            *(_DWORD *)(a1 + 136) = v67;
            if (!v66) {
              goto LABEL_133;
            }
          }
          else
          {
            unint64_t v14 = (char *)(v7 + 2);
LABEL_18:
            *(void *)uint64_t v81 = v14;
            *(_DWORD *)(a1 + 136) = v15;
          }
          goto LABEL_128;
        case 3u:
          if (v8 != 24) {
            goto LABEL_120;
          }
          v5 |= 0x10u;
          uint64_t v17 = (char *)(v7 + 1);
          int v18 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_23;
          }
          int v19 = *v17;
          int v18 = v18 + (v19 << 7) - 128;
          if (v19 < 0)
          {
            uint64_t v68 = sub_188C0D0((uint64_t)v7, v18);
            *(void *)uint64_t v81 = v68;
            *(_DWORD *)(a1 + 140) = v69;
            if (!v68) {
              goto LABEL_133;
            }
          }
          else
          {
            uint64_t v17 = (char *)(v7 + 2);
LABEL_23:
            *(void *)uint64_t v81 = v17;
            *(_DWORD *)(a1 + 140) = v18;
          }
          goto LABEL_128;
        case 4u:
          if (v8 != 34) {
            goto LABEL_120;
          }
          uint64_t v20 = v7 - 1;
          while (1)
          {
            uint64_t v21 = v20 + 1;
            *(void *)uint64_t v81 = v20 + 1;
            uint64_t v22 = *(_DWORD **)(a1 + 40);
            if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
            {
              *(_DWORD *)(a1 + 32) = v23 + 1;
              uint64_t v24 = *(void *)&v22[2 * v23 + 2];
            }
            else
            {
              BOOL v25 = sub_1662AB8(*(void *)(a1 + 24));
              uint64_t v24 = sub_188CDC8(a1 + 24, (uint64_t)v25);
              uint64_t v21 = *(unsigned __int8 **)v81;
            }
            uint64_t v20 = (unsigned __int8 *)sub_124C31C(a3, v24, v21);
            *(void *)uint64_t v81 = v20;
            if (!v20) {
              goto LABEL_133;
            }
            if (*(void *)a3 <= (unint64_t)v20 || *v20 != 34) {
              goto LABEL_128;
            }
          }
        case 5u:
          if (v8 == 40)
          {
            uint64_t v26 = v7 - 1;
            while (1)
            {
              *(void *)uint64_t v81 = v26 + 1;
              uint64_t v27 = v26[1];
              if ((char)v26[1] < 0)
              {
                int v28 = v27 + (v26[2] << 7);
                uint64_t v27 = (v28 - 128);
                if ((char)v26[2] < 0)
                {
                  uint64_t v26 = (unsigned __int8 *)sub_188C138((uint64_t)(v26 + 1), (v28 - 128));
                  uint64_t v27 = v29;
                }
                else
                {
                  v26 += 3;
                }
              }
              else
              {
                v26 += 2;
              }
              *(void *)uint64_t v81 = v26;
              uint64_t v30 = *(unsigned int *)(a1 + 48);
              if (v30 == *(_DWORD *)(a1 + 52))
              {
                int v31 = v30 + 1;
                sub_188CA54((unsigned int *)(a1 + 48), v30 + 1);
                *(void *)(*(void *)(a1 + 56) + 8 * v30) = v27;
                uint64_t v26 = *(unsigned __int8 **)v81;
              }
              else
              {
                *(void *)(*(void *)(a1 + 56) + 8 * v30) = v27;
                int v31 = v30 + 1;
              }
              *(_DWORD *)(a1 + 48) = v31;
              if (!v26) {
                goto LABEL_133;
              }
              if (*(void *)a3 <= (unint64_t)v26 || *v26 != 40) {
                goto LABEL_128;
              }
            }
          }
          if (v8 == 42)
          {
            uint64_t v44 = (uint64_t)sub_188C2EC((unsigned int *)(a1 + 48), v7, (uint64_t)a3);
          }
          else
          {
LABEL_120:
            if (v8) {
              BOOL v78 = (v8 & 7) == 4;
            }
            else {
              BOOL v78 = 1;
            }
            if (v78)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                goto LABEL_2;
              }
LABEL_133:
              *(void *)uint64_t v81 = 0;
              goto LABEL_2;
            }
            if (*v80)
            {
              uint64_t v79 = (std::string *)((*v80 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v79 = (std::string *)sub_188DBD8(v80);
              uint64_t v7 = *(unsigned __int8 **)v81;
            }
            uint64_t v44 = (uint64_t)sub_1885AC0(v8, v79, (char *)v7, a3);
          }
LABEL_127:
          *(void *)uint64_t v81 = v44;
          if (!v44) {
            goto LABEL_133;
          }
LABEL_128:
          if (sub_11947B8((uint64_t)a3, (char **)v81, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 6u:
          if (v8 != 48) {
            goto LABEL_120;
          }
          v5 |= 0x80u;
          uint64_t v33 = (char *)(v7 + 1);
          LODWORD(v32) = *v7;
          if ((v32 & 0x80) == 0) {
            goto LABEL_52;
          }
          int v34 = *v33;
          uint64_t v32 = v32 + (v34 << 7) - 128;
          if (v34 < 0)
          {
            uint64_t v70 = sub_188C138((uint64_t)v7, v32);
            *(void *)uint64_t v81 = v70;
            *(_DWORD *)(a1 + 148) = v71;
            if (!v70) {
              goto LABEL_133;
            }
          }
          else
          {
            uint64_t v33 = (char *)(v7 + 2);
LABEL_52:
            *(void *)uint64_t v81 = v33;
            *(_DWORD *)(a1 + 148) = v32;
          }
          goto LABEL_128;
        case 7u:
          if (v8 != 56) {
            goto LABEL_120;
          }
          v5 |= 0x40u;
          uint64_t v35 = (char *)(v7 + 1);
          uint64_t v36 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_57;
          }
          int v37 = *v35;
          uint64_t v36 = v36 + (v37 << 7) - 128;
          if (v37 < 0)
          {
            uint64_t v72 = sub_188C138((uint64_t)v7, v36);
            *(void *)uint64_t v81 = v72;
            *(unsigned char *)(a1 + 145) = v73 != 0;
            if (!v72) {
              goto LABEL_133;
            }
          }
          else
          {
            uint64_t v35 = (char *)(v7 + 2);
LABEL_57:
            *(void *)uint64_t v81 = v35;
            *(unsigned char *)(a1 + 145) = v36 != 0;
          }
          goto LABEL_128;
        case 8u:
          if (v8 != 64) {
            goto LABEL_120;
          }
          v5 |= 0x200u;
          int v38 = (char *)(v7 + 1);
          int v39 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_62;
          }
          int v40 = *v38;
          int v39 = v39 + (v40 << 7) - 128;
          if (v40 < 0)
          {
            uint64_t v74 = sub_188C0D0((uint64_t)v7, v39);
            *(void *)uint64_t v81 = v74;
            *(_DWORD *)(a1 + 160) = v75;
            if (!v74) {
              goto LABEL_133;
            }
          }
          else
          {
            int v38 = (char *)(v7 + 2);
LABEL_62:
            *(void *)uint64_t v81 = v38;
            *(_DWORD *)(a1 + 160) = v39;
          }
          goto LABEL_128;
        case 9u:
          if (v8 != 74) {
            goto LABEL_120;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v41 = *(void *)(a1 + 8);
          uint64_t v42 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
          if (v41) {
            uint64_t v42 = (uint64_t *)*v42;
          }
          uint64_t v43 = (std::string *)sub_1880F84((void *)(a1 + 112), v42);
          uint64_t v44 = (uint64_t)sub_188C244(v43, *(char **)v81, (uint64_t)a3);
          goto LABEL_127;
        case 0xAu:
          if (v8 != 82) {
            goto LABEL_120;
          }
          uint64_t v45 = v7 - 1;
          while (1)
          {
            int v46 = v45 + 1;
            *(void *)uint64_t v81 = v45 + 1;
            uint64_t v47 = *(_DWORD **)(a1 + 80);
            if (v47 && (uint64_t v48 = *(int *)(a1 + 72), (int)v48 < *v47))
            {
              *(_DWORD *)(a1 + 72) = v48 + 1;
              uint64_t v49 = *(void *)&v47[2 * v48 + 2];
            }
            else
            {
              uint64_t v50 = sub_14984AC(*(void *)(a1 + 64));
              uint64_t v49 = sub_188CDC8(a1 + 64, v50);
              int v46 = *(unsigned __int8 **)v81;
            }
            uint64_t v45 = (unsigned __int8 *)sub_14977C8(a3, v49, v46);
            *(void *)uint64_t v81 = v45;
            if (!v45) {
              goto LABEL_133;
            }
            if (*(void *)a3 <= (unint64_t)v45 || *v45 != 82) {
              goto LABEL_128;
            }
          }
        case 0xBu:
          if (v8 != 90) {
            goto LABEL_120;
          }
          unsigned int v51 = v7 - 1;
          while (1)
          {
            unint64_t v52 = v51 + 1;
            *(void *)uint64_t v81 = v51 + 1;
            uint64_t v53 = *(_DWORD **)(a1 + 104);
            if (v53 && (uint64_t v54 = *(int *)(a1 + 96), (int)v54 < *v53))
            {
              *(_DWORD *)(a1 + 96) = v54 + 1;
              uint64_t v55 = *(void *)&v53[2 * v54 + 2];
            }
            else
            {
              uint64_t v56 = sub_16640A4(*(void *)(a1 + 88));
              uint64_t v55 = sub_188CDC8(a1 + 88, (uint64_t)v56);
              unint64_t v52 = *(unsigned __int8 **)v81;
            }
            unsigned int v51 = (unsigned __int8 *)sub_124C4CC(a3, v55, v52);
            *(void *)uint64_t v81 = v51;
            if (!v51) {
              goto LABEL_133;
            }
            if (*(void *)a3 <= (unint64_t)v51 || *v51 != 90) {
              goto LABEL_128;
            }
          }
        case 0xCu:
          if (v8 != 98) {
            goto LABEL_120;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v57 = *(void *)(a1 + 120);
          if (!v57)
          {
            int v58 = (void *)(*v80 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v80) {
              int v58 = (void *)*v58;
            }
            uint64_t v57 = sub_1497018((uint64_t)v58);
            *(void *)(a1 + 120) = v57;
            uint64_t v7 = *(unsigned __int8 **)v81;
          }
          uint64_t v44 = sub_11920F8(a3, v57, v7);
          goto LABEL_127;
        case 0xDu:
          if (v8 != 104) {
            goto LABEL_120;
          }
          v5 |= 0x100u;
          uint64_t v59 = (char *)(v7 + 1);
          uint64_t v60 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_97;
          }
          int v61 = *v59;
          uint64_t v60 = v60 + (v61 << 7) - 128;
          if (v61 < 0)
          {
            uint64_t v76 = sub_188C138((uint64_t)v7, v60);
            *(void *)uint64_t v81 = v76;
            *(void *)(a1 + 152) = v77;
            if (!v76) {
              goto LABEL_133;
            }
          }
          else
          {
            uint64_t v59 = (char *)(v7 + 2);
LABEL_97:
            *(void *)uint64_t v81 = v59;
            *(void *)(a1 + 152) = v60;
          }
          goto LABEL_128;
        case 0xEu:
          if (v8 != 114) {
            goto LABEL_120;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v62 = *(void *)(a1 + 128);
          if (!v62)
          {
            int v63 = (void *)(*v80 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v80) {
              int v63 = (void *)*v63;
            }
            uint64_t v62 = sub_178CE04((uint64_t)v63);
            *(void *)(a1 + 128) = v62;
            uint64_t v7 = *(unsigned __int8 **)v81;
          }
          uint64_t v44 = (uint64_t)sub_1317850(a3, v62, v7);
          goto LABEL_127;
        default:
          goto LABEL_120;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v81;
}

unsigned char *sub_165674C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 144);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v8 = *(_DWORD *)(a1 + 136);
    unsigned char *v4 = 16;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unsigned int v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v11 = *(_DWORD *)(a1 + 140);
    unsigned char *v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unsigned int v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v14 = *(_DWORD *)(a1 + 32);
  if (v14)
  {
    for (int i = 0; i != v14; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      v4[1] = v17;
      if (v17 > 0x7F) {
        int v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        int v18 = v4 + 2;
      }
      int v4 = sub_16556DC(v16, (unint64_t)v18, a3);
    }
  }
  uint64_t v19 = *(unsigned int *)(a1 + 48);
  if ((int)v19 >= 1)
  {
    for (uint64_t j = 0; j != v19; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v21 = *(void *)(*(void *)(a1 + 56) + 8 * j);
      unsigned char *v4 = 40;
      v4[1] = v21;
      if (v21 > 0x7F)
      {
        v4[1] = v21 | 0x80;
        unint64_t v22 = v21 >> 7;
        v4[2] = v21 >> 7;
        v4 += 3;
        if (v21 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v23 = v22 >> 14;
            v22 >>= 7;
            *v4++ = v22;
          }
          while (v23);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(int *)(a1 + 148);
    unsigned char *v4 = 48;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v27 = *(unsigned char *)(a1 + 145);
    unsigned char *v4 = 56;
    v4[1] = v27;
    v4 += 2;
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 160);
    unsigned char *v4 = 64;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v31 = *(_DWORD *)(a1 + 72);
  if (v31)
  {
    for (int k = 0; k != v31; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      unsigned char *v4 = 82;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      v4[1] = v34;
      if (v34 > 0x7F) {
        uint64_t v35 = sub_188A9CC(v34, v4 + 1);
      }
      else {
        uint64_t v35 = v4 + 2;
      }
      int v4 = sub_14981DC(v33, (unint64_t)v35, a3);
    }
  }
  int v36 = *(_DWORD *)(a1 + 96);
  if (v36)
  {
    for (int m = 0; m != v36; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 104) + 8 * m + 8);
      unsigned char *v4 = 90;
      unsigned int v39 = *(_DWORD *)(v38 + 20);
      v4[1] = v39;
      if (v39 > 0x7F) {
        int v40 = sub_188A9CC(v39, v4 + 1);
      }
      else {
        int v40 = v4 + 2;
      }
      int v4 = sub_166392C(v38, v40, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v41 = *(void *)(a1 + 120);
    unsigned char *v4 = 98;
    unsigned int v42 = *(_DWORD *)(v41 + 20);
    v4[1] = v42;
    if (v42 > 0x7F) {
      uint64_t v43 = sub_188A9CC(v42, v4 + 1);
    }
    else {
      uint64_t v43 = v4 + 2;
    }
    int v4 = sub_1496514(v41, v43, a3);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v44 = *(void *)(a1 + 152);
    unsigned char *v4 = 104;
    v4[1] = v44;
    if (v44 > 0x7F)
    {
      v4[1] = v44 | 0x80;
      unint64_t v45 = v44 >> 7;
      v4[2] = v44 >> 7;
      v4 += 3;
      if (v44 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v46 = v45 >> 14;
          v45 >>= 7;
          *v4++ = v45;
        }
        while (v46);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v47 = *(void *)(a1 + 128);
    unsigned char *v4 = 114;
    unsigned int v48 = *(_DWORD *)(v47 + 20);
    v4[1] = v48;
    if (v48 > 0x7F) {
      uint64_t v49 = sub_188A9CC(v48, v4 + 1);
    }
    else {
      uint64_t v49 = v4 + 2;
    }
    int v4 = sub_1764760(v47, (unint64_t)v49, a3);
  }
  uint64_t v50 = *(void *)(a1 + 8);
  if ((v50 & 1) == 0) {
    return v4;
  }
  unint64_t v52 = v50 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v52 + 31) < 0)
  {
    uint64_t v53 = *(void **)(v52 + 8);
    uint64_t v54 = *(void *)(v52 + 16);
  }
  else
  {
    uint64_t v53 = (void *)(v52 + 8);
    LODWORD(v54) = *(unsigned __int8 *)(v52 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v54)
  {
    uint64_t v55 = (int)v54;
    memcpy(v4, v53, (int)v54);
    v4 += v55;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v53, v54, v4);
}

uint64_t sub_1656DFC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1655908(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = sub_188D5A8((unsigned int *)(a1 + 48));
  uint64_t v9 = *(int *)(a1 + 72);
  uint64_t v10 = v8 + v2 + *(unsigned int *)(a1 + 48) + v9;
  uint64_t v11 = *(void *)(a1 + 80);
  if (v11) {
    unsigned int v12 = (uint64_t *)(v11 + 8);
  }
  else {
    unsigned int v12 = 0;
  }
  if (v9)
  {
    uint64_t v13 = 8 * v9;
    do
    {
      uint64_t v14 = *v12++;
      uint64_t v15 = sub_1498324(v14);
      v10 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      v13 -= 8;
    }
    while (v13);
  }
  uint64_t v16 = *(int *)(a1 + 96);
  uint64_t v17 = v10 + v16;
  uint64_t v18 = *(void *)(a1 + 104);
  if (v18) {
    uint64_t v19 = (uint64_t *)(v18 + 8);
  }
  else {
    uint64_t v19 = 0;
  }
  if (v16)
  {
    uint64_t v20 = 8 * v16;
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = sub_1663A18(v21);
      v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      v20 -= 8;
    }
    while (v20);
  }
  int v23 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v23)
  {
    if (v23)
    {
      unint64_t v30 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
      uint64_t v32 = *(void *)(v30 + 8);
      if ((v31 & 0x80u) == 0) {
        uint64_t v32 = v31;
      }
      v17 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v23 & 2) == 0)
      {
LABEL_24:
        if ((v23 & 4) == 0) {
          goto LABEL_25;
        }
        goto LABEL_49;
      }
    }
    else if ((v23 & 2) == 0)
    {
      goto LABEL_24;
    }
    uint64_t v33 = sub_1496860(*(void *)(a1 + 120));
    v17 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 4) == 0)
    {
LABEL_25:
      if ((v23 & 8) == 0) {
        goto LABEL_26;
      }
      goto LABEL_50;
    }
LABEL_49:
    uint64_t v34 = sub_1764968(*(void *)(a1 + 128));
    v17 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 8) == 0)
    {
LABEL_26:
      if ((v23 & 0x10) == 0)
      {
LABEL_28:
        uint64_t v24 = v17 + 2;
        if ((v23 & 0x20) == 0) {
          uint64_t v24 = v17;
        }
        if ((v23 & 0x40) != 0) {
          uint64_t v17 = v24 + 2;
        }
        else {
          uint64_t v17 = v24;
        }
        if ((v23 & 0x80) != 0)
        {
          int v25 = *(_DWORD *)(a1 + 148);
          uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
          if (v25 >= 0) {
            uint64_t v27 = v26;
          }
          else {
            uint64_t v27 = 11;
          }
          v17 += v27;
        }
        goto LABEL_38;
      }
LABEL_27:
      v17 += ((9 * (__clz(*(_DWORD *)(a1 + 140) | 1) ^ 0x1F) + 73) >> 6) + 1;
      goto LABEL_28;
    }
LABEL_50:
    v17 += ((9 * (__clz(*(_DWORD *)(a1 + 136) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_38:
  if ((v23 & 0x300) != 0)
  {
    if ((v23 & 0x100) != 0) {
      v17 += ((9 * (__clz(*(void *)(a1 + 152) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v23 & 0x200) != 0) {
      v17 += ((9 * (__clz(*(_DWORD *)(a1 + 160) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if (v28)
  {
    unint64_t v35 = v28 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v35 + 31) < 0) {
      uint64_t v36 = *(void *)(v35 + 16);
    }
    else {
      uint64_t v36 = *(unsigned __int8 *)(v35 + 31);
    }
    v17 += v36;
  }
  *(_DWORD *)(a1 + 20) = v17;
  return v17;
}

void sub_1657114(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_124F7EC((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 48);
    sub_188CA54((unsigned int *)(a1 + 48), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v11 + 8 * v10), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 72);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v14 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_149ECFC((uint64_t *)(a1 + 64), v14, v13, v12, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v15 = *(_DWORD *)(a1 + 72) + v12;
    *(_DWORD *)(a1 + 72) = v15;
    uint64_t v16 = *(int **)(a1 + 80);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  int v17 = *(_DWORD *)(a2 + 96);
  if (v17)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    uint64_t v19 = (std::string **)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_124F990((std::string *)(a1 + 88), v19, v18, v17, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v20 = *(_DWORD *)(a1 + 96) + v17;
    *(_DWORD *)(a1 + 96) = v20;
    uint64_t v21 = *(int **)(a1 + 104);
    if (*v21 < v20) {
      int *v21 = v20;
    }
  }
  int v22 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v22)
  {
    if (v22)
    {
      uint64_t v24 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (uint64_t *)*v26;
      }
      sub_1881DF4((std::string **)(a1 + 112), v24, v26);
      if ((v22 & 2) == 0)
      {
LABEL_15:
        if ((v22 & 4) == 0) {
          goto LABEL_16;
        }
        goto LABEL_44;
      }
    }
    else if ((v22 & 2) == 0)
    {
      goto LABEL_15;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v27 = *(std::string **)(a1 + 120);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      unsigned int v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        unsigned int v29 = (void *)*v29;
      }
      uint64_t v27 = (std::string *)sub_1497018((uint64_t)v29);
      *(void *)(a1 + 120) = v27;
    }
    if (*(void *)(a2 + 120)) {
      unint64_t v30 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      unint64_t v30 = &off_253A070;
    }
    sub_1495A3C(v27, (uint64_t)v30);
    if ((v22 & 4) == 0)
    {
LABEL_16:
      if ((v22 & 8) == 0) {
        goto LABEL_17;
      }
      goto LABEL_52;
    }
LABEL_44:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v31 = *(std::string **)(a1 + 128);
    if (!v31)
    {
      uint64_t v32 = *(void *)(a1 + 8);
      uint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        uint64_t v33 = (void *)*v33;
      }
      uint64_t v31 = (std::string *)sub_178CE04((uint64_t)v33);
      *(void *)(a1 + 128) = v31;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v34 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v34 = &off_2548768;
    }
    sub_1764A74(v31, (uint64_t)v34);
    if ((v22 & 8) == 0)
    {
LABEL_17:
      if ((v22 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_53;
    }
LABEL_52:
    *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
    if ((v22 & 0x10) == 0)
    {
LABEL_18:
      if ((v22 & 0x20) == 0) {
        goto LABEL_19;
      }
      goto LABEL_54;
    }
LABEL_53:
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    if ((v22 & 0x20) == 0)
    {
LABEL_19:
      if ((v22 & 0x40) == 0) {
        goto LABEL_20;
      }
      goto LABEL_55;
    }
LABEL_54:
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    if ((v22 & 0x40) == 0)
    {
LABEL_20:
      if ((v22 & 0x80) == 0)
      {
LABEL_22:
        *(_DWORD *)(a1 + 16) |= v22;
        goto LABEL_23;
      }
LABEL_21:
      *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
      goto LABEL_22;
    }
LABEL_55:
    *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
    if ((v22 & 0x80) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_23:
  if ((v22 & 0x300) != 0)
  {
    if ((v22 & 0x100) != 0) {
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
    }
    if ((v22 & 0x200) != 0) {
      *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
    }
    *(_DWORD *)(a1 + 16) |= v22;
  }
  uint64_t v23 = *(void *)(a2 + 8);
  if (v23)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v23 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_165745C(uint64_t a1)
{
  return sub_1276150(a1 + 24);
}

void *sub_1657464@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.CounterFactualResult");
}

uint64_t sub_1657474(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1657534(uint64_t a1)
{
  sub_1657474(a1);

  operator delete();
}

uint64_t sub_165756C(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  if ((v3 & 0xC) != 0)
  {
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1657634(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    int v9 = (char *)(*(void *)v31 + 1);
    unsigned int v10 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        int v9 = (char *)sub_188C180(*(uint64_t *)v31, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        int v15 = (void *)(a1 + 48);
        goto LABEL_17;
      case 2u:
        if (v10 != 18) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        int v15 = (void *)(a1 + 56);
LABEL_17:
        int v17 = (std::string *)sub_1880F84(v15, v14);
        uint64_t v18 = (void *)sub_188C244(v17, *(char **)v31, (uint64_t)a3);
        goto LABEL_42;
      case 3u:
        if (v10 != 25) {
          goto LABEL_35;
        }
        uint64_t v20 = *(void *)v9;
        uint64_t v19 = v9 + 8;
        v5 |= 4u;
        *(void *)(a1 + 64) = v20;
        goto LABEL_22;
      case 4u:
        if (v10 != 33) {
          goto LABEL_35;
        }
        uint64_t v21 = *(void *)v9;
        uint64_t v19 = v9 + 8;
        v5 |= 8u;
        *(void *)(a1 + 72) = v21;
LABEL_22:
        *(void *)uint64_t v31 = v19;
        goto LABEL_43;
      case 5u:
        if (v10 != 42) {
          goto LABEL_35;
        }
        int v22 = v9 - 1;
        while (1)
        {
          uint64_t v23 = (char *)(v22 + 1);
          *(void *)uint64_t v31 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(std::string **)&v24[2 * v25 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v28 = v27;
            v28[1] = sub_3A6EDC;
            *uint64_t v27 = 0;
            v27[1] = 0;
            int v27[2] = 0;
            uint64_t v26 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v27);
            uint64_t v23 = *(char **)v31;
          }
          int v22 = sub_188C244(v26, v23, (uint64_t)a3);
          *(void *)uint64_t v31 = v22;
          if (!v22) {
            goto LABEL_48;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 42) {
            goto LABEL_43;
          }
        }
      default:
LABEL_35:
        if (v10) {
          BOOL v29 = (v10 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v8)
          {
            unint64_t v30 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(char **)v31;
          }
          uint64_t v18 = sub_1885AC0(v10, v30, v9, a3);
LABEL_42:
          *(void *)uint64_t v31 = v18;
          if (!v18) {
            goto LABEL_48;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_48:
        }
          *(void *)uint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

char *sub_1657948(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }
LABEL_8:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 64);
  char *v4 = 25;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 8) != 0)
  {
LABEL_11:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 72);
    char *v4 = 33;
    *(void *)(v4 + 1) = v8;
    v4 += 9;
  }
LABEL_14:
  uint64_t v9 = *(unsigned int *)(a1 + 32);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 8 * v9;
    do
    {
      unsigned int v12 = *(void **)(*(void *)(a1 + 40) + v10 + 8);
      if (*((char *)v12 + 23) < 0)
      {
        int64_t v13 = v12[1];
        if (v13 > 127) {
          goto LABEL_25;
        }
      }
      else
      {
        int64_t v13 = *((unsigned __int8 *)v12 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v13)
      {
        char *v4 = 42;
        v4[1] = v13;
        if (*((char *)v12 + 23) < 0) {
          unsigned int v12 = (void *)*v12;
        }
        uint64_t v14 = v4 + 2;
        memcpy(v14, v12, v13);
        unint64_t v4 = &v14[v13];
        goto LABEL_23;
      }
LABEL_25:
      unint64_t v4 = (char *)sub_188A868(a3, 5, (uint64_t)v12, v4);
LABEL_23:
      v10 += 8;
    }
    while (v11 != v10);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_1657B74(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 0xF) != 0)
  {
    if (v7)
    {
      unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 2) != 0)
    {
      unint64_t v11 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 4) != 0) {
      v3 += 9;
    }
    if ((v7 & 8) != 0) {
      v3 += 9;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1657CB8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_21;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_21:
    v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1657E30()
{
  return 1;
}

void *sub_1657E38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.QueryConversion");
}

uint64_t sub_1657E48(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1657F08(uint64_t a1)
{
  sub_1657E48(a1);

  operator delete();
}

uint64_t sub_1657F40(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  if ((v3 & 0xC) != 0)
  {
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1658008(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (uint64_t **)(a1 + 24);
  unint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    int v9 = (char *)(*(void *)v33 + 1);
    unsigned int v10 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        int v9 = (char *)sub_188C180(*(uint64_t *)v33, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_37;
        }
        v5 |= 4u;
        uint64_t v13 = v9 + 1;
        uint64_t v14 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        uint64_t v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          uint64_t v13 = v9 + 2;
LABEL_13:
          *(void *)uint64_t v33 = v13;
          *(void *)(a1 + 64) = v14;
          goto LABEL_45;
        }
        uint64_t v31 = sub_188C138((uint64_t)v9, v14);
        *(void *)uint64_t v33 = v31;
        *(void *)(a1 + 64) = v32;
        if (v31) {
          goto LABEL_45;
        }
        goto LABEL_52;
      case 2u:
        if (v10 != 18) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 48);
        goto LABEL_22;
      case 3u:
        if (v10 != 26) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 56);
LABEL_22:
        uint64_t v20 = (std::string *)sub_1880F84(v18, v17);
        uint64_t v21 = (void *)sub_188C244(v20, *(char **)v33, (uint64_t)a3);
        goto LABEL_44;
      case 4u:
        if (v10 != 33) {
          goto LABEL_37;
        }
        v5 |= 8u;
        *(void *)(a1 + 72) = *(void *)v9;
        *(void *)uint64_t v33 = v9 + 8;
        goto LABEL_45;
      case 5u:
        if (v10 != 42) {
          goto LABEL_37;
        }
        int v22 = v9 - 1;
        while (1)
        {
          uint64_t v23 = (char *)(v22 + 1);
          *(void *)uint64_t v33 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(std::string **)&v24[2 * v25 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v28 = v27;
            v28[1] = sub_3A6EDC;
            *uint64_t v27 = 0;
            v27[1] = 0;
            int v27[2] = 0;
            uint64_t v26 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v27);
            uint64_t v23 = *(char **)v33;
          }
          int v22 = sub_188C244(v26, v23, (uint64_t)a3);
          *(void *)uint64_t v33 = v22;
          if (!v22) {
            goto LABEL_52;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 42) {
            goto LABEL_45;
          }
        }
      default:
LABEL_37:
        if (v10) {
          BOOL v29 = (v10 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v8)
          {
            unint64_t v30 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(char **)v33;
          }
          uint64_t v21 = sub_1885AC0(v10, v30, v9, a3);
LABEL_44:
          *(void *)uint64_t v33 = v21;
          if (!v21) {
            goto LABEL_52;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_52:
        }
          *(void *)uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

char *sub_165835C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 64);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_17;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_17;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 72);
  char *v4 = 33;
  *(void *)(v4 + 1) = v10;
  v4 += 9;
LABEL_17:
  uint64_t v11 = *(unsigned int *)(a1 + 32);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 8 * v11;
    do
    {
      uint64_t v14 = *(void **)(*(void *)(a1 + 40) + v12 + 8);
      if (*((char *)v14 + 23) < 0)
      {
        int64_t v15 = v14[1];
        if (v15 > 127) {
          goto LABEL_28;
        }
      }
      else
      {
        int64_t v15 = *((unsigned __int8 *)v14 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v15)
      {
        char *v4 = 42;
        v4[1] = v15;
        if (*((char *)v14 + 23) < 0) {
          uint64_t v14 = (void *)*v14;
        }
        uint64_t v16 = v4 + 2;
        memcpy(v16, v14, v15);
        unint64_t v4 = &v16[v15];
        goto LABEL_26;
      }
LABEL_28:
      unint64_t v4 = (char *)sub_188A868(a3, 5, (uint64_t)v14, v4);
LABEL_26:
      v12 += 8;
    }
    while (v13 != v12);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_16585C8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 0xF) != 0)
  {
    if (v7)
    {
      unint64_t v10 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v7 & 2) == 0)
      {
LABEL_11:
        if ((v7 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_12;
      }
    }
    else if ((v7 & 2) == 0)
    {
      goto LABEL_11;
    }
    unint64_t v13 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 4) == 0) {
      goto LABEL_13;
    }
LABEL_12:
    v3 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_13:
    if ((v7 & 8) != 0) {
      v3 += 9;
    }
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v16 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1658730(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_21;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_21:
    v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16588A8()
{
  return 1;
}

void *sub_16588B0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.GuideItemConversions");
}

uint64_t sub_16588C0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1664BDC((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1658974(uint64_t a1)
{
  sub_16588C0(a1);

  operator delete();
}

uint64_t sub_16589AC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1657F40(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
  if ((v6 & 0xE) != 0)
  {
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 96) = 0;
  }
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = a1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_1658A74(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v42 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    char v9 = (char *)(*(void *)v42 + 1);
    unsigned int v10 = **(unsigned char **)v42;
    if ((char)**(unsigned char **)v42 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        char v9 = (char *)sub_188C180(*(uint64_t *)v42, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        char v9 = (char *)(*(void *)v42 + 2);
      }
    }
    *(void *)unsigned int v42 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_47;
        }
        v5 |= 2u;
        unint64_t v13 = v9 + 1;
        uint64_t v14 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        uint64_t v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          unint64_t v13 = v9 + 2;
LABEL_13:
          *(void *)unsigned int v42 = v13;
          *(void *)(a1 + 80) = v14;
          goto LABEL_55;
        }
        uint64_t v38 = sub_188C138((uint64_t)v9, v14);
        *(void *)unsigned int v42 = v38;
        *(void *)(a1 + 80) = v39;
        if (v38) {
          goto LABEL_55;
        }
        goto LABEL_64;
      case 2u:
        if (v10 != 16) {
          goto LABEL_47;
        }
        v5 |= 4u;
        unint64_t v16 = v9 + 1;
        uint64_t v17 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v40 = sub_188C138((uint64_t)v9, v17);
          *(void *)unsigned int v42 = v40;
          *(void *)(a1 + 88) = v41;
          if (!v40) {
            goto LABEL_64;
          }
        }
        else
        {
          unint64_t v16 = v9 + 2;
LABEL_18:
          *(void *)unsigned int v42 = v16;
          *(void *)(a1 + 88) = v17;
        }
        goto LABEL_55;
      case 3u:
        if (v10 != 26) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (std::string *)sub_1880F84((void *)(a1 + 72), v20);
        uint64_t v22 = (void *)sub_188C244(v21, *(char **)v42, (uint64_t)a3);
        goto LABEL_54;
      case 4u:
        if (v10 != 33) {
          goto LABEL_47;
        }
        v5 |= 8u;
        *(void *)(a1 + 96) = *(void *)v9;
        *(void *)unsigned int v42 = v9 + 8;
        goto LABEL_55;
      case 5u:
        if (v10 != 42) {
          goto LABEL_47;
        }
        uint64_t v23 = v9 - 1;
        while (1)
        {
          uint64_t v24 = (char *)(v23 + 1);
          *(void *)unsigned int v42 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 40);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 32), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 32) = v26 + 1;
            uint64_t v27 = *(std::string **)&v25[2 * v26 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *BOOL v29 = v28;
            v29[1] = sub_3A6EDC;
            void *v28 = 0;
            v28[1] = 0;
            v28[2] = 0;
            uint64_t v27 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v28);
            uint64_t v24 = *(char **)v42;
          }
          uint64_t v23 = sub_188C244(v27, v24, (uint64_t)a3);
          *(void *)unsigned int v42 = v23;
          if (!v23) {
            goto LABEL_64;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 42) {
            goto LABEL_55;
          }
        }
      case 6u:
        if (v10 != 50) {
          goto LABEL_47;
        }
        unint64_t v30 = v9 - 1;
        while (1)
        {
          uint64_t v31 = (unsigned __int8 *)(v30 + 1);
          *(void *)unsigned int v42 = v30 + 1;
          uint64_t v32 = *(_DWORD **)(a1 + 64);
          if (v32 && (uint64_t v33 = *(int *)(a1 + 56), (int)v33 < *v32))
          {
            *(_DWORD *)(a1 + 56) = v33 + 1;
            uint64_t v34 = *(void *)&v32[2 * v33 + 2];
          }
          else
          {
            unint64_t v35 = sub_1662CB8(*(void *)(a1 + 48));
            uint64_t v34 = sub_188CDC8(a1 + 48, (uint64_t)v35);
            uint64_t v31 = *(unsigned __int8 **)v42;
          }
          unint64_t v30 = (char *)sub_1658E80(a3, v34, v31);
          *(void *)unsigned int v42 = v30;
          if (!v30) {
            goto LABEL_64;
          }
          if (*(void *)a3 <= (unint64_t)v30 || *v30 != 50) {
            goto LABEL_55;
          }
        }
      default:
LABEL_47:
        if (v10) {
          BOOL v36 = (v10 & 7) == 4;
        }
        else {
          BOOL v36 = 1;
        }
        if (!v36)
        {
          if (*v8)
          {
            int v37 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v9 = *(char **)v42;
          }
          uint64_t v22 = sub_1885AC0(v10, v37, v9, a3);
LABEL_54:
          *(void *)unsigned int v42 = v22;
          if (!v22) {
            goto LABEL_64;
          }
LABEL_55:
          if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_64:
        }
          *(void *)unsigned int v42 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v42;
    }
  }
}

uint64_t sub_1658E80(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1658008(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1658F10(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 80);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 88);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 96);
    char *v4 = 33;
    *(void *)(v4 + 1) = v13;
    v4 += 9;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 32);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 8 * v14;
    do
    {
      uint64_t v17 = *(void **)(*(void *)(a1 + 40) + v15 + 8);
      if (*((char *)v17 + 23) < 0)
      {
        int64_t v18 = v17[1];
        if (v18 > 127) {
          goto LABEL_32;
        }
      }
      else
      {
        int64_t v18 = *((unsigned __int8 *)v17 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v18)
      {
        char *v4 = 42;
        v4[1] = v18;
        if (*((char *)v17 + 23) < 0) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v19 = v4 + 2;
        memcpy(v19, v17, v18);
        int v4 = &v19[v18];
        goto LABEL_30;
      }
LABEL_32:
      int v4 = (char *)sub_188A868(a3, 5, (uint64_t)v17, v4);
LABEL_30:
      v15 += 8;
    }
    while (v16 != v15);
  }
  int v20 = *(_DWORD *)(a1 + 56);
  if (v20)
  {
    for (int i = 0; i != v20; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v22 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 50;
      unsigned int v23 = *(_DWORD *)(v22 + 20);
      v4[1] = v23;
      if (v23 > 0x7F) {
        uint64_t v24 = sub_188A9CC(v23, v4 + 1);
      }
      else {
        uint64_t v24 = v4 + 2;
      }
      int v4 = sub_165835C(v22, (unint64_t)v24, a3);
    }
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_1659250(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_16585C8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0xF) != 0)
  {
    if (v15)
    {
      unint64_t v18 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      v9 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 2) == 0)
      {
LABEL_17:
        if ((v15 & 4) == 0) {
          goto LABEL_19;
        }
        goto LABEL_18;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_17;
    }
    v9 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0)
    {
LABEL_19:
      if ((v15 & 8) != 0) {
        v9 += 9;
      }
      goto LABEL_21;
    }
LABEL_18:
    v9 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
    goto LABEL_19;
  }
LABEL_21:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v21 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v9 += v22;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_165940C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_1664E5C(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0xF) != 0)
  {
    if (v14)
    {
      uint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_22;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0)
      {
LABEL_13:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
        goto LABEL_14;
      }
LABEL_12:
      v3[4].__r_.__value_.__r.__words[0] = *(void *)(a2 + 96);
      goto LABEL_13;
    }
LABEL_22:
    v3[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
    if ((v14 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16595C0()
{
  return 1;
}

void *sub_16595C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.GuideConversions");
}

uint64_t sub_16595D8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_1664C5C((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16596B8(uint64_t a1)
{
  sub_16595D8(a1);

  operator delete();
}

uint64_t sub_16596F0(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16589AC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 7) != 0)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v6 & 4) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v6 & 4) == 0) {
          goto LABEL_21;
        }
      }
      goto LABEL_18;
    }
    unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_14;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_21;
    }
LABEL_18:
    unint64_t v9 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
    }
  }
LABEL_21:
  if ((v6 & 0x38) != 0)
  {
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
    *(void *)(a1 + 112) = 0;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_165982C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (uint64_t **)(a1 + 24);
  unsigned int v42 = (uint64_t *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v43 + 1);
    unsigned int v9 = **(unsigned char **)v43;
    if ((char)**(unsigned char **)v43 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v43, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v43 + 2);
      }
    }
    *(void *)uint64_t v43 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_54;
        }
        v5 |= 8u;
        int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v43 = v12;
          *(void *)(a1 + 96) = v13;
          goto LABEL_62;
        }
        uint64_t v40 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v43 = v40;
        *(void *)(a1 + 96) = v41;
        if (v40) {
          goto LABEL_62;
        }
        goto LABEL_69;
      case 2u:
        if (v9 != 18) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 72);
        goto LABEL_26;
      case 3u:
        if (v9 != 26) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 80);
        goto LABEL_26;
      case 4u:
        if (v9 != 34) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 88);
LABEL_26:
        uint64_t v20 = (std::string *)sub_1880F84(v17, v16);
        unint64_t v21 = (void *)sub_188C244(v20, *(char **)v43, (uint64_t)a3);
        goto LABEL_61;
      case 5u:
        if (v9 != 41) {
          goto LABEL_54;
        }
        uint64_t v23 = *(void *)v8;
        uint64_t v22 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 104) = v23;
        goto LABEL_31;
      case 6u:
        if (v9 != 49) {
          goto LABEL_54;
        }
        uint64_t v24 = *(void *)v8;
        uint64_t v22 = v8 + 8;
        v5 |= 0x20u;
        *(void *)(a1 + 112) = v24;
LABEL_31:
        *(void *)uint64_t v43 = v22;
        goto LABEL_62;
      case 7u:
        if (v9 != 58) {
          goto LABEL_54;
        }
        uint64_t v25 = v8 - 1;
        while (1)
        {
          uint64_t v26 = (char *)(v25 + 1);
          *(void *)uint64_t v43 = v25 + 1;
          unint64_t v27 = *(_DWORD **)(a1 + 40);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 32), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 32) = v28 + 1;
            uint64_t v29 = *(std::string **)&v27[2 * v28 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v31 = v30;
            v31[1] = sub_3A6EDC;
            void *v30 = 0;
            v30[1] = 0;
            int v30[2] = 0;
            uint64_t v29 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v30);
            uint64_t v26 = *(char **)v43;
          }
          uint64_t v25 = sub_188C244(v29, v26, (uint64_t)a3);
          *(void *)uint64_t v43 = v25;
          if (!v25) {
            goto LABEL_69;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 58) {
            goto LABEL_62;
          }
        }
      case 8u:
        if (v9 != 66) {
          goto LABEL_54;
        }
        uint64_t v32 = v8 - 1;
        while (1)
        {
          uint64_t v33 = (unsigned __int8 *)(v32 + 1);
          *(void *)uint64_t v43 = v32 + 1;
          uint64_t v34 = *(_DWORD **)(a1 + 64);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 56), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 56) = v35 + 1;
            uint64_t v36 = *(void *)&v34[2 * v35 + 2];
          }
          else
          {
            int v37 = sub_1662D60(*(void *)(a1 + 48));
            uint64_t v36 = sub_188CDC8(a1 + 48, (uint64_t)v37);
            uint64_t v33 = *(unsigned __int8 **)v43;
          }
          uint64_t v32 = (char *)sub_1659C78(a3, v36, v33);
          *(void *)uint64_t v43 = v32;
          if (!v32) {
            goto LABEL_69;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 66) {
            goto LABEL_62;
          }
        }
      default:
LABEL_54:
        if (v9) {
          BOOL v38 = (v9 & 7) == 4;
        }
        else {
          BOOL v38 = 1;
        }
        if (!v38)
        {
          if (*v42)
          {
            uint64_t v39 = (std::string *)((*v42 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v39 = (std::string *)sub_188DBD8(v42);
            unint64_t v8 = *(char **)v43;
          }
          unint64_t v21 = sub_1885AC0(v9, v39, v8, a3);
LABEL_61:
          *(void *)uint64_t v43 = v21;
          if (!v21) {
            goto LABEL_69;
          }
LABEL_62:
          if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_69:
        }
          *(void *)uint64_t v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v43;
    }
  }
}

uint64_t sub_1659C78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1658A74(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1659D08(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 96);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_12:
    if ((v6 & 0x20) == 0) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
LABEL_17:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 104);
  char *v4 = 41;
  *(void *)(v4 + 1) = v10;
  v4 += 9;
  if ((v6 & 0x20) != 0)
  {
LABEL_20:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 112);
    char *v4 = 49;
    *(void *)(v4 + 1) = v11;
    v4 += 9;
  }
LABEL_23:
  uint64_t v12 = *(unsigned int *)(a1 + 32);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 8 * v12;
    do
    {
      uint64_t v15 = *(void **)(*(void *)(a1 + 40) + v13 + 8);
      if (*((char *)v15 + 23) < 0)
      {
        int64_t v16 = v15[1];
        if (v16 > 127) {
          goto LABEL_34;
        }
      }
      else
      {
        int64_t v16 = *((unsigned __int8 *)v15 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v16)
      {
        char *v4 = 58;
        v4[1] = v16;
        if (*((char *)v15 + 23) < 0) {
          uint64_t v15 = (void *)*v15;
        }
        uint64_t v17 = v4 + 2;
        memcpy(v17, v15, v16);
        int v4 = &v17[v16];
        goto LABEL_32;
      }
LABEL_34:
      int v4 = (char *)sub_188A868(a3, 7, (uint64_t)v15, v4);
LABEL_32:
      v13 += 8;
    }
    while (v14 != v13);
  }
  int v18 = *(_DWORD *)(a1 + 56);
  if (v18)
  {
    for (int i = 0; i != v18; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 66;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        uint64_t v22 = v4 + 2;
      }
      int v4 = sub_1658F10(v20, (unint64_t)v22, a3);
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_165A058(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1659250(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0x3F) != 0)
  {
    if (v15)
    {
      unint64_t v19 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v21 = *(void *)(v19 + 8);
      if ((v20 & 0x80u) == 0) {
        uint64_t v21 = v20;
      }
      v9 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 2) == 0)
      {
LABEL_17:
        if ((v15 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_33;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_17;
    }
    unint64_t v22 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
    uint64_t v24 = *(void *)(v22 + 8);
    if ((v23 & 0x80u) == 0) {
      uint64_t v24 = v23;
    }
    v9 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0)
    {
LABEL_18:
      if ((v15 & 8) == 0)
      {
LABEL_20:
        uint64_t v16 = v9 + 9;
        if ((v15 & 0x10) == 0) {
          uint64_t v16 = v9;
        }
        if ((v15 & 0x20) != 0) {
          uint64_t v9 = v16 + 9;
        }
        else {
          uint64_t v9 = v16;
        }
        goto LABEL_25;
      }
LABEL_19:
      v9 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
      goto LABEL_20;
    }
LABEL_33:
    unint64_t v25 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
    uint64_t v27 = *(void *)(v25 + 8);
    if ((v26 & 0x80u) == 0) {
      uint64_t v27 = v26;
    }
    v9 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_25:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v28 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v28 + 31) < 0) {
      uint64_t v29 = *(void *)(v28 + 16);
    }
    else {
      uint64_t v29 = *(unsigned __int8 *)(v28 + 31);
    }
    v9 += v29;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_165A288(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_1664EE8(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0x3F) != 0)
  {
    if (v14)
    {
      uint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_26;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    unint64_t v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_29;
    }
LABEL_26:
    unint64_t v22 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__r.__words[2], v22, v24);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_30;
    }
LABEL_29:
    v3[4].__r_.__value_.__r.__words[0] = *(void *)(a2 + 96);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0)
      {
LABEL_15:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
        goto LABEL_16;
      }
LABEL_14:
      v3[4].__r_.__value_.__r.__words[2] = *(void *)(a2 + 112);
      goto LABEL_15;
    }
LABEL_30:
    v3[4].__r_.__value_.__l.__size_ = *(void *)(a2 + 104);
    if ((v14 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_165A4AC()
{
  return 1;
}

void *sub_165A4B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.ResultConversions");
}

uint64_t sub_165A4C4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2542758)
  {
    uint64_t v6 = *(void *)(a1 + 64);
    if (v6)
    {
      sub_1657474(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 48);
  sub_1664CDC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_165A590(uint64_t a1)
{
  sub_165A4C4(a1);

  operator delete();
}

uint64_t sub_165A5C8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16596F0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  *(_DWORD *)(v1 + 48) = 0;
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_165756C(*(void *)(v1 + 64));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(unsigned char *)(v5 + 64) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_165A660(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1]) & 1) == 0)
  {
    int v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = v33 + 1;
      unsigned int v9 = *v33;
      if (*v33 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          uint64_t v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = v33 + 2;
        }
      }
      uint64_t v33 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_48;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          int v12 = *(void **)(a1 + 64);
          if (!v12)
          {
            uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v13 = (void *)*v13;
            }
            int v12 = sub_1662C10((uint64_t)v13);
            *(void *)(a1 + 64) = v12;
            uint64_t v8 = v33;
          }
          int v14 = (char *)sub_165AA00(a3, (uint64_t)v12, (unsigned __int8 *)v8);
          goto LABEL_55;
        case 2u:
          if (v9 != 16) {
            goto LABEL_48;
          }
          v5 |= 2u;
          uint64_t v15 = v8 + 1;
          uint64_t v16 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          uint64_t v16 = v16 + (v17 << 7) - 128;
          if (v17 < 0)
          {
            uint64_t v29 = (char *)sub_188C138((uint64_t)v8, v16);
            uint64_t v33 = v29;
            *(unsigned char *)(a1 + 72) = v30 != 0;
            if (!v29) {
              goto LABEL_61;
            }
          }
          else
          {
            uint64_t v15 = v8 + 2;
LABEL_19:
            uint64_t v33 = v15;
            *(unsigned char *)(a1 + 72) = v16 != 0;
          }
          goto LABEL_56;
        case 3u:
          if (v9 != 26) {
            goto LABEL_48;
          }
          int v18 = v8 - 1;
          while (1)
          {
            unint64_t v19 = (unsigned __int8 *)(v18 + 1);
            uint64_t v33 = v18 + 1;
            std::string::size_type v20 = *(_DWORD **)(a1 + 40);
            if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
            {
              *(_DWORD *)(a1 + 32) = v21 + 1;
              uint64_t v22 = *(void *)&v20[2 * v21 + 2];
            }
            else
            {
              std::string::size_type v23 = sub_1662E14(*(void *)(a1 + 24));
              uint64_t v22 = sub_188CDC8(a1 + 24, (uint64_t)v23);
              unint64_t v19 = (unsigned __int8 *)v33;
            }
            int v18 = (char *)sub_165AA90(a3, v22, v19);
            uint64_t v33 = v18;
            if (!v18) {
              goto LABEL_61;
            }
            if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
              goto LABEL_56;
            }
          }
        case 4u:
          if (v9 == 32)
          {
            uint64_t v24 = v8 - 1;
            while (1)
            {
              uint64_t v33 = v24 + 1;
              uint64_t v25 = v24[1];
              if (v24[1] < 0)
              {
                uint64_t v25 = v25 + (v24[2] << 7) - 128;
                if (v24[2] < 0) {
                  uint64_t v24 = (char *)sub_188C138((uint64_t)(v24 + 1), v25);
                }
                else {
                  v24 += 3;
                }
              }
              else
              {
                v24 += 2;
              }
              uint64_t v33 = v24;
              BOOL v26 = v25 != 0;
              uint64_t v27 = *(unsigned int *)(a1 + 48);
              if (v27 == *(_DWORD *)(a1 + 52))
              {
                int v28 = v27 + 1;
                sub_188C6F4((unsigned int *)(a1 + 48), v27 + 1);
                *(unsigned char *)(*(void *)(a1 + 56) + v27) = v26;
                uint64_t v24 = v33;
              }
              else
              {
                *(unsigned char *)(*(void *)(a1 + 56) + v27) = v26;
                int v28 = v27 + 1;
              }
              *(_DWORD *)(a1 + 48) = v28;
              if (!v24) {
                goto LABEL_61;
              }
              if (*(void *)a3 <= (unint64_t)v24 || *v24 != 32) {
                goto LABEL_56;
              }
            }
          }
          if (v9 == 34)
          {
            int v14 = (char *)sub_188C32C((unsigned int *)(a1 + 48), (unsigned __int8 *)v8, (uint64_t)a3);
          }
          else
          {
LABEL_48:
            if (v9) {
              BOOL v31 = (v9 & 7) == 4;
            }
            else {
              BOOL v31 = 1;
            }
            if (v31)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_61:
              uint64_t v33 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v33;
            }
            int v14 = (char *)sub_1885AC0(v9, v32, v8, a3);
          }
LABEL_55:
          uint64_t v33 = v14;
          if (!v14) {
            goto LABEL_61;
          }
LABEL_56:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        default:
          goto LABEL_48;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v33;
}

uint64_t sub_165AA00(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1657634(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_165AA90(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_165982C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_165AB20(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1657948(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 72);
    char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  int v11 = *(_DWORD *)(a1 + 32);
  if (v11)
  {
    for (int i = 0; i != v11; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      v4[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, v4 + 1);
      }
      else {
        uint64_t v15 = v4 + 2;
      }
      uint64_t v4 = sub_1659D08(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 48);
  if ((int)v16 >= 1)
  {
    for (uint64_t j = 0; j != v16; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      char v18 = *(unsigned char *)(*(void *)(a1 + 56) + j);
      char *v4 = 32;
      v4[1] = v18;
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_165AD5C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_165A058(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = v2 + 2 * *(unsigned int *)(a1 + 48);
  int v9 = *(_DWORD *)(a1 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = sub_1657B74(*(void *)(a1 + 64));
      v8 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v9 & 2) != 0) {
      v8 += 2;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v8 += v14;
  }
  *(_DWORD *)(a1 + 20) = v8;
  return v8;
}

std::string *sub_165AE5C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1664F74(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t data_low = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    sub_188C6F4((unsigned int *)&v3[2], data_low + v9);
    std::string::size_type size = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 48);
    uint64_t result = (std::string *)memcpy((void *)(size + data_low), *(const void **)(a2 + 56), *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 16);
  if ((v12 & 3) != 0)
  {
    if (v12)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v13 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
      if (!v13)
      {
        std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
        uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (void *)*v15;
        }
        unint64_t v13 = (std::string *)sub_1662C10((uint64_t)v15);
        v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
      }
      if (*(void *)(a2 + 64)) {
        uint64_t v16 = *(uint64_t (****)(uint64_t))(a2 + 64);
      }
      else {
        uint64_t v16 = &off_2542708;
      }
      uint64_t result = sub_1657CB8(v13, (uint64_t)v16);
    }
    if ((v12 & 2) != 0) {
      v3[3].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 72);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v12;
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_165AFDC()
{
  return 1;
}

void *sub_165AFE4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.ActionMetrics");
}

uint64_t sub_165AFF4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = &off_24CC690;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = a2;
  *(void *)(a1 + 160) = a2;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = a2;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = a2;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = a2;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = a2;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = a2;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = a2;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = a2;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = a2;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = 0;
  *(void *)(a1 + 376) = &qword_2550250;
  *(void *)(a1 + 384) = &qword_2550250;
  *(void *)(a1 + 392) = &qword_2550250;
  *(void *)(a1 + 400) = &qword_2550250;
  *(void *)(a1 + 408) = &qword_2550250;
  *(void *)(a1 + 416) = &qword_2550250;
  *(void *)(a1 + 424) = &qword_2550250;
  *(void *)(a1 + 432) = &qword_2550250;
  *(void *)(a1 + 440) = &qword_2550250;
  *(void *)(a1 + 448) = &qword_2550250;
  *(void *)(a1 + 456) = &qword_2550250;
  *(void *)(a1 + 464) = &qword_2550250;
  *(void *)(a1 + 472) = &qword_2550250;
  *(void *)(a1 + 480) = &qword_2550250;
  *(void *)(a1 + 488) = &qword_2550250;
  *(void *)(a1 + 496) = &qword_2550250;
  *(void *)(a1 + 504) = &qword_2550250;
  *(void *)(a1 + 512) = &qword_2550250;
  *(void *)(a1 + 520) = &qword_2550250;
  *(void *)(a1 + 528) = &qword_2550250;
  *(void *)(a1 + 536) = &qword_2550250;
  *(_OWORD *)(a1 + 720) = 0u;
  *(_OWORD *)(a1 + 736) = 0u;
  *(_OWORD *)(a1 + 688) = 0u;
  *(_OWORD *)(a1 + 704) = 0u;
  *(_OWORD *)(a1 + 656) = 0u;
  *(_OWORD *)(a1 + 672) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_OWORD *)(a1 + 576) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_DWORD *)(a1 + 752) = 1;
  return a1;
}

void sub_165B114(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_165B144(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_165B26C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1664DDC(a1 + 44);
  sub_124F6EC(a1 + 41);
  sub_1889DE8(a1 + 38);
  sub_1664D5C(a1 + 35);
  sub_124F76C(a1 + 32);
  sub_124F66C(a1 + 29);
  sub_149EC7C(a1 + 26);
  sub_124FA8C(a1 + 23);
  sub_124F66C(a1 + 20);
  sub_1889DA8((uint64_t)(a1 + 18));
  sub_124F5EC(a1 + 15);
  sub_149394C(a1 + 12);
  sub_11DB1BC(a1 + 9);
  sub_1889DA8((uint64_t)(a1 + 7));
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_165B26C(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (*(uint64_t **)(result + 376) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 376));
  }
  if (*(uint64_t **)(result + 384) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 384));
  }
  if (*(uint64_t **)(result + 392) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 392));
  }
  if (*(uint64_t **)(result + 400) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 400));
  }
  if (*(uint64_t **)(result + 408) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 408));
  }
  if (*(uint64_t **)(result + 416) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 416));
  }
  if (*(uint64_t **)(result + 424) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 424));
  }
  if (*(uint64_t **)(result + 432) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 432));
  }
  if (*(uint64_t **)(result + 440) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 440));
  }
  if (*(uint64_t **)(result + 448) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 448));
  }
  if (*(uint64_t **)(result + 456) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 456));
  }
  if (*(uint64_t **)(result + 464) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 464));
  }
  if (*(uint64_t **)(result + 472) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 472));
  }
  if (*(uint64_t **)(result + 480) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 480));
  }
  if (*(uint64_t **)(result + 488) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 488));
  }
  if (*(uint64_t **)(result + 496) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 496));
  }
  if (*(uint64_t **)(result + 504) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 504));
  }
  if (*(uint64_t **)(result + 512) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 512));
  }
  if (*(uint64_t **)(result + 520) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 520));
  }
  if (*(uint64_t **)(result + 528) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 528));
  }
  if (*(uint64_t **)(result + 536) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 536));
  }
  if ((uint64_t (***)())result != &off_25427A8)
  {
    if (*(void *)(result + 544))
    {
      sub_15B9F30();
      operator delete();
    }
    if (*(void *)(result + 552))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v2 = *(void *)(result + 560);
    if (v2)
    {
      sub_15B1678(v2);
      operator delete();
    }
    uint64_t v3 = v1[71];
    if (v3)
    {
      sub_1654928(v3);
      operator delete();
    }
    uint64_t v4 = v1[72];
    if (v4)
    {
      sub_1655CE8(v4);
      operator delete();
    }
    uint64_t v5 = v1[73];
    if (v5)
    {
      sub_16630D4(v5);
      operator delete();
    }
    if (v1[74])
    {
      sub_1495E9C();
      operator delete();
    }
    uint64_t v6 = v1[75];
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
    uint64_t v7 = v1[76];
    if (v7)
    {
      sub_1655CE8(v7);
      operator delete();
    }
    if (v1[77])
    {
      sub_1495E9C();
      operator delete();
    }
    if (v1[78])
    {
      sub_15BF110();
      operator delete();
    }
    uint64_t v8 = (void *)v1[79];
    if (v8)
    {
      sub_1663B0C(v8);
      operator delete();
    }
    if (v1[80])
    {
      sub_12A0FF0();
      operator delete();
    }
    if (v1[81])
    {
      sub_1764400();
      operator delete();
    }
    uint64_t result = v1[82];
    if (result)
    {
      sub_165A4C4(result);
      operator delete();
    }
  }
  return result;
}

void sub_165B644(void *a1)
{
  sub_165B144(a1);

  operator delete();
}

uint64_t sub_165B67C(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 56) = 0;
  uint64_t v2 = *(unsigned int *)(a1 + 80);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_15BAAF0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 104);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_14769E0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 128);
  if ((int)v8 >= 1)
  {
    int v9 = (unsigned char **)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_1655284(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 128) = 0;
  }
  *(_DWORD *)(a1 + 144) = 0;
  uint64_t v11 = *(unsigned int *)(a1 + 168);
  if ((int)v11 >= 1)
  {
    int v12 = (uint64_t *)(*(void *)(a1 + 176) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_1653C80(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 168) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 192);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 200) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_1651320(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 192) = 0;
  }
  uint64_t v17 = *(unsigned int *)(a1 + 216);
  if ((int)v17 >= 1)
  {
    char v18 = (uint64_t *)(*(void *)(a1 + 224) + 8);
    do
    {
      uint64_t v19 = *v18++;
      sub_1497FB8(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(a1 + 216) = 0;
  }
  uint64_t v20 = *(unsigned int *)(a1 + 240);
  if ((int)v20 >= 1)
  {
    unint64_t v21 = (uint64_t *)(*(void *)(a1 + 248) + 8);
    do
    {
      uint64_t v22 = *v21++;
      sub_1653C80(v22);
      --v20;
    }
    while (v20);
    *(_DWORD *)(a1 + 240) = 0;
  }
  uint64_t v23 = *(unsigned int *)(a1 + 264);
  if ((int)v23 >= 1)
  {
    uint64_t v24 = (uint64_t *)(*(void *)(a1 + 272) + 8);
    do
    {
      uint64_t v25 = *v24++;
      sub_1663708(v25);
      --v23;
    }
    while (v23);
    *(_DWORD *)(a1 + 264) = 0;
  }
  uint64_t v26 = *(unsigned int *)(a1 + 288);
  if ((int)v26 >= 1)
  {
    uint64_t v27 = (uint64_t *)(*(void *)(a1 + 296) + 8);
    do
    {
      uint64_t v28 = *v27++;
      sub_1661A9C(v28);
      --v26;
    }
    while (v26);
    *(_DWORD *)(a1 + 288) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 304);
  uint64_t v30 = *(unsigned int *)(a1 + 336);
  if ((int)v30 >= 1)
  {
    BOOL v31 = (uint64_t *)(*(void *)(a1 + 344) + 8);
    do
    {
      uint64_t v32 = *v31++;
      uint64_t result = sub_1662208(v32);
      --v30;
    }
    while (v30);
    *(_DWORD *)(a1 + 336) = 0;
  }
  uint64_t v33 = *(unsigned int *)(a1 + 360);
  if ((int)v33 >= 1)
  {
    uint64_t v34 = (uint64_t *)(*(void *)(a1 + 368) + 8);
    do
    {
      uint64_t v35 = *v34++;
      uint64_t result = sub_12A102C(v35);
      --v33;
    }
    while (v33);
    *(_DWORD *)(a1 + 360) = 0;
  }
  unsigned int v36 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v36)
  {
    if ((v36 & 1) == 0)
    {
      if ((v36 & 2) == 0) {
        goto LABEL_48;
      }
LABEL_59:
      unint64_t v38 = *(void *)(a1 + 384) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v38 + 23) < 0)
      {
        **(unsigned char **)unint64_t v38 = 0;
        *(void *)(v38 + 8) = 0;
        if ((v36 & 4) != 0) {
          goto LABEL_63;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v38 = 0;
        *(unsigned char *)(v38 + 23) = 0;
        if ((v36 & 4) != 0) {
          goto LABEL_63;
        }
      }
LABEL_49:
      if ((v36 & 8) == 0) {
        goto LABEL_50;
      }
LABEL_67:
      unint64_t v40 = *(void *)(a1 + 400) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v40 + 23) < 0)
      {
        **(unsigned char **)unint64_t v40 = 0;
        *(void *)(v40 + 8) = 0;
        if ((v36 & 0x10) != 0) {
          goto LABEL_71;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v40 = 0;
        *(unsigned char *)(v40 + 23) = 0;
        if ((v36 & 0x10) != 0) {
          goto LABEL_71;
        }
      }
LABEL_51:
      if ((v36 & 0x20) == 0) {
        goto LABEL_52;
      }
LABEL_75:
      unint64_t v42 = *(void *)(a1 + 416) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v42 + 23) < 0)
      {
        **(unsigned char **)unint64_t v42 = 0;
        *(void *)(v42 + 8) = 0;
        if ((v36 & 0x40) != 0) {
          goto LABEL_79;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v42 = 0;
        *(unsigned char *)(v42 + 23) = 0;
        if ((v36 & 0x40) != 0) {
          goto LABEL_79;
        }
      }
LABEL_53:
      if ((v36 & 0x80) == 0) {
        goto LABEL_86;
      }
LABEL_83:
      unint64_t v44 = *(void *)(a1 + 432) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v44 + 23) < 0)
      {
        **(unsigned char **)unint64_t v44 = 0;
        *(void *)(v44 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v44 = 0;
        *(unsigned char *)(v44 + 23) = 0;
      }
      goto LABEL_86;
    }
    unint64_t v37 = *(void *)(a1 + 376) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v37 + 23) < 0)
    {
      **(unsigned char **)unint64_t v37 = 0;
      *(void *)(v37 + 8) = 0;
      if ((v36 & 2) != 0) {
        goto LABEL_59;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v37 = 0;
      *(unsigned char *)(v37 + 23) = 0;
      if ((v36 & 2) != 0) {
        goto LABEL_59;
      }
    }
LABEL_48:
    if ((v36 & 4) == 0) {
      goto LABEL_49;
    }
LABEL_63:
    unint64_t v39 = *(void *)(a1 + 392) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v39 + 23) < 0)
    {
      **(unsigned char **)unint64_t v39 = 0;
      *(void *)(v39 + 8) = 0;
      if ((v36 & 8) != 0) {
        goto LABEL_67;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v39 = 0;
      *(unsigned char *)(v39 + 23) = 0;
      if ((v36 & 8) != 0) {
        goto LABEL_67;
      }
    }
LABEL_50:
    if ((v36 & 0x10) == 0) {
      goto LABEL_51;
    }
LABEL_71:
    unint64_t v41 = *(void *)(a1 + 408) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v41 + 23) < 0)
    {
      **(unsigned char **)unint64_t v41 = 0;
      *(void *)(v41 + 8) = 0;
      if ((v36 & 0x20) != 0) {
        goto LABEL_75;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v41 = 0;
      *(unsigned char *)(v41 + 23) = 0;
      if ((v36 & 0x20) != 0) {
        goto LABEL_75;
      }
    }
LABEL_52:
    if ((v36 & 0x40) == 0) {
      goto LABEL_53;
    }
LABEL_79:
    unint64_t v43 = *(void *)(a1 + 424) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v43 + 23) < 0)
    {
      **(unsigned char **)unint64_t v43 = 0;
      *(void *)(v43 + 8) = 0;
      if ((v36 & 0x80) == 0) {
        goto LABEL_86;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v43 = 0;
      *(unsigned char *)(v43 + 23) = 0;
      if ((v36 & 0x80) == 0) {
        goto LABEL_86;
      }
    }
    goto LABEL_83;
  }
LABEL_86:
  if ((v36 & 0xFF00) == 0) {
    goto LABEL_127;
  }
  if ((v36 & 0x100) == 0)
  {
    if ((v36 & 0x200) == 0) {
      goto LABEL_89;
    }
LABEL_100:
    unint64_t v46 = *(void *)(a1 + 448) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v46 + 23) < 0)
    {
      **(unsigned char **)unint64_t v46 = 0;
      *(void *)(v46 + 8) = 0;
      if ((v36 & 0x400) != 0) {
        goto LABEL_104;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v46 = 0;
      *(unsigned char *)(v46 + 23) = 0;
      if ((v36 & 0x400) != 0) {
        goto LABEL_104;
      }
    }
LABEL_90:
    if ((v36 & 0x800) == 0) {
      goto LABEL_91;
    }
LABEL_108:
    unint64_t v48 = *(void *)(a1 + 464) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v48 + 23) < 0)
    {
      **(unsigned char **)unint64_t v48 = 0;
      *(void *)(v48 + 8) = 0;
      if ((v36 & 0x1000) != 0) {
        goto LABEL_112;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v48 = 0;
      *(unsigned char *)(v48 + 23) = 0;
      if ((v36 & 0x1000) != 0) {
        goto LABEL_112;
      }
    }
LABEL_92:
    if ((v36 & 0x2000) == 0) {
      goto LABEL_93;
    }
LABEL_116:
    unint64_t v50 = *(void *)(a1 + 480) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v50 + 23) < 0)
    {
      **(unsigned char **)unint64_t v50 = 0;
      *(void *)(v50 + 8) = 0;
      if ((v36 & 0x4000) != 0) {
        goto LABEL_120;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v50 = 0;
      *(unsigned char *)(v50 + 23) = 0;
      if ((v36 & 0x4000) != 0) {
        goto LABEL_120;
      }
    }
LABEL_94:
    if ((v36 & 0x8000) == 0) {
      goto LABEL_127;
    }
    goto LABEL_124;
  }
  unint64_t v45 = *(void *)(a1 + 440) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v45 + 23) < 0)
  {
    **(unsigned char **)unint64_t v45 = 0;
    *(void *)(v45 + 8) = 0;
    if ((v36 & 0x200) != 0) {
      goto LABEL_100;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v45 = 0;
    *(unsigned char *)(v45 + 23) = 0;
    if ((v36 & 0x200) != 0) {
      goto LABEL_100;
    }
  }
LABEL_89:
  if ((v36 & 0x400) == 0) {
    goto LABEL_90;
  }
LABEL_104:
  unint64_t v47 = *(void *)(a1 + 456) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v47 + 23) < 0)
  {
    **(unsigned char **)unint64_t v47 = 0;
    *(void *)(v47 + 8) = 0;
    if ((v36 & 0x800) != 0) {
      goto LABEL_108;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v47 = 0;
    *(unsigned char *)(v47 + 23) = 0;
    if ((v36 & 0x800) != 0) {
      goto LABEL_108;
    }
  }
LABEL_91:
  if ((v36 & 0x1000) == 0) {
    goto LABEL_92;
  }
LABEL_112:
  unint64_t v49 = *(void *)(a1 + 472) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v49 + 23) < 0)
  {
    **(unsigned char **)unint64_t v49 = 0;
    *(void *)(v49 + 8) = 0;
    if ((v36 & 0x2000) != 0) {
      goto LABEL_116;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v49 = 0;
    *(unsigned char *)(v49 + 23) = 0;
    if ((v36 & 0x2000) != 0) {
      goto LABEL_116;
    }
  }
LABEL_93:
  if ((v36 & 0x4000) == 0) {
    goto LABEL_94;
  }
LABEL_120:
  unint64_t v51 = *(void *)(a1 + 488) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v51 + 23) < 0)
  {
    **(unsigned char **)unint64_t v51 = 0;
    *(void *)(v51 + 8) = 0;
    if ((v36 & 0x8000) == 0) {
      goto LABEL_127;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v51 = 0;
    *(unsigned char *)(v51 + 23) = 0;
    if ((v36 & 0x8000) == 0) {
      goto LABEL_127;
    }
  }
LABEL_124:
  unint64_t v52 = *(void *)(a1 + 496) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v52 + 23) < 0)
  {
    **(unsigned char **)unint64_t v52 = 0;
    *(void *)(v52 + 8) = 0;
  }
  else
  {
    *(unsigned char *)unint64_t v52 = 0;
    *(unsigned char *)(v52 + 23) = 0;
  }
LABEL_127:
  if ((v36 & 0xFF0000) == 0) {
    goto LABEL_137;
  }
  if ((v36 & 0x10000) != 0)
  {
    unint64_t v56 = *(void *)(a1 + 504) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v56 + 23) < 0)
    {
      **(unsigned char **)unint64_t v56 = 0;
      *(void *)(v56 + 8) = 0;
      if ((v36 & 0x20000) != 0) {
        goto LABEL_178;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v56 = 0;
      *(unsigned char *)(v56 + 23) = 0;
      if ((v36 & 0x20000) != 0) {
        goto LABEL_178;
      }
    }
LABEL_130:
    if ((v36 & 0x40000) == 0) {
      goto LABEL_131;
    }
LABEL_182:
    unint64_t v58 = *(void *)(a1 + 520) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v58 + 23) < 0)
    {
      **(unsigned char **)unint64_t v58 = 0;
      *(void *)(v58 + 8) = 0;
      if ((v36 & 0x80000) != 0) {
        goto LABEL_186;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v58 = 0;
      *(unsigned char *)(v58 + 23) = 0;
      if ((v36 & 0x80000) != 0) {
        goto LABEL_186;
      }
    }
LABEL_132:
    if ((v36 & 0x100000) == 0) {
      goto LABEL_133;
    }
LABEL_190:
    unint64_t v60 = *(void *)(a1 + 536) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v60 + 23) < 0)
    {
      **(unsigned char **)unint64_t v60 = 0;
      *(void *)(v60 + 8) = 0;
      if ((v36 & 0x200000) != 0) {
        goto LABEL_194;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v60 = 0;
      *(unsigned char *)(v60 + 23) = 0;
      if ((v36 & 0x200000) != 0) {
        goto LABEL_194;
      }
    }
LABEL_134:
    if ((v36 & 0x400000) == 0) {
      goto LABEL_135;
    }
    goto LABEL_195;
  }
  if ((v36 & 0x20000) == 0) {
    goto LABEL_130;
  }
LABEL_178:
  unint64_t v57 = *(void *)(a1 + 512) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v57 + 23) < 0)
  {
    **(unsigned char **)unint64_t v57 = 0;
    *(void *)(v57 + 8) = 0;
    if ((v36 & 0x40000) != 0) {
      goto LABEL_182;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v57 = 0;
    *(unsigned char *)(v57 + 23) = 0;
    if ((v36 & 0x40000) != 0) {
      goto LABEL_182;
    }
  }
LABEL_131:
  if ((v36 & 0x80000) == 0) {
    goto LABEL_132;
  }
LABEL_186:
  unint64_t v59 = *(void *)(a1 + 528) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v59 + 23) < 0)
  {
    **(unsigned char **)unint64_t v59 = 0;
    *(void *)(v59 + 8) = 0;
    if ((v36 & 0x100000) != 0) {
      goto LABEL_190;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v59 = 0;
    *(unsigned char *)(v59 + 23) = 0;
    if ((v36 & 0x100000) != 0) {
      goto LABEL_190;
    }
  }
LABEL_133:
  if ((v36 & 0x200000) == 0) {
    goto LABEL_134;
  }
LABEL_194:
  uint64_t result = sub_15B9F6C(*(void *)(a1 + 544));
  if ((v36 & 0x400000) == 0)
  {
LABEL_135:
    if ((v36 & 0x800000) == 0) {
      goto LABEL_137;
    }
    goto LABEL_136;
  }
LABEL_195:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 552));
  if ((v36 & 0x800000) != 0) {
LABEL_136:
  }
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 560));
LABEL_137:
  if (!HIBYTE(v36)) {
    goto LABEL_146;
  }
  if ((v36 & 0x1000000) != 0)
  {
    uint64_t result = (uint64_t)sub_1654A2C(*(unsigned char **)(a1 + 568));
    if ((v36 & 0x2000000) == 0)
    {
LABEL_140:
      if ((v36 & 0x4000000) == 0) {
        goto LABEL_141;
      }
      goto LABEL_171;
    }
  }
  else if ((v36 & 0x2000000) == 0)
  {
    goto LABEL_140;
  }
  uint64_t result = sub_1655E38(*(void *)(a1 + 576));
  if ((v36 & 0x4000000) == 0)
  {
LABEL_141:
    if ((v36 & 0x8000000) == 0) {
      goto LABEL_142;
    }
    goto LABEL_172;
  }
LABEL_171:
  uint64_t result = sub_164C24C(*(void *)(a1 + 584));
  if ((v36 & 0x8000000) == 0)
  {
LABEL_142:
    if ((v36 & 0x10000000) == 0) {
      goto LABEL_143;
    }
    goto LABEL_173;
  }
LABEL_172:
  uint64_t result = sub_1495118(*(void *)(a1 + 592));
  if ((v36 & 0x10000000) == 0)
  {
LABEL_143:
    if ((v36 & 0x20000000) == 0) {
      goto LABEL_144;
    }
    goto LABEL_174;
  }
LABEL_173:
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 600));
  if ((v36 & 0x20000000) == 0)
  {
LABEL_144:
    if ((v36 & 0x40000000) == 0) {
      goto LABEL_145;
    }
LABEL_175:
    uint64_t result = sub_1495118(*(void *)(a1 + 616));
    if ((v36 & 0x80000000) == 0) {
      goto LABEL_146;
    }
    goto LABEL_176;
  }
LABEL_174:
  uint64_t result = sub_1655E38(*(void *)(a1 + 608));
  if ((v36 & 0x40000000) != 0) {
    goto LABEL_175;
  }
LABEL_145:
  if ((v36 & 0x80000000) == 0) {
    goto LABEL_146;
  }
LABEL_176:
  uint64_t result = (uint64_t)sub_15BF14C(*(void *)(a1 + 624));
LABEL_146:
  int v53 = *(_DWORD *)(a1 + 44);
  if ((v53 & 0xF) == 0) {
    goto LABEL_152;
  }
  if (v53)
  {
    uint64_t result = sub_164C304(*(void *)(a1 + 632));
    if ((v53 & 2) == 0)
    {
LABEL_149:
      if ((v53 & 4) == 0) {
        goto LABEL_150;
      }
      goto LABEL_167;
    }
  }
  else if ((v53 & 2) == 0)
  {
    goto LABEL_149;
  }
  uint64_t result = sub_12A102C(*(void *)(a1 + 640));
  if ((v53 & 4) == 0)
  {
LABEL_150:
    if ((v53 & 8) == 0) {
      goto LABEL_152;
    }
    goto LABEL_151;
  }
LABEL_167:
  uint64_t result = sub_176443C(*(void *)(a1 + 648));
  if ((v53 & 8) != 0) {
LABEL_151:
  }
    uint64_t result = sub_165A5C8(*(void *)(a1 + 656));
LABEL_152:
  if ((v53 & 0xF0) != 0)
  {
    *(void *)(a1 + 680) = 0;
    *(_OWORD *)(a1 + 664) = 0u;
  }
  if ((v53 & 0xFF00) != 0)
  {
    *(void *)(a1 + 720) = 0;
    *(_OWORD *)(a1 + 688) = 0u;
    *(_OWORD *)(a1 + 704) = 0u;
  }
  if ((v53 & 0x7F0000) != 0)
  {
    *(void *)(a1 + 744) = 0;
    *(_OWORD *)(a1 + 728) = 0u;
    *(_DWORD *)(a1 + 752) = 1;
  }
  char v55 = *(unsigned char *)(a1 + 8);
  uint64_t v54 = (uint64_t *)(a1 + 8);
  v54[4] = 0;
  if (v55)
  {
    return sub_188B4AC(v54);
  }
  return result;
}

char *sub_165BE4C(uint64_t a1, char *a2, int32x2_t *a3)
{
  v221[0] = a2;
  char v5 = sub_11947B8((uint64_t)a3, v221, a3[11].i32[1]);
  uint64_t result = v221[0];
  if (v5) {
    return result;
  }
  v211 = (uint64_t *)(a1 + 8);
  v219 = (uint64_t *)(a1 + 352);
  v218 = (uint64_t *)(a1 + 328);
  v220 = (uint64_t **)(a1 + 304);
  v217 = (uint64_t *)(a1 + 280);
  v216 = (uint64_t *)(a1 + 256);
  v215 = (uint64_t *)(a1 + 232);
  v214 = (uint64_t *)(a1 + 208);
  v213 = (uint64_t *)(a1 + 184);
  v212 = (uint64_t *)(a1 + 160);
  while (2)
  {
    uint64_t v7 = result + 1;
    unsigned int v8 = *result;
    if (*result < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)result, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = result + 2;
      }
    }
    v221[0] = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x200000u;
        uint64_t v11 = *(void **)(a1 + 544);
        if (!v11)
        {
          int v12 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v211) {
            int v12 = (void *)*v12;
          }
          uint64_t v11 = sub_15C2014((uint64_t)v12);
          *(void *)(a1 + 544) = v11;
          uint64_t v7 = v221[0];
        }
        uint64_t result = sub_11EAA5C(a3, (uint64_t)v11, (unsigned __int8 *)v7);
        goto LABEL_369;
      case 2u:
        if (v8 != 18) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 376);
        goto LABEL_368;
      case 3u:
        if (v8 == 24)
        {
          uint64_t result = v7 - 1;
          while (1)
          {
            v221[0] = result + 1;
            uint64_t v16 = result[1];
            if (result[1] < 0)
            {
              int v17 = v16 + (result[2] << 7);
              uint64_t v16 = (v17 - 128);
              if (result[2] < 0)
              {
                uint64_t result = (char *)sub_188C138((uint64_t)(result + 1), (v17 - 128));
                uint64_t v16 = v18;
              }
              else
              {
                result += 3;
              }
            }
            else
            {
              result += 2;
            }
            v221[0] = result;
            uint64_t v19 = *(unsigned int *)(a1 + 56);
            if (v19 == *(_DWORD *)(a1 + 60))
            {
              int v20 = v19 + 1;
              sub_188CA54((unsigned int *)(a1 + 56), v19 + 1);
              *(void *)(*(void *)(a1 + 64) + 8 * v19) = v16;
              uint64_t result = v221[0];
            }
            else
            {
              *(void *)(*(void *)(a1 + 64) + 8 * v19) = v16;
              int v20 = v19 + 1;
            }
            *(_DWORD *)(a1 + 56) = v20;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *result != 24) {
              goto LABEL_370;
            }
          }
        }
        if (v8 != 26) {
          goto LABEL_479;
        }
        v208 = (unsigned int *)(a1 + 56);
        goto LABEL_478;
      case 4u:
        if (v8 != 33) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 0x10u;
        uint64_t v22 = *(void *)v7;
        unint64_t v21 = v7 + 8;
        *(void *)(a1 + 664) = v22;
        goto LABEL_103;
      case 5u:
        if (v8 != 42) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x400000u;
        uint64_t v23 = *(void *)(a1 + 552);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v211) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_15C1918((uint64_t)v24);
          *(void *)(a1 + 552) = v23;
          uint64_t v7 = v221[0];
        }
        uint64_t result = sub_1198F14(a3, v23, (unsigned __int8 *)v7);
        goto LABEL_369;
      case 6u:
        if (v8 != 50) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x800000u;
        uint64_t v25 = *(void *)(a1 + 560);
        if (v25) {
          goto LABEL_300;
        }
        uint64_t v26 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v211) {
          uint64_t v26 = (void *)*v26;
        }
        uint64_t v25 = sub_15C19EC((uint64_t)v26);
        *(void *)(a1 + 560) = v25;
        goto LABEL_299;
      case 7u:
        if (v8 != 56) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 0x20u;
        uint64_t v28 = v7 + 1;
        LODWORD(v27) = *v7;
        if ((v27 & 0x80) == 0) {
          goto LABEL_50;
        }
        int v29 = *v28;
        uint64_t v27 = v27 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v27);
          v221[0] = result;
          *(_DWORD *)(a1 + 672) = v192;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v28 = v7 + 2;
LABEL_50:
          v221[0] = v28;
          *(_DWORD *)(a1 + 672) = v27;
        }
        goto LABEL_370;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v30 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 384);
        goto LABEL_368;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v31 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 392);
        goto LABEL_368;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v32 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
        if (v32) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 400);
        goto LABEL_368;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v33 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
        if (v33) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 408);
        goto LABEL_368;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v34 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
        if (v34) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 416);
        goto LABEL_368;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v35 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 424);
        goto LABEL_368;
      case 0x14u:
        if (v8 != 162) {
          goto LABEL_479;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          unsigned int v36 = (unsigned __int8 *)(result + 2);
          v221[0] = result + 2;
          unint64_t v37 = *(_DWORD **)(a1 + 88);
          if (v37 && (uint64_t v38 = *(int *)(a1 + 80), (int)v38 < *v37))
          {
            *(_DWORD *)(a1 + 80) = v38 + 1;
            uint64_t v39 = *(void *)&v37[2 * v38 + 2];
          }
          else
          {
            uint64_t v40 = sub_15C2114(*(void *)(a1 + 72));
            uint64_t v39 = sub_188CDC8(a1 + 72, v40);
            unsigned int v36 = (unsigned __int8 *)v221[0];
          }
          uint64_t result = (char *)sub_11A058C(a3, v39, v36);
          v221[0] = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 418) {
            goto LABEL_370;
          }
        }
      case 0x15u:
        if (v8 != 168) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 0x40u;
        unint64_t v42 = v7 + 1;
        LODWORD(v41) = *v7;
        if ((v41 & 0x80) == 0) {
          goto LABEL_89;
        }
        int v43 = *v42;
        uint64_t v41 = v41 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v41);
          v221[0] = result;
          *(_DWORD *)(a1 + 676) = v193;
          if (!result) {
            return result;
          }
        }
        else
        {
          unint64_t v42 = v7 + 2;
LABEL_89:
          v221[0] = v42;
          *(_DWORD *)(a1 + 676) = v41;
        }
        goto LABEL_370;
      case 0x16u:
        if (v8 != 176) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 0x200u;
        unint64_t v44 = v7 + 1;
        int v45 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_94;
        }
        int v46 = *v44;
        int v45 = v45 + (v46 << 7) - 128;
        if (v46 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v7, v45);
          v221[0] = result;
          *(_DWORD *)(a1 + 696) = v194;
          if (!result) {
            return result;
          }
        }
        else
        {
          unint64_t v44 = v7 + 2;
LABEL_94:
          v221[0] = v44;
          *(_DWORD *)(a1 + 696) = v45;
        }
        goto LABEL_370;
      case 0x17u:
        if (v8 != 186) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v47 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
        if (v47) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 432);
        goto LABEL_368;
      case 0x18u:
        if (v8 != 193) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 0x80u;
        uint64_t v48 = *(void *)v7;
        unint64_t v21 = v7 + 8;
        *(void *)(a1 + 680) = v48;
        goto LABEL_103;
      case 0x19u:
        if (v8 != 201) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 0x100u;
        uint64_t v49 = *(void *)v7;
        unint64_t v21 = v7 + 8;
        *(void *)(a1 + 688) = v49;
LABEL_103:
        v221[0] = v21;
        goto LABEL_370;
      case 0x1Eu:
        if (v8 != 240) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 0x400u;
        unint64_t v50 = v7 + 1;
        int v51 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_108;
        }
        int v52 = *v50;
        int v51 = v51 + (v52 << 7) - 128;
        if (v52 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v7, v51);
          v221[0] = result;
          *(_DWORD *)(a1 + 700) = v195;
          if (!result) {
            return result;
          }
        }
        else
        {
          unint64_t v50 = v7 + 2;
LABEL_108:
          v221[0] = v50;
          *(_DWORD *)(a1 + 700) = v51;
        }
        goto LABEL_370;
      case 0x1Fu:
        if (v8 != 248) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 0x800u;
        int v53 = v7 + 1;
        int v54 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_113;
        }
        int v55 = *v53;
        int v54 = v54 + (v55 << 7) - 128;
        if (v55 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v7, v54);
          v221[0] = result;
          *(_DWORD *)(a1 + 704) = v196;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v53 = v7 + 2;
LABEL_113:
          v221[0] = v53;
          *(_DWORD *)(a1 + 704) = v54;
        }
        goto LABEL_370;
      case 0x27u:
        if (v8 != 58) {
          goto LABEL_479;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          unint64_t v56 = (unsigned __int8 *)(result + 2);
          v221[0] = result + 2;
          unint64_t v57 = *(_DWORD **)(a1 + 112);
          if (v57 && (uint64_t v58 = *(int *)(a1 + 104), (int)v58 < *v57))
          {
            *(_DWORD *)(a1 + 104) = v58 + 1;
            uint64_t v59 = *(void *)&v57[2 * v58 + 2];
          }
          else
          {
            unint64_t v60 = sub_14798D4(*(void *)(a1 + 96));
            uint64_t v59 = sub_188CDC8(a1 + 96, (uint64_t)v60);
            unint64_t v56 = (unsigned __int8 *)v221[0];
          }
          uint64_t result = (char *)sub_146EC5C(a3, v59, v56);
          v221[0] = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 698) {
            goto LABEL_370;
          }
        }
      case 0x28u:
        if (v8 != 66) {
          goto LABEL_479;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          int v61 = (unsigned __int8 *)(result + 2);
          v221[0] = result + 2;
          uint64_t v62 = *(_DWORD **)(a1 + 136);
          if (v62 && (uint64_t v63 = *(int *)(a1 + 128), (int)v63 < *v62))
          {
            *(_DWORD *)(a1 + 128) = v63 + 1;
            uint64_t v64 = *(void *)&v62[2 * v63 + 2];
          }
          else
          {
            uint64_t v65 = sub_1662AB8(*(void *)(a1 + 120));
            uint64_t v64 = sub_188CDC8(a1 + 120, (uint64_t)v65);
            int v61 = (unsigned __int8 *)v221[0];
          }
          uint64_t result = (char *)sub_124C31C(a3, v64, v61);
          v221[0] = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 706) {
            goto LABEL_370;
          }
        }
      case 0x29u:
        if (v8 != 72)
        {
          if (v8 == 74)
          {
            v208 = (unsigned int *)(a1 + 144);
LABEL_478:
            uint64_t result = (char *)sub_188C2EC(v208, (unsigned __int8 *)v7, (uint64_t)a3);
          }
          else
          {
LABEL_479:
            if (v8) {
              BOOL v209 = (v8 & 7) == 4;
            }
            else {
              BOOL v209 = 1;
            }
            if (v209)
            {
              if (!v7) {
                return 0;
              }
              a3[10].i32[0] = v8 - 1;
              return v7;
            }
            if (v8 - 80000 > 0x31F)
            {
              if (*v211)
              {
                v210 = (std::string *)((*v211 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                v210 = (std::string *)sub_188DBD8(v211);
                uint64_t v7 = v221[0];
              }
              uint64_t result = (char *)sub_1885AC0(v8, v210, v7, a3);
            }
            else
            {
              uint64_t result = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_25427A8, v211, a3);
            }
          }
LABEL_369:
          v221[0] = result;
          if (!result) {
            return result;
          }
LABEL_370:
          int v165 = sub_11947B8((uint64_t)a3, v221, a3[11].i32[1]);
          uint64_t result = v221[0];
          if (v165) {
            return result;
          }
          continue;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          v221[0] = result + 2;
          uint64_t v66 = result[2];
          if (result[2] < 0)
          {
            int v67 = v66 + (result[3] << 7);
            uint64_t v66 = (v67 - 128);
            if (result[3] < 0)
            {
              uint64_t result = (char *)sub_188C138((uint64_t)(result + 2), (v67 - 128));
              uint64_t v66 = v68;
            }
            else
            {
              result += 4;
            }
          }
          else
          {
            result += 3;
          }
          v221[0] = result;
          uint64_t v69 = *(unsigned int *)(a1 + 144);
          if (v69 == *(_DWORD *)(a1 + 148))
          {
            int v70 = v69 + 1;
            sub_188CA54((unsigned int *)(a1 + 144), v69 + 1);
            *(void *)(*(void *)(a1 + 152) + 8 * v69) = v66;
            uint64_t result = v221[0];
          }
          else
          {
            *(void *)(*(void *)(a1 + 152) + 8 * v69) = v66;
            int v70 = v69 + 1;
          }
          *(_DWORD *)(a1 + 144) = v70;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 712) {
            goto LABEL_370;
          }
        }
      case 0x2Au:
        if (v8 != 82) {
          goto LABEL_479;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          int v71 = (unsigned __int8 *)(result + 2);
          v221[0] = result + 2;
          uint64_t v72 = *(_DWORD **)(a1 + 176);
          if (v72 && (uint64_t v73 = *(int *)(a1 + 168), (int)v73 < *v72))
          {
            *(_DWORD *)(a1 + 168) = v73 + 1;
            uint64_t v74 = *(void *)&v72[2 * v73 + 2];
          }
          else
          {
            sub_1662994(*v212);
            uint64_t v74 = sub_188CDC8((uint64_t)v212, v75);
            int v71 = (unsigned __int8 *)v221[0];
          }
          uint64_t result = (char *)sub_124C3AC(a3, v74, v71);
          v221[0] = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 722) {
            goto LABEL_370;
          }
        }
      case 0x2Bu:
        if (v8 != 90) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000000u;
        uint64_t v76 = *(void **)(a1 + 568);
        if (!v76)
        {
          uint64_t v77 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v211) {
            uint64_t v77 = (void *)*v77;
          }
          uint64_t v76 = sub_1662A30((uint64_t)v77);
          *(void *)(a1 + 568) = v76;
          uint64_t v7 = v221[0];
        }
        uint64_t result = (char *)sub_165DBE0(a3, (uint64_t)v76, (unsigned __int8 *)v7);
        goto LABEL_369;
      case 0x2Cu:
        if (v8 != 96) {
          goto LABEL_479;
        }
        BOOL v78 = v7 + 1;
        unint64_t v79 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_168;
        }
        int v80 = *v78;
        int v81 = v79 + (v80 << 7);
        unint64_t v79 = (v81 - 128);
        if (v80 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, (v81 - 128));
          v221[0] = result;
          if (!result) {
            return result;
          }
          unint64_t v79 = v197;
        }
        else
        {
          BOOL v78 = v7 + 2;
LABEL_168:
          v221[0] = v78;
        }
        if ((v79 - 1) <= 9)
        {
          *(_DWORD *)(a1 + 44) |= 0x400000u;
          *(_DWORD *)(a1 + 752) = v79;
          goto LABEL_370;
        }
        if (*v211) {
          v190 = (std::string *)((*v211 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v190 = (std::string *)sub_188DBD8(v211);
        }
        int v191 = 44;
        goto LABEL_441;
      case 0x2Du:
        if (v8 != 106) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v82 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v82 & 0xFFFFFFFFFFFFFFFCLL);
        if (v82) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 440);
        goto LABEL_368;
      case 0x2Eu:
        if (v8 != 114) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v83 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v83 & 0xFFFFFFFFFFFFFFFCLL);
        if (v83) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 448);
        goto LABEL_368;
      case 0x2Fu:
        if (v8 != 122) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        uint64_t v84 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v84 & 0xFFFFFFFFFFFFFFFCLL);
        if (v84) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 456);
        goto LABEL_368;
      case 0x30u:
        if (v8 != 128) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 0x2000u;
        uint64_t v85 = v7 + 1;
        uint64_t v86 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_187;
        }
        int v87 = *v85;
        uint64_t v86 = v86 + (v87 << 7) - 128;
        if (v87 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v86);
          v221[0] = result;
          *(void *)(a1 + 712) = v198;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v85 = v7 + 2;
LABEL_187:
          v221[0] = v85;
          *(void *)(a1 + 712) = v86;
        }
        goto LABEL_370;
      case 0x31u:
        if (v8 != 136) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 0x1000u;
        unint64_t v89 = v7 + 1;
        LODWORD(v88) = *v7;
        if ((v88 & 0x80) == 0) {
          goto LABEL_192;
        }
        int v90 = *v89;
        uint64_t v88 = v88 + (v90 << 7) - 128;
        if (v90 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v88);
          v221[0] = result;
          *(_DWORD *)(a1 + 708) = v199;
          if (!result) {
            return result;
          }
        }
        else
        {
          unint64_t v89 = v7 + 2;
LABEL_192:
          v221[0] = v89;
          *(_DWORD *)(a1 + 708) = v88;
        }
        goto LABEL_370;
      case 0x32u:
        if (v8 != 146) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000000u;
        uint64_t v91 = *(void *)(a1 + 576);
        if (v91) {
          goto LABEL_432;
        }
        uint64_t v92 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v211) {
          uint64_t v92 = (void *)*v92;
        }
        sub_1662B44((uint64_t)v92);
        uint64_t v91 = v93;
        *(void *)(a1 + 576) = v93;
        goto LABEL_431;
      case 0x33u:
        if (v8 != 154) {
          goto LABEL_479;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          uint64_t v94 = (unsigned __int8 *)(result + 2);
          v221[0] = result + 2;
          unint64_t v95 = *(_DWORD **)(a1 + 200);
          if (v95 && (uint64_t v96 = *(int *)(a1 + 192), (int)v96 < *v95))
          {
            *(_DWORD *)(a1 + 192) = v96 + 1;
            uint64_t v97 = *(void *)&v95[2 * v96 + 2];
          }
          else
          {
            sub_1653A3C(*v213);
            uint64_t v97 = sub_188CDC8((uint64_t)v213, v98);
            uint64_t v94 = (unsigned __int8 *)v221[0];
          }
          uint64_t result = (char *)sub_124C5EC(a3, v97, v94);
          v221[0] = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 922) {
            goto LABEL_370;
          }
        }
      case 0x34u:
        if (v8 != 162) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v99 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v99 & 0xFFFFFFFFFFFFFFFCLL);
        if (v99) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 464);
        goto LABEL_368;
      case 0x35u:
        if (v8 != 168) {
          goto LABEL_479;
        }
        uint64_t v100 = v7 + 1;
        unint64_t v79 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_216;
        }
        int v101 = *v100;
        int v102 = v79 + (v101 << 7);
        unint64_t v79 = (v102 - 128);
        if (v101 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, (v102 - 128));
          v221[0] = result;
          if (!result) {
            return result;
          }
          unint64_t v79 = v200;
        }
        else
        {
          uint64_t v100 = v7 + 2;
LABEL_216:
          v221[0] = v100;
        }
        if (v79 <= 0x12)
        {
          *(_DWORD *)(a1 + 44) |= 0x4000u;
          *(_DWORD *)(a1 + 720) = v79;
          goto LABEL_370;
        }
        if (*v211) {
          v190 = (std::string *)((*v211 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v190 = (std::string *)sub_188DBD8(v211);
        }
        int v191 = 53;
        goto LABEL_441;
      case 0x36u:
        if (v8 != 178) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000000u;
        uint64_t v103 = *(void **)(a1 + 584);
        if (!v103)
        {
          uint64_t v104 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v211) {
            uint64_t v104 = (void *)*v104;
          }
          uint64_t v103 = sub_166401C((uint64_t)v104);
          *(void *)(a1 + 584) = v103;
          uint64_t v7 = v221[0];
        }
        uint64_t result = (char *)sub_164E380(a3, (uint64_t)v103, (unsigned __int8 *)v7);
        goto LABEL_369;
      case 0x37u:
        if (v8 != 186) {
          goto LABEL_479;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          uint64_t v105 = (unsigned __int8 *)(result + 2);
          v221[0] = result + 2;
          uint64_t v106 = *(_DWORD **)(a1 + 224);
          if (v106 && (uint64_t v107 = *(int *)(a1 + 216), (int)v107 < *v106))
          {
            *(_DWORD *)(a1 + 216) = v107 + 1;
            uint64_t v108 = *(void *)&v106[2 * v107 + 2];
          }
          else
          {
            uint64_t v109 = sub_14984AC(*v214);
            uint64_t v108 = sub_188CDC8((uint64_t)v214, v109);
            uint64_t v105 = (unsigned __int8 *)v221[0];
          }
          uint64_t result = (char *)sub_14977C8(a3, v108, v105);
          v221[0] = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 954) {
            goto LABEL_370;
          }
        }
      case 0x38u:
        if (v8 != 194) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        uint64_t v110 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v110 & 0xFFFFFFFFFFFFFFFCLL);
        if (v110) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 472);
        goto LABEL_368;
      case 0x39u:
        if (v8 != 202) {
          goto LABEL_479;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          uint64_t v111 = (unsigned __int8 *)(result + 2);
          v221[0] = result + 2;
          uint64_t v112 = *(_DWORD **)(a1 + 248);
          if (v112 && (uint64_t v113 = *(int *)(a1 + 240), (int)v113 < *v112))
          {
            *(_DWORD *)(a1 + 240) = v113 + 1;
            uint64_t v114 = *(void *)&v112[2 * v113 + 2];
          }
          else
          {
            sub_1662994(*v215);
            uint64_t v114 = sub_188CDC8((uint64_t)v215, v115);
            uint64_t v111 = (unsigned __int8 *)v221[0];
          }
          uint64_t result = (char *)sub_124C3AC(a3, v114, v111);
          v221[0] = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 970) {
            goto LABEL_370;
          }
        }
      case 0x3Au:
        if (v8 != 210) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000u;
        uint64_t v116 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v116 & 0xFFFFFFFFFFFFFFFCLL);
        if (v116) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 480);
        goto LABEL_368;
      case 0x3Bu:
        if (v8 != 218) {
          goto LABEL_479;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          uint64_t v117 = (unsigned __int8 *)(result + 2);
          v221[0] = result + 2;
          uint64_t v118 = *(_DWORD **)(a1 + 272);
          if (v118 && (uint64_t v119 = *(int *)(a1 + 264), (int)v119 < *v118))
          {
            *(_DWORD *)(a1 + 264) = v119 + 1;
            uint64_t v120 = *(void *)&v118[2 * v119 + 2];
          }
          else
          {
            uint64_t v121 = sub_16640A4(*v216);
            uint64_t v120 = sub_188CDC8((uint64_t)v216, (uint64_t)v121);
            uint64_t v117 = (unsigned __int8 *)v221[0];
          }
          uint64_t result = (char *)sub_124C4CC(a3, v120, v117);
          v221[0] = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 986) {
            goto LABEL_370;
          }
        }
      case 0x3Cu:
        if (v8 != 226) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000u;
        uint64_t v122 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v122 & 0xFFFFFFFFFFFFFFFCLL);
        if (v122) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 488);
        goto LABEL_368;
      case 0x3Du:
        if (v8 != 234) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000000u;
        uint64_t v123 = *(void *)(a1 + 592);
        if (v123) {
          goto LABEL_378;
        }
        int v124 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v211) {
          int v124 = (void *)*v124;
        }
        uint64_t v123 = sub_1497018((uint64_t)v124);
        *(void *)(a1 + 592) = v123;
        goto LABEL_377;
      case 0x3Eu:
        if (v8 != 240) {
          goto LABEL_479;
        }
        uint64_t v125 = v7 + 1;
        unint64_t v79 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_276;
        }
        int v126 = *v125;
        int v127 = v79 + (v126 << 7);
        unint64_t v79 = (v127 - 128);
        if (v126 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, (v127 - 128));
          v221[0] = result;
          if (!result) {
            return result;
          }
          unint64_t v79 = v201;
        }
        else
        {
          uint64_t v125 = v7 + 2;
LABEL_276:
          v221[0] = v125;
        }
        if (v79 <= 3)
        {
          *(_DWORD *)(a1 + 44) |= 0x8000u;
          *(_DWORD *)(a1 + 724) = v79;
          goto LABEL_370;
        }
        if (*v211) {
          v190 = (std::string *)((*v211 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v190 = (std::string *)sub_188DBD8(v211);
        }
        int v191 = 62;
        goto LABEL_441;
      case 0x3Fu:
        if (v8 != 248) {
          goto LABEL_479;
        }
        uint64_t v128 = v7 + 1;
        unint64_t v79 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_283;
        }
        int v129 = *v128;
        int v130 = v79 + (v129 << 7);
        unint64_t v79 = (v130 - 128);
        if (v129 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, (v130 - 128));
          v221[0] = result;
          if (!result) {
            return result;
          }
          unint64_t v79 = v202;
        }
        else
        {
          uint64_t v128 = v7 + 2;
LABEL_283:
          v221[0] = v128;
        }
        if (v79 < 5 || v79 == 10)
        {
          *(_DWORD *)(a1 + 44) |= 0x10000u;
          *(_DWORD *)(a1 + 728) = v79;
          goto LABEL_370;
        }
        if (*v211) {
          v190 = (std::string *)((*v211 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v190 = (std::string *)sub_188DBD8(v211);
        }
        int v191 = 63;
        goto LABEL_441;
      case 0x40u:
        if (v8 != 2) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000u;
        uint64_t v132 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v132 & 0xFFFFFFFFFFFFFFFCLL);
        if (v132) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 496);
        goto LABEL_368;
      case 0x41u:
        if (v8 != 10) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000000u;
        uint64_t v25 = *(void *)(a1 + 600);
        if (v25) {
          goto LABEL_300;
        }
        BOOL v133 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v211) {
          BOOL v133 = (void *)*v133;
        }
        uint64_t v25 = sub_15C19EC((uint64_t)v133);
        *(void *)(a1 + 600) = v25;
LABEL_299:
        uint64_t v7 = v221[0];
LABEL_300:
        uint64_t result = sub_11E1C60(a3, v25, (unsigned __int8 *)v7);
        goto LABEL_369;
      case 0x42u:
        if (v8 != 18) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000u;
        uint64_t v134 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v134 & 0xFFFFFFFFFFFFFFFCLL);
        if (v134) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 504);
        goto LABEL_368;
      case 0x43u:
        if (v8 != 26) {
          goto LABEL_479;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          int v135 = (unsigned __int8 *)(result + 2);
          v221[0] = result + 2;
          int v136 = *(_DWORD **)(a1 + 296);
          if (v136 && (uint64_t v137 = *(int *)(a1 + 288), (int)v137 < *v136))
          {
            *(_DWORD *)(a1 + 288) = v137 + 1;
            uint64_t v138 = *(void *)&v136[2 * v137 + 2];
          }
          else
          {
            int v139 = sub_1662FD4(*v217);
            uint64_t v138 = sub_188CDC8((uint64_t)v217, (uint64_t)v139);
            int v135 = (unsigned __int8 *)v221[0];
          }
          uint64_t result = sub_165DD00(a3, v138, v135);
          v221[0] = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1178) {
            goto LABEL_370;
          }
        }
      case 0x44u:
        if (v8 != 34) {
          goto LABEL_479;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          int v140 = result + 2;
          v221[0] = result + 2;
          unint64_t v141 = *(_DWORD **)(a1 + 320);
          if (v141 && (uint64_t v142 = *(int *)(a1 + 312), (int)v142 < *v141))
          {
            *(_DWORD *)(a1 + 312) = v142 + 1;
            int v143 = *(std::string **)&v141[2 * v142 + 2];
          }
          else
          {
            if (!*v220) {
              operator new();
            }
            void *v145 = v144;
            v145[1] = sub_3A6EDC;
            *unint64_t v144 = 0;
            v144[1] = 0;
            v144[2] = 0;
            int v143 = (std::string *)sub_188CDC8((uint64_t)v220, (uint64_t)v144);
            int v140 = v221[0];
          }
          uint64_t result = (char *)sub_188C244(v143, v140, (uint64_t)a3);
          v221[0] = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1186) {
            goto LABEL_370;
          }
        }
      case 0x45u:
        if (v8 != 42) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000u;
        uint64_t v146 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v146 & 0xFFFFFFFFFFFFFFFCLL);
        if (v146) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 512);
        goto LABEL_368;
      case 0x46u:
        if (v8 != 50) {
          goto LABEL_479;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          int v147 = (unsigned __int8 *)(result + 2);
          v221[0] = result + 2;
          int v148 = *(_DWORD **)(a1 + 344);
          if (v148 && (uint64_t v149 = *(int *)(a1 + 336), (int)v149 < *v148))
          {
            *(_DWORD *)(a1 + 336) = v149 + 1;
            uint64_t v150 = *(void *)&v148[2 * v149 + 2];
          }
          else
          {
            uint64_t v151 = sub_1663050(*v218);
            uint64_t v150 = sub_188CDC8((uint64_t)v218, v151);
            int v147 = (unsigned __int8 *)v221[0];
          }
          uint64_t result = sub_124C43C(a3, v150, v147);
          v221[0] = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1202) {
            goto LABEL_370;
          }
        }
      case 0x47u:
        if (v8 != 58) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000u;
        uint64_t v152 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v152 & 0xFFFFFFFFFFFFFFFCLL);
        if (v152) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 520);
        goto LABEL_368;
      case 0x48u:
        if (v8 != 66) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000u;
        uint64_t v153 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v153 & 0xFFFFFFFFFFFFFFFCLL);
        if (v153) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 528);
        goto LABEL_368;
      case 0x49u:
        if (v8 != 72) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 0x20000u;
        uint64_t v154 = v7 + 1;
        uint64_t v155 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_353;
        }
        int v156 = *v154;
        uint64_t v155 = v155 + (v156 << 7) - 128;
        if (v156 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v155);
          v221[0] = result;
          *(unsigned char *)(a1 + 732) = v203 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v154 = v7 + 2;
LABEL_353:
          v221[0] = v154;
          *(unsigned char *)(a1 + 732) = v155 != 0;
        }
        goto LABEL_370;
      case 0x4Au:
        if (v8 != 80) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 0x40000u;
        uint64_t v157 = v7 + 1;
        uint64_t v158 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_358;
        }
        int v159 = *v157;
        uint64_t v158 = v158 + (v159 << 7) - 128;
        if (v159 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v158);
          v221[0] = result;
          *(unsigned char *)(a1 + 733) = v204 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v157 = v7 + 2;
LABEL_358:
          v221[0] = v157;
          *(unsigned char *)(a1 + 733) = v158 != 0;
        }
        goto LABEL_370;
      case 0x4Bu:
        if (v8 != 88) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 0x80000u;
        int v160 = v7 + 1;
        int v161 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_363;
        }
        int v162 = *v160;
        int v161 = v161 + (v162 << 7) - 128;
        if (v162 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v7, v161);
          v221[0] = result;
          *(_DWORD *)(a1 + 736) = v205;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v160 = v7 + 2;
LABEL_363:
          v221[0] = v160;
          *(_DWORD *)(a1 + 736) = v161;
        }
        goto LABEL_370;
      case 0x4Cu:
        if (v8 != 98) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x100000u;
        uint64_t v163 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v163 & 0xFFFFFFFFFFFFFFFCLL);
        if (v163) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        uint64_t v15 = (void *)(a1 + 536);
LABEL_368:
        uint64_t v164 = (std::string *)sub_1880F84(v15, v14);
        uint64_t result = (char *)sub_188C244(v164, v221[0], (uint64_t)a3);
        goto LABEL_369;
      case 0x4Du:
        if (v8 != 106) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000000u;
        uint64_t v91 = *(void *)(a1 + 608);
        if (v91) {
          goto LABEL_432;
        }
        v185 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v211) {
          v185 = (void *)*v185;
        }
        sub_1662B44((uint64_t)v185);
        uint64_t v91 = v186;
        *(void *)(a1 + 608) = v186;
LABEL_431:
        uint64_t v7 = v221[0];
LABEL_432:
        uint64_t result = (char *)sub_165DC70(a3, v91, (unsigned __int8 *)v7);
        goto LABEL_369;
      case 0x4Eu:
        if (v8 != 114) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000000u;
        uint64_t v123 = *(void *)(a1 + 616);
        if (v123) {
          goto LABEL_378;
        }
        uint64_t v166 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v211) {
          uint64_t v166 = (void *)*v166;
        }
        uint64_t v123 = sub_1497018((uint64_t)v166);
        *(void *)(a1 + 616) = v123;
LABEL_377:
        uint64_t v7 = v221[0];
LABEL_378:
        uint64_t result = (char *)sub_11920F8(a3, v123, (unsigned __int8 *)v7);
        goto LABEL_369;
      case 0x4Fu:
        if (v8 != 120) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 0x200000u;
        v187 = v7 + 1;
        uint64_t v188 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_437;
        }
        int v189 = *v187;
        uint64_t v188 = v188 + (v189 << 7) - 128;
        if (v189 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, v188);
          v221[0] = result;
          *(void *)(a1 + 744) = v207;
          if (!result) {
            return result;
          }
        }
        else
        {
          v187 = v7 + 2;
LABEL_437:
          v221[0] = v187;
          *(void *)(a1 + 744) = v188;
        }
        goto LABEL_370;
      case 0x50u:
        if (v8 != 130) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000000;
        uint64_t v167 = *(void **)(a1 + 624);
        if (!v167)
        {
          uint64_t v168 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v211) {
            uint64_t v168 = (void *)*v168;
          }
          uint64_t v167 = sub_15C24B4((uint64_t)v168);
          *(void *)(a1 + 624) = v167;
          uint64_t v7 = v221[0];
        }
        uint64_t result = (char *)sub_145C8FC(a3, (uint64_t)v167, (unsigned __int8 *)v7);
        goto LABEL_369;
      case 0x51u:
        if (v8 != 138) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v169 = *(void **)(a1 + 632);
        if (!v169)
        {
          uint64_t v170 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v211) {
            uint64_t v170 = (void *)*v170;
          }
          uint64_t v169 = sub_1664128((uint64_t)v170);
          *(void *)(a1 + 632) = v169;
          uint64_t v7 = v221[0];
        }
        uint64_t result = sub_164E410(a3, (uint64_t)v169, (unsigned __int8 *)v7);
        goto LABEL_369;
      case 0x52u:
        if (v8 != 144) {
          goto LABEL_479;
        }
        uint64_t v171 = v7 + 1;
        unint64_t v79 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_395;
        }
        int v172 = *v171;
        int v173 = v79 + (v172 << 7);
        unint64_t v79 = (v173 - 128);
        if (v172 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v7, (v173 - 128));
          v221[0] = result;
          if (!result) {
            return result;
          }
          unint64_t v79 = v206;
        }
        else
        {
          uint64_t v171 = v7 + 2;
LABEL_395:
          v221[0] = v171;
        }
        if (sub_1369B8C(v79))
        {
          *(_DWORD *)(a1 + 44) |= 0x100000u;
          *(_DWORD *)(a1 + 740) = v79;
        }
        else
        {
          if (*v211) {
            v190 = (std::string *)((*v211 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v190 = (std::string *)sub_188DBD8(v211);
          }
          int v191 = 82;
LABEL_441:
          sub_188C020(v191, v79, v190);
        }
        goto LABEL_370;
      case 0x53u:
        if (v8 != 154) {
          goto LABEL_479;
        }
        uint64_t result = v7 - 2;
        while (1)
        {
          uint64_t v174 = (unsigned __int8 *)(result + 2);
          v221[0] = result + 2;
          uint64_t v175 = *(_DWORD **)(a1 + 368);
          if (v175 && (uint64_t v176 = *(int *)(a1 + 360), (int)v176 < *v175))
          {
            *(_DWORD *)(a1 + 360) = v176 + 1;
            uint64_t v177 = *(void *)&v175[2 * v176 + 2];
          }
          else
          {
            uint64_t v178 = sub_12BBB40(*v219);
            uint64_t v177 = sub_188CDC8((uint64_t)v219, v178);
            uint64_t v174 = (unsigned __int8 *)v221[0];
          }
          uint64_t result = (char *)sub_120AA94(a3, v177, v174);
          v221[0] = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1434) {
            goto LABEL_370;
          }
        }
      case 0x54u:
        if (v8 != 162) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        uint64_t v179 = *(void *)(a1 + 640);
        if (!v179)
        {
          v180 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v211) {
            v180 = (void *)*v180;
          }
          uint64_t v179 = sub_12BBB40((uint64_t)v180);
          *(void *)(a1 + 640) = v179;
          uint64_t v7 = v221[0];
        }
        uint64_t result = (char *)sub_120AA94(a3, v179, (unsigned __int8 *)v7);
        goto LABEL_369;
      case 0x55u:
        if (v8 != 170) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        uint64_t v181 = *(void *)(a1 + 648);
        if (!v181)
        {
          int v182 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v211) {
            int v182 = (void *)*v182;
          }
          uint64_t v181 = sub_178CE04((uint64_t)v182);
          *(void *)(a1 + 648) = v181;
          uint64_t v7 = v221[0];
        }
        uint64_t result = sub_1317850(a3, v181, (unsigned __int8 *)v7);
        goto LABEL_369;
      case 0x56u:
        if (v8 != 178) {
          goto LABEL_479;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        uint64_t v183 = *(void *)(a1 + 656);
        if (!v183)
        {
          v184 = (void *)(*v211 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v211) {
            v184 = (void *)*v184;
          }
          uint64_t v183 = sub_1662ECC((uint64_t)v184);
          *(void *)(a1 + 656) = v183;
          uint64_t v7 = v221[0];
        }
        uint64_t result = sub_165DD90(a3, v183, (unsigned __int8 *)v7);
        goto LABEL_369;
      default:
        goto LABEL_479;
    }
  }
}

uint64_t sub_165DBE0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1654ACC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_165DC70(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1655F88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_165DD00(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1661AC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_165DD90(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_165A660(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_165DE20(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 544);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15BA180(v7, (unint64_t)v9, a3);
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 376) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 56);
  if ((int)v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i);
      char *v4 = 24;
      v4[1] = v12;
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        v4[2] = v12 >> 7;
        v4 += 3;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v14 = v13 >> 14;
            v13 >>= 7;
            *v4++ = v13;
          }
          while (v14);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((*(unsigned char *)(a1 + 44) & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 664);
    char *v4 = 33;
    *(void *)(v4 + 1) = v15;
    v4 += 9;
  }
  int v16 = *(_DWORD *)(a1 + 40);
  if ((v16 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v17 = *(void *)(a1 + 552);
    char *v4 = 42;
    unsigned int v18 = *(_DWORD *)(v17 + 44);
    v4[1] = v18;
    if (v18 > 0x7F) {
      uint64_t v19 = sub_188A9CC(v18, v4 + 1);
    }
    else {
      uint64_t v19 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v17, v19, a3);
  }
  if ((v16 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v20 = *(void *)(a1 + 560);
    char *v4 = 50;
    unsigned int v21 = *(_DWORD *)(v20 + 20);
    v4[1] = v21;
    if (v21 > 0x7F) {
      uint64_t v22 = sub_188A9CC(v21, v4 + 1);
    }
    else {
      uint64_t v22 = v4 + 2;
    }
    uint64_t v4 = sub_15B1A68(v20, (unint64_t)v22, a3);
  }
  if ((*(unsigned char *)(a1 + 44) & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v23 = *(int *)(a1 + 672);
    char *v4 = 56;
    v4[1] = v23;
    if (v23 > 0x7F)
    {
      v4[1] = v23 | 0x80;
      unint64_t v24 = v23 >> 7;
      v4[2] = v23 >> 7;
      v4 += 3;
      if (v23 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v25 = v24 >> 14;
          v24 >>= 7;
          *v4++ = v24;
        }
        while (v25);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v26 = *(_DWORD *)(a1 + 40);
  if ((v26 & 2) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 384) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v26 & 4) == 0)
    {
LABEL_46:
      if ((v26 & 8) == 0) {
        goto LABEL_47;
      }
      goto LABEL_66;
    }
  }
  else if ((v26 & 4) == 0)
  {
    goto LABEL_46;
  }
  uint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 392) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v26 & 8) == 0)
  {
LABEL_47:
    if ((v26 & 0x10) == 0) {
      goto LABEL_48;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 400) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v26 & 0x10) == 0)
  {
LABEL_48:
    if ((v26 & 0x20) == 0) {
      goto LABEL_49;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t v4 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 408) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v26 & 0x20) == 0)
  {
LABEL_49:
    if ((v26 & 0x40) == 0) {
      goto LABEL_51;
    }
    goto LABEL_50;
  }
LABEL_68:
  uint64_t v4 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 416) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v26 & 0x40) != 0) {
LABEL_50:
  }
    uint64_t v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 424) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_51:
  int v27 = *(_DWORD *)(a1 + 80);
  if (v27)
  {
    for (int j = 0; j != v27; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 418;
      unsigned int v30 = *(_DWORD *)(v29 + 20);
      v4[2] = v30;
      if (v30 > 0x7F) {
        uint64_t v31 = sub_188A9CC(v30, v4 + 2);
      }
      else {
        uint64_t v31 = v4 + 3;
      }
      uint64_t v4 = sub_15BAD4C(v29, (unint64_t)v31, a3);
    }
  }
  int v32 = *(_DWORD *)(a1 + 44);
  if ((v32 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v33 = *(int *)(a1 + 676);
    *(_WORD *)uint64_t v4 = 424;
    v4[2] = v33;
    if (v33 > 0x7F)
    {
      v4[2] = v33 | 0x80;
      unint64_t v34 = v33 >> 7;
      v4[3] = v33 >> 7;
      v4 += 4;
      if (v33 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v35 = v34 >> 14;
          v34 >>= 7;
          *v4++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v32 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v36 = *(_DWORD *)(a1 + 696);
    *(_WORD *)uint64_t v4 = 432;
    v4[2] = v36;
    if (v36 > 0x7F)
    {
      v4[2] = v36 | 0x80;
      unsigned int v37 = v36 >> 7;
      v4[3] = v36 >> 7;
      v4 += 4;
      if (v36 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v38 = v37 >> 14;
          v37 >>= 7;
          *v4++ = v37;
        }
        while (v38);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((*(unsigned char *)(a1 + 40) & 0x80) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 23, (const void **)(*(void *)(a1 + 432) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v39 = *(_DWORD *)(a1 + 44);
  if ((v39 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v40 = *(void *)(a1 + 680);
    *(_WORD *)uint64_t v4 = 449;
    *(void *)(v4 + 2) = v40;
    v4 += 10;
    if ((v39 & 0x100) == 0)
    {
LABEL_83:
      if ((v39 & 0x400) == 0) {
        goto LABEL_97;
      }
      goto LABEL_91;
    }
  }
  else if ((v39 & 0x100) == 0)
  {
    goto LABEL_83;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v41 = *(void *)(a1 + 688);
  *(_WORD *)uint64_t v4 = 457;
  *(void *)(v4 + 2) = v41;
  v4 += 10;
  if ((v39 & 0x400) != 0)
  {
LABEL_91:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v42 = *(_DWORD *)(a1 + 700);
    *(_WORD *)uint64_t v4 = 496;
    v4[2] = v42;
    if (v42 > 0x7F)
    {
      v4[2] = v42 | 0x80;
      unsigned int v43 = v42 >> 7;
      v4[3] = v42 >> 7;
      v4 += 4;
      if (v42 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v44 = v43 >> 14;
          v43 >>= 7;
          *v4++ = v43;
        }
        while (v44);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_97:
  if ((v39 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v45 = *(_DWORD *)(a1 + 704);
    *(_WORD *)uint64_t v4 = 504;
    v4[2] = v45;
    if (v45 > 0x7F)
    {
      v4[2] = v45 | 0x80;
      unsigned int v46 = v45 >> 7;
      v4[3] = v45 >> 7;
      v4 += 4;
      if (v45 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v47 = v46 >> 14;
          v46 >>= 7;
          *v4++ = v46;
        }
        while (v47);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v48 = *(_DWORD *)(a1 + 104);
  if (v48)
  {
    for (int k = 0; k != v48; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v50 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *(_WORD *)uint64_t v4 = 698;
      unsigned int v51 = *(_DWORD *)(v50 + 20);
      v4[2] = v51;
      if (v51 > 0x7F) {
        int v52 = sub_188A9CC(v51, v4 + 2);
      }
      else {
        int v52 = v4 + 3;
      }
      uint64_t v4 = sub_1476E80(v50, v52, a3);
    }
  }
  int v53 = *(_DWORD *)(a1 + 128);
  if (v53)
  {
    for (int m = 0; m != v53; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v55 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 706;
      unsigned int v56 = *(_DWORD *)(v55 + 20);
      v4[2] = v56;
      if (v56 > 0x7F) {
        unint64_t v57 = sub_188A9CC(v56, v4 + 2);
      }
      else {
        unint64_t v57 = v4 + 3;
      }
      uint64_t v4 = sub_16556DC(v55, (unint64_t)v57, a3);
    }
  }
  uint64_t v58 = *(unsigned int *)(a1 + 144);
  if ((int)v58 >= 1)
  {
    for (uint64_t n = 0; n != v58; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v60 = *(void *)(*(void *)(a1 + 152) + 8 * n);
      *(_WORD *)uint64_t v4 = 712;
      v4[2] = v60;
      if (v60 > 0x7F)
      {
        v4[2] = v60 | 0x80;
        unint64_t v61 = v60 >> 7;
        v4[3] = v60 >> 7;
        v4 += 4;
        if (v60 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v62 = v61 >> 14;
            v61 >>= 7;
            *v4++ = v61;
          }
          while (v62);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  int v63 = *(_DWORD *)(a1 + 168);
  if (v63)
  {
    for (iuint64_t i = 0; ii != v63; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v65 = *(void *)(*(void *)(a1 + 176) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 722;
      unsigned int v66 = *(_DWORD *)(v65 + 20);
      v4[2] = v66;
      if (v66 > 0x7F) {
        int v67 = sub_188A9CC(v66, v4 + 2);
      }
      else {
        int v67 = v4 + 3;
      }
      uint64_t v4 = sub_16541B0(v65, (unint64_t)v67, a3);
    }
  }
  if (*(unsigned char *)(a1 + 43))
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v68 = *(void *)(a1 + 568);
    *(_WORD *)uint64_t v4 = 730;
    unsigned int v69 = *(_DWORD *)(v68 + 20);
    v4[2] = v69;
    if (v69 > 0x7F) {
      int v70 = sub_188A9CC(v69, v4 + 2);
    }
    else {
      int v70 = v4 + 3;
    }
    uint64_t v4 = sub_1654D7C(v68, v70, a3);
  }
  if ((*(unsigned char *)(a1 + 46) & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v71 = *(int *)(a1 + 752);
    *(_WORD *)uint64_t v4 = 736;
    v4[2] = v71;
    if (v71 > 0x7F)
    {
      v4[2] = v71 | 0x80;
      unint64_t v72 = v71 >> 7;
      v4[3] = v71 >> 7;
      v4 += 4;
      if (v71 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v73 = v72 >> 14;
          v72 >>= 7;
          *v4++ = v72;
        }
        while (v73);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v74 = *(_DWORD *)(a1 + 40);
  if ((v74 & 0x100) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 45, (const void **)(*(void *)(a1 + 440) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v74 & 0x200) == 0)
    {
LABEL_153:
      if ((v74 & 0x400) == 0) {
        goto LABEL_155;
      }
      goto LABEL_154;
    }
  }
  else if ((v74 & 0x200) == 0)
  {
    goto LABEL_153;
  }
  uint64_t v4 = sub_117A0AC(a3, 46, (const void **)(*(void *)(a1 + 448) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v74 & 0x400) != 0) {
LABEL_154:
  }
    uint64_t v4 = sub_117A0AC(a3, 47, (const void **)(*(void *)(a1 + 456) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_155:
  int v75 = *(_DWORD *)(a1 + 44);
  if ((v75 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v76 = *(void *)(a1 + 712);
    *(_WORD *)uint64_t v4 = 896;
    v4[2] = v76;
    if (v76 > 0x7F)
    {
      v4[2] = v76 | 0x80;
      unint64_t v77 = v76 >> 7;
      v4[3] = v76 >> 7;
      v4 += 4;
      if (v76 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v78 = v77 >> 14;
          v77 >>= 7;
          *v4++ = v77;
        }
        while (v78);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v75 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v79 = *(int *)(a1 + 708);
    *(_WORD *)uint64_t v4 = 904;
    v4[2] = v79;
    if (v79 > 0x7F)
    {
      v4[2] = v79 | 0x80;
      unint64_t v80 = v79 >> 7;
      v4[3] = v79 >> 7;
      v4 += 4;
      if (v79 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v81 = v80 >> 14;
          v80 >>= 7;
          *v4++ = v80;
        }
        while (v81);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v82 = *(_DWORD *)(a1 + 40);
  if ((v82 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v83 = *(void *)(a1 + 576);
    *(_WORD *)uint64_t v4 = 914;
    unsigned int v84 = *(_DWORD *)(v83 + 20);
    v4[2] = v84;
    if (v84 > 0x7F) {
      uint64_t v85 = sub_188A9CC(v84, v4 + 2);
    }
    else {
      uint64_t v85 = v4 + 3;
    }
    uint64_t v4 = sub_165674C(v83, (unint64_t)v85, a3);
  }
  int v86 = *(_DWORD *)(a1 + 192);
  if (v86)
  {
    for (jint j = 0; jj != v86; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v88 = *(void *)(*(void *)(a1 + 200) + 8 * jj + 8);
      *(_WORD *)uint64_t v4 = 922;
      unsigned int v89 = *(_DWORD *)(v88 + 20);
      v4[2] = v89;
      if (v89 > 0x7F) {
        int v90 = sub_188A9CC(v89, v4 + 2);
      }
      else {
        int v90 = v4 + 3;
      }
      uint64_t v4 = sub_16525CC(v88, v90, a3);
    }
  }
  if ((v82 & 0x800) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 52, (const void **)(*(void *)(a1 + 464) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((*(unsigned char *)(a1 + 45) & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v91 = *(int *)(a1 + 720);
    *(_WORD *)uint64_t v4 = 936;
    v4[2] = v91;
    if (v91 > 0x7F)
    {
      v4[2] = v91 | 0x80;
      unint64_t v92 = v91 >> 7;
      v4[3] = v91 >> 7;
      v4 += 4;
      if (v91 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v93 = v92 >> 14;
          v92 >>= 7;
          *v4++ = v92;
        }
        while (v93);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v94 = *(_DWORD *)(a1 + 40);
  if ((v94 & 0x4000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v95 = *(void *)(a1 + 584);
    *(_WORD *)uint64_t v4 = 946;
    unsigned int v96 = *(_DWORD *)(v95 + 20);
    v4[2] = v96;
    if (v96 > 0x7F) {
      uint64_t v97 = sub_188A9CC(v96, v4 + 2);
    }
    else {
      uint64_t v97 = v4 + 3;
    }
    uint64_t v4 = sub_16633C8(v95, v97, a3);
  }
  int v98 = *(_DWORD *)(a1 + 216);
  if (v98)
  {
    for (kint k = 0; kk != v98; ++kk)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v100 = *(void *)(*(void *)(a1 + 224) + 8 * kk + 8);
      *(_WORD *)uint64_t v4 = 954;
      unsigned int v101 = *(_DWORD *)(v100 + 20);
      v4[2] = v101;
      if (v101 > 0x7F) {
        int v102 = sub_188A9CC(v101, v4 + 2);
      }
      else {
        int v102 = v4 + 3;
      }
      uint64_t v4 = sub_14981DC(v100, (unint64_t)v102, a3);
    }
  }
  if ((v94 & 0x1000) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 56, (const void **)(*(void *)(a1 + 472) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v103 = *(_DWORD *)(a1 + 240);
  if (v103)
  {
    for (mint m = 0; mm != v103; ++mm)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v105 = *(void *)(*(void *)(a1 + 248) + 8 * mm + 8);
      *(_WORD *)uint64_t v4 = 970;
      unsigned int v106 = *(_DWORD *)(v105 + 20);
      v4[2] = v106;
      if (v106 > 0x7F) {
        uint64_t v107 = sub_188A9CC(v106, v4 + 2);
      }
      else {
        uint64_t v107 = v4 + 3;
      }
      uint64_t v4 = sub_16541B0(v105, (unint64_t)v107, a3);
    }
  }
  if ((v94 & 0x2000) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 58, (const void **)(*(void *)(a1 + 480) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v108 = *(_DWORD *)(a1 + 264);
  if (v108)
  {
    for (nuint64_t n = 0; nn != v108; ++nn)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v110 = *(void *)(*(void *)(a1 + 272) + 8 * nn + 8);
      *(_WORD *)uint64_t v4 = 986;
      unsigned int v111 = *(_DWORD *)(v110 + 20);
      v4[2] = v111;
      if (v111 > 0x7F) {
        uint64_t v112 = sub_188A9CC(v111, v4 + 2);
      }
      else {
        uint64_t v112 = v4 + 3;
      }
      uint64_t v4 = sub_166392C(v110, v112, a3);
    }
  }
  if ((v94 & 0x4000) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 60, (const void **)(*(void *)(a1 + 488) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v94 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v113 = *(void *)(a1 + 592);
    *(_WORD *)uint64_t v4 = 1002;
    unsigned int v114 = *(_DWORD *)(v113 + 20);
    v4[2] = v114;
    if (v114 > 0x7F) {
      uint64_t v115 = sub_188A9CC(v114, v4 + 2);
    }
    else {
      uint64_t v115 = v4 + 3;
    }
    uint64_t v4 = sub_1496514(v113, v115, a3);
  }
  int v116 = *(_DWORD *)(a1 + 44);
  if ((v116 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v117 = *(int *)(a1 + 724);
    *(_WORD *)uint64_t v4 = 1008;
    v4[2] = v117;
    if (v117 > 0x7F)
    {
      v4[2] = v117 | 0x80;
      unint64_t v118 = v117 >> 7;
      v4[3] = v117 >> 7;
      v4 += 4;
      if (v117 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v119 = v118 >> 14;
          v118 >>= 7;
          *v4++ = v118;
        }
        while (v119);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v116 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v120 = *(int *)(a1 + 728);
    *(_WORD *)uint64_t v4 = 1016;
    v4[2] = v120;
    if (v120 > 0x7F)
    {
      v4[2] = v120 | 0x80;
      unint64_t v121 = v120 >> 7;
      v4[3] = v120 >> 7;
      v4 += 4;
      if (v120 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v122 = v121 >> 14;
          v121 >>= 7;
          *v4++ = v121;
        }
        while (v122);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v123 = *(_DWORD *)(a1 + 40);
  if ((v123 & 0x8000) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 64, (const void **)(*(void *)(a1 + 496) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v123 & 0x10000000) == 0)
    {
LABEL_256:
      if ((v123 & 0x10000) == 0) {
        goto LABEL_258;
      }
      goto LABEL_257;
    }
  }
  else if ((v123 & 0x10000000) == 0)
  {
    goto LABEL_256;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v141 = *(void *)(a1 + 600);
  *(_WORD *)uint64_t v4 = 1162;
  unsigned int v142 = *(_DWORD *)(v141 + 20);
  v4[2] = v142;
  if (v142 > 0x7F) {
    int v143 = sub_188A9CC(v142, v4 + 2);
  }
  else {
    int v143 = v4 + 3;
  }
  uint64_t v4 = sub_15B1A68(v141, (unint64_t)v143, a3);
  if ((v123 & 0x10000) != 0) {
LABEL_257:
  }
    uint64_t v4 = sub_117A0AC(a3, 66, (const void **)(*(void *)(a1 + 504) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_258:
  int v124 = *(_DWORD *)(a1 + 288);
  if (v124)
  {
    for (int i1 = 0; i1 != v124; ++i1)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v126 = *(void *)(*(void *)(a1 + 296) + 8 * i1 + 8);
      *(_WORD *)uint64_t v4 = 1178;
      unsigned int v127 = *(_DWORD *)(v126 + 20);
      v4[2] = v127;
      if (v127 > 0x7F) {
        uint64_t v128 = sub_188A9CC(v127, v4 + 2);
      }
      else {
        uint64_t v128 = v4 + 3;
      }
      uint64_t v4 = sub_1661D90(v126, (unint64_t)v128, a3);
    }
  }
  uint64_t v129 = *(unsigned int *)(a1 + 312);
  if ((int)v129 >= 1)
  {
    uint64_t v130 = 0;
    uint64_t v131 = 8 * v129;
    do
    {
      uint64_t v132 = *(void **)(*(void *)(a1 + 320) + v130 + 8);
      if (*((char *)v132 + 23) < 0)
      {
        int64_t v133 = v132[1];
        if (v133 > 127) {
          goto LABEL_277;
        }
      }
      else
      {
        int64_t v133 = *((unsigned __int8 *)v132 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v133)
      {
        *(_WORD *)uint64_t v4 = 1186;
        v4[2] = v133;
        if (*((char *)v132 + 23) < 0) {
          uint64_t v132 = (void *)*v132;
        }
        uint64_t v134 = v4 + 3;
        memcpy(v134, v132, v133);
        uint64_t v4 = &v134[v133];
        goto LABEL_275;
      }
LABEL_277:
      uint64_t v4 = (char *)sub_188A868(a3, 68, (uint64_t)v132, v4);
LABEL_275:
      v130 += 8;
    }
    while (v131 != v130);
  }
  if ((v123 & 0x20000) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 69, (const void **)(*(void *)(a1 + 512) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v135 = *(_DWORD *)(a1 + 336);
  if (v135)
  {
    for (int i2 = 0; i2 != v135; ++i2)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v137 = *(void *)(*(void *)(a1 + 344) + 8 * i2 + 8);
      *(_WORD *)uint64_t v4 = 1202;
      unsigned int v138 = *(_DWORD *)(v137 + 20);
      v4[2] = v138;
      if (v138 > 0x7F) {
        int v139 = sub_188A9CC(v138, v4 + 2);
      }
      else {
        int v139 = v4 + 3;
      }
      uint64_t v4 = sub_166254C(v137, (unint64_t)v139, a3);
    }
  }
  if ((v123 & 0x40000) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 71, (const void **)(*(void *)(a1 + 520) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v123 & 0x80000) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 72, (const void **)(*(void *)(a1 + 528) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v140 = *(_DWORD *)(a1 + 44);
  if ((v140 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v144 = *(unsigned char *)(a1 + 732);
    *(_WORD *)uint64_t v4 = 1224;
    v4[2] = v144;
    v4 += 3;
    if ((v140 & 0x40000) == 0)
    {
LABEL_294:
      if ((v140 & 0x80000) == 0) {
        goto LABEL_316;
      }
      goto LABEL_307;
    }
  }
  else if ((v140 & 0x40000) == 0)
  {
    goto LABEL_294;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v145 = *(unsigned char *)(a1 + 733);
  *(_WORD *)uint64_t v4 = 1232;
  v4[2] = v145;
  v4 += 3;
  if ((v140 & 0x80000) != 0)
  {
LABEL_307:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v146 = *(_DWORD *)(a1 + 736);
    *(_WORD *)uint64_t v4 = 1240;
    v4[2] = v146;
    if (v146 > 0x7F)
    {
      v4[2] = v146 | 0x80;
      unsigned int v147 = v146 >> 7;
      v4[3] = v146 >> 7;
      v4 += 4;
      if (v146 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v148 = v147 >> 14;
          v147 >>= 7;
          *v4++ = v147;
        }
        while (v148);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_316:
  int v149 = *(_DWORD *)(a1 + 40);
  if ((v149 & 0x100000) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 76, (const void **)(*(void *)(a1 + 536) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v149 & 0x20000000) == 0)
    {
LABEL_318:
      if ((v149 & 0x40000000) == 0) {
        goto LABEL_333;
      }
      goto LABEL_327;
    }
  }
  else if ((v149 & 0x20000000) == 0)
  {
    goto LABEL_318;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v150 = *(void *)(a1 + 608);
  *(_WORD *)uint64_t v4 = 1258;
  unsigned int v151 = *(_DWORD *)(v150 + 20);
  v4[2] = v151;
  if (v151 > 0x7F) {
    uint64_t v152 = sub_188A9CC(v151, v4 + 2);
  }
  else {
    uint64_t v152 = v4 + 3;
  }
  uint64_t v4 = sub_165674C(v150, (unint64_t)v152, a3);
  if ((v149 & 0x40000000) != 0)
  {
LABEL_327:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v153 = *(void *)(a1 + 616);
    *(_WORD *)uint64_t v4 = 1266;
    unsigned int v154 = *(_DWORD *)(v153 + 20);
    v4[2] = v154;
    if (v154 > 0x7F) {
      uint64_t v155 = sub_188A9CC(v154, v4 + 2);
    }
    else {
      uint64_t v155 = v4 + 3;
    }
    uint64_t v4 = sub_1496514(v153, v155, a3);
  }
LABEL_333:
  if ((*(unsigned char *)(a1 + 46) & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v156 = *(void *)(a1 + 744);
    *(_WORD *)uint64_t v4 = 1272;
    v4[2] = v156;
    if (v156 > 0x7F)
    {
      v4[2] = v156 | 0x80;
      unint64_t v157 = v156 >> 7;
      v4[3] = v156 >> 7;
      v4 += 4;
      if (v156 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v158 = v157 >> 14;
          v157 >>= 7;
          *v4++ = v157;
        }
        while (v158);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((*(_DWORD *)(a1 + 40) & 0x80000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v159 = *(void *)(a1 + 624);
    *(_WORD *)uint64_t v4 = 1410;
    unsigned int v160 = *(_DWORD *)(v159 + 44);
    v4[2] = v160;
    if (v160 > 0x7F) {
      int v161 = sub_188A9CC(v160, v4 + 2);
    }
    else {
      int v161 = v4 + 3;
    }
    uint64_t v4 = sub_15BF3F8(v159, v161, a3);
  }
  int v162 = *(_DWORD *)(a1 + 44);
  if (v162)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v163 = *(void *)(a1 + 632);
    *(_WORD *)uint64_t v4 = 1418;
    unsigned int v164 = *(_DWORD *)(v163 + 20);
    v4[2] = v164;
    if (v164 > 0x7F) {
      int v165 = sub_188A9CC(v164, v4 + 2);
    }
    else {
      int v165 = v4 + 3;
    }
    uint64_t v4 = sub_1663DA0(v163, (unint64_t)v165, a3);
  }
  if ((v162 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v166 = *(int *)(a1 + 740);
    *(_WORD *)uint64_t v4 = 1424;
    v4[2] = v166;
    if (v166 > 0x7F)
    {
      v4[2] = v166 | 0x80;
      unint64_t v167 = v166 >> 7;
      v4[3] = v166 >> 7;
      v4 += 4;
      if (v166 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v168 = v167 >> 14;
          v167 >>= 7;
          *v4++ = v167;
        }
        while (v168);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v169 = *(_DWORD *)(a1 + 360);
  if (v169)
  {
    for (int i3 = 0; i3 != v169; ++i3)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v171 = *(void *)(*(void *)(a1 + 368) + 8 * i3 + 8);
      *(_WORD *)uint64_t v4 = 1434;
      unsigned int v172 = *(_DWORD *)(v171 + 20);
      v4[2] = v172;
      if (v172 > 0x7F) {
        int v173 = sub_188A9CC(v172, v4 + 2);
      }
      else {
        int v173 = v4 + 3;
      }
      uint64_t v4 = sub_12A12FC(v171, v173, a3);
    }
  }
  if ((v162 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v174 = *(void *)(a1 + 640);
    *(_WORD *)uint64_t v4 = 1442;
    unsigned int v175 = *(_DWORD *)(v174 + 20);
    v4[2] = v175;
    if (v175 > 0x7F) {
      uint64_t v176 = sub_188A9CC(v175, v4 + 2);
    }
    else {
      uint64_t v176 = v4 + 3;
    }
    uint64_t v4 = sub_12A12FC(v174, v176, a3);
    if ((v162 & 4) == 0)
    {
LABEL_371:
      if ((v162 & 8) == 0) {
        goto LABEL_391;
      }
      goto LABEL_385;
    }
  }
  else if ((v162 & 4) == 0)
  {
    goto LABEL_371;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v177 = *(void *)(a1 + 648);
  *(_WORD *)uint64_t v4 = 1450;
  unsigned int v178 = *(_DWORD *)(v177 + 20);
  v4[2] = v178;
  if (v178 > 0x7F) {
    uint64_t v179 = sub_188A9CC(v178, v4 + 2);
  }
  else {
    uint64_t v179 = v4 + 3;
  }
  uint64_t v4 = sub_1764760(v177, (unint64_t)v179, a3);
  if ((v162 & 8) != 0)
  {
LABEL_385:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v180 = *(void *)(a1 + 656);
    *(_WORD *)uint64_t v4 = 1458;
    unsigned int v181 = *(_DWORD *)(v180 + 20);
    v4[2] = v181;
    if (v181 > 0x7F) {
      int v182 = sub_188A9CC(v181, v4 + 2);
    }
    else {
      int v182 = v4 + 3;
    }
    uint64_t v4 = sub_165AB20(v180, (unint64_t)v182, a3);
  }
LABEL_391:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 10000, 10100, v4, a3);
  }
  uint64_t v183 = *(void *)(a1 + 8);
  if ((v183 & 1) == 0) {
    return v4;
  }
  unint64_t v185 = v183 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v185 + 31) < 0)
  {
    uint64_t v186 = *(void **)(v185 + 8);
    uint64_t v187 = *(void *)(v185 + 16);
  }
  else
  {
    uint64_t v186 = (void *)(v185 + 8);
    LODWORD(v187) = *(unsigned __int8 *)(v185 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v187)
  {
    uint64_t v188 = (int)v187;
    memcpy(v4, v186, (int)v187);
    v4 += v188;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v186, v187, v4);
}