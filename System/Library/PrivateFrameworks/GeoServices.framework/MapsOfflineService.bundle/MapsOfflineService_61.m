void sub_1930E80()
{
  JUMPOUT(0x192F25CLL);
}

void sub_1930E90()
{
}

void sub_1930E9C()
{
}

void sub_1930EAC()
{
}

void sub_1930EB8()
{
}

void sub_1930EC8()
{
}

void sub_1930ED4()
{
}

void sub_1930EE4()
{
}

void sub_1930EF0()
{
}

void sub_1930F00()
{
}

void sub_1930F0C()
{
}

void sub_1930F1C()
{
}

void sub_1930F28()
{
}

void sub_1930F38()
{
}

void sub_1930F44()
{
}

void sub_1930F54()
{
}

void sub_1930F60()
{
}

void sub_1930F70()
{
}

void sub_1930F7C()
{
}

void sub_1930F8C()
{
}

void sub_1930F98()
{
}

void sub_1930FA8()
{
}

void sub_1930FB4()
{
}

void sub_1930FC4()
{
}

void sub_1930FD0()
{
}

void sub_1930FE0()
{
}

void sub_1930FEC()
{
}

void sub_1930FFC()
{
}

void sub_1931008()
{
}

void sub_1931018()
{
}

void sub_1931024()
{
}

void sub_1931034()
{
}

void sub_1931040()
{
}

void sub_1931050()
{
}

void sub_193105C()
{
}

void sub_193106C()
{
}

void sub_1931078()
{
}

void sub_1931088()
{
}

void sub_1931094()
{
}

void sub_19310A4()
{
}

void sub_19310B0()
{
}

void sub_19310C0()
{
}

void sub_19310CC()
{
}

void sub_19310DC()
{
}

void sub_19310E8()
{
}

void sub_19310F8()
{
}

void sub_1931104()
{
}

void sub_1931114()
{
}

void sub_1931120()
{
}

void sub_1931130()
{
}

void sub_193113C()
{
}

void sub_193114C()
{
}

void sub_1931158()
{
}

void sub_1931168()
{
}

void sub_1931174()
{
}

void sub_1931184()
{
}

void sub_1931190()
{
}

void sub_19311A0()
{
}

void sub_19311AC()
{
}

void sub_19311BC()
{
}

void sub_19311C8()
{
}

void sub_19311D8()
{
}

void sub_19311E4()
{
}

void sub_19311F4()
{
}

void sub_1931200()
{
}

void sub_1931210()
{
}

void sub_193121C()
{
}

void sub_193122C()
{
}

void sub_1931238()
{
}

void sub_1931248()
{
}

void sub_1931254()
{
}

void sub_1931264()
{
}

void sub_1931270()
{
}

void sub_1931280()
{
}

void sub_193128C()
{
}

void sub_193129C()
{
}

void sub_19312A8()
{
}

void sub_19312B8()
{
}

void sub_19312C4()
{
}

void sub_19312D4()
{
}

void sub_19312E0()
{
}

void sub_19312F0()
{
}

void sub_19312FC()
{
}

void sub_193130C()
{
}

void sub_1931318()
{
}

void sub_1931328()
{
}

void sub_1931334()
{
}

void sub_1931344()
{
}

void sub_1931350()
{
}

void sub_1931360()
{
}

void sub_193136C()
{
}

void sub_193137C()
{
}

void sub_1931388()
{
}

void sub_1931398()
{
}

void sub_19313A4()
{
}

void sub_19313B4()
{
}

void sub_19313C0()
{
}

void sub_19313D0()
{
}

void sub_19313DC()
{
}

void sub_19313EC()
{
}

void sub_19313F8()
{
}

void sub_1931408()
{
}

void sub_1931414()
{
}

void sub_1931424()
{
}

void sub_1931430()
{
}

void sub_1931440()
{
}

void sub_193144C()
{
}

void sub_193145C()
{
}

void sub_1931468()
{
}

void sub_1931478()
{
}

void sub_1931484()
{
}

void sub_1931494()
{
}

void sub_19314A0()
{
}

void sub_19314B0()
{
}

void sub_19314BC()
{
}

void sub_19314CC()
{
}

void sub_19314D8()
{
}

void sub_19314E8()
{
}

void sub_19314F4()
{
}

void sub_1931504()
{
}

void sub_1931510()
{
}

void sub_1931520()
{
}

void sub_193152C()
{
}

void sub_193153C()
{
}

void sub_1931548()
{
}

void sub_1931558()
{
}

void sub_1931564()
{
}

void sub_1931574()
{
}

void sub_1931580()
{
}

void sub_1931590()
{
}

void sub_193159C()
{
}

void sub_19315AC()
{
}

void sub_19315B8()
{
}

void sub_19315C8()
{
}

void sub_19315D4()
{
}

void sub_19315E4()
{
}

void sub_19315F0()
{
}

void sub_1931600()
{
}

void sub_193160C()
{
}

void sub_193161C()
{
}

void sub_1931628()
{
}

void sub_1931638()
{
}

void sub_1931644()
{
}

void sub_1931654()
{
}

void sub_1931660()
{
}

void sub_1931670()
{
}

void sub_193167C()
{
}

void sub_193168C()
{
}

void sub_1931698()
{
}

void sub_19316A8()
{
}

void sub_19316B4()
{
}

void sub_19316C4()
{
}

void sub_19316D0()
{
}

void sub_19316E0()
{
}

void sub_19316EC()
{
}

void sub_19316FC()
{
}

void sub_1931708()
{
}

void sub_1931718()
{
}

void sub_1931724()
{
}

void sub_1931734()
{
}

void sub_1931740()
{
}

void sub_1931750()
{
}

void sub_193175C()
{
}

void sub_1931768()
{
}

void sub_193177C()
{
}

void sub_1931790()
{
}

void sub_1931798()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2626040 = 0;
  qword_2626048 = 0;
  qword_2626050 = 0;
  qword_2626040 = (uint64_t)operator new(0x18uLL);
  qword_2626048 = qword_2626040;
  qword_2626050 = qword_2626040 + 24;
  qword_2626048 = (uint64_t)sub_18914E4((uint64_t)&qword_2626050, (long long *)__p, v4, (char *)qword_2626040);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2626058 = 0;
  qword_2626060 = 0;
  qword_2626068 = 0;
  qword_2626058 = (uint64_t)operator new(0x18uLL);
  qword_2626060 = qword_2626058;
  qword_2626068 = qword_2626058 + 24;
  qword_2626060 = (uint64_t)sub_18914E4((uint64_t)&qword_2626068, (long long *)__p, v4, (char *)qword_2626058);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2626070 = 0;
  qword_2626078 = 0;
  qword_2626080 = 0;
  qword_2626070 = (uint64_t)operator new(0x18uLL);
  qword_2626078 = qword_2626070;
  qword_2626080 = qword_2626070 + 24;
  qword_2626078 = (uint64_t)sub_18914E4((uint64_t)&qword_2626080, (long long *)__p, v4, (char *)qword_2626070);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_1926CE4();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_26260A0, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_26260C8, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_1931E54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

BOOL sub_1932004(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 176) - 1) < 2;
}

uint64_t sub_1932018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(_DWORD *)(a1 + 176) == 1)
  {
    v4 = &off_25329F0;
    int v5 = *(uint64_t (****)())(a1 + 80);
    if (v5) {
      v4 = v5;
    }
    v6 = (uint64_t (***)())v4[8];
    if (!v6) {
      v6 = &off_254D2B0;
    }
    int v7 = (uint64_t (***)())v6[6];
    if (!v7) {
      int v7 = &off_254D270;
    }
    v8 = v7[3];
  }
  else
  {
    int v9 = *(uint64_t (****)())(a1 + 88);
    if (!v9) {
      int v9 = &off_2532A50;
    }
    v10 = (uint64_t (***)())v9[7];
    if (!v10) {
      v10 = &off_254D2B0;
    }
    int v11 = (uint64_t (***)())v10[6];
    if (!v11) {
      int v11 = &off_254D270;
    }
    if ((_BYTE)v11[2])
    {
      v12 = (uint64_t (***)())v11[3];
      return sub_15B0918(a2, v12);
    }
    v8 = v9[6];
  }
  if (v8) {
    v12 = (uint64_t (***)())v8;
  }
  else {
    v12 = &off_253F1A0;
  }
  return sub_15B0918(a2, v12);
}

uint64_t sub_19320D4@<X0>(_DWORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  int v5 = *(_DWORD *)(a2 + 176);
  if ((v5 - 1) > 1)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::to_string(&v17, *(_DWORD *)(a2 + 176));
    sub_1932370("type ", &v17, &__p);
    sub_1932310(" is not supported", &__p, &v19);
    std::logic_error::logic_error(exception, &v19);
  }
  if (v5 == 1)
  {
    int v7 = *(uint64_t (****)())(a2 + 80);
    if (!v7) {
      int v7 = &off_25329F0;
    }
    v8 = (uint64_t (****)())(v7 + 8);
  }
  else
  {
    int v9 = *(uint64_t (****)())(a2 + 88);
    if (!v9) {
      int v9 = &off_2532A50;
    }
    v8 = (uint64_t (****)())(v9 + 7);
  }
  v10 = *v8;
  if (!v10) {
    v10 = &off_254D2B0;
  }
  int v11 = (uint64_t (***)())v10[6];
  sub_1932018(a2, (uint64_t)&v19);
  if (*(_DWORD *)(a2 + 176) == 1) {
    v12 = a1;
  }
  else {
    v12 = a1 + 1;
  }
  sub_18E0590(*v12, v20, v21);
  int v13 = &off_254D270;
  if (v11) {
    int v13 = v11;
  }
  *a3 = v13[4];
  v14 = (std::string *)(a3 + 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200(v14, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    std::string *v14 = __p;
  }
  return sub_15B0994(&v19);
}

void sub_193226C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v28 & 1) == 0) {
LABEL_10:
    }
      _Unwind_Resume(a1);
  }
  else if (!v28)
  {
    goto LABEL_10;
  }
  __cxa_free_exception(v27);
  goto LABEL_10;
}

__n128 sub_1932310@<Q0>(char *__s@<X1>, std::string *a2@<X0>, std::string *a3@<X8>)
{
  size_t v6 = strlen(__s);
  int v7 = (__n128 *)std::string::append(a2, __s, v6);
  __n128 result = *v7;
  *a3 = *(std::string *)v7->n128_u8;
  v7->n128_u64[0] = 0;
  v7->n128_u64[1] = 0;
  v7[1].n128_u64[0] = 0;
  return result;
}

__n128 sub_1932370@<Q0>(const char *a1@<X0>, std::string *a2@<X1>, std::string *a3@<X8>)
{
  size_t v6 = strlen(a1);
  int v7 = (__n128 *)std::string::insert(a2, 0, a1, v6);
  __n128 result = *v7;
  *a3 = *(std::string *)v7->n128_u8;
  v7->n128_u64[0] = 0;
  v7->n128_u64[1] = 0;
  v7[1].n128_u64[0] = 0;
  return result;
}

void sub_19323D0(char a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v31 = sub_1E42BB0(a1, a4, a5);
  int v32 = v7;
  sub_1E43120((int32x2_t *)&v31, &v29);
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v8 = v29;
  int v9 = v30;
  if (v29 != v30)
  {
    do
    {
      sub_18E0BA0(v27);
      if (SHIBYTE(v28) < 0)
      {
        sub_4200(v22, v27[0], (unint64_t)v27[1]);
      }
      else
      {
        *(_OWORD *)v22 = *(_OWORD *)v27;
        uint64_t v23 = v28;
      }
      uint64_t v10 = *(void *)(a2 + 24);
      if (!v10) {
        sub_29F82C();
      }
      (*(void (**)(uint64_t *__return_ptr))(*(void *)v10 + 48))(&v24);
      unint64_t v11 = a3[1];
      unint64_t v12 = a3[2];
      if (v11 >= v12)
      {
        uint64_t v13 = (uint64_t)(v11 - *a3) >> 5;
        unint64_t v14 = v13 + 1;
        if ((unint64_t)(v13 + 1) >> 59) {
          sub_2E00();
        }
        uint64_t v15 = v12 - *a3;
        if (v15 >> 4 > v14) {
          unint64_t v14 = v15 >> 4;
        }
        if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFE0) {
          unint64_t v16 = 0x7FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v16 = v14;
        }
        v33[4] = a3 + 2;
        std::string v17 = (char *)sub_18B0970((uint64_t)(a3 + 2), v16);
        v18 = &v17[32 * v13];
        v33[0] = v17;
        v33[1] = v18;
        v33[3] = &v17[32 * v19];
        *(_DWORD *)v18 = v24;
        *((void *)v18 + 2) = 0;
        *((void *)v18 + 3) = 0;
        *((void *)v18 + 1) = 0;
        *(_OWORD *)(v18 + 8) = *(_OWORD *)__p;
        *((void *)v18 + 3) = v26;
        __p[0] = 0;
        __p[1] = 0;
        uint64_t v26 = 0;
        v33[2] = v18 + 32;
        sub_18B08F8(a3, v33);
        uint64_t v20 = a3[1];
        sub_18B0AD4((uint64_t)v33);
        double v21 = __p[0];
        a3[1] = v20;
        if (v21)
        {
          __p[1] = v21;
          operator delete(v21);
        }
      }
      else
      {
        *(_DWORD *)unint64_t v11 = v24;
        *(void *)(v11 + 16) = 0;
        *(void *)(v11 + 24) = 0;
        *(void *)(v11 + 8) = 0;
        *(_OWORD *)(v11 + 8) = *(_OWORD *)__p;
        *(void *)(v11 + 24) = v26;
        __p[0] = 0;
        __p[1] = 0;
        uint64_t v26 = 0;
        a3[1] = v11 + 32;
      }
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v28) < 0) {
        operator delete(v27[0]);
      }
      v8 = (int32x2_t *)((char *)v8 + 12);
    }
    while (v8 != v9);
    v8 = v29;
  }
  if (v8)
  {
    v30 = v8;
    operator delete(v8);
  }
}

void sub_1932604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  sub_18B0B68((void ***)&a15);
  if (a25)
  {
    a26 = (uint64_t)a25;
    operator delete(a25);
  }
  _Unwind_Resume(a1);
}

void sub_193268C(uint64_t *a1@<X0>, uint64_t a2@<X1>, int **a3@<X2>, int a4@<W3>, _DWORD *a5@<X4>, os_log_t *a6@<X5>, void *a7@<X8>)
{
  v37[0] = 0;
  v37[1] = 0;
  v36 = (uint64_t *)v37;
  unint64_t v12 = *a3;
  unint64_t v11 = a3[1];
  while (v12 != v11)
  {
    sub_1932CB4(&v36, v12, v12);
    v12 += 40;
  }
  uint64_t v29 = sub_1E42BB0(*a5, *(double *)(a2 + 128), *(double *)(a2 + 136));
  int v14 = v13;
  char v15 = sub_1EC5854((double **)(a2 + 96), (uint64_t)a5);
  sub_1B2A2E0(a7);
  uint64_t v17 = *a1;
  uint64_t v16 = a1[1];
  if (*a1 != v16)
  {
    while (!sub_18E0544(v17))
    {
      os_log_t v21 = *a6;
      if (os_log_type_enabled(*a6, OS_LOG_TYPE_DEBUG))
      {
        sub_188DA24(__p, *(char **)(v17 + 8), *(char **)(v17 + 16), *(void *)(v17 + 16) - *(void *)(v17 + 8));
        v22 = __p;
        if (v33 < 0) {
          v22 = (void **)__p[0];
        }
        *(_DWORD *)buf = 136315138;
        *(void *)&buf[4] = v22;
        uint64_t v23 = v21;
        uint64_t v24 = "skip non-inverted index file \t%s";
LABEL_19:
        _os_log_debug_impl(&def_332C, v23, OS_LOG_TYPE_DEBUG, v24, buf, 0xCu);
        if (SHIBYTE(v33) < 0) {
          operator delete(__p[0]);
        }
      }
LABEL_26:
      v17 += 32;
      if (v17 == v16) {
        goto LABEL_33;
      }
    }
    uint64_t v34 = sub_18E0AA0(v17);
    uint64_t v35 = v18;
    if ((v18 & 0xFF00000000) != 0)
    {
      uint64_t v19 = *(double **)(a2 + 96);
      uint64_t v20 = *(double **)(a2 + 104);
      while (v19 != v20)
      {
        if (sub_1E433F4((int *)&v34, v19))
        {
          *(void *)buf = v29;
          *(_DWORD *)&buf[8] = v14;
          char v39 = 1;
          sub_1EC5884((unint64_t)buf, (uint64_t)&v34, a2 + 96, &v36, a4, (uint64_t)a5, v15, (uint64_t)__p);
          if (v33)
          {
            if (!BYTE4(v35)) {
              sub_1907A2C();
            }
            sub_1B2A2F8((uint64_t)a7, (int *)v17, &v34, (uint64_t)__p);
          }
          else
          {
            int v27 = *a6;
            if (os_log_type_enabled(*a6, OS_LOG_TYPE_DEBUG))
            {
              if (!BYTE4(v35)) {
                sub_1907A2C();
              }
              sub_18E0BA0(buf);
              uint64_t v28 = buf;
              if (v40 < 0) {
                uint64_t v28 = *(unsigned char **)buf;
              }
              *(_DWORD *)int v41 = 136315138;
              v42 = v28;
              _os_log_debug_impl(&def_332C, v27, OS_LOG_TYPE_DEBUG, "skip partition\t%s", v41, 0xCu);
              if (v40 < 0) {
                operator delete(*(void **)buf);
              }
            }
          }
          sub_22EFF4((uint64_t)__p, (void *)__p[1]);
          goto LABEL_26;
        }
        v19 += 11;
      }
    }
    os_log_t v25 = *a6;
    if (!os_log_type_enabled(*a6, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_26;
    }
    sub_188DA24(__p, *(char **)(v17 + 8), *(char **)(v17 + 16), *(void *)(v17 + 16) - *(void *)(v17 + 8));
    uint64_t v26 = __p;
    if (v33 < 0) {
      uint64_t v26 = (void **)__p[0];
    }
    *(_DWORD *)buf = 136315138;
    *(void *)&buf[4] = v26;
    uint64_t v23 = v25;
    uint64_t v24 = "skip malformed partition\t%s";
    goto LABEL_19;
  }
LABEL_33:
  sub_22EFF4((uint64_t)&v36, v37[0]);
}

void sub_19329D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,void *a21)
{
}

uint64_t sub_1932A34(uint64_t a1)
{
  sub_1895F48(a1 + 24, *(char **)(a1 + 32));
  char v3 = (void **)a1;
  sub_1932BDC(&v3);
  return a1;
}

void sub_1932A78(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1B2A2E0(a2);
  v4 = (uint64_t *)nullsub_1(a1);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  while (v5 != v6)
  {
    uint64_t v7 = v5 + 56;
    uint64_t v8 = *(void *)(v5 + 56);
    if (v8)
    {
      uint64_t v9 = v5 + 56;
      uint64_t v10 = v5 + 56;
      uint64_t v11 = *(void *)(v5 + 56);
      do
      {
        int v12 = *(_DWORD *)(v11 + 28);
        BOOL v13 = v12 < 3;
        if (v12 >= 3) {
          int v14 = (uint64_t *)v11;
        }
        else {
          int v14 = (uint64_t *)(v11 + 8);
        }
        if (!v13) {
          uint64_t v10 = v11;
        }
        uint64_t v11 = *v14;
      }
      while (*v14);
      if (v10 != v7 && *(int *)(v10 + 28) < 4) {
        goto LABEL_39;
      }
      uint64_t v15 = v5 + 56;
      uint64_t v16 = *(void *)(v5 + 56);
      do
      {
        int v17 = *(_DWORD *)(v16 + 28);
        BOOL v18 = v17 < 5;
        if (v17 >= 5) {
          uint64_t v19 = (uint64_t *)v16;
        }
        else {
          uint64_t v19 = (uint64_t *)(v16 + 8);
        }
        if (!v18) {
          uint64_t v15 = v16;
        }
        uint64_t v16 = *v19;
      }
      while (*v19);
      if (v15 != v7 && *(int *)(v15 + 28) < 6) {
        goto LABEL_39;
      }
      uint64_t v20 = v5 + 56;
      uint64_t v21 = *(void *)(v5 + 56);
      do
      {
        int v22 = *(_DWORD *)(v21 + 28);
        BOOL v23 = v22 < 6;
        if (v22 >= 6) {
          uint64_t v24 = (uint64_t *)v21;
        }
        else {
          uint64_t v24 = (uint64_t *)(v21 + 8);
        }
        if (!v23) {
          uint64_t v20 = v21;
        }
        uint64_t v21 = *v24;
      }
      while (*v24);
      if (v20 != v7 && *(int *)(v20 + 28) < 7) {
        goto LABEL_39;
      }
      do
      {
        int v25 = *(_DWORD *)(v8 + 28);
        BOOL v26 = v25 < 7;
        if (v25 >= 7) {
          int v27 = (uint64_t *)v8;
        }
        else {
          int v27 = (uint64_t *)(v8 + 8);
        }
        if (!v26) {
          uint64_t v9 = v8;
        }
        uint64_t v8 = *v27;
      }
      while (*v27);
      if (v9 != v7 && *(int *)(v9 + 28) <= 7) {
LABEL_39:
      }
        sub_1B2A2F8((uint64_t)a2, (int *)v5, (uint64_t *)(v5 + 32), v5 + 48);
    }
    v5 += 72;
  }
}

void sub_1932BC4(_Unwind_Exception *a1)
{
  sub_1932A34(v1);
  _Unwind_Resume(a1);
}

void sub_1932BDC(void ***a1)
{
  uint64_t v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 72;
        sub_1932C60(v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_1932C60(uint64_t a1)
{
  sub_22EFF4(a1 + 48, *(void **)(a1 + 56));
  v2 = *(void **)(a1 + 8);
  if (v2)
  {
    *(void *)(a1 + 16) = v2;
    operator delete(v2);
  }
}

uint64_t **sub_1932CB4(uint64_t **a1, int *a2, _DWORD *a3)
{
  uint64_t v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v5;
        int v9 = *((_DWORD *)v5 + 7);
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v8 = a1 + 1;
LABEL_10:
    uint64_t v10 = (uint64_t *)operator new(0x20uLL);
    *((_DWORD *)v10 + 7) = *a3;
    sub_11220BC(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }
  return v8;
}

void sub_1932D70()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2626138, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1939D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_193BD5C()
{
}

void sub_193BD68()
{
}

void sub_193BD78()
{
}

void sub_193BD84()
{
}

void sub_193BD94()
{
}

void sub_193BDA0()
{
}

void sub_193BDB0()
{
}

void sub_193BDBC()
{
}

void sub_193BDCC()
{
}

void sub_193BDD8()
{
}

void sub_193BDE8()
{
}

void sub_193BDF4()
{
}

void sub_193BE04()
{
}

void sub_193BE10()
{
}

void sub_193BE20()
{
}

void sub_193BE2C()
{
}

void sub_193BE3C()
{
}

void sub_193BE48()
{
}

void sub_193BE58()
{
}

void sub_193BE64()
{
}

void sub_193BE74()
{
}

void sub_193BE80()
{
}

void sub_193BE90()
{
}

void sub_193BE9C()
{
}

void sub_193BEAC()
{
}

void sub_193BEB8()
{
}

void sub_193BEC8()
{
}

void sub_193BED4()
{
}

void sub_193BEE4()
{
}

void sub_193BEF0()
{
}

void sub_193BF00()
{
}

void sub_193BF0C()
{
}

void sub_193BF1C()
{
}

void sub_193BF28()
{
}

void sub_193BF38()
{
}

void sub_193BF44()
{
}

void sub_193BF54()
{
}

void sub_193BF60()
{
}

void sub_193BF70()
{
}

void sub_193BF7C()
{
}

void sub_193BF8C()
{
}

void sub_193BF98()
{
}

void sub_193BFA8()
{
}

void sub_193BFB4()
{
}

void sub_193BFC4()
{
}

void sub_193BFD0()
{
}

void sub_193BFE0()
{
}

void sub_193BFEC()
{
}

void sub_193BFFC()
{
}

void sub_193C008()
{
}

void sub_193C018()
{
}

void sub_193C024()
{
}

void sub_193C034()
{
}

void sub_193C040()
{
}

void sub_193C050()
{
}

void sub_193C05C()
{
}

void sub_193C06C()
{
}

void sub_193C078()
{
}

void sub_193C088()
{
}

void sub_193C094()
{
}

void sub_193C0A4()
{
}

void sub_193C0B0()
{
}

void sub_193C0C0()
{
}

void sub_193C0CC()
{
}

void sub_193C0DC()
{
}

void sub_193C0E8()
{
}

void sub_193C0F8()
{
}

void sub_193C104()
{
}

void sub_193C114()
{
}

void sub_193C120()
{
}

void sub_193C130()
{
}

void sub_193C13C()
{
}

void sub_193C14C()
{
}

void sub_193C158()
{
}

void sub_193C168()
{
}

void sub_193C174()
{
}

void sub_193C184()
{
}

void sub_193C190()
{
}

void sub_193C1A0()
{
}

void sub_193C1AC()
{
}

void sub_193C1BC()
{
}

void sub_193C1C8()
{
}

void sub_193C1D8()
{
}

void sub_193C1E4()
{
}

void sub_193C1F4()
{
}

void sub_193C200()
{
}

void sub_193C210()
{
}

void sub_193C21C()
{
}

void sub_193C22C()
{
}

void sub_193C238()
{
}

void sub_193C248()
{
}

void sub_193C254()
{
}

void sub_193C264()
{
}

void sub_193C270()
{
}

void sub_193C280()
{
}

void sub_193C28C()
{
}

void sub_193C29C()
{
}

void sub_193C2A8()
{
}

void sub_193C2B8()
{
}

void sub_193C2C4()
{
}

void sub_193C2D4()
{
}

void sub_193C2E0()
{
}

void sub_193C2F0()
{
}

void sub_193C2FC()
{
}

void sub_193C30C()
{
}

void sub_193C318()
{
}

void sub_193C328()
{
}

void sub_193C334()
{
}

void sub_193C344()
{
}

void sub_193C350()
{
}

void sub_193C360()
{
}

void sub_193C36C()
{
}

void sub_193C37C()
{
}

void sub_193C388()
{
}

void sub_193C398()
{
}

void sub_193C3A4()
{
}

void sub_193C3B4()
{
}

void sub_193C3C0()
{
}

void sub_193C3D0()
{
}

void sub_193C3DC()
{
}

void sub_193C3EC()
{
}

void sub_193C3F8()
{
}

void sub_193C408()
{
}

void sub_193C414()
{
}

void sub_193C424()
{
}

void sub_193C430()
{
}

void sub_193C440()
{
}

void sub_193C44C()
{
}

void sub_193C45C()
{
}

void sub_193C468()
{
}

void sub_193C478()
{
}

void sub_193C484()
{
}

void sub_193C494()
{
}

void sub_193C4A0()
{
}

void sub_193C4B0()
{
}

void sub_193C4BC()
{
}

void sub_193C4CC()
{
}

void sub_193C4D8()
{
}

void sub_193C4E8()
{
}

void sub_193C4F4()
{
}

void sub_193C504()
{
}

void sub_193C510()
{
}

void sub_193C520()
{
}

void sub_193C52C()
{
}

void sub_193C53C()
{
}

void sub_193C548()
{
}

void sub_193C558()
{
}

void sub_193C564()
{
}

void sub_193C574()
{
}

void sub_193C580()
{
}

void sub_193C590()
{
}

void sub_193C59C()
{
}

void sub_193C5AC()
{
}

void sub_193C5B8()
{
}

void sub_193C5C8()
{
}

void sub_193C5D4()
{
}

void sub_193C5E4()
{
}

void sub_193C5F0()
{
}

void sub_193C600()
{
}

void sub_193C60C()
{
}

void sub_193C61C()
{
}

void sub_193C628()
{
}

void sub_193C638()
{
}

void sub_193C644()
{
}

void sub_193C654()
{
}

void sub_193C660()
{
}

void sub_193C670()
{
}

void sub_193C67C()
{
}

void sub_193C68C()
{
}

void sub_193C698()
{
}

void sub_193C6A8()
{
}

void sub_193C6B4()
{
}

void sub_193C6C4()
{
}

void sub_193C6D0()
{
}

void sub_193C6E0()
{
}

void sub_193C6EC()
{
}

void sub_193C6FC()
{
}

void sub_193C708()
{
}

void sub_193C718()
{
}

void sub_193C724()
{
}

void sub_193C734()
{
}

void sub_193C740()
{
}

void sub_193C750()
{
}

void sub_193C75C()
{
}

void sub_193C76C()
{
}

void sub_193C778()
{
}

void sub_193C788()
{
}

void sub_193C794()
{
}

void sub_193C7A4()
{
}

void sub_193C7B0()
{
}

void sub_193C7C0()
{
}

void sub_193C7CC()
{
}

void sub_193C7DC()
{
}

void sub_193C7E8()
{
}

void sub_193C7F8()
{
}

void sub_193C804()
{
}

void sub_193C814()
{
}

void sub_193C820()
{
}

void sub_193C830()
{
}

void sub_193C83C()
{
}

void sub_193C84C()
{
}

void sub_193C858()
{
}

void sub_193C868()
{
}

void sub_193C874()
{
}

void sub_193C884()
{
}

void sub_193C890()
{
}

void sub_193C8A0()
{
}

void sub_193C8AC()
{
}

void sub_193C8BC()
{
}

void sub_193C8C8()
{
}

void sub_193C8D8()
{
}

void sub_193C8E4()
{
}

void sub_193C8F4()
{
}

void sub_193C900()
{
}

void sub_193C910()
{
}

void sub_193C91C()
{
}

void sub_193C92C()
{
}

void sub_193C938()
{
}

void sub_193C948()
{
}

void sub_193C954()
{
}

void sub_193C964()
{
}

void sub_193C970()
{
}

void sub_193C980()
{
}

void sub_193C98C()
{
}

void sub_193C99C()
{
}

void sub_193C9A8()
{
}

void sub_193C9B8()
{
}

void sub_193C9C4()
{
}

void sub_193C9D4()
{
}

void sub_193C9E0()
{
}

void sub_193C9F0()
{
}

void sub_193C9FC()
{
}

void sub_193CA0C()
{
}

void sub_193CA18()
{
}

void sub_193CA28()
{
}

void sub_193CA34()
{
}

void sub_193CA44()
{
}

void sub_193CA50()
{
}

void sub_193CA60()
{
}

void sub_193CA6C()
{
}

void sub_193CA7C()
{
}

void sub_193CA88()
{
}

void sub_193CA98()
{
}

void sub_193CAA4()
{
}

void sub_193CAB4()
{
}

void sub_193CAC0()
{
}

void sub_193CAD0()
{
}

void sub_193CADC()
{
}

void sub_193CAEC()
{
}

void sub_193CAF8()
{
}

void sub_193CB08()
{
}

void sub_193CB14()
{
}

void sub_193CB24()
{
}

void sub_193CB30()
{
}

void sub_193CB40()
{
}

void sub_193CB4C()
{
}

void sub_193CB5C()
{
}

void sub_193CB68()
{
}

void sub_193CB78()
{
}

void sub_193CB84()
{
}

void sub_193CB94()
{
}

void sub_193CBA0()
{
}

void sub_193CBB0()
{
}

void sub_193CBBC()
{
}

void sub_193CBCC()
{
}

void sub_193CBD8()
{
}

void sub_193CBE8()
{
}

void sub_193CBF4()
{
}

void sub_193CC04()
{
}

void sub_193CC10()
{
}

void sub_193CC20()
{
}

void sub_193CC2C()
{
}

void sub_193CC3C()
{
}

void sub_193CC48()
{
}

void sub_193CC58()
{
}

void sub_193CC64()
{
}

void sub_193CC74()
{
}

void sub_193CC80()
{
}

void sub_193CC90()
{
}

void sub_193CC9C()
{
}

void sub_193CCA8()
{
}

void sub_193CCB4()
{
}

void sub_193CCC0()
{
}

void sub_193CCD0()
{
}

void sub_193CCDC()
{
}

void sub_193CCEC()
{
}

void sub_193CCF8()
{
}

void sub_193CD08()
{
}

void sub_193CD14()
{
}

void sub_193CD24()
{
}

void sub_193CD30()
{
}

void sub_193CD40()
{
}

void sub_193CD4C()
{
}

void sub_193CD5C()
{
}

void sub_193CD68()
{
}

void sub_193CD78()
{
}

void sub_193CD84()
{
}

void sub_193CD94()
{
}

void sub_193CDA0()
{
}

void sub_193CDB0()
{
}

void sub_193CDBC()
{
}

void sub_193CDCC()
{
}

void sub_193CDD8()
{
}

void sub_193CDE8()
{
}

void sub_193CDF4()
{
}

void sub_193CE04()
{
}

void sub_193CE10()
{
}

void sub_193CE20()
{
}

void sub_193CE2C()
{
}

void sub_193CE3C()
{
}

void sub_193CE48()
{
}

void sub_193CE58()
{
}

void sub_193CE64()
{
}

void sub_193CE74()
{
}

void sub_193CE80()
{
}

void sub_193CE90()
{
}

void sub_193CE9C()
{
}

void sub_193CEAC()
{
}

void sub_193CEB8()
{
}

void sub_193CEC8()
{
}

void sub_193CED4()
{
}

void sub_193CEE4()
{
}

void sub_193CEF0()
{
}

void sub_193CF00()
{
}

void sub_193CF0C()
{
}

void sub_193CF1C()
{
}

void sub_193CF28()
{
}

void sub_193CF38()
{
}

void sub_193CF44()
{
}

void sub_193CF54()
{
}

void sub_193CF60()
{
}

void sub_193CF70()
{
}

void sub_193CF7C()
{
}

void sub_193CF8C()
{
}

void sub_193CF98()
{
}

void sub_193CFA8()
{
}

void sub_193CFB4()
{
}

void sub_193CFC4()
{
}

void sub_193CFD0()
{
}

void sub_193CFE0()
{
}

void sub_193CFEC()
{
}

void sub_193CFFC()
{
}

void sub_193D008()
{
}

void sub_193D018()
{
}

void sub_193D024()
{
}

void sub_193D034()
{
}

void sub_193D040()
{
}

void sub_193D050()
{
}

void sub_193D05C()
{
}

void sub_193D06C()
{
}

void sub_193D078()
{
}

void sub_193D088()
{
}

void sub_193D094()
{
}

void sub_193D0A4()
{
}

void sub_193D0B0()
{
}

void sub_193D0C0()
{
}

void sub_193D0CC()
{
}

void sub_193D0DC()
{
}

void sub_193D0E8()
{
}

void sub_193D0F8()
{
}

void sub_193D104()
{
}

void sub_193D114()
{
}

void sub_193D120()
{
}

void sub_193D130()
{
}

void sub_193D13C()
{
}

void sub_193D14C()
{
}

void sub_193D158()
{
}

void sub_193D168()
{
}

void sub_193D174()
{
}

void sub_193D184()
{
}

void sub_193D190()
{
}

void sub_193D1A0()
{
}

void sub_193D1AC()
{
}

void sub_193D1BC()
{
}

void sub_193D1C8()
{
}

void sub_193D1D8()
{
}

void sub_193D1E4()
{
}

void sub_193D1F4()
{
}

void sub_193D200()
{
}

void sub_193D210()
{
}

void sub_193D21C()
{
}

void sub_193D22C()
{
}

void sub_193D238()
{
}

void sub_193D248()
{
}

void sub_193D254()
{
}

void sub_193D264()
{
}

void sub_193D270()
{
}

void sub_193D280()
{
}

void sub_193D28C()
{
}

void sub_193D29C()
{
}

void sub_193D2A8()
{
}

void sub_193D2B8()
{
}

void sub_193D2C4()
{
}

void sub_193D2D4()
{
}

void sub_193D2E0()
{
}

void sub_193D2F0()
{
}

void sub_193D2FC()
{
}

void sub_193D30C()
{
}

void sub_193D318()
{
}

void sub_193D328()
{
}

void sub_193D334()
{
}

void sub_193D344()
{
}

void sub_193D350()
{
}

void sub_193D360()
{
}

void sub_193D36C()
{
}

void sub_193D37C()
{
}

void sub_193D388()
{
}

void sub_193D398()
{
}

void sub_193D3A4()
{
}

void sub_193D3B4()
{
}

void sub_193D3C0()
{
}

void sub_193D3D0()
{
}

void sub_193D3DC()
{
}

void sub_193D3EC()
{
}

void sub_193D3F8()
{
}

void sub_193D408()
{
}

void sub_193D414()
{
}

void sub_193D424()
{
}

void sub_193D430()
{
}

void sub_193D440()
{
}

void sub_193D44C()
{
}

void sub_193D45C()
{
}

void sub_193D468()
{
}

void sub_193D478()
{
}

void sub_193D484()
{
}

void sub_193D494()
{
}

void sub_193D4A0()
{
}

void sub_193D4B0()
{
}

void sub_193D4BC()
{
}

void sub_193D4CC()
{
}

void sub_193D4D8()
{
}

void sub_193D4E8()
{
}

void sub_193D4F4()
{
}

void sub_193D504()
{
}

void sub_193D510()
{
}

void sub_193D520()
{
}

void sub_193D52C()
{
}

void sub_193D53C()
{
}

void sub_193D548()
{
}

void sub_193D558()
{
}

void sub_193D564()
{
}

void sub_193D574()
{
}

void sub_193D580()
{
}

void sub_193D590()
{
}

void sub_193D59C()
{
}

void sub_193D5AC()
{
}

void sub_193D5B8()
{
}

void sub_193D5C8()
{
}

void sub_193D5D4()
{
}

void sub_193D5E4()
{
}

void sub_193D5F0()
{
}

void sub_193D600()
{
}

void sub_193D60C()
{
}

void sub_193D61C()
{
}

void sub_193D628()
{
}

void sub_193D638()
{
}

void sub_193D644()
{
}

void sub_193D654()
{
}

void sub_193D660()
{
}

void sub_193D670()
{
}

void sub_193D67C()
{
}

void sub_193D68C()
{
}

void sub_193D698()
{
}

void sub_193D6A8()
{
}

void sub_193D6B4()
{
}

void sub_193D6C4()
{
}

void sub_193D6D0()
{
}

void sub_193D6E0()
{
}

void sub_193D6EC()
{
}

void sub_193D6FC()
{
}

void sub_193D708()
{
}

void sub_193D718()
{
}

void sub_193D724()
{
}

void sub_193D734()
{
}

void sub_193D740()
{
}

void sub_193D750()
{
}

void sub_193D75C()
{
}

void sub_193D76C()
{
}

void sub_193D778()
{
}

void sub_193D788()
{
}

void sub_193D794()
{
}

void sub_193D7A4()
{
}

void sub_193D7B0()
{
}

void sub_193D7C0()
{
}

void sub_193D7CC()
{
}

void sub_193D7DC()
{
}

void sub_193D7E8()
{
}

void sub_193D7F4()
{
}

void sub_193D808()
{
}

void sub_193D81C()
{
}

void sub_193D824()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_26260F0 = 0;
  qword_26260F8 = 0;
  qword_2626100 = 0;
  qword_26260F0 = (uint64_t)operator new(0x18uLL);
  qword_26260F8 = qword_26260F0;
  qword_2626100 = qword_26260F0 + 24;
  qword_26260F8 = (uint64_t)sub_18914E4((uint64_t)&qword_2626100, (long long *)__p, v4, (char *)qword_26260F0);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2626108 = 0;
  qword_2626110 = 0;
  qword_2626118 = 0;
  qword_2626108 = (uint64_t)operator new(0x18uLL);
  qword_2626110 = qword_2626108;
  qword_2626118 = qword_2626108 + 24;
  qword_2626110 = (uint64_t)sub_18914E4((uint64_t)&qword_2626118, (long long *)__p, v4, (char *)qword_2626108);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2626120 = 0;
  qword_2626128 = 0;
  qword_2626130 = 0;
  qword_2626120 = (uint64_t)operator new(0x18uLL);
  qword_2626128 = qword_2626120;
  qword_2626130 = qword_2626120 + 24;
  qword_2626128 = (uint64_t)sub_18914E4((uint64_t)&qword_2626130, (long long *)__p, v4, (char *)qword_2626120);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_1932D70();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_2626150, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_2626178, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_193DEE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

void **sub_193E090@<X0>(uint64_t a1@<X0>, void **a2@<X1>, unsigned char *a3@<X8>)
{
  __n128 result = sub_19081D4(a1 + 48, a2);
  if ((void **)(a1 + 56) == result)
  {
    char v6 = 0;
    *a3 = 0;
  }
  else
  {
    __n128 result = (void **)sub_15B2B8C(a3, result + 7);
    char v6 = 1;
  }
  a3[40] = v6;
  return result;
}

void sub_193E0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    sub_4200(&__dst, *(void **)v6, *(void *)(v6 + 8));
  }
  else
  {
    long long v7 = *(_OWORD *)v6;
    uint64_t v44 = *(void *)(v6 + 16);
    long long __dst = v7;
  }
  if (v44 >= 0) {
    size_t v8 = HIBYTE(v44);
  }
  else {
    size_t v8 = *((void *)&__dst + 1);
  }
  if (v8)
  {
    int v9 = v44 >= 0 ? &__dst : (long long *)__dst;
    uint64_t v10 = memchr(v9, 32, v8);
    if (v10 && v10 - (unsigned char *)v9 != -1) {
      sub_1C02F04((uint64_t)&__dst, " _localization_", "_localization_");
    }
  }
  std::operator+<char>();
  sub_193E090(a3, __p, v40);
  if (v35 < 0) {
    operator delete(__p[0]);
  }
  if (v42)
  {
    int v12 = (long long *)(v41 & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a2 + 40) |= 2u;
    uint64_t v13 = *(void *)(a2 + 8);
    int v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      int v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a2 + 80), v12, v14);
  }
  std::operator+<char>();
  sub_193E478(a3, &v32, __p);
  if (v33 < 0) {
    operator delete(v32);
  }
  if (v39)
  {
    int v15 = (long long *)(v36 & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a2 + 40) |= 4u;
    uint64_t v16 = *(void *)(a2 + 8);
    uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      uint64_t v17 = (uint64_t *)*v17;
    }
    sub_1881DF4((std::string **)(a2 + 88), v15, v17);
    if (!v39) {
      goto LABEL_58;
    }
    char v18 = (long long *)(v37 & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a2 + 40) |= 8u;
    uint64_t v19 = *(void *)(a2 + 8);
    long long v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      long long v20 = (uint64_t *)*v20;
    }
    sub_1881DF4((std::string **)(a2 + 96), v18, v20);
    if (!v39) {
LABEL_58:
    }
      sub_1907A2C();
    int v21 = v38;
    if (!v38) {
      int v21 = &off_2538208;
    }
    int v22 = *((_DWORD *)v21 + 6);
    if (v22 == 2)
    {
      *(_DWORD *)(a2 + 40) |= 0x20u;
      uint64_t v23 = *(void *)(a2 + 112);
      if (!v23)
      {
        uint64_t v27 = *(void *)(a2 + 8);
        char v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          char v28 = (void *)*v28;
        }
        uint64_t v23 = sub_17892F8((uint64_t)v28);
        *(void *)(a2 + 112) = v23;
      }
      int v26 = 2;
    }
    else if (v22 == 1)
    {
      *(_DWORD *)(a2 + 40) |= 0x20u;
      uint64_t v23 = *(void *)(a2 + 112);
      if (!v23)
      {
        uint64_t v24 = *(void *)(a2 + 8);
        int v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          int v25 = (void *)*v25;
        }
        uint64_t v23 = sub_17892F8((uint64_t)v25);
        *(void *)(a2 + 112) = v23;
      }
      int v26 = 1;
    }
    else
    {
      *(_DWORD *)(a2 + 40) |= 0x20u;
      uint64_t v23 = *(void *)(a2 + 112);
      if (v23)
      {
        int v26 = 0;
      }
      else
      {
        uint64_t v29 = *(void *)(a2 + 8);
        long long v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          long long v30 = (void *)*v30;
        }
        uint64_t v23 = sub_17892F8((uint64_t)v30);
        int v26 = 0;
        *(void *)(a2 + 112) = v23;
      }
    }
    *(_DWORD *)(v23 + 16) |= 1u;
    *(_DWORD *)(v23 + 24) = v26;
  }
  int v31 = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a2 + 40) |= 0x80u;
  *(_DWORD *)(a2 + 128) = v31;
  if (v39) {
    sub_14276C4((uint64_t)__p);
  }
  if (v42) {
    sub_15B2C44(v40);
  }
  if (SHIBYTE(v44) < 0) {
    operator delete((void *)__dst);
  }
}

void sub_193E3F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  if (*(char *)(v35 - 41) < 0) {
    operator delete(*(void **)(v35 - 64));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_193E478@<X0>(uint64_t a1@<X0>, void **a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = (uint64_t)sub_19081D4(a1 + 24, a2);
  if (a1 + 32 == result)
  {
    char v6 = 0;
    *a3 = 0;
  }
  else
  {
    uint64_t result = sub_14275C8((uint64_t)a3, result + 56);
    char v6 = 1;
  }
  a3[56] = v6;
  return result;
}

void sub_193E4D0(uint64_t a1, uint64_t a2, uint64_t **a3)
{
  double v6 = std::stod((const std::string *)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), 0);
  int v7 = *(_DWORD *)(a1 + 40);
  int v8 = *((char *)a3 + 23);
  if (v8 >= 0) {
    int v9 = (uint64_t *)*((unsigned __int8 *)a3 + 23);
  }
  else {
    int v9 = a3[1];
  }
  if (v9 != (uint64_t *)((char *)dword_10 + 1))
  {
    if (v9 != (uint64_t *)&dword_14) {
      goto LABEL_36;
    }
    uint64_t v10 = v8 >= 0 ? (uint64_t *)a3 : *a3;
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    int v13 = *((_DWORD *)v10 + 4);
    BOOL v14 = v11 == 0x6174736874726165 && v12 == 0x5F616572612E7374;
    if (!v14 || v13 != 1702521203) {
      goto LABEL_36;
    }
LABEL_29:
    switch(v7)
    {
      case 2:
        double v18 = 1000.0;
        int v7 = 5;
        break;
      case 3:
        double v18 = 1000000.0;
        int v7 = 6;
        break;
      case 4:
        double v18 = 1000000000.0;
        int v7 = 7;
        break;
      default:
        goto LABEL_36;
    }
    double v6 = v6 / v18;
    goto LABEL_36;
  }
  if (v8 < 0) {
    a3 = (uint64_t **)*a3;
  }
  if (!memcmp(a3, "earthstats.length", 0x11uLL)) {
    goto LABEL_29;
  }
  BOOL v16 = *a3 == (uint64_t *)0x6174736874726165 && a3[1] == (uint64_t *)0x6D756C6F762E7374;
  if (v16 && *((unsigned char *)a3 + 16) == 101) {
    goto LABEL_29;
  }
LABEL_36:
  int v19 = *(_DWORD *)(a2 + 40);
  *(double *)(a2 + 120) = v6;
  *(_DWORD *)(a2 + 40) = v19 | 0xC0;
  *(_DWORD *)(a2 + 128) = v7;
}

void sub_193E64C(void *a1)
{
  __cxa_begin_catch(a1);
  __cxa_end_catch();
}

void sub_193E674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = nullsub_1(a3);
  sub_18F76AC(v36, v5);
  sub_18F7A10(&v37, v5 + 24);
  sub_18F7D74(v39, v5 + 48);
  sub_18F80D8(v40, v5 + 72);
  if ((~*(_DWORD *)(a1 + 16) & 0xF) != 0) {
    goto LABEL_59;
  }
  unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    sub_4200(__p, *(void **)v6, *(void *)(v6 + 8));
  }
  else
  {
    long long v7 = *(_OWORD *)v6;
    uint64_t v35 = *(void *)(v6 + 16);
    *(_OWORD *)std::string __p = v7;
  }
  if (v36[2])
  {
    sub_193EAB0((uint64_t)v36, __p, v31);
    if (v33)
    {
      int v8 = (long long *)(v32 & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a2 + 40) |= 1u;
      uint64_t v9 = *(void *)(a2 + 8);
      uint64_t v10 = (uint64_t *)(v9 & 0xFFFFFFFFFFFFFFFCLL);
      if (v9) {
        uint64_t v10 = (uint64_t *)*v10;
      }
      sub_1881DF4((std::string **)(a2 + 72), v8, v10);
      if (v33) {
        sub_14250F0((uint64_t)v31);
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 44);
  switch(v11)
  {
    case 2:
      sub_193E0E8(a1, a2, (uint64_t)v36);
      break;
    case 1:
      uint64_t v12 = (long long *)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a2 + 40) |= 2u;
      uint64_t v13 = *(void *)(a2 + 8);
      BOOL v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
      if (v13) {
        BOOL v14 = (uint64_t *)*v14;
      }
      sub_1881DF4((std::string **)(a2 + 80), v12, v14);
      int v15 = *(_DWORD *)(a1 + 40);
      *(_DWORD *)(a2 + 40) |= 0x80u;
      *(_DWORD *)(a2 + 128) = v15;
      break;
    case 0:
      sub_193E4D0(a1, a2, (uint64_t **)__p);
      break;
  }
  if (v35 >= 0) {
    BOOL v16 = (uint32_t *)HIBYTE(v35);
  }
  else {
    BOOL v16 = (uint32_t *)__p[1];
  }
  if (v16 == (uint32_t *)((char *)dword_10 + 1))
  {
    if (v35 >= 0) {
      int v19 = __p;
    }
    else {
      int v19 = (void **)__p[0];
    }
    if (memcmp(v19, "earthstats.length", 0x11uLL)) {
      goto LABEL_50;
    }
    int v18 = 4;
  }
  else if (v16 == (uint32_t *)((char *)&dword_14 + 3))
  {
    if (v35 >= 0) {
      long long v20 = __p;
    }
    else {
      long long v20 = (void **)__p[0];
    }
    if (!memcmp(v20, "hikingtrails.difficulty", 0x17uLL))
    {
      *(_DWORD *)(a2 + 40) |= 0x100u;
      *(_DWORD *)(a2 + 132) = 2;
    }
    if (*v20 != (void *)0x7274676E696B6968
      || v20[1] != (void *)0x756F722E736C6961
      || *(void **)((char *)v20 + 15) != (void *)0x657079745F657475)
    {
      goto LABEL_50;
    }
    int v18 = 3;
  }
  else
  {
    if (v16 != &stru_20.cmdsize) {
      goto LABEL_50;
    }
    uint64_t v17 = v35 >= 0 ? __p : (void **)__p[0];
    if (memcmp(v17, "bizstats.ev_charging.number_of_ports", 0x24uLL)) {
      goto LABEL_50;
    }
    int v18 = 1;
  }
  *(_DWORD *)(a2 + 40) |= 0x100u;
  *(_DWORD *)(a2 + 132) = v18;
LABEL_50:
  uint64_t v23 = sub_19081D4((uint64_t)&v37, __p);
  if (&v38 != (void **)v23 && ((_BYTE)v23[9] & 2) != 0)
  {
    uint64_t v24 = (long long *)((unint64_t)v23[11] & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a2 + 40) |= 4u;
    uint64_t v25 = *(void *)(a2 + 8);
    int v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      int v26 = (uint64_t *)*v26;
    }
    sub_1881DF4((std::string **)(a2 + 88), v24, v26);
  }
  uint64_t v27 = sub_1884274((uint64_t **)(a2 + 16), dword_254F968, 11, (uint64_t)&off_2537C08, 0);
  *(_DWORD *)(v27 + 16) |= 2u;
  char v28 = (std::string **)(v27 + 32);
  uint64_t v29 = *(void *)(v27 + 8);
  long long v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
  if (v29) {
    long long v30 = (uint64_t *)*v30;
  }
  sub_1881DF4(v28, (long long *)__p, v30);
  if (SHIBYTE(v35) < 0) {
    operator delete(__p[0]);
  }
LABEL_59:
  sub_18F8620((uint64_t)v40, (void *)v40[1]);
  sub_18F807C((uint64_t)v39, (void *)v39[1]);
  sub_18F7D18((uint64_t)&v37, v38);
  sub_18F79B4((uint64_t)v36, (void *)v36[1]);
}

void sub_193EA24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  if (a18) {
    sub_14250F0((uint64_t)&a10);
  }
  if (a24 < 0) {
    operator delete(__p);
  }
  sub_18F7634(&a26);
  _Unwind_Resume(a1);
}

uint64_t sub_193EAB0@<X0>(uint64_t a1@<X0>, void **a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = (uint64_t)sub_19081D4(a1, a2);
  if (a1 + 8 == result)
  {
    char v6 = 0;
    *a3 = 0;
  }
  else
  {
    uint64_t result = sub_1424FFC((uint64_t)a3, result + 56);
    char v6 = 1;
  }
  a3[64] = v6;
  return result;
}

void sub_193EB04()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_26261E8, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1945AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1947AF0()
{
}

void sub_1947AFC()
{
}

void sub_1947B0C()
{
}

void sub_1947B18()
{
}

void sub_1947B28()
{
}

void sub_1947B34()
{
}

void sub_1947B44()
{
}

void sub_1947B50()
{
}

void sub_1947B60()
{
}

void sub_1947B6C()
{
}

void sub_1947B7C()
{
}

void sub_1947B88()
{
}

void sub_1947B98()
{
}

void sub_1947BA4()
{
}

void sub_1947BB4()
{
}

void sub_1947BC0()
{
}

void sub_1947BD0()
{
}

void sub_1947BDC()
{
}

void sub_1947BEC()
{
}

void sub_1947BF8()
{
}

void sub_1947C08()
{
}

void sub_1947C14()
{
}

void sub_1947C24()
{
}

void sub_1947C30()
{
}

void sub_1947C40()
{
}

void sub_1947C4C()
{
}

void sub_1947C5C()
{
}

void sub_1947C68()
{
}

void sub_1947C78()
{
}

void sub_1947C84()
{
}

void sub_1947C94()
{
}

void sub_1947CA0()
{
}

void sub_1947CB0()
{
}

void sub_1947CBC()
{
}

void sub_1947CCC()
{
}

void sub_1947CD8()
{
}

void sub_1947CE8()
{
}

void sub_1947CF4()
{
}

void sub_1947D04()
{
}

void sub_1947D10()
{
}

void sub_1947D20()
{
}

void sub_1947D2C()
{
}

void sub_1947D3C()
{
}

void sub_1947D48()
{
}

void sub_1947D58()
{
}

void sub_1947D64()
{
}

void sub_1947D74()
{
}

void sub_1947D80()
{
}

void sub_1947D90()
{
}

void sub_1947D9C()
{
}

void sub_1947DAC()
{
}

void sub_1947DB8()
{
}

void sub_1947DC8()
{
}

void sub_1947DD4()
{
}

void sub_1947DE4()
{
}

void sub_1947DF0()
{
}

void sub_1947E00()
{
}

void sub_1947E0C()
{
}

void sub_1947E1C()
{
}

void sub_1947E28()
{
}

void sub_1947E38()
{
}

void sub_1947E44()
{
}

void sub_1947E54()
{
}

void sub_1947E60()
{
}

void sub_1947E70()
{
}

void sub_1947E7C()
{
}

void sub_1947E8C()
{
}

void sub_1947E98()
{
}

void sub_1947EA8()
{
}

void sub_1947EB4()
{
}

void sub_1947EC4()
{
}

void sub_1947ED0()
{
}

void sub_1947EE0()
{
}

void sub_1947EEC()
{
}

void sub_1947EFC()
{
}

void sub_1947F08()
{
}

void sub_1947F18()
{
}

void sub_1947F24()
{
}

void sub_1947F34()
{
}

void sub_1947F40()
{
}

void sub_1947F50()
{
}

void sub_1947F5C()
{
}

void sub_1947F6C()
{
}

void sub_1947F78()
{
}

void sub_1947F88()
{
}

void sub_1947F94()
{
}

void sub_1947FA4()
{
}

void sub_1947FB0()
{
}

void sub_1947FC0()
{
}

void sub_1947FCC()
{
}

void sub_1947FDC()
{
}

void sub_1947FE8()
{
}

void sub_1947FF8()
{
}

void sub_1948004()
{
}

void sub_1948014()
{
}

void sub_1948020()
{
}

void sub_1948030()
{
}

void sub_194803C()
{
}

void sub_194804C()
{
}

void sub_1948058()
{
}

void sub_1948068()
{
}

void sub_1948074()
{
}

void sub_1948084()
{
}

void sub_1948090()
{
}

void sub_19480A0()
{
}

void sub_19480AC()
{
}

void sub_19480BC()
{
}

void sub_19480C8()
{
}

void sub_19480D8()
{
}

void sub_19480E4()
{
}

void sub_19480F4()
{
}

void sub_1948100()
{
}

void sub_1948110()
{
}

void sub_194811C()
{
}

void sub_194812C()
{
}

void sub_1948138()
{
}

void sub_1948148()
{
}

void sub_1948154()
{
}

void sub_1948164()
{
}

void sub_1948170()
{
}

void sub_1948180()
{
}

void sub_194818C()
{
}

void sub_194819C()
{
}

void sub_19481A8()
{
}

void sub_19481B8()
{
}

void sub_19481C4()
{
}

void sub_19481D4()
{
}

void sub_19481E0()
{
}

void sub_19481F0()
{
}

void sub_19481FC()
{
}

void sub_194820C()
{
}

void sub_1948218()
{
}

void sub_1948228()
{
}

void sub_1948234()
{
}

void sub_1948244()
{
}

void sub_1948250()
{
}

void sub_1948260()
{
}

void sub_194826C()
{
}

void sub_194827C()
{
}

void sub_1948288()
{
}

void sub_1948298()
{
}

void sub_19482A4()
{
}

void sub_19482B4()
{
}

void sub_19482C0()
{
}

void sub_19482D0()
{
}

void sub_19482DC()
{
}

void sub_19482EC()
{
}

void sub_19482F8()
{
}

void sub_1948308()
{
}

void sub_1948314()
{
}

void sub_1948324()
{
}

void sub_1948330()
{
}

void sub_1948340()
{
}

void sub_194834C()
{
}

void sub_194835C()
{
}

void sub_1948368()
{
}

void sub_1948378()
{
}

void sub_1948384()
{
}

void sub_1948394()
{
}

void sub_19483A0()
{
}

void sub_19483B0()
{
}

void sub_19483BC()
{
}

void sub_19483CC()
{
}

void sub_19483D8()
{
}

void sub_19483E8()
{
}

void sub_19483F4()
{
}

void sub_1948404()
{
}

void sub_1948410()
{
}

void sub_1948420()
{
}

void sub_194842C()
{
}

void sub_194843C()
{
}

void sub_1948448()
{
}

void sub_1948458()
{
}

void sub_1948464()
{
}

void sub_1948474()
{
}

void sub_1948480()
{
}

void sub_1948490()
{
}

void sub_194849C()
{
}

void sub_19484AC()
{
}

void sub_19484B8()
{
}

void sub_19484C8()
{
}

void sub_19484D4()
{
}

void sub_19484E4()
{
}

void sub_19484F0()
{
}

void sub_1948500()
{
}

void sub_194850C()
{
}

void sub_194851C()
{
}

void sub_1948528()
{
}

void sub_1948538()
{
}

void sub_1948544()
{
}

void sub_1948554()
{
}

void sub_1948560()
{
}

void sub_1948570()
{
}

void sub_194857C()
{
}

void sub_194858C()
{
}

void sub_1948598()
{
}

void sub_19485A8()
{
}

void sub_19485B4()
{
}

void sub_19485C4()
{
}

void sub_19485D0()
{
}

void sub_19485E0()
{
}

void sub_19485EC()
{
}

void sub_19485FC()
{
}

void sub_1948608()
{
}

void sub_1948618()
{
}

void sub_1948624()
{
}

void sub_1948634()
{
}

void sub_1948640()
{
}

void sub_1948650()
{
}

void sub_194865C()
{
}

void sub_194866C()
{
}

void sub_1948678()
{
}

void sub_1948688()
{
}

void sub_1948694()
{
}

void sub_19486A4()
{
}

void sub_19486B0()
{
}

void sub_19486C0()
{
}

void sub_19486CC()
{
}

void sub_19486DC()
{
}

void sub_19486E8()
{
}

void sub_19486F8()
{
}

void sub_1948704()
{
}

void sub_1948714()
{
}

void sub_1948720()
{
}

void sub_1948730()
{
}

void sub_194873C()
{
}

void sub_194874C()
{
}

void sub_1948758()
{
}

void sub_1948768()
{
}

void sub_1948774()
{
}

void sub_1948784()
{
}

void sub_1948790()
{
}

void sub_19487A0()
{
}

void sub_19487AC()
{
}

void sub_19487BC()
{
}

void sub_19487C8()
{
}

void sub_19487D8()
{
}

void sub_19487E4()
{
}

void sub_19487F4()
{
}

void sub_1948800()
{
}

void sub_1948810()
{
}

void sub_194881C()
{
}

void sub_194882C()
{
}

void sub_1948838()
{
}

void sub_1948848()
{
}

void sub_1948854()
{
}

void sub_1948864()
{
}

void sub_1948870()
{
}

void sub_1948880()
{
}

void sub_194888C()
{
}

void sub_194889C()
{
}

void sub_19488A8()
{
}

void sub_19488B8()
{
}

void sub_19488C4()
{
}

void sub_19488D4()
{
}

void sub_19488E0()
{
}

void sub_19488F0()
{
}

void sub_19488FC()
{
}

void sub_194890C()
{
}

void sub_1948918()
{
}

void sub_1948928()
{
}

void sub_1948934()
{
}

void sub_1948944()
{
}

void sub_1948950()
{
}

void sub_1948960()
{
}

void sub_194896C()
{
}

void sub_194897C()
{
}

void sub_1948988()
{
}

void sub_1948998()
{
}

void sub_19489A4()
{
}

void sub_19489B4()
{
}

void sub_19489C0()
{
}

void sub_19489D0()
{
}

void sub_19489DC()
{
}

void sub_19489EC()
{
}

void sub_19489F8()
{
}

void sub_1948A08()
{
}

void sub_1948A14()
{
}

void sub_1948A24()
{
}

void sub_1948A30()
{
}

void sub_1948A3C()
{
}

void sub_1948A48()
{
}

void sub_1948A54()
{
}

void sub_1948A64()
{
}

void sub_1948A70()
{
}

void sub_1948A80()
{
}

void sub_1948A8C()
{
}

void sub_1948A9C()
{
}

void sub_1948AA8()
{
}

void sub_1948AB8()
{
}

void sub_1948AC4()
{
}

void sub_1948AD4()
{
}

void sub_1948AE0()
{
}

void sub_1948AF0()
{
}

void sub_1948AFC()
{
}

void sub_1948B0C()
{
}

void sub_1948B18()
{
}

void sub_1948B28()
{
}

void sub_1948B34()
{
}

void sub_1948B44()
{
}

void sub_1948B50()
{
}

void sub_1948B60()
{
}

void sub_1948B6C()
{
}

void sub_1948B7C()
{
}

void sub_1948B88()
{
}

void sub_1948B98()
{
}

void sub_1948BA4()
{
}

void sub_1948BB4()
{
}

void sub_1948BC0()
{
}

void sub_1948BD0()
{
}

void sub_1948BDC()
{
}

void sub_1948BEC()
{
}

void sub_1948BF8()
{
}

void sub_1948C08()
{
}

void sub_1948C14()
{
}

void sub_1948C24()
{
}

void sub_1948C30()
{
}

void sub_1948C40()
{
}

void sub_1948C4C()
{
}

void sub_1948C5C()
{
}

void sub_1948C68()
{
}

void sub_1948C78()
{
}

void sub_1948C84()
{
}

void sub_1948C94()
{
}

void sub_1948CA0()
{
}

void sub_1948CB0()
{
}

void sub_1948CBC()
{
}

void sub_1948CCC()
{
}

void sub_1948CD8()
{
}

void sub_1948CE8()
{
}

void sub_1948CF4()
{
}

void sub_1948D04()
{
}

void sub_1948D10()
{
}

void sub_1948D20()
{
}

void sub_1948D2C()
{
}

void sub_1948D3C()
{
}

void sub_1948D48()
{
}

void sub_1948D58()
{
}

void sub_1948D64()
{
}

void sub_1948D74()
{
}

void sub_1948D80()
{
}

void sub_1948D90()
{
}

void sub_1948D9C()
{
}

void sub_1948DAC()
{
}

void sub_1948DB8()
{
}

void sub_1948DC8()
{
}

void sub_1948DD4()
{
}

void sub_1948DE4()
{
}

void sub_1948DF0()
{
}

void sub_1948E00()
{
}

void sub_1948E0C()
{
}

void sub_1948E1C()
{
}

void sub_1948E28()
{
}

void sub_1948E38()
{
}

void sub_1948E44()
{
}

void sub_1948E54()
{
}

void sub_1948E60()
{
}

void sub_1948E70()
{
}

void sub_1948E7C()
{
}

void sub_1948E8C()
{
}

void sub_1948E98()
{
}

void sub_1948EA8()
{
}

void sub_1948EB4()
{
}

void sub_1948EC4()
{
}

void sub_1948ED0()
{
}

void sub_1948EE0()
{
}

void sub_1948EEC()
{
}

void sub_1948EFC()
{
}

void sub_1948F08()
{
}

void sub_1948F18()
{
}

void sub_1948F24()
{
}

void sub_1948F34()
{
}

void sub_1948F40()
{
}

void sub_1948F50()
{
}

void sub_1948F5C()
{
}

void sub_1948F6C()
{
}

void sub_1948F78()
{
}

void sub_1948F88()
{
}

void sub_1948F94()
{
}

void sub_1948FA4()
{
}

void sub_1948FB0()
{
}

void sub_1948FC0()
{
}

void sub_1948FCC()
{
}

void sub_1948FDC()
{
}

void sub_1948FE8()
{
}

void sub_1948FF8()
{
}

void sub_1949004()
{
}

void sub_1949014()
{
}

void sub_1949020()
{
}

void sub_1949030()
{
}

void sub_194903C()
{
}

void sub_194904C()
{
}

void sub_1949058()
{
}

void sub_1949068()
{
}

void sub_1949074()
{
}

void sub_1949084()
{
}

void sub_1949090()
{
}

void sub_19490A0()
{
}

void sub_19490AC()
{
}

void sub_19490BC()
{
}

void sub_19490C8()
{
}

void sub_19490D8()
{
}

void sub_19490E4()
{
}

void sub_19490F4()
{
}

void sub_1949100()
{
}

void sub_1949110()
{
}

void sub_194911C()
{
}

void sub_194912C()
{
}

void sub_1949138()
{
}

void sub_1949148()
{
}

void sub_1949154()
{
}

void sub_1949164()
{
}

void sub_1949170()
{
}

void sub_1949180()
{
}

void sub_194918C()
{
}

void sub_194919C()
{
}

void sub_19491A8()
{
}

void sub_19491B8()
{
}

void sub_19491C4()
{
}

void sub_19491D4()
{
}

void sub_19491E0()
{
}

void sub_19491F0()
{
}

void sub_19491FC()
{
}

void sub_194920C()
{
}

void sub_1949218()
{
}

void sub_1949228()
{
}

void sub_1949234()
{
}

void sub_1949244()
{
}

void sub_1949250()
{
}

void sub_1949260()
{
}

void sub_194926C()
{
}

void sub_194927C()
{
}

void sub_1949288()
{
}

void sub_1949298()
{
}

void sub_19492A4()
{
}

void sub_19492B4()
{
}

void sub_19492C0()
{
}

void sub_19492D0()
{
}

void sub_19492DC()
{
}

void sub_19492EC()
{
}

void sub_19492F8()
{
}

void sub_1949308()
{
}

void sub_1949314()
{
}

void sub_1949324()
{
}

void sub_1949330()
{
}

void sub_1949340()
{
}

void sub_194934C()
{
}

void sub_194935C()
{
}

void sub_1949368()
{
}

void sub_1949378()
{
}

void sub_1949384()
{
}

void sub_1949394()
{
}

void sub_19493A0()
{
}

void sub_19493B0()
{
}

void sub_19493BC()
{
}

void sub_19493CC()
{
}

void sub_19493D8()
{
}

void sub_19493E8()
{
}

void sub_19493F4()
{
}

void sub_1949404()
{
}

void sub_1949410()
{
}

void sub_1949420()
{
}

void sub_194942C()
{
}

void sub_194943C()
{
}

void sub_1949448()
{
}

void sub_1949458()
{
}

void sub_1949464()
{
}

void sub_1949474()
{
}

void sub_1949480()
{
}

void sub_1949490()
{
}

void sub_194949C()
{
}

void sub_19494AC()
{
}

void sub_19494B8()
{
}

void sub_19494C8()
{
}

void sub_19494D4()
{
}

void sub_19494E4()
{
}

void sub_19494F0()
{
}

void sub_1949500()
{
}

void sub_194950C()
{
}

void sub_194951C()
{
}

void sub_1949528()
{
}

void sub_1949538()
{
}

void sub_1949544()
{
}

void sub_1949554()
{
}

void sub_1949560()
{
}

void sub_1949570()
{
}

void sub_194957C()
{
}

void sub_1949588()
{
}

void sub_194959C()
{
}

void sub_19495B0()
{
}

void sub_19495B8()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_26261A0 = 0;
  qword_26261A8 = 0;
  qword_26261B0 = 0;
  qword_26261A0 = (uint64_t)operator new(0x18uLL);
  qword_26261A8 = qword_26261A0;
  qword_26261B0 = qword_26261A0 + 24;
  qword_26261A8 = (uint64_t)sub_18914E4((uint64_t)&qword_26261B0, (long long *)__p, &v2, (char *)qword_26261A0);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_26261B8 = 0;
  qword_26261C0 = 0;
  qword_26261C8 = 0;
  qword_26261B8 = (uint64_t)operator new(0x18uLL);
  qword_26261C0 = qword_26261B8;
  qword_26261C8 = qword_26261B8 + 24;
  qword_26261C0 = (uint64_t)sub_18914E4((uint64_t)&qword_26261C8, (long long *)__p, &v2, (char *)qword_26261B8);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_26261D0 = 0;
  qword_26261D8 = 0;
  qword_26261E0 = 0;
  qword_26261D0 = (uint64_t)operator new(0x18uLL);
  qword_26261D8 = qword_26261D0;
  qword_26261E0 = qword_26261D0 + 24;
  qword_26261D8 = (uint64_t)sub_18914E4((uint64_t)&qword_26261E0, (long long *)__p, &v2, (char *)qword_26261D0);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_193EB04();
}

void sub_194975C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  qword_26261D8 = v16;
  sub_1891624((void ***)&a9);
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

double sub_19497C0@<D0>(uint64_t a1@<X0>, int a2@<W3>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (a2) {
      return result;
    }
  }
  else
  {
    uint64_t v4 = *(unsigned __int8 *)(a1 + 23);
    if (a2) {
      return result;
    }
  }
  if (v4)
  {
    sub_1949854(v6);
    double result = v6[0];
    *(_OWORD *)a3 = *(_OWORD *)v6;
  }
  return result;
}

uint64_t sub_1949830(uint64_t result, int a2)
{
  *(void *)double result = off_24E73C8;
  *(_DWORD *)(result + 8) = a2;
  return result;
}

void *sub_1949854@<X0>(void *a1@<X8>)
{
  long long v2 = operator new(0xD8uLL);
  double result = sub_19498C8(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_19498B4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_19498C8(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_24E7408;
  sub_1A2DE34(a1 + 3);
  return a1;
}

void sub_1949910(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1949924(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24E7408;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1949944(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24E7408;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1949998(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_19499C0()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2626248, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    char v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_19509A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_19529AC()
{
}

void sub_19529B8()
{
}

void sub_19529C8()
{
}

void sub_19529D4()
{
}

void sub_19529E4()
{
}

void sub_19529F0()
{
}

void sub_1952A00()
{
}

void sub_1952A0C()
{
}

void sub_1952A1C()
{
}

void sub_1952A28()
{
}

void sub_1952A38()
{
}

void sub_1952A44()
{
}

void sub_1952A54()
{
}

void sub_1952A60()
{
}

void sub_1952A70()
{
}

void sub_1952A7C()
{
}

void sub_1952A8C()
{
}

void sub_1952A98()
{
}

void sub_1952AA8()
{
}

void sub_1952AB4()
{
}

void sub_1952AC4()
{
}

void sub_1952AD0()
{
}

void sub_1952AE0()
{
}

void sub_1952AEC()
{
}

void sub_1952AFC()
{
}

void sub_1952B08()
{
}

void sub_1952B18()
{
}

void sub_1952B24()
{
}

void sub_1952B34()
{
}

void sub_1952B40()
{
}

void sub_1952B50()
{
}

void sub_1952B5C()
{
}

void sub_1952B6C()
{
}

void sub_1952B78()
{
}

void sub_1952B88()
{
}

void sub_1952B94()
{
}

void sub_1952BA4()
{
}

void sub_1952BB0()
{
}

void sub_1952BC0()
{
}

void sub_1952BCC()
{
}

void sub_1952BDC()
{
}

void sub_1952BE8()
{
}

void sub_1952BF8()
{
}

void sub_1952C04()
{
}

void sub_1952C14()
{
}

void sub_1952C20()
{
}

void sub_1952C30()
{
}

void sub_1952C3C()
{
}

void sub_1952C4C()
{
}

void sub_1952C58()
{
}

void sub_1952C68()
{
}

void sub_1952C74()
{
}

void sub_1952C84()
{
}

void sub_1952C90()
{
}

void sub_1952CA0()
{
}

void sub_1952CAC()
{
}

void sub_1952CBC()
{
}

void sub_1952CC8()
{
}

void sub_1952CD8()
{
}

void sub_1952CE4()
{
}

void sub_1952CF4()
{
}

void sub_1952D00()
{
}

void sub_1952D10()
{
}

void sub_1952D1C()
{
}

void sub_1952D2C()
{
}

void sub_1952D38()
{
}

void sub_1952D48()
{
}

void sub_1952D54()
{
}

void sub_1952D64()
{
}

void sub_1952D70()
{
}

void sub_1952D80()
{
}

void sub_1952D8C()
{
}

void sub_1952D9C()
{
}

void sub_1952DA8()
{
}

void sub_1952DB8()
{
}

void sub_1952DC4()
{
}

void sub_1952DD4()
{
}

void sub_1952DE0()
{
}

void sub_1952DF0()
{
}

void sub_1952DFC()
{
}

void sub_1952E0C()
{
}

void sub_1952E18()
{
}

void sub_1952E28()
{
}

void sub_1952E34()
{
}

void sub_1952E44()
{
}

void sub_1952E50()
{
}

void sub_1952E60()
{
}

void sub_1952E6C()
{
}

void sub_1952E7C()
{
}

void sub_1952E88()
{
}

void sub_1952E98()
{
}

void sub_1952EA4()
{
}

void sub_1952EB4()
{
}

void sub_1952EC0()
{
}

void sub_1952ED0()
{
}

void sub_1952EDC()
{
}

void sub_1952EEC()
{
}

void sub_1952EF8()
{
}

void sub_1952F08()
{
}

void sub_1952F14()
{
}

void sub_1952F24()
{
}

void sub_1952F30()
{
}

void sub_1952F40()
{
}

void sub_1952F4C()
{
}

void sub_1952F5C()
{
}

void sub_1952F68()
{
}

void sub_1952F78()
{
}

void sub_1952F84()
{
}

void sub_1952F94()
{
}

void sub_1952FA0()
{
}

void sub_1952FB0()
{
}

void sub_1952FBC()
{
}

void sub_1952FCC()
{
}

void sub_1952FD8()
{
}

void sub_1952FE8()
{
}

void sub_1952FF4()
{
}

void sub_1953004()
{
}

void sub_1953010()
{
}

void sub_1953020()
{
}

void sub_195302C()
{
}

void sub_195303C()
{
}

void sub_1953048()
{
}

void sub_1953058()
{
}

void sub_1953064()
{
}

void sub_1953074()
{
}

void sub_1953080()
{
}

void sub_1953090()
{
}

void sub_195309C()
{
}

void sub_19530AC()
{
}

void sub_19530B8()
{
}

void sub_19530C8()
{
}

void sub_19530D4()
{
}

void sub_19530E4()
{
}

void sub_19530F0()
{
}

void sub_1953100()
{
}

void sub_195310C()
{
}

void sub_195311C()
{
}

void sub_1953128()
{
}

void sub_1953138()
{
}

void sub_1953144()
{
}

void sub_1953154()
{
}

void sub_1953160()
{
}

void sub_1953170()
{
}

void sub_195317C()
{
}

void sub_195318C()
{
}

void sub_1953198()
{
}

void sub_19531A8()
{
}

void sub_19531B4()
{
}

void sub_19531C4()
{
}

void sub_19531D0()
{
}

void sub_19531E0()
{
}

void sub_19531EC()
{
}

void sub_19531FC()
{
}

void sub_1953208()
{
}

void sub_1953218()
{
}

void sub_1953224()
{
}

void sub_1953234()
{
}

void sub_1953240()
{
}

void sub_1953250()
{
}

void sub_195325C()
{
}

void sub_195326C()
{
}

void sub_1953278()
{
}

void sub_1953288()
{
}

void sub_1953294()
{
}

void sub_19532A4()
{
}

void sub_19532B0()
{
}

void sub_19532C0()
{
}

void sub_19532CC()
{
}

void sub_19532DC()
{
}

void sub_19532E8()
{
}

void sub_19532F8()
{
}

void sub_1953304()
{
}

void sub_1953314()
{
}

void sub_1953320()
{
}

void sub_1953330()
{
}

void sub_195333C()
{
}

void sub_195334C()
{
}

void sub_1953358()
{
}

void sub_1953368()
{
}

void sub_1953374()
{
}

void sub_1953384()
{
}

void sub_1953390()
{
}

void sub_19533A0()
{
}

void sub_19533AC()
{
}

void sub_19533BC()
{
}

void sub_19533C8()
{
}

void sub_19533D8()
{
}

void sub_19533E4()
{
}

void sub_19533F4()
{
}

void sub_1953400()
{
}

void sub_1953410()
{
}

void sub_195341C()
{
}

void sub_195342C()
{
}

void sub_1953438()
{
}

void sub_1953448()
{
}

void sub_1953454()
{
}

void sub_1953464()
{
}

void sub_1953470()
{
}

void sub_1953480()
{
}

void sub_195348C()
{
}

void sub_195349C()
{
}

void sub_19534A8()
{
}

void sub_19534B8()
{
}

void sub_19534C4()
{
}

void sub_19534D4()
{
}

void sub_19534E0()
{
}

void sub_19534F0()
{
}

void sub_19534FC()
{
}

void sub_195350C()
{
}

void sub_1953518()
{
}

void sub_1953528()
{
}

void sub_1953534()
{
}

void sub_1953544()
{
}

void sub_1953550()
{
}

void sub_1953560()
{
}

void sub_195356C()
{
}

void sub_195357C()
{
}

void sub_1953588()
{
}

void sub_1953598()
{
}

void sub_19535A4()
{
}

void sub_19535B4()
{
}

void sub_19535C0()
{
}

void sub_19535D0()
{
}

void sub_19535DC()
{
}

void sub_19535EC()
{
}

void sub_19535F8()
{
}

void sub_1953608()
{
}

void sub_1953614()
{
}

void sub_1953624()
{
}

void sub_1953630()
{
}

void sub_1953640()
{
}

void sub_195364C()
{
}

void sub_195365C()
{
}

void sub_1953668()
{
}

void sub_1953678()
{
}

void sub_1953684()
{
}

void sub_1953694()
{
}

void sub_19536A0()
{
}

void sub_19536B0()
{
}

void sub_19536BC()
{
}

void sub_19536CC()
{
}

void sub_19536D8()
{
}

void sub_19536E8()
{
}

void sub_19536F4()
{
}

void sub_1953704()
{
}

void sub_1953710()
{
}

void sub_1953720()
{
}

void sub_195372C()
{
}

void sub_195373C()
{
}

void sub_1953748()
{
}

void sub_1953758()
{
}

void sub_1953764()
{
}

void sub_1953774()
{
}

void sub_1953780()
{
}

void sub_1953790()
{
}

void sub_195379C()
{
}

void sub_19537AC()
{
}

void sub_19537B8()
{
}

void sub_19537C8()
{
}

void sub_19537D4()
{
}

void sub_19537E4()
{
}

void sub_19537F0()
{
}

void sub_1953800()
{
}

void sub_195380C()
{
}

void sub_195381C()
{
}

void sub_1953828()
{
}

void sub_1953838()
{
}

void sub_1953844()
{
}

void sub_1953854()
{
}

void sub_1953860()
{
}

void sub_1953870()
{
}

void sub_195387C()
{
}

void sub_195388C()
{
}

void sub_1953898()
{
}

void sub_19538A8()
{
}

void sub_19538B4()
{
}

void sub_19538C4()
{
}

void sub_19538D0()
{
}

void sub_19538E0()
{
}

void sub_19538EC()
{
}

void sub_19538F8()
{
}

void sub_1953904()
{
}

void sub_1953910()
{
}

void sub_1953920()
{
}

void sub_195392C()
{
}

void sub_195393C()
{
}

void sub_1953948()
{
}

void sub_1953958()
{
}

void sub_1953964()
{
}

void sub_1953974()
{
}

void sub_1953980()
{
}

void sub_1953990()
{
}

void sub_195399C()
{
}

void sub_19539AC()
{
}

void sub_19539B8()
{
}

void sub_19539C8()
{
}

void sub_19539D4()
{
}

void sub_19539E4()
{
}

void sub_19539F0()
{
}

void sub_1953A00()
{
}

void sub_1953A0C()
{
}

void sub_1953A1C()
{
}

void sub_1953A28()
{
}

void sub_1953A38()
{
}

void sub_1953A44()
{
}

void sub_1953A54()
{
}

void sub_1953A60()
{
}

void sub_1953A70()
{
}

void sub_1953A7C()
{
}

void sub_1953A8C()
{
}

void sub_1953A98()
{
}

void sub_1953AA8()
{
}

void sub_1953AB4()
{
}

void sub_1953AC4()
{
}

void sub_1953AD0()
{
}

void sub_1953AE0()
{
}

void sub_1953AEC()
{
}

void sub_1953AFC()
{
}

void sub_1953B08()
{
}

void sub_1953B18()
{
}

void sub_1953B24()
{
}

void sub_1953B34()
{
}

void sub_1953B40()
{
}

void sub_1953B50()
{
}

void sub_1953B5C()
{
}

void sub_1953B6C()
{
}

void sub_1953B78()
{
}

void sub_1953B88()
{
}

void sub_1953B94()
{
}

void sub_1953BA4()
{
}

void sub_1953BB0()
{
}

void sub_1953BC0()
{
}

void sub_1953BCC()
{
}

void sub_1953BDC()
{
}

void sub_1953BE8()
{
}

void sub_1953BF8()
{
}

void sub_1953C04()
{
}

void sub_1953C14()
{
}

void sub_1953C20()
{
}

void sub_1953C30()
{
}

void sub_1953C3C()
{
}

void sub_1953C4C()
{
}

void sub_1953C58()
{
}

void sub_1953C68()
{
}

void sub_1953C74()
{
}

void sub_1953C84()
{
}

void sub_1953C90()
{
}

void sub_1953CA0()
{
}

void sub_1953CAC()
{
}

void sub_1953CBC()
{
}

void sub_1953CC8()
{
}

void sub_1953CD8()
{
}

void sub_1953CE4()
{
}

void sub_1953CF4()
{
}

void sub_1953D00()
{
}

void sub_1953D10()
{
}

void sub_1953D1C()
{
}

void sub_1953D2C()
{
}

void sub_1953D38()
{
}

void sub_1953D48()
{
}

void sub_1953D54()
{
}

void sub_1953D64()
{
}

void sub_1953D70()
{
}

void sub_1953D80()
{
}

void sub_1953D8C()
{
}

void sub_1953D9C()
{
}

void sub_1953DA8()
{
}

void sub_1953DB8()
{
}

void sub_1953DC4()
{
}

void sub_1953DD4()
{
}

void sub_1953DE0()
{
}

void sub_1953DF0()
{
}

void sub_1953DFC()
{
}

void sub_1953E0C()
{
}

void sub_1953E18()
{
}

void sub_1953E28()
{
}

void sub_1953E34()
{
}

void sub_1953E44()
{
}

void sub_1953E50()
{
}

void sub_1953E60()
{
}

void sub_1953E6C()
{
}

void sub_1953E7C()
{
}

void sub_1953E88()
{
}

void sub_1953E98()
{
}

void sub_1953EA4()
{
}

void sub_1953EB4()
{
}

void sub_1953EC0()
{
}

void sub_1953ED0()
{
}

void sub_1953EDC()
{
}

void sub_1953EEC()
{
}

void sub_1953EF8()
{
}

void sub_1953F08()
{
}

void sub_1953F14()
{
}

void sub_1953F24()
{
}

void sub_1953F30()
{
}

void sub_1953F40()
{
}

void sub_1953F4C()
{
}

void sub_1953F5C()
{
}

void sub_1953F68()
{
}

void sub_1953F78()
{
}

void sub_1953F84()
{
}

void sub_1953F94()
{
}

void sub_1953FA0()
{
}

void sub_1953FB0()
{
}

void sub_1953FBC()
{
}

void sub_1953FCC()
{
}

void sub_1953FD8()
{
}

void sub_1953FE8()
{
}

void sub_1953FF4()
{
}

void sub_1954004()
{
}

void sub_1954010()
{
}

void sub_1954020()
{
}

void sub_195402C()
{
}

void sub_195403C()
{
}

void sub_1954048()
{
}

void sub_1954058()
{
}

void sub_1954064()
{
}

void sub_1954074()
{
}

void sub_1954080()
{
}

void sub_1954090()
{
}

void sub_195409C()
{
}

void sub_19540AC()
{
}

void sub_19540B8()
{
}

void sub_19540C8()
{
}

void sub_19540D4()
{
}

void sub_19540E4()
{
}

void sub_19540F0()
{
}

void sub_1954100()
{
}

void sub_195410C()
{
}

void sub_195411C()
{
}

void sub_1954128()
{
}

void sub_1954138()
{
}

void sub_1954144()
{
}

void sub_1954154()
{
}

void sub_1954160()
{
}

void sub_1954170()
{
}

void sub_195417C()
{
}

void sub_195418C()
{
}

void sub_1954198()
{
}

void sub_19541A8()
{
}

void sub_19541B4()
{
}

void sub_19541C4()
{
}

void sub_19541D0()
{
}

void sub_19541E0()
{
}

void sub_19541EC()
{
}

void sub_19541FC()
{
}

void sub_1954208()
{
}

void sub_1954218()
{
}

void sub_1954224()
{
}

void sub_1954234()
{
}

void sub_1954240()
{
}

void sub_1954250()
{
}

void sub_195425C()
{
}

void sub_195426C()
{
}

void sub_1954278()
{
}

void sub_1954288()
{
}

void sub_1954294()
{
}

void sub_19542A4()
{
}

void sub_19542B0()
{
}

void sub_19542C0()
{
}

void sub_19542CC()
{
}

void sub_19542DC()
{
}

void sub_19542E8()
{
}

void sub_19542F8()
{
}

void sub_1954304()
{
}

void sub_1954314()
{
}

void sub_1954320()
{
}

void sub_1954330()
{
}

void sub_195433C()
{
}

void sub_195434C()
{
}

void sub_1954358()
{
}

void sub_1954368()
{
}

void sub_1954374()
{
}

void sub_1954384()
{
}

void sub_1954390()
{
}

void sub_19543A0()
{
}

void sub_19543AC()
{
}

void sub_19543BC()
{
}

void sub_19543C8()
{
}

void sub_19543D8()
{
}

void sub_19543E4()
{
}

void sub_19543F4()
{
}

void sub_1954400()
{
}

void sub_1954410()
{
}

void sub_195441C()
{
}

void sub_195442C()
{
}

void sub_1954438()
{
}

void sub_1954444()
{
}

void sub_1954458()
{
}

void sub_195446C()
{
}

void sub_1954474()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2626200 = 0;
  qword_2626208 = 0;
  qword_2626210 = 0;
  qword_2626200 = (uint64_t)operator new(0x18uLL);
  qword_2626208 = qword_2626200;
  qword_2626210 = qword_2626200 + 24;
  qword_2626208 = (uint64_t)sub_18914E4((uint64_t)&qword_2626210, (long long *)__p, &v2, (char *)qword_2626200);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2626218 = 0;
  qword_2626220 = 0;
  qword_2626228 = 0;
  qword_2626218 = (uint64_t)operator new(0x18uLL);
  qword_2626220 = qword_2626218;
  qword_2626228 = qword_2626218 + 24;
  qword_2626220 = (uint64_t)sub_18914E4((uint64_t)&qword_2626228, (long long *)__p, &v2, (char *)qword_2626218);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2626230 = 0;
  qword_2626238 = 0;
  qword_2626240 = 0;
  qword_2626230 = (uint64_t)operator new(0x18uLL);
  qword_2626238 = qword_2626230;
  qword_2626240 = qword_2626230 + 24;
  qword_2626238 = (uint64_t)sub_18914E4((uint64_t)&qword_2626240, (long long *)__p, &v2, (char *)qword_2626230);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_19499C0();
}

void sub_1954618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  qword_2626238 = v16;
  sub_1891624((void ***)&a9);
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_195467C(uint64_t a1@<X0>, int a2@<W1>, char **a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v22 = 0;
  char v23 = 0;
  int v24 = 0;
  v19[1] = 0;
  uint64_t v20 = 0;
  v19[0] = 0;
  char v21 = 0;
  sub_1A2AA74(a1, (uint64_t)v19);
  unint64_t v5 = a2;
  char v6 = a3 + 2;
  while (1)
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DC98, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_254DC98))
    {
      qword_254DC88 = 0;
      byte_254DC90 = 0;
      dword_254DC94 = 0;
      qword_254DC70 = 0x7FFFFFFFLL;
      unk_254DC78 = 0xFFFFFFFF00000000;
      qword_254DC68 = a1;
      byte_254DC80 = 0;
      __cxa_guard_release(&qword_254DC98);
    }
    int v7 = HIDWORD(v20);
    if (HIDWORD(v20) == dword_254DC7C && v21 == byte_254DC80) {
      break;
    }
    char v8 = *a3;
    int v9 = a3[1];
    unint64_t v10 = (v9 - *a3) >> 2;
    if (v10 >= v5) {
      break;
    }
    if ((unint64_t)v9 >= *v6)
    {
      unint64_t v12 = v10 + 1;
      if ((v10 + 1) >> 62) {
        sub_2E00();
      }
      uint64_t v13 = *v6 - (void)v8;
      if (v13 >> 1 > v12) {
        unint64_t v12 = v13 >> 1;
      }
      if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v14 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v14 = v12;
      }
      if (v14)
      {
        long long v15 = (char *)sub_1896AFC((uint64_t)(a3 + 2), v14);
        char v8 = *a3;
        int v9 = a3[1];
      }
      else
      {
        long long v15 = 0;
      }
      uint64_t v16 = &v15[4 * v10];
      *(_DWORD *)uint64_t v16 = v7;
      char v11 = v16 + 4;
      while (v9 != v8)
      {
        int v17 = *((_DWORD *)v9 - 1);
        v9 -= 4;
        *((_DWORD *)v16 - 1) = v17;
        v16 -= 4;
      }
      *a3 = v16;
      a3[1] = v11;
      a3[2] = &v15[4 * v14];
      if (v8) {
        operator delete(v8);
      }
    }
    else
    {
      *(_DWORD *)int v9 = HIDWORD(v20);
      char v11 = v9 + 4;
    }
    a3[1] = v11;
    sub_1A2AB50((uint64_t)v19);
  }
}

void sub_1954840(_Unwind_Exception *exception_object)
{
  char v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1954868(unsigned int *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  if (a2) {
    int v4 = sub_1A2A9E0(a1);
  }
  else {
    int v4 = sub_1A2A9E8((unsigned __int8 *)a1);
  }
  if (!v4)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "failed alloc while reading");
  }
  long long v5 = *((_OWORD *)v4 + 1);
  *(_OWORD *)a3 = *(_OWORD *)v4;
  *(_OWORD *)(a3 + 16) = v5;
  *(void *)(a3 + 32) = *((void *)v4 + 4);

  free(v4);
}

void sub_19548F4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1954908(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1954954(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  int v4 = (unsigned int *)(a2 + 24);
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  sub_1A29560(a2 + 24, 0);
  *(_OWORD *)(a2 + 64) = 0u;
  *(void *)(a2 + 96) = 0;
  *(_OWORD *)(a2 + 80) = 0u;
  sub_1A29560(a2 + 64, 0);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 23);
  if ((v5 & 0x80u) != 0) {
    uint64_t v5 = *(void *)(a1 + 8);
  }
  if (v5)
  {
    std::string::size_type v6 = std::string::find((const std::string *)a1, 9, 0);
    if (v6 != -1)
    {
      std::string::size_type v7 = v6;
      uint64_t v8 = *(unsigned __int8 *)(a1 + 23);
      if ((v8 & 0x80u) != 0) {
        uint64_t v8 = *(void *)(a1 + 8);
      }
      if (v8 - 1 != v6)
      {
        std::string::basic_string(&v14, (const std::string *)a1, 0, v6, (std::allocator<char> *)&v13);
        if (*(char *)(a2 + 23) < 0) {
          operator delete(*(void **)a2);
        }
        *(std::string *)a2 = v14;
        std::string::basic_string(&v13, (const std::string *)a1, v7 + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v15);
        if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v9 = (unsigned int *)&v13;
        }
        else {
          int v9 = (unsigned int *)v13.__r_.__value_.__r.__words[0];
        }
        sub_1954868(v9, 1, (uint64_t)&v14);
        sub_1916B78((uint64_t)v4, (long long *)&v14);
        sub_1A29AB8(&v14);
        if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v13.__r_.__value_.__l.__data_);
        }
        std::string::size_type v10 = v7 + sub_1A294FC(v4) + 2;
        std::string::size_type v11 = *(unsigned __int8 *)(a1 + 23);
        if ((v11 & 0x80u) != 0) {
          std::string::size_type v11 = *(void *)(a1 + 8);
        }
        if (v10 < v11)
        {
          std::string::basic_string(&v13, (const std::string *)a1, v10, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v15);
          if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            unint64_t v12 = (unsigned int *)&v13;
          }
          else {
            unint64_t v12 = (unsigned int *)v13.__r_.__value_.__r.__words[0];
          }
          sub_1954868(v12, 1, (uint64_t)&v14);
          sub_1916B78(a2 + 64, (long long *)&v14);
          sub_1A29AB8(&v14);
          if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v13.__r_.__value_.__l.__data_);
          }
        }
      }
    }
  }
}

void sub_1954B3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1954908(v15);
  _Unwind_Resume(a1);
}

void sub_1954BA8(uint64_t a1@<X0>, int a2@<W1>, char **a3@<X8>)
{
  sub_1954954(a1 + 24, (uint64_t)&__p);
  sub_195467C((uint64_t)v7, a2, a3);
  sub_1A29AB8(&v8);
  sub_1A29AB8(v7);
  if (v6 < 0) {
    operator delete(__p);
  }
}

void sub_1954C28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1954908((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1954C3C(uint64_t *a1, long long *a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(v4 - 8);
  if (v7 >= v6)
  {
    uint64_t v10 = 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(v7 - *a1) >> 3);
    if ((unint64_t)(v10 + 1) > 0x276276276276276) {
      sub_2E00();
    }
    unint64_t v11 = 0x4EC4EC4EC4EC4EC5 * ((uint64_t)(v5 - *a1) >> 3);
    uint64_t v12 = 2 * v11;
    if (2 * v11 <= v10 + 1) {
      uint64_t v12 = v10 + 1;
    }
    if (v11 >= 0x13B13B13B13B13BLL) {
      unint64_t v13 = 0x276276276276276;
    }
    else {
      unint64_t v13 = v12;
    }
    uint64_t v19 = v4;
    if (v13) {
      std::string v14 = (char *)sub_19561C0(v4, v13);
    }
    else {
      std::string v14 = 0;
    }
    uint64_t v15 = v14;
    uint64_t v16 = &v14[104 * v10];
    char v18 = &v14[104 * v13];
    sub_19560A4((uint64_t)v16, a2);
    int v17 = v16 + 104;
    sub_195612C(a1, &v15);
    uint64_t v9 = a1[1];
    uint64_t result = sub_195626C((uint64_t)&v15);
  }
  else
  {
    uint64_t result = sub_19560A4(*(void *)(v4 - 8), a2);
    uint64_t v9 = v7 + 104;
    a1[1] = v7 + 104;
  }
  a1[1] = v9;
  return result;
}

void sub_1954D64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_195626C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1954D78(std::string *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1CD0254(a1, (char *)__p);
  unint64_t v7 = *(double **)(a3 + 1352);
  uint64_t v8 = *(double **)(a3 + 1360);
  while (1)
  {
    if (v7 == v8)
    {
      sub_191ABC0(a4);
      goto LABEL_7;
    }
    float64x2_t v13 = vcvtq_f64_f32(v12);
    if (sub_1C0E428(v13.f64, v7)) {
      break;
    }
    v7 += 11;
  }
  sub_1954E50((uint64_t)__p, a2, a3, a4);
LABEL_7:
  sub_1226044(&v11);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1954E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1954E50(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1 + 24;
  sub_1CD03C8(a1 + 24, &v42);
  uint64_t v9 = (_DWORD *)(a2 + 512);
  unint64_t v10 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
  int v12 = (char)v11;
  if ((v11 & 0x80u) != 0) {
    uint64_t v11 = *(void *)(v10 + 8);
  }
  if (v11 == 2
    && (v12 >= 0 ? (float64x2_t v13 = (_WORD *)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL)) : (float64x2_t v13 = *(_WORD **)v10),
        *v13 == 20554 || *v13 == 19272 || *v13 == 20301))
  {
    if (*(char *)(a2 + 479) < 0)
    {
      sub_4200(&__dst, *(void **)(a2 + 456), *(void *)(a2 + 464));
    }
    else
    {
      long long __dst = *(_OWORD *)(a2 + 456);
      uint64_t v49 = *(void *)(a2 + 472);
    }
    sub_1B0DEFC((uint64_t *)&__dst, (uint64_t)&v42, v8, v10, a3 + 1184, (uint64_t)v33);
    if (SHIBYTE(v49) < 0)
    {
      int v17 = (void *)__dst;
LABEL_35:
      operator delete(v17);
    }
  }
  else
  {
    if (*v9 > 7u || ((1 << *v9) & 0xC1) == 0)
    {
      sub_1B0AB38((uint64_t)&v42, *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL, a3 + 1184, (uint64_t)v33);
      goto LABEL_36;
    }
    sub_1CEAAA0(a3 + 8, &__dst);
    uint64_t v15 = (long long *)(a2 + 456);
    int v16 = *(char *)(a2 + 479);
    if (*(unsigned char *)(a3 + 912))
    {
      if (v16 < 0)
      {
        sub_4200(&v46, *(void **)(a2 + 456), *(void *)(a2 + 464));
      }
      else
      {
        long long v46 = *v15;
        uint64_t v47 = *(void *)(a2 + 472);
      }
      char v43 = 0;
      int v44 = 0;
      uint64_t v45 = 0;
      sub_1956340(&v43, (const void *)__dst, *((uint64_t *)&__dst + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&__dst + 1) - __dst) >> 2));
      sub_1B0D990((void *)(a2 + 512), (uint64_t)&v46, (uint64_t)&v42, v10, (void *)(a3 + 1184), (uint64_t *)&v43, *(_DWORD *)(a3 + 760), 1, (uint64_t)v33);
    }
    else
    {
      if (v16 < 0)
      {
        sub_4200(&v46, *(void **)(a2 + 456), *(void *)(a2 + 464));
      }
      else
      {
        long long v46 = *v15;
        uint64_t v47 = *(void *)(a2 + 472);
      }
      char v43 = 0;
      int v44 = 0;
      uint64_t v45 = 0;
      sub_1956340(&v43, (const void *)__dst, *((uint64_t *)&__dst + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&__dst + 1) - __dst) >> 2));
      sub_1B0DCC0((void *)(a2 + 512), (uint64_t)&v46, (uint64_t)&v42, v10, a3 + 1184, (uint64_t *)&v43, *(_DWORD *)(a3 + 760), (uint64_t)v33);
    }
    if (v43)
    {
      int v44 = v43;
      operator delete(v43);
    }
    if (SHIBYTE(v47) < 0) {
      operator delete((void *)v46);
    }
    int v17 = (void *)__dst;
    if ((void)__dst)
    {
      *((void *)&__dst + 1) = __dst;
      goto LABEL_35;
    }
  }
LABEL_36:
  if ((int)v35 <= 0)
  {
    sub_191ABC0(a4);
  }
  else
  {
    int v18 = sub_1A9D674(a3 + 1184);
    uint64_t v20 = *(void **)(a2 + 392);
    uint64_t v19 = *(void **)(a2 + 400);
    if (v20 != v19)
    {
      while (*v20 != *(void *)(a1 + 232))
      {
        if (++v20 == v19)
        {
          uint64_t v20 = *(void **)(a2 + 400);
          break;
        }
      }
    }
    if (SHIBYTE(v34) < 0)
    {
      sub_4200(v24, v33[0], (unint64_t)v33[1]);
    }
    else
    {
      *(_OWORD *)int v24 = *(_OWORD *)v33;
      uint64_t v25 = v34;
    }
    uint64_t v26 = v35;
    int v27 = v36;
    if (SHIBYTE(v38) < 0)
    {
      sub_4200(&__p, (void *)v37, *((unint64_t *)&v37 + 1));
    }
    else
    {
      long long __p = v37;
      uint64_t v29 = v38;
    }
    long long v30 = v39;
    sub_1892544((uint64_t)v31, (uint64_t)v40);
    v31[20] = v40[20];
    char v32 = v41;
    char v21 = *(std::__shared_weak_count **)(a2 + 528);
    uint64_t v22 = *(void *)(a2 + 520);
    char v23 = v21;
    if (v21) {
      atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    *((void *)&__dst + 1) = 0;
    uint64_t v49 = 0;
    *(void *)&long long __dst = (char *)&__dst + 8;
    sub_1956458(a4, (long long *)v24, v8, (_OWORD *)(a2 + 264), (_OWORD *)(a2 + 280), &v22, v18, v20 != v19, (uint64_t)&__dst, *(_DWORD *)(a2 + 144));
    sub_18F9134((uint64_t)&__dst, *((void **)&__dst + 1));
    if (v23) {
      sub_20A69F0(v23);
    }
    sub_12168((uint64_t)v31);
    if (SHIBYTE(v29) < 0) {
      operator delete((void *)__p);
    }
    if (SHIBYTE(v25) < 0) {
      operator delete(v24[0]);
    }
  }
  sub_12168((uint64_t)v40);
  if (SHIBYTE(v38) < 0) {
    operator delete((void *)v37);
  }
  if (SHIBYTE(v34) < 0) {
    operator delete(v33[0]);
  }
  sub_12C1DB8(&v42);
}

void sub_19552A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  long long v37 = *(void **)(v35 - 96);
  if (v37)
  {
    *(void *)(v35 - 88) = v37;
    operator delete(v37);
  }
  sub_12C1DB8((void *)(v35 - 176));
  _Unwind_Resume(a1);
}

BOOL sub_1955394(uint64_t a1)
{
  uint64_t v2 = sub_50BE8(a1);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if ((v3 & 0x80u) != 0) {
    uint64_t v3 = *(void *)(v2 + 8);
  }
  return v3 && *(_DWORD *)(sub_50BE8(a1) + 24) > 0;
}

void sub_19553EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v44 = sub_1A9D674(a3 + 1184);
  if (*(void *)(a2 + 520))
  {
    sub_5E5C(&v37, (char *)&unk_21717AB);
    sub_195692C((uint64_t)&v39, 0, 0, &v37);
    uint64_t v8 = (uint64_t *)(a2 + 520);
    if (v38 < 0) {
      operator delete((void *)v37);
    }
    uint64_t v9 = *v8;
    if (!*(_DWORD *)(*v8 + 304))
    {
      if (*(_DWORD *)(v9 + 296) != 1) {
        sub_11388B8();
      }
      sub_19140D4(v9, (uint64_t)v14);
      sub_1C423EC(a1 + 24, (uint64_t)v14, a3 + 8, (uint64_t)&__dst);
      long long v39 = __dst;
      if (SHIBYTE(v41) < 0) {
        operator delete((void *)v40);
      }
      long long v40 = __p;
      uint64_t v41 = v25;
      HIBYTE(v25) = 0;
      LOBYTE(__p) = 0;
      if (SHIBYTE(v43) < 0)
      {
        operator delete((void *)v42);
        long long v42 = v26;
        uint64_t v43 = v27;
        HIBYTE(v27) = 0;
        LOBYTE(v26) = 0;
        if (SHIBYTE(v25) < 0) {
          operator delete((void *)__p);
        }
      }
      else
      {
        long long v42 = v26;
        uint64_t v43 = v27;
        HIBYTE(v27) = 0;
        LOBYTE(v26) = 0;
      }
      uint64_t v45 = v14;
      sub_1891624((void ***)&v45);
      uint64_t v9 = *v8;
    }
    uint64_t v10 = a1 + 24;
    uint64_t v11 = *(std::__shared_weak_count **)(a2 + 528);
    uint64_t v35 = v9;
    int v36 = v11;
    if (v11) {
      atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    sub_19569D0(a4, v10, (_OWORD *)(a2 + 264), a2 + 280, (uint64_t)&v39, &v35, (uint64_t *)(a2 + 552), &v44);
    if (v36) {
      sub_20A69F0(v36);
    }
    sub_1E9FE70(&__dst);
    uint64_t v12 = HIBYTE(v43);
    if (v43 < 0) {
      uint64_t v12 = *((void *)&v42 + 1);
    }
    if (v12) {
      float64x2_t v13 = &v42;
    }
    else {
      float64x2_t v13 = &v40;
    }
    sub_1EA11B0((uint64_t)&__dst, (uint64_t *)(a2 + 520), v10, (uint64_t)v13, (uint64_t)v14);
    sub_1CDDFEC(a4, (uint64_t)v14);
    sub_1892A7C((uint64_t)v22, v22[1]);
    if (v21 < 0) {
      operator delete(v20);
    }
    if (v19 < 0) {
      operator delete(v18);
    }
    if (v17 < 0) {
      operator delete(v16);
    }
    if (v15 < 0) {
      operator delete(v14[3]);
    }
    uint64_t v45 = v14;
    sub_1891624((void ***)&v45);
    if (v34 < 0) {
      operator delete(v33);
    }
    if (v32 < 0) {
      operator delete(v31);
    }
    if (v30 < 0) {
      operator delete(v29);
    }
    v14[0] = (void **)&v28;
    sub_1891624(v14);
    v14[0] = (void **)&v27;
    sub_1891624(v14);
    v14[0] = (void **)&v25;
    sub_1891624(v14);
    if (SHIBYTE(__p) < 0) {
      operator delete(__dst);
    }
    if (SHIBYTE(v43) < 0) {
      operator delete((void *)v42);
    }
    if (SHIBYTE(v41) < 0) {
      operator delete((void *)v40);
    }
  }
  else
  {
    sub_191B504(a4);
  }
}

void sub_1955744(_Unwind_Exception *a1)
{
  *(void *)(v2 - 88) = v1;
  sub_1891624((void ***)(v2 - 88));
  sub_1892110(v2 - 152);
  _Unwind_Resume(a1);
}

void sub_19557A0()
{
  uint64_t v1 = *(std::__shared_weak_count **)(v0 - 184);
  if (v1) {
    sub_20A69F0(v1);
  }
  JUMPOUT(0x1955790);
}

void sub_19557B4()
{
  if (*(char *)(v0 - 153) < 0) {
    operator delete(*(void **)(v0 - 176));
  }
  JUMPOUT(0x1955798);
}

void sub_19557CC(std::string *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1F916D0(a1, (char *)__p);
  sub_19553EC((uint64_t)__p, a2, a3, (uint64_t)v11);
  unint64_t v7 = *(double **)(a3 + 1352);
  uint64_t v8 = *(double **)(a3 + 1360);
  while (1)
  {
    if (v7 == v8)
    {
      sub_191B504(a4);
      goto LABEL_7;
    }
    uint64_t v9 = sub_2ABCB4((uint64_t)v11);
    sub_1CDDCB4(v9, (uint64_t)v16);
    *(_OWORD *)char v15 = v17;
    int v10 = sub_1C0E428(v15, v7);
    sub_15B0994(v16);
    if (v10) {
      break;
    }
    v7 += 11;
  }
  sub_1891E80(a4, v11);
LABEL_7:
  sub_18933B8((uint64_t)v11);
  sub_1205E4C(v14);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
}

void sub_19558B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_19558E8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (*(char *)(a3 + 23) < 0)
  {
    sub_4200(&__dst, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    long long __dst = *(_OWORD *)a3;
    uint64_t v34 = *(void *)(a3 + 16);
  }
  sub_195692C((uint64_t)v19, 1, 0, &__dst);
  uint64_t v8 = a1 + 24;
  uint64_t v9 = *(std::__shared_weak_count **)(a2 + 528);
  uint64_t v31 = *(void *)(a2 + 520);
  char v32 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  memset(v10, 0, 24);
  LODWORD(v35) = 0;
  sub_19569D0(a4, v8, (_OWORD *)(a2 + 264), a2 + 280, (uint64_t)v19, &v31, (uint64_t *)v10, &v35);
  uint64_t v35 = v10;
  sub_1891624((void ***)&v35);
  if (v32) {
    sub_20A69F0(v32);
  }
  if ((v23[7] & 0x80000000) != 0) {
    operator delete(__p);
  }
  if ((v21[7] & 0x80000000) != 0) {
    operator delete(v19[1]);
  }
  if (SHIBYTE(v34) < 0) {
    operator delete((void *)__dst);
  }
  sub_1E9FE70(v19);
  sub_1EA11B0((uint64_t)v19, (uint64_t *)(a2 + 520), v8, a3, (uint64_t)v10);
  sub_1CDDFEC(a4, (uint64_t)v10);
  sub_1892A7C((uint64_t)v18, v18[1]);
  if (v17 < 0) {
    operator delete(v16);
  }
  if (v15 < 0) {
    operator delete(v14);
  }
  if (v13 < 0) {
    operator delete(v12);
  }
  if (v11 < 0) {
    operator delete(v10[3]);
  }
  uint64_t v35 = v10;
  sub_1891624((void ***)&v35);
  if (v30 < 0) {
    operator delete(v29);
  }
  if (v28 < 0) {
    operator delete(v27);
  }
  if (v26 < 0) {
    operator delete(v25);
  }
  v10[0] = (void **)&v24;
  sub_1891624(v10);
  v10[0] = (void **)v23;
  sub_1891624(v10);
  v10[0] = (void **)v21;
  sub_1891624(v10);
  if (v20 < 0) {
    operator delete(v19[0]);
  }
}

void sub_1955B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  sub_189208C((uint64_t)&a10);
  sub_1896E94((uint64_t)&a30);
  sub_18933B8(v30);
  _Unwind_Resume(a1);
}

void sub_1955B88(std::string *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  sub_1F916D0(a1, (char *)__p);
  sub_19558E8((uint64_t)__p, a2, a3, a4);
  sub_1205E4C(v9);
  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1955C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_1955C1C(uint64_t a1)
{
  BOOL result = sub_1CDDEAC(a1);
  if (result) {
    return *(_DWORD *)sub_1BAC0C8(a1) != 4;
  }
  return result;
}

void sub_1955C58(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = *a1;
  if (a1[1] != *a1)
  {
    unint64_t v5 = 0;
    do
    {
      sub_1ED0AF8(*(_DWORD *)(v3 + 4 * v5), &__p);
      unint64_t v7 = a2[1];
      unint64_t v6 = a2[2];
      if (v7 >= v6)
      {
        unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - *a2) >> 3);
        unint64_t v10 = v9 + 1;
        if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_2E00();
        }
        unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - *a2) >> 3);
        if (2 * v11 > v10) {
          unint64_t v10 = 2 * v11;
        }
        if (v11 >= 0x555555555555555) {
          unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v12 = v10;
        }
        v19[4] = a2 + 2;
        if (v12) {
          char v13 = (char *)sub_112C518((uint64_t)(a2 + 2), v12);
        }
        else {
          char v13 = 0;
        }
        std::string v14 = &v13[24 * v9];
        v19[0] = v13;
        v19[1] = v14;
        v19[3] = &v13[24 * v12];
        long long v15 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *((void *)v14 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
        *(_OWORD *)std::string v14 = v15;
        memset(&__p, 0, sizeof(__p));
        void v19[2] = v14 + 24;
        sub_188FE38(a2, v19);
        uint64_t v16 = a2[1];
        sub_188FFD0((uint64_t)v19);
        int v17 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        a2[1] = v16;
        if (v17 < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        long long v8 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *(void *)(v7 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
        *(_OWORD *)unint64_t v7 = v8;
        a2[1] = v7 + 24;
      }
      ++v5;
      uint64_t v3 = *a1;
    }
    while (v5 < (a1[1] - *a1) >> 2);
  }
}

void sub_1955DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1891624((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1955E20(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, int a4@<W3>, void *a5@<X4>, void *a6@<X8>)
{
  if (*a1 == a1[1])
  {
    *a6 = 0;
    a6[1] = 0;
    a6[2] = 0;
  }
  else
  {
    sub_19B595C(a3, a2, a1, a4 ^ 1, (uint64_t)&v19);
    uint64_t v11 = v19;
    uint64_t v12 = v20;
    if (v19 != v20
      && ((a4 & 1) != 0 || 0xAAAAAAAAAAAAAAABLL * ((v20 - v19) >> 4) >= 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3)))
    {
      memset(v18, 0, sizeof(v18));
      do
      {
        sub_1954954(v11 + 24, (uint64_t)&__p);
        sub_1954C3C(v18, &__p);
        sub_1A29AB8(&v17);
        sub_1A29AB8(&v16);
        if (SHIBYTE(v15) < 0) {
          operator delete((void *)__p);
        }
        v11 += 48;
      }
      while (v11 != v12);
      sub_1F7A464(v18, (uint64_t *)&__p);
      uint64_t v13 = *((void *)&__p + 1);
      if (a4 && (void)__p == *((void *)&__p + 1) && (uint64_t v13 = __p, *a5))
      {
        (*(void (**)(void, uint64_t *, uint64_t *, void *))(*(void *)*a5 + 16))(*a5, a1, v18, a3);
      }
      else
      {
        *a6 = __p;
        a6[1] = v13;
        a6[2] = v15;
        uint64_t v15 = 0;
        long long __p = 0uLL;
      }
      p_p = (void **)&__p;
      sub_1915D14(&p_p);
      *(void *)&long long __p = v18;
      sub_19562BC((void ***)&__p);
    }
    else
    {
      *a6 = 0;
      a6[1] = 0;
      a6[2] = 0;
    }
    *(void *)&long long __p = &v19;
    sub_1898078((void ***)&__p);
  }
}

void sub_1955FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  *(void *)(v22 - 88) = &a9;
  sub_1915D14((void ***)(v22 - 88));
  a9 = (void **)&a22;
  sub_19562BC(&a9);
  a9 = (void **)(v22 - 112);
  sub_1898078(&a9);
  _Unwind_Resume(a1);
}

BOOL sub_1956048(void *a1)
{
  uint64_t v1 = a1[1];
  if (*a1 == v1) {
    return 0;
  }
  uint64_t v2 = *a1 + 72;
  do
  {
    uint64_t v3 = sub_1A29A08((unsigned int *)(v2 - 48));
    BOOL result = v3 != 0;
    if (v3) {
      break;
    }
    BOOL v5 = v2 == v1;
    v2 += 72;
  }
  while (!v5);
  return result;
}

uint64_t sub_19560A4(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  long long v5 = *(long long *)((char *)a2 + 24);
  long long v6 = *(long long *)((char *)a2 + 40);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(_OWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 24) = v5;
  sub_1A29560((char *)a2 + 24, 0);
  long long v7 = a2[4];
  long long v8 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v7;
  *(_OWORD *)(a1 + 80) = v8;
  sub_1A29560(a2 + 4, 0);
  return a1;
}

uint64_t *sub_195612C(uint64_t *result, void *a2)
{
  uint64_t v3 = result;
  long long v5 = (long long *)*result;
  long long v4 = (long long *)result[1];
  uint64_t v6 = a2[1];
  while (v4 != v5)
  {
    v6 -= 104;
    long long v4 = (long long *)((char *)v4 - 104);
    BOOL result = (uint64_t *)sub_19560A4(v6, v4);
  }
  a2[1] = v6;
  uint64_t v7 = *v3;
  *uint64_t v3 = v6;
  a2[1] = v7;
  uint64_t v8 = v3[1];
  v3[1] = a2[2];
  a2[2] = v8;
  uint64_t v9 = v3[2];
  v3[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

void *sub_19561C0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x276276276276277) {
    sub_188D718();
  }
  return operator new(104 * a2);
}

void sub_195620C(uint64_t a1)
{
  sub_1A29AB8(a1 + 64);
  sub_1A29AB8(a1 + 24);
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

uint64_t sub_195626C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 104;
    sub_195620C(i - 104);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_19562BC(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    long long v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 104;
        sub_195620C(v4);
      }
      while ((void *)v4 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_1956340(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    BOOL result = sub_19563BC(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      BOOL result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_19563A0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_19563BC(void *a1, unint64_t a2)
{
  if (a2 >= 0x1555555555555556) {
    sub_2E00();
  }
  BOOL result = (char *)sub_1956410((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[12 * v4];
  return result;
}

void *sub_1956410(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x1555555555555556) {
    sub_188D718();
  }
  return operator new(12 * a2);
}

uint64_t sub_1956458(uint64_t a1, long long *a2, uint64_t a3, _OWORD *a4, _OWORD *a5, void *a6, int a7, char a8, uint64_t a9, int a10)
{
  *(_OWORD *)a1 = *a4;
  *(_OWORD *)(a1 + 16) = *a5;
  uint64_t v15 = a6[1];
  *(void *)(a1 + 32) = *a6;
  *(void *)(a1 + 40) = v15;
  if (v15) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v15 + 8), 1uLL, memory_order_relaxed);
  }
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200((unsigned char *)(a1 + 48), *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v16 = *a2;
    *(void *)(a1 + 64) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v16;
  }
  uint64_t v17 = *((void *)a2 + 3);
  *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 8);
  *(void *)(a1 + 72) = v17;
  if (*((char *)a2 + 63) < 0)
  {
    sub_4200((unsigned char *)(a1 + 88), *((void **)a2 + 5), *((void *)a2 + 6));
  }
  else
  {
    long long v18 = *(long long *)((char *)a2 + 40);
    *(void *)(a1 + 104) = *((void *)a2 + 7);
    *(_OWORD *)(a1 + 88) = v18;
  }
  *(_OWORD *)(a1 + 112) = a2[4];
  sub_1892544(a1 + 128, (uint64_t)(a2 + 5));
  __int16 v19 = *((_WORD *)a2 + 60);
  *(unsigned char *)(a1 + 170) = *((unsigned char *)a2 + 122);
  *(_WORD *)(a1 + 168) = v19;
  sub_1225DE4(a1 + 176, a3);
  *(_DWORD *)(a1 + 432) = 0;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_DWORD *)(a1 + 472) = 1065353216;
  *(unsigned char *)(a1 + 480) = 0;
  *(_DWORD *)(a1 + 496) = a7;
  sub_1742D0C(a1 + 512, 0, 0);
  *(unsigned char *)(a1 + 632) = 0;
  *(unsigned char *)(a1 + 648) = 0;
  *(unsigned char *)(a1 + 652) = a8;
  *(_DWORD *)(a1 + 660) = 0;
  sub_18F8D44(a1 + 664, a9);
  int v20 = 0;
  *(unsigned char *)(a1 + 688) = 0;
  *(unsigned char *)(a1 + 712) = 0;
  *(_OWORD *)(a1 + 720) = 0u;
  *(_OWORD *)(a1 + 736) = 0u;
  *(_DWORD *)(a1 + 752) = 1065353216;
  do
  {
    int v22 = v20;
    char v23 = &v22;
    sub_1956708(a1 + 440, &v22, (uint64_t)&unk_20F06E0, &v23)[3] = 0xBFF0000000000000;
    ++v20;
  }
  while (v20 != 26);
  sub_1CDE7A0(a1);
  sub_1CDE3E8(a1, a10);
  return a1;
}

void sub_1956650(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (*(char *)(v10 + 71) < 0) {
    operator delete(*v11);
  }
  uint64_t v13 = *(std::__shared_weak_count **)(v10 + 40);
  if (v13) {
    sub_20A69F0(v13);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1956708(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      uint64_t v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          uint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  uint64_t v11 = operator new(0x20uLL);
  *uint64_t v11 = 0;
  v11[1] = v7;
  *((_DWORD *)v11 + 4) = **a4;
  v11[3] = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_18925BC(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(void *)a1;
  int v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    *uint64_t v11 = *v20;
LABEL_38:
    *int v20 = v11;
    goto LABEL_39;
  }
  *uint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }
    else
    {
      v21 &= v8 - 1;
    }
    int v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_1956918(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_195692C(uint64_t a1, int a2, int a3, long long *a4)
{
  *(_DWORD *)a1 = a2;
  *(_DWORD *)(a1 + 4) = a3;
  if (*((char *)a4 + 23) < 0)
  {
    sub_4200((unsigned char *)(a1 + 8), *(void **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v6 = *a4;
    *(void *)(a1 + 24) = *((void *)a4 + 2);
    *(_OWORD *)(a1 + 8) = v6;
  }
  unint64_t v7 = (unsigned char *)(a1 + 32);
  if (*((char *)a4 + 23) < 0)
  {
    sub_4200(v7, *(void **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v8 = *a4;
    *(void *)(a1 + 48) = *((void *)a4 + 2);
    *(_OWORD *)unint64_t v7 = v8;
  }
  return a1;
}

void sub_19569B4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_19569D0(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t *a7, _DWORD *a8)
{
  *(_OWORD *)a1 = *a3;
  *(_DWORD *)(a1 + 24) = 0;
  float v13 = (long long *)(a5 + 8);
  sub_1956C2C(a1 + 32, a2, (long long *)(a5 + 8));
  *(void *)(a1 + 272) = *(void *)a5;
  if (*(char *)(a5 + 31) < 0)
  {
    sub_4200((unsigned char *)(a1 + 280), *(void **)(a5 + 8), *(void *)(a5 + 16));
  }
  else
  {
    long long v14 = *v13;
    *(void *)(a1 + 296) = *((void *)v13 + 2);
    *(_OWORD *)(a1 + 280) = v14;
  }
  BOOL v15 = (unsigned char *)(a1 + 304);
  if (*(char *)(a5 + 55) < 0)
  {
    sub_4200(v15, *(void **)(a5 + 32), *(void *)(a5 + 40));
  }
  else
  {
    long long v16 = *(_OWORD *)(a5 + 32);
    *(void *)(a1 + 320) = *(void *)(a5 + 48);
    *(_OWORD *)BOOL v15 = v16;
  }
  *(void *)(a1 + 472) = 0;
  *(void *)(a1 + 480) = 0;
  *(void *)(a1 + 440) = 0;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(void *)(a1 + 464) = a1 + 472;
  *(void *)(a1 + 488) = *a6;
  uint64_t v17 = a6[1];
  *(void *)(a1 + 496) = v17;
  if (v17) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v17 + 8), 1uLL, memory_order_relaxed);
  }
  *(_OWORD *)(a1 + 504) = 0uLL;
  *(_OWORD *)(a1 + 520) = 0uLL;
  *(_DWORD *)(a1 + 536) = 1065353216;
  *(void *)(a1 + 544) = 0;
  *(void *)(a1 + 560) = 0;
  *(void *)(a1 + 552) = 0;
  sub_8A6F8((char *)(a1 + 544), *a7, a7[1], 0xAAAAAAAAAAAAAAABLL * ((a7[1] - *a7) >> 3));
  int v18 = 0;
  *(unsigned char *)(a1 + 568) = 0;
  *(_DWORD *)(a1 + 572) = *a8;
  *(unsigned char *)(a1 + 576) = 0;
  *(unsigned char *)(a1 + 592) = 0;
  *(_OWORD *)(a1 + 600) = 0u;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_DWORD *)(a1 + 632) = 1065353216;
  *(_DWORD *)(a1 + 640) = 0;
  *(unsigned char *)(a1 + 644) = 0;
  *(void *)(a1 + 648) = 0;
  do
  {
    int v20 = v18;
    unint64_t v21 = &v20;
    sub_1956708(a1 + 504, &v20, (uint64_t)&unk_20F06E0, &v21)[3] = 0xBFF0000000000000;
    ++v18;
  }
  while (v18 != 26);
  sub_1CDE0B8(a1);
  return a1;
}

void sub_1956BB0(_Unwind_Exception *a1)
{
  if (*(char *)(v2 + 303) < 0) {
    operator delete(*v3);
  }
  sub_1892154(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1956C2C(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v5 = sub_1205CA4(a1, a2) + 216;
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200((unsigned char *)v5, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v6 = *a3;
    *(void *)(v5 + 16) = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v5 = v6;
  }
  return a1;
}

void sub_1956C80(_Unwind_Exception *a1)
{
  sub_1205E4C(v1);
  _Unwind_Resume(a1);
}

void sub_1956C94()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_26262A8, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_195DC74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_195FC80()
{
}

void sub_195FC8C()
{
}

void sub_195FC9C()
{
}

void sub_195FCA8()
{
}

void sub_195FCB8()
{
}

void sub_195FCC4()
{
}

void sub_195FCD4()
{
}

void sub_195FCE0()
{
}

void sub_195FCF0()
{
}

void sub_195FCFC()
{
}

void sub_195FD0C()
{
}

void sub_195FD18()
{
}

void sub_195FD28()
{
}

void sub_195FD34()
{
}

void sub_195FD44()
{
}

void sub_195FD50()
{
}

void sub_195FD60()
{
}

void sub_195FD6C()
{
}

void sub_195FD7C()
{
}

void sub_195FD88()
{
}

void sub_195FD98()
{
}

void sub_195FDA4()
{
}

void sub_195FDB4()
{
}

void sub_195FDC0()
{
}

void sub_195FDD0()
{
}

void sub_195FDDC()
{
}

void sub_195FDEC()
{
}

void sub_195FDF8()
{
}

void sub_195FE08()
{
}

void sub_195FE14()
{
}

void sub_195FE24()
{
}

void sub_195FE30()
{
}

void sub_195FE40()
{
}

void sub_195FE4C()
{
}

void sub_195FE5C()
{
}

void sub_195FE68()
{
}

void sub_195FE78()
{
}

void sub_195FE84()
{
}

void sub_195FE94()
{
}

void sub_195FEA0()
{
}

void sub_195FEB0()
{
}

void sub_195FEBC()
{
}

void sub_195FECC()
{
}

void sub_195FED8()
{
}

void sub_195FEE8()
{
}

void sub_195FEF4()
{
}

void sub_195FF04()
{
}

void sub_195FF10()
{
}

void sub_195FF20()
{
}

void sub_195FF2C()
{
}

void sub_195FF3C()
{
}

void sub_195FF48()
{
}

void sub_195FF58()
{
}

void sub_195FF64()
{
}

void sub_195FF74()
{
}

void sub_195FF80()
{
}

void sub_195FF90()
{
}

void sub_195FF9C()
{
}

void sub_195FFAC()
{
}

void sub_195FFB8()
{
}

void sub_195FFC8()
{
}

void sub_195FFD4()
{
}

void sub_195FFE4()
{
}

void sub_195FFF0()
{
}

void sub_1960000()
{
}

void sub_196000C()
{
}

void sub_196001C()
{
}

void sub_1960028()
{
}

void sub_1960038()
{
}

void sub_1960044()
{
}

void sub_1960054()
{
}

void sub_1960060()
{
}

void sub_1960070()
{
}

void sub_196007C()
{
}

void sub_196008C()
{
}

void sub_1960098()
{
}

void sub_19600A8()
{
}

void sub_19600B4()
{
}

void sub_19600C4()
{
}

void sub_19600D0()
{
}

void sub_19600E0()
{
}

void sub_19600EC()
{
}

void sub_19600FC()
{
}

void sub_1960108()
{
}

void sub_1960118()
{
}

void sub_1960124()
{
}

void sub_1960134()
{
}

void sub_1960140()
{
}

void sub_1960150()
{
}

void sub_196015C()
{
}

void sub_196016C()
{
}

void sub_1960178()
{
}

void sub_1960188()
{
}

void sub_1960194()
{
}

void sub_19601A4()
{
}

void sub_19601B0()
{
}

void sub_19601C0()
{
}

void sub_19601CC()
{
}

void sub_19601DC()
{
}

void sub_19601E8()
{
}

void sub_19601F8()
{
}

void sub_1960204()
{
}

void sub_1960214()
{
}

void sub_1960220()
{
}

void sub_1960230()
{
}

void sub_196023C()
{
}

void sub_196024C()
{
}

void sub_1960258()
{
}

void sub_1960268()
{
}

void sub_1960274()
{
}

void sub_1960284()
{
}

void sub_1960290()
{
}

void sub_19602A0()
{
}

void sub_19602AC()
{
}

void sub_19602BC()
{
}

void sub_19602C8()
{
}

void sub_19602D8()
{
}

void sub_19602E4()
{
}

void sub_19602F4()
{
}

void sub_1960300()
{
}

void sub_1960310()
{
}

void sub_196031C()
{
}

void sub_196032C()
{
}

void sub_1960338()
{
}

void sub_1960348()
{
}

void sub_1960354()
{
}

void sub_1960364()
{
}

void sub_1960370()
{
}

void sub_1960380()
{
}

void sub_196038C()
{
}

void sub_196039C()
{
}

void sub_19603A8()
{
}

void sub_19603B8()
{
}

void sub_19603C4()
{
}

void sub_19603D4()
{
}

void sub_19603E0()
{
}

void sub_19603F0()
{
}

void sub_19603FC()
{
}

void sub_196040C()
{
}

void sub_1960418()
{
}

void sub_1960428()
{
}

void sub_1960434()
{
}

void sub_1960444()
{
}

void sub_1960450()
{
}

void sub_1960460()
{
}

void sub_196046C()
{
}

void sub_196047C()
{
}

void sub_1960488()
{
}

void sub_1960498()
{
}

void sub_19604A4()
{
}

void sub_19604B4()
{
}

void sub_19604C0()
{
}

void sub_19604D0()
{
}

void sub_19604DC()
{
}

void sub_19604EC()
{
}

void sub_19604F8()
{
}

void sub_1960508()
{
}

void sub_1960514()
{
}

void sub_1960524()
{
}

void sub_1960530()
{
}

void sub_1960540()
{
}

void sub_196054C()
{
}

void sub_196055C()
{
}

void sub_1960568()
{
}

void sub_1960578()
{
}

void sub_1960584()
{
}

void sub_1960594()
{
}

void sub_19605A0()
{
}

void sub_19605B0()
{
}

void sub_19605BC()
{
}

void sub_19605CC()
{
}

void sub_19605D8()
{
}

void sub_19605E8()
{
}

void sub_19605F4()
{
}

void sub_1960604()
{
}

void sub_1960610()
{
}

void sub_1960620()
{
}

void sub_196062C()
{
}

void sub_196063C()
{
}

void sub_1960648()
{
}

void sub_1960658()
{
}

void sub_1960664()
{
}

void sub_1960674()
{
}

void sub_1960680()
{
}

void sub_1960690()
{
}

void sub_196069C()
{
}

void sub_19606AC()
{
}

void sub_19606B8()
{
}

void sub_19606C8()
{
}

void sub_19606D4()
{
}

void sub_19606E4()
{
}

void sub_19606F0()
{
}

void sub_1960700()
{
}

void sub_196070C()
{
}

void sub_196071C()
{
}

void sub_1960728()
{
}

void sub_1960738()
{
}

void sub_1960744()
{
}

void sub_1960754()
{
}

void sub_1960760()
{
}

void sub_1960770()
{
}

void sub_196077C()
{
}

void sub_196078C()
{
}

void sub_1960798()
{
}

void sub_19607A8()
{
}

void sub_19607B4()
{
}

void sub_19607C4()
{
}

void sub_19607D0()
{
}

void sub_19607E0()
{
}

void sub_19607EC()
{
}

void sub_19607FC()
{
}

void sub_1960808()
{
}

void sub_1960818()
{
}

void sub_1960824()
{
}

void sub_1960834()
{
}

void sub_1960840()
{
}

void sub_1960850()
{
}

void sub_196085C()
{
}

void sub_196086C()
{
}

void sub_1960878()
{
}

void sub_1960888()
{
}

void sub_1960894()
{
}

void sub_19608A4()
{
}

void sub_19608B0()
{
}

void sub_19608C0()
{
}

void sub_19608CC()
{
}

void sub_19608DC()
{
}

void sub_19608E8()
{
}

void sub_19608F8()
{
}

void sub_1960904()
{
}

void sub_1960914()
{
}

void sub_1960920()
{
}

void sub_1960930()
{
}

void sub_196093C()
{
}

void sub_196094C()
{
}

void sub_1960958()
{
}

void sub_1960968()
{
}

void sub_1960974()
{
}

void sub_1960984()
{
}

void sub_1960990()
{
}

void sub_19609A0()
{
}

void sub_19609AC()
{
}

void sub_19609BC()
{
}

void sub_19609C8()
{
}

void sub_19609D8()
{
}

void sub_19609E4()
{
}

void sub_19609F4()
{
}

void sub_1960A00()
{
}

void sub_1960A10()
{
}

void sub_1960A1C()
{
}

void sub_1960A2C()
{
}

void sub_1960A38()
{
}

void sub_1960A48()
{
}

void sub_1960A54()
{
}

void sub_1960A64()
{
}

void sub_1960A70()
{
}

void sub_1960A80()
{
}

void sub_1960A8C()
{
}

void sub_1960A9C()
{
}

void sub_1960AA8()
{
}

void sub_1960AB8()
{
}

void sub_1960AC4()
{
}

void sub_1960AD4()
{
}

void sub_1960AE0()
{
}

void sub_1960AF0()
{
}

void sub_1960AFC()
{
}

void sub_1960B0C()
{
}

void sub_1960B18()
{
}

void sub_1960B28()
{
}

void sub_1960B34()
{
}

void sub_1960B44()
{
}

void sub_1960B50()
{
}

void sub_1960B60()
{
}

void sub_1960B6C()
{
}

void sub_1960B7C()
{
}

void sub_1960B88()
{
}

void sub_1960B98()
{
}

void sub_1960BA4()
{
}

void sub_1960BB4()
{
}

void sub_1960BC0()
{
}

void sub_1960BCC()
{
}

void sub_1960BD8()
{
}

void sub_1960BE4()
{
}

void sub_1960BF4()
{
}

void sub_1960C00()
{
}

void sub_1960C10()
{
}

void sub_1960C1C()
{
}

void sub_1960C2C()
{
}

void sub_1960C38()
{
}

void sub_1960C48()
{
}

void sub_1960C54()
{
}

void sub_1960C64()
{
}

void sub_1960C70()
{
}

void sub_1960C80()
{
}

void sub_1960C8C()
{
}

void sub_1960C9C()
{
}

void sub_1960CA8()
{
}

void sub_1960CB8()
{
}

void sub_1960CC4()
{
}

void sub_1960CD4()
{
}

void sub_1960CE0()
{
}

void sub_1960CF0()
{
}

void sub_1960CFC()
{
}

void sub_1960D0C()
{
}

void sub_1960D18()
{
}

void sub_1960D28()
{
}

void sub_1960D34()
{
}

void sub_1960D44()
{
}

void sub_1960D50()
{
}

void sub_1960D60()
{
}

void sub_1960D6C()
{
}

void sub_1960D7C()
{
}

void sub_1960D88()
{
}

void sub_1960D98()
{
}

void sub_1960DA4()
{
}

void sub_1960DB4()
{
}

void sub_1960DC0()
{
}

void sub_1960DD0()
{
}

void sub_1960DDC()
{
}

void sub_1960DEC()
{
}

void sub_1960DF8()
{
}

void sub_1960E08()
{
}

void sub_1960E14()
{
}

void sub_1960E24()
{
}

void sub_1960E30()
{
}

void sub_1960E40()
{
}

void sub_1960E4C()
{
}

void sub_1960E5C()
{
}

void sub_1960E68()
{
}

void sub_1960E78()
{
}

void sub_1960E84()
{
}

void sub_1960E94()
{
}

void sub_1960EA0()
{
}

void sub_1960EB0()
{
}

void sub_1960EBC()
{
}

void sub_1960ECC()
{
}

void sub_1960ED8()
{
}

void sub_1960EE8()
{
}

void sub_1960EF4()
{
}

void sub_1960F04()
{
}

void sub_1960F10()
{
}

void sub_1960F20()
{
}

void sub_1960F2C()
{
}

void sub_1960F3C()
{
}

void sub_1960F48()
{
}

void sub_1960F58()
{
}

void sub_1960F64()
{
}

void sub_1960F74()
{
}

void sub_1960F80()
{
}

void sub_1960F90()
{
}

void sub_1960F9C()
{
}

void sub_1960FAC()
{
}

void sub_1960FB8()
{
}

void sub_1960FC8()
{
}

void sub_1960FD4()
{
}

void sub_1960FE4()
{
}

void sub_1960FF0()
{
}

void sub_1961000()
{
}

void sub_196100C()
{
}

void sub_196101C()
{
}

void sub_1961028()
{
}

void sub_1961038()
{
}

void sub_1961044()
{
}

void sub_1961054()
{
}

void sub_1961060()
{
}

void sub_1961070()
{
}

void sub_196107C()
{
}

void sub_196108C()
{
}

void sub_1961098()
{
}

void sub_19610A8()
{
}

void sub_19610B4()
{
}

void sub_19610C4()
{
}

void sub_19610D0()
{
}

void sub_19610E0()
{
}

void sub_19610EC()
{
}

void sub_19610FC()
{
}

void sub_1961108()
{
}

void sub_1961118()
{
}

void sub_1961124()
{
}

void sub_1961134()
{
}

void sub_1961140()
{
}

void sub_1961150()
{
}

void sub_196115C()
{
}

void sub_196116C()
{
}

void sub_1961178()
{
}

void sub_1961188()
{
}

void sub_1961194()
{
}

void sub_19611A4()
{
}

void sub_19611B0()
{
}

void sub_19611C0()
{
}

void sub_19611CC()
{
}

void sub_19611DC()
{
}

void sub_19611E8()
{
}

void sub_19611F8()
{
}

void sub_1961204()
{
}

void sub_1961214()
{
}

void sub_1961220()
{
}

void sub_1961230()
{
}

void sub_196123C()
{
}

void sub_196124C()
{
}

void sub_1961258()
{
}

void sub_1961268()
{
}

void sub_1961274()
{
}

void sub_1961284()
{
}

void sub_1961290()
{
}

void sub_19612A0()
{
}

void sub_19612AC()
{
}

void sub_19612BC()
{
}

void sub_19612C8()
{
}

void sub_19612D8()
{
}

void sub_19612E4()
{
}

void sub_19612F4()
{
}

void sub_1961300()
{
}

void sub_1961310()
{
}

void sub_196131C()
{
}

void sub_196132C()
{
}

void sub_1961338()
{
}

void sub_1961348()
{
}

void sub_1961354()
{
}

void sub_1961364()
{
}

void sub_1961370()
{
}

void sub_1961380()
{
}

void sub_196138C()
{
}

void sub_196139C()
{
}

void sub_19613A8()
{
}

void sub_19613B8()
{
}

void sub_19613C4()
{
}

void sub_19613D4()
{
}

void sub_19613E0()
{
}

void sub_19613F0()
{
}

void sub_19613FC()
{
}

void sub_196140C()
{
}

void sub_1961418()
{
}

void sub_1961428()
{
}

void sub_1961434()
{
}

void sub_1961444()
{
}

void sub_1961450()
{
}

void sub_1961460()
{
}

void sub_196146C()
{
}

void sub_196147C()
{
}

void sub_1961488()
{
}

void sub_1961498()
{
}

void sub_19614A4()
{
}

void sub_19614B4()
{
}

void sub_19614C0()
{
}

void sub_19614D0()
{
}

void sub_19614DC()
{
}

void sub_19614EC()
{
}

void sub_19614F8()
{
}

void sub_1961508()
{
}

void sub_1961514()
{
}

void sub_1961524()
{
}

void sub_1961530()
{
}

void sub_1961540()
{
}

void sub_196154C()
{
}

void sub_196155C()
{
}

void sub_1961568()
{
}

void sub_1961578()
{
}

void sub_1961584()
{
}

void sub_1961594()
{
}

void sub_19615A0()
{
}

void sub_19615B0()
{
}

void sub_19615BC()
{
}

void sub_19615CC()
{
}

void sub_19615D8()
{
}

void sub_19615E8()
{
}

void sub_19615F4()
{
}

void sub_1961604()
{
}

void sub_1961610()
{
}

void sub_1961620()
{
}

void sub_196162C()
{
}

void sub_196163C()
{
}

void sub_1961648()
{
}

void sub_1961658()
{
}

void sub_1961664()
{
}

void sub_1961674()
{
}

void sub_1961680()
{
}

void sub_1961690()
{
}

void sub_196169C()
{
}

void sub_19616AC()
{
}

void sub_19616B8()
{
}

void sub_19616C8()
{
}

void sub_19616D4()
{
}

void sub_19616E4()
{
}

void sub_19616F0()
{
}

void sub_1961700()
{
}

void sub_196170C()
{
}

void sub_1961718()
{
}

void sub_196172C()
{
}

void sub_1961740()
{
}

void sub_1961748()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DBE0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DBE0))
  {
    sub_5E5C(&v1, "-");
    sub_5E5C(v2, "−");
    sub_5E5C(v3, "ー");
    sub_5E5C(v4, "丁目");
    qword_254DBC8 = 0;
    qword_254DBD0 = 0;
    qword_254DBD8 = 0;
    qword_254DBC8 = (uint64_t)operator new(0x60uLL);
    qword_254DBD0 = qword_254DBC8;
    qword_254DBD8 = qword_254DBC8 + 96;
    uint64_t v0 = 0;
    qword_254DBD0 = (uint64_t)sub_18914E4((uint64_t)&qword_254DBD8, &v1, &v5, (char *)qword_254DBC8);
    do
    {
      if (SHIBYTE(v4[v0 + 2]) < 0) {
        operator delete((void *)v4[v0]);
      }
      v0 -= 3;
    }
    while (v0 != -12);
    __cxa_guard_release(&qword_254DBE0);
  }
}

void sub_1961894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12)
{
  qword_254DBD0 = v12;
  sub_1891624(&a10);
  uint64_t v14 = 0;
  while (1)
  {
    if (*(&a12 + v14 + 95) < 0) {
      operator delete(*(void **)(&a12 + v14 + 72));
    }
    v14 -= 24;
    if (v14 == -96)
    {
      __cxa_guard_abort(&qword_254DBE0);
      _Unwind_Resume(a1);
    }
  }
}

void sub_196191C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DC00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DC00))
  {
    sub_5E5C(&v1, "-");
    sub_5E5C(v2, "−");
    sub_5E5C(v3, "ー");
    sub_5E5C(v4, "番地");
    sub_5E5C(v5, "番");
    sub_5E5C(v6, "番地の");
    sub_5E5C(v7, "番の");
    sub_5E5C(v8, "の");
    qword_254DBE8 = 0;
    qword_254DBF0 = 0;
    qword_254DBF8 = 0;
    qword_254DBE8 = (uint64_t)operator new(0xC0uLL);
    qword_254DBF0 = qword_254DBE8;
    qword_254DBF8 = qword_254DBE8 + 192;
    uint64_t v0 = 0;
    qword_254DBF0 = (uint64_t)sub_18914E4((uint64_t)&qword_254DBF8, &v1, &v9, (char *)qword_254DBE8);
    do
    {
      if (SHIBYTE(v8[v0 + 2]) < 0) {
        operator delete((void *)v8[v0]);
      }
      v0 -= 3;
    }
    while (v0 != -24);
    __cxa_guard_release(&qword_254DC00);
  }
}

void sub_1961AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12)
{
  uint64_t v13 = v12;
  qword_254DBF0 = v13;
  sub_1891624(&a10);
  uint64_t v15 = 0;
  while (1)
  {
    if (*(&a12 + v15 + 191) < 0) {
      operator delete(*(void **)(&a12 + v15 + 168));
    }
    v15 -= 24;
    if (v15 == -192)
    {
      __cxa_guard_abort(&qword_254DC00);
      _Unwind_Resume(a1);
    }
  }
}

void sub_1961B4C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DC20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DC20))
  {
    sub_5E5C(__p, "号");
    qword_254DC08 = 0;
    qword_254DC10 = 0;
    qword_254DC18 = 0;
    qword_254DC08 = (uint64_t)operator new(0x18uLL);
    qword_254DC10 = qword_254DC08;
    qword_254DC18 = qword_254DC08 + 24;
    qword_254DC10 = (uint64_t)sub_18914E4((uint64_t)&qword_254DC18, (long long *)__p, &v2, (char *)qword_254DC08);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_guard_release(&qword_254DC20);
  }
}

void sub_1961C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  qword_254DC10 = v16;
  sub_1891624((void ***)&a9);
  if (a16 < 0) {
    operator delete(__p);
  }
  __cxa_guard_abort(&qword_254DC20);
  _Unwind_Resume(a1);
}

void sub_1961C80()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DC40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DC40))
  {
    sub_5E5C(&v1, "號");
    sub_5E5C(v2, "号");
    qword_254DC28 = 0;
    qword_254DC30 = 0;
    qword_254DC38 = 0;
    qword_254DC28 = (uint64_t)operator new(0x30uLL);
    qword_254DC30 = qword_254DC28;
    qword_254DC38 = qword_254DC28 + 48;
    uint64_t v0 = 0;
    qword_254DC30 = (uint64_t)sub_18914E4((uint64_t)&qword_254DC38, &v1, &v3, (char *)qword_254DC28);
    do
    {
      if (SHIBYTE(v2[v0 + 2]) < 0) {
        operator delete((void *)v2[v0]);
      }
      v0 -= 3;
    }
    while (v0 != -6);
    __cxa_guard_release(&qword_254DC40);
  }
}

void sub_1961D9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  qword_254DC30 = v23;
  sub_1891624(&a10);
  uint64_t v25 = 0;
  while (1)
  {
    if (*(&a23 + v25) < 0) {
      operator delete(*(void **)((char *)&a18 + v25));
    }
    v25 -= 24;
    if (v25 == -48)
    {
      __cxa_guard_abort(&qword_254DC40);
      _Unwind_Resume(a1);
    }
  }
}

void sub_1961E14()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DC60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DC60))
  {
    sub_5E5C(&v1, "-");
    sub_5E5C(v2, "−");
    sub_5E5C(v3, "ー");
    sub_5E5C(v4, "之");
    sub_5E5C(v5, "至");
    qword_254DC48 = 0;
    qword_254DC50 = 0;
    qword_254DC58 = 0;
    qword_254DC48 = (uint64_t)operator new(0x78uLL);
    qword_254DC50 = qword_254DC48;
    qword_254DC58 = qword_254DC48 + 120;
    uint64_t v0 = 0;
    qword_254DC50 = (uint64_t)sub_18914E4((uint64_t)&qword_254DC58, &v1, &v6, (char *)qword_254DC48);
    do
    {
      if (SHIBYTE(v5[v0 + 2]) < 0) {
        operator delete((void *)v5[v0]);
      }
      v0 -= 3;
    }
    while (v0 != -15);
    __cxa_guard_release(&qword_254DC60);
  }
}

void sub_1961F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9, uint64_t a10, char a11)
{
  qword_254DC50 = v11;
  sub_1891624(&a9);
  uint64_t v13 = 0;
  while (1)
  {
    if (*(&a11 + v13 + 119) < 0) {
      operator delete(*(void **)(&a11 + v13 + 96));
    }
    v13 -= 24;
    if (v13 == -120)
    {
      __cxa_guard_abort(&qword_254DC60);
      _Unwind_Resume(a1);
    }
  }
}

void sub_1962000()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2626260 = 0;
  qword_2626268 = 0;
  qword_2626270 = 0;
  qword_2626260 = (uint64_t)operator new(0x18uLL);
  qword_2626268 = qword_2626260;
  qword_2626270 = qword_2626260 + 24;
  qword_2626268 = (uint64_t)sub_18914E4((uint64_t)&qword_2626270, (long long *)__p, v4, (char *)qword_2626260);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2626278 = 0;
  qword_2626280 = 0;
  qword_2626288 = 0;
  qword_2626278 = (uint64_t)operator new(0x18uLL);
  qword_2626280 = qword_2626278;
  qword_2626288 = qword_2626278 + 24;
  qword_2626280 = (uint64_t)sub_18914E4((uint64_t)&qword_2626288, (long long *)__p, v4, (char *)qword_2626278);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2626290 = 0;
  qword_2626298 = 0;
  qword_26262A0 = 0;
  qword_2626290 = (uint64_t)operator new(0x18uLL);
  qword_2626298 = qword_2626290;
  qword_26262A0 = qword_2626290 + 24;
  qword_2626298 = (uint64_t)sub_18914E4((uint64_t)&qword_26262A0, (long long *)__p, v4, (char *)qword_2626290);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_1956C94();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_26262C0, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_26262E8, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_19626BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

std::string *sub_196286C(std::string *a1, uint64_t a2)
{
  int v4 = sub_5E5C(a1, "en");
  *(_OWORD *)(v4 + 3) = 0u;
  int v5 = (char **)(v4 + 3);
  *(_OWORD *)(v4 + 9) = 0u;
  long long v6 = (char **)(v4 + 9);
  v4[11] = 0;
  int v7 = (char **)(v4 + 6);
  *(_OWORD *)(v4 + 5) = 0u;
  *(_OWORD *)(v4 + 7) = 0u;
  long long v32 = (std::string *)(v4 + 12);
  sub_5E5C(v4 + 12, "");
  sub_5E5C(a1[5].__r_.__value_.__r.__words, "");
  sub_5E5C(a1[6].__r_.__value_.__r.__words, "");
  if (*(void *)(a2 + 184)) {
    char v8 = *(uint64_t (****)())(a2 + 184);
  }
  else {
    char v8 = &off_254D3B0;
  }
  sub_182B184((uint64_t)v33, (uint64_t)v8);
  uint64_t v9 = *(unsigned int *)(a2 + 56);
  if ((int)v9 < 1)
  {
    if ((v34 & 2) != 0)
    {
      uint64_t v16 = (long long *)(v36 & 0xFFFFFFFFFFFFFFFELL);
      std::string::size_type size = a1[1].__r_.__value_.__l.__size_;
      if (size >= a1[1].__r_.__value_.__r.__words[2])
      {
        uint64_t v17 = sub_1D740(v5, (uint64_t)v16);
        goto LABEL_22;
      }
      sub_1962E70(v5, v16);
    }
    else
    {
      std::string::size_type size = a1[1].__r_.__value_.__l.__size_;
      if (size >= a1[1].__r_.__value_.__r.__words[2])
      {
        uint64_t v17 = sub_1D740(v5, (uint64_t)a1);
        goto LABEL_22;
      }
      sub_1962E70(v5, (long long *)a1);
    }
    uint64_t v17 = (char *)(size + 24);
LABEL_22:
    a1[1].__r_.__value_.__l.__size_ = (std::string::size_type)v17;
    goto LABEL_23;
  }
  uint64_t v10 = *(void *)(a2 + 64);
  if (v10) {
    int v11 = (long long **)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  uint64_t v12 = (char *)a1[1].__r_.__value_.__l.__size_;
  uint64_t v13 = 8 * v9;
  do
  {
    uint64_t v14 = *v11;
    if ((unint64_t)v12 >= a1[1].__r_.__value_.__r.__words[2])
    {
      uint64_t v12 = sub_1D740(v5, (uint64_t)v14);
    }
    else
    {
      sub_1962E70(v5, v14);
      v12 += 24;
    }
    a1[1].__r_.__value_.__l.__size_ = (std::string::size_type)v12;
    ++v11;
    v13 -= 8;
  }
  while (v13);
LABEL_23:
  uint64_t v18 = *(unsigned int *)(a2 + 80);
  if ((int)v18 < 1)
  {
    data = (long long *)a1[1].__r_.__value_.__l.__data_;
    if ((long long *)a1[1].__r_.__value_.__l.__size_ == data) {
      sub_66748();
    }
    std::string::size_type v25 = a1[2].__r_.__value_.__l.__size_;
    if (v25 >= a1[2].__r_.__value_.__r.__words[2])
    {
      char v26 = sub_1D740(v7, (uint64_t)data);
    }
    else
    {
      sub_1962E70(v7, data);
      char v26 = (char *)(v25 + 24);
    }
    a1[2].__r_.__value_.__l.__size_ = (std::string::size_type)v26;
  }
  else
  {
    uint64_t v19 = *(void *)(a2 + 88);
    if (v19) {
      long long v20 = (long long **)(v19 + 8);
    }
    else {
      long long v20 = 0;
    }
    int v21 = (char *)a1[2].__r_.__value_.__l.__size_;
    uint64_t v22 = 8 * v18;
    do
    {
      int v23 = *v20;
      if ((unint64_t)v21 >= a1[2].__r_.__value_.__r.__words[2])
      {
        int v21 = sub_1D740(v7, (uint64_t)v23);
      }
      else
      {
        sub_1962E70(v7, v23);
        v21 += 24;
      }
      a1[2].__r_.__value_.__l.__size_ = (std::string::size_type)v21;
      ++v20;
      v22 -= 8;
    }
    while (v22);
  }
  if ((v34 & 4) != 0)
  {
    char v28 = (long long *)(v37 & 0xFFFFFFFFFFFFFFFELL);
    std::string::size_type v27 = a1[3].__r_.__value_.__l.__size_;
    if (v27 < a1[3].__r_.__value_.__r.__words[2])
    {
      sub_1962E70(v6, v28);
      goto LABEL_43;
    }
    int v29 = sub_1D740(v6, (uint64_t)v28);
  }
  else
  {
    std::string::size_type v27 = a1[3].__r_.__value_.__l.__size_;
    if (v27 < a1[3].__r_.__value_.__r.__words[2])
    {
      sub_1962E70(v6, (long long *)a1);
LABEL_43:
      int v29 = (char *)(v27 + 24);
      goto LABEL_46;
    }
    int v29 = sub_1D740(v6, (uint64_t)a1);
  }
LABEL_46:
  a1[3].__r_.__value_.__l.__size_ = (std::string::size_type)v29;
  char v30 = v34;
  if ((v34 & 0x80) != 0)
  {
    std::string::operator=(v32, (const std::string *)(v39 & 0xFFFFFFFFFFFFFFFELL));
    char v30 = v34;
  }
  if (v30)
  {
    std::string::operator=(a1 + 5, (const std::string *)(v35 & 0xFFFFFFFFFFFFFFFELL));
    char v30 = v34;
  }
  if ((v30 & 0x20) != 0) {
    std::string::operator=(a1 + 6, (const std::string *)(v38 & 0xFFFFFFFFFFFFFFFELL));
  }
  sub_184DD50(v33);
  return a1;
}

void sub_1962B60(_Unwind_Exception *a1, void **a2, ...)
{
  va_start(va, a2);
  if (*(char *)(v2 + 167) < 0) {
    operator delete(*v4);
  }
  if (*(char *)(v2 + 143) < 0) {
    operator delete(*v3);
  }
  if (*(char *)(v2 + 119) < 0) {
    operator delete(*a2);
  }
  sub_1891624((void ***)va);
  sub_1891624((void ***)va);
  sub_1891624((void ***)va);
  if (*(char *)(v2 + 23) < 0) {
    operator delete(*(void **)v2);
  }
  _Unwind_Resume(a1);
}

void *sub_1962C08@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = (long long *)result[3];
  if ((long long *)result[4] == v2)
  {
    if ((*((char *)result + 23) & 0x80000000) == 0)
    {
      *(_OWORD *)a2 = *(_OWORD *)result;
      *(void *)(a2 + 16) = result[2];
      return result;
    }
    int v4 = (void *)*result;
    unint64_t v5 = result[1];
  }
  else
  {
    if ((*((char *)v2 + 23) & 0x80000000) == 0)
    {
      long long v3 = *v2;
      *(void *)(a2 + 16) = *((void *)v2 + 2);
      *(_OWORD *)a2 = v3;
      return result;
    }
    int v4 = *(void **)v2;
    unint64_t v5 = *((void *)v2 + 1);
  }
  return sub_4200((unsigned char *)a2, v4, v5);
}

uint64_t sub_1962C60(uint64_t a1)
{
  return a1 + 72;
}

double sub_1962C68@<D0>(uint64_t a1@<X0>, long long **a2@<X1>, std::string *a3@<X8>)
{
  if (*(char *)(a1 + 23) < 0) {
    sub_4200(&__dst, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __dst = *(std::string *)a1;
  }
  long long v6 = *a2;
  unint64_t v5 = a2[1];
  while (v6 != v5)
  {
    if (*((char *)v6 + 23) < 0)
    {
      sub_4200(&__p, *(void **)v6, *((void *)v6 + 1));
    }
    else
    {
      long long v7 = *v6;
      __p.__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v7;
    }
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      std::string::operator=(&__dst, &__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      break;
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    long long v6 = (long long *)((char *)v6 + 24);
  }
  sub_5E5C(&__p, "yue-hant");
  int v9 = sub_2070218((long long *)&__dst, (long long *)&__p);
  int v10 = v9;
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (v9) {
      goto LABEL_19;
    }
LABEL_22:
    double result = *(double *)&__dst.__r_.__value_.__l.__data_;
    *a3 = __dst;
    return result;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if (!v10) {
    goto LABEL_22;
  }
LABEL_19:
  sub_5E5C(a3, "zh-hant");
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return result;
}

void sub_1962DAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1962DEC@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[119] < 0) {
    return (char *)sub_4200((unsigned char *)a2, *((void **)result + 12), *((void *)result + 13));
  }
  *(_OWORD *)a2 = *((_OWORD *)result + 6);
  *(void *)(a2 + 16) = *((void *)result + 14);
  return result;
}

char *sub_1962E18@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[143] < 0) {
    return (char *)sub_4200((unsigned char *)a2, *((void **)result + 15), *((void *)result + 16));
  }
  *(_OWORD *)a2 = *(_OWORD *)(result + 120);
  *(void *)(a2 + 16) = *((void *)result + 17);
  return result;
}

char *sub_1962E44@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[167] < 0) {
    return (char *)sub_4200((unsigned char *)a2, *((void **)result + 18), *((void *)result + 19));
  }
  *(_OWORD *)a2 = *((_OWORD *)result + 9);
  *(void *)(a2 + 16) = *((void *)result + 20);
  return result;
}

void *sub_1962E70(void *result, long long *a2)
{
  uint64_t v2 = result;
  uint64_t v3 = result[1];
  if (*((char *)a2 + 23) < 0)
  {
    double result = sub_4200((unsigned char *)result[1], *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *(void *)(v3 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v3 = v4;
  }
  v2[1] = v3 + 24;
  return result;
}

void sub_1962EC8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1962ED0()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2626358, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1969EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_196BEBC()
{
}

void sub_196BEC8()
{
}

void sub_196BED8()
{
}

void sub_196BEE4()
{
}

void sub_196BEF4()
{
}

void sub_196BF00()
{
}

void sub_196BF10()
{
}

void sub_196BF1C()
{
}

void sub_196BF2C()
{
}

void sub_196BF38()
{
}

void sub_196BF48()
{
}

void sub_196BF54()
{
}

void sub_196BF64()
{
}

void sub_196BF70()
{
}

void sub_196BF80()
{
}

void sub_196BF8C()
{
}

void sub_196BF9C()
{
}

void sub_196BFA8()
{
}

void sub_196BFB8()
{
}

void sub_196BFC4()
{
}

void sub_196BFD4()
{
}

void sub_196BFE0()
{
}

void sub_196BFF0()
{
}

void sub_196BFFC()
{
}

void sub_196C00C()
{
}

void sub_196C018()
{
}

void sub_196C028()
{
}

void sub_196C034()
{
}

void sub_196C044()
{
}

void sub_196C050()
{
}

void sub_196C060()
{
}

void sub_196C06C()
{
}

void sub_196C07C()
{
}

void sub_196C088()
{
}

void sub_196C098()
{
}

void sub_196C0A4()
{
}

void sub_196C0B4()
{
}

void sub_196C0C0()
{
}

void sub_196C0D0()
{
}

void sub_196C0DC()
{
}

void sub_196C0EC()
{
}

void sub_196C0F8()
{
}

void sub_196C108()
{
}

void sub_196C114()
{
}

void sub_196C124()
{
}

void sub_196C130()
{
}

void sub_196C140()
{
}

void sub_196C14C()
{
}

void sub_196C15C()
{
}

void sub_196C168()
{
}

void sub_196C178()
{
}

void sub_196C184()
{
}

void sub_196C194()
{
}

void sub_196C1A0()
{
}

void sub_196C1B0()
{
}

void sub_196C1BC()
{
}

void sub_196C1CC()
{
}

void sub_196C1D8()
{
}

void sub_196C1E8()
{
}

void sub_196C1F4()
{
}

void sub_196C204()
{
}

void sub_196C210()
{
}

void sub_196C220()
{
}

void sub_196C22C()
{
}

void sub_196C23C()
{
}

void sub_196C248()
{
}

void sub_196C258()
{
}

void sub_196C264()
{
}

void sub_196C274()
{
}

void sub_196C280()
{
}

void sub_196C290()
{
}

void sub_196C29C()
{
}

void sub_196C2AC()
{
}

void sub_196C2B8()
{
}

void sub_196C2C8()
{
}

void sub_196C2D4()
{
}

void sub_196C2E4()
{
}

void sub_196C2F0()
{
}

void sub_196C300()
{
}

void sub_196C30C()
{
}

void sub_196C31C()
{
}

void sub_196C328()
{
}

void sub_196C338()
{
}

void sub_196C344()
{
}

void sub_196C354()
{
}

void sub_196C360()
{
}

void sub_196C370()
{
}

void sub_196C37C()
{
}

void sub_196C38C()
{
}

void sub_196C398()
{
}

void sub_196C3A8()
{
}

void sub_196C3B4()
{
}

void sub_196C3C4()
{
}

void sub_196C3D0()
{
}

void sub_196C3E0()
{
}

void sub_196C3EC()
{
}

void sub_196C3FC()
{
}

void sub_196C408()
{
}

void sub_196C418()
{
}

void sub_196C424()
{
}

void sub_196C434()
{
}

void sub_196C440()
{
}

void sub_196C450()
{
}

void sub_196C45C()
{
}

void sub_196C46C()
{
}

void sub_196C478()
{
}

void sub_196C488()
{
}

void sub_196C494()
{
}

void sub_196C4A4()
{
}

void sub_196C4B0()
{
}

void sub_196C4C0()
{
}

void sub_196C4CC()
{
}

void sub_196C4DC()
{
}

void sub_196C4E8()
{
}

void sub_196C4F8()
{
}

void sub_196C504()
{
}

void sub_196C514()
{
}

void sub_196C520()
{
}

void sub_196C530()
{
}

void sub_196C53C()
{
}

void sub_196C54C()
{
}

void sub_196C558()
{
}

void sub_196C568()
{
}

void sub_196C574()
{
}

void sub_196C584()
{
}

void sub_196C590()
{
}

void sub_196C5A0()
{
}

void sub_196C5AC()
{
}

void sub_196C5BC()
{
}

void sub_196C5C8()
{
}

void sub_196C5D8()
{
}

void sub_196C5E4()
{
}

void sub_196C5F4()
{
}

void sub_196C600()
{
}

void sub_196C610()
{
}

void sub_196C61C()
{
}

void sub_196C62C()
{
}

void sub_196C638()
{
}

void sub_196C648()
{
}

void sub_196C654()
{
}

void sub_196C664()
{
}

void sub_196C670()
{
}

void sub_196C680()
{
}

void sub_196C68C()
{
}

void sub_196C69C()
{
}

void sub_196C6A8()
{
}

void sub_196C6B8()
{
}

void sub_196C6C4()
{
}

void sub_196C6D4()
{
}

void sub_196C6E0()
{
}

void sub_196C6F0()
{
}

void sub_196C6FC()
{
}

void sub_196C70C()
{
}

void sub_196C718()
{
}

void sub_196C728()
{
}

void sub_196C734()
{
}

void sub_196C744()
{
}

void sub_196C750()
{
}

void sub_196C760()
{
}

void sub_196C76C()
{
}

void sub_196C77C()
{
}

void sub_196C788()
{
}

void sub_196C798()
{
}

void sub_196C7A4()
{
}

void sub_196C7B4()
{
}

void sub_196C7C0()
{
}

void sub_196C7D0()
{
}

void sub_196C7DC()
{
}

void sub_196C7EC()
{
}

void sub_196C7F8()
{
}

void sub_196C808()
{
}

void sub_196C814()
{
}

void sub_196C824()
{
}

void sub_196C830()
{
}

void sub_196C840()
{
}

void sub_196C84C()
{
}

void sub_196C85C()
{
}

void sub_196C868()
{
}

void sub_196C878()
{
}

void sub_196C884()
{
}

void sub_196C894()
{
}

void sub_196C8A0()
{
}

void sub_196C8B0()
{
}

void sub_196C8BC()
{
}

void sub_196C8CC()
{
}

void sub_196C8D8()
{
}

void sub_196C8E8()
{
}

void sub_196C8F4()
{
}

void sub_196C904()
{
}

void sub_196C910()
{
}

void sub_196C920()
{
}

void sub_196C92C()
{
}

void sub_196C93C()
{
}

void sub_196C948()
{
}

void sub_196C958()
{
}

void sub_196C964()
{
}

void sub_196C974()
{
}

void sub_196C980()
{
}

void sub_196C990()
{
}

void sub_196C99C()
{
}

void sub_196C9AC()
{
}

void sub_196C9B8()
{
}

void sub_196C9C8()
{
}

void sub_196C9D4()
{
}

void sub_196C9E4()
{
}

void sub_196C9F0()
{
}

void sub_196CA00()
{
}

void sub_196CA0C()
{
}

void sub_196CA1C()
{
}

void sub_196CA28()
{
}

void sub_196CA38()
{
}

void sub_196CA44()
{
}

void sub_196CA54()
{
}

void sub_196CA60()
{
}

void sub_196CA70()
{
}

void sub_196CA7C()
{
}

void sub_196CA8C()
{
}

void sub_196CA98()
{
}

void sub_196CAA8()
{
}

void sub_196CAB4()
{
}

void sub_196CAC4()
{
}

void sub_196CAD0()
{
}

void sub_196CAE0()
{
}

void sub_196CAEC()
{
}

void sub_196CAFC()
{
}

void sub_196CB08()
{
}

void sub_196CB18()
{
}

void sub_196CB24()
{
}

void sub_196CB34()
{
}

void sub_196CB40()
{
}

void sub_196CB50()
{
}

void sub_196CB5C()
{
}

void sub_196CB6C()
{
}

void sub_196CB78()
{
}

void sub_196CB88()
{
}

void sub_196CB94()
{
}

void sub_196CBA4()
{
}

void sub_196CBB0()
{
}

void sub_196CBC0()
{
}

void sub_196CBCC()
{
}

void sub_196CBDC()
{
}

void sub_196CBE8()
{
}

void sub_196CBF8()
{
}

void sub_196CC04()
{
}

void sub_196CC14()
{
}

void sub_196CC20()
{
}

void sub_196CC30()
{
}

void sub_196CC3C()
{
}

void sub_196CC4C()
{
}

void sub_196CC58()
{
}

void sub_196CC68()
{
}

void sub_196CC74()
{
}

void sub_196CC84()
{
}

void sub_196CC90()
{
}

void sub_196CCA0()
{
}

void sub_196CCAC()
{
}

void sub_196CCBC()
{
}

void sub_196CCC8()
{
}

void sub_196CCD8()
{
}

void sub_196CCE4()
{
}

void sub_196CCF4()
{
}

void sub_196CD00()
{
}

void sub_196CD10()
{
}

void sub_196CD1C()
{
}

void sub_196CD2C()
{
}

void sub_196CD38()
{
}

void sub_196CD48()
{
}

void sub_196CD54()
{
}

void sub_196CD64()
{
}

void sub_196CD70()
{
}

void sub_196CD80()
{
}

void sub_196CD8C()
{
}

void sub_196CD9C()
{
}

void sub_196CDA8()
{
}

void sub_196CDB8()
{
}

void sub_196CDC4()
{
}

void sub_196CDD4()
{
}

void sub_196CDE0()
{
}

void sub_196CDF0()
{
}

void sub_196CDFC()
{
}

void sub_196CE08()
{
}

void sub_196CE14()
{
}

void sub_196CE20()
{
}

void sub_196CE30()
{
}

void sub_196CE3C()
{
}

void sub_196CE4C()
{
}

void sub_196CE58()
{
}

void sub_196CE68()
{
}

void sub_196CE74()
{
}

void sub_196CE84()
{
}

void sub_196CE90()
{
}

void sub_196CEA0()
{
}

void sub_196CEAC()
{
}

void sub_196CEBC()
{
}

void sub_196CEC8()
{
}

void sub_196CED8()
{
}

void sub_196CEE4()
{
}

void sub_196CEF4()
{
}

void sub_196CF00()
{
}

void sub_196CF10()
{
}

void sub_196CF1C()
{
}

void sub_196CF2C()
{
}

void sub_196CF38()
{
}

void sub_196CF48()
{
}

void sub_196CF54()
{
}

void sub_196CF64()
{
}

void sub_196CF70()
{
}

void sub_196CF80()
{
}

void sub_196CF8C()
{
}

void sub_196CF9C()
{
}

void sub_196CFA8()
{
}

void sub_196CFB8()
{
}

void sub_196CFC4()
{
}

void sub_196CFD4()
{
}

void sub_196CFE0()
{
}

void sub_196CFF0()
{
}

void sub_196CFFC()
{
}

void sub_196D00C()
{
}

void sub_196D018()
{
}

void sub_196D028()
{
}

void sub_196D034()
{
}

void sub_196D044()
{
}

void sub_196D050()
{
}

void sub_196D060()
{
}

void sub_196D06C()
{
}

void sub_196D07C()
{
}

void sub_196D088()
{
}

void sub_196D098()
{
}

void sub_196D0A4()
{
}

void sub_196D0B4()
{
}

void sub_196D0C0()
{
}

void sub_196D0D0()
{
}

void sub_196D0DC()
{
}

void sub_196D0EC()
{
}

void sub_196D0F8()
{
}

void sub_196D108()
{
}

void sub_196D114()
{
}

void sub_196D124()
{
}

void sub_196D130()
{
}

void sub_196D140()
{
}

void sub_196D14C()
{
}

void sub_196D15C()
{
}

void sub_196D168()
{
}

void sub_196D178()
{
}

void sub_196D184()
{
}

void sub_196D194()
{
}

void sub_196D1A0()
{
}

void sub_196D1B0()
{
}

void sub_196D1BC()
{
}

void sub_196D1CC()
{
}

void sub_196D1D8()
{
}

void sub_196D1E8()
{
}

void sub_196D1F4()
{
}

void sub_196D204()
{
}

void sub_196D210()
{
}

void sub_196D220()
{
}

void sub_196D22C()
{
}

void sub_196D23C()
{
}

void sub_196D248()
{
}

void sub_196D258()
{
}

void sub_196D264()
{
}

void sub_196D274()
{
}

void sub_196D280()
{
}

void sub_196D290()
{
}

void sub_196D29C()
{
}

void sub_196D2AC()
{
}

void sub_196D2B8()
{
}

void sub_196D2C8()
{
}

void sub_196D2D4()
{
}

void sub_196D2E4()
{
}

void sub_196D2F0()
{
}

void sub_196D300()
{
}

void sub_196D30C()
{
}

void sub_196D31C()
{
}

void sub_196D328()
{
}

void sub_196D338()
{
}

void sub_196D344()
{
}

void sub_196D354()
{
}

void sub_196D360()
{
}

void sub_196D370()
{
}

void sub_196D37C()
{
}

void sub_196D38C()
{
}

void sub_196D398()
{
}

void sub_196D3A8()
{
}

void sub_196D3B4()
{
}

void sub_196D3C4()
{
}

void sub_196D3D0()
{
}

void sub_196D3E0()
{
}

void sub_196D3EC()
{
}

void sub_196D3FC()
{
}

void sub_196D408()
{
}

void sub_196D418()
{
}

void sub_196D424()
{
}

void sub_196D434()
{
}

void sub_196D440()
{
}

void sub_196D450()
{
}

void sub_196D45C()
{
}

void sub_196D46C()
{
}

void sub_196D478()
{
}

void sub_196D488()
{
}

void sub_196D494()
{
}

void sub_196D4A4()
{
}

void sub_196D4B0()
{
}

void sub_196D4C0()
{
}

void sub_196D4CC()
{
}

void sub_196D4DC()
{
}

void sub_196D4E8()
{
}

void sub_196D4F8()
{
}

void sub_196D504()
{
}

void sub_196D514()
{
}

void sub_196D520()
{
}

void sub_196D530()
{
}

void sub_196D53C()
{
}

void sub_196D54C()
{
}

void sub_196D558()
{
}

void sub_196D568()
{
}

void sub_196D574()
{
}

void sub_196D584()
{
}

void sub_196D590()
{
}

void sub_196D5A0()
{
}

void sub_196D5AC()
{
}

void sub_196D5BC()
{
}

void sub_196D5C8()
{
}

void sub_196D5D8()
{
}

void sub_196D5E4()
{
}

void sub_196D5F4()
{
}

void sub_196D600()
{
}

void sub_196D610()
{
}

void sub_196D61C()
{
}

void sub_196D62C()
{
}

void sub_196D638()
{
}

void sub_196D648()
{
}

void sub_196D654()
{
}

void sub_196D664()
{
}

void sub_196D670()
{
}

void sub_196D680()
{
}

void sub_196D68C()
{
}

void sub_196D69C()
{
}

void sub_196D6A8()
{
}

void sub_196D6B8()
{
}

void sub_196D6C4()
{
}

void sub_196D6D4()
{
}

void sub_196D6E0()
{
}

void sub_196D6F0()
{
}

void sub_196D6FC()
{
}

void sub_196D70C()
{
}

void sub_196D718()
{
}

void sub_196D728()
{
}

void sub_196D734()
{
}

void sub_196D744()
{
}

void sub_196D750()
{
}

void sub_196D760()
{
}

void sub_196D76C()
{
}

void sub_196D77C()
{
}

void sub_196D788()
{
}

void sub_196D798()
{
}

void sub_196D7A4()
{
}

void sub_196D7B4()
{
}

void sub_196D7C0()
{
}

void sub_196D7D0()
{
}

void sub_196D7DC()
{
}

void sub_196D7EC()
{
}

void sub_196D7F8()
{
}

void sub_196D808()
{
}

void sub_196D814()
{
}

void sub_196D824()
{
}

void sub_196D830()
{
}

void sub_196D840()
{
}

void sub_196D84C()
{
}

void sub_196D85C()
{
}

void sub_196D868()
{
}

void sub_196D878()
{
}

void sub_196D884()
{
}

void sub_196D894()
{
}

void sub_196D8A0()
{
}

void sub_196D8B0()
{
}

void sub_196D8BC()
{
}

void sub_196D8CC()
{
}

void sub_196D8D8()
{
}

void sub_196D8E8()
{
}

void sub_196D8F4()
{
}

void sub_196D904()
{
}

void sub_196D910()
{
}

void sub_196D920()
{
}

void sub_196D92C()
{
}

void sub_196D93C()
{
}

void sub_196D948()
{
}

void sub_196D954()
{
}

void sub_196D968()
{
}

void sub_196D97C()
{
}

void sub_196D984()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2626310 = 0;
  qword_2626318 = 0;
  qword_2626320 = 0;
  qword_2626310 = (uint64_t)operator new(0x18uLL);
  qword_2626318 = qword_2626310;
  qword_2626320 = qword_2626310 + 24;
  qword_2626318 = (uint64_t)sub_18914E4((uint64_t)&qword_2626320, (long long *)__p, &v2, (char *)qword_2626310);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2626328 = 0;
  qword_2626330 = 0;
  qword_2626338 = 0;
  qword_2626328 = (uint64_t)operator new(0x18uLL);
  qword_2626330 = qword_2626328;
  qword_2626338 = qword_2626328 + 24;
  qword_2626330 = (uint64_t)sub_18914E4((uint64_t)&qword_2626338, (long long *)__p, &v2, (char *)qword_2626328);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2626340 = 0;
  qword_2626348 = 0;
  qword_2626350 = 0;
  qword_2626340 = (uint64_t)operator new(0x18uLL);
  qword_2626348 = qword_2626340;
  qword_2626350 = qword_2626340 + 24;
  qword_2626348 = (uint64_t)sub_18914E4((uint64_t)&qword_2626350, (long long *)__p, &v2, (char *)qword_2626340);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_1962ED0();
}

void sub_196DB28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  qword_2626348 = v16;
  sub_1891624((void ***)&a9);
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_196DB8C(void *a1, unint64_t *a2)
{
  sub_19779F4(a2, a1);
  sub_1970EF0((uint64_t)(a1 + 2));
  char v6 = off_24E7638;
  long long v7 = sub_196DDB8;
  char v8 = &v6;
  v4[0] = off_24E7458;
  unint64_t v5 = v4;
  sub_1977D9C((uint64_t)(a1 + 137), a1, (uint64_t)&v6, (uint64_t)v4);
  sub_1977BA8(v4);
  sub_1977D18(&v6);
  unint64_t v5 = v4;
  char v6 = off_24E7638;
  long long v7 = sub_196DF64;
  char v8 = &v6;
  v4[0] = off_24E74E8;
  sub_1978024((uint64_t)(a1 + 158), a1, (uint64_t)&v6, (uint64_t)v4);
  sub_1977FA0(v4);
  sub_1977D18(&v6);
  sub_1C243FC(a1 + 179);
  sub_1FB8D40(a1 + 181);
  a1[186] = os_log_create("com.apple.geo.MapsOfflineService", "Search");
  a1[187] = 0;
  return a1;
}

void sub_196DD34(_Unwind_Exception *a1)
{
  char v6 = *(std::__shared_weak_count **)(v1 + 1440);
  if (v6) {
    sub_20A69F0(v6);
  }
  sub_196E110(v4);
  sub_196E164(v3);
  sub_18988B4(v2);
  long long v7 = *(std::__shared_weak_count **)(v1 + 8);
  if (v7) {
    sub_20A69F0(v7);
  }
  _Unwind_Resume(a1);
}

void sub_196DDB8(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 **a3@<X2>, uint64_t a4@<X8>)
{
  if (*(unsigned char *)(a2 + 728))
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    int v5 = *(_DWORD *)(a1 + 256);
    if (!v5) {
      goto LABEL_11;
    }
    char v8 = (uint64_t *)(*(void *)(a1 + 264) + 8);
    int v9 = (uint64_t *)sub_188CCE4((uint64_t)&v14, v5);
    sub_12C3F54(&v14, v9, v8, v5, *v16 - v15);
    int v10 = v15 + v5;
    LODWORD(v15) = v10;
    if (*v16 < v10) {
      *uint64_t v16 = v10;
    }
    if (v10)
    {
      sub_1C756F0((long long **)(a2 + 656), a3, __p);
      char v11 = (void *)HIBYTE(v13);
      if (v13 < 0) {
        char v11 = __p[1];
      }
      if (v11)
      {
        if (SHIBYTE(v13) < 0)
        {
          sub_4200((unsigned char *)a4, __p[0], (unint64_t)__p[1]);
        }
        else
        {
          *(_OWORD *)a4 = *(_OWORD *)__p;
          *(void *)(a4 + 16) = v13;
        }
      }
      else
      {
        sub_5E5C((void *)a4, "speller-enus-esus");
      }
      if (SHIBYTE(v13) < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
LABEL_11:
      sub_5E5C((void *)a4, "speller-enus-esus");
    }
    sub_12C3ED4(&v14);
  }
  else
  {
    sub_5E5C((void *)a4, "speller-enus-esus");
  }
}

void sub_196DF2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_12C3ED4(&a15);
  _Unwind_Resume(a1);
}

void sub_196DF64(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 **a3@<X2>, uint64_t a4@<X8>)
{
  if (*(unsigned char *)(a2 + 628))
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    int v5 = *(_DWORD *)(a1 + 256);
    if (!v5) {
      goto LABEL_11;
    }
    char v8 = (uint64_t *)(*(void *)(a1 + 264) + 8);
    int v9 = (uint64_t *)sub_188CCE4((uint64_t)&v14, v5);
    sub_12C3F54(&v14, v9, v8, v5, *v16 - v15);
    int v10 = v15 + v5;
    LODWORD(v15) = v10;
    if (*v16 < v10) {
      *uint64_t v16 = v10;
    }
    if (v10)
    {
      sub_1C756F0((long long **)(a2 + 632), a3, __p);
      char v11 = (void *)HIBYTE(v13);
      if (v13 < 0) {
        char v11 = __p[1];
      }
      if (v11)
      {
        if (SHIBYTE(v13) < 0)
        {
          sub_4200((unsigned char *)a4, __p[0], (unint64_t)__p[1]);
        }
        else
        {
          *(_OWORD *)a4 = *(_OWORD *)__p;
          *(void *)(a4 + 16) = v13;
        }
      }
      else
      {
        sub_5E5C((void *)a4, "ranker_en_model_v3");
      }
      if (SHIBYTE(v13) < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
LABEL_11:
      sub_5E5C((void *)a4, "ranker_en_model_v3");
    }
    sub_12C3ED4(&v14);
  }
  else
  {
    sub_5E5C((void *)a4, "ranker_en_model_v3");
  }
}

void sub_196E0D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_12C3ED4(&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_196E110(uint64_t a1)
{
  sub_1977FA0((void *)(a1 + 136));
  sub_1977D18((void *)(a1 + 104));
  std::mutex::~mutex((std::mutex *)(a1 + 40));
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    sub_20A69F0(v2);
  }
  sub_1976EAC(a1, *(void **)(a1 + 8));
  return a1;
}

uint64_t sub_196E164(uint64_t a1)
{
  sub_1977BA8((void *)(a1 + 136));
  sub_1977D18((void *)(a1 + 104));
  std::mutex::~mutex((std::mutex *)(a1 + 40));
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    sub_20A69F0(v2);
  }
  sub_1976EAC(a1, *(void **)(a1 + 8));
  return a1;
}

void sub_196E1BC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  char v6 = (std::__shared_weak_count *)a1[1];
  uint64_t v10 = *a1;
  char v11 = v6;
  uint64_t v12 = a3;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1978190((uint64_t)v13, a4);
  long long v7 = (std::__shared_weak_count *)a1[1];
  uint64_t v14 = *a1;
  uint64_t v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  long long v17 = 0;
  char v8 = operator new(0x38uLL);
  void *v8 = off_24E76E8;
  sub_1978190((uint64_t)(v8 + 1), (uint64_t)v13);
  int v9 = v15;
  v8[5] = v14;
  v8[6] = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  long long v17 = v8;
  sub_201ACF4(&v12, &v10, a2, (uint64_t)v16);
  sub_19787D8(v16);
  if (v15) {
    sub_20A69F0(v15);
  }
  sub_1978228(v13);
  if (v11) {
    sub_20A69F0(v11);
  }
}

void sub_196E2E8(_Unwind_Exception *a1, uint64_t a2, std::__shared_weak_count *a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  sub_19787D8((uint64_t *)va1);
  sub_196E334((uint64_t *)va);
  if (a3) {
    sub_20A69F0(a3);
  }
  _Unwind_Resume(a1);
}

void *sub_196E334(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[5];
  if (v2) {
    sub_20A69F0(v2);
  }

  return sub_1978228(a1);
}

void sub_196E374(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  if (a2[1] == *a2)
  {
    uint64_t v9 = sub_1C3569C(*a1);
    memset(v11, 0, sizeof(v11));
    uint64_t v10 = nullsub_1(*a1);
    sub_1D9A148(v9, v11, v10, a3);
    uint64_t v12 = (void **)v11;
    sub_1976FBC(&v12);
  }
  else
  {
    if (*(_DWORD *)(v5 + 72) != 2) {
      sub_11388B8();
    }
    char v6 = (uint64_t *)(v5 + 8);
    uint64_t v7 = sub_1C3569C(*a1);
    uint64_t v8 = nullsub_1(*a1);
    sub_1D9A148(v7, v6, v8, a3);
  }
}

void sub_196E450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_1976FBC(&a12);
  _Unwind_Resume(a1);
}

void sub_196E46C(void **a1@<X0>, uint64_t *a2@<X1>, _DWORD *a3@<X8>)
{
  uint64_t v6 = nullsub_1(*a1);
  sub_5E5C(&__p, "ranking@agg@pre_l2");
  uint64_t v7 = nullsub_1(*a1);
  uint64_t v8 = (os_log_t *)(v6 + 1416);
  sub_1B7D1F8((os_log_t *)(v6 + 1416), (uint64_t *)&__p, a2, *(_DWORD *)(v7 + 16));
  if ((v39[15] & 0x80000000) != 0) {
    operator delete(__p);
  }
  uint64_t v9 = *v8;
  os_signpost_id_t v10 = *(void *)(nullsub_1(*a1) + 1424);
  if (v10 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v9))
  {
    LOWORD(__p) = 0;
    _os_signpost_emit_with_name_impl(&def_332C, v9, OS_SIGNPOST_INTERVAL_BEGIN, v10, "SearchService::MLRankerBlend", (const char *)&unk_239608D, (uint8_t *)&__p, 2u);
  }
  uint64_t v11 = nullsub_1(*a1);
  sub_1A143EC(a2, v11 + 8, v43);
  sub_1A0EF10((uint64_t *)v43, *a1, *(unsigned __int8 *)(v6 + 56), (uint64_t)&__p);
  uint64_t v12 = *v8;
  os_signpost_id_t v13 = *(void *)(nullsub_1(*a1) + 1424);
  if (v13 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v12))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&def_332C, v12, OS_SIGNPOST_INTERVAL_END, v13, "SearchService::MLRankerBlend", (const char *)&unk_239608D, buf, 2u);
  }
  sub_19EA90C(&__p, (uint64_t)*a1);
  sub_5E5C(buf, "ranking@agg@post_l2");
  uint64_t v14 = nullsub_1(*a1);
  sub_1B7D864((os_log_t *)(v6 + 1416), (uint64_t *)buf, v41, *(_DWORD *)(v14 + 16));
  if (SHIBYTE(v37) < 0) {
    operator delete(*(void **)buf);
  }
  double v15 = sub_1E6FA18((uint64_t)&__p, v6 + 8);
  uint64_t v16 = sub_1C3569C((uint64_t)*a1);
  if (sub_18A4FD4(v16)) {
    sub_1E6FAB4((uint64_t)&__p, (uint64_t *)a1, v15);
  }
  uint64_t v17 = sub_1C3569C((uint64_t)*a1);
  char v18 = sub_18A4EC4(v17);
  if (v15 <= 0.0) {
    char v19 = 1;
  }
  else {
    char v19 = v18;
  }
  if ((v19 & 1) == 0) {
    sub_1E6FB40((uint64_t)&__p, v15);
  }
  sub_18C9460((uint64_t *)a1, (uint64_t)&__p);
  sub_1C35328((char *)*a1, (uint64_t)buf);
  sub_1962C08((void *)(v6 + 1184), (uint64_t)v34);
  int v20 = *(_DWORD *)(v6 + 760);
  if (SHIBYTE(v37) < 0)
  {
    sub_4200(__dst, *(void **)buf, *(unint64_t *)&buf[8]);
  }
  else
  {
    *(_OWORD *)std::string __dst = *(_OWORD *)buf;
    uint64_t v33 = v37;
  }
  if (SHIBYTE(v35) < 0)
  {
    sub_4200(v30, v34[0], (unint64_t)v34[1]);
  }
  else
  {
    *(_OWORD *)long long v30 = *(_OWORD *)v34;
    uint64_t v31 = v35;
  }
  sub_1EAE624((uint64_t)&__p, v20, (long long *)__dst, (uint64_t)v30);
  if (SHIBYTE(v31) < 0) {
    operator delete(v30[0]);
  }
  if (SHIBYTE(v33) < 0) {
    operator delete(__dst[0]);
  }
  sub_5E5C(v28, "ranking@agg@post_category_filtering");
  uint64_t v21 = nullsub_1(*a1);
  sub_1B7D864(v8, (uint64_t *)v28, v41, *(_DWORD *)(v21 + 16));
  if (v29 < 0) {
    operator delete(v28[0]);
  }
  long long v22 = *v8;
  os_signpost_id_t v23 = *(void *)(nullsub_1(*a1) + 1424);
  if (v23 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v22))
  {
    LOWORD(v28[0]) = 0;
    _os_signpost_emit_with_name_impl(&def_332C, v22, OS_SIGNPOST_INTERVAL_BEGIN, v23, "SearchService::ResponseComposition", (const char *)&unk_239608D, (uint8_t *)v28, 2u);
  }
  uint64_t v24 = sub_1C3569C((uint64_t)*a1);
  if ((sub_18A4EA4(v24) & 1) != 0 || (uint64_t v25 = sub_1C3569C((uint64_t)*a1), sub_18A4EC4(v25))) {
    sub_1BDF77C((uint64_t *)a1, (uint64_t)&__p);
  }
  sub_1A69D10((uint64_t *)a1, (uint64_t *)&__p, a3);
  char v26 = *v8;
  os_signpost_id_t v27 = *(void *)(nullsub_1(*a1) + 1424);
  if (v27 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v26))
  {
    LOWORD(v28[0]) = 0;
    _os_signpost_emit_with_name_impl(&def_332C, v26, OS_SIGNPOST_INTERVAL_END, v27, "SearchService::ResponseComposition", (const char *)&unk_239608D, (uint8_t *)v28, 2u);
  }
  if (SHIBYTE(v35) < 0) {
    operator delete(v34[0]);
  }
  if (SHIBYTE(v37) < 0) {
    operator delete(*(void **)buf);
  }
  *(void *)buf = &v42;
  sub_1977040((void ***)buf);
  *(void *)buf = v41;
  sub_1977124((void ***)buf);
  *(void *)buf = &v40;
  sub_1891624((void ***)buf);
  *(void *)buf = v39;
  sub_1891624((void ***)buf);
  std::string __p = v43;
  sub_19771A8((void ***)&__p);
}

void sub_196E8E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  sub_196E9C8(&a42);
  a42 = (void *)(v47 - 104);
  sub_19771A8((void ***)&a42);
  _Unwind_Resume(a1);
}

void **sub_196E9C8(void **a1)
{
  uint64_t v3 = a1 + 10;
  sub_1977040(&v3);
  uint64_t v3 = a1 + 7;
  sub_1977124(&v3);
  uint64_t v3 = a1 + 4;
  sub_1891624(&v3);
  uint64_t v3 = a1 + 1;
  sub_1891624(&v3);
  return a1;
}

void sub_196EA34(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  int v8 = *(_DWORD *)nullsub_1(*a2);
  if (v8 == 4)
  {
    sub_1B4ECF8(a2, (uint64_t)v16);
    uint64_t v11 = *(void *)(a4 + 24);
    if (!v11) {
      sub_29F82C();
    }
    (*(void (**)(uint64_t, unsigned char *))(*(void *)v11 + 48))(v11, v16);
    os_signpost_id_t v10 = v16;
    goto LABEL_13;
  }
  if (v8 == 2)
  {
    sub_196E374(a2, a3, (uint64_t)v17);
    uint64_t v9 = *(void *)(a4 + 24);
    if (!v9) {
      sub_29F82C();
    }
    (*(void (**)(uint64_t, unsigned char *))(*(void *)v9 + 48))(v9, v17);
    os_signpost_id_t v10 = v17;
LABEL_13:
    sub_182E7B8(v10);
    return;
  }
  uint64_t v12 = sub_1C3569C(*a2);
  if (!sub_18A51F4(v12))
  {
    sub_196E46C((void **)a2, a3, v15);
    uint64_t v14 = *(void *)(a4 + 24);
    if (!v14) {
      sub_29F82C();
    }
    (*(void (**)(uint64_t, _DWORD *))(*(void *)v14 + 48))(v14, v15);
    os_signpost_id_t v10 = v15;
    goto LABEL_13;
  }
  uint64_t v13 = *(void *)(a1 + 1496);

  sub_196E1BC(a2, a3, v13, a4);
}

void sub_196EBCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_182E7B8(va);
  _Unwind_Resume(a1);
}

void sub_196EBF8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *(NSObject **)(a1 + 1488);
  os_signpost_id_t v7 = *(void *)(nullsub_1(*a2) + 1424);
  if (v7 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&def_332C, v6, OS_SIGNPOST_INTERVAL_BEGIN, v7, "SearchService::Recall", (const char *)&unk_239608D, buf, 2u);
  }
  uint64_t v8 = sub_1C3569C(*a2);
  uint64_t v9 = sub_1FB8D44((void *)(a1 + 1448), v8);
  os_signpost_id_t v10 = (uint64_t **)(v9 + 1);
  sub_196EEC4((v9[1] - *v9) >> 4, buf);
  uint64_t v11 = (uint64_t *)*v9;
  for (uint64_t i = *v10; v11 != i; v11 += 2)
  {
    dispatch_group_enter(**(dispatch_group_t **)buf);
    uint64_t v13 = *a2;
    double v15 = *(dispatch_group_t **)buf;
    uint64_t v14 = v24;
    if (v24) {
      atomic_fetch_add_explicit(&v24->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    v30[0] = off_24E77E8;
    v30[1] = v15;
    v30[2] = v14;
    void v30[3] = v30;
    sub_196EF48(v11, v13, (uint64_t)v30);
    sub_1977970(v30);
  }
  uint64_t v21 = *(dispatch_group_t **)buf;
  long long v22 = v24;
  if (v24) {
    atomic_fetch_add_explicit(&v24->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v17 = *a2;
  uint64_t v16 = (std::__shared_weak_count *)a2[1];
  *(void *)&long long v25 = a1;
  *((void *)&v25 + 1) = v17;
  char v26 = v16;
  if (v16) {
    atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1978190((uint64_t)v27, a3);
  char v29 = 0;
  char v18 = (char *)operator new(0x40uLL);
  char v19 = v18;
  *(void *)char v18 = off_24E78C8;
  *(_OWORD *)(v18 + 8) = v25;
  int v20 = v26;
  *((void *)v18 + 3) = v26;
  if (v20) {
    atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1979A18((uint64_t)(v18 + 32), (uint64_t)v27);
  char v29 = v19;
  sub_196F000((uint64_t)&v21, (uint64_t)v28);
  sub_1979B4C(v28);
  sub_1978228(v27);
  if (v26) {
    sub_20A69F0(v26);
  }
  if (v22) {
    sub_20A69F0(v22);
  }
  if (v24) {
    sub_20A69F0(v24);
  }
}

void sub_196EE58(_Unwind_Exception *a1, uint64_t a2, std::__shared_weak_count *a3, uint64_t a4, std::__shared_weak_count *a5, ...)
{
  va_start(va1, a5);
  va_start(va, a5);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  sub_1979B4C((uint64_t *)va1);
  sub_196F0E0((uint64_t)va);
  if (a3) {
    sub_20A69F0(a3);
  }
  if (a5) {
    sub_20A69F0(a5);
  }
  _Unwind_Resume(a1);
}

void sub_196EEC4(unint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v7 = a1;
  uint64_t v3 = dispatch_group_create();
  dispatch_object_t object = v3;
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(0, 0);
  dispatch_queue_global_t v5 = global_queue;
  if (v3 && global_queue)
  {
    sub_197885C(&v7, &object, (uint64_t *)&v5, a2);
    dispatch_release(object);
  }
  else
  {
    if (v3) {
      dispatch_release(v3);
    }
    *a2 = 0;
    a2[1] = 0;
  }
}

void *sub_196EF48(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  sub_1977318((uint64_t)v6, a3);
  (*(void (**)(uint64_t, uint64_t, void *))(*(void *)v4 + 16))(v4, a2, v6);
  return sub_1977970(v6);
}

void sub_196EFE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1977970((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_196F000(uint64_t a1, uint64_t a2)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 1174405120;
  block[2] = sub_19794AC;
  block[3] = &unk_24E7888;
  sub_1979590((uint64_t)v7, a2);
  uint64_t v3 = *(dispatch_group_t **)a1;
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 8);
  v7[4] = *(void *)a1;
  uint64_t v8 = v4;
  if (v4)
  {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v3 = *(dispatch_group_t **)a1;
  }
  dispatch_group_notify(*v3, v3[1], block);
  if (v8) {
    sub_20A69F0(v8);
  }
  return sub_1979B4C(v7);
}

uint64_t sub_196F0E0(uint64_t a1)
{
  sub_1978228((void *)(a1 + 24));
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2) {
    sub_20A69F0(v2);
  }
  return a1;
}

void sub_196F118(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  sub_5E5C(__p, "rev_country");
  uint64_t v8 = sub_1908254(a3, (unsigned __int8 *)__p);
  uint64_t v9 = (std::__shared_weak_count *)v8;
  if (v38 < 0)
  {
    operator delete(__p[0]);
    if (!v9)
    {
LABEL_10:
      uint64_t v11 = 0;
      goto LABEL_11;
    }
  }
  else if (!v8)
  {
    goto LABEL_10;
  }
  shared_weak_owners = (const void *)v9[1].__shared_weak_owners_;
  if (!shared_weak_owners)
  {
    uint64_t v9 = 0;
    goto LABEL_10;
  }
  if (v11)
  {
    uint64_t v9 = (std::__shared_weak_count *)v9[2].__vftable;
    if (v9) {
      atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
LABEL_11:
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  int v44 = 0;
  int v12 = *(_DWORD *)(a1 + 256);
  if (!v12) {
    goto LABEL_19;
  }
  uint64_t v13 = *(void *)(a1 + 264);
  uint64_t v14 = (uint64_t *)sub_188CCE4((uint64_t)&v42, *(_DWORD *)(a1 + 256));
  sub_12C3F54(&v42, v14, (uint64_t *)(v13 + 8), v12, *v44 - v43);
  int v15 = v43 + v12;
  LODWORD(v43) = v15;
  if (*v44 < v15) {
    *int v44 = v15;
  }
  if (!v15)
  {
LABEL_19:
    sub_5E5C(a4, "US");
    goto LABEL_52;
  }
  sub_182B188(__p, a1);
  sub_5E5C(&v36, "US");
  if ((v39 & 4) != 0 && (*(unsigned char *)(v41 + 40) & 2) != 0)
  {
    sub_18A4BCC((std::string *)(*(void *)(v41 + 216) & 0xFFFFFFFFFFFFFFFELL), &v35);
  }
  else
  {
    if (!v40) {
      goto LABEL_25;
    }
    sub_18A4D6C((uint64_t)__p, &v35);
  }
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v36.__r_.__value_.__l.__data_);
  }
  std::string v36 = v35;
LABEL_25:
  double v16 = sub_18A4D90((uint64_t)__p, *(_DWORD *)(a2 + 96));
  v34[0] = v16;
  v34[1] = v17;
  if (v16 >= -90.0 && v16 <= 90.0 && v17 >= -180.0 && v17 <= 180.0)
  {
    if (v44) {
      uint64_t v18 = (uint64_t)(v44 + 2);
    }
    else {
      uint64_t v18 = 0;
    }
    memset(&v35, 0, sizeof(v35));
    sub_19773B0(&v35, v18, v18 + 8 * (int)v43, (int)v43);
    sub_1AFDBBC((uint64_t *)&v35, v34, (uint64_t)&v32, v19);
    long long v31 = v32;
    int v20 = (double *)&v31;
    if (v33) {
      int v20 = v34;
    }
    *(_OWORD *)int v34 = *(_OWORD *)v20;
    sub_1B5A340((uint64_t)v11, &__s1, v34[0], v34[1]);
    unsigned __int8 v21 = v30;
    if ((v30 & 0x80u) == 0) {
      size_t v22 = v30;
    }
    else {
      size_t v22 = __n;
    }
    std::string::size_type size = HIBYTE(v36.__r_.__value_.__r.__words[2]);
    int v24 = SHIBYTE(v36.__r_.__value_.__r.__words[2]);
    if (v22)
    {
      if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = v36.__r_.__value_.__l.__size_;
      }
      if (v22 != size)
      {
        p_s1 = (std::string *)&__s1;
        goto LABEL_56;
      }
      if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        long long v25 = &v36;
      }
      else {
        long long v25 = (std::string *)v36.__r_.__value_.__r.__words[0];
      }
      if ((char)v30 < 0)
      {
        if (memcmp(__s1, v25, __n))
        {
          p_s1 = (std::string *)&__s1;
          goto LABEL_65;
        }
      }
      else if (v30)
      {
        uint64_t v26 = 0;
        while (1)
        {
          p_s1 = (std::string *)&__s1;
          if (*((unsigned __int8 *)&__s1 + v26) != v25->__r_.__value_.__s.__data_[v26]) {
            break;
          }
          if (v30 == ++v26) {
            goto LABEL_60;
          }
        }
LABEL_56:
        if ((char)v30 < 0)
        {
LABEL_65:
          sub_4200(a4, p_s1->__r_.__value_.__l.__data_, p_s1->__r_.__value_.__l.__size_);
          if ((v30 & 0x80) == 0)
          {
LABEL_63:
            *(void *)&long long v32 = &v35;
            sub_189589C((void ***)&v32);
            if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v36.__r_.__value_.__l.__data_);
            }
            goto LABEL_51;
          }
LABEL_62:
          operator delete(__s1);
          goto LABEL_63;
        }
LABEL_61:
        *(_OWORD *)a4 = *(_OWORD *)&p_s1->__r_.__value_.__l.__data_;
        a4[2] = *((void *)&p_s1->__r_.__value_.__l + 2);
        if ((v21 & 0x80) == 0) {
          goto LABEL_63;
        }
        goto LABEL_62;
      }
    }
LABEL_60:
    p_s1 = &v36;
    if (v24 < 0) {
      goto LABEL_65;
    }
    goto LABEL_61;
  }
  *(std::string *)a4 = v36;
LABEL_51:
  sub_182B32C(__p);
LABEL_52:
  sub_12C3ED4(&v42);
  if (v9) {
    sub_20A69F0(v9);
  }
}

void sub_196F4FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  a19 = &a25;
  sub_189589C((void ***)&a19);
  if (a33 < 0) {
    operator delete(a28);
  }
  sub_182B32C(&a34);
  sub_12C3ED4((void *)(v40 - 88));
  if (v39) {
    sub_20A69F0(v39);
  }
  _Unwind_Resume(a1);
}

void sub_196F5B0(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  sub_1962C04(&v40, a1);
  if (*(unsigned char *)(a4 + 252))
  {
    sub_1D51FAC(a1, *(_DWORD *)(a4 + 260), *(_DWORD *)(a4 + 96), *(_DWORD *)(a4 + 256), v38);
  }
  else
  {
    LOBYTE(v38[0]) = 0;
    char v39 = 0;
  }
  int v12 = sub_1C33F20(a1);
  sub_1896F30((uint64_t)v34, (uint64_t *)a4);
  uint64_t v13 = (std::__shared_weak_count *)a2[1];
  uint64_t v32 = *a2;
  char v33 = v13;
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_18981AC((uint64_t)v31, (uint64_t)a5);
  sub_1A0DC18(a1, (uint64_t *)&v29);
  uint64_t v14 = *(void *)(a1 + 296);
  LOBYTE(v24) = 0;
  char v26 = 0;
  if (*(unsigned char *)(a1 + 320))
  {
    int v15 = *(std::__shared_weak_count **)(a1 + 312);
    uint64_t v24 = *(void *)(a1 + 304);
    long long v25 = v15;
    if (v15) {
      atomic_fetch_add_explicit(&v15->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    char v26 = 1;
  }
  double v16 = *(std::__shared_weak_count **)(a1 + 336);
  uint64_t v27 = *(void *)(a1 + 328);
  char v28 = v16;
  if (v16) {
    atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  LOBYTE(v19) = 0;
  char v21 = 0;
  if (*(unsigned char *)(a1 + 360))
  {
    double v17 = *(std::__shared_weak_count **)(a1 + 352);
    uint64_t v19 = *(void *)(a1 + 344);
    int v20 = v17;
    if (v17) {
      atomic_fetch_add_explicit(&v17->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    char v21 = 1;
  }
  uint64_t v18 = *(std::__shared_weak_count **)(a1 + 376);
  uint64_t v22 = *(void *)(a1 + 368);
  os_signpost_id_t v23 = v18;
  if (v18) {
    atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1977508((uint64_t)v35, v12, (uint64_t)v34, (uint64_t)&v32, (uint64_t)v31, (long long *)&v40, a3, (uint64_t *)&v29, v14, v38, (uint64_t)&v24, (uint64_t)&v19);
  if (v23) {
    sub_20A69F0(v23);
  }
  if (v21 && v20) {
    sub_20A69F0(v20);
  }
  if (v28) {
    sub_20A69F0(v28);
  }
  if (v26 && v25) {
    sub_20A69F0(v25);
  }
  int v49 = (void **)&v29;
  sub_189589C(&v49);
  sub_1898634((uint64_t)v31);
  if (v33) {
    sub_20A69F0(v33);
  }
  sub_18988B4((uint64_t)v34);
  sub_196F118(a1, a4, a5, &v29);
  if (SHIBYTE(v37) < 0) {
    operator delete((void *)__p);
  }
  long long __p = v29;
  uint64_t v37 = v30;
  sub_1979BD0(a6);
  sub_1898A60((uint64_t)v35);
  if (v48 < 0) {
    operator delete(v47);
  }
  if (v46 < 0) {
    operator delete(v45);
  }
  if (v44 < 0) {
    operator delete(v43[3]);
  }
  v35[0] = v43;
  sub_1891624(v35);
  v35[0] = (void **)&v42;
  sub_1891624(v35);
  v35[0] = (void **)&v41;
  sub_1891624(v35);
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v40.__r_.__value_.__l.__data_);
  }
}

void sub_196F88C(_Unwind_Exception *a1)
{
  sub_1896E94(v1 - 240);
  _Unwind_Resume(a1);
}

uint64_t sub_196F908(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    sub_20A69F0(v2);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
    if (v3) {
      sub_20A69F0(v3);
    }
  }
  return a1;
}

void sub_196F94C(uint64_t *a1, char **a2, uint64_t a3)
{
  if (sub_18A504C(a2))
  {
    sub_18A4F94(5, (uint64_t)v24);
    uint64_t v6 = *(void *)(a3 + 24);
    if (!v6) {
      sub_29F82C();
    }
    (*(void (**)(uint64_t, unsigned char *))(*(void *)v6 + 48))(v6, v24);
    sub_182E7B8(v24);
  }
  else
  {
    unint64_t v7 = a1[186];
    os_signpost_id_t v8 = *(void *)(nullsub_1(*a2) + 1424);
    if (v8 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
    {
      *(_WORD *)buf = 0;
      _os_signpost_emit_with_name_impl(&def_332C, v7, OS_SIGNPOST_INTERVAL_BEGIN, v8, "SearchService::QuProcessing", (const char *)&unk_239608D, buf, 2u);
    }
    sub_1979DB4(buf);
    v30[0] = off_24E7A48;
    v30[1] = sub_18B0214;
    void v30[3] = v30;
    sub_1EE69B8(*(uint64_t *)buf, (uint64_t)v30);
    sub_19778EC(v30);
    uint64_t v9 = *(unsigned __int8 **)buf;
    uint64_t v10 = (std::__shared_weak_count *)a1[1];
    uint64_t v20 = *a1;
    char v21 = v10;
    if (v10) {
      atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    uint64_t v11 = (std::__shared_weak_count *)a2[1];
    uint64_t v18 = *a2;
    uint64_t v19 = v11;
    if (v11) {
      atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    sub_1EE6AD4(v9, &v20, (uint64_t *)&v18);
    if (v19) {
      sub_20A69F0(v19);
    }
    if (v21) {
      sub_20A69F0(v21);
    }
    int v12 = *(uint64_t **)buf;
    uint64_t v14 = *a2;
    uint64_t v13 = (std::__shared_weak_count *)a2[1];
    *(void *)&long long v25 = a1;
    *((void *)&v25 + 1) = v14;
    char v26 = v13;
    if (v13) {
      atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    sub_1978190((uint64_t)v27, a3);
    long long v29 = 0;
    int v15 = (char *)operator new(0x40uLL);
    double v16 = v15;
    *(void *)int v15 = off_24E7AF8;
    *(_OWORD *)(v15 + 8) = v25;
    double v17 = v26;
    *((void *)v15 + 3) = v26;
    if (v17) {
      atomic_fetch_add_explicit(&v17->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    sub_1979A18((uint64_t)(v15 + 32), (uint64_t)v27);
    long long v29 = v16;
    sub_1EE6CD8(v12, (uint64_t)v28);
    sub_197B0A8(v28);
    sub_1978228(v27);
    if (v26) {
      sub_20A69F0(v26);
    }
    if (v23) {
      sub_20A69F0(v23);
    }
  }
}

void sub_196FBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  sub_197B0A8((void *)(v14 - 120));
  sub_196F0E0(v14 - 176);
  if (a14) {
    sub_20A69F0(a14);
  }
  _Unwind_Resume(a1);
}

void sub_196FC68(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_196F118(a2, a3, a4, &v14);
  sub_196FD88(a1 + 1096, (uint64_t)&v10);
  sub_1970190(a1 + 1264, (uint64_t)&v6);
  sub_1977710(a2 + 304, &v10);
  sub_1977710(a2 + 344, &v6);
  if (v9) {
    sub_20A69F0(v9);
  }
  if (v8 && v7) {
    sub_20A69F0(v7);
  }
  if (v13) {
    sub_20A69F0(v13);
  }
  if (v12 && v11) {
    sub_20A69F0(v11);
  }
  if (v15 < 0) {
    operator delete(v14);
  }
}

void sub_196FD4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_196F908((uint64_t)va);
  if (*(char *)(v7 - 33) < 0) {
    operator delete(*(void **)(v7 - 56));
  }
  _Unwind_Resume(a1);
}

void sub_196FD88(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 128);
  if (!v3) {
    sub_29F82C();
  }
  (*(void (**)(long long *__return_ptr))(*(void *)v3 + 48))(&v37);
  if (SHIBYTE(v38) < 0)
  {
    sub_4200(__p, (void *)v37, *((unint64_t *)&v37 + 1));
  }
  else
  {
    *(_OWORD *)long long __p = v37;
    uint64_t v34 = v38;
  }
  sub_197B12C(a1, (uint64_t)__p, &v35);
  if (SHIBYTE(v34) < 0) {
    operator delete(__p[0]);
  }
  if (v35)
  {
    if (*((char *)v35 + 23) < 0)
    {
      sub_4200(__dst, *(void **)v35, *((void *)v35 + 1));
    }
    else
    {
      long long v5 = *v35;
      uint64_t v32 = *((void *)v35 + 2);
      *(_OWORD *)std::string __dst = v5;
    }
    std::mutex::lock((std::mutex *)(a1 + 40));
    uint64_t v7 = sub_19081D4(a1, (void **)&v37);
    char v8 = v7;
    if ((void **)(a1 + 8) != v7)
    {
      uint64_t v9 = *((unsigned __int8 *)v7 + 79);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = (void *)*((unsigned __int8 *)v7 + 79);
      }
      else {
        uint64_t v10 = v7[8];
      }
      uint64_t v11 = (void *)HIBYTE(v32);
      if (v32 < 0) {
        uint64_t v11 = __dst[1];
      }
      if (v10 == v11)
      {
        char v12 = (const void **)(v7 + 7);
        if (v32 >= 0) {
          uint64_t v13 = __dst;
        }
        else {
          uint64_t v13 = (void **)__dst[0];
        }
        if ((v9 & 0x80) == 0)
        {
          if (*((unsigned char *)v7 + 79))
          {
            while (*(unsigned __int8 *)v12 == *(unsigned __int8 *)v13)
            {
              char v12 = (const void **)((char *)v12 + 1);
              uint64_t v13 = (void **)((char *)v13 + 1);
              if (!--v9) {
                goto LABEL_54;
              }
            }
            goto LABEL_29;
          }
LABEL_54:
          *(unsigned char *)a2 = 0;
          *(unsigned char *)(a2 + 16) = 0;
          if (*((unsigned char *)v8 + 96))
          {
            uint64_t v19 = (atomic_ullong *)v8[11];
            *(void *)a2 = v8[10];
            *(void *)(a2 + 8) = v19;
            if (v19) {
              atomic_fetch_add_explicit(v19 + 1, 1uLL, memory_order_relaxed);
            }
            *(unsigned char *)(a2 + 16) = 1;
          }
          uint64_t v20 = v36;
          *(void *)(a2 + 24) = v35;
          *(void *)(a2 + 32) = v20;
          if (v20) {
            atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
          }
LABEL_47:
          std::mutex::unlock((std::mutex *)(a1 + 40));
          if (SHIBYTE(v32) < 0) {
            operator delete(__dst[0]);
          }
          goto LABEL_49;
        }
        if (!memcmp(*v12, v13, (size_t)v7[8])) {
          goto LABEL_54;
        }
      }
    }
LABEL_29:
    uint64_t v14 = *(void *)(a1 + 160);
    if (!v14) {
      sub_29F82C();
    }
    (*(void (**)(uint64_t *__return_ptr))(*(void *)v14 + 48))(&v28);
    if (v30)
    {
      uint64_t v21 = v28;
      uint64_t v22 = v29;
      if (v29) {
        atomic_fetch_add_explicit(&v29->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      char v23 = 1;
      sub_197B254((char *)v24, (long long *)__dst, (uint64_t)&v21);
      char v39 = &v37;
      char v15 = sub_197B2CC((uint64_t **)a1, (void **)&v37, (uint64_t)&unk_20F06E0, &v39);
      sub_197B1F4((uint64_t)(v15 + 7), (long long *)v24);
      if (v27 && v26) {
        sub_20A69F0(v26);
      }
      if (v25 < 0) {
        operator delete(v24[0]);
      }
      if (v23 && v22) {
        sub_20A69F0(v22);
      }
    }
    uint64_t v17 = v28;
    double v16 = v29;
    if (v29) {
      atomic_fetch_add_explicit(&v29->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    *(void *)a2 = v17;
    *(void *)(a2 + 8) = v16;
    *(unsigned char *)(a2 + 16) = 1;
    uint64_t v18 = v36;
    *(void *)(a2 + 24) = v35;
    *(void *)(a2 + 32) = v18;
    if (v18) {
      atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    if (v29) {
      sub_20A69F0(v29);
    }
    goto LABEL_47;
  }
  *(unsigned char *)a2 = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v6 = v36;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v6;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
LABEL_49:
  if (v36) {
    sub_20A69F0(v36);
  }
  if (SHIBYTE(v38) < 0) {
    operator delete((void *)v37);
  }
}

void sub_19700E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  uint64_t v38 = *(std::__shared_weak_count **)(v36 - 96);
  if (v38) {
    sub_20A69F0(v38);
  }
  if (*(char *)(v36 - 65) < 0) {
    operator delete(*(void **)(v36 - 88));
  }
  _Unwind_Resume(exception_object);
}

void sub_1970190(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 128);
  if (!v3) {
    sub_29F82C();
  }
  (*(void (**)(long long *__return_ptr))(*(void *)v3 + 48))(&v37);
  if (SHIBYTE(v38) < 0)
  {
    sub_4200(__p, (void *)v37, *((unint64_t *)&v37 + 1));
  }
  else
  {
    *(_OWORD *)long long __p = v37;
    uint64_t v34 = v38;
  }
  sub_197B500(a1, (uint64_t)__p, &v35);
  if (SHIBYTE(v34) < 0) {
    operator delete(__p[0]);
  }
  if (v35)
  {
    if (*((char *)v35 + 23) < 0)
    {
      sub_4200(__dst, *(void **)v35, *((void *)v35 + 1));
    }
    else
    {
      long long v5 = *v35;
      uint64_t v32 = *((void *)v35 + 2);
      *(_OWORD *)std::string __dst = v5;
    }
    std::mutex::lock((std::mutex *)(a1 + 40));
    uint64_t v7 = sub_19081D4(a1, (void **)&v37);
    char v8 = v7;
    if ((void **)(a1 + 8) != v7)
    {
      uint64_t v9 = *((unsigned __int8 *)v7 + 79);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = (void *)*((unsigned __int8 *)v7 + 79);
      }
      else {
        uint64_t v10 = v7[8];
      }
      uint64_t v11 = (void *)HIBYTE(v32);
      if (v32 < 0) {
        uint64_t v11 = __dst[1];
      }
      if (v10 == v11)
      {
        char v12 = (const void **)(v7 + 7);
        if (v32 >= 0) {
          uint64_t v13 = __dst;
        }
        else {
          uint64_t v13 = (void **)__dst[0];
        }
        if ((v9 & 0x80) == 0)
        {
          if (*((unsigned char *)v7 + 79))
          {
            while (*(unsigned __int8 *)v12 == *(unsigned __int8 *)v13)
            {
              char v12 = (const void **)((char *)v12 + 1);
              uint64_t v13 = (void **)((char *)v13 + 1);
              if (!--v9) {
                goto LABEL_54;
              }
            }
            goto LABEL_29;
          }
LABEL_54:
          *(unsigned char *)a2 = 0;
          *(unsigned char *)(a2 + 16) = 0;
          if (*((unsigned char *)v8 + 96))
          {
            uint64_t v19 = (atomic_ullong *)v8[11];
            *(void *)a2 = v8[10];
            *(void *)(a2 + 8) = v19;
            if (v19) {
              atomic_fetch_add_explicit(v19 + 1, 1uLL, memory_order_relaxed);
            }
            *(unsigned char *)(a2 + 16) = 1;
          }
          uint64_t v20 = v36;
          *(void *)(a2 + 24) = v35;
          *(void *)(a2 + 32) = v20;
          if (v20) {
            atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
          }
LABEL_47:
          std::mutex::unlock((std::mutex *)(a1 + 40));
          if (SHIBYTE(v32) < 0) {
            operator delete(__dst[0]);
          }
          goto LABEL_49;
        }
        if (!memcmp(*v12, v13, (size_t)v7[8])) {
          goto LABEL_54;
        }
      }
    }
LABEL_29:
    uint64_t v14 = *(void *)(a1 + 160);
    if (!v14) {
      sub_29F82C();
    }
    (*(void (**)(uint64_t *__return_ptr))(*(void *)v14 + 48))(&v28);
    if (v30)
    {
      uint64_t v21 = v28;
      uint64_t v22 = v29;
      if (v29) {
        atomic_fetch_add_explicit(&v29->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      char v23 = 1;
      sub_197B254((char *)v24, (long long *)__dst, (uint64_t)&v21);
      char v39 = &v37;
      char v15 = sub_197B628((uint64_t **)a1, (void **)&v37, (uint64_t)&unk_20F06E0, &v39);
      sub_197B5C8((uint64_t)(v15 + 7), (long long *)v24);
      if (v27 && v26) {
        sub_20A69F0(v26);
      }
      if (v25 < 0) {
        operator delete(v24[0]);
      }
      if (v23 && v22) {
        sub_20A69F0(v22);
      }
    }
    uint64_t v17 = v28;
    double v16 = v29;
    if (v29) {
      atomic_fetch_add_explicit(&v29->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    *(void *)a2 = v17;
    *(void *)(a2 + 8) = v16;
    *(unsigned char *)(a2 + 16) = 1;
    uint64_t v18 = v36;
    *(void *)(a2 + 24) = v35;
    *(void *)(a2 + 32) = v18;
    if (v18) {
      atomic_fetch_add_explicit(&v18->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    if (v29) {
      sub_20A69F0(v29);
    }
    goto LABEL_47;
  }
  *(unsigned char *)a2 = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v6 = v36;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = v6;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
LABEL_49:
  if (v36) {
    sub_20A69F0(v36);
  }
  if (SHIBYTE(v38) < 0) {
    operator delete((void *)v37);
  }
}

void sub_19704EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  uint64_t v38 = *(std::__shared_weak_count **)(v36 - 96);
  if (v38) {
    sub_20A69F0(v38);
  }
  if (*(char *)(v36 - 65) < 0) {
    operator delete(*(void **)(v36 - 88));
  }
  _Unwind_Resume(exception_object);
}

void sub_1970598(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1979DB4(&v20);
  v43[0] = off_24E7C18;
  v43[1] = sub_1B5A1AC;
  v43[3] = v43;
  sub_1EE689C((uint64_t)v20, (uint64_t)v43);
  sub_1977868(v43);
  if (!*(unsigned char *)(a3 + 1080))
  {
    v42[0] = off_24E7C18;
    v42[1] = sub_1E03EF0;
    void v42[3] = v42;
    sub_1EE689C((uint64_t)v20, (uint64_t)v42);
    sub_1977868(v42);
  }
  if ((sub_18A4EE4(a2) & 1) == 0)
  {
    v41[0] = off_24E7C18;
    v41[1] = sub_1CB9074;
    uint64_t v41[3] = v41;
    sub_1EE689C((uint64_t)v20, (uint64_t)v41);
    sub_1977868(v41);
    v40[0] = off_24E7C18;
    v40[1] = sub_1A751E4;
    void v40[3] = v40;
    sub_1EE689C((uint64_t)v20, (uint64_t)v40);
    sub_1977868(v40);
    v39[0] = off_24E7C18;
    v39[1] = sub_1DB3568;
    uint64_t v39[3] = v39;
    sub_1EE689C((uint64_t)v20, (uint64_t)v39);
    sub_1977868(v39);
    v38[0] = off_24E7C18;
    v38[1] = sub_19DE770;
    void v38[3] = v38;
    sub_1EE689C((uint64_t)v20, (uint64_t)v38);
    sub_1977868(v38);
    v37[0] = off_24E7C18;
    v37[1] = sub_1D2DAC4;
    v37[3] = v37;
    sub_1EE689C((uint64_t)v20, (uint64_t)v37);
    sub_1977868(v37);
    v36[0] = off_24E7C18;
    v36[1] = sub_1B5A1AC;
    void v36[3] = v36;
    sub_1EE689C((uint64_t)v20, (uint64_t)v36);
    sub_1977868(v36);
    v35[0] = off_24E7C18;
    v35[1] = sub_2064B44;
    v35[3] = v35;
    sub_1EE689C((uint64_t)v20, (uint64_t)v35);
    sub_1977868(v35);
    v34[0] = off_24E7C18;
    v34[1] = sub_1BEABF4;
    double v34[3] = v34;
    sub_1EE689C((uint64_t)v20, (uint64_t)v34);
    sub_1977868(v34);
  }
  char v8 = v20;
  uint64_t v9 = (std::__shared_weak_count *)a1[1];
  uint64_t v18 = *a1;
  uint64_t v19 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  sub_1EE6AD4(v8, &v18, &v16);
  if (v17) {
    sub_20A69F0(v17);
  }
  if (v19) {
    sub_20A69F0(v19);
  }
  int v10 = sub_18A4EE4(a2);
  uint64_t v11 = (uint64_t *)v20;
  if (v10)
  {
    uint64_t v28 = a1;
    sub_1977808(v29, a3);
    sub_1970C60((uint64_t)v30, a2);
    sub_1978190((uint64_t)v31, a4);
    char v33 = 0;
    char v12 = operator new(0x5F0uLL);
    uint64_t v13 = v28;
    void *v12 = off_24E7CC8;
    v12[1] = v13;
    sub_1977808((unsigned char *)v12 + 16, (uint64_t)v29);
    sub_1970C60((uint64_t)(v12 + 138), (uint64_t)v30);
    sub_1979A18((uint64_t)(v12 + 186), (uint64_t)v31);
    char v33 = v12;
    sub_1EE6CD8(v11, (uint64_t)v32);
    sub_197B0A8(v32);
    sub_1970D8C((uint64_t)&v28);
  }
  else
  {
    uint64_t v22 = a1;
    sub_1977808(v23, a3);
    sub_1970C60((uint64_t)v24, a2);
    sub_1978190((uint64_t)v25, a4);
    char v27 = 0;
    uint64_t v14 = operator new(0x5F0uLL);
    char v15 = v22;
    void *v14 = off_24E7D48;
    v14[1] = v15;
    sub_1977808((unsigned char *)v14 + 16, (uint64_t)v23);
    sub_1970C60((uint64_t)(v14 + 138), (uint64_t)v24);
    sub_1979A18((uint64_t)(v14 + 186), (uint64_t)v25);
    char v27 = v14;
    sub_1EE6CD8(v11, (uint64_t)v26);
    sub_197B0A8(v26);
    sub_1970D8C((uint64_t)&v22);
  }
  if (v21) {
    sub_20A69F0(v21);
  }
}

void sub_1970ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  sub_1977868((void *)(v14 - 136));
  if (a14) {
    sub_20A69F0(a14);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1970C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_182B188(a1, a2);
  sub_1643AB4(v4 + 224, a2 + 224);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  sub_19774BC(a1 + 304, a2 + 304);
  sub_19774BC(a1 + 344, a2 + 344);
  return a1;
}

void sub_1970CC4(_Unwind_Exception *a1)
{
  uint64_t v4 = *(std::__shared_weak_count **)(v1 + 336);
  if (v4) {
    sub_20A69F0(v4);
  }
  if (*(unsigned char *)(v1 + 320))
  {
    long long v5 = *(std::__shared_weak_count **)(v1 + 312);
    if (v5) {
      sub_20A69F0(v5);
    }
  }
  sub_1643B60(v2);
  sub_182B32C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1970D10(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 376);
  if (v2) {
    sub_20A69F0(v2);
  }
  if (*(unsigned char *)(a1 + 360))
  {
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 352);
    if (v3) {
      sub_20A69F0(v3);
    }
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 336);
  if (v4) {
    sub_20A69F0(v4);
  }
  if (*(unsigned char *)(a1 + 320))
  {
    long long v5 = *(std::__shared_weak_count **)(a1 + 312);
    if (v5) {
      sub_20A69F0(v5);
    }
  }
  sub_1643B60(a1 + 224);

  return sub_182B32C(a1);
}

uint64_t sub_1970D8C(uint64_t a1)
{
  sub_1978228((void *)(a1 + 1480));
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 1472);
  if (v2) {
    sub_20A69F0(v2);
  }
  if (*(unsigned char *)(a1 + 1456))
  {
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 1448);
    if (v3) {
      sub_20A69F0(v3);
    }
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 1432);
  if (v4) {
    sub_20A69F0(v4);
  }
  if (*(unsigned char *)(a1 + 1416))
  {
    long long v5 = *(std::__shared_weak_count **)(a1 + 1408);
    if (v5) {
      sub_20A69F0(v5);
    }
  }
  sub_1643B60(a1 + 1320);
  sub_182B32C(a1 + 1096);
  if (*(unsigned char *)(a1 + 1088)) {
    sub_18988B4(a1 + 8);
  }
  return a1;
}

void *sub_1970E1C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  v6[0] = 0;
  char v7 = 0;
  sub_1978190((uint64_t)v8, a3);
  sub_1970598(a1, a2, (uint64_t)v6, (uint64_t)v8);
  double result = sub_1978228(v8);
  if (v7) {
    return (void *)sub_18988B4((uint64_t)v6);
  }
  return result;
}

void sub_1970EBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1978228((void *)(v2 - 72));
  if (LOBYTE(STACK[0x440])) {
    sub_18988B4((uint64_t)va);
  }
  _Unwind_Resume(a1);
}

void *sub_1970EE8(uint64_t a1, uint64_t a2)
{
  return sub_497CC0((void *)(a1 + 1496), a2);
}

uint64_t sub_1970EF0(uint64_t a1)
{
  *(_OWORD *)a1 = xmmword_2171800;
  *(_OWORD *)(a1 + 16) = xmmword_2171810;
  *(_OWORD *)(a1 + 32) = xmmword_2171820;
  *(_DWORD *)(a1 + 48) = 16843009;
  *(unsigned char *)(a1 + 52) = 1;
  *(_WORD *)(a1 + 53) = 0;
  *(unsigned char *)(a1 + 55) = 0;
  *(_OWORD *)(a1 + 56) = xmmword_2171830;
  *(void *)(a1 + 72) = 0x4170000042480000;
  *(_DWORD *)(a1 + 80) = 8;
  *(unsigned char *)(a1 + 84) = 1;
  *(void *)(a1 + 88) = 0x3FD999999999999ALL;
  *(void *)(a1 + 96) = 0x10000003CLL;
  *(_OWORD *)(a1 + 104) = xmmword_2171840;
  *(_OWORD *)(a1 + 120) = xmmword_2171850;
  *(_OWORD *)(a1 + 136) = xmmword_2171860;
  *(_OWORD *)(a1 + 152) = xmmword_2171870;
  *(_DWORD *)(a1 + 168) = 16777473;
  sub_5E5C(v164, "en");
  sub_5E5C(v166, "es");
  sub_5E5C(&v167, "de");
  sub_5E5C(v168, "fr");
  sub_5E5C(v169, "it");
  sub_5E5C(v170, "no");
  sub_5E5C(v171, "nb");
  sub_5E5C(v172, "fi");
  sub_5E5C(v173, "pt");
  sub_5E5C(v174, "nl");
  sub_5E5C(v175, "sv");
  sub_5E5C(&v176, "is");
  sub_5E5C(v177, "da");
  sub_5E5C(v178, "zh");
  sub_5E5C(v179, "ja");
  sub_5E5C(v180, "vi");
  sub_5E5C(v181, "th");
  sub_5E5C(&v182, "ms");
  sub_5E5C(v183, "tr");
  sub_5E5C(v184, "fil");
  sub_5E5C(v185, "bg");
  sub_5E5C(v186, "ru");
  sub_5E5C(v187, "ro");
  sub_5E5C(&v188, "pl");
  sub_5E5C(v189, "uk");
  sub_5E5C(v190, "cs");
  sub_5E5C(v191, "el");
  sub_5E5C(v192, "cy");
  sub_5E5C(v193, "hu");
  sub_5E5C(v194, "sk");
  sub_5E5C(v195, "hr");
  sub_5E5C(v196, "et");
  sub_5E5C(v197, "lt");
  sub_5E5C(v198, "lv");
  sub_5E5C(&v199, "mk");
  sub_5E5C(v200, "ca");
  sub_5E5C(v201, "bs");
  sub_5E5C(v202, "sr");
  sub_5E5C(v203, "sq");
  sub_5E5C(v204, "hi");
  sub_5E5C(v205, "id");
  sub_5E5C(v206, "jv");
  sub_5E5C(v207, "fj");
  sub_5E5C(v208, "my");
  sub_5E5C(&v209, "km");
  sub_5E5C(v210, "khm");
  sub_5E5C(v211, "bn");
  sub_5E5C(v212, "ben");
  sub_5E5C(v213, "dz");
  sub_5E5C(v214, "ne");
  sub_5E5C(v215, "ur");
  sub_5E5C(v216, "kk");
  sub_5E5C(v217, "tk");
  sub_5E5C(v218, "uz");
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)&long long v121 = a1 + 176;
  BYTE8(v121) = 0;
  uint64_t v2 = (char *)operator new(0x510uLL);
  *(void *)(a1 + 192) = v2 + 1296;
  *(void *)(a1 + 176) = v2;
  *(void *)(a1 + 184) = v2;
  *(void *)(a1 + 184) = sub_18914E4(a1 + 192, (long long *)v164, &v219, v2);
  uint64_t v3 = 162;
  do
  {
    if (SHIBYTE(v164[v3 - 1]) < 0) {
      operator delete(*(void **)&v163[v3 * 8 + 24]);
    }
    v3 -= 3;
  }
  while (v3 * 8);
  sub_5E5C(v164, "IL");
  sub_5E5C(v166, "TN");
  sub_5E5C(&v167, "MA");
  sub_5E5C(v168, "IQ");
  sub_5E5C(v169, "IR");
  sub_5E5C(v170, "JO");
  sub_5E5C(v171, "LB");
  sub_5E5C(v172, "LY");
  sub_5E5C(v173, "EG");
  sub_5E5C(v174, "OM");
  sub_5E5C(v175, "YE");
  sub_5E5C(&v176, "SA");
  sub_5E5C(v177, "SY");
  sub_5E5C(v178, "BH");
  sub_5E5C(v179, "QA");
  sub_5E5C(v180, "AE");
  sub_5E5C(v181, "KW");
  sub_5E5C(&v182, "EH");
  sub_5E5C(v183, "NE");
  sub_5E5C(v184, "ML");
  sub_5E5C(v185, "TD");
  sub_5E5C(v186, "MR");
  sub_5E5C(v187, "SD");
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)&long long v121 = a1 + 200;
  BYTE8(v121) = 0;
  uint64_t v4 = (char *)operator new(0x228uLL);
  *(void *)(a1 + 216) = v4 + 552;
  *(void *)(a1 + 200) = v4;
  *(void *)(a1 + 208) = v4;
  *(void *)(a1 + 208) = sub_18914E4(a1 + 216, (long long *)v164, &v188, v4);
  uint64_t v5 = 69;
  do
  {
    if (SHIBYTE(v164[v5 - 1]) < 0) {
      operator delete(*(void **)&v163[v5 * 8 + 24]);
    }
    v5 -= 3;
  }
  while (v5 * 8);
  sub_5E5C(v164, "6_7_4");
  sub_5E5C(v166, "7_7_4");
  sub_5E5C(&v167, "8_7_4");
  sub_5E5C(v168, "9_7_4");
  sub_5E5C(v169, "10_7_4");
  sub_5E5C(v170, "8_8_4");
  sub_5E5C(v171, "9_8_4");
  sub_5E5C(v172, "10_8_4");
  sub_5E5C(v173, "8_9_4");
  sub_5E5C(v174, "9_9_4");
  sub_5E5C(v175, "10_9_4");
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)&long long v121 = a1 + 224;
  BYTE8(v121) = 0;
  uint64_t v6 = (char *)operator new(0x108uLL);
  *(void *)(a1 + 240) = v6 + 264;
  *(void *)(a1 + 224) = v6;
  *(void *)(a1 + 232) = v6;
  *(void *)(a1 + 232) = sub_18914E4(a1 + 240, (long long *)v164, &v176, v6);
  uint64_t v7 = 33;
  do
  {
    if (SHIBYTE(v164[v7 - 1]) < 0) {
      operator delete(*(void **)&v163[v7 * 8 + 24]);
    }
    v7 -= 3;
  }
  while (v7 * 8);
  *(_DWORD *)(a1 + 248) = 15;
  *(unsigned char *)(a1 + 252) = 1;
  *(void *)(a1 + 256) = 0x400000010;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(void *)(a1 + 312) = 0x4008000000000000;
  *(void *)(a1 + 320) = 0x100000014;
  *(_DWORD *)(a1 + 328) = 10;
  *(_WORD *)(a1 + 332) = 257;
  *(_OWORD *)(a1 + 336) = xmmword_2171880;
  *(_OWORD *)(a1 + 352) = xmmword_2171890;
  sub_5E5C(v164, "browse_subcategory_gasstations");
  sub_5E5C(v166, "browse_subcategory_parking");
  sub_5E5C(&v167, "browse_subcategory_restaurants");
  sub_5E5C(v168, "browse_subcategory_coffee_shops");
  sub_5E5C(v169, "browse_subcategory_groceries");
  *(void *)(a1 + 368) = 0;
  *(void *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = 0;
  *(void *)&long long v121 = a1 + 368;
  BYTE8(v121) = 0;
  char v8 = (char *)operator new(0x78uLL);
  *(void *)(a1 + 368) = v8;
  *(void *)(a1 + 376) = v8;
  *(void *)(a1 + 384) = v8 + 120;
  uint64_t v9 = 0;
  *(void *)(a1 + 376) = sub_18914E4(a1 + 384, (long long *)v164, (long long *)v170, v8);
  do
  {
    if (SHIBYTE(v169[v9 + 2]) < 0) {
      operator delete((void *)v169[v9]);
    }
    v9 -= 3;
  }
  while (v9 != -15);
  sub_5E5C(v164, "browse_subcategory_gasstations");
  sub_5E5C(v166, "browse_subcategory_parking");
  sub_5E5C(&v167, "browse_subcategory_restaurants");
  sub_5E5C(v168, "browse_subcategory_coffee_shops");
  sub_5E5C(v169, "browse_subcategory_groceries");
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = 0;
  *(void *)&long long v121 = a1 + 392;
  BYTE8(v121) = 0;
  int v10 = (char *)operator new(0x78uLL);
  *(void *)(a1 + 392) = v10;
  *(void *)(a1 + 400) = v10;
  *(void *)(a1 + 408) = v10 + 120;
  uint64_t v11 = 0;
  *(void *)(a1 + 400) = sub_18914E4(a1 + 408, (long long *)v164, (long long *)v170, v10);
  do
  {
    if (SHIBYTE(v169[v11 + 2]) < 0) {
      operator delete((void *)v169[v11]);
    }
    v11 -= 3;
  }
  while (v11 != -15);
  sub_5E5C(v164, "browse_subcategory_evcharger_carplay");
  sub_5E5C(v166, "browse_subcategory_parking");
  sub_5E5C(&v167, "browse_subcategory_restaurants");
  sub_5E5C(v168, "browse_subcategory_coffee_shops");
  sub_5E5C(v169, "browse_subcategory_groceries");
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = 0;
  *(void *)&long long v121 = a1 + 416;
  BYTE8(v121) = 0;
  char v12 = (char *)operator new(0x78uLL);
  *(void *)(a1 + 416) = v12;
  *(void *)(a1 + 424) = v12;
  *(void *)(a1 + 432) = v12 + 120;
  uint64_t v13 = 0;
  *(void *)(a1 + 424) = sub_18914E4(a1 + 432, (long long *)v164, (long long *)v170, v12);
  do
  {
    if (SHIBYTE(v169[v13 + 2]) < 0) {
      operator delete((void *)v169[v13]);
    }
    v13 -= 3;
  }
  while (v13 != -15);
  sub_5E5C(v164, "browse_subcategory_gasstations");
  sub_5E5C(v166, "browse_subcategory_parking");
  sub_5E5C(&v167, "browse_subcategory_restaurants");
  sub_5E5C(v168, "browse_subcategory_coffee_shops");
  sub_5E5C(v169, "browse_subcategory_groceries");
  *(void *)(a1 + 440) = 0;
  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 456) = 0;
  *(void *)&long long v121 = a1 + 440;
  BYTE8(v121) = 0;
  uint64_t v14 = (char *)operator new(0x78uLL);
  *(void *)(a1 + 440) = v14;
  *(void *)(a1 + 448) = v14;
  *(void *)(a1 + 456) = v14 + 120;
  uint64_t v15 = 0;
  *(void *)(a1 + 448) = sub_18914E4(a1 + 456, (long long *)v164, (long long *)v170, v14);
  do
  {
    if (SHIBYTE(v169[v15 + 2]) < 0) {
      operator delete((void *)v169[v15]);
    }
    v15 -= 3;
  }
  while (v15 != -15);
  sub_5E5C(v164, "active.hiking");
  sub_5E5C(v166, "active.parks.trailhead");
  sub_5E5C(&v167, "hotelstravel.campgrounds");
  sub_5E5C(v168, "hotelstravel.visitorcenters");
  sub_1976294(a1 + 464, (const void **)v164, 4);
  for (uint64_t i = 0; i != -12; i -= 3)
  {
    if (SHIBYTE(v168[i + 2]) < 0) {
      operator delete((void *)v168[i]);
    }
  }
  sub_5E5C(v164, "active");
  sub_5E5C(v166, "emergencyrooms");
  sub_5E5C(&v167, "hospitals");
  sub_5E5C(v168, "urgent_care");
  sub_5E5C(v169, "airports");
  sub_5E5C(v170, "skiresorts");
  sub_5E5C(v171, "transport");
  sub_5E5C(v172, "touristattraction");
  sub_5E5C(v173, "physicalfeature");
  sub_1976294(a1 + 488, (const void **)v164, 9);
  for (uint64_t j = 0; j != -27; j -= 3)
  {
    if (SHIBYTE(v173[j + 2]) < 0) {
      operator delete((void *)v173[j]);
    }
  }
  sub_5E5C(v164, "kids_activities");
  sub_5E5C(v166, "parks");
  sub_5E5C(&v167, "playgrounds");
  sub_5E5C(v168, "sportscomplex");
  sub_5E5C(v169, "statue");
  sub_5E5C(v170, "zoos");
  sub_1976294(a1 + 512, (const void **)v164, 6);
  for (uint64_t k = 0; k != -18; k -= 3)
  {
    if (SHIBYTE(v170[k + 2]) < 0) {
      operator delete((void *)v170[k]);
    }
  }
  sub_5E5C(v164, "food");
  sub_5E5C(v166, "restaurants");
  sub_5E5C(&v167, "financialservices");
  sub_5E5C(v168, "localservices");
  sub_5E5C(v169, "homedecor");
  sub_5E5C(v170, "beautysvc");
  sub_5E5C(v171, "officebuilding");
  sub_5E5C(v172, "supermarket");
  sub_5E5C(v173, "flowers");
  sub_5E5C(v174, "homeandgarden");
  sub_5E5C(v175, "servicestations");
  sub_5E5C(&v176, "parks");
  sub_5E5C(v177, "playgrounds");
  sub_5E5C(v178, "sportscomplex");
  sub_5E5C(v179, "trainstations");
  sub_1976294(a1 + 536, (const void **)v164, 15);
  uint64_t v19 = 45;
  do
  {
    if (SHIBYTE(v164[v19 - 1]) < 0) {
      operator delete(*(void **)&v163[v19 * 8 + 24]);
    }
    v19 -= 3;
  }
  while (v19 * 8);
  *(unsigned char *)(a1 + 560) = 1;
  *(_OWORD *)(a1 + 564) = xmmword_21718A0;
  *(_OWORD *)(a1 + 580) = xmmword_21718B0;
  *(_DWORD *)(a1 + 596) = 30;
  *(void *)(a1 + 600) = 0x4000000000000000;
  *(_OWORD *)(a1 + 608) = xmmword_21718C0;
  *(_DWORD *)(a1 + 624) = 2;
  *(unsigned char *)(a1 + 628) = 1;
  sub_5E5C(v118, "ranker_en_model_v3");
  sub_5E5C(&v150, "CA");
  sub_5E5C(v151, "GB");
  sub_5E5C(v152, "AU");
  sub_5E5C(&v153, "NZ");
  sub_5E5C(v154, "IE");
  sub_5E5C(v155, "ZA");
  long long v111 = 0uLL;
  uint64_t v112 = 0;
  v164[0] = &v111;
  LOBYTE(v164[1]) = 0;
  *(void *)&long long v111 = operator new(0x90uLL);
  *((void *)&v111 + 1) = v111;
  uint64_t v112 = v111 + 144;
  *((void *)&v111 + 1) = sub_18914E4((uint64_t)&v112, &v150, &__dst, (char *)v111);
  sub_1976318(&__dst, (long long *)v118, (uint64_t *)&v111);
  sub_5E5C(&v108, "ranker_us_model_v2");
  sub_5E5C(v102, "US");
  long long v105 = 0uLL;
  uint64_t v106 = 0;
  v164[0] = &v105;
  LOBYTE(v164[1]) = 0;
  *(void *)&long long v105 = operator new(0x18uLL);
  *((void *)&v105 + 1) = v105;
  uint64_t v106 = v105 + 24;
  *((void *)&v105 + 1) = sub_18914E4((uint64_t)&v106, (long long *)v102, (long long *)v104, (char *)v105);
  sub_1976318(v158, &v108, (uint64_t *)&v105);
  sub_5E5C(&v99, "ranker_eu_model_v2");
  sub_5E5C(&v121, "DE");
  sub_5E5C(v122, "FR");
  sub_5E5C(&v123, "BE");
  sub_5E5C(v124, "CH");
  sub_5E5C(v125, "AT");
  sub_5E5C(v126, "ES");
  sub_5E5C(v127, "IT");
  sub_5E5C(v128, "NL");
  sub_5E5C(v129, "PT");
  sub_5E5C(v130, "NO");
  sub_5E5C(v131, "DK");
  sub_5E5C(v132, "FI");
  sub_5E5C(v133, "SE");
  long long v148 = 0uLL;
  uint64_t v149 = 0;
  v164[0] = &v148;
  LOBYTE(v164[1]) = 0;
  *(void *)&long long v148 = operator new(0x138uLL);
  *((void *)&v148 + 1) = v148;
  uint64_t v149 = v148 + 312;
  *((void *)&v148 + 1) = sub_18914E4((uint64_t)&v149, &v121, &v134, (char *)v148);
  sub_1976318(v160, &v99, (uint64_t *)&v148);
  sub_5E5C(&v95, "ranker_cn_model_v2");
  sub_5E5C(&v146, "CN");
  long long v93 = 0uLL;
  uint64_t v94 = 0;
  v164[0] = &v93;
  LOBYTE(v164[1]) = 0;
  *(void *)&long long v93 = operator new(0x18uLL);
  *((void *)&v93 + 1) = v93;
  uint64_t v94 = v93 + 24;
  *((void *)&v93 + 1) = sub_18914E4((uint64_t)&v94, &v146, &v148, (char *)v93);
  sub_1976318(v161, &v95, (uint64_t *)&v93);
  sub_5E5C(&v91, "ranker_cjk_model");
  sub_5E5C(&v138, "JP");
  sub_5E5C(v139, "MO");
  sub_5E5C(&v140, "PH");
  sub_5E5C(v141, "MY");
  sub_5E5C(v142, "TW");
  sub_5E5C(v143, "HK");
  long long v144 = 0uLL;
  uint64_t v145 = 0;
  v164[0] = &v144;
  LOBYTE(v164[1]) = 0;
  *(void *)&long long v144 = operator new(0x90uLL);
  *((void *)&v144 + 1) = v144;
  uint64_t v145 = v144 + 144;
  *((void *)&v144 + 1) = sub_18914E4((uint64_t)&v145, &v138, &v144, (char *)v144);
  sub_1976318(v162, &v91, (uint64_t *)&v144);
  sub_5E5C(__p, "ranker_row_model_v3");
  sub_5E5C(v164, "AR");
  sub_5E5C(v166, "BR");
  sub_5E5C(&v167, "MX");
  sub_5E5C(v168, "CL");
  sub_5E5C(v169, "CZ");
  sub_5E5C(v170, "GR");
  sub_5E5C(v171, "HR");
  sub_5E5C(v172, "HU");
  sub_5E5C(v173, "ID");
  sub_5E5C(v174, "IN");
  sub_5E5C(v175, "PL");
  sub_5E5C(&v176, "RO");
  sub_5E5C(v177, "SG");
  sub_5E5C(v178, "SK");
  sub_5E5C(v179, "TH");
  sub_5E5C(v180, "TR");
  sub_5E5C(v181, "VN");
  uint64_t v86 = 0;
  uint64_t v87 = 0;
  char v88 = 0;
  uint64_t v86 = (char *)operator new(0x198uLL);
  uint64_t v87 = v86;
  char v88 = v86 + 408;
  uint64_t v87 = sub_18914E4((uint64_t)&v88, (long long *)v164, &v182, v86);
  sub_1976318(v163, (long long *)__p, (uint64_t *)&v86);
  *(void *)(a1 + 632) = 0;
  *(void *)(a1 + 640) = 0;
  *(void *)(a1 + 648) = 0;
  v84[0] = (void *)(a1 + 632);
  LOBYTE(v84[1]) = 0;
  uint64_t v20 = (char *)operator new(0x120uLL);
  *(void *)(a1 + 632) = v20;
  *(void *)(a1 + 640) = v20;
  *(void *)(a1 + 648) = v20 + 288;
  *(void *)(a1 + 640) = sub_19763B0(a1 + 648, (uint64_t)&__dst, (uint64_t)v164, (uint64_t)v20);
  uint64_t v21 = 36;
  do
  {
    v84[0] = &v155[v21];
    sub_1891624((void ***)v84);
    if (SHIBYTE(v154[v21 + 2]) < 0) {
      operator delete((void *)v154[v21]);
    }
    v21 -= 6;
  }
  while (v21 * 8);
  v84[0] = &v86;
  sub_1891624((void ***)v84);
  uint64_t v22 = 51;
  do
  {
    if (SHIBYTE(v164[v22 - 1]) < 0) {
      operator delete(*(void **)&v163[v22 * 8 + 24]);
    }
    v22 -= 3;
  }
  while (v22 * 8);
  if (v90 < 0) {
    operator delete(__p[0]);
  }
  v164[0] = &v144;
  sub_1891624((void ***)v164);
  for (uint64_t m = 0; m != -18; m -= 3)
  {
    if (SHIBYTE(v143[m + 2]) < 0) {
      operator delete((void *)v143[m]);
    }
  }
  if (SHIBYTE(v92) < 0) {
    operator delete((void *)v91);
  }
  v164[0] = &v93;
  sub_1891624((void ***)v164);
  if (SHIBYTE(v147) < 0) {
    operator delete((void *)v146);
  }
  if (SHIBYTE(v96) < 0) {
    operator delete((void *)v95);
  }
  v164[0] = &v148;
  sub_1891624((void ***)v164);
  uint64_t v24 = 39;
  do
  {
    if (*((char *)&v122[v24 - 1] - 1) < 0) {
      operator delete((void *)v120[v24]);
    }
    v24 -= 3;
  }
  while (v24 * 8);
  if (SHIBYTE(v100) < 0) {
    operator delete((void *)v99);
  }
  v164[0] = &v105;
  sub_1891624((void ***)v164);
  if (v103 < 0) {
    operator delete(v102[0]);
  }
  if (SHIBYTE(v109) < 0) {
    operator delete((void *)v108);
  }
  v164[0] = &v111;
  sub_1891624((void ***)v164);
  for (uint64_t n = 0; n != -18; n -= 3)
  {
    if (SHIBYTE(v155[n + 2]) < 0) {
      operator delete((void *)v155[n]);
    }
  }
  if ((v119[0] & 0x80000000) != 0) {
    operator delete(v118[0]);
  }
  sub_5E5C(&v111, "speller-enus-esus");
  sub_5E5C(&v105, "US");
  long long v108 = 0uLL;
  uint64_t v109 = 0;
  v164[0] = &v108;
  LOBYTE(v164[1]) = 0;
  *(void *)&long long v108 = operator new(0x18uLL);
  *((void *)&v108 + 1) = v108;
  uint64_t v109 = v108 + 24;
  *((void *)&v108 + 1) = sub_18914E4((uint64_t)&v109, &v105, (long long *)v107, (char *)v108);
  sub_1976318(&v121, &v111, (uint64_t *)&v108);
  sub_5E5C(v102, "speller-GB");
  sub_5E5C(&v148, "GB");
  long long v99 = 0uLL;
  uint64_t v100 = 0;
  v164[0] = &v99;
  LOBYTE(v164[1]) = 0;
  *(void *)&long long v99 = operator new(0x18uLL);
  *((void *)&v99 + 1) = v99;
  uint64_t v100 = v99 + 24;
  *((void *)&v99 + 1) = sub_18914E4((uint64_t)&v100, &v148, &v150, (char *)v99);
  sub_1976318(&v123, (long long *)v102, (uint64_t *)&v99);
  sub_5E5C(&v95, "speller-AU");
  sub_5E5C(&v138, "AU");
  sub_5E5C(v139, "NZ");
  long long v93 = 0uLL;
  uint64_t v94 = 0;
  v164[0] = &v93;
  LOBYTE(v164[1]) = 0;
  *(void *)&long long v93 = operator new(0x30uLL);
  *((void *)&v93 + 1) = v93;
  uint64_t v94 = v93 + 48;
  *((void *)&v93 + 1) = sub_18914E4((uint64_t)&v94, &v138, &v140, (char *)v93);
  sub_1976318(v125, &v95, (uint64_t *)&v93);
  sub_5E5C(&v146, "speller-CA");
  sub_5E5C(&v144, "CA");
  long long v91 = 0uLL;
  uint64_t v92 = 0;
  v164[0] = &v91;
  LOBYTE(v164[1]) = 0;
  *(void *)&long long v91 = operator new(0x18uLL);
  *((void *)&v91 + 1) = v91;
  uint64_t v92 = v91 + 24;
  *((void *)&v91 + 1) = sub_18914E4((uint64_t)&v92, &v144, &v146, (char *)v91);
  sub_1976318(v127, &v146, (uint64_t *)&v91);
  sub_5E5C(__p, "speller-EU");
  sub_5E5C(&__dst, "ES");
  sub_5E5C(v157, "IT");
  sub_5E5C(v158, "NL");
  uint64_t v86 = 0;
  uint64_t v87 = 0;
  char v88 = 0;
  v164[0] = &v86;
  LOBYTE(v164[1]) = 0;
  uint64_t v86 = (char *)operator new(0x48uLL);
  uint64_t v87 = v86;
  char v88 = v86 + 72;
  uint64_t v87 = sub_18914E4((uint64_t)&v88, &__dst, &v159, v86);
  sub_1976318(v129, (long long *)__p, (uint64_t *)&v86);
  sub_5E5C(v84, "speller-FR-DE");
  sub_5E5C(v118, "FR");
  sub_5E5C(v120, "DE");
  uint64_t v81 = 0;
  uint64_t v82 = 0;
  uint64_t v83 = 0;
  v164[0] = &v81;
  LOBYTE(v164[1]) = 0;
  uint64_t v81 = (char *)operator new(0x30uLL);
  uint64_t v82 = v81;
  uint64_t v83 = v81 + 48;
  uint64_t v82 = sub_18914E4((uint64_t)&v83, (long long *)v118, &v121, v81);
  sub_1976318(v131, (long long *)v84, (uint64_t *)&v81);
  sub_5E5C(v79, "speller-EU-offline-mixed-reduced");
  sub_5E5C(&v150, "AT");
  sub_5E5C(v151, "CH");
  sub_5E5C(v152, "BE");
  char v76 = 0;
  long long v77 = 0;
  char v78 = 0;
  v164[0] = &v76;
  LOBYTE(v164[1]) = 0;
  char v76 = (char *)operator new(0x48uLL);
  long long v77 = v76;
  char v78 = v76 + 72;
  long long v77 = sub_18914E4((uint64_t)&v78, &v150, &v153, v76);
  sub_1976318(v133, (long long *)v79, (uint64_t *)&v76);
  sub_5E5C(v74, "speller-GR");
  sub_5E5C(v116, "GR");
  char v71 = 0;
  long long v72 = 0;
  char v73 = 0;
  v164[0] = &v71;
  LOBYTE(v164[1]) = 0;
  char v71 = (char *)operator new(0x18uLL);
  long long v72 = v71;
  char v73 = v71 + 24;
  long long v72 = sub_18914E4((uint64_t)&v73, (long long *)v116, (long long *)v118, v71);
  sub_1976318(v135, (long long *)v74, (uint64_t *)&v71);
  sub_5E5C(&v69, "speller-JP");
  sub_5E5C(&v114, "JP");
  long long v67 = 0uLL;
  uint64_t v68 = 0;
  v164[0] = &v67;
  LOBYTE(v164[1]) = 0;
  *(void *)&long long v67 = operator new(0x18uLL);
  *((void *)&v67 + 1) = v67;
  uint64_t v68 = v67 + 24;
  *((void *)&v67 + 1) = sub_18914E4((uint64_t)&v68, &v114, (long long *)v116, (char *)v67);
  sub_1976318(v136, &v69, (uint64_t *)&v67);
  sub_5E5C(v65, "speller-ROW");
  sub_5E5C(v164, "ZA");
  sub_5E5C(v166, "IN");
  sub_5E5C(&v167, "PT");
  sub_5E5C(v168, "FI");
  sub_5E5C(v169, "SE");
  sub_5E5C(v170, "AD");
  sub_5E5C(v171, "MC");
  sub_5E5C(v172, "LU");
  sub_5E5C(v173, "VA");
  sub_5E5C(v174, "IS");
  sub_5E5C(v175, "GL");
  sub_5E5C(&v176, "FO");
  sub_5E5C(v177, "IE");
  sub_5E5C(v178, "NO");
  sub_5E5C(v179, "DK");
  sub_5E5C(v180, "AR");
  sub_5E5C(v181, "BR");
  sub_5E5C(&v182, "MX");
  sub_5E5C(v183, "CL");
  sub_5E5C(v184, "TW");
  sub_5E5C(v185, "HK");
  sub_5E5C(v186, "MO");
  sub_5E5C(v187, "PL");
  sub_5E5C(&v188, "HR");
  sub_5E5C(v189, "RO");
  sub_5E5C(v190, "SK");
  sub_5E5C(v191, "CZ");
  sub_5E5C(v192, "HU");
  sub_5E5C(v193, "VN");
  sub_5E5C(v194, "TH");
  sub_5E5C(v195, "SG");
  sub_5E5C(v196, "MY");
  sub_5E5C(v197, "PH");
  sub_5E5C(v198, "TR");
  long long v62 = 0;
  char v63 = 0;
  int v64 = 0;
  long long v97 = &v62;
  char v98 = 0;
  long long v62 = (char *)operator new(0x330uLL);
  char v63 = v62;
  int v64 = v62 + 816;
  char v63 = sub_18914E4((uint64_t)&v64, (long long *)v164, &v199, v62);
  sub_1976318(v137, (long long *)v65, (uint64_t *)&v62);
  *(void *)(a1 + 656) = 0;
  *(void *)(a1 + 664) = 0;
  *(void *)(a1 + 672) = 0;
  long long v97 = (char **)(a1 + 656);
  char v98 = 0;
  char v26 = (char *)operator new(0x1E0uLL);
  *(void *)(a1 + 656) = v26;
  *(void *)(a1 + 664) = v26;
  *(void *)(a1 + 672) = v26 + 480;
  *(void *)(a1 + 664) = sub_19763B0(a1 + 672, (uint64_t)&v121, (uint64_t)&v138, (uint64_t)v26);
  uint64_t v27 = 60;
  do
  {
    long long v97 = (char **)&v120[v27];
    sub_1891624((void ***)&v97);
    if ((char)v119[v27 * 8] < 0) {
      operator delete(v118[v27]);
    }
    v27 -= 6;
  }
  while (v27 * 8);
  long long v97 = &v62;
  sub_1891624((void ***)&v97);
  uint64_t v28 = 102;
  do
  {
    if (SHIBYTE(v164[v28 - 1]) < 0) {
      operator delete(*(void **)&v163[v28 * 8 + 24]);
    }
    v28 -= 3;
  }
  while (v28 * 8);
  if (v66 < 0) {
    operator delete(v65[0]);
  }
  v164[0] = &v67;
  sub_1891624((void ***)v164);
  if (SHIBYTE(v115) < 0) {
    operator delete((void *)v114);
  }
  if (SHIBYTE(v70) < 0) {
    operator delete((void *)v69);
  }
  v164[0] = &v71;
  sub_1891624((void ***)v164);
  if (v117 < 0) {
    operator delete(v116[0]);
  }
  if (v75 < 0) {
    operator delete(v74[0]);
  }
  v164[0] = &v76;
  sub_1891624((void ***)v164);
  for (iuint64_t i = 0; ii != -9; ii -= 3)
  {
    if (SHIBYTE(v152[ii + 2]) < 0) {
      operator delete((void *)v152[ii]);
    }
  }
  if (v80 < 0) {
    operator delete(v79[0]);
  }
  v164[0] = &v81;
  sub_1891624((void ***)v164);
  for (juint64_t j = 0; jj != -6; jj -= 3)
  {
    if (SHIBYTE(v120[jj + 2]) < 0) {
      operator delete((void *)v120[jj]);
    }
  }
  if (v85 < 0) {
    operator delete(v84[0]);
  }
  v164[0] = &v86;
  sub_1891624((void ***)v164);
  for (kuint64_t k = 0; kk != -9; kk -= 3)
  {
    if (SHIBYTE(v158[kk + 2]) < 0) {
      operator delete((void *)v158[kk]);
    }
  }
  if (v90 < 0) {
    operator delete(__p[0]);
  }
  v164[0] = &v91;
  sub_1891624((void ***)v164);
  if (SHIBYTE(v145) < 0) {
    operator delete((void *)v144);
  }
  if (SHIBYTE(v147) < 0) {
    operator delete((void *)v146);
  }
  v164[0] = &v93;
  sub_1891624((void ***)v164);
  for (muint64_t m = 0; mm != -6; mm -= 3)
  {
    if (SHIBYTE(v139[mm + 2]) < 0) {
      operator delete((void *)v139[mm]);
    }
  }
  if (SHIBYTE(v96) < 0) {
    operator delete((void *)v95);
  }
  v164[0] = &v99;
  sub_1891624((void ***)v164);
  if (SHIBYTE(v149) < 0) {
    operator delete((void *)v148);
  }
  if (v103 < 0) {
    operator delete(v102[0]);
  }
  v164[0] = &v108;
  sub_1891624((void ***)v164);
  if (SHIBYTE(v106) < 0) {
    operator delete((void *)v105);
  }
  if (SHIBYTE(v112) < 0) {
    operator delete((void *)v111);
  }
  sub_5E5C(&v148, "speller-enus-esus");
  sub_5E5C(&v121, "from_ENUSESUS");
  sub_5E5C(v122, "to_ENUSESUS");
  long long v95 = 0uLL;
  uint64_t v96 = 0;
  *(void *)&long long __dst = &v95;
  BYTE8(__dst) = 0;
  *(void *)&long long v95 = operator new(0x30uLL);
  *((void *)&v95 + 1) = v95;
  uint64_t v96 = v95 + 48;
  *((void *)&v95 + 1) = sub_18914E4((uint64_t)&v96, &v121, &v123, (char *)v95);
  sub_1976318(v164, &v148, (uint64_t *)&v95);
  sub_5E5C(&v93, "speller-GB");
  sub_5E5C(&__dst, "from_SOURCE");
  sub_5E5C(v157, "to_TARGET");
  long long v146 = 0uLL;
  uint64_t v147 = 0;
  *(void *)&long long v150 = &v146;
  BYTE8(v150) = 0;
  *(void *)&long long v146 = operator new(0x30uLL);
  *((void *)&v146 + 1) = v146;
  uint64_t v147 = v146 + 48;
  *((void *)&v146 + 1) = sub_18914E4((uint64_t)&v147, &__dst, (long long *)v158, (char *)v146);
  sub_1976318(&v167, &v93, (uint64_t *)&v146);
  sub_5E5C(&v91, "speller-AU");
  sub_5E5C(&v150, "from_AU");
  sub_5E5C(v151, "to_AU");
  long long v144 = 0uLL;
  uint64_t v145 = 0;
  *(void *)&long long v138 = &v144;
  BYTE8(v138) = 0;
  *(void *)&long long v144 = operator new(0x30uLL);
  *((void *)&v144 + 1) = v144;
  uint64_t v145 = v144 + 48;
  *((void *)&v144 + 1) = sub_18914E4((uint64_t)&v145, &v150, (long long *)v152, (char *)v144);
  sub_1976318(v169, &v91, (uint64_t *)&v144);
  sub_5E5C(__p, "speller-CA");
  sub_5E5C(&v138, "from_CA");
  sub_5E5C(v139, "to_CA");
  uint64_t v86 = 0;
  uint64_t v87 = 0;
  char v88 = 0;
  v118[0] = &v86;
  LOBYTE(v118[1]) = 0;
  uint64_t v86 = (char *)operator new(0x30uLL);
  uint64_t v87 = v86;
  char v88 = v86 + 48;
  uint64_t v87 = sub_18914E4((uint64_t)&v88, &v138, &v140, v86);
  sub_1976318(v171, (long long *)__p, (uint64_t *)&v86);
  sub_5E5C(v84, "speller-EU");
  sub_5E5C(v118, "from_EU");
  sub_5E5C(v120, "to_EU");
  uint64_t v81 = 0;
  uint64_t v82 = 0;
  uint64_t v83 = 0;
  *(void *)&long long v111 = &v81;
  BYTE8(v111) = 0;
  uint64_t v81 = (char *)operator new(0x30uLL);
  uint64_t v82 = v81;
  uint64_t v83 = v81 + 48;
  uint64_t v82 = sub_18914E4((uint64_t)&v83, (long long *)v118, &v121, v81);
  sub_1976318(v173, (long long *)v84, (uint64_t *)&v81);
  sub_5E5C(v79, "speller-GR");
  sub_5E5C(&v111, "from_SOURCE");
  sub_5E5C(v113, "to_TARGET");
  char v76 = 0;
  long long v77 = 0;
  char v78 = 0;
  *(void *)&long long v108 = &v76;
  BYTE8(v108) = 0;
  char v76 = (char *)operator new(0x30uLL);
  long long v77 = v76;
  char v78 = v76 + 48;
  long long v77 = sub_18914E4((uint64_t)&v78, &v111, &v114, v76);
  sub_1976318(v175, (long long *)v79, (uint64_t *)&v76);
  sub_5E5C(v74, "speller-JP");
  sub_5E5C(&v108, "from_SOURCE");
  sub_5E5C(v110, "to_TARGET");
  char v71 = 0;
  long long v72 = 0;
  char v73 = 0;
  *(void *)&long long v105 = &v71;
  BYTE8(v105) = 0;
  char v71 = (char *)operator new(0x30uLL);
  long long v72 = v71;
  char v73 = v71 + 48;
  long long v72 = sub_18914E4((uint64_t)&v73, &v108, &v111, v71);
  sub_1976318(v177, (long long *)v74, (uint64_t *)&v71);
  sub_5E5C(v116, "speller-FR-DE");
  sub_5E5C(&v105, "from_DEFRAC");
  sub_5E5C(v107, "to_DEFRAC");
  long long v69 = 0uLL;
  uint64_t v70 = 0;
  v102[0] = &v69;
  LOBYTE(v102[1]) = 0;
  *(void *)&long long v69 = operator new(0x30uLL);
  *((void *)&v69 + 1) = v69;
  uint64_t v70 = v69 + 48;
  *((void *)&v69 + 1) = sub_18914E4((uint64_t)&v70, &v105, &v108, (char *)v69);
  sub_1976318(v179, (long long *)v116, (uint64_t *)&v69);
  sub_5E5C(&v67, "speller-EU-offline-mixed-reduced");
  sub_5E5C(v102, "from_SOURCE");
  sub_5E5C(v104, "to_TARGET");
  long long v114 = 0uLL;
  uint64_t v115 = 0;
  *(void *)&long long v99 = &v114;
  BYTE8(v99) = 0;
  *(void *)&long long v114 = operator new(0x30uLL);
  *((void *)&v114 + 1) = v114;
  uint64_t v115 = v114 + 48;
  *((void *)&v114 + 1) = sub_18914E4((uint64_t)&v115, (long long *)v102, &v105, (char *)v114);
  sub_1976318(v181, &v67, (uint64_t *)&v114);
  sub_5E5C(v65, "speller-ROW");
  sub_5E5C(&v99, "from_GLOBAL");
  sub_5E5C(v101, "to_GLOBAL");
  long long v62 = 0;
  char v63 = 0;
  int v64 = 0;
  long long v97 = &v62;
  char v98 = 0;
  long long v62 = (char *)operator new(0x30uLL);
  char v63 = v62;
  int v64 = v62 + 48;
  char v63 = sub_18914E4((uint64_t)&v64, &v99, (long long *)v102, v62);
  sub_1976318(v183, (long long *)v65, (uint64_t *)&v62);
  *(void *)(a1 + 680) = 0;
  *(void *)(a1 + 688) = 0;
  *(void *)(a1 + 696) = 0;
  long long v97 = (char **)(a1 + 680);
  char v98 = 0;
  char v33 = (char *)operator new(0x1E0uLL);
  *(void *)(a1 + 680) = v33;
  *(void *)(a1 + 688) = v33;
  *(void *)(a1 + 696) = v33 + 480;
  *(void *)(a1 + 688) = sub_19763B0(a1 + 696, (uint64_t)v164, (uint64_t)v185, (uint64_t)v33);
  uint64_t v34 = 480;
  do
  {
    long long v97 = (char **)&v163[v34 + 24];
    sub_1891624((void ***)&v97);
    if ((char)v163[v34 + 23] < 0) {
      operator delete(*(void **)&v163[v34]);
    }
    v34 -= 48;
  }
  while (v34);
  long long v97 = &v62;
  sub_1891624((void ***)&v97);
  for (nuint64_t n = 0; nn != -6; nn -= 3)
  {
    if (SHIBYTE(v101[nn + 2]) < 0) {
      operator delete(v101[nn]);
    }
  }
  if (v66 < 0) {
    operator delete(v65[0]);
  }
  *(void *)&long long v99 = &v114;
  sub_1891624((void ***)&v99);
  for (uint64_t i1 = 0; i1 != -6; i1 -= 3)
  {
    if (SHIBYTE(v104[i1 + 2]) < 0) {
      operator delete((void *)v104[i1]);
    }
  }
  if (SHIBYTE(v68) < 0) {
    operator delete((void *)v67);
  }
  v102[0] = &v69;
  sub_1891624((void ***)v102);
  for (uint64_t i2 = 0; i2 != -6; i2 -= 3)
  {
    if (SHIBYTE(v107[i2 + 2]) < 0) {
      operator delete((void *)v107[i2]);
    }
  }
  if (v117 < 0) {
    operator delete(v116[0]);
  }
  *(void *)&long long v105 = &v71;
  sub_1891624((void ***)&v105);
  for (uint64_t i3 = 0; i3 != -6; i3 -= 3)
  {
    if (SHIBYTE(v110[i3 + 2]) < 0) {
      operator delete((void *)v110[i3]);
    }
  }
  if (v75 < 0) {
    operator delete(v74[0]);
  }
  *(void *)&long long v108 = &v76;
  sub_1891624((void ***)&v108);
  for (uint64_t i4 = 0; i4 != -6; i4 -= 3)
  {
    if (SHIBYTE(v113[i4 + 2]) < 0) {
      operator delete((void *)v113[i4]);
    }
  }
  if (v80 < 0) {
    operator delete(v79[0]);
  }
  *(void *)&long long v111 = &v81;
  sub_1891624((void ***)&v111);
  for (uint64_t i5 = 0; i5 != -6; i5 -= 3)
  {
    if (SHIBYTE(v120[i5 + 2]) < 0) {
      operator delete((void *)v120[i5]);
    }
  }
  if (v85 < 0) {
    operator delete(v84[0]);
  }
  v118[0] = &v86;
  sub_1891624((void ***)v118);
  for (uint64_t i6 = 0; i6 != -6; i6 -= 3)
  {
    if (SHIBYTE(v139[i6 + 2]) < 0) {
      operator delete((void *)v139[i6]);
    }
  }
  if (v90 < 0) {
    operator delete(__p[0]);
  }
  *(void *)&long long v138 = &v144;
  sub_1891624((void ***)&v138);
  for (uint64_t i7 = 0; i7 != -6; i7 -= 3)
  {
    if (SHIBYTE(v151[i7 + 2]) < 0) {
      operator delete((void *)v151[i7]);
    }
  }
  if (SHIBYTE(v92) < 0) {
    operator delete((void *)v91);
  }
  *(void *)&long long v150 = &v146;
  sub_1891624((void ***)&v150);
  for (uint64_t i8 = 0; i8 != -6; i8 -= 3)
  {
    if (SHIBYTE(v157[i8 + 2]) < 0) {
      operator delete((void *)v157[i8]);
    }
  }
  if (SHIBYTE(v94) < 0) {
    operator delete((void *)v93);
  }
  *(void *)&long long __dst = &v95;
  sub_1891624((void ***)&__dst);
  for (uint64_t i9 = 0; i9 != -6; i9 -= 3)
  {
    if (SHIBYTE(v122[i9 + 2]) < 0) {
      operator delete((void *)v122[i9]);
    }
  }
  if (SHIBYTE(v149) < 0) {
    operator delete((void *)v148);
  }
  sub_5E5C(v164, "HK");
  sub_5E5C(v166, "JP");
  sub_5E5C(&v167, "MO");
  sub_5E5C(v168, "TW");
  *(void *)(a1 + 704) = 0;
  *(void *)(a1 + 712) = 0;
  *(void *)(a1 + 720) = 0;
  *(void *)&long long v121 = a1 + 704;
  BYTE8(v121) = 0;
  long long v45 = (char *)operator new(0x60uLL);
  *(void *)(a1 + 704) = v45;
  *(void *)(a1 + 712) = v45;
  *(void *)(a1 + 720) = v45 + 96;
  uint64_t v46 = 0;
  *(void *)(a1 + 712) = sub_18914E4(a1 + 720, (long long *)v164, (long long *)v169, v45);
  do
  {
    if (SHIBYTE(v168[v46 + 2]) < 0) {
      operator delete((void *)v168[v46]);
    }
    v46 -= 3;
  }
  while (v46 != -12);
  *(unsigned char *)(a1 + 728) = 1;
  *(_OWORD *)(a1 + 732) = xmmword_21718D0;
  *(unsigned char *)(a1 + 748) = 1;
  *(void *)(a1 + 752) = 0x6400000001;
  *(_DWORD *)(a1 + 760) = 10;
  sub_5E5C(v164, "AD");
  sub_5E5C(v166, "AR");
  sub_5E5C(&v167, "AT");
  sub_5E5C(v168, "BE");
  sub_5E5C(v169, "BO");
  sub_5E5C(v170, "BR");
  sub_5E5C(v171, "CH");
  sub_5E5C(v172, "CL");
  sub_5E5C(v173, "CO");
  sub_5E5C(v174, "CR");
  sub_5E5C(v175, "CU");
  sub_5E5C(&v176, "DE");
  sub_5E5C(v177, "DK");
  sub_5E5C(v178, "DO");
  sub_5E5C(v179, "EC");
  sub_5E5C(v180, "ES");
  sub_5E5C(v181, "FI");
  sub_5E5C(&v182, "GL");
  sub_5E5C(v183, "GR");
  sub_5E5C(v184, "GT");
  sub_5E5C(v185, "GQ");
  sub_5E5C(v186, "HN");
  sub_5E5C(v187, "ID");
  sub_5E5C(&v188, "IS");
  sub_5E5C(v189, "IT");
  sub_5E5C(v190, "JP");
  sub_5E5C(v191, "LI");
  sub_5E5C(v192, "MX");
  sub_5E5C(v193, "NI");
  sub_5E5C(v194, "NL");
  sub_5E5C(v195, "NO");
  sub_5E5C(v196, "PA");
  sub_5E5C(v197, "PE");
  sub_5E5C(v198, "PT");
  sub_5E5C(&v199, "PY");
  sub_5E5C(v200, "RO");
  sub_5E5C(v201, "SE");
  sub_5E5C(v202, "SM");
  sub_5E5C(v203, "SR");
  sub_5E5C(v204, "SV");
  sub_5E5C(v205, "TR");
  sub_5E5C(v206, "UY");
  sub_5E5C(v207, "VA");
  sub_5E5C(v208, "VE");
  *(void *)(a1 + 768) = 0;
  *(void *)(a1 + 776) = 0;
  *(void *)(a1 + 784) = 0;
  *(void *)&long long v121 = a1 + 768;
  BYTE8(v121) = 0;
  uint64_t v47 = (char *)operator new(0x420uLL);
  *(void *)(a1 + 768) = v47;
  *(void *)(a1 + 776) = v47;
  *(void *)(a1 + 784) = v47 + 1056;
  *(void *)(a1 + 776) = sub_18914E4(a1 + 784, (long long *)v164, &v209, v47);
  uint64_t v48 = 132;
  do
  {
    if (SHIBYTE(v164[v48 - 1]) < 0) {
      operator delete(*(void **)&v163[v48 * 8 + 24]);
    }
    v48 -= 3;
  }
  while (v48 * 8);
  *(_DWORD *)(a1 + 792) = 5;
  *(unsigned char *)(a1 + 796) = 1;
  *(_DWORD *)(a1 + 800) = 1;
  *(unsigned char *)(a1 + 804) = 1;
  sub_1976434(v164, "zh", "位置");
  sub_1976488(&v167, "en", "Location");
  *(void *)(a1 + 808) = 0;
  *(void *)(a1 + 816) = 0;
  *(void *)(a1 + 824) = 0;
  *(void *)&long long v121 = a1 + 808;
  BYTE8(v121) = 0;
  int v49 = (char *)operator new(0x60uLL);
  *(void *)(a1 + 808) = v49;
  *(void *)(a1 + 816) = v49;
  *(void *)(a1 + 824) = v49 + 96;
  uint64_t v50 = 0;
  *(void *)(a1 + 816) = sub_9E3C38((int)a1 + 824, (long long *)v164, (long long *)v169, v49);
  do
  {
    char v51 = &v164[v50];
    if (SHIBYTE(v168[v50 + 2]) < 0) {
      operator delete(v51[9]);
    }
    if (*((char *)v51 + 71) < 0) {
      operator delete(v51[6]);
    }
    v50 -= 6;
  }
  while (v50 != -12);
  sub_5E5C(v164, "SK");
  sub_5E5C(v166, "CZ");
  *(void *)(a1 + 832) = 0;
  *(void *)(a1 + 840) = 0;
  *(void *)(a1 + 848) = 0;
  *(void *)&long long v121 = a1 + 832;
  BYTE8(v121) = 0;
  long long v52 = (char *)operator new(0x30uLL);
  *(void *)(a1 + 832) = v52;
  *(void *)(a1 + 840) = v52;
  *(void *)(a1 + 848) = v52 + 48;
  uint64_t v53 = 0;
  *(void *)(a1 + 840) = sub_18914E4(a1 + 848, (long long *)v164, &v167, v52);
  do
  {
    if (SHIBYTE(v166[v53 + 2]) < 0) {
      operator delete((void *)v166[v53]);
    }
    v53 -= 3;
  }
  while (v53 != -6);
  sub_5E5C(v164, "a");
  sub_5E5C(v166, "asda");
  sub_5E5C(&v167, "das");
  sub_5E5C(v168, "de");
  sub_5E5C(v169, "del");
  sub_5E5C(v170, "des");
  sub_5E5C(v171, "do");
  sub_5E5C(v172, "dos");
  sub_5E5C(v173, "dueli");
  sub_5E5C(v174, "ill");
  sub_5E5C(v175, "la");
  sub_5E5C(&v176, "le");
  sub_5E5C(v177, "o");
  sub_5E5C(v178, "of");
  sub_5E5C(v179, "os");
  sub_5E5C(v180, "the");
  sub_1976294(a1 + 856, (const void **)v164, 16);
  uint64_t v54 = 48;
  do
  {
    if (SHIBYTE(v164[v54 - 1]) < 0) {
      operator delete(*(void **)&v163[v54 * 8 + 24]);
    }
    v54 -= 3;
  }
  while (v54 * 8);
  sub_5E5C(v164, "block");
  sub_5E5C(v166, "blk");
  sub_1976294(a1 + 880, (const void **)v164, 2);
  for (uint64_t i10 = 0; i10 != -6; i10 -= 3)
  {
    if (SHIBYTE(v166[i10 + 2]) < 0) {
      operator delete((void *)v166[i10]);
    }
  }
  *(unsigned char *)(a1 + 904) = 0;
  *(void *)(a1 + 912) = 0;
  *(void *)(a1 + 928) = 0;
  *(void *)(a1 + 920) = 0;
  char v56 = operator new(0x10uLL);
  *(void *)(a1 + 912) = v56;
  *v56++ = xmmword_21718E0;
  *(void *)(a1 + 928) = v56;
  *(void *)(a1 + 920) = v56;
  sub_5E5C(v164, "JP");
  sub_5E5C(v166, "TW");
  sub_5E5C(&v167, "HK");
  sub_5E5C(v168, "MO");
  *(void *)(a1 + 936) = 0;
  *(void *)(a1 + 944) = 0;
  *(void *)(a1 + 952) = 0;
  *(void *)&long long v121 = a1 + 936;
  BYTE8(v121) = 0;
  long long v57 = (char *)operator new(0x60uLL);
  *(void *)(a1 + 936) = v57;
  *(void *)(a1 + 944) = v57;
  *(void *)(a1 + 952) = v57 + 96;
  uint64_t v58 = 0;
  *(void *)(a1 + 944) = sub_18914E4(a1 + 952, (long long *)v164, (long long *)v169, v57);
  do
  {
    if (SHIBYTE(v168[v58 + 2]) < 0) {
      operator delete((void *)v168[v58]);
    }
    v58 -= 3;
  }
  while (v58 != -12);
  sub_5E5C(v164, "JP");
  sub_5E5C(v166, "VN");
  *(void *)(a1 + 960) = 0;
  *(void *)(a1 + 968) = 0;
  *(void *)(a1 + 976) = 0;
  *(void *)&long long v121 = a1 + 960;
  BYTE8(v121) = 0;
  int v59 = (char *)operator new(0x30uLL);
  *(void *)(a1 + 960) = v59;
  *(void *)(a1 + 968) = v59;
  *(void *)(a1 + 976) = v59 + 48;
  uint64_t v60 = 0;
  *(void *)(a1 + 968) = sub_18914E4(a1 + 976, (long long *)v164, &v167, v59);
  do
  {
    if (SHIBYTE(v166[v60 + 2]) < 0) {
      operator delete((void *)v166[v60]);
    }
    v60 -= 3;
  }
  while (v60 != -6);
  *(unsigned char *)(a1 + 984) = 1;
  *(_OWORD *)(a1 + 992) = xmmword_21718F0;
  *(void *)(a1 + 1008) = 0x4050400000000000;
  *(_DWORD *)(a1 + 1016) = 1000000;
  sub_5E5C(v164, "JP");
  sub_19764DC(a1 + 1024, (uint64_t)v164, 1);
  if (v165 < 0) {
    operator delete(v164[0]);
  }
  *(void *)(a1 + 1064) = 0x64000003E8;
  *(void *)(a1 + 1072) = 0x3FE0000000000000;
  return a1;
}

void sub_197481C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14, unint64_t a15, unint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, unint64_t a20,unint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24,unint64_t a25,unint64_t a26)
{
  if (SLOBYTE(STACK[0x7D7]) < 0) {
    operator delete((void *)STACK[0x7C0]);
  }
  STACK[0x7C0] = v29;
  sub_1891624((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = v28;
  sub_1891624((void ***)&STACK[0x7C0]);
  uint64_t v34 = *(void **)(v26 + 912);
  if (v34)
  {
    *(void *)(v26 + 920) = v34;
    operator delete(v34);
  }
  sub_2F020(v32, *(char **)(v26 + 888));
  sub_2F020(v31, *(char **)(v26 + 864));
  STACK[0x7C0] = v27;
  sub_1891624((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = v33;
  sub_1898078((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = v30;
  sub_1891624((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = a11;
  sub_1891624((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = a14;
  sub_1897ED4((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = a15;
  sub_1897ED4((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = a16;
  sub_1897ED4((void ***)&STACK[0x7C0]);
  sub_2F020(a17, *(char **)(v26 + 544));
  sub_2F020(a19, *(char **)(v26 + 520));
  sub_2F020(a22, *(char **)(v26 + 496));
  sub_2F020(a23, *(char **)(v26 + 472));
  STACK[0x7C0] = a24;
  sub_1891624((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = a25;
  sub_1891624((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = a26;
  sub_1891624((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = a12;
  sub_1891624((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = v26 + 288;
  sub_1897A60((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = a18;
  sub_1897834((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = a13;
  sub_1891624((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = a20;
  sub_1891624((void ***)&STACK[0x7C0]);
  STACK[0x7C0] = a21;
  sub_1891624((void ***)&STACK[0x7C0]);
  _Unwind_Resume(a1);
}

void sub_1976220()
{
  while (1)
  {
    if (*((char *)v0 - 1) < 0) {
      operator delete((void *)*(v0 - 3));
    }
    v0 -= 3;
    if (v0 == &STACK[0x7C0]) {
      JUMPOUT(0x1976218);
    }
  }
}

uint64_t sub_1976248(uint64_t a1)
{
  uint64_t v3 = (void **)(a1 + 24);
  sub_1891624(&v3);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1976294(uint64_t a1, const void **a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 24 * a3;
    do
    {
      sub_1897BC8((uint64_t **)a1, v4, a2, (uint64_t)a2);
      a2 += 3;
      v6 -= 24;
    }
    while (v6);
  }
  return a1;
}

void sub_1976300(_Unwind_Exception *a1)
{
  sub_2F020(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

unsigned char *sub_1976318(unsigned char *__dst, long long *a2, uint64_t *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  *((void *)__dst + 3) = 0;
  *((void *)__dst + 4) = 0;
  *((void *)__dst + 5) = 0;
  sub_8A6F8(__dst + 24, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 3));
  return __dst;
}

void sub_1976394(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_19763B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_1897DF8((unsigned char *)(a4 + v7), (long long *)(a2 + v7));
      v7 += 48;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1976410(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 48;
    do
    {
      sub_1897E8C(v4 + v2);
      v2 -= 48;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1976434(void *a1, char *a2, char *a3)
{
  long long v5 = sub_5E5C(a1, a2);
  sub_5E5C(v5 + 3, a3);
  return a1;
}

void sub_197646C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1976488(void *a1, char *a2, char *a3)
{
  long long v5 = sub_5E5C(a1, a2);
  sub_5E5C(v5 + 3, a3);
  return a1;
}

void sub_19764C0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_19764DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = 24 * a3;
    do
    {
      sub_24AFC(a1, a2, a2);
      a2 += 24;
      v5 -= 24;
    }
    while (v5);
  }
  return a1;
}

void sub_1976544(_Unwind_Exception *a1)
{
  sub_1898170(v1);
  _Unwind_Resume(a1);
}

void sub_197655C()
{
}

void *sub_1976570()
{
  double result = operator new(0x10uLL);
  *double result = off_24E7458;
  return result;
}

void sub_19765A8(uint64_t a1, void *a2)
{
  *a2 = off_24E7458;
}

void sub_19765D0(long long *a1@<X1>, unsigned __int8 *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
}

uint64_t sub_19765D8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1976618()
{
}

void sub_1976624(long long *a1@<X1>, unsigned __int8 *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  memset(v30, 0, sizeof(v30));
  sub_1897CEC(v30, *(void *)(a3 + 680), *(void *)(a3 + 688), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a3 + 688) - *(void *)(a3 + 680)) >> 4));
  sub_197699C(v30, a2, (uint64_t)&v31);
  unint64_t v28 = v30;
  sub_1897ED4((void ***)&v28);
  uint64_t v7 = v31;
  char v8 = v32;
  int v9 = *((char *)a1 + 23);
  if (0xAAAAAAAAAAAAAAABLL * (((char *)v32 - (char *)v31) >> 3) < 2)
  {
    if (v9 < 0)
    {
      sub_4200(&v20, *(void **)a1, *((void *)a1 + 1));
    }
    else
    {
      long long v20 = *a1;
      uint64_t v21 = *((void *)a1 + 2);
    }
    sub_5E5C(&v18, (char *)&unk_21719C4);
    sub_5E5C(&__p, (char *)&unk_21719C4);
    v11.n128_f64[0] = sub_19497C0((uint64_t)&v20, 0, &v28);
    if (v17 < 0) {
      operator delete(__p);
    }
    if (v19 < 0) {
      operator delete(v18);
    }
    if (SHIBYTE(v21) < 0)
    {
      p_dst = (void **)&v20;
LABEL_28:
      operator delete(*p_dst);
    }
  }
  else
  {
    if (v9 < 0)
    {
      sub_4200(&__dst, *(void **)a1, *((void *)a1 + 1));
      uint64_t v7 = v31;
      char v8 = v32;
    }
    else
    {
      long long __dst = *a1;
      uint64_t v27 = *((void *)a1 + 2);
    }
    if (v8 == v7) {
      sub_66748();
    }
    if (*((char *)v7 + 23) < 0)
    {
      sub_4200(v24, *(void **)v7, *((void *)v7 + 1));
      uint64_t v7 = v31;
      char v8 = v32;
    }
    else
    {
      long long v10 = *v7;
      uint64_t v25 = *((void *)v7 + 2);
      *(_OWORD *)uint64_t v24 = v10;
    }
    if (0xAAAAAAAAAAAAAAABLL * (((char *)v8 - (char *)v7) >> 3) <= 1) {
      sub_66748();
    }
    if (*((char *)v7 + 47) < 0)
    {
      sub_4200(v22, *((void **)v7 + 3), *((void *)v7 + 4));
    }
    else
    {
      *(_OWORD *)uint64_t v22 = *(long long *)((char *)v7 + 24);
      uint64_t v23 = *((void *)v7 + 5);
    }
    v11.n128_f64[0] = sub_19497C0((uint64_t)&__dst, 0, &v28);
    if (SHIBYTE(v23) < 0) {
      operator delete(v22[0]);
    }
    if (SHIBYTE(v25) < 0) {
      operator delete(v24[0]);
    }
    if (SHIBYTE(v27) < 0)
    {
      p_dst = (void **)&__dst;
      goto LABEL_28;
    }
  }
  char v13 = (*((uint64_t (**)(long long **, __n128))*v28 + 3))(v28, v11);
  uint64_t v14 = v29;
  *(void *)a4 = v28;
  *(void *)(a4 + 8) = v14;
  if (v14)
  {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v15 = v29;
    *(unsigned char *)(a4 + 16) = v13;
    if (v15) {
      sub_20A69F0(v15);
    }
  }
  else
  {
    *(unsigned char *)(a4 + 16) = v13;
  }
  unint64_t v28 = &v31;
  sub_1891624((void ***)&v28);
}

void sub_19768C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  *(void *)(v47 - 112) = v47 - 72;
  sub_1891624((void ***)(v47 - 112));
  _Unwind_Resume(a1);
}

void sub_1976988()
{
  *(void *)(v1 - 112) = v0;
  sub_1897ED4((void ***)(v1 - 112));
  JUMPOUT(0x1976980);
}

void sub_197699C(long long **a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (*a1 != v5)
  {
    do
    {
      sub_1897DF8(__p, v4);
      uint64_t v7 = a2[23];
      if ((v7 & 0x80u) == 0) {
        char v8 = (void *)a2[23];
      }
      else {
        char v8 = (void *)*((void *)a2 + 1);
      }
      unint64_t v9 = v17;
      if ((v17 & 0x80u) != 0) {
        unint64_t v9 = (unint64_t)__p[1];
      }
      if (v8 == (void *)v9)
      {
        if ((v17 & 0x80u) == 0) {
          long long v10 = __p;
        }
        else {
          long long v10 = (void **)__p[0];
        }
        if ((v7 & 0x80) != 0)
        {
          if (!memcmp(*(const void **)a2, v10, *((void *)a2 + 1)))
          {
LABEL_26:
            *(void *)a3 = 0;
            *(void *)(a3 + 8) = 0;
            *(void *)(a3 + 16) = 0;
            sub_8A6F8((char *)a3, v18, v19, 0xAAAAAAAAAAAAAAABLL * ((v19 - v18) >> 3));
            uint64_t v14 = (void **)&v18;
            sub_1891624(&v14);
            if ((char)v17 < 0) {
              operator delete(__p[0]);
            }
            return;
          }
        }
        else
        {
          if (!a2[23]) {
            goto LABEL_26;
          }
          __n128 v11 = a2;
          while (*v11 == *(unsigned __int8 *)v10)
          {
            ++v11;
            long long v10 = (void **)((char *)v10 + 1);
            if (!--v7) {
              goto LABEL_26;
            }
          }
        }
      }
      uint64_t v14 = (void **)&v18;
      sub_1891624(&v14);
      if ((char)v17 < 0) {
        operator delete(__p[0]);
      }
      v4 += 3;
    }
    while (v4 != v5);
  }
  sub_5E5C(__p, (char *)&unk_21719C4);
  sub_5E5C(&v18, (char *)&unk_21719C4);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  uint64_t v14 = (void **)a3;
  char v15 = 0;
  char v12 = (char *)operator new(0x30uLL);
  *(void *)a3 = v12;
  *(void *)(a3 + 8) = v12;
  *(void *)(a3 + 16) = v12 + 48;
  uint64_t v13 = 0;
  *(void *)(a3 + 8) = sub_18914E4(a3 + 16, (long long *)__p, &v21, v12);
  do
  {
    if (*(&v20 + v13) < 0) {
      operator delete(*(void **)((char *)&v18 + v13));
    }
    v13 -= 24;
  }
  while (v13 != -48);
}

void sub_1976B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  *(void *)(v23 + 8) = v24;
  sub_1891624(&a10);
  uint64_t v26 = 0;
  while (1)
  {
    if (*(&a23 + v26) < 0) {
      operator delete(*(void **)((char *)&a18 + v26));
    }
    v26 -= 24;
    if (v26 == -48) {
      _Unwind_Resume(a1);
    }
  }
}

void sub_1976C18()
{
}

void *sub_1976C2C()
{
  double result = operator new(0x10uLL);
  *double result = off_24E74E8;
  return result;
}

void sub_1976C64(uint64_t a1, void *a2)
{
  *a2 = off_24E74E8;
}

void sub_1976C8C(uint64_t a1@<X8>)
{
}

uint64_t sub_1976C94(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1976CD4()
{
}

void sub_1976CE0(uint64_t a1@<X8>)
{
  sub_1976D74(&v5);
  sub_1CC4980(v5);
  BOOL v2 = sub_1CC4980(v5);
  uint64_t v3 = v6;
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v3;
  if (v3)
  {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v4 = v6;
    *(unsigned char *)(a1 + 16) = v2;
    if (v4) {
      sub_20A69F0(v4);
    }
  }
  else
  {
    *(unsigned char *)(a1 + 16) = v2;
  }
}

void sub_1976D58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_20A69F0(a11);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1976D74@<X0>(void *a1@<X8>)
{
  BOOL v2 = operator new(0x28uLL);
  double result = sub_1976DD0(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_1976DBC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1976DD0(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_24E7568;
  sub_1CC494C(a1 + 3);
  return a1;
}

void sub_1976E18(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1976E2C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24E7568;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1976E4C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24E7568;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1976EA0(uint64_t a1)
{
  return sub_1CC4950(a1 + 24);
}

void sub_1976EAC(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1976EAC(a1, *a2);
    sub_1976EAC(a1, a2[1]);
    sub_1976F08((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_1976F08(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 64))
  {
    BOOL v2 = *(std::__shared_weak_count **)(a1 + 56);
    if (v2) {
      sub_20A69F0(v2);
    }
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

uint64_t sub_1976F74(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    BOOL v2 = *(std::__shared_weak_count **)(a1 + 32);
    if (v2) {
      sub_20A69F0(v2);
    }
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1976FBC(void ***a1)
{
  uint64_t v1 = *a1;
  BOOL v2 = **a1;
  if (v2)
  {
    uint64_t v4 = v1[1];
    uint64_t v5 = v2;
    if (v4 != v2)
    {
      do
        uint64_t v4 = sub_17A1BB4(v4 - 6);
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_1977040(void ***a1)
{
  uint64_t v1 = *a1;
  BOOL v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 136;
        sub_19770C4(v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_19770C4(uint64_t a1)
{
  sub_12168(a1 + 88);
  BOOL v2 = (void **)(a1 + 64);
  sub_18D522C(&v2);
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

void sub_1977124(void ***a1)
{
  uint64_t v1 = *a1;
  BOOL v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_1907F60(v4 - 776);
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_19771A8(void ***a1)
{
  uint64_t v1 = *a1;
  BOOL v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = v4 - 96;
        sub_1977230((uint64_t)(v4 - 88));
        uint64_t v4 = v6;
      }
      while (v6 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_1977230(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 64);
  if (v2 != -1) {
    ((void (*)(char *, uint64_t))off_24E75B8[v2])(&v4, a1);
  }
  *(_DWORD *)(a1 + 64) = -1;
  return a1;
}

void sub_197728C(uint64_t a1, void **a2)
{
  uint64_t v2 = a2;
  sub_1894FD8(&v2);
}

void sub_19772B4(uint64_t a1, void **a2)
{
  uint64_t v2 = a2;
  sub_1916270(&v2);
}

void sub_19772DC(uint64_t a1, void **a2)
{
  uint64_t v2 = a2;
  sub_1976FBC(&v2);
}

uint64_t sub_1977304(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 56)) {
    return sub_12168(a2 + 16);
  }
  return result;
}

uint64_t sub_1977318(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_19773B0(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_18957C0(result, a4);
    uint64_t result = (void *)sub_1977438((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1977418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_189589C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1977438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    uint64_t v7 = 0;
    do
    {
      sub_15B15F8(a4 + v7);
      v6 += 8;
      v7 += 88;
    }
    while (v6 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1977498(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 88;
    do
    {
      sub_15B1678(v4 + v2);
      v2 -= 88;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_19774BC(uint64_t result, uint64_t a2)
{
  *(unsigned char *)uint64_t result = 0;
  *(unsigned char *)(result + 16) = 0;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v2 = *(void *)(a2 + 8);
    *(void *)uint64_t result = *(void *)a2;
    *(void *)(result + 8) = v2;
    if (v2) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
    }
    *(unsigned char *)(result + 16) = 1;
  }
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(result + 24) = *(void *)(a2 + 24);
  *(void *)(result + 32) = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_1977508(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7, uint64_t *a8, uint64_t a9, long long *a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)a1 = a2;
  sub_1896F30(a1 + 8, (uint64_t *)a3);
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)a4;
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  sub_18981AC(a1 + 1104, a5);
  *(_OWORD *)(a1 + 1144) = 0u;
  *(_OWORD *)(a1 + 1160) = 0u;
  *(_DWORD *)(a1 + 1176) = 1065353216;
  sub_18986B4((char *)(a1 + 1184), a6);
  *(void *)(a1 + 1368) = 0;
  *(_OWORD *)(a1 + 1352) = 0u;
  sub_1895738((void *)(a1 + 1352), *a8, a8[1], 0x2E8BA2E8BA2E8BA3 * ((a8[1] - *a8) >> 3));
  long long v19 = *a10;
  long long v20 = a10[1];
  *(_DWORD *)(a1 + 1408) = *((_DWORD *)a10 + 8);
  *(_OWORD *)(a1 + 1392) = v20;
  *(_OWORD *)(a1 + 1376) = v19;
  *(void *)(a1 + 1416) = a7;
  *(void *)(a1 + 1424) = a9;
  *(unsigned char *)(a1 + 1432) = 0;
  *(unsigned char *)(a1 + 1448) = 0;
  if (*(unsigned char *)(a11 + 16))
  {
    uint64_t v21 = *(void *)(a11 + 8);
    *(void *)(a1 + 1432) = *(void *)a11;
    *(void *)(a1 + 1440) = v21;
    if (v21) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v21 + 8), 1uLL, memory_order_relaxed);
    }
    *(unsigned char *)(a1 + 1448) = 1;
  }
  uint64_t v22 = *(void *)(a11 + 32);
  *(void *)(a1 + 1456) = *(void *)(a11 + 24);
  *(void *)(a1 + 1464) = v22;
  if (v22) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v22 + 8), 1uLL, memory_order_relaxed);
  }
  *(unsigned char *)(a1 + 1472) = 0;
  *(unsigned char *)(a1 + 1488) = 0;
  if (*(unsigned char *)(a12 + 16))
  {
    uint64_t v23 = *(void *)(a12 + 8);
    *(void *)(a1 + 1472) = *(void *)a12;
    *(void *)(a1 + 1480) = v23;
    if (v23) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v23 + 8), 1uLL, memory_order_relaxed);
    }
    *(unsigned char *)(a1 + 1488) = 1;
  }
  uint64_t v24 = *(void *)(a12 + 32);
  *(void *)(a1 + 1496) = *(void *)(a12 + 24);
  *(void *)(a1 + 1504) = v24;
  if (v24) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v24 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 1528) = 0;
  *(_OWORD *)(a1 + 1512) = 0u;
  *(_DWORD *)(a1 + 1536) = *(_DWORD *)(a3 + 756);
  return a1;
}

void sub_19776C8(_Unwind_Exception *a1)
{
  sub_1896E94(v5);
  sub_1898634(v4);
  sub_1898634(v3);
  uint64_t v7 = *(std::__shared_weak_count **)(v1 + 1096);
  if (v7) {
    sub_20A69F0(v7);
  }
  sub_18988B4(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1977710(uint64_t a1, uint64_t *a2)
{
  sub_1977760(a1, a2);
  uint64_t v5 = a2[3];
  uint64_t v4 = a2[4];
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v4;
  if (v6) {
    sub_20A69F0(v6);
  }
  return a1;
}

void sub_1977760(uint64_t a1, uint64_t *a2)
{
  if (*(unsigned __int8 *)(a1 + 16) == *((unsigned __int8 *)a2 + 16))
  {
    if (*(unsigned char *)(a1 + 16))
    {
      uint64_t v4 = *a2;
      uint64_t v3 = a2[1];
      if (v3) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t v5 = *(std::__shared_weak_count **)(a1 + 8);
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v3;
      if (v5)
      {
        sub_20A69F0(v5);
      }
    }
  }
  else if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v6 = *(std::__shared_weak_count **)(a1 + 8);
    if (v6) {
      sub_20A69F0(v6);
    }
    *(unsigned char *)(a1 + 16) = 0;
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    if (v7) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
    }
    *(unsigned char *)(a1 + 16) = 1;
  }
}

unsigned char *sub_1977808(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[1080] = 0;
  if (*(unsigned char *)(a2 + 1080))
  {
    sub_1896F30((uint64_t)a1, (uint64_t *)a2);
    a1[1080] = 1;
  }
  return a1;
}

void sub_197784C(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 1080)) {
    sub_18988B4(v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1977868(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_19778EC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1977970(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_19779F4@<X0>(unint64_t *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = (char *)operator new(0x28uLL);
  uint64_t result = sub_1977A50((uint64_t)v4, a1);
  *a2 = v4 + 24;
  a2[1] = v4;
  return result;
}

void sub_1977A3C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1977A50(uint64_t a1, unint64_t *a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_24E75E8;
  sub_1977B34((__n128 *)(a1 + 24), a2);
  return a1;
}

void sub_1977A98(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1977AAC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24E75E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1977ACC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24E75E8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1977B20(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 32);
  if (v1) {
    sub_20A69F0(v1);
  }
}

__n128 *sub_1977B34(__n128 *a1, unint64_t *a2)
{
  unint64_t v3 = a2[1];
  v5.n128_u64[0] = *a2;
  v5.n128_u64[1] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  sub_28C8A0(a1, &v5);
  if (v5.n128_u64[1]) {
    sub_20A69F0((std::__shared_weak_count *)v5.n128_u64[1]);
  }
  return a1;
}

void sub_1977B90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_20A69F0(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1977BA8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1977C30()
{
}

void *sub_1977C44(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_24E7638;
  result[1] = v3;
  return result;
}

uint64_t sub_1977C8C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_24E7638;
  a2[1] = v2;
  return result;
}

uint64_t sub_1977CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 8))(a2, a3, a4);
}

uint64_t sub_1977CCC(uint64_t a1, uint64_t a2)
{
  if (sub_18B0CF0(a2, (uint64_t)&off_24E76B8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1977D0C()
{
  return &off_24E76B8;
}

void *sub_1977D18(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_1977D9C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  uint64_t v6 = a2[1];
  *(void *)(a1 + 24) = *a2;
  *(void *)(a1 + 32) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 40) = 850045863;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  sub_1977E70(a1 + 104, a3);
  sub_1977F08(a1 + 136, a4);
  return a1;
}

void sub_1977E34(_Unwind_Exception *a1)
{
  sub_1977D18(v3);
  std::mutex::~mutex(v2);
  __n128 v5 = *(std::__shared_weak_count **)(v1 + 32);
  if (v5) {
    sub_20A69F0(v5);
  }
  sub_1976EAC(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_1977E70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1977F08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1977FA0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_1978024(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  uint64_t v6 = a2[1];
  *(void *)(a1 + 24) = *a2;
  *(void *)(a1 + 32) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 40) = 850045863;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  sub_1977E70(a1 + 104, a3);
  sub_19780F8(a1 + 136, a4);
  return a1;
}

void sub_19780BC(_Unwind_Exception *a1)
{
  sub_1977D18(v3);
  std::mutex::~mutex(v2);
  __n128 v5 = *(std::__shared_weak_count **)(v1 + 32);
  if (v5) {
    sub_20A69F0(v5);
  }
  sub_1976EAC(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_19780F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1978190(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1978228(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_19782AC(void *a1)
{
  *a1 = off_24E76E8;
  uint64_t v2 = (std::__shared_weak_count *)a1[6];
  if (v2) {
    sub_20A69F0(v2);
  }
  sub_1978228(a1 + 1);
  return a1;
}

void sub_1978300(void *a1)
{
  *a1 = off_24E76E8;
  uint64_t v2 = (std::__shared_weak_count *)a1[6];
  if (v2) {
    sub_20A69F0(v2);
  }
  sub_1978228(a1 + 1);

  operator delete();
}

void *sub_1978374(uint64_t a1)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = operator new(0x38uLL);
  *uint64_t v3 = off_24E76E8;
  sub_1978190((uint64_t)(v3 + 1), v2);
  uint64_t v4 = *(void *)(a1 + 48);
  v3[5] = *(void *)(a1 + 40);
  v3[6] = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  return v3;
}

void sub_19783EC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1978400(uint64_t a1, void *a2)
{
  *a2 = off_24E76E8;
  uint64_t result = sub_1978190((uint64_t)(a2 + 1), a1 + 8);
  uint64_t v5 = *(void *)(a1 + 48);
  a2[5] = *(void *)(a1 + 40);
  a2[6] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void *sub_1978464(uint64_t a1)
{
  return sub_196E334((void *)(a1 + 8));
}

void sub_197846C(void *a1)
{
  sub_196E334(a1 + 1);

  operator delete(a1);
}

void sub_19784A8(uint64_t a1, uint64_t a2)
{
  LOWORD(v4) = *(_WORD *)a2;
  long long v5 = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  long long v7 = *(_OWORD *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  long long v9 = *(_OWORD *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  long long v11 = *(_OWORD *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 88) = 0;
  *(void *)(a2 + 96) = 0;
  sub_1A69D10((uint64_t *)(a1 + 40), &v4, v13);
  uint64_t v3 = *(void *)(a1 + 32);
  if (!v3) {
    sub_29F82C();
  }
  (*(void (**)(uint64_t, void ***))(*(void *)v3 + 48))(v3, v13);
  sub_182E7B8(v13);
  v13[0] = (void **)&v11;
  sub_1977040(v13);
  v13[0] = (void **)&v9;
  sub_1977124(v13);
  v13[0] = (void **)&v7;
  sub_1891624(v13);
  v13[0] = (void **)&v5;
  sub_1891624(v13);
}

void sub_19785E4()
{
}

void sub_197870C(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  *(void *)(v5 - 88) = v4;
  sub_1977040((void ***)(v5 - 88));
  *(void *)(v5 - 88) = v3;
  sub_1977124((void ***)(v5 - 88));
  *(void *)(v5 - 88) = v2;
  sub_1891624((void ***)(v5 - 88));
  *(void *)(v5 - 88) = v1;
  sub_1891624((void ***)(v5 - 88));
  _Unwind_Resume(a1);
}

uint64_t sub_197878C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_19787CC()
{
}

void *sub_19787D8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_197885C@<X0>(unint64_t *a1@<X1>, dispatch_object_t *a2@<X2>, uint64_t *a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = operator new(0x48uLL);
  uint64_t result = sub_19788D0(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;
  return result;
}

void sub_19788BC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_19788D0(void *a1, unint64_t *a2, dispatch_object_t *a3, uint64_t *a4)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_24E7778;
  sub_19789B8((uint64_t)(a1 + 3), *a2, *a3, *a4);
  return a1;
}

void sub_1978924(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1978938(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24E7778;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1978958(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24E7778;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_19789AC(uint64_t a1)
{
  return sub_1978DC8(a1 + 24);
}

uint64_t sub_19789B8(uint64_t a1, unint64_t a2, dispatch_object_t object, uint64_t a4)
{
  *(void *)a1 = object;
  *(void *)(a1 + 8) = a4;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  uint64_t v6 = (uint64_t *)(a1 + 24);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  dispatch_retain(object);
  dispatch_retain(*(dispatch_object_t *)(a1 + 8));
  sub_1978A38(v6, a2);
  return a1;
}

void sub_1978A20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19771A8((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1978A38(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 5) < a2)
  {
    if (a2 >= 0x2AAAAAAAAAAAAABLL) {
      sub_2E00();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_1978BAC(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    void v7[3] = v7[0] + 96 * v6;
    sub_1978AEC(a1, v7);
    return sub_1978D74((uint64_t)v7);
  }
  return result;
}

void sub_1978AD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1978D74((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1978AEC(uint64_t *result, void *a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *result;
  uint64_t v5 = result[1];
  uint64_t v6 = a2[1];
  if (v5 == *result)
  {
    uint64_t v7 = a2[1];
  }
  else
  {
    do
    {
      uint64_t v7 = v6 - 96;
      uint64_t result = (uint64_t *)sub_1978BF4(v6 - 88, v5 - 88);
      uint64_t v8 = *(void *)(v5 - 16);
      *(_DWORD *)(v6 - 8) = *(_DWORD *)(v5 - 8);
      *(void *)(v6 - 16) = v8;
      v5 -= 96;
      v6 -= 96;
    }
    while (v5 != v4);
  }
  a2[1] = v7;
  uint64_t v9 = *v3;
  *uint64_t v3 = v7;
  a2[1] = v9;
  uint64_t v10 = v3[1];
  v3[1] = a2[2];
  a2[2] = v10;
  uint64_t v11 = v3[2];
  v3[2] = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return result;
}

void *sub_1978BAC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x2AAAAAAAAAAAAABLL) {
    sub_188D718();
  }
  return operator new(96 * a2);
}

uint64_t sub_1978BF4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 64) = -1;
  sub_1978C2C(a1, a2);
  return a1;
}

uint64_t sub_1978C2C(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(unsigned int *)(result + 64);
  if (v4 != -1) {
    uint64_t result = ((uint64_t (*)(char *, uint64_t))off_24E75B8[v4])(&v7, result);
  }
  *(_DWORD *)(v3 + 64) = -1;
  uint64_t v5 = *(unsigned int *)(a2 + 64);
  if (v5 != -1)
  {
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_24E77B8[v5])(&v6, v3, a2);
    *(_DWORD *)(v3 + 64) = v5;
  }
  return result;
}

__n128 sub_1978CBC(uint64_t a1, __n128 *a2, __n128 *a3)
{
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  __n128 result = *a3;
  *a2 = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  return result;
}

__n128 sub_1978CE0(uint64_t a1, __n128 *a2, __n128 *a3)
{
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  __n128 result = *a3;
  *a2 = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  return result;
}

__n128 sub_1978D04(uint64_t a1, __n128 *a2, __n128 *a3)
{
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  __n128 result = *a3;
  *a2 = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_1978D28(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  *a2 = 0;
  a2[56] = 0;
  if (*(unsigned char *)(a3 + 56))
  {
    *(_OWORD *)a2 = *(_OWORD *)a3;
    uint64_t result = sub_1893348((uint64_t)(a2 + 16), (uint64_t *)(a3 + 16));
    a2[56] = 1;
  }
  return result;
}

uint64_t sub_1978D74(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 96;
    sub_1977230(i - 88);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1978DC8(uint64_t a1)
{
  dispatch_release(*(dispatch_object_t *)a1);
  dispatch_release(*(dispatch_object_t *)(a1 + 8));
  uint64_t v3 = (void **)(a1 + 24);
  sub_19771A8(&v3);
  return a1;
}

void *sub_1978E14(void *a1)
{
  *a1 = off_24E77E8;
  uint64_t v2 = (std::__shared_weak_count *)a1[2];
  if (v2) {
    sub_20A69F0(v2);
  }
  return a1;
}

void sub_1978E60(void *a1)
{
  *a1 = off_24E77E8;
  uint64_t v1 = (std::__shared_weak_count *)a1[2];
  if (v1) {
    sub_20A69F0(v1);
  }

  operator delete();
}

void *sub_1978ECC(uint64_t a1)
{
  uint64_t result = operator new(0x18uLL);
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  *uint64_t result = off_24E77E8;
  result[1] = v4;
  result[2] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_1978F28(uint64_t result, void *a2)
{
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(result + 16);
  *a2 = off_24E77E8;
  a2[1] = v3;
  a2[2] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1978F60(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1) {
    sub_20A69F0(v1);
  }
}

void sub_1978F70(void *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)__p[2];
  if (v2) {
    sub_20A69F0(v2);
  }

  operator delete(__p);
}

void sub_1978FB0(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1978FB8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1978FF8()
{
}

void sub_1979004(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (os_unfair_lock_s *)(a1 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 16));
  unint64_t v5 = *(void *)(a1 + 32);
  if (v5 >= *(void *)(a1 + 40))
  {
    uint64_t v7 = sub_19790A4((uint64_t *)(a1 + 24), a2);
  }
  else
  {
    sub_19791C8(v5 + 8, a2 + 8);
    uint64_t v6 = *(void *)(a2 + 80);
    *(_DWORD *)(v5 + 88) = *(_DWORD *)(a2 + 88);
    *(void *)(v5 + 80) = v6;
    uint64_t v7 = v5 + 96;
    *(void *)(a1 + 32) = v5 + 96;
  }
  *(void *)(a1 + 32) = v7;
  os_unfair_lock_unlock(v4);
  uint64_t v8 = *(NSObject **)a1;

  dispatch_group_leave(v8);
}

void sub_197909C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 32) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_19790A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 5);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x2AAAAAAAAAAAAAALL) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 5);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x155555555555555) {
    unint64_t v9 = 0x2AAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  long long v19 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_1978BAC(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  char v15 = v10;
  uint64_t v16 = &v10[96 * v4];
  unsigned __int8 v17 = v16;
  uint64_t v18 = &v10[96 * v9];
  sub_19791C8((uint64_t)(v16 + 8), a2 + 8);
  uint64_t v11 = v16;
  uint64_t v12 = *(void *)(a2 + 80);
  *((_DWORD *)v16 + 22) = *(_DWORD *)(a2 + 88);
  *((void *)v11 + 10) = v12;
  v17 += 96;
  sub_1978AEC(a1, &v15);
  uint64_t v13 = a1[1];
  sub_1978D74((uint64_t)&v15);
  return v13;
}

void sub_19791B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1978D74((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_19791C8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 64) = -1;
  sub_1979210(a1, a2);
  return a1;
}

void sub_19791FC(_Unwind_Exception *a1)
{
  sub_1977230(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1979210(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(unsigned int *)(result + 64);
  if (v4 != -1) {
    uint64_t result = ((uint64_t (*)(char *, uint64_t))off_24E75B8[v4])(&v7, result);
  }
  *(_DWORD *)(v3 + 64) = -1;
  uint64_t v5 = *(unsigned int *)(a2 + 64);
  if (v5 != -1)
  {
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_24E7858[v5])(&v6, v3, a2);
    *(_DWORD *)(v3 + 64) = v5;
  }
  return result;
}

void *sub_19792A0(uint64_t a1, void *a2, uint64_t *a3)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return sub_1894EF8(a2, *a3, a3[1], 0x8F9C18F9C18F9C19 * ((a3[1] - *a3) >> 4));
}

void *sub_19792D0(uint64_t a1, void *a2, uint64_t *a3)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return sub_1916FC0(a2, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 8));
}

void *sub_19792F8(uint64_t a1, void *a2, uint64_t *a3)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return sub_197932C(a2, *a3, a3[1], 0xAAAAAAAAAAAAAAABLL * ((a3[1] - *a3) >> 4));
}

unsigned char *sub_1979320(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  return sub_1979438(a2, a3);
}

void *sub_197932C(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    char v6 = result;
    sub_18959A8(result, a4);
    uint64_t result = (void *)sub_19793B4((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1979394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1976FBC(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_19793B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_17A1B34(a4 + v7, a2 + v7);
      v7 += 48;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1979414(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 48;
    do
    {
      sub_17A1BB4((void *)(v4 + v2));
      v2 -= 48;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_1979438(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[56] = 0;
  if (*(unsigned char *)(a2 + 56))
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    sub_1892AD8((uint64_t)(a1 + 16), a2 + 16);
    a1[56] = 1;
  }
  return a1;
}

void sub_1979490(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 56)) {
    sub_12168(v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_19794AC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 56);
  if (!v1) {
    sub_29F82C();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

uint64_t sub_1979508(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1979590(a1 + 32, a2 + 32);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void *sub_1979550(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 72);
  if (v2) {
    sub_20A69F0(v2);
  }

  return sub_1979B4C((void *)(a1 + 32));
}

uint64_t sub_1979590(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1979628(void *a1)
{
  *a1 = off_24E78C8;
  sub_1978228(a1 + 4);
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (v2) {
    sub_20A69F0(v2);
  }
  return a1;
}

void sub_1979678(void *a1)
{
  *a1 = off_24E78C8;
  sub_1978228(a1 + 4);
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (v2) {
    sub_20A69F0(v2);
  }

  operator delete();
}

void *sub_19796E8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x40uLL);
  void *v2 = off_24E78C8;
  sub_1979A98((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_197973C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1979750(uint64_t a1, void *a2)
{
  *a2 = off_24E78C8;
  return sub_1979A98((uint64_t)(a2 + 1), a1 + 8);
}

void sub_197977C(uint64_t a1)
{
}

void sub_1979784(void *a1)
{
  sub_1979B00((uint64_t)a1 + 8);

  operator delete(a1);
}

void sub_19797C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = (uint64_t *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(NSObject **)(v5 + 1488);
  os_signpost_id_t v7 = *(void *)(nullsub_1(*(void *)(a1 + 16)) + 1424);
  if (v7 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
  {
    *(_WORD *)unint64_t v8 = 0;
    _os_signpost_emit_with_name_impl(&def_332C, v6, OS_SIGNPOST_INTERVAL_END, v7, "SearchService::Recall", (const char *)&unk_239608D, v8, 2u);
  }
  sub_196EA34(v5, v4, a2, a1 + 32);
}

void sub_197987C(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  __cxa_begin_catch(a1);
  uint64_t v12 = *v10;
  if (a2 == 2)
  {
    uint64_t v13 = nullsub_1(v12);
    if (os_log_type_enabled(*(os_log_t *)(v13 + 1416), OS_LOG_TYPE_ERROR)) {
      sub_197C420();
    }
    sub_18A4F94(1, (uint64_t)&a9);
    uint64_t v14 = *(void *)(v9 + 56);
    if (!v14) {
      sub_29F82C();
    }
  }
  else
  {
    uint64_t v15 = nullsub_1(v12);
    if (os_log_type_enabled(*(os_log_t *)(v15 + 1416), OS_LOG_TYPE_ERROR)) {
      sub_197C4B0();
    }
    sub_18A4F94(1, (uint64_t)&a9);
    uint64_t v14 = *(void *)(v9 + 56);
    if (!v14) {
      sub_29F82C();
    }
  }
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v14 + 48))(v14, &a9);
  sub_182E7B8(&a9);
  __cxa_end_catch();
  JUMPOUT(0x1979860);
}

void sub_1979984(_Unwind_Exception *a1)
{
}

uint64_t sub_19799CC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1979A0C()
{
}

uint64_t sub_1979A18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    uint64_t v3 = (void *)(a1 + 24);
  }
  *uint64_t v3 = 0;
  return a1;
}

uint64_t sub_1979A98(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  sub_1978190(a1 + 24, a2 + 24);
  return a1;
}

void sub_1979AE8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3) {
    sub_20A69F0(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1979B00(uint64_t a1)
{
  sub_1978228((void *)(a1 + 24));
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (v2)
  {
    sub_20A69F0(v2);
  }
}

void *sub_1979B4C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1979BD0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = operator new(0x9E8uLL);
  uint64_t result = sub_1979C34(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_1979C20(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1979C34(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_24E7958;
  sub_1C35324(a1 + 3);
  return a1;
}

void sub_1979C7C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1979C90(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24E7958;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1979CB0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24E7958;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1979D04(uint64_t a1)
{
  return sub_1979D10(a1 + 24);
}

uint64_t sub_1979D10(uint64_t a1)
{
  uint64_t v4 = (void **)(a1 + 2448);
  sub_189589C(&v4);
  if (*(unsigned char *)(a1 + 2440)) {
    sub_15B1678(a1 + 2352);
  }
  if (*(unsigned char *)(a1 + 2336)) {
    sub_12A6104(a1 + 2272);
  }
  sub_1896400(a1 + 2248, *(void **)(a1 + 2256));
  sub_1507620(a1 + 2192);
  sub_182B32C(a1 + 1968);
  sub_184DD50(a1 + 1616);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 1608);
  if (v2) {
    sub_20A69F0(v2);
  }
  if (*(char *)(a1 + 1599) < 0) {
    operator delete(*(void **)(a1 + 1576));
  }
  return sub_1898A60(a1);
}

uint64_t sub_1979DB4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (char *)operator new(0x60uLL);
  uint64_t result = sub_1979E00((uint64_t)v2);
  *a1 = v2 + 24;
  a1[1] = v2;
  return result;
}

void sub_1979DEC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1979E00(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_24E79A8;
  sub_1979EF8(1uLL, (void *)(a1 + 24));
  *(unsigned char *)(a1 + 88) = 0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_1979E64(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1979E78(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24E79A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1979E98(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24E79A8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1979EEC(uint64_t a1)
{
}

void sub_1979EF8(unint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v7 = a1;
  uint64_t v3 = dispatch_group_create();
  dispatch_object_t object = v3;
  dispatch_queue_global_t global_queue = dispatch_get_global_queue(0, 0);
  dispatch_queue_global_t v5 = global_queue;
  if (v3 && global_queue)
  {
    sub_1979F7C(&v7, &object, (uint64_t *)&v5, a2);
    dispatch_release(object);
  }
  else
  {
    if (v3) {
      dispatch_release(v3);
    }
    *a2 = 0;
    a2[1] = 0;
  }
}

void *sub_1979F7C@<X0>(unint64_t *a1@<X1>, dispatch_object_t *a2@<X2>, uint64_t *a3@<X3>, void *a4@<X8>)
{
  unint64_t v8 = operator new(0x48uLL);
  uint64_t result = sub_1979FF0(v8, a1, a2, a3);
  *a4 = v8 + 3;
  a4[1] = v8;
  return result;
}

void sub_1979FDC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1979FF0(void *a1, unint64_t *a2, dispatch_object_t *a3, uint64_t *a4)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_24E79F8;
  sub_197A0D8((uint64_t)(a1 + 3), *a2, *a3, *a4);
  return a1;
}

void sub_197A044(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_197A058(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24E79F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_197A078(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24E79F8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_197A0CC(uint64_t a1)
{
  return sub_197A28C(a1 + 24);
}

uint64_t sub_197A0D8(uint64_t a1, unint64_t a2, dispatch_object_t object, uint64_t a4)
{
  *(void *)a1 = object;
  *(void *)(a1 + 8) = a4;
  *(_DWORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  char v6 = (uint64_t *)(a1 + 24);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  dispatch_retain(object);
  dispatch_retain(*(dispatch_object_t *)(a1 + 8));
  sub_197A158(v6, a2);
  return a1;
}

void sub_197A140(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_197A1EC((void ***)va);
  _Unwind_Resume(a1);
}

void **sub_197A158(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (void **)(a1 + 2);
  if (a2 > (v4 - *a1) >> 4)
  {
    if (a2 >> 60) {
      sub_2E00();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_1121C00((uint64_t)result, a2);
    v7[1] = (char *)v7[0] + v5;
    v7[2] = (char *)v7[0] + v5;
    void v7[3] = (char *)v7[0] + 16 * v6;
    sub_18B2A24(a1, v7);
    return sub_18B2BAC(v7);
  }
  return result;
}

void sub_197A1D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_18B2BAC((void **)va);
  _Unwind_Resume(a1);
}

void sub_197A1EC(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_197A240((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_197A240(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 16)
  {
    uint64_t v4 = *(std::__shared_weak_count **)(i - 8);
    if (v4) {
      sub_20A69F0(v4);
    }
  }
  a1[1] = v2;
}

uint64_t sub_197A28C(uint64_t a1)
{
  dispatch_release(*(dispatch_object_t *)a1);
  dispatch_release(*(dispatch_object_t *)(a1 + 8));
  uint64_t v3 = (void **)(a1 + 24);
  sub_197A1EC(&v3);
  return a1;
}

void sub_197A2D8(uint64_t a1)
{
  uint64_t v3 = (void **)(a1 + 40);
  sub_197A32C(&v3);
  uint64_t v3 = (void **)(a1 + 16);
  sub_197A3B0(&v3);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2) {
    sub_20A69F0(v2);
  }
}

void sub_197A32C(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = v1[1];
    uint64_t v5 = v2;
    if (v4 != v2)
    {
      do
        uint64_t v4 = sub_19778EC(v4 - 4);
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_197A3B0(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = v1[1];
    uint64_t v5 = v2;
    if (v4 != v2)
    {
      do
        uint64_t v4 = sub_1977868(v4 - 4);
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_197A438()
{
}

void *sub_197A44C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_24E7A48;
  result[1] = v3;
  return result;
}

uint64_t sub_197A494(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_24E7A48;
  a2[1] = v2;
  return result;
}

void sub_197A4C0(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
}

uint64_t sub_197A4C8(uint64_t a1, uint64_t a2)
{
  if (sub_18B0CF0(a2, (uint64_t)&off_24E7AC8)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_197A508()
{
  return &off_24E7AC8;
}

void sub_197A514(void (**a1)(long long *, long long *, uint64_t), long long *a2, long long *a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  long long v5 = *a2;
  *(void *)a2 = 0;
  *((void *)a2 + 1) = 0;
  long long v6 = *a3;
  long long v7 = v5;
  *(void *)a3 = 0;
  *((void *)a3 + 1) = 0;
  v4(&v7, &v6, a4);
  if (*((void *)&v6 + 1)) {
    sub_20A69F0(*((std::__shared_weak_count **)&v6 + 1));
  }
  if (*((void *)&v7 + 1)) {
    sub_20A69F0(*((std::__shared_weak_count **)&v7 + 1));
  }
}

void sub_197A578(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a10) {
    sub_20A69F0(a10);
  }
  if (a12) {
    sub_20A69F0(a12);
  }
  _Unwind_Resume(exception_object);
}

void *sub_197A59C(void *a1)
{
  *a1 = off_24E7AF8;
  sub_1978228(a1 + 4);
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (v2) {
    sub_20A69F0(v2);
  }
  return a1;
}

void sub_197A5EC(void *a1)
{
  *a1 = off_24E7AF8;
  sub_1978228(a1 + 4);
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (v2) {
    sub_20A69F0(v2);
  }

  operator delete();
}

void *sub_197A65C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x40uLL);
  void *v2 = off_24E7AF8;
  sub_197AAA0((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_197A6B0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_197A6C4(uint64_t a1, void *a2)
{
  *a2 = off_24E7AF8;
  return sub_197AAA0((uint64_t)(a2 + 1), a1 + 8);
}

void sub_197A6F0(uint64_t a1)
{
}

void sub_197A6F8(void *a1)
{
  sub_1979B00((uint64_t)a1 + 8);

  operator delete(a1);
}

uint64_t sub_197A734(void *a1, uint64_t *a2)
{
  sub_1893348((uint64_t)v12, a2);
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[1];
  sub_18981AC((uint64_t)v13, (uint64_t)v12);
  sub_1C3566C(v3, (uint64_t)v13);
  sub_1898634((uint64_t)v13);
  long long v5 = *(uint64_t **)(v4 + 1432);
  uint64_t v7 = a1[2];
  long long v6 = (std::__shared_weak_count *)a1[3];
  *(void *)&long long v14 = v4;
  *((void *)&v14 + 1) = v7;
  uint64_t v15 = v6;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1978190((uint64_t)v16, (uint64_t)(a1 + 4));
  uint64_t v18 = 0;
  unint64_t v8 = (char *)operator new(0x40uLL);
  uint64_t v9 = v8;
  *(void *)unint64_t v8 = off_24E7B78;
  *(_OWORD *)(v8 + 8) = v14;
  uint64_t v10 = v15;
  *((void *)v8 + 3) = v15;
  if (v10) {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1979A18((uint64_t)(v8 + 32), (uint64_t)v16);
  uint64_t v18 = v9;
  sub_1B70DC4(v5, a1 + 2, (uint64_t)v17);
  sub_197B024(v17);
  sub_1978228(v16);
  if (v15) {
    sub_20A69F0(v15);
  }
  return sub_1898634((uint64_t)v12);
}

void sub_197A898(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a2)
  {
    sub_197B024((void *)(v18 - 104));
    sub_1978228(v16);
    uint64_t v21 = *(std::__shared_weak_count **)(v18 - 144);
    if (v21) {
      sub_20A69F0(v21);
    }
    __cxa_begin_catch(exception_object);
    BOOL v22 = os_log_type_enabled(*(os_log_t *)(v17 + 1488), OS_LOG_TYPE_ERROR);
    if (a2 == 2)
    {
      if (v22) {
        sub_197C420();
      }
      sub_18A4F94(1, (uint64_t)&a15);
      uint64_t v23 = *(void *)(v15 + 56);
      if (!v23) {
        sub_29F82C();
      }
    }
    else
    {
      if (v22) {
        sub_197C4B0();
      }
      sub_18A4F94(1, (uint64_t)&a15);
      uint64_t v23 = *(void *)(v15 + 56);
      if (!v23) {
        sub_29F82C();
      }
    }
    (*(void (**)(uint64_t, char *))(*(void *)v23 + 48))(v23, &a15);
    sub_182E7B8(&a15);
    __cxa_end_catch();
    JUMPOUT(0x197A858);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_197AA54(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_197AA94()
{
}

uint64_t sub_197AAA0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  sub_1978190(a1 + 24, a2 + 24);
  return a1;
}

void sub_197AAF0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3) {
    sub_20A69F0(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_197AB08(void *a1)
{
  *a1 = off_24E7B78;
  sub_1978228(a1 + 4);
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (v2) {
    sub_20A69F0(v2);
  }
  return a1;
}

void sub_197AB58(void *a1)
{
  *a1 = off_24E7B78;
  sub_1978228(a1 + 4);
  uint64_t v2 = (std::__shared_weak_count *)a1[3];
  if (v2) {
    sub_20A69F0(v2);
  }

  operator delete();
}

void *sub_197ABC8(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = operator new(0x40uLL);
  void *v2 = off_24E7B78;
  sub_197AFBC((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_197AC1C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_197AC30(uint64_t a1, void *a2)
{
  *a2 = off_24E7B78;
  return sub_197AFBC((uint64_t)(a2 + 1), a1 + 8);
}

void sub_197AC5C(uint64_t a1)
{
}

void sub_197AC64(void *a1)
{
  sub_1979B00((uint64_t)a1 + 8);

  operator delete(a1);
}

void sub_197ACA0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v3 = (std::__shared_weak_count *)a2[1];
  uint64_t v10 = *a2;
  uint64_t v11 = v3;
  *a2 = 0;
  a2[1] = 0;
  long long v5 = (uint64_t *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(NSObject **)(v6 + 1488);
  os_signpost_id_t v8 = *(void *)(nullsub_1(*(void *)(a1 + 16)) + 1424);
  if (v8 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&def_332C, v7, OS_SIGNPOST_INTERVAL_END, v8, "SearchService::QuProcessing", (const char *)&unk_239608D, buf, 2u);
  }
  uint64_t v9 = *v5;
  uint64_t v13 = v4;
  long long v14 = v3;
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1C3546C(v9, &v13);
  if (v14) {
    sub_20A69F0(v14);
  }
  sub_1C35600(*v5, &v10);
  sub_1978190((uint64_t)v15, a1 + 32);
  sub_196EBF8(v6, v5, (uint64_t)v15);
  sub_1978228(v15);
  if (v11) {
    sub_20A69F0(v11);
  }
}

void sub_197ADE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
  {
    sub_1978228((void *)(v13 - 104));
    __cxa_begin_catch(exception_object);
    BOOL v16 = os_log_type_enabled(*(os_log_t *)(v12 + 1488), OS_LOG_TYPE_ERROR);
    if (a2 == 2)
    {
      if (v16) {
        sub_197C420();
      }
      sub_18A4F94(1, (uint64_t)&a11);
      uint64_t v17 = *(void *)(v11 + 56);
      if (!v17) {
        sub_29F82C();
      }
    }
    else
    {
      if (v16) {
        sub_197C4B0();
      }
      sub_18A4F94(1, (uint64_t)&a11);
      uint64_t v17 = *(void *)(v11 + 56);
      if (!v17) {
        sub_29F82C();
      }
    }
    (*(void (**)(uint64_t, char *))(*(void *)v17 + 48))(v17, &a11);
    sub_182E7B8(&a11);
    __cxa_end_catch();
    JUMPOUT(0x197ADA0);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_197AF70(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_197AFB0()
{
}

uint64_t sub_197AFBC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  sub_1978190(a1 + 24, a2 + 24);
  return a1;
}

void sub_197B00C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3) {
    sub_20A69F0(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_197B024(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_197B0A8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_197B12C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *(void **)(a1 + 24);
  if (*(char *)(a2 + 23) < 0)
  {
    sub_4200(__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a2;
    uint64_t v7 = *(void *)(a2 + 16);
  }
  sub_1A27430(v4, (char *)__p, (uint64_t)&v8);
  if (SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
  if (v10)
  {
    *a3 = 0;
    a3[1] = 0;
  }
  else
  {
    long long v5 = v9;
    *a3 = v8;
    a3[1] = v5;
    if (v5) {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    }
  }
  if (v9) {
    sub_20A69F0(v9);
  }
}

void sub_197B1D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_197B1F4(uint64_t a1, long long *a2)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((unsigned char *)a2 + 23) = 0;
  *(unsigned char *)a2 = 0;
  sub_197B470((__n128 *)(a1 + 24), (__n128 *)((char *)a2 + 24));
  return a1;
}

char *sub_197B254(char *__dst, long long *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  __dst[24] = 0;
  __dst[40] = 0;
  if (*(unsigned char *)(a3 + 16))
  {
    *(_OWORD *)(__dst + 24) = *(_OWORD *)a3;
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    __dst[40] = 1;
  }
  return __dst;
}

uint64_t *sub_197B2CC(uint64_t **a1, void **a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (uint64_t **)sub_1122028((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    sub_197B378((uint64_t)a1, a4, (uint64_t)v10);
    sub_11220BC(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_197B418((uint64_t)v10, 0);
  }
  return v7;
}

unsigned char *sub_197B378@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x68uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 32;
  uint64_t v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_4200(result, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    *((void *)v6 + 6) = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }
  v6[96] = 0;
  *((void *)v6 + 8) = 0;
  *((void *)v6 + 9) = 0;
  *((void *)v6 + 7) = 0;
  v6[80] = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_197B400(_Unwind_Exception *a1)
{
  sub_197B418(v1, 0);
  _Unwind_Resume(a1);
}

void sub_197B418(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1976F08((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

__n128 sub_197B470(__n128 *a1, __n128 *a2)
{
  if (a1[1].n128_u8[0] == a2[1].n128_u8[0])
  {
    if (a1[1].n128_u8[0])
    {
      __n128 result = *a2;
      a2->n128_u64[0] = 0;
      a2->n128_u64[1] = 0;
      long long v4 = (std::__shared_weak_count *)a1->n128_u64[1];
      *a1 = result;
      if (v4)
      {
        sub_20A69F0(v4);
      }
    }
  }
  else if (a1[1].n128_u8[0])
  {
    uint64_t v5 = (std::__shared_weak_count *)a1->n128_u64[1];
    if (v5) {
      sub_20A69F0(v5);
    }
    a1[1].n128_u8[0] = 0;
  }
  else
  {
    __n128 result = *a2;
    *a1 = *a2;
    a2->n128_u64[0] = 0;
    a2->n128_u64[1] = 0;
    a1[1].n128_u8[0] = 1;
  }
  return result;
}

void sub_197B500(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  long long v4 = *(void **)(a1 + 24);
  if (*(char *)(a2 + 23) < 0)
  {
    sub_4200(__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a2;
    uint64_t v7 = *(void *)(a2 + 16);
  }
  sub_1A27430(v4, (char *)__p, (uint64_t)&v8);
  if (SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
  if (v10)
  {
    *a3 = 0;
    a3[1] = 0;
  }
  else
  {
    uint64_t v5 = v9;
    *a3 = v8;
    a3[1] = v5;
    if (v5) {
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    }
  }
  if (v9) {
    sub_20A69F0(v9);
  }
}

void sub_197B5AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_197B5C8(uint64_t a1, long long *a2)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((unsigned char *)a2 + 23) = 0;
  *(unsigned char *)a2 = 0;
  sub_197B470((__n128 *)(a1 + 24), (__n128 *)((char *)a2 + 24));
  return a1;
}

uint64_t *sub_197B628(uint64_t **a1, void **a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (uint64_t **)sub_1122028((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    sub_197B6D4((uint64_t)a1, a4, (uint64_t)v10);
    sub_11220BC(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_197B418((uint64_t)v10, 0);
  }
  return v7;
}

unsigned char *sub_197B6D4@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x68uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  __n128 result = v6 + 32;
  uint64_t v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    __n128 result = sub_4200(result, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    *((void *)v6 + 6) = *((void *)v8 + 2);
    *(_OWORD *)__n128 result = v9;
  }
  v6[96] = 0;
  *((void *)v6 + 8) = 0;
  *((void *)v6 + 9) = 0;
  *((void *)v6 + 7) = 0;
  v6[80] = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_197B75C(_Unwind_Exception *a1)
{
  sub_197B418(v1, 0);
  _Unwind_Resume(a1);
}

void sub_197B778()
{
}

void *sub_197B78C(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = off_24E7C18;
  result[1] = v3;
  return result;
}

uint64_t sub_197B7D4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_24E7C18;
  a2[1] = v2;
  return result;
}

void sub_197B800(uint64_t a1, long long *a2, long long *a3)
{
}

uint64_t sub_197B808(uint64_t a1, uint64_t a2)
{
  if (sub_18B0CF0(a2, (uint64_t)&off_24E7C98)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_197B848()
{
  return &off_24E7C98;
}

void sub_197B854(void (**a1)(long long *, long long *), long long *a2, long long *a3)
{
  uint64_t v3 = *a1;
  long long v4 = *a2;
  *(void *)a2 = 0;
  *((void *)a2 + 1) = 0;
  long long v5 = *a3;
  long long v6 = v4;
  *(void *)a3 = 0;
  *((void *)a3 + 1) = 0;
  v3(&v6, &v5);
  if (*((void *)&v5 + 1)) {
    sub_20A69F0(*((std::__shared_weak_count **)&v5 + 1));
  }
  if (*((void *)&v6 + 1)) {
    sub_20A69F0(*((std::__shared_weak_count **)&v6 + 1));
  }
}

void sub_197B8B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a10) {
    sub_20A69F0(a10);
  }
  if (a12) {
    sub_20A69F0(a12);
  }
  _Unwind_Resume(exception_object);
}

void *sub_197B8D8(void *a1)
{
  *a1 = off_24E7CC8;
  sub_1970D8C((uint64_t)(a1 + 1));
  return a1;
}

void sub_197B91C(void *a1)
{
  *a1 = off_24E7CC8;
  sub_1970D8C((uint64_t)(a1 + 1));

  operator delete();
}

void *sub_197B980(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 8);
  uint64_t v2 = operator new(0x5F0uLL);
  void *v2 = off_24E7CC8;
  sub_197BD44((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_197B9D4(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_197B9E8(uint64_t a1, void *a2)
{
  *a2 = off_24E7CC8;
  return sub_197BD44((uint64_t)(a2 + 1), (void *)(a1 + 8));
}

uint64_t sub_197BA14(uint64_t a1)
{
  return sub_1970D8C(a1 + 8);
}

void sub_197BA1C(void *a1)
{
  sub_1970D8C((uint64_t)a1 + 8);

  operator delete(a1);
}

uint64_t sub_197BA58(uint64_t a1, uint64_t *a2)
{
  sub_1893348((uint64_t)v6, a2);
  uint64_t v3 = *(void *)(a1 + 8);
  long long v4 = *(NSObject **)(v3 + 1488);
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    LOWORD(buf[0]) = 0;
    _os_log_impl(&def_332C, v4, OS_LOG_TYPE_INFO, "Received search capabilities request", (uint8_t *)buf, 2u);
  }
  if (*(unsigned char *)(a1 + 1096)) {
    sub_1896F30((uint64_t)buf, (uint64_t *)(a1 + 16));
  }
  else {
    sub_1A0EF9C(v6, (uint64_t)buf);
  }
  sub_1978190((uint64_t)v8, a1 + 1488);
  sub_2059CB0(v3 + 1504, a1 + 1104, buf, v6, (uint64_t)v8);
  sub_1978228(v8);
  sub_18988B4((uint64_t)buf);
  return sub_1898634((uint64_t)v6);
}

void sub_197BB64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a2)
  {
    uint64_t v19 = v16;
    sub_1978228((void *)(v17 - 88));
    sub_18988B4((uint64_t)&a15);
    __cxa_begin_catch(exception_object);
    BOOL v21 = os_log_type_enabled(*(os_log_t *)(v19 + 1488), OS_LOG_TYPE_ERROR);
    if (a2 == 2)
    {
      if (v21) {
        sub_197C420();
      }
      sub_18A4F94(1, (uint64_t)&a15);
      uint64_t v22 = *(void *)(v15 + 1512);
      if (!v22) {
        sub_29F82C();
      }
    }
    else
    {
      if (v21) {
        sub_197C4B0();
      }
      sub_18A4F94(1, (uint64_t)&a15);
      uint64_t v22 = *(void *)(v15 + 1512);
      if (!v22) {
        sub_29F82C();
      }
    }
    (*(void (**)(uint64_t, char *))(*(void *)v22 + 48))(v22, &a15);
    sub_182E7B8(&a15);
    __cxa_end_catch();
    JUMPOUT(0x197BB28);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_197BCF8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_197BD38()
{
}

uint64_t sub_197BD44(uint64_t a1, void *a2)
{
  *(void *)a1 = *a2;
  sub_1977808((unsigned char *)(a1 + 8), (uint64_t)(a2 + 1));
  sub_1970C60(a1 + 1096, (uint64_t)(a2 + 137));
  sub_1978190(a1 + 1480, (uint64_t)(a2 + 185));
  return a1;
}

void sub_197BDA4(_Unwind_Exception *a1)
{
  long long v5 = *(std::__shared_weak_count **)(v2 + 1472);
  if (v5) {
    sub_20A69F0(v5);
  }
  sub_197C4E4(v2, v3);
  if (*(unsigned char *)(v2 + 1088)) {
    sub_18988B4(v1);
  }
  _Unwind_Resume(a1);
}

void *sub_197BDE0(void *a1)
{
  *a1 = off_24E7D48;
  sub_1970D8C((uint64_t)(a1 + 1));
  return a1;
}

void sub_197BE24(void *a1)
{
  *a1 = off_24E7D48;
  sub_1970D8C((uint64_t)(a1 + 1));

  operator delete();
}

void *sub_197BE88(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + 8);
  uint64_t v2 = operator new(0x5F0uLL);
  void *v2 = off_24E7D48;
  sub_197C25C((uint64_t)(v2 + 1), v1);
  return v2;
}

void sub_197BEDC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_197BEF0(uint64_t a1, void *a2)
{
  *a2 = off_24E7D48;
  return sub_197C25C((uint64_t)(a2 + 1), (void *)(a1 + 8));
}

uint64_t sub_197BF1C(uint64_t a1)
{
  return sub_1970D8C(a1 + 8);
}

void sub_197BF24(void *a1)
{
  sub_1970D8C((uint64_t)a1 + 8);

  operator delete(a1);
}

uint64_t sub_197BF60(uint64_t a1, uint64_t *a2)
{
  sub_1893348((uint64_t)v5, a2);
  uint64_t v3 = *(uint64_t **)(a1 + 8);
  if (*(unsigned char *)(a1 + 1096)) {
    sub_1896F30((uint64_t)v8, (uint64_t *)(a1 + 16));
  }
  else {
    sub_1A0EF9C(v5, (uint64_t)v8);
  }
  sub_196FC68((uint64_t)v3, a1 + 1104, (uint64_t)v8, v5);
  sub_196F5B0(a1 + 1104, v3, v3[186], (uint64_t)v8, v5, &v6);
  sub_1978190((uint64_t)v9, a1 + 1488);
  sub_196F94C(v3, &v6, (uint64_t)v9);
  sub_1978228(v9);
  if (v7) {
    sub_20A69F0(v7);
  }
  sub_18988B4((uint64_t)v8);
  return sub_1898634((uint64_t)v5);
}

void sub_197C068(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16, char a17)
{
  if (a2)
  {
    sub_1978228((void *)(v19 - 88));
    if (a16) {
      sub_20A69F0(a16);
    }
    sub_18988B4((uint64_t)&a17);
    __cxa_begin_catch(exception_object);
    BOOL v22 = os_log_type_enabled(*(os_log_t *)(v18 + 1488), OS_LOG_TYPE_ERROR);
    if (a2 == 2)
    {
      if (v22) {
        sub_197C420();
      }
      sub_18A4F94(1, (uint64_t)&a17);
      uint64_t v23 = *(void *)(v17 + 1512);
      if (!v23) {
        sub_29F82C();
      }
    }
    else
    {
      if (v22) {
        sub_197C4B0();
      }
      sub_18A4F94(1, (uint64_t)&a17);
      uint64_t v23 = *(void *)(v17 + 1512);
      if (!v23) {
        sub_29F82C();
      }
    }
    (*(void (**)(uint64_t, char *))(*(void *)v23 + 48))(v23, &a17);
    sub_182E7B8(&a17);
    __cxa_end_catch();
    JUMPOUT(0x197C02CLL);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_197C210(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_197C250()
{
}

uint64_t sub_197C25C(uint64_t a1, void *a2)
{
  *(void *)a1 = *a2;
  sub_1977808((unsigned char *)(a1 + 8), (uint64_t)(a2 + 1));
  sub_1970C60(a1 + 1096, (uint64_t)(a2 + 137));
  sub_1978190(a1 + 1480, (uint64_t)(a2 + 185));
  return a1;
}

void sub_197C2BC(_Unwind_Exception *a1)
{
  long long v5 = *(std::__shared_weak_count **)(v2 + 1472);
  if (v5) {
    sub_20A69F0(v5);
  }
  sub_197C4E4(v2, v3);
  if (*(unsigned char *)(v2 + 1088)) {
    sub_18988B4(v1);
  }
  _Unwind_Resume(a1);
}

void sub_197C2F8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_197C328(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_197C35C()
{
  sub_197C318();
  (*(void (**)(void))(v0 + 16))();
  sub_197C350();
  sub_197C2F8(&def_332C, v1, v2, "Exception thrown while composing SAR Response - .%s ", v3, v4, v5, v6, v7);
}

void sub_197C3EC()
{
  sub_197C344();
  sub_197C328(&def_332C, v0, v1, "Exception thrown while composing SAR Response ", v2, v3, v4, v5, v6);
}

void sub_197C420()
{
  sub_197C318();
  (*(void (**)(void))(v0 + 16))();
  sub_197C350();
  sub_197C2F8(&def_332C, v1, v2, "Exception thrown while processing request - .%s ", v3, v4, v5, v6, v7);
}

void sub_197C4B0()
{
  sub_197C344();
  sub_197C328(&def_332C, v0, v1, "Exception thrown while processing request ", v2, v3, v4, v5, v6);
}

uint64_t sub_197C4E4(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 1456))
  {
    uint64_t v4 = *(std::__shared_weak_count **)(a1 + 1448);
    if (v4) {
      sub_20A69F0(v4);
    }
  }
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 1432);
  if (v5) {
    sub_20A69F0(v5);
  }
  if (*(unsigned char *)(a1 + 1416))
  {
    uint8_t v6 = *(std::__shared_weak_count **)(a1 + 1408);
    if (v6) {
      sub_20A69F0(v6);
    }
  }
  sub_1643B60(a1 + 1320);

  return sub_182B32C(a2);
}

void sub_197C558()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_26263B8, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1983538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1985544()
{
}

void sub_1985550()
{
}

void sub_1985560()
{
}

void sub_198556C()
{
}

void sub_198557C()
{
}

void sub_1985588()
{
}

void sub_1985598()
{
}

void sub_19855A4()
{
}

void sub_19855B4()
{
}

void sub_19855C0()
{
}

void sub_19855D0()
{
}

void sub_19855DC()
{
}

void sub_19855EC()
{
}

void sub_19855F8()
{
}

void sub_1985608()
{
}

void sub_1985614()
{
}

void sub_1985624()
{
}

void sub_1985630()
{
}

void sub_1985640()
{
}

void sub_198564C()
{
}

void sub_198565C()
{
}

void sub_1985668()
{
}

void sub_1985678()
{
}

void sub_1985684()
{
}

void sub_1985694()
{
}

void sub_19856A0()
{
}

void sub_19856B0()
{
}

void sub_19856BC()
{
}

void sub_19856CC()
{
}

void sub_19856D8()
{
}

void sub_19856E8()
{
}

void sub_19856F4()
{
}

void sub_1985704()
{
}

void sub_1985710()
{
}

void sub_1985720()
{
}

void sub_198572C()
{
}

void sub_198573C()
{
}

void sub_1985748()
{
}

void sub_1985758()
{
}

void sub_1985764()
{
}

void sub_1985774()
{
}

void sub_1985780()
{
}

void sub_1985790()
{
}

void sub_198579C()
{
}

void sub_19857AC()
{
}

void sub_19857B8()
{
}

void sub_19857C8()
{
}

void sub_19857D4()
{
}

void sub_19857E4()
{
}

void sub_19857F0()
{
}

void sub_1985800()
{
}

void sub_198580C()
{
}

void sub_198581C()
{
}

void sub_1985828()
{
}

void sub_1985838()
{
}

void sub_1985844()
{
}

void sub_1985854()
{
}

void sub_1985860()
{
}

void sub_1985870()
{
}

void sub_198587C()
{
}

void sub_198588C()
{
}

void sub_1985898()
{
}

void sub_19858A8()
{
}

void sub_19858B4()
{
}

void sub_19858C4()
{
}

void sub_19858D0()
{
}

void sub_19858E0()
{
}

void sub_19858EC()
{
}

void sub_19858FC()
{
}

void sub_1985908()
{
}

void sub_1985918()
{
}

void sub_1985924()
{
}

void sub_1985934()
{
}

void sub_1985940()
{
}

void sub_1985950()
{
}

void sub_198595C()
{
}

void sub_198596C()
{
}

void sub_1985978()
{
}

void sub_1985988()
{
}

void sub_1985994()
{
}

void sub_19859A4()
{
}

void sub_19859B0()
{
}

void sub_19859C0()
{
}

void sub_19859CC()
{
}

void sub_19859DC()
{
}

void sub_19859E8()
{
}

void sub_19859F8()
{
}

void sub_1985A04()
{
}

void sub_1985A14()
{
}

void sub_1985A20()
{
}

void sub_1985A30()
{
}

void sub_1985A3C()
{
}

void sub_1985A4C()
{
}

void sub_1985A58()
{
}

void sub_1985A68()
{
}

void sub_1985A74()
{
}

void sub_1985A84()
{
}

void sub_1985A90()
{
}

void sub_1985AA0()
{
}

void sub_1985AAC()
{
}

void sub_1985ABC()
{
}

void sub_1985AC8()
{
}

void sub_1985AD8()
{
}

void sub_1985AE4()
{
}

void sub_1985AF4()
{
}

void sub_1985B00()
{
}

void sub_1985B10()
{
}

void sub_1985B1C()
{
}

void sub_1985B2C()
{
}

void sub_1985B38()
{
}

void sub_1985B48()
{
}

void sub_1985B54()
{
}

void sub_1985B64()
{
}

void sub_1985B70()
{
}

void sub_1985B80()
{
}

void sub_1985B8C()
{
}

void sub_1985B9C()
{
}

void sub_1985BA8()
{
}

void sub_1985BB8()
{
}

void sub_1985BC4()
{
}

void sub_1985BD4()
{
}

void sub_1985BE0()
{
}

void sub_1985BF0()
{
}

void sub_1985BFC()
{
}

void sub_1985C0C()
{
}

void sub_1985C18()
{
}

void sub_1985C28()
{
}

void sub_1985C34()
{
}

void sub_1985C44()
{
}

void sub_1985C50()
{
}

void sub_1985C60()
{
}

void sub_1985C6C()
{
}

void sub_1985C7C()
{
}

void sub_1985C88()
{
}

void sub_1985C98()
{
}

void sub_1985CA4()
{
}

void sub_1985CB4()
{
}

void sub_1985CC0()
{
}

void sub_1985CD0()
{
}

void sub_1985CDC()
{
}

void sub_1985CEC()
{
}

void sub_1985CF8()
{
}

void sub_1985D08()
{
}

void sub_1985D14()
{
}

void sub_1985D24()
{
}

void sub_1985D30()
{
}

void sub_1985D40()
{
}

void sub_1985D4C()
{
}

void sub_1985D5C()
{
}

void sub_1985D68()
{
}

void sub_1985D78()
{
}

void sub_1985D84()
{
}

void sub_1985D94()
{
}

void sub_1985DA0()
{
}

void sub_1985DB0()
{
}

void sub_1985DBC()
{
}

void sub_1985DCC()
{
}

void sub_1985DD8()
{
}

void sub_1985DE8()
{
}

void sub_1985DF4()
{
}

void sub_1985E04()
{
}

void sub_1985E10()
{
}

void sub_1985E20()
{
}

void sub_1985E2C()
{
}

void sub_1985E3C()
{
}

void sub_1985E48()
{
}

void sub_1985E58()
{
}

void sub_1985E64()
{
}

void sub_1985E74()
{
}

void sub_1985E80()
{
}

void sub_1985E90()
{
}

void sub_1985E9C()
{
}

void sub_1985EAC()
{
}

void sub_1985EB8()
{
}

void sub_1985EC8()
{
}

void sub_1985ED4()
{
}

void sub_1985EE4()
{
}

void sub_1985EF0()
{
}

void sub_1985F00()
{
}

void sub_1985F0C()
{
}

void sub_1985F1C()
{
}

void sub_1985F28()
{
}

void sub_1985F38()
{
}

void sub_1985F44()
{
}

void sub_1985F54()
{
}

void sub_1985F60()
{
}

void sub_1985F70()
{
}

void sub_1985F7C()
{
}

void sub_1985F8C()
{
}

void sub_1985F98()
{
}

void sub_1985FA8()
{
}

void sub_1985FB4()
{
}

void sub_1985FC4()
{
}

void sub_1985FD0()
{
}

void sub_1985FE0()
{
}

void sub_1985FEC()
{
}

void sub_1985FFC()
{
}

void sub_1986008()
{
}

void sub_1986018()
{
}

void sub_1986024()
{
}

void sub_1986034()
{
}

void sub_1986040()
{
}

void sub_1986050()
{
}

void sub_198605C()
{
}

void sub_198606C()
{
}

void sub_1986078()
{
}

void sub_1986088()
{
}

void sub_1986094()
{
}

void sub_19860A4()
{
}

void sub_19860B0()
{
}

void sub_19860C0()
{
}

void sub_19860CC()
{
}

void sub_19860DC()
{
}

void sub_19860E8()
{
}

void sub_19860F8()
{
}

void sub_1986104()
{
}

void sub_1986114()
{
}

void sub_1986120()
{
}

void sub_1986130()
{
}

void sub_198613C()
{
}

void sub_198614C()
{
}

void sub_1986158()
{
}

void sub_1986168()
{
}

void sub_1986174()
{
}

void sub_1986184()
{
}

void sub_1986190()
{
}

void sub_19861A0()
{
}

void sub_19861AC()
{
}

void sub_19861BC()
{
}

void sub_19861C8()
{
}

void sub_19861D8()
{
}

void sub_19861E4()
{
}

void sub_19861F4()
{
}

void sub_1986200()
{
}

void sub_1986210()
{
}

void sub_198621C()
{
}

void sub_198622C()
{
}

void sub_1986238()
{
}

void sub_1986248()
{
}

void sub_1986254()
{
}

void sub_1986264()
{
}

void sub_1986270()
{
}

void sub_1986280()
{
}

void sub_198628C()
{
}

void sub_198629C()
{
}

void sub_19862A8()
{
}

void sub_19862B8()
{
}

void sub_19862C4()
{
}

void sub_19862D4()
{
}

void sub_19862E0()
{
}

void sub_19862F0()
{
}

void sub_19862FC()
{
}

void sub_198630C()
{
}

void sub_1986318()
{
}

void sub_1986328()
{
}

void sub_1986334()
{
}

void sub_1986344()
{
}

void sub_1986350()
{
}

void sub_1986360()
{
}

void sub_198636C()
{
}

void sub_198637C()
{
}

void sub_1986388()
{
}

void sub_1986398()
{
}

void sub_19863A4()
{
}

void sub_19863B4()
{
}

void sub_19863C0()
{
}

void sub_19863D0()
{
}

void sub_19863DC()
{
}

void sub_19863EC()
{
}

void sub_19863F8()
{
}

void sub_1986408()
{
}

void sub_1986414()
{
}

void sub_1986424()
{
}

void sub_1986430()
{
}

void sub_1986440()
{
}

void sub_198644C()
{
}

void sub_198645C()
{
}

void sub_1986468()
{
}

void sub_1986478()
{
}

void sub_1986484()
{
}

void sub_1986490()
{
}

void sub_198649C()
{
}

void sub_19864A8()
{
}

void sub_19864B8()
{
}

void sub_19864C4()
{
}

void sub_19864D4()
{
}

void sub_19864E0()
{
}

void sub_19864F0()
{
}

void sub_19864FC()
{
}

void sub_198650C()
{
}

void sub_1986518()
{
}

void sub_1986528()
{
}

void sub_1986534()
{
}

void sub_1986544()
{
}

void sub_1986550()
{
}

void sub_1986560()
{
}

void sub_198656C()
{
}

void sub_198657C()
{
}

void sub_1986588()
{
}

void sub_1986598()
{
}

void sub_19865A4()
{
}

void sub_19865B4()
{
}

void sub_19865C0()
{
}

void sub_19865D0()
{
}

void sub_19865DC()
{
}

void sub_19865EC()
{
}

void sub_19865F8()
{
}

void sub_1986608()
{
}

void sub_1986614()
{
}

void sub_1986624()
{
}

void sub_1986630()
{
}

void sub_1986640()
{
}

void sub_198664C()
{
}

void sub_198665C()
{
}

void sub_1986668()
{
}

void sub_1986678()
{
}

void sub_1986684()
{
}

void sub_1986694()
{
}

void sub_19866A0()
{
}

void sub_19866B0()
{
}

void sub_19866BC()
{
}

void sub_19866CC()
{
}

void sub_19866D8()
{
}

void sub_19866E8()
{
}

void sub_19866F4()
{
}

void sub_1986704()
{
}

void sub_1986710()
{
}

void sub_1986720()
{
}

void sub_198672C()
{
}

void sub_198673C()
{
}

void sub_1986748()
{
}

void sub_1986758()
{
}

void sub_1986764()
{
}

void sub_1986774()
{
}

void sub_1986780()
{
}

void sub_1986790()
{
}

void sub_198679C()
{
}

void sub_19867AC()
{
}

void sub_19867B8()
{
}

void sub_19867C8()
{
}

void sub_19867D4()
{
}

void sub_19867E4()
{
}

void sub_19867F0()
{
}

void sub_1986800()
{
}

void sub_198680C()
{
}

void sub_198681C()
{
}

void sub_1986828()
{
}

void sub_1986838()
{
}

void sub_1986844()
{
}

void sub_1986854()
{
}

void sub_1986860()
{
}

void sub_1986870()
{
}

void sub_198687C()
{
}

void sub_198688C()
{
}

void sub_1986898()
{
}

void sub_19868A8()
{
}

void sub_19868B4()
{
}

void sub_19868C4()
{
}

void sub_19868D0()
{
}

void sub_19868E0()
{
}

void sub_19868EC()
{
}

void sub_19868FC()
{
}

void sub_1986908()
{
}

void sub_1986918()
{
}

void sub_1986924()
{
}

void sub_1986934()
{
}

void sub_1986940()
{
}

void sub_1986950()
{
}

void sub_198695C()
{
}

void sub_198696C()
{
}

void sub_1986978()
{
}

void sub_1986988()
{
}

void sub_1986994()
{
}

void sub_19869A4()
{
}

void sub_19869B0()
{
}

void sub_19869C0()
{
}

void sub_19869CC()
{
}

void sub_19869DC()
{
}

void sub_19869E8()
{
}

void sub_19869F8()
{
}

void sub_1986A04()
{
}

void sub_1986A14()
{
}

void sub_1986A20()
{
}

void sub_1986A30()
{
}

void sub_1986A3C()
{
}

void sub_1986A4C()
{
}

void sub_1986A58()
{
}

void sub_1986A68()
{
}

void sub_1986A74()
{
}

void sub_1986A84()
{
}

void sub_1986A90()
{
}

void sub_1986AA0()
{
}

void sub_1986AAC()
{
}

void sub_1986ABC()
{
}

void sub_1986AC8()
{
}

void sub_1986AD8()
{
}

void sub_1986AE4()
{
}

void sub_1986AF4()
{
}

void sub_1986B00()
{
}

void sub_1986B10()
{
}

void sub_1986B1C()
{
}

void sub_1986B2C()
{
}

void sub_1986B38()
{
}

void sub_1986B48()
{
}

void sub_1986B54()
{
}

void sub_1986B64()
{
}

void sub_1986B70()
{
}

void sub_1986B80()
{
}

void sub_1986B8C()
{
}

void sub_1986B9C()
{
}

void sub_1986BA8()
{
}

void sub_1986BB8()
{
}

void sub_1986BC4()
{
}

void sub_1986BD4()
{
}

void sub_1986BE0()
{
}

void sub_1986BF0()
{
}

void sub_1986BFC()
{
}

void sub_1986C0C()
{
}

void sub_1986C18()
{
}

void sub_1986C28()
{
}

void sub_1986C34()
{
}

void sub_1986C44()
{
}

void sub_1986C50()
{
}

void sub_1986C60()
{
}

void sub_1986C6C()
{
}

void sub_1986C7C()
{
}

void sub_1986C88()
{
}

void sub_1986C98()
{
}

void sub_1986CA4()
{
}

void sub_1986CB4()
{
}

void sub_1986CC0()
{
}

void sub_1986CD0()
{
}

void sub_1986CDC()
{
}

void sub_1986CEC()
{
}

void sub_1986CF8()
{
}

void sub_1986D08()
{
}

void sub_1986D14()
{
}

void sub_1986D24()
{
}

void sub_1986D30()
{
}

void sub_1986D40()
{
}

void sub_1986D4C()
{
}

void sub_1986D5C()
{
}

void sub_1986D68()
{
}

void sub_1986D78()
{
}

void sub_1986D84()
{
}

void sub_1986D94()
{
}

void sub_1986DA0()
{
}

void sub_1986DB0()
{
}

void sub_1986DBC()
{
}

void sub_1986DCC()
{
}

void sub_1986DD8()
{
}

void sub_1986DE8()
{
}

void sub_1986DF4()
{
}

void sub_1986E04()
{
}

void sub_1986E10()
{
}

void sub_1986E20()
{
}

void sub_1986E2C()
{
}

void sub_1986E3C()
{
}

void sub_1986E48()
{
}

void sub_1986E58()
{
}

void sub_1986E64()
{
}

void sub_1986E74()
{
}

void sub_1986E80()
{
}

void sub_1986E90()
{
}

void sub_1986E9C()
{
}

void sub_1986EAC()
{
}

void sub_1986EB8()
{
}

void sub_1986EC8()
{
}

void sub_1986ED4()
{
}

void sub_1986EE4()
{
}

void sub_1986EF0()
{
}

void sub_1986F00()
{
}

void sub_1986F0C()
{
}

void sub_1986F1C()
{
}

void sub_1986F28()
{
}

void sub_1986F38()
{
}

void sub_1986F44()
{
}

void sub_1986F54()
{
}

void sub_1986F60()
{
}

void sub_1986F70()
{
}

void sub_1986F7C()
{
}

void sub_1986F8C()
{
}

void sub_1986F98()
{
}

void sub_1986FA8()
{
}

void sub_1986FB4()
{
}

void sub_1986FC4()
{
}

void sub_1986FD0()
{
}

void sub_1986FDC()
{
}

void sub_1986FF0()
{
}

void sub_1987004()
{
}

void sub_198700C()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2626370 = 0;
  qword_2626378 = 0;
  qword_2626380 = 0;
  qword_2626370 = (uint64_t)operator new(0x18uLL);
  qword_2626378 = qword_2626370;
  qword_2626380 = qword_2626370 + 24;
  qword_2626378 = (uint64_t)sub_18914E4((uint64_t)&qword_2626380, (long long *)__p, v4, (char *)qword_2626370);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2626388 = 0;
  qword_2626390 = 0;
  qword_2626398 = 0;
  qword_2626388 = (uint64_t)operator new(0x18uLL);
  qword_2626390 = qword_2626388;
  qword_2626398 = qword_2626388 + 24;
  qword_2626390 = (uint64_t)sub_18914E4((uint64_t)&qword_2626398, (long long *)__p, v4, (char *)qword_2626388);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_26263A0 = 0;
  qword_26263A8 = 0;
  qword_26263B0 = 0;
  qword_26263A0 = (uint64_t)operator new(0x18uLL);
  qword_26263A8 = qword_26263A0;
  qword_26263B0 = qword_26263A0 + 24;
  qword_26263A8 = (uint64_t)sub_18914E4((uint64_t)&qword_26263B0, (long long *)__p, v4, (char *)qword_26263A0);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_197C558();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_26263D0, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_26263F8, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_19876C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

void sub_1987878(long long **a1@<X1>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  memset(v15, 0, sizeof(v15));
  uint64_t v2 = *a1;
  char v3 = a1[1];
  if (*a1 != v3)
  {
    char v5 = 0;
    do
    {
      sub_18D554C((char *)__p, v2);
      sub_18D554C((char *)&__dst, (long long *)__p);
      sub_1987A2C((uint64_t)__p, &__str);
      if (v9)
      {
        std::string::operator=(&__dst, &__str);
        char v5 = 1;
      }
      sub_1987CD4(v15, (long long *)&__dst);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      sub_22EFF4((uint64_t)v11, v11[1]);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      sub_22EFF4((uint64_t)v14, v14[1]);
      if (v13 < 0) {
        operator delete(__p[0]);
      }
      v2 += 4;
    }
    while (v2 != v3);
    if (v5)
    {
      unint64_t v6 = a2[1];
      if (v6 >= a2[2])
      {
        uint64_t v7 = sub_18D4FC4(a2, v15);
      }
      else
      {
        sub_18D4F70((uint64_t)a2, v15);
        uint64_t v7 = v6 + 24;
      }
      a2[1] = v7;
    }
  }
  __p[0] = v15;
  sub_18D522C((void ***)__p);
}

void sub_19879C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  a25 = v25 - 88;
  sub_18D522C((void ***)&a25);
  sub_18D54D8((void ***)&a25);
  _Unwind_Resume(a1);
}

void sub_1987A2C(uint64_t a1@<X1>, std::string *a2@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26264C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26264C0))
  {
    sub_149B4((uint64_t)&unk_2626480, "(\\d{1,3})[.,](\\d{3})", 0);
  }
  sub_5E5C(v19, "$1$2");
  if (*(char *)(a1 + 23) < 0) {
    sub_4200(&__dst, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __dst = *(std::string *)a1;
  }
  char v4 = 0;
  memset(&__p, 0, sizeof(__p));
  while (1)
  {
    memset(&v16, 0, sizeof(v16));
    std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    if (v20 >= 0) {
      uint64_t v7 = (char *)v19;
    }
    else {
      uint64_t v7 = (char *)v19[0];
    }
    sub_1FF88(&v16, (uint64_t)p_dst, (char *)p_dst + size, (uint64_t)&unk_2626480, v7, 0);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = v16;
    std::string::size_type v8 = HIBYTE(v16.__r_.__value_.__r.__words[2]);
    std::string::size_type v9 = v16.__r_.__value_.__l.__size_;
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v10 = HIBYTE(v16.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v10 = v16.__r_.__value_.__l.__size_;
    }
    std::string::size_type v11 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v11 = __dst.__r_.__value_.__l.__size_;
    }
    if (v10 != v11) {
      goto LABEL_32;
    }
    uint64_t v12 = (__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &__dst
        : (std::string *)__dst.__r_.__value_.__r.__words[0];
    if ((*((unsigned char *)&v16.__r_.__value_.__s + 23) & 0x80) != 0) {
      break;
    }
    if (!v8)
    {
LABEL_33:
      *a2 = __p;
      goto LABEL_34;
    }
    p_p = &__p;
    std::string::size_type v14 = HIBYTE(v16.__r_.__value_.__r.__words[2]);
    while (p_p->__r_.__value_.__s.__data_[0] == v12->__r_.__value_.__s.__data_[0])
    {
      p_p = (std::string *)((char *)p_p + 1);
      uint64_t v12 = (std::string *)((char *)v12 + 1);
      if (!--v14) {
        goto LABEL_33;
      }
    }
LABEL_32:
    char v4 = 1;
    std::string::operator=(&__dst, &__p);
  }
  int v15 = (void *)__p.__r_.__value_.__r.__words[0];
  if (memcmp(__p.__r_.__value_.__l.__data_, v12, v16.__r_.__value_.__l.__size_)) {
    goto LABEL_32;
  }
  sub_4200(a2, v15, v9);
  LOBYTE(v8) = *((unsigned char *)&__p.__r_.__value_.__s + 23);
LABEL_34:
  a2[1].__r_.__value_.__s.__data_[0] = v4;
  if ((v8 & 0x80) != 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  if (v20 < 0) {
    operator delete(v19[0]);
  }
}

void sub_1987C60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
}

uint64_t sub_1987CD4(uint64_t *a1, long long *a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(v4 - 8);
  if (v7 >= v6)
  {
    uint64_t v10 = (uint64_t)(v7 - *a1) >> 6;
    if ((unint64_t)(v10 + 1) >> 58) {
      sub_2E00();
    }
    uint64_t v11 = v5 - *a1;
    uint64_t v12 = v11 >> 5;
    if (v11 >> 5 <= (unint64_t)(v10 + 1)) {
      uint64_t v12 = v10 + 1;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFC0) {
      unint64_t v13 = 0x3FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v12;
    }
    uint64_t v19 = v4;
    if (v13) {
      std::string::size_type v14 = (char *)sub_18D4E00(v4, v13);
    }
    else {
      std::string::size_type v14 = 0;
    }
    int v15 = v14;
    std::string v16 = &v14[64 * v10];
    char v18 = &v14[64 * v13];
    sub_18D554C(v16, a2);
    uint64_t v17 = v16 + 64;
    sub_18D4D88(a1, &v15);
    uint64_t v9 = a1[1];
    uint64_t result = sub_18D4F20((uint64_t)&v15);
  }
  else
  {
    uint64_t result = (uint64_t)sub_18D554C(*(char **)(v4 - 8), a2);
    uint64_t v9 = v7 + 64;
    a1[1] = v7 + 64;
  }
  a1[1] = v9;
  return result;
}

void sub_1987DC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

uint64_t sub_1987DE8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 48;
    sub_18963A8(i - 48);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1987E38()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2626468, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_198EE18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1990E24()
{
}

void sub_1990E30()
{
}

void sub_1990E40()
{
}

void sub_1990E4C()
{
}

void sub_1990E5C()
{
}

void sub_1990E68()
{
}

void sub_1990E78()
{
}

void sub_1990E84()
{
}

void sub_1990E94()
{
}

void sub_1990EA0()
{
}

void sub_1990EB0()
{
}

void sub_1990EBC()
{
}

void sub_1990ECC()
{
}

void sub_1990ED8()
{
}

void sub_1990EE8()
{
}

void sub_1990EF4()
{
}

void sub_1990F04()
{
}

void sub_1990F10()
{
}

void sub_1990F20()
{
}

void sub_1990F2C()
{
}

void sub_1990F3C()
{
}

void sub_1990F48()
{
}

void sub_1990F58()
{
}

void sub_1990F64()
{
}

void sub_1990F74()
{
}

void sub_1990F80()
{
}

void sub_1990F90()
{
}

void sub_1990F9C()
{
}

void sub_1990FAC()
{
}

void sub_1990FB8()
{
}

void sub_1990FC8()
{
}

void sub_1990FD4()
{
}

void sub_1990FE4()
{
}

void sub_1990FF0()
{
}

void sub_1991000()
{
}

void sub_199100C()
{
}

void sub_199101C()
{
}

void sub_1991028()
{
}

void sub_1991038()
{
}

void sub_1991044()
{
}

void sub_1991054()
{
}

void sub_1991060()
{
}

void sub_1991070()
{
}

void sub_199107C()
{
}

void sub_199108C()
{
}

void sub_1991098()
{
}

void sub_19910A8()
{
}

void sub_19910B4()
{
}

void sub_19910C4()
{
}

void sub_19910D0()
{
}

void sub_19910E0()
{
}

void sub_19910EC()
{
}

void sub_19910FC()
{
}

void sub_1991108()
{
}

void sub_1991118()
{
}

void sub_1991124()
{
}

void sub_1991134()
{
}

void sub_1991140()
{
}

void sub_1991150()
{
}

void sub_199115C()
{
}

void sub_199116C()
{
}

void sub_1991178()
{
}

void sub_1991188()
{
}

void sub_1991194()
{
}

void sub_19911A4()
{
}

void sub_19911B0()
{
}

void sub_19911C0()
{
}

void sub_19911CC()
{
}

void sub_19911DC()
{
}

void sub_19911E8()
{
}

void sub_19911F8()
{
}

void sub_1991204()
{
}

void sub_1991214()
{
}

void sub_1991220()
{
}

void sub_1991230()
{
}

void sub_199123C()
{
}

void sub_199124C()
{
}

void sub_1991258()
{
}

void sub_1991268()
{
}

void sub_1991274()
{
}

void sub_1991284()
{
}

void sub_1991290()
{
}

void sub_19912A0()
{
}

void sub_19912AC()
{
}

void sub_19912BC()
{
}

void sub_19912C8()
{
}

void sub_19912D8()
{
}

void sub_19912E4()
{
}

void sub_19912F4()
{
}

void sub_1991300()
{
}

void sub_1991310()
{
}

void sub_199131C()
{
}

void sub_199132C()
{
}

void sub_1991338()
{
}

void sub_1991348()
{
}

void sub_1991354()
{
}

void sub_1991364()
{
}

void sub_1991370()
{
}

void sub_1991380()
{
}

void sub_199138C()
{
}

void sub_199139C()
{
}

void sub_19913A8()
{
}

void sub_19913B8()
{
}

void sub_19913C4()
{
}

void sub_19913D4()
{
}

void sub_19913E0()
{
}

void sub_19913F0()
{
}

void sub_19913FC()
{
}

void sub_199140C()
{
}

void sub_1991418()
{
}

void sub_1991428()
{
}

void sub_1991434()
{
}

void sub_1991444()
{
}

void sub_1991450()
{
}

void sub_1991460()
{
}

void sub_199146C()
{
}

void sub_199147C()
{
}

void sub_1991488()
{
}

void sub_1991498()
{
}

void sub_19914A4()
{
}

void sub_19914B4()
{
}

void sub_19914C0()
{
}

void sub_19914D0()
{
}

void sub_19914DC()
{
}

void sub_19914EC()
{
}

void sub_19914F8()
{
}

void sub_1991508()
{
}

void sub_1991514()
{
}

void sub_1991524()
{
}

void sub_1991530()
{
}

void sub_1991540()
{
}

void sub_199154C()
{
}

void sub_199155C()
{
}

void sub_1991568()
{
}

void sub_1991578()
{
}

void sub_1991584()
{
}

void sub_1991594()
{
}

void sub_19915A0()
{
}

void sub_19915B0()
{
}

void sub_19915BC()
{
}

void sub_19915CC()
{
}

void sub_19915D8()
{
}

void sub_19915E8()
{
}

void sub_19915F4()
{
}

void sub_1991604()
{
}

void sub_1991610()
{
}

void sub_1991620()
{
}

void sub_199162C()
{
}

void sub_199163C()
{
}

void sub_1991648()
{
}

void sub_1991658()
{
}

void sub_1991664()
{
}

void sub_1991674()
{
}

void sub_1991680()
{
}

void sub_1991690()
{
}

void sub_199169C()
{
}

void sub_19916AC()
{
}

void sub_19916B8()
{
}

void sub_19916C8()
{
}

void sub_19916D4()
{
}

void sub_19916E4()
{
}

void sub_19916F0()
{
}

void sub_1991700()
{
}

void sub_199170C()
{
}

void sub_199171C()
{
}

void sub_1991728()
{
}

void sub_1991738()
{
}

void sub_1991744()
{
}

void sub_1991754()
{
}

void sub_1991760()
{
}

void sub_1991770()
{
}

void sub_199177C()
{
}

void sub_199178C()
{
}

void sub_1991798()
{
}

void sub_19917A8()
{
}

void sub_19917B4()
{
}

void sub_19917C4()
{
}

void sub_19917D0()
{
}

void sub_19917E0()
{
}

void sub_19917EC()
{
}

void sub_19917FC()
{
}

void sub_1991808()
{
}

void sub_1991818()
{
}

void sub_1991824()
{
}

void sub_1991834()
{
}

void sub_1991840()
{
}

void sub_1991850()
{
}

void sub_199185C()
{
}

void sub_199186C()
{
}

void sub_1991878()
{
}

void sub_1991888()
{
}

void sub_1991894()
{
}

void sub_19918A4()
{
}

void sub_19918B0()
{
}

void sub_19918C0()
{
}

void sub_19918CC()
{
}

void sub_19918DC()
{
}

void sub_19918E8()
{
}

void sub_19918F8()
{
}

void sub_1991904()
{
}

void sub_1991914()
{
}

void sub_1991920()
{
}

void sub_1991930()
{
}

void sub_199193C()
{
}

void sub_199194C()
{
}

void sub_1991958()
{
}

void sub_1991968()
{
}

void sub_1991974()
{
}

void sub_1991984()
{
}

void sub_1991990()
{
}

void sub_19919A0()
{
}

void sub_19919AC()
{
}

void sub_19919BC()
{
}

void sub_19919C8()
{
}

void sub_19919D8()
{
}

void sub_19919E4()
{
}

void sub_19919F4()
{
}

void sub_1991A00()
{
}

void sub_1991A10()
{
}

void sub_1991A1C()
{
}

void sub_1991A2C()
{
}

void sub_1991A38()
{
}

void sub_1991A48()
{
}

void sub_1991A54()
{
}

void sub_1991A64()
{
}

void sub_1991A70()
{
}

void sub_1991A80()
{
}

void sub_1991A8C()
{
}

void sub_1991A9C()
{
}

void sub_1991AA8()
{
}

void sub_1991AB8()
{
}

void sub_1991AC4()
{
}

void sub_1991AD4()
{
}

void sub_1991AE0()
{
}

void sub_1991AF0()
{
}

void sub_1991AFC()
{
}

void sub_1991B0C()
{
}

void sub_1991B18()
{
}

void sub_1991B28()
{
}

void sub_1991B34()
{
}

void sub_1991B44()
{
}

void sub_1991B50()
{
}

void sub_1991B60()
{
}

void sub_1991B6C()
{
}

void sub_1991B7C()
{
}

void sub_1991B88()
{
}

void sub_1991B98()
{
}

void sub_1991BA4()
{
}

void sub_1991BB4()
{
}

void sub_1991BC0()
{
}

void sub_1991BD0()
{
}

void sub_1991BDC()
{
}

void sub_1991BEC()
{
}

void sub_1991BF8()
{
}

void sub_1991C08()
{
}

void sub_1991C14()
{
}

void sub_1991C24()
{
}

void sub_1991C30()
{
}

void sub_1991C40()
{
}

void sub_1991C4C()
{
}

void sub_1991C5C()
{
}

void sub_1991C68()
{
}

void sub_1991C78()
{
}

void sub_1991C84()
{
}

void sub_1991C94()
{
}

void sub_1991CA0()
{
}

void sub_1991CB0()
{
}

void sub_1991CBC()
{
}

void sub_1991CCC()
{
}

void sub_1991CD8()
{
}

void sub_1991CE8()
{
}

void sub_1991CF4()
{
}

void sub_1991D04()
{
}

void sub_1991D10()
{
}

void sub_1991D20()
{
}

void sub_1991D2C()
{
}

void sub_1991D3C()
{
}

void sub_1991D48()
{
}

void sub_1991D58()
{
}

void sub_1991D64()
{
}

void sub_1991D70()
{
}

void sub_1991D7C()
{
}

void sub_1991D88()
{
}

void sub_1991D98()
{
}

void sub_1991DA4()
{
}

void sub_1991DB4()
{
}

void sub_1991DC0()
{
}

void sub_1991DD0()
{
}

void sub_1991DDC()
{
}

void sub_1991DEC()
{
}

void sub_1991DF8()
{
}

void sub_1991E08()
{
}

void sub_1991E14()
{
}

void sub_1991E24()
{
}

void sub_1991E30()
{
}

void sub_1991E40()
{
}

void sub_1991E4C()
{
}

void sub_1991E5C()
{
}

void sub_1991E68()
{
}

void sub_1991E78()
{
}

void sub_1991E84()
{
}

void sub_1991E94()
{
}

void sub_1991EA0()
{
}

void sub_1991EB0()
{
}

void sub_1991EBC()
{
}

void sub_1991ECC()
{
}

void sub_1991ED8()
{
}

void sub_1991EE8()
{
}

void sub_1991EF4()
{
}

void sub_1991F04()
{
}

void sub_1991F10()
{
}

void sub_1991F20()
{
}

void sub_1991F2C()
{
}

void sub_1991F3C()
{
}

void sub_1991F48()
{
}

void sub_1991F58()
{
}

void sub_1991F64()
{
}

void sub_1991F74()
{
}

void sub_1991F80()
{
}

void sub_1991F90()
{
}

void sub_1991F9C()
{
}

void sub_1991FAC()
{
}

void sub_1991FB8()
{
}

void sub_1991FC8()
{
}

void sub_1991FD4()
{
}

void sub_1991FE4()
{
}

void sub_1991FF0()
{
}

void sub_1992000()
{
}

void sub_199200C()
{
}

void sub_199201C()
{
}

void sub_1992028()
{
}

void sub_1992038()
{
}

void sub_1992044()
{
}

void sub_1992054()
{
}

void sub_1992060()
{
}

void sub_1992070()
{
}

void sub_199207C()
{
}

void sub_199208C()
{
}

void sub_1992098()
{
}

void sub_19920A8()
{
}

void sub_19920B4()
{
}

void sub_19920C4()
{
}

void sub_19920D0()
{
}

void sub_19920E0()
{
}

void sub_19920EC()
{
}

void sub_19920FC()
{
}

void sub_1992108()
{
}

void sub_1992118()
{
}

void sub_1992124()
{
}

void sub_1992134()
{
}

void sub_1992140()
{
}

void sub_1992150()
{
}

void sub_199215C()
{
}

void sub_199216C()
{
}

void sub_1992178()
{
}

void sub_1992188()
{
}

void sub_1992194()
{
}

void sub_19921A4()
{
}

void sub_19921B0()
{
}

void sub_19921C0()
{
}

void sub_19921CC()
{
}

void sub_19921DC()
{
}

void sub_19921E8()
{
}

void sub_19921F8()
{
}

void sub_1992204()
{
}

void sub_1992214()
{
}

void sub_1992220()
{
}

void sub_1992230()
{
}

void sub_199223C()
{
}

void sub_199224C()
{
}

void sub_1992258()
{
}

void sub_1992268()
{
}

void sub_1992274()
{
}

void sub_1992284()
{
}

void sub_1992290()
{
}

void sub_19922A0()
{
}

void sub_19922AC()
{
}

void sub_19922BC()
{
}

void sub_19922C8()
{
}

void sub_19922D8()
{
}

void sub_19922E4()
{
}

void sub_19922F4()
{
}

void sub_1992300()
{
}

void sub_1992310()
{
}

void sub_199231C()
{
}

void sub_199232C()
{
}

void sub_1992338()
{
}

void sub_1992348()
{
}

void sub_1992354()
{
}

void sub_1992364()
{
}

void sub_1992370()
{
}

void sub_1992380()
{
}

void sub_199238C()
{
}

void sub_199239C()
{
}

void sub_19923A8()
{
}

void sub_19923B8()
{
}

void sub_19923C4()
{
}

void sub_19923D4()
{
}

void sub_19923E0()
{
}

void sub_19923F0()
{
}

void sub_19923FC()
{
}

void sub_199240C()
{
}

void sub_1992418()
{
}

void sub_1992428()
{
}

void sub_1992434()
{
}

void sub_1992444()
{
}

void sub_1992450()
{
}

void sub_1992460()
{
}

void sub_199246C()
{
}

void sub_199247C()
{
}

void sub_1992488()
{
}

void sub_1992498()
{
}

void sub_19924A4()
{
}

void sub_19924B4()
{
}

void sub_19924C0()
{
}

void sub_19924D0()
{
}

void sub_19924DC()
{
}

void sub_19924EC()
{
}

void sub_19924F8()
{
}

void sub_1992508()
{
}

void sub_1992514()
{
}

void sub_1992524()
{
}

void sub_1992530()
{
}

void sub_1992540()
{
}

void sub_199254C()
{
}

void sub_199255C()
{
}

void sub_1992568()
{
}

void sub_1992578()
{
}

void sub_1992584()
{
}

void sub_1992594()
{
}

void sub_19925A0()
{
}

void sub_19925B0()
{
}

void sub_19925BC()
{
}

void sub_19925CC()
{
}

void sub_19925D8()
{
}

void sub_19925E8()
{
}

void sub_19925F4()
{
}

void sub_1992604()
{
}

void sub_1992610()
{
}

void sub_1992620()
{
}

void sub_199262C()
{
}

void sub_199263C()
{
}

void sub_1992648()
{
}

void sub_1992658()
{
}

void sub_1992664()
{
}

void sub_1992674()
{
}

void sub_1992680()
{
}

void sub_1992690()
{
}

void sub_199269C()
{
}

void sub_19926AC()
{
}

void sub_19926B8()
{
}

void sub_19926C8()
{
}

void sub_19926D4()
{
}

void sub_19926E4()
{
}

void sub_19926F0()
{
}

void sub_1992700()
{
}

void sub_199270C()
{
}

void sub_199271C()
{
}

void sub_1992728()
{
}

void sub_1992738()
{
}

void sub_1992744()
{
}

void sub_1992754()
{
}

void sub_1992760()
{
}

void sub_1992770()
{
}

void sub_199277C()
{
}

void sub_199278C()
{
}

void sub_1992798()
{
}

void sub_19927A8()
{
}

void sub_19927B4()
{
}

void sub_19927C4()
{
}

void sub_19927D0()
{
}

void sub_19927E0()
{
}

void sub_19927EC()
{
}

void sub_19927FC()
{
}

void sub_1992808()
{
}

void sub_1992818()
{
}

void sub_1992824()
{
}

void sub_1992834()
{
}

void sub_1992840()
{
}

void sub_1992850()
{
}

void sub_199285C()
{
}

void sub_199286C()
{
}

void sub_1992878()
{
}

void sub_1992888()
{
}

void sub_1992894()
{
}

void sub_19928A4()
{
}

void sub_19928B0()
{
}

void sub_19928BC()
{
}

void sub_19928D0()
{
}

void sub_19928E4()
{
}

void sub_19928EC()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2626420 = 0;
  qword_2626428 = 0;
  qword_2626430 = 0;
  qword_2626420 = (uint64_t)operator new(0x18uLL);
  qword_2626428 = qword_2626420;
  qword_2626430 = qword_2626420 + 24;
  qword_2626428 = (uint64_t)sub_18914E4((uint64_t)&qword_2626430, (long long *)__p, &v2, (char *)qword_2626420);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2626438 = 0;
  qword_2626440 = 0;
  qword_2626448 = 0;
  qword_2626438 = (uint64_t)operator new(0x18uLL);
  qword_2626440 = qword_2626438;
  qword_2626448 = qword_2626438 + 24;
  qword_2626440 = (uint64_t)sub_18914E4((uint64_t)&qword_2626448, (long long *)__p, &v2, (char *)qword_2626438);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2626450 = 0;
  qword_2626458 = 0;
  qword_2626460 = 0;
  qword_2626450 = (uint64_t)operator new(0x18uLL);
  qword_2626458 = qword_2626450;
  qword_2626460 = qword_2626450 + 24;
  qword_2626458 = (uint64_t)sub_18914E4((uint64_t)&qword_2626460, (long long *)__p, &v2, (char *)qword_2626450);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_1987E38();
}

void sub_1992A90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  qword_2626458 = v16;
  sub_1891624((void ***)&a9);
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1992AF4(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v83 = 0;
  uint64_t v84 = 0;
  long long v85 = 0;
  uint64_t v80 = 0;
  uint64_t v81 = 0;
  unint64_t v82 = 0;
  memset(v77, 0, sizeof(v77));
  sub_18D50DC(v77, *a1, a1[1], (a1[1] - *a1) >> 6);
  sub_1B1E9A4(v77, (uint64_t)&v78);
  *(void *)&long long __p = v77;
  sub_18D522C((void ***)&__p);
  unint64_t v5 = v78;
  int v4 = v79;
  if (v78 != v79)
  {
    uint64_t v6 = 0;
    do
    {
      sub_1CB73C8(*a2, v5, v4, v5, (uint64_t *)&__p);
      if (*((void *)&__p + 1) != (void)__p)
      {
        unint64_t v7 = v84;
        if (v84 >= v85)
        {
          int v9 = v83;
          uint64_t v10 = (v84 - v83) >> 3;
          unint64_t v11 = v10 + 1;
          if ((unint64_t)(v10 + 1) >> 61) {
            sub_2E00();
          }
          uint64_t v12 = v85 - v83;
          if ((v85 - v83) >> 2 > v11) {
            unint64_t v11 = v12 >> 2;
          }
          if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v13 = v11;
          }
          if (v13)
          {
            int v14 = (char *)sub_1122DC0((uint64_t)&v85, v13);
            int v9 = v83;
            unint64_t v7 = v84;
          }
          else
          {
            int v14 = 0;
          }
          long long v15 = &v14[8 * v10];
          *(void *)long long v15 = v6;
          char v8 = v15 + 8;
          while (v7 != v9)
          {
            uint64_t v16 = *((void *)v7 - 1);
            v7 -= 8;
            *((void *)v15 - 1) = v16;
            v15 -= 8;
          }
          uint64_t v83 = v15;
          uint64_t v84 = v8;
          long long v85 = &v14[8 * v13];
          if (v9) {
            operator delete(v9);
          }
        }
        else
        {
          *(void *)uint64_t v84 = v6;
          char v8 = v7 + 8;
        }
        uint64_t v84 = v8;
        long long v17 = v81;
        if ((unint64_t)v81 >= v82)
        {
          uint64_t v18 = sub_1996C34(&v80, (void **)&__p);
        }
        else
        {
          *uint64_t v81 = 0;
          v17[1] = 0;
          v17[2] = 0;
          sub_1996D4C(v17, (void *)__p, *((void **)&__p + 1), (uint64_t)(*((void *)&__p + 1) - __p) >> 4);
          uint64_t v18 = (uint64_t)(v17 + 3);
        }
        uint64_t v81 = (void *)v18;
      }
      ++v6;
      p_p = (void **)&__p;
      sub_197A1EC(&p_p);
      v5 += 3;
      int v4 = v79;
    }
    while (v5 != v79);
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  int v19 = v83;
  if (v84 != v83)
  {
    uint64_t v20 = 0;
    do
    {
      unint64_t v21 = *(void *)&v19[8 * v20];
      uint64_t v48 = v20;
      uint64_t v74 = 0;
      long long v75 = 0;
      unint64_t v76 = 0;
      unint64_t v22 = *(void *)(v80 + 24 * v20);
      unint64_t v23 = *(void *)(v80 + 24 * v20 + 8);
      long long v50 = (unint64_t *)(v80 + 24 * v20 + 8);
      while (v22 < v23)
      {
        uint64_t v24 = 0;
        uint64_t v25 = 0;
        unint64_t v26 = v21 - 0x5555555555555555 * ((uint64_t)(*(void *)(*(void *)v22 + 8) - **(void **)v22) >> 3);
        uint64_t v71 = 0;
        uint64_t v72 = 0;
        uint64_t v73 = 0;
        unint64_t v27 = v21;
        if (v21 < v26)
        {
          do
          {
            sub_18D554C((char *)&__p, (long long *)(*a1 + (v27 << 6)));
            uint64_t v28 = *(void *)(*(void *)v22 + 24);
            int v29 = *(void **)(v28 + 24);
            long long v30 = *(void **)(v28 + 32);
            while (v29 != v30)
            {
              char v31 = (void *)*v29;
              if ((void *)*v29 != v29 + 1)
              {
                do
                {
                  LODWORD(p_p) = *((_DWORD *)v31 + 7);
                  sub_1932CB4(&v69, (int *)&p_p, &p_p);
                  long long v32 = (void *)v31[1];
                  if (v32)
                  {
                    do
                    {
                      char v33 = v32;
                      long long v32 = (void *)*v32;
                    }
                    while (v32);
                  }
                  else
                  {
                    do
                    {
                      char v33 = (void *)v31[2];
                      BOOL v34 = *v33 == (void)v31;
                      char v31 = v33;
                    }
                    while (!v34);
                  }
                  char v31 = v33;
                }
                while (v33 != v29 + 1);
              }
              v29 += 3;
            }
            sub_1987CD4(&v71, &__p);
            sub_22EFF4((uint64_t)&v69, v70);
            if (SHIBYTE(v67) < 0) {
              operator delete((void *)__p);
            }
            ++v27;
          }
          while (v27 != v26);
          uint64_t v25 = v71;
          uint64_t v24 = v72;
        }
        p_p = 0;
        uint64_t v63 = 0;
        uint64_t v64 = 0;
        sub_18D50DC(&p_p, v25, v24, (v24 - v25) >> 6);
        *(void *)&long long v65 = v21;
        *((void *)&v65 + 1) = v26;
        long long v35 = v75;
        if ((unint64_t)v75 >= v76)
        {
          uint64_t v36 = sub_1997108(&v74, (uint64_t)&p_p);
        }
        else
        {
          *long long v75 = 0;
          v35[1] = 0;
          v35[2] = 0;
          sub_18D50DC(v35, (uint64_t)p_p, v63, (v63 - (uint64_t)p_p) >> 6);
          *(_OWORD *)(v35 + 3) = v65;
          uint64_t v36 = (uint64_t)(v35 + 5);
        }
        long long v75 = (void *)v36;
        uint64_t v37 = *(void *)(*(void *)(*(void *)v22 + 24) + 8) - **(void **)(*(void *)v22 + 24);
        if (v37)
        {
          uint64_t v38 = 0;
          unint64_t v39 = v37 / 24;
          if (v39 <= 1) {
            uint64_t v40 = 1;
          }
          else {
            uint64_t v40 = v39;
          }
          do
          {
            uint64_t v59 = 0;
            uint64_t v60 = 0;
            uint64_t v61 = 0;
            char v41 = (uint64_t *)(**(void **)(*(void *)v22 + 24) + 24 * v38);
            unint64_t v57 = 0;
            uint64_t v58 = 0;
            char v56 = 0;
            sub_8A6F8((char *)&v56, *v41, v41[1], 0xAAAAAAAAAAAAAAABLL * ((v41[1] - *v41) >> 3));
            sub_18D55CC((uint64_t *)&v54, *(void *)(*(void *)(*(void *)v22 + 24) + 24) + 24 * v38);
            for (uint64_t i = v56; (unint64_t)i < v57; uint64_t i = (long long *)((char *)i + 24))
            {
              if (*((char *)i + 23) < 0)
              {
                sub_4200(__dst, *(void **)i, *((void *)i + 1));
              }
              else
              {
                long long v43 = *i;
                uint64_t v53 = *((void *)i + 2);
                *(_OWORD *)std::string __dst = v43;
              }
              sub_19932F0((char *)&__p, (uint64_t)__dst);
              if (SHIBYTE(v53) < 0) {
                operator delete(__dst[0]);
              }
              sub_199890C(&v69, v54, v55);
              sub_1987CD4(&v59, &__p);
              sub_22EFF4((uint64_t)&v69, v70);
              if (SHIBYTE(v67) < 0) {
                operator delete((void *)__p);
              }
            }
            long long __p = 0uLL;
            uint64_t v67 = 0;
            sub_18D50DC(&__p, v59, v60, (v60 - v59) >> 6);
            *(void *)&long long v68 = v21;
            *((void *)&v68 + 1) = v26;
            int v44 = v75;
            if ((unint64_t)v75 >= v76)
            {
              uint64_t v45 = sub_1997108(&v74, (uint64_t)&__p);
            }
            else
            {
              *long long v75 = 0;
              v44[1] = 0;
              v44[2] = 0;
              sub_18D50DC(v44, __p, *((uint64_t *)&__p + 1), (uint64_t)(*((void *)&__p + 1) - __p) >> 6);
              *(_OWORD *)(v44 + 3) = v68;
              uint64_t v45 = (uint64_t)(v44 + 5);
            }
            long long v75 = (void *)v45;
            uint64_t v86 = (void **)&__p;
            sub_18D522C(&v86);
            sub_22EFF4((uint64_t)&v54, *(void **)v55);
            *(void *)&long long __p = &v56;
            sub_1891624((void ***)&__p);
            *(void *)&long long __p = &v59;
            sub_18D522C((void ***)&__p);
            ++v38;
          }
          while (v38 != v40);
        }
        *(void *)&long long __p = &p_p;
        sub_18D522C((void ***)&__p);
        *(void *)&long long __p = &v71;
        sub_18D522C((void ***)&__p);
        v22 += 16;
        unint64_t v23 = *v50;
      }
      unint64_t v46 = a3[1];
      if (v46 >= a3[2])
      {
        uint64_t v47 = sub_1997508(a3, &v74);
      }
      else
      {
        sub_19974A8((uint64_t)a3, &v74);
        uint64_t v47 = v46 + 24;
      }
      a3[1] = v47;
      *(void *)&long long __p = &v74;
      sub_1997848((void ***)&__p);
      uint64_t v20 = v48 + 1;
      int v19 = v83;
    }
    while (v48 + 1 < (unint64_t)((v84 - v83) >> 3));
  }
  *(void *)&long long __p = &v78;
  sub_1891624((void ***)&__p);
  *(void *)&long long __p = &v80;
  sub_1997B58((void ***)&__p);
  if (v83)
  {
    uint64_t v84 = v83;
    operator delete(v83);
  }
}

void sub_1993148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  sub_18D522C((void ***)&__p);
  long long __p = (void *)(v45 - 144);
  sub_1997B58((void ***)&__p);
  uint64_t v47 = *(void **)(v45 - 120);
  if (v47)
  {
    *(void *)(v45 - 112) = v47;
    operator delete(v47);
  }
  _Unwind_Resume(a1);
}

char *sub_19932F0(char *__dst, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_4200(__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a2;
    uint64_t v7 = *(void *)(a2 + 16);
  }
  if (SHIBYTE(v7) < 0)
  {
    sub_4200(__dst, __p[0], (unint64_t)__p[1]);
    int v4 = SHIBYTE(v7);
    *((void *)__dst + 6) = 0;
    *((void *)__dst + 7) = 0;
    *((void *)__dst + 3) = 0;
    *((void *)__dst + 4) = 0;
    *((void *)__dst + 5) = __dst + 48;
    if (v4 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    *(_OWORD *)std::string __dst = *(_OWORD *)__p;
    uint64_t v3 = v7;
    *((void *)__dst + 7) = 0;
    *((void *)__dst + 6) = 0;
    *((void *)__dst + 2) = v3;
    *((void *)__dst + 3) = 0;
    *((void *)__dst + 4) = 0;
    *((void *)__dst + 5) = __dst + 48;
  }
  return __dst;
}

void sub_19933A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_19933BC(uint64_t *a1, uint64_t *a2)
{
  int v4 = (uint64_t *)*a1;
  unint64_t v5 = a1[1];
  if (v5 == *a1 || a2[1] == *a2)
  {
LABEL_9:
    if (v5 >= a1[2])
    {
      uint64_t result = (uint64_t *)sub_1997508(a1, a2);
    }
    else
    {
      sub_19974A8((uint64_t)a1, a2);
      uint64_t result = (uint64_t *)(v5 + 24);
    }
    a1[1] = (uint64_t)result;
  }
  else
  {
    unint64_t v6 = (uint64_t)(v5 - *a1) / 24;
    if (v6 <= 1) {
      unint64_t v6 = 1;
    }
    uint64_t v7 = v4 + 1;
    while (1)
    {
      uint64_t v8 = *(v7 - 1);
      if (*v7 != v8 && *(void *)(v8 + 24) > *(void *)(*a2 + 24)) {
        break;
      }
      v7 += 3;
      v4 += 3;
      if (!--v6) {
        goto LABEL_9;
      }
    }
    return sub_1993490(a1, v4, a2);
  }
  return result;
}

uint64_t *sub_1993490(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  int v4 = a2;
  unint64_t v6 = a1[1];
  unint64_t v9 = a1[2];
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = v9;
  if (v6 >= v9)
  {
    uint64_t v10 = *a1;
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - *a1) >> 3) + 1;
    if (v11 > 0xAAAAAAAAAAAAAAALL) {
      sub_2E00();
    }
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)a2 - v10) >> 3);
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v8 - v10) >> 3);
    unint64_t v14 = 2 * v13;
    if (2 * v13 <= v11) {
      unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v6 - *a1) >> 3) + 1;
    }
    if (v13 >= 0x555555555555555) {
      unint64_t v15 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v15 = v14;
    }
    uint64_t v22 = v7;
    if (v15) {
      uint64_t v16 = (char *)sub_112C518(v7, v15);
    }
    else {
      uint64_t v16 = 0;
    }
    uint64_t v18 = v16;
    int v19 = &v16[24 * v12];
    uint64_t v20 = v19;
    unint64_t v21 = &v16[24 * v15];
    sub_1997C4C(&v18, a3);
    int v4 = (uint64_t *)sub_1997DC8(a1, &v18, v4);
    sub_1997A5C(&v18);
  }
  else if (a2 == (uint64_t *)v6)
  {
    sub_19974A8((uint64_t)a1, a3);
  }
  else
  {
    sub_1997BCC((uint64_t)a1, a2, v6, (uint64_t)(a2 + 3));
    if (v4 <= a3) {
      a3 += 3 * (a1[1] > (unint64_t)a3);
    }
    if (v4 != a3) {
      sub_1997F64((uint64_t)v4, *a3, a3[1], 0xCCCCCCCCCCCCCCCDLL * ((a3[1] - *a3) >> 3));
    }
  }
  return v4;
}

void sub_199360C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1997A5C((void **)va);
  _Unwind_Resume(a1);
}

void sub_1993620(uint64_t *a1, void **a2, uint64_t *a3)
{
  uint64_t v48 = 0;
  int v49 = 0;
  v50[0] = 0;
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  if (v3 != *a1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = v4 + (v6 << 6);
      if (*(char *)(v7 + 23) < 0) {
        unint64_t v8 = *(void *)(v7 + 8);
      }
      else {
        unint64_t v8 = *(unsigned __int8 *)(v7 + 23);
      }
      uint64_t v9 = (uint64_t)(*a2 + 1);
      uint64_t v10 = (void *)**a2;
      unint64_t v11 = v6 + 1;
      if (v10 != (void *)v9)
      {
        while (1)
        {
          if (*((char *)v10 + 55) < 0) {
            unint64_t v12 = v10[5];
          }
          else {
            unint64_t v12 = *((unsigned __int8 *)v10 + 55);
          }
          if (v8 <= v12) {
            goto LABEL_58;
          }
          std::string::basic_string(&__dst, (const std::string *)(*a1 + (v6 << 6)), v8 - v12, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)v56);
          if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type size = __dst.__r_.__value_.__l.__size_;
          }
          uint64_t v14 = *((unsigned __int8 *)v10 + 55);
          int v15 = (char)v14;
          if ((v14 & 0x80u) != 0) {
            uint64_t v14 = v10[5];
          }
          if (size != v14) {
            break;
          }
          if (v15 >= 0) {
            uint64_t v16 = (unsigned __int8 *)(v10 + 4);
          }
          else {
            uint64_t v16 = (unsigned __int8 *)v10[4];
          }
          if ((*((unsigned char *)&__dst.__r_.__value_.__s + 23) & 0x80) == 0)
          {
            if (!*((unsigned char *)&__dst.__r_.__value_.__s + 23)) {
              goto LABEL_35;
            }
            uint64_t v17 = HIBYTE(__dst.__r_.__value_.__r.__words[2]) - 1;
            p_dst = &__dst;
            do
            {
              int v20 = p_dst->__r_.__value_.__s.__data_[0];
              p_dst = (std::string *)((char *)p_dst + 1);
              int v19 = v20;
              int v22 = *v16++;
              int v21 = v22;
              BOOL v24 = v17-- != 0;
              BOOL v25 = v19 == v21;
            }
            while (v19 == v21 && v24);
            if ((*((unsigned char *)&__dst.__r_.__value_.__s + 23) & 0x80) == 0)
            {
LABEL_29:
              if (v25) {
                goto LABEL_35;
              }
              goto LABEL_58;
            }
            goto LABEL_32;
          }
          unint64_t v26 = (void *)__dst.__r_.__value_.__r.__words[0];
          int v27 = memcmp(__dst.__r_.__value_.__l.__data_, v16, __dst.__r_.__value_.__l.__size_);
          operator delete(v26);
          if (!v27)
          {
LABEL_35:
            sub_18D554C((char *)&__dst, (long long *)(*a1 + (v6 << 6)));
            uint64_t v28 = (void *)v10[7];
            if (v28 != v10 + 8)
            {
              do
              {
                LODWORD(v56[0]) = *((_DWORD *)v28 + 7);
                sub_1932CB4(v47, (int *)v56, v56);
                int v29 = (void *)v28[1];
                if (v29)
                {
                  do
                  {
                    long long v30 = v29;
                    int v29 = (void *)*v29;
                  }
                  while (v29);
                }
                else
                {
                  do
                  {
                    long long v30 = (void *)v28[2];
                    BOOL v31 = *v30 == (void)v28;
                    uint64_t v28 = v30;
                  }
                  while (!v31);
                }
                uint64_t v28 = v30;
              }
              while (v30 != v10 + 8);
            }
            sub_18D554C((char *)v56, (long long *)&__dst);
            long long v43 = 0uLL;
            uint64_t v44 = 0;
            char v51 = &v43;
            LOBYTE(v52) = 0;
            *(void *)&long long v43 = operator new(0x40uLL);
            *((void *)&v43 + 1) = v43;
            uint64_t v44 = v43 + 64;
            *((void *)&v43 + 1) = sub_1998530((uint64_t)&v44, (uint64_t)v56, (uint64_t)&v59, v43);
            *(void *)&long long v45 = v6;
            *((void *)&v45 + 1) = v6 + 1;
            long long v32 = v49;
            if ((unint64_t)v49 >= v50[0])
            {
              unint64_t v34 = 0xCCCCCCCCCCCCCCCDLL * (v49 - v48);
              unint64_t v35 = v34 + 1;
              if (v34 + 1 > 0x666666666666666) {
                sub_2E00();
              }
              if (0x999999999999999ALL * ((uint64_t)(v50[0] - (void)v48) >> 3) > v35) {
                unint64_t v35 = 0x999999999999999ALL * ((uint64_t)(v50[0] - (void)v48) >> 3);
              }
              if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v50[0] - (void)v48) >> 3) >= 0x333333333333333) {
                unint64_t v36 = 0x666666666666666;
              }
              else {
                unint64_t v36 = v35;
              }
              long long v55 = v50;
              if (v36) {
                uint64_t v37 = (long long *)sub_19972A8((uint64_t)v50, v36);
              }
              else {
                uint64_t v37 = 0;
              }
              uint64_t v38 = (char *)v37 + 40 * v34;
              char v51 = v37;
              long long v52 = v38;
              int v54 = (char *)v37 + 40 * v36;
              *(void *)uint64_t v38 = 0;
              *((void *)v38 + 1) = 0;
              *((void *)v38 + 2) = 0;
              *(_OWORD *)uint64_t v38 = v43;
              *((void *)v38 + 2) = v44;
              long long v43 = 0uLL;
              uint64_t v44 = 0;
              *(_OWORD *)(v38 + 24) = v45;
              uint64_t v53 = v38 + 40;
              sub_1997230((uint64_t *)&v48, &v51);
              char v33 = v49;
              sub_1997420((void **)&v51);
            }
            else
            {
              *int v49 = 0;
              v32[1] = 0;
              v32[2] = 0;
              *(_OWORD *)long long v32 = v43;
              v32[2] = v44;
              long long v43 = 0uLL;
              uint64_t v44 = 0;
              *(_OWORD *)(v32 + 3) = v45;
              char v33 = v32 + 5;
            }
            int v49 = v33;
            char v51 = &v43;
            sub_18D522C((void ***)&v51);
            sub_22EFF4((uint64_t)v58, v58[1]);
            if (v57 < 0) {
              operator delete(v56[0]);
            }
            sub_22EFF4((uint64_t)v47, v47[1]);
            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__dst.__r_.__value_.__l.__data_);
            }
          }
LABEL_58:
          unint64_t v39 = (void *)v10[1];
          if (v39)
          {
            do
            {
              uint64_t v40 = v39;
              unint64_t v39 = (void *)*v39;
            }
            while (v39);
          }
          else
          {
            do
            {
              uint64_t v40 = (void *)v10[2];
              BOOL v31 = *v40 == (void)v10;
              uint64_t v10 = v40;
            }
            while (!v31);
          }
          uint64_t v10 = v40;
          if (v40 == (void *)v9)
          {
            uint64_t v4 = *a1;
            uint64_t v3 = a1[1];
            goto LABEL_65;
          }
        }
        BOOL v25 = 0;
        if ((*((unsigned char *)&__dst.__r_.__value_.__s + 23) & 0x80) == 0) {
          goto LABEL_29;
        }
LABEL_32:
        operator delete(__dst.__r_.__value_.__l.__data_);
        if (v25) {
          goto LABEL_35;
        }
        goto LABEL_58;
      }
LABEL_65:
      ++v6;
    }
    while (v11 < (v3 - v4) >> 6);
    if (v49 != v48) {
      sub_19933BC(a3, (uint64_t *)&v48);
    }
  }
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&v48;
  sub_1997848((void ***)&__dst);
}

void sub_1993A9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  long long __p = &a31;
  sub_1997848((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1993B48(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v4 = *a1;
  if (a1[1] != *a1)
  {
    unint64_t v7 = 0;
    int v8 = 0;
    do
    {
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a2[1] - *a2) >> 3) > v8
        && (uint64_t v9 = (uint64_t *)(*a2 + 24 * v8), *(void *)(*v9 + 24) == v7))
      {
        unint64_t v10 = a3[1];
        if (v10 >= a3[2])
        {
          uint64_t v11 = sub_1997508(a3, v9);
        }
        else
        {
          sub_19974A8((uint64_t)a3, v9);
          uint64_t v11 = v10 + 24;
        }
        a3[1] = v11;
        ++v8;
        ++v7;
      }
      else
      {
        uint64_t v17 = 0;
        uint64_t v18 = 0;
        uint64_t v19 = 0;
        sub_1987CD4(&v17, (long long *)(v4 + (v7 << 6)));
        *(void *)&long long v20 = v7++;
        *((void *)&v20 + 1) = v7;
        memset(v23, 0, sizeof(v23));
        sub_18D50DC(v23, v17, v18, (v18 - v17) >> 6);
        long long v24 = v20;
        uint64_t v15 = 0;
        uint64_t v16 = 0;
        uint64_t v14 = 0;
        int v21 = (void ***)&v14;
        char v22 = 0;
        uint64_t v14 = (char *)operator new(0x28uLL);
        uint64_t v15 = (uint64_t)v14;
        uint64_t v16 = v14 + 40;
        uint64_t v15 = sub_19985B4((uint64_t)&v16, (uint64_t)v23, (uint64_t)&v25, (uint64_t)v14);
        int v21 = v23;
        sub_18D522C((void ***)&v21);
        unint64_t v12 = a3[1];
        if (v12 >= a3[2])
        {
          uint64_t v13 = sub_1997508(a3, (uint64_t *)&v14);
        }
        else
        {
          sub_19974A8((uint64_t)a3, (uint64_t *)&v14);
          uint64_t v13 = v12 + 24;
        }
        a3[1] = v13;
        v23[0] = (void **)&v14;
        sub_1997848(v23);
        v23[0] = (void **)&v17;
        sub_18D522C(v23);
      }
      uint64_t v4 = *a1;
    }
    while (v7 < (a1[1] - *a1) >> 6);
  }
}

void sub_1993D64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1997AE4((void ***)va);
  _Unwind_Resume(a1);
}

void *sub_1993DDC(void *a1, long long *a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  uint64_t v4 = a3[1];
  *a1 = &off_24E7DF8;
  a1[1] = v5;
  a1[2] = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v6 = a1 + 3;
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(v6, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v7 = *a2;
    a1[5] = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v6 = v7;
  }
  return a1;
}

void sub_1993E60(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(std::__shared_weak_count **)(v1 + 16);
  if (v3) {
    sub_20A69F0(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1993E7C(void (****a1)(void **__return_ptr)@<X1>, void *a2@<X2>, size_t a3@<X3>, unsigned __int8 *a4@<X4>, void *a5@<X8>)
{
  sub_1998BC8(&v202);
  uint64_t v9 = operator new(0x30uLL);
  v9[1] = 0;
  v9[2] = 0;
  *uint64_t v9 = off_24E7E78;
  void v9[4] = 0;
  unint64_t v10 = (void **)(v9 + 4);
  v9[3] = v9 + 4;
  uint64_t v11 = (uint64_t **)(v9 + 3);
  int v179 = (std::__shared_weak_count *)v9;
  v9[5] = 0;
  sub_1DE02D8((uint64_t)v201, 1, 0, 1, 1);
  char v178 = a5;
  sub_1995608(a2, a3, &v199);
  uint64_t v12 = v199;
  uint64_t i = v200;
  if (v199 != v200)
  {
    uint64_t v180 = v200;
    while (1)
    {
      uint64_t v14 = *(std::string **)v12;
      uint64_t v15 = a4[23];
      if ((v15 & 0x80u) == 0) {
        uint64_t v16 = a4[23];
      }
      else {
        uint64_t v16 = *((void *)a4 + 1);
      }
      std::string::size_type size = HIBYTE(v14[4].__r_.__value_.__r.__words[2]);
      int v18 = (char)size;
      if ((size & 0x80u) != 0) {
        std::string::size_type size = v14[4].__r_.__value_.__l.__size_;
      }
      if (v16 != size) {
        goto LABEL_317;
      }
      std::string::pointer data = v14[4].__r_.__value_.__l.__data_;
      uint64_t v19 = v14 + 4;
      long long v20 = (std::string *)data;
      char v22 = v18 >= 0 ? v19 : v20;
      if ((v15 & 0x80) == 0) {
        break;
      }
      if (!memcmp(*(const void **)a4, v22, *((void *)a4 + 1))) {
        goto LABEL_19;
      }
LABEL_317:
      v12 += 24;
      if (v12 == i) {
        goto LABEL_318;
      }
    }
    if (a4[23])
    {
      unint64_t v23 = a4;
      while (*v23 == v22->__r_.__value_.__s.__data_[0])
      {
        ++v23;
        char v22 = (std::string *)((char *)v22 + 1);
        if (!--v15) {
          goto LABEL_19;
        }
      }
      goto LABEL_317;
    }
LABEL_19:
    char v196 = 0;
    long long v197 = 0;
    unint64_t v198 = 0;
    char v193 = 0;
    int v194 = 0;
    unint64_t v195 = 0;
    long long v190 = 0;
    char v191 = 0;
    unint64_t v192 = 0;
    uint64_t v187 = 0;
    char v188 = 0;
    unint64_t v189 = 0;
    long long v24 = *(std::string **)v12;
    if (*a1)
    {
      if ((*(unsigned char *)(*(void *)v12 + 23) & 0x80) != 0)
      {
        if (!v24->__r_.__value_.__l.__size_) {
          goto LABEL_326;
        }
        uint64_t v25 = (std::string *)v24->__r_.__value_.__r.__words[0];
      }
      else
      {
        uint64_t v25 = *(std::string **)v12;
        if (!*(unsigned char *)(*(void *)v12 + 23)) {
          goto LABEL_326;
        }
      }
      if (v25->__r_.__value_.__s.__data_[0] == 45)
      {
        std::string::basic_string(&v184, v24, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v204);
        sub_1F918A0((uint64_t)v201, (uint64_t *)&v184, (uint64_t *)a4, __p);
        int v27 = v188;
        if ((unint64_t)v188 >= v189)
        {
          unint64_t v40 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v188[-v187] >> 3);
          unint64_t v41 = v40 + 1;
          if (v40 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_2E00();
          }
          if (0x5555555555555556 * ((uint64_t)(v189 - v187) >> 3) > v41) {
            unint64_t v41 = 0x5555555555555556 * ((uint64_t)(v189 - v187) >> 3);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v189 - v187) >> 3) >= 0x555555555555555) {
            unint64_t v42 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v42 = v41;
          }
          char v208 = &v189;
          if (v42) {
            long long v43 = (uint64_t *)sub_112C518((uint64_t)&v189, v42);
          }
          else {
            long long v43 = 0;
          }
          char v56 = &v43[3 * v40];
          int v204 = (void ***)v43;
          long long v205 = v56;
          long long v207 = &v43[3 * v42];
          long long v57 = *(_OWORD *)__p;
          v56[2] = (uint64_t)v186;
          *(_OWORD *)char v56 = v57;
          __p[1] = 0;
          char v186 = 0;
          __p[0] = 0;
          char v206 = v56 + 3;
          sub_188FE38(&v187, &v204);
          uint64_t v58 = v188;
          sub_188FFD0((uint64_t)&v204);
          char v188 = v58;
          if (SHIBYTE(v186) < 0) {
            operator delete(__p[0]);
          }
        }
        else
        {
          long long v28 = *(_OWORD *)__p;
          *((void *)v188 + 2) = v186;
          *int v27 = v28;
          __p[1] = 0;
          char v186 = 0;
          __p[0] = 0;
          char v188 = (char *)v27 + 24;
        }
        if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v184.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        (***a1)(__p);
        int v29 = (uint64_t *)__p[0];
        long long v30 = (uint64_t *)__p[1];
        while (v29 != v30)
        {
          sub_1F918A0((uint64_t)v201, v29, (uint64_t *)a4, &v184);
          BOOL v31 = v197;
          if ((unint64_t)v197 >= v198)
          {
            unint64_t v33 = 0xAAAAAAAAAAAAAAABLL * (v197 - v196);
            unint64_t v34 = v33 + 1;
            if (v33 + 1 > 0xAAAAAAAAAAAAAAALL) {
              sub_2E00();
            }
            if (0x5555555555555556 * ((uint64_t)(v198 - (void)v196) >> 3) > v34) {
              unint64_t v34 = 0x5555555555555556 * ((uint64_t)(v198 - (void)v196) >> 3);
            }
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v198 - (void)v196) >> 3) >= 0x555555555555555) {
              unint64_t v35 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v35 = v34;
            }
            char v208 = &v198;
            if (v35) {
              unint64_t v36 = (uint64_t *)sub_112C518((uint64_t)&v198, v35);
            }
            else {
              unint64_t v36 = 0;
            }
            uint64_t v37 = &v36[3 * v33];
            int v204 = (void ***)v36;
            long long v205 = v37;
            long long v207 = &v36[3 * v35];
            long long v38 = *(_OWORD *)&v184.__r_.__value_.__l.__data_;
            v37[2] = v184.__r_.__value_.__r.__words[2];
            *(_OWORD *)uint64_t v37 = v38;
            memset(&v184, 0, sizeof(v184));
            char v206 = v37 + 3;
            sub_188FE38((uint64_t *)&v196, &v204);
            unint64_t v39 = v197;
            sub_188FFD0((uint64_t)&v204);
            long long v197 = v39;
            if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v184.__r_.__value_.__l.__data_);
            }
          }
          else
          {
            long long v32 = *(_OWORD *)&v184.__r_.__value_.__l.__data_;
            v197[2] = (void *)v184.__r_.__value_.__r.__words[2];
            *(_OWORD *)BOOL v31 = v32;
            long long v197 = v31 + 3;
          }
          v29 += 8;
        }
        int v204 = (void ***)__p;
        sub_18D522C((void ***)&v204);
      }
      uint64_t v59 = (const std::string *)(*(void *)v12 + 24);
      if (*(char *)(*(void *)v12 + 47) < 0)
      {
        if (!*(void *)(*(void *)v12 + 32)) {
          goto LABEL_326;
        }
        uint64_t v60 = (unsigned char *)v59->__r_.__value_.__r.__words[0];
      }
      else
      {
        uint64_t v60 = (unsigned char *)(*(void *)v12 + 24);
        if (!*(unsigned char *)(*(void *)v12 + 47)) {
          goto LABEL_326;
        }
      }
      if (*v60 == 45)
      {
        std::string::basic_string(&v184, v59, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v204);
        sub_1F918A0((uint64_t)v201, (uint64_t *)&v184, (uint64_t *)a4, __p);
        uint64_t v61 = v188;
        if ((unint64_t)v188 >= v189)
        {
          unint64_t v74 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v188[-v187] >> 3);
          unint64_t v75 = v74 + 1;
          if (v74 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_2E00();
          }
          if (0x5555555555555556 * ((uint64_t)(v189 - v187) >> 3) > v75) {
            unint64_t v75 = 0x5555555555555556 * ((uint64_t)(v189 - v187) >> 3);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v189 - v187) >> 3) >= 0x555555555555555) {
            unint64_t v76 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v76 = v75;
          }
          char v208 = &v189;
          if (v76) {
            long long v77 = (uint64_t *)sub_112C518((uint64_t)&v189, v76);
          }
          else {
            long long v77 = 0;
          }
          char v78 = &v77[3 * v74];
          int v204 = (void ***)v77;
          long long v205 = v78;
          long long v207 = &v77[3 * v76];
          long long v79 = *(_OWORD *)__p;
          v78[2] = (uint64_t)v186;
          *(_OWORD *)char v78 = v79;
          __p[1] = 0;
          char v186 = 0;
          __p[0] = 0;
          char v206 = v78 + 3;
          sub_188FE38(&v187, &v204);
          uint64_t v80 = v188;
          sub_188FFD0((uint64_t)&v204);
          char v188 = v80;
          if (SHIBYTE(v186) < 0) {
            operator delete(__p[0]);
          }
        }
        else
        {
          long long v62 = *(_OWORD *)__p;
          *((void *)v188 + 2) = v186;
          *uint64_t v61 = v62;
          __p[1] = 0;
          char v186 = 0;
          __p[0] = 0;
          char v188 = (char *)v61 + 24;
        }
        if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v184.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        (***a1)(__p);
        uint64_t v63 = (uint64_t *)__p[0];
        uint64_t v64 = (uint64_t *)__p[1];
        while (v63 != v64)
        {
          sub_1F918A0((uint64_t)v201, v63, (uint64_t *)a4, &v184);
          long long v65 = v194;
          if ((unint64_t)v194 >= v195)
          {
            unint64_t v67 = 0xAAAAAAAAAAAAAAABLL * (v194 - v193);
            unint64_t v68 = v67 + 1;
            if (v67 + 1 > 0xAAAAAAAAAAAAAAALL) {
              sub_2E00();
            }
            if (0x5555555555555556 * ((uint64_t)(v195 - (void)v193) >> 3) > v68) {
              unint64_t v68 = 0x5555555555555556 * ((uint64_t)(v195 - (void)v193) >> 3);
            }
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v195 - (void)v193) >> 3) >= 0x555555555555555) {
              unint64_t v69 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v69 = v68;
            }
            char v208 = &v195;
            if (v69) {
              long long v70 = (uint64_t *)sub_112C518((uint64_t)&v195, v69);
            }
            else {
              long long v70 = 0;
            }
            uint64_t v71 = &v70[3 * v67];
            int v204 = (void ***)v70;
            long long v205 = v71;
            long long v207 = &v70[3 * v69];
            long long v72 = *(_OWORD *)&v184.__r_.__value_.__l.__data_;
            v71[2] = v184.__r_.__value_.__r.__words[2];
            *(_OWORD *)uint64_t v71 = v72;
            memset(&v184, 0, sizeof(v184));
            char v206 = v71 + 3;
            sub_188FE38((uint64_t *)&v193, &v204);
            uint64_t v73 = v194;
            sub_188FFD0((uint64_t)&v204);
            int v194 = v73;
            if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v184.__r_.__value_.__l.__data_);
            }
          }
          else
          {
            long long v66 = *(_OWORD *)&v184.__r_.__value_.__l.__data_;
            v194[2] = (void *)v184.__r_.__value_.__r.__words[2];
            *(_OWORD *)long long v65 = v66;
            int v194 = v65 + 3;
          }
          v63 += 8;
        }
        int v204 = (void ***)__p;
        sub_18D522C((void ***)&v204);
      }
      uint64_t v81 = (const std::string *)(*(void *)v12 + 48);
      if (*(char *)(*(void *)v12 + 71) < 0)
      {
        if (!*(void *)(*(void *)v12 + 56)) {
          goto LABEL_326;
        }
        unint64_t v82 = (unsigned char *)v81->__r_.__value_.__r.__words[0];
      }
      else
      {
        unint64_t v82 = (unsigned char *)(*(void *)v12 + 48);
        if (!*(unsigned char *)(*(void *)v12 + 71)) {
          goto LABEL_326;
        }
      }
      if (*v82 == 45)
      {
        std::string::basic_string(&v184, v81, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v204);
        sub_1F918A0((uint64_t)v201, (uint64_t *)&v184, (uint64_t *)a4, __p);
        uint64_t v83 = v188;
        if ((unint64_t)v188 >= v189)
        {
          unint64_t v84 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v188[-v187] >> 3);
          unint64_t v85 = v84 + 1;
          if (v84 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_2E00();
          }
          if (0x5555555555555556 * ((uint64_t)(v189 - v187) >> 3) > v85) {
            unint64_t v85 = 0x5555555555555556 * ((uint64_t)(v189 - v187) >> 3);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v189 - v187) >> 3) >= 0x555555555555555) {
            unint64_t v86 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v86 = v85;
          }
          char v208 = &v189;
          if (!v86)
          {
            char v98 = 0;
            goto LABEL_229;
          }
          goto LABEL_224;
        }
        goto LABEL_206;
      }
      (***a1)(__p);
      uint64_t v87 = (uint64_t *)__p[0];
      char v88 = (uint64_t *)__p[1];
      while (v87 != v88)
      {
        sub_1F918A0((uint64_t)v201, v87, (uint64_t *)a4, &v184);
        int v89 = v191;
        if ((unint64_t)v191 >= v192)
        {
          unint64_t v91 = 0xAAAAAAAAAAAAAAABLL * (v191 - v190);
          unint64_t v92 = v91 + 1;
          if (v91 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_2E00();
          }
          if (0x5555555555555556 * ((uint64_t)(v192 - (void)v190) >> 3) > v92) {
            unint64_t v92 = 0x5555555555555556 * ((uint64_t)(v192 - (void)v190) >> 3);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v192 - (void)v190) >> 3) >= 0x555555555555555) {
            unint64_t v93 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v93 = v92;
          }
          char v208 = &v192;
          if (v93) {
            int v94 = (uint64_t *)sub_112C518((uint64_t)&v192, v93);
          }
          else {
            int v94 = 0;
          }
          long long v95 = &v94[3 * v91];
          int v204 = (void ***)v94;
          long long v205 = v95;
          long long v207 = &v94[3 * v93];
          long long v96 = *(_OWORD *)&v184.__r_.__value_.__l.__data_;
          v95[2] = v184.__r_.__value_.__r.__words[2];
          *(_OWORD *)long long v95 = v96;
          memset(&v184, 0, sizeof(v184));
          char v206 = v95 + 3;
          sub_188FE38((uint64_t *)&v190, &v204);
          long long v97 = v191;
          sub_188FFD0((uint64_t)&v204);
          char v191 = v97;
          if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v184.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          long long v90 = *(_OWORD *)&v184.__r_.__value_.__l.__data_;
          v191[2] = (void *)v184.__r_.__value_.__r.__words[2];
          *(_OWORD *)int v89 = v90;
          char v191 = v89 + 3;
        }
        v87 += 8;
      }
      int v204 = (void ***)__p;
      sub_18D522C((void ***)&v204);
      goto LABEL_234;
    }
    if ((*(unsigned char *)(*(void *)v12 + 23) & 0x80) != 0)
    {
      if (!v24->__r_.__value_.__l.__size_) {
        goto LABEL_326;
      }
      unint64_t v26 = (std::string *)v24->__r_.__value_.__r.__words[0];
    }
    else
    {
      unint64_t v26 = *(std::string **)v12;
      if (!*(unsigned char *)(*(void *)v12 + 23)) {
        goto LABEL_326;
      }
    }
    if (v26->__r_.__value_.__s.__data_[0] == 45)
    {
      std::string::basic_string(&v184, v24, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v204);
      sub_1F918A0((uint64_t)v201, (uint64_t *)&v184, (uint64_t *)a4, __p);
      uint64_t v44 = v188;
      if ((unint64_t)v188 >= v189)
      {
        unint64_t v52 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v188[-v187] >> 3);
        unint64_t v53 = v52 + 1;
        if (v52 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_2E00();
        }
        if (0x5555555555555556 * ((uint64_t)(v189 - v187) >> 3) > v53) {
          unint64_t v53 = 0x5555555555555556 * ((uint64_t)(v189 - v187) >> 3);
        }
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v189 - v187) >> 3) >= 0x555555555555555) {
          unint64_t v54 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v54 = v53;
        }
        char v208 = &v189;
        if (v54) {
          long long v55 = (uint64_t *)sub_112C518((uint64_t)&v189, v54);
        }
        else {
          long long v55 = 0;
        }
        char v103 = &v55[3 * v52];
        int v204 = (void ***)v55;
        long long v205 = v103;
        long long v207 = &v55[3 * v54];
        long long v104 = *(_OWORD *)__p;
        v103[2] = (uint64_t)v186;
        *(_OWORD *)char v103 = v104;
        __p[1] = 0;
        char v186 = 0;
        __p[0] = 0;
        char v206 = v103 + 3;
        sub_188FE38(&v187, &v204);
        long long v105 = v188;
        sub_188FFD0((uint64_t)&v204);
        char v188 = v105;
        if (SHIBYTE(v186) < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        long long v45 = *(_OWORD *)__p;
        *((void *)v188 + 2) = v186;
        *uint64_t v44 = v45;
        __p[1] = 0;
        char v186 = 0;
        __p[0] = 0;
        char v188 = (char *)v44 + 24;
      }
      if (SHIBYTE(v184.__r_.__value_.__r.__words[2]) < 0)
      {
        long long v102 = (void *)v184.__r_.__value_.__r.__words[0];
        goto LABEL_163;
      }
    }
    else
    {
      sub_1F918A0((uint64_t)v201, (uint64_t *)v24, (uint64_t *)a4, __p);
      unint64_t v46 = v197;
      if ((unint64_t)v197 < v198)
      {
        long long v47 = *(_OWORD *)__p;
        v197[2] = v186;
        *(_OWORD *)unint64_t v46 = v47;
        long long v197 = v46 + 3;
        goto LABEL_164;
      }
      unint64_t v48 = 0xAAAAAAAAAAAAAAABLL * (v197 - v196);
      unint64_t v49 = v48 + 1;
      if (v48 + 1 > 0xAAAAAAAAAAAAAAALL) {
        sub_2E00();
      }
      if (0x5555555555555556 * ((uint64_t)(v198 - (void)v196) >> 3) > v49) {
        unint64_t v49 = 0x5555555555555556 * ((uint64_t)(v198 - (void)v196) >> 3);
      }
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v198 - (void)v196) >> 3) >= 0x555555555555555) {
        unint64_t v50 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v50 = v49;
      }
      char v208 = &v198;
      if (v50) {
        char v51 = (uint64_t *)sub_112C518((uint64_t)&v198, v50);
      }
      else {
        char v51 = 0;
      }
      int v99 = &v51[3 * v48];
      int v204 = (void ***)v51;
      long long v205 = v99;
      long long v207 = &v51[3 * v50];
      long long v100 = *(_OWORD *)__p;
      v99[2] = (uint64_t)v186;
      *(_OWORD *)int v99 = v100;
      __p[1] = 0;
      char v186 = 0;
      __p[0] = 0;
      char v206 = v99 + 3;
      sub_188FE38((uint64_t *)&v196, &v204);
      char v101 = v197;
      sub_188FFD0((uint64_t)&v204);
      long long v197 = v101;
      if (SHIBYTE(v186) < 0)
      {
        long long v102 = __p[0];
LABEL_163:
        operator delete(v102);
      }
    }
LABEL_164:
    char v106 = (std::string *)(*(void *)v12 + 24);
    if (*(char *)(*(void *)v12 + 47) < 0)
    {
      if (!*(void *)(*(void *)v12 + 32)) {
        goto LABEL_326;
      }
      long long v107 = (unsigned char *)v106->__r_.__value_.__r.__words[0];
    }
    else
    {
      long long v107 = (unsigned char *)(*(void *)v12 + 24);
      if (!*(unsigned char *)(*(void *)v12 + 47)) {
        goto LABEL_326;
      }
    }
    if (*v107 == 45)
    {
      std::string::basic_string(&v184, v106, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v204);
      sub_1F918A0((uint64_t)v201, (uint64_t *)&v184, (uint64_t *)a4, __p);
      char v108 = v188;
      if ((unint64_t)v188 >= v189)
      {
        unint64_t v116 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v188[-v187] >> 3);
        unint64_t v117 = v116 + 1;
        if (v116 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_2E00();
        }
        if (0x5555555555555556 * ((uint64_t)(v189 - v187) >> 3) > v117) {
          unint64_t v117 = 0x5555555555555556 * ((uint64_t)(v189 - v187) >> 3);
        }
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v189 - v187) >> 3) >= 0x555555555555555) {
          unint64_t v118 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v118 = v117;
        }
        char v208 = &v189;
        if (v118) {
          int v119 = (uint64_t *)sub_112C518((uint64_t)&v189, v118);
        }
        else {
          int v119 = 0;
        }
        int v124 = &v119[3 * v116];
        int v204 = (void ***)v119;
        long long v205 = v124;
        long long v207 = &v119[3 * v118];
        long long v125 = *(_OWORD *)__p;
        v124[2] = (uint64_t)v186;
        *(_OWORD *)int v124 = v125;
        __p[1] = 0;
        char v186 = 0;
        __p[0] = 0;
        char v206 = v124 + 3;
        sub_188FE38(&v187, &v204);
        char v126 = v188;
        sub_188FFD0((uint64_t)&v204);
        char v188 = v126;
        if (SHIBYTE(v186) < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        long long v109 = *(_OWORD *)__p;
        *((void *)v188 + 2) = v186;
        *char v108 = v109;
        __p[1] = 0;
        char v186 = 0;
        __p[0] = 0;
        char v188 = (char *)v108 + 24;
      }
      if ((SHIBYTE(v184.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_199;
      }
      char v123 = (void *)v184.__r_.__value_.__r.__words[0];
    }
    else
    {
      sub_1F918A0((uint64_t)v201, (uint64_t *)v106, (uint64_t *)a4, __p);
      long long v110 = v194;
      if ((unint64_t)v194 < v195)
      {
        long long v111 = *(_OWORD *)__p;
        v194[2] = v186;
        *(_OWORD *)long long v110 = v111;
        int v194 = v110 + 3;
LABEL_199:
        long long v127 = (std::string *)(*(void *)v12 + 48);
        if (*(char *)(*(void *)v12 + 71) < 0)
        {
          if (!*(void *)(*(void *)v12 + 56)) {
LABEL_326:
          }
            sub_5AD0();
          char v128 = (unsigned char *)v127->__r_.__value_.__r.__words[0];
        }
        else
        {
          char v128 = (unsigned char *)(*(void *)v12 + 48);
          if (!*(unsigned char *)(*(void *)v12 + 71)) {
            goto LABEL_326;
          }
        }
        if (*v128 == 45)
        {
          std::string::basic_string(&v184, v127, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v204);
          sub_1F918A0((uint64_t)v201, (uint64_t *)&v184, (uint64_t *)a4, __p);
          uint64_t v83 = v188;
          if ((unint64_t)v188 >= v189)
          {
            unint64_t v84 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v188[-v187] >> 3);
            unint64_t v136 = v84 + 1;
            if (v84 + 1 > 0xAAAAAAAAAAAAAAALL) {
              sub_2E00();
            }
            if (0x5555555555555556 * ((uint64_t)(v189 - v187) >> 3) > v136) {
              unint64_t v136 = 0x5555555555555556 * ((uint64_t)(v189 - v187) >> 3);
            }
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v189 - v187) >> 3) >= 0x555555555555555) {
              unint64_t v86 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v86 = v136;
            }
            char v208 = &v189;
            if (!v86)
            {
              char v98 = 0;
LABEL_229:
              char v141 = &v98[3 * v84];
              int v204 = (void ***)v98;
              long long v205 = v141;
              long long v207 = &v98[3 * v86];
              long long v142 = *(_OWORD *)__p;
              v141[2] = (uint64_t)v186;
              *(_OWORD *)char v141 = v142;
              __p[1] = 0;
              char v186 = 0;
              __p[0] = 0;
              char v206 = v141 + 3;
              sub_188FE38(&v187, &v204);
              char v143 = v188;
              sub_188FFD0((uint64_t)&v204);
              char v188 = v143;
              if (SHIBYTE(v186) < 0) {
                operator delete(__p[0]);
              }
              goto LABEL_231;
            }
LABEL_224:
            char v98 = (uint64_t *)sub_112C518((uint64_t)&v189, v86);
            goto LABEL_229;
          }
LABEL_206:
          long long v129 = *(_OWORD *)__p;
          *((void *)v83 + 2) = v186;
          *(_OWORD *)uint64_t v83 = v129;
          __p[1] = 0;
          char v186 = 0;
          __p[0] = 0;
          char v188 = v83 + 24;
LABEL_231:
          if ((SHIBYTE(v184.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_234;
          }
          long long v140 = (void *)v184.__r_.__value_.__r.__words[0];
          goto LABEL_233;
        }
        sub_1F918A0((uint64_t)v201, (uint64_t *)v127, (uint64_t *)a4, __p);
        long long v130 = v191;
        if ((unint64_t)v191 < v192)
        {
          long long v131 = *(_OWORD *)__p;
          v191[2] = v186;
          *(_OWORD *)long long v130 = v131;
          char v191 = v130 + 3;
          goto LABEL_234;
        }
        unint64_t v132 = 0xAAAAAAAAAAAAAAABLL * (v191 - v190);
        unint64_t v133 = v132 + 1;
        if (v132 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_2E00();
        }
        if (0x5555555555555556 * ((uint64_t)(v192 - (void)v190) >> 3) > v133) {
          unint64_t v133 = 0x5555555555555556 * ((uint64_t)(v192 - (void)v190) >> 3);
        }
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v192 - (void)v190) >> 3) >= 0x555555555555555) {
          unint64_t v134 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v134 = v133;
        }
        char v208 = &v192;
        if (v134) {
          long long v135 = (uint64_t *)sub_112C518((uint64_t)&v192, v134);
        }
        else {
          long long v135 = 0;
        }
        long long v137 = &v135[3 * v132];
        int v204 = (void ***)v135;
        long long v205 = v137;
        long long v207 = &v135[3 * v134];
        long long v138 = *(_OWORD *)__p;
        v137[2] = (uint64_t)v186;
        *(_OWORD *)long long v137 = v138;
        __p[1] = 0;
        char v186 = 0;
        __p[0] = 0;
        char v206 = v137 + 3;
        sub_188FE38((uint64_t *)&v190, &v204);
        int v139 = v191;
        sub_188FFD0((uint64_t)&v204);
        char v191 = v139;
        if (SHIBYTE(v186) < 0)
        {
          long long v140 = __p[0];
LABEL_233:
          operator delete(v140);
        }
LABEL_234:
        long long v205 = 0;
        char v206 = 0;
        int v204 = (void ***)&v205;
        sub_199581C(*(void *)v12 + 120, (char **)__p);
        char v146 = __p[0];
        long long v145 = __p[1];
        if (__p[0] != __p[1])
        {
          do
          {
            LODWORD(v184.__r_.__value_.__l.__data_) = 0;
            LODWORD(v184.__r_.__value_.__l.__data_) = *v146;
            if (LODWORD(v184.__r_.__value_.__l.__data_)) {
              int v144 = sub_1932CB4((uint64_t **)&v204, (int *)&v184, &v184);
            }
            ++v146;
          }
          while (v146 != v145);
          char v146 = __p[0];
        }
        if (v146)
        {
          __p[1] = v146;
          operator delete(v146);
        }
        LODWORD(v184.__r_.__value_.__l.__data_) = 0;
        long long v147 = *(std::string **)v12;
        if (*(char *)(*(void *)v12 + 167) < 0)
        {
          int v144 = sub_4200(__dst, v147[6].__r_.__value_.__l.__data_, v147[6].__r_.__value_.__l.__size_);
        }
        else
        {
          *(_OWORD *)std::string __dst = *(_OWORD *)&v147[6].__r_.__value_.__l.__data_;
          std::string::size_type v183 = v147[6].__r_.__value_.__r.__words[2];
        }
        int v148 = sub_1995A64((uint64_t)v144, (const void **)__dst);
        if (SHIBYTE(v183) < 0) {
          operator delete(__dst[0]);
        }
        LODWORD(v184.__r_.__value_.__l.__data_) = v148;
        if (v148) {
          sub_1932CB4((uint64_t **)&v204, (int *)&v184, &v184);
        }
        int v149 = *(std::string **)v12;
        uint64_t v150 = *(unsigned __int8 *)(*(void *)v12 + 23);
        size_t v151 = *(void *)(*(void *)v12 + 8);
        if ((v150 & 0x80u) == 0) {
          uint64_t v152 = *(unsigned __int8 *)(*(void *)v12 + 23);
        }
        else {
          uint64_t v152 = *(void *)(*(void *)v12 + 8);
        }
        std::string::size_type v153 = HIBYTE(v149[1].__r_.__value_.__r.__words[2]);
        int v154 = (char)v153;
        if ((v153 & 0x80u) != 0) {
          std::string::size_type v153 = v149[1].__r_.__value_.__l.__size_;
        }
        if (v152 == v153)
        {
          if (v154 >= 0) {
            long long v155 = v149 + 1;
          }
          else {
            long long v155 = (std::string *)v149[1].__r_.__value_.__l.__data_;
          }
          if ((v150 & 0x80) != 0)
          {
            if (!memcmp(v149->__r_.__value_.__l.__data_, v155, *(void *)(*(void *)v12 + 8))) {
              goto LABEL_266;
            }
          }
          else
          {
            if (!*(unsigned char *)(*(void *)v12 + 23)) {
              goto LABEL_266;
            }
            uint64_t v156 = 0;
            while (v149->__r_.__value_.__s.__data_[v156] == v155->__r_.__value_.__s.__data_[v156])
            {
              if (v150 == ++v156) {
                goto LABEL_266;
              }
            }
          }
        }
        if (v194 != v193)
        {
          sub_1CB7120(v202, v193, v194, (uint64_t *)&v196, &v204);
          sub_1CB7120(v202, v196, v197, (uint64_t *)&v193, &v204);
          int v149 = *(std::string **)v12;
          LODWORD(v150) = *(unsigned __int8 *)(*(void *)v12 + 23);
          size_t v151 = *(void *)(*(void *)v12 + 8);
        }
LABEL_266:
        long long v157 = v149 + 2;
        uint64_t v158 = v150;
        if ((v150 & 0x80u) == 0) {
          size_t v159 = v150;
        }
        else {
          size_t v159 = v151;
        }
        int v160 = SHIBYTE(v149[2].__r_.__value_.__r.__words[2]);
        if (v160 >= 0) {
          std::string::size_type v161 = HIBYTE(v149[2].__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v161 = v149[2].__r_.__value_.__l.__size_;
        }
        if (v159 == v161)
        {
          if (v160 >= 0) {
            long long v162 = v149 + 2;
          }
          else {
            long long v162 = (std::string *)v157->__r_.__value_.__r.__words[0];
          }
          if ((v158 & 0x80) != 0)
          {
            if (!memcmp(v149->__r_.__value_.__l.__data_, v162, v151)) {
              goto LABEL_298;
            }
          }
          else
          {
            if (!v158) {
              goto LABEL_298;
            }
            char v163 = v149;
            while (v163->__r_.__value_.__s.__data_[0] == v162->__r_.__value_.__s.__data_[0])
            {
              char v163 = (std::string *)((char *)v163 + 1);
              long long v162 = (std::string *)((char *)v162 + 1);
              if (!--v158) {
                goto LABEL_298;
              }
            }
          }
        }
        uint64_t v164 = HIBYTE(v149[1].__r_.__value_.__r.__words[2]);
        if ((v164 & 0x80u) == 0) {
          std::string::size_type v165 = HIBYTE(v149[1].__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v165 = v149[1].__r_.__value_.__l.__size_;
        }
        if (v165 == v161)
        {
          p_std::string::pointer data = (const void **)&v149[1].__r_.__value_.__l.__data_;
          if (v160 >= 0) {
            long long v167 = v149 + 2;
          }
          else {
            long long v167 = (std::string *)v157->__r_.__value_.__r.__words[0];
          }
          if ((v164 & 0x80) == 0)
          {
            if (*((unsigned char *)&v149[1].__r_.__value_.__s + 23))
            {
              while (*(unsigned __int8 *)p_data == v167->__r_.__value_.__s.__data_[0])
              {
                p_std::string::pointer data = (const void **)((char *)p_data + 1);
                long long v167 = (std::string *)((char *)v167 + 1);
                if (!--v164) {
                  goto LABEL_298;
                }
              }
              goto LABEL_296;
            }
LABEL_298:
            uint64_t v168 = v187;
            int v169 = v188;
            for (uint64_t i = v180; (char *)v168 != v169; v168 += 24)
            {
              if (*(char *)(v168 + 23) < 0)
              {
                sub_4200(__p, *(void **)v168, *(void *)(v168 + 8));
              }
              else
              {
                long long v170 = *(_OWORD *)v168;
                char v186 = *(void **)(v168 + 16);
                *(_OWORD *)long long __p = v170;
              }
              if (v10 == sub_19081D4((uint64_t)v11, __p))
              {
                int v209 = __p;
                char v176 = (uint64_t **)(sub_1998F60(v11, __p, (uint64_t)&unk_20F06E0, (long long **)&v209) + 7);
                if (v176 != (uint64_t **)&v204) {
                  sub_199890C(v176, (int *)v204, (int *)&v205);
                }
              }
              else
              {
                char v171 = (uint64_t *)v204;
                if (v204 != (void ***)&v205)
                {
                  do
                  {
                    long long v172 = (uint64_t **)sub_1995B0C((uint64_t)v11, __p);
                    sub_1932CB4(v172, (int *)v171 + 7, (_DWORD *)v171 + 7);
                    char v173 = (uint64_t *)v171[1];
                    if (v173)
                    {
                      do
                      {
                        int v174 = v173;
                        char v173 = (uint64_t *)*v173;
                      }
                      while (v173);
                    }
                    else
                    {
                      do
                      {
                        int v174 = (uint64_t *)v171[2];
                        BOOL v175 = *v174 == (void)v171;
                        char v171 = v174;
                      }
                      while (!v175);
                    }
                    char v171 = v174;
                  }
                  while (v174 != (uint64_t *)&v205);
                }
              }
              if (SHIBYTE(v186) < 0) {
                operator delete(__p[0]);
              }
            }
            sub_22EFF4((uint64_t)&v204, v205);
            int v204 = (void ***)&v187;
            sub_1891624((void ***)&v204);
            int v204 = &v190;
            sub_1891624((void ***)&v204);
            int v204 = &v193;
            sub_1891624((void ***)&v204);
            int v204 = &v196;
            sub_1891624((void ***)&v204);
            goto LABEL_317;
          }
          if (!memcmp(*p_data, v167, v149[1].__r_.__value_.__l.__size_)) {
            goto LABEL_298;
          }
        }
LABEL_296:
        if (v191 != v190)
        {
          sub_1CB7120(v202, v190, v191, (uint64_t *)&v196, &v204);
          sub_1CB7120(v202, v196, v197, (uint64_t *)&v190, &v204);
        }
        goto LABEL_298;
      }
      unint64_t v112 = 0xAAAAAAAAAAAAAAABLL * (v194 - v193);
      unint64_t v113 = v112 + 1;
      if (v112 + 1 > 0xAAAAAAAAAAAAAAALL) {
        sub_2E00();
      }
      if (0x5555555555555556 * ((uint64_t)(v195 - (void)v193) >> 3) > v113) {
        unint64_t v113 = 0x5555555555555556 * ((uint64_t)(v195 - (void)v193) >> 3);
      }
      if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v195 - (void)v193) >> 3) >= 0x555555555555555) {
        unint64_t v114 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v114 = v113;
      }
      char v208 = &v195;
      if (v114) {
        long long v115 = (uint64_t *)sub_112C518((uint64_t)&v195, v114);
      }
      else {
        long long v115 = 0;
      }
      long long v120 = &v115[3 * v112];
      int v204 = (void ***)v115;
      long long v205 = v120;
      long long v207 = &v115[3 * v114];
      long long v121 = *(_OWORD *)__p;
      v120[2] = (uint64_t)v186;
      *(_OWORD *)long long v120 = v121;
      __p[1] = 0;
      char v186 = 0;
      __p[0] = 0;
      char v206 = v120 + 3;
      sub_188FE38((uint64_t *)&v193, &v204);
      long long v122 = v194;
      sub_188FFD0((uint64_t)&v204);
      int v194 = v122;
      if ((SHIBYTE(v186) & 0x80000000) == 0) {
        goto LABEL_199;
      }
      char v123 = __p[0];
    }
    operator delete(v123);
    goto LABEL_199;
  }
LABEL_318:
  long long v177 = v203;
  *char v178 = v202;
  v178[1] = v177;
  if (v177) {
    atomic_fetch_add_explicit(&v177->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  v178[2] = v11;
  void v178[3] = v179;
  atomic_fetch_add_explicit(&v179->__shared_owners_, 1uLL, memory_order_relaxed);
  int v204 = (void ***)&v199;
  sub_1998670((void ***)&v204);
  sub_20A69F0(v179);
  if (v203) {
    sub_20A69F0(v203);
  }
}

void sub_19953CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t ****a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t ***a35,uint64_t a36,uint64_t a37,uint64_t **a38,uint64_t a39,uint64_t a40,uint64_t *a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  if (a33 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  a22 = &a35;
  sub_1891624((void ***)&a22);
  a35 = &a38;
  sub_1891624((void ***)&a35);
  a38 = &a41;
  sub_1891624((void ***)&a38);
  a41 = &a44;
  sub_1891624((void ***)&a41);
  a44 = v44 - 208;
  sub_1998670((void ***)&a44);
  sub_20A69F0(a11);
  unint64_t v46 = *(std::__shared_weak_count **)(v44 - 152);
  if (v46) {
    sub_20A69F0(v46);
  }
  _Unwind_Resume(a1);
}

void sub_1995608(void *a1@<X1>, size_t a2@<X2>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  sub_111E930(&__p, a1, a2);
  sub_1996098(&__p, &v17);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v4 = v17;
  for (uint64_t i = v18; v4 != i; v4 += 24)
  {
    char v6 = *(unsigned char *)(v4 + 23);
    if (v6 < 0)
    {
      long long v7 = *(char **)v4;
      int64_t v8 = *(void *)(v4 + 8);
    }
    else
    {
      long long v7 = (char *)v4;
      int64_t v8 = *(unsigned __int8 *)(v4 + 23);
    }
    if (v8 >= 1)
    {
      uint64_t v9 = &v7[v8];
      unint64_t v10 = v7;
      do
      {
        uint64_t v11 = (char *)memchr(v10, 35, v8);
        if (!v11) {
          break;
        }
        if (*v11 == 35)
        {
          if (v11 != v9 && v11 - v7 != -1) {
            goto LABEL_22;
          }
          break;
        }
        unint64_t v10 = v11 + 1;
        int64_t v8 = v9 - (unsigned char *)v10;
      }
      while (v9 - (unsigned char *)v10 >= 1);
    }
    if (v6 < 0)
    {
      sub_4200(&__dst, *(void **)v4, *(void *)(v4 + 8));
    }
    else
    {
      long long v12 = *(_OWORD *)v4;
      __dst.__r_.__value_.__r.__words[2] = *(void *)(v4 + 16);
      *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v12;
    }
    sub_5E5C(v13, ",");
    sub_1995B4C(&__dst, (unsigned __int8 *)v13, (uint64_t)&__p);
    sub_19962E8(a3, (uint64_t)&__p);
    p_p = &__p;
    sub_1891624((void ***)&p_p);
    if (v14 < 0) {
      operator delete(v13[0]);
    }
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
LABEL_22:
    ;
  }
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v17;
  sub_1891624((void ***)&__p);
}

void sub_199578C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,char a28)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  sub_1998670((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_199581C(uint64_t a1@<X1>, char **a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  if (*(char *)(a1 + 23) < 0) {
    sub_4200(&__dst, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __dst = *(std::string *)a1;
  }
  sub_5E5C(__p, "|");
  sub_1995B4C(&__dst, (unsigned __int8 *)__p, (uint64_t)&v23);
  if (v21 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  uint64_t v4 = v23;
  for (i = v24; v4 != i; uint64_t v4 = (long long *)((char *)v4 + 24))
  {
    if (*((char *)v4 + 23) < 0)
    {
      LODWORD(v3) = sub_4200(v18, *(void **)v4, *((void *)v4 + 1));
    }
    else
    {
      long long v6 = *v4;
      uint64_t v19 = *((void *)v4 + 2);
      *(_OWORD *)uint64_t v18 = v6;
    }
    LODWORD(v3) = sub_1995E34((int)v3, (uint64_t)v18);
    int v7 = (int)v3;
    uint64_t v9 = a2[1];
    unint64_t v8 = (unint64_t)a2[2];
    if ((unint64_t)v9 >= v8)
    {
      uint64_t v3 = *a2;
      uint64_t v11 = (v9 - *a2) >> 2;
      unint64_t v12 = v11 + 1;
      if ((unint64_t)(v11 + 1) >> 62) {
        sub_2E00();
      }
      uint64_t v13 = v8 - (void)v3;
      if (v13 >> 1 > v12) {
        unint64_t v12 = v13 >> 1;
      }
      if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v14 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v14 = v12;
      }
      if (v14)
      {
        uint64_t v15 = (char *)sub_1896AFC((uint64_t)(a2 + 2), v14);
        uint64_t v3 = *a2;
        uint64_t v9 = a2[1];
      }
      else
      {
        uint64_t v15 = 0;
      }
      uint64_t v16 = &v15[4 * v11];
      *(_DWORD *)uint64_t v16 = v7;
      unint64_t v10 = v16 + 4;
      while (v9 != v3)
      {
        int v17 = *((_DWORD *)v9 - 1);
        v9 -= 4;
        *((_DWORD *)v16 - 1) = v17;
        v16 -= 4;
      }
      *a2 = v16;
      a2[1] = v10;
      a2[2] = &v15[4 * v14];
      if (v3) {
        operator delete(v3);
      }
    }
    else
    {
      *(_DWORD *)uint64_t v9 = v3;
      unint64_t v10 = v9 + 4;
    }
    a2[1] = v10;
    if (SHIBYTE(v19) < 0) {
      operator delete(v18[0]);
    }
  }
  uint64_t v25 = &v23;
  sub_1891624((void ***)&v25);
}

void sub_19959F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,char a28)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1995A64(uint64_t a1, const void **a2)
{
  int v2 = *((char *)a2 + 23);
  if (v2 >= 0) {
    uint64_t v3 = (char *)*((unsigned __int8 *)a2 + 23);
  }
  else {
    uint64_t v3 = (char *)a2[1];
  }
  if (v3 == (unsigned char *)dword_4 + 1)
  {
    if (v2 >= 0) {
      long long v6 = a2;
    }
    else {
      long long v6 = *a2;
    }
    if (!memcmp(v6, "title", 5uLL)) {
      return 22;
    }
    else {
      return 0;
    }
  }
  else if (v3 == (unsigned char *)dword_8 + 1)
  {
    if (v2 >= 0) {
      uint64_t v4 = (unsigned __int8 *)a2;
    }
    else {
      uint64_t v4 = (unsigned __int8 *)*a2;
    }
    if (*(void *)v4 ^ 0x6F69746365726964 | v4[8] ^ 0x6ELL) {
      return 0;
    }
    else {
      return 21;
    }
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1995B0C(uint64_t a1, void **a2)
{
  uint64_t v2 = *sub_1122028(a1, &v4, a2);
  if (!v2) {
    sub_5AE8("map::at:  key not found");
  }
  return v2 + 56;
}

void sub_1995B4C(std::string *__str@<X1>, unsigned __int8 *a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    int v7 = (std::string *)__str->__r_.__value_.__r.__words[0];
    std::string::size_type size = __str->__r_.__value_.__l.__size_;
  }
  else
  {
    std::string::size_type size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    int v7 = __str;
  }
  uint64_t v8 = a2[23];
  if ((v8 & 0x80u) == 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = *(unsigned __int8 **)a2;
  }
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *((void *)a2 + 1);
  }
  if (size) {
    BOOL v10 = v8 == 0;
  }
  else {
    BOOL v10 = 1;
  }
  if (v10)
  {
LABEL_14:
    *(void *)(a3 + 8) = sub_1D740((char **)a3, (uint64_t)__str);
  }
  else
  {
    uint64_t v11 = (unsigned __int8 *)v7 + size;
    unint64_t v12 = v7;
LABEL_16:
    uint64_t v13 = v8;
    unint64_t v14 = v9;
    while (v12->__r_.__value_.__s.__data_[0] != *v14)
    {
      ++v14;
      if (!--v13)
      {
        unint64_t v12 = (std::string *)((char *)v12 + 1);
        if (v12 != (std::string *)v11) {
          goto LABEL_16;
        }
        goto LABEL_14;
      }
    }
    if (v12 == (std::string *)v11) {
      goto LABEL_14;
    }
    int64_t v15 = (char *)v12 - (char *)v7;
    if ((char *)v12 - (char *)v7 == -1) {
      goto LABEL_14;
    }
    std::string::size_type v16 = 0;
    while (2)
    {
      std::string::basic_string(&__p, __str, v16, v15 - v16, (std::allocator<char> *)v39);
      unint64_t v18 = *(void *)(a3 + 8);
      unint64_t v17 = *(void *)(a3 + 16);
      if (v18 >= v17)
      {
        unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v18 - *(void *)a3) >> 3);
        unint64_t v21 = v20 + 1;
        if (v20 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_2E00();
        }
        unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v17 - *(void *)a3) >> 3);
        if (2 * v22 > v21) {
          unint64_t v21 = 2 * v22;
        }
        if (v22 >= 0x555555555555555) {
          unint64_t v23 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v23 = v21;
        }
        void v39[4] = a3 + 16;
        if (v23) {
          long long v24 = (char *)sub_112C518(a3 + 16, v23);
        }
        else {
          long long v24 = 0;
        }
        uint64_t v25 = &v24[24 * v20];
        v39[0] = v24;
        v39[1] = v25;
        uint64_t v39[3] = &v24[24 * v23];
        long long v26 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *((void *)v25 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
        *(_OWORD *)uint64_t v25 = v26;
        memset(&__p, 0, sizeof(__p));
        v39[2] = v25 + 24;
        sub_188FE38((uint64_t *)a3, v39);
        uint64_t v27 = *(void *)(a3 + 8);
        sub_188FFD0((uint64_t)v39);
        int v28 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
        *(void *)(a3 + 8) = v27;
        if (v28 < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        long long v19 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
        *(void *)(v18 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
        *(_OWORD *)unint64_t v18 = v19;
        *(void *)(a3 + 8) = v18 + 24;
      }
      if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
      {
        long long v30 = (std::string *)__str->__r_.__value_.__r.__words[0];
        std::string::size_type v29 = __str->__r_.__value_.__l.__size_;
      }
      else
      {
        std::string::size_type v29 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
        long long v30 = __str;
      }
      std::string::size_type v16 = v15 + 1;
      uint64_t v31 = a2[23];
      if ((v31 & 0x80u) == 0) {
        long long v32 = a2;
      }
      else {
        long long v32 = *(unsigned __int8 **)a2;
      }
      if ((v31 & 0x80u) != 0) {
        uint64_t v31 = *((void *)a2 + 1);
      }
      if (v29 > v16 && v31 != 0)
      {
        unint64_t v34 = (unsigned __int8 *)v30 + v16;
        unint64_t v35 = (unsigned __int8 *)v30 + v29;
LABEL_50:
        uint64_t v36 = v31;
        uint64_t v37 = v32;
        while (*v34 != *v37)
        {
          ++v37;
          if (!--v36)
          {
            if (++v34 != v35) {
              goto LABEL_50;
            }
            return;
          }
        }
        if (v34 != v35)
        {
          int64_t v15 = v34 - (unsigned __int8 *)v30;
          if (v34 - (unsigned __int8 *)v30 != -1) {
            continue;
          }
        }
      }
      break;
    }
  }
}

void sub_1995DEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
}

uint64_t sub_1995E34(int a1, uint64_t a2)
{
  int v3 = *(char *)(a2 + 23);
  if (v3 >= 0) {
    uint64_t v4 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if (v4 == 2)
  {
    if (v3 >= 0) {
      uint64_t v8 = (_WORD *)a2;
    }
    else {
      uint64_t v8 = *(_WORD **)a2;
    }
    if (!memcmp(v8, "16", 2uLL)) {
      return 4;
    }
    if (*v8 == 13619) {
      return 5;
    }
  }
  else if (v4 == 1)
  {
    uint64_t v5 = v3 >= 0 ? (unsigned __int8 *)a2 : *(unsigned __int8 **)a2;
    unsigned int v6 = *v5 - 48;
    if (v6 < 5 && ((0x17u >> v6) & 1) != 0) {
      return dword_2173AB8[(char)v6];
    }
  }
  if (sub_A2328C((void *)a2, "43")) {
    return 6;
  }
  if (sub_A2328C((void *)a2, "44")) {
    return 7;
  }
  if (sub_A2328C((void *)a2, "45")) {
    return 8;
  }
  if (sub_A2328C((void *)a2, "46")) {
    return 9;
  }
  if (sub_A2328C((void *)a2, "47")) {
    return 10;
  }
  if (sub_A2328C((void *)a2, "48")) {
    return 11;
  }
  if (sub_A2328C((void *)a2, "49")) {
    return 12;
  }
  if (sub_A2328C((void *)a2, "50")) {
    return 13;
  }
  if (sub_A2328C((void *)a2, "51")) {
    return 14;
  }
  if (sub_A2328C((void *)a2, "54")) {
    return 15;
  }
  if (sub_A2328C((void *)a2, "55")) {
    return 16;
  }
  if (sub_A2328C((void *)a2, "57")) {
    return 17;
  }
  if (sub_A2328C((void *)a2, "59")) {
    return 18;
  }
  if (sub_A2328C((void *)a2, "61")) {
    return 19;
  }
  if (sub_A2328C((void *)a2, "65")) {
    return 20;
  }
  return 0;
}

void sub_1996098(std::string *__str@<X1>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  std::string::size_type size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0) {
    uint64_t v4 = __str;
  }
  else {
    uint64_t v4 = (std::string *)__str->__r_.__value_.__r.__words[0];
  }
  if ((size & 0x80u) != 0) {
    std::string::size_type size = __str->__r_.__value_.__l.__size_;
  }
  if (size)
  {
    uint64_t v6 = 0;
    while (v4->__r_.__value_.__s.__data_[v6] != 10)
    {
      if (size == ++v6) {
        return;
      }
    }
    if (size != v6 && v6 != -1)
    {
      std::string::size_type v7 = 0;
      do
      {
        std::string::basic_string(&__p, __str, v7, v6 - v7, (std::allocator<char> *)v23);
        unint64_t v9 = a2[1];
        unint64_t v8 = a2[2];
        if (v9 >= v8)
        {
          unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - *a2) >> 3);
          unint64_t v12 = v11 + 1;
          if (v11 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_2E00();
          }
          unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v8 - *a2) >> 3);
          if (2 * v13 > v12) {
            unint64_t v12 = 2 * v13;
          }
          if (v13 >= 0x555555555555555) {
            unint64_t v14 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v14 = v12;
          }
          v23[4] = a2 + 2;
          if (v14) {
            int64_t v15 = (char *)sub_112C518((uint64_t)(a2 + 2), v14);
          }
          else {
            int64_t v15 = 0;
          }
          std::string::size_type v16 = &v15[24 * v11];
          v23[0] = v15;
          v23[1] = v16;
          v23[3] = &v15[24 * v14];
          long long v17 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *((void *)v16 + 2) = *((void *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)std::string::size_type v16 = v17;
          memset(&__p, 0, sizeof(__p));
          v23[2] = v16 + 24;
          sub_188FE38(a2, v23);
          uint64_t v18 = a2[1];
          sub_188FFD0((uint64_t)v23);
          int v19 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
          a2[1] = v18;
          if (v19 < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          long long v10 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *(void *)(v9 + 16) = *((void *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)unint64_t v9 = v10;
          a2[1] = v9 + 24;
        }
        std::string::size_type v7 = v6 + 1;
        std::string::size_type v20 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
        if ((v20 & 0x80u) == 0) {
          unint64_t v21 = __str;
        }
        else {
          unint64_t v21 = (std::string *)__str->__r_.__value_.__r.__words[0];
        }
        if ((v20 & 0x80u) != 0) {
          std::string::size_type v20 = __str->__r_.__value_.__l.__size_;
        }
        if (v20 <= v7) {
          break;
        }
        ++v6;
        while (v21->__r_.__value_.__s.__data_[v6] != 10)
        {
          if (v20 == ++v6) {
            return;
          }
        }
      }
      while (v20 != v6 && v6 != -1);
    }
  }
}

void sub_19962A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1891624((void ***)&__p);
  _Unwind_Resume(a1);
}

void **sub_19962E8(uint64_t *a1, uint64_t a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (void **)(a1 + 2);
  unint64_t v5 = v6;
  std::string::size_type v7 = *(result - 1);
  if ((unint64_t)v7 >= v6)
  {
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v7 - *a1) >> 3);
    unint64_t v10 = v9 + 1;
    if (v9 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_2E00();
    }
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a1) >> 3);
    if (2 * v11 > v10) {
      unint64_t v10 = 2 * v11;
    }
    if (v11 >= 0x555555555555555) {
      unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v12 = v10;
    }
    void v16[4] = result;
    unint64_t v13 = (char *)sub_112C518((uint64_t)result, v12);
    unint64_t v14 = &v13[24 * v9];
    v16[0] = v13;
    v16[1] = v14;
    void v16[3] = &v13[24 * v15];
    *((void *)v14 + 1) = 0;
    *((void *)v14 + 2) = 0;
    *(void *)unint64_t v14 = 0;
    *(_OWORD *)unint64_t v14 = *(_OWORD *)a2;
    *((void *)v14 + 2) = *(void *)(a2 + 16);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    v16[2] = v14 + 24;
    sub_19986E4(a1, v16);
    unint64_t v8 = (void *)a1[1];
    uint64_t result = sub_1998884(v16);
  }
  else
  {
    *std::string::size_type v7 = 0;
    v7[1] = 0;
    v7[2] = 0;
    *(_OWORD *)std::string::size_type v7 = *(_OWORD *)a2;
    v7[2] = *(void *)(a2 + 16);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    unint64_t v8 = v7 + 3;
    a1[1] = (uint64_t)(v7 + 3);
  }
  a1[1] = (uint64_t)v8;
  return result;
}

void sub_1996414(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1998884((void **)va);
  _Unwind_Resume(a1);
}

void sub_1996428(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  std::string::size_type v31 = 0;
  long long v32 = 0;
  std::string::size_type v29 = 0;
  long long v30 = 0;
  uint64_t v8 = a3 + 1184;
  unint64_t v9 = (long long **)sub_1962C60(a3 + 1184);
  sub_1962C68(v8, v9, &__p);
  sub_1A9D3F8(&__p, &v28);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  unint64_t v10 = sub_1908254((void *)(a3 + 1104), (unsigned __int8 *)(a1 + 24));
  unint64_t v11 = v10;
  if (!v10 || ((*(uint64_t (**)(void))(**((void **)v10 + 5) + 8))(*((void *)v10 + 5)) & 1) != 0)
  {
    std::string::size_type size = 0;
    unint64_t v13 = 0;
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
    goto LABEL_23;
  }
  unint64_t v14 = (const void *)*((void *)v11 + 5);
  if (!v14)
  {
    uint64_t v15 = 0;
    goto LABEL_11;
  }
  if (!v15)
  {
LABEL_11:
    std::string::size_type v16 = 0;
    goto LABEL_12;
  }
  std::string::size_type v16 = (std::__shared_weak_count *)*((void *)v11 + 6);
  if (v16) {
    atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
  }
LABEL_12:
  long long v17 = **(void ***)sub_638A44((uint64_t)v15);
  uint64_t v18 = sub_638A44((uint64_t)v15);
  sub_1993E7C((void (****)(void **__return_ptr))(a1 + 8), v17, *(void *)(*(void *)v18 + 8), (unsigned __int8 *)&v28, &__p);
  std::string::size_type size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
  std::string::size_type v19 = __p.__r_.__value_.__r.__words[0];
  if (__p.__r_.__value_.__l.__size_) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(__p.__r_.__value_.__l.__size_ + 8), 1uLL, memory_order_relaxed);
  }
  std::string::size_type v31 = v19;
  long long v32 = size;
  std::string::size_type v20 = (void *)__p.__r_.__value_.__r.__words[2];
  unint64_t v13 = v27;
  if (!v27)
  {
    std::string::size_type v29 = (void *)__p.__r_.__value_.__r.__words[2];
    long long v30 = 0;
    if (!size) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  atomic_fetch_add_explicit(&v27->__shared_owners_, 1uLL, memory_order_relaxed);
  std::string::size_type v29 = v20;
  long long v30 = v13;
  sub_20A69F0(v13);
  if (size) {
LABEL_16:
  }
    sub_20A69F0(size);
LABEL_17:
  if (v16) {
    sub_20A69F0(v16);
  }
  memset(v25, 0, sizeof(v25));
  sub_18D50DC(v25, *a2, a2[1], (a2[1] - *a2) >> 6);
  sub_1B1DF90(v25, (uint64_t *)&__p);
  v24[0] = (void **)v25;
  sub_18D522C(v24);
  sub_1992AF4((uint64_t *)&__p, (uint64_t *)&v31, (uint64_t *)v24);
  sub_1993620((uint64_t *)&__p, &v29, (uint64_t *)v24);
  sub_1993B48((uint64_t *)&__p, v24, (uint64_t *)v23);
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  if (*(int *)(a3 + 1536) <= 1) {
    int v22 = 1;
  }
  else {
    int v22 = *(_DWORD *)(a3 + 1536);
  }
  sub_19967DC(v21, (unint64_t *)&__p, a4, (uint64_t *)v23, v22);
  unint64_t v33 = v23;
  sub_1997AE4((void ***)&v33);
  v23[0] = (void **)v24;
  sub_1997AE4(v23);
  v24[0] = (void **)&__p;
  sub_18D522C(v24);
LABEL_23:
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v28.__r_.__value_.__l.__data_);
  }
  if (v13) {
    sub_20A69F0(v13);
  }
  if (size) {
    sub_20A69F0(size);
  }
}

void sub_19966F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void ***a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  *(void *)(v35 - 72) = v31;
  sub_18D54D8((void ***)(v35 - 72));
  *(void *)(v35 - 72) = v34;
  sub_1997AE4((void ***)(v35 - 72));
  a10 = &a13;
  sub_1997AE4((void ***)&a10);
  a13 = &a19;
  sub_18D522C(&a13);
  if (a31 < 0)
  {
    operator delete(__p);
    if (!v33)
    {
LABEL_3:
      if (!v32) {
LABEL_8:
      }
        _Unwind_Resume(a1);
LABEL_7:
      sub_20A69F0(v32);
      goto LABEL_8;
    }
  }
  else if (!v33)
  {
    goto LABEL_3;
  }
  sub_20A69F0(v33);
  long long v32 = *(std::__shared_weak_count **)(v35 - 80);
  if (!v32) {
    goto LABEL_8;
  }
  goto LABEL_7;
}

void sub_19967DC(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t *a4, int a5)
{
  std::string __p = 0;
  char v51 = 0;
  unint64_t v52 = 0;
  if (a4[1] != *a4)
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    do
    {
      if (v8 >= v52)
      {
        unint64_t v11 = (char *)__p;
        uint64_t v12 = (v8 - (unsigned char *)__p) >> 3;
        unint64_t v13 = v12 + 1;
        if ((unint64_t)(v12 + 1) >> 61) {
          sub_2E00();
        }
        uint64_t v14 = v52 - (unsigned char *)__p;
        if ((v52 - (unsigned char *)__p) >> 2 > v13) {
          unint64_t v13 = v14 >> 2;
        }
        if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v15 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v15 = v13;
        }
        if (v15)
        {
          std::string::size_type v16 = (char *)sub_1122DC0((uint64_t)&v52, v15);
          unint64_t v11 = (char *)__p;
          uint64_t v8 = v51;
        }
        else
        {
          std::string::size_type v16 = 0;
        }
        long long v17 = &v16[8 * v12];
        *(void *)long long v17 = 0;
        unint64_t v10 = v17 + 8;
        while (v8 != v11)
        {
          uint64_t v18 = *((void *)v8 - 1);
          v8 -= 8;
          *((void *)v17 - 1) = v18;
          v17 -= 8;
        }
        std::string __p = v17;
        char v51 = v10;
        unint64_t v52 = &v16[8 * v15];
        if (v11) {
          operator delete(v11);
        }
      }
      else
      {
        *(void *)uint64_t v8 = 0;
        unint64_t v10 = v8 + 8;
      }
      char v51 = v10;
      ++v9;
      uint64_t v8 = v10;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 3) > v9);
  }
  v49[0] = 0;
  v49[1] = 0;
  unint64_t v48 = v49;
  sub_1B1EC84(a2, &v47);
  sub_1121F94((uint64_t **)&v48, (void **)&v47.__r_.__value_.__l.__data_, (uint64_t)&v47);
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v47.__r_.__value_.__l.__data_);
  }
  int v44 = 0;
  long long v45 = a3;
  do
  {
    memset(&v47, 0, sizeof(v47));
    std::string::size_type v20 = (char *)__p;
    std::string::size_type v19 = v51;
    if (v51 != __p)
    {
      unint64_t v21 = 0;
      do
      {
        uint64_t v22 = *(void *)(*a4 + 24 * v21) + 40 * *(void *)&v20[8 * v21];
        unint64_t v23 = *(long long **)v22;
        long long v24 = (unint64_t *)(v22 + 32);
        if (*(void *)v22 >= *(void *)(v22 + 8))
        {
          unint64_t v27 = *v24;
        }
        else
        {
          do
          {
            sub_1987CD4((uint64_t *)&v47, v23);
            unint64_t v25 = *a2;
            std::string::size_type size = v47.__r_.__value_.__l.__size_;
            *(void *)(v47.__r_.__value_.__l.__size_ - 40) = *(void *)(*a2 + (v21 << 6) + 24);
            unint64_t v27 = *v24;
            *(void *)(size - 32) = *(void *)(v25 + (*v24 << 6) - 32);
            uint64_t v28 = (v21 << 6) | 0x28;
            unint64_t v29 = v21;
            if (v21 < v27)
            {
              do
              {
                sub_18D4CFC((uint64_t *)(v47.__r_.__value_.__l.__size_ - 24), *(int **)(*a2 + v28), (int *)(*a2 + v28 + 8));
                ++v29;
                unint64_t v27 = *v24;
                v28 += 64;
              }
              while (v29 < *v24);
            }
            v23 += 4;
          }
          while ((unint64_t)v23 < *(void *)(v22 + 8));
          std::string::size_type v20 = (char *)__p;
          std::string::size_type v19 = v51;
        }
        unint64_t v21 = v27;
      }
      while (v27 < (v19 - v20) >> 3);
    }
    sub_1B1EC84((unint64_t *)&v47, &v46);
    if (v49 == (char **)sub_19081D4((uint64_t)&v48, (void **)&v46.__r_.__value_.__l.__data_))
    {
      unint64_t v31 = v45[1];
      if (v31 >= v45[2])
      {
        uint64_t v32 = sub_18D4FC4(v45, (uint64_t *)&v47);
      }
      else
      {
        sub_18D4F70((uint64_t)v45, (uint64_t *)&v47);
        uint64_t v32 = v31 + 24;
      }
      v45[1] = v32;
      sub_2F0A4((uint64_t **)&v48, (const void **)&v46.__r_.__value_.__l.__data_, (uint64_t)&v46);
      BOOL v30 = ++v44 == a5;
    }
    else
    {
      BOOL v30 = 0;
    }
    unint64_t v33 = (char *)__p;
    uint64_t v34 = (v51 - (unsigned char *)__p) >> 3;
    uint64_t v35 = *a4;
    uint64_t v36 = v34 - 1;
    unint64_t v37 = *((void *)__p + v34 - 1) + 1;
    *((void *)__p + v34 - 1) = v37;
    if (v37 >= 0xCCCCCCCCCCCCCCCDLL
              * ((uint64_t)(*(void *)(v35 + 24 * (v34 - 1) + 8) - *(void *)(v35 + 24 * (v34 - 1))) >> 3))
    {
      long long v38 = (unint64_t *)&v33[8 * v34 - 16];
      unint64_t v39 = (uint64_t *)(v35 + 24 * v34 - 48);
      while (v36)
      {
        --v36;
        unint64_t v40 = *v38 + 1;
        *long long v38 = v40;
        v38[1] = 0;
        --v38;
        uint64_t v42 = *v39;
        uint64_t v41 = v39[1];
        v39 -= 3;
        if (v40 < 0xCCCCCCCCCCCCCCCDLL * ((v41 - v42) >> 3)) {
          goto LABEL_44;
        }
      }
      BOOL v30 = 1;
    }
LABEL_44:
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v46.__r_.__value_.__l.__data_);
    }
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&v47;
    sub_18D522C((void ***)&v46);
  }
  while (!v30);
  sub_2F020((uint64_t)&v48, v49[0]);
  if (__p)
  {
    char v51 = (char *)__p;
    operator delete(__p);
  }
}

void sub_1996BAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25,char *a26,uint64_t a27,void *a28,uint64_t a29)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  sub_2F020((uint64_t)&a25, a26);
  if (a28)
  {
    a29 = (uint64_t)a28;
    operator delete(a28);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1996C34(uint64_t *a1, void **a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  long long v17 = a1 + 2;
  if (v9) {
    unint64_t v10 = (char *)sub_112C518(v7, v9);
  }
  else {
    unint64_t v10 = 0;
  }
  unint64_t v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  unint64_t v15 = v11;
  std::string::size_type v16 = &v10[24 * v9];
  *(void *)unint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = 0;
  sub_1996D4C(v11, *a2, a2[1], ((char *)a2[1] - (char *)*a2) >> 4);
  v15 += 24;
  sub_1996EE0(a1, v14);
  uint64_t v12 = a1[1];
  sub_1997080(v14);
  return v12;
}

void sub_1996D38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1997080((void **)va);
  _Unwind_Resume(a1);
}

void *sub_1996D4C(void *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    sub_112DF28(result, a4);
    uint64_t result = sub_1996DD4((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1996DB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_197A1EC(&a9);
  _Unwind_Resume(a1);
}

void *sub_1996DD4(uint64_t a1, void *a2, void *a3, void *a4)
{
  unint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      void *v4 = *a2;
      uint64_t v5 = a2[1];
      v4[1] = v5;
      if (v5) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
      }
      v4 += 2;
      a2 += 2;
    }
    while (a2 != a3);
    uint64_t v10 = v4;
  }
  char v8 = 1;
  sub_1996E64((uint64_t)v7);
  return v4;
}

uint64_t sub_1996E64(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1996E9C(a1);
  }
  return a1;
}

void sub_1996E9C(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(std::__shared_weak_count **)(v1 - 8);
    if (v3) {
      sub_20A69F0(v3);
    }
    v1 -= 16;
  }
}

uint64_t sub_1996EE0(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1996F58((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1996F58(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_1996FFC((uint64_t)v11);
  return v9;
}

uint64_t sub_1996FFC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1997034(a1);
  }
  return a1;
}

void sub_1997034(uint64_t a1)
{
  uint64_t v1 = *(void ***)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void ***)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = v1;
    sub_197A1EC(&v3);
    v1 += 3;
  }
}

void **sub_1997080(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_19970B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    unint64_t v4 = (void **)(i - 24);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = v4;
    sub_197A1EC(&v5);
  }
}

uint64_t sub_1997108(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x666666666666666) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x333333333333333) {
    unint64_t v9 = 0x666666666666666;
  }
  else {
    unint64_t v9 = v5;
  }
  long long v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_19972A8(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  unint64_t v11 = &v10[40 * v4];
  v14[0] = v10;
  v14[1] = v11;
  unint64_t v15 = v11;
  std::string::size_type v16 = &v10[40 * v9];
  *(void *)unint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = 0;
  sub_18D50DC(v11, *(void *)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 6);
  *(_OWORD *)&v10[40 * v4 + 24] = *(_OWORD *)(a2 + 24);
  v15 += 40;
  sub_1997230(a1, v14);
  uint64_t v12 = a1[1];
  sub_1997420(v14);
  return v12;
}

void sub_199721C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1997420((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1997230(uint64_t *a1, void *a2)
{
  uint64_t result = sub_19972F0((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_19972A8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    sub_188D718();
  }
  return operator new(40 * a2);
}

uint64_t sub_19972F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 40) = 0;
      *(void *)(v7 - 32) = 0;
      *(void *)(v7 - 24) = 0;
      long long v8 = *(_OWORD *)(a3 - 40);
      a3 -= 40;
      *(_OWORD *)(v7 - 40) = v8;
      *(void *)(v7 - 24) = *(void *)(a3 + 16);
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(_OWORD *)(v7 - 16) = *(_OWORD *)(a3 + 24);
      uint64_t v7 = *((void *)&v14 + 1) - 40;
      *((void *)&v14 + 1) -= 40;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_199739C((uint64_t)v11);
  return v9;
}

uint64_t sub_199739C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_19973D4(a1);
  }
  return a1;
}

void sub_19973D4(uint64_t a1)
{
  uint64_t v1 = *(void ***)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void ***)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = v1;
    sub_18D522C(&v3);
    v1 += 5;
  }
}

void **sub_1997420(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_1997454(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    unint64_t v4 = (void **)(i - 40);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = v4;
    sub_18D522C(&v5);
  }
}

void *sub_19974A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  *uint64_t v3 = 0;
  v3[1] = 0;
  v3[2] = 0;
  uint64_t result = sub_199762C(v3, *a2, a2[1], 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3));
  *(void *)(a1 + 8) = v3 + 3;
  return result;
}

void sub_1997500(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1997508(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  long long v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_112C518(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  unint64_t v11 = &v10[24 * v4];
  v14[0] = v10;
  v14[1] = v11;
  unint64_t v15 = v11;
  std::string::size_type v16 = &v10[24 * v9];
  *(void *)unint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = 0;
  sub_199762C(v11, *a2, a2[1], 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3));
  v15 += 24;
  sub_19978BC(a1, v14);
  uint64_t v12 = a1[1];
  sub_1997A5C(v14);
  return v12;
}

void sub_1997618(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1997A5C((void **)va);
  _Unwind_Resume(a1);
}

void *sub_199762C(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_19976B4(result, a4);
    uint64_t result = (void *)sub_1997708((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1997694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1997848(&a9);
  _Unwind_Resume(a1);
}

char *sub_19976B4(void *a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    sub_2E00();
  }
  uint64_t result = (char *)sub_19972A8((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[40 * v4];
  return result;
}

uint64_t sub_1997708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *(void *)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      *(void *)(v4 + 16) = 0;
      sub_18D50DC((void *)v4, *(void *)v6, *(void *)(v6 + 8), (uint64_t)(*(void *)(v6 + 8) - *(void *)v6) >> 6);
      *(_OWORD *)(v4 + 24) = *(_OWORD *)(v6 + 24);
      uint64_t v4 = v11 + 40;
      v11 += 40;
      v6 += 40;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_19977C4((uint64_t)v8);
  return v4;
}

void sub_19977B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_19977C4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_19977FC(a1);
  }
  return a1;
}

void sub_19977FC(uint64_t a1)
{
  uint64_t v1 = **(void ****)(a1 + 16);
  uint64_t v2 = **(void ****)(a1 + 8);
  while (v1 != v2)
  {
    v1 -= 5;
    uint64_t v3 = v1;
    sub_18D522C(&v3);
  }
}

void sub_1997848(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    unint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 5;
        uint64_t v6 = v4;
        sub_18D522C(&v6);
      }
      while (v4 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_19978BC(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1997934((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1997934(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_19979D8((uint64_t)v11);
  return v9;
}

uint64_t sub_19979D8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1997A10(a1);
  }
  return a1;
}

void sub_1997A10(uint64_t a1)
{
  uint64_t v1 = *(void ***)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void ***)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = v1;
    sub_1997848(&v3);
    v1 += 3;
  }
}

void **sub_1997A5C(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_1997A90(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = (void **)(i - 24);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = v4;
    sub_1997848(&v5);
  }
}

void sub_1997AE4(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        uint64_t v6 = v4;
        sub_1997848(&v6);
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_1997B58(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        uint64_t v6 = v4;
        sub_197A1EC(&v6);
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_1997BCC(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = (void *)((char *)a2 + v6 - a4);
  long long v8 = (void *)v6;
  if ((unint64_t)v7 < a3)
  {
    uint64_t v9 = v7;
    long long v8 = *(void **)(a1 + 8);
    do
    {
      void *v8 = 0;
      v8[1] = 0;
      v8[2] = 0;
      *(_OWORD *)long long v8 = *(_OWORD *)v9;
      v8[2] = v9[2];
      *uint64_t v9 = 0;
      v9[1] = 0;
      v9[2] = 0;
      v8 += 3;
      v9 += 3;
    }
    while ((unint64_t)v9 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_1997E7C((uint64_t)&v11, a2, v7, v6);
}

void *sub_1997C4C(void *a1, uint64_t *a2)
{
  uint64_t v4 = (void *)a1[2];
  if (v4 == (void *)a1[3])
  {
    unint64_t v5 = a1[1];
    if (v5 <= *a1)
    {
      uint64_t v11 = (uint64_t)v4 - *a1;
      BOOL v10 = v11 == 0;
      uint64_t v12 = 0x5555555555555556 * (v11 >> 3);
      if (v10) {
        unint64_t v13 = 1;
      }
      else {
        unint64_t v13 = v12;
      }
      unint64_t v14 = v13 >> 2;
      uint64_t v15 = a1[4];
      uint64_t v29 = a1[4];
      std::string::size_type v16 = (char *)sub_112C518(v15, v13);
      uint64_t v18 = &v16[24 * v14];
      unint64_t v19 = a1[1];
      unint64_t v20 = a1[2] - v19;
      if (v20)
      {
        unint64_t v21 = &v18[v20];
        uint64_t v22 = &v16[24 * v14];
        do
        {
          *(void *)uint64_t v22 = 0;
          *((void *)v22 + 1) = 0;
          *((void *)v22 + 2) = 0;
          *(_OWORD *)uint64_t v22 = *(_OWORD *)v19;
          *((void *)v22 + 2) = *(void *)(v19 + 16);
          *(void *)unint64_t v19 = 0;
          *(void *)(v19 + 8) = 0;
          *(void *)(v19 + 16) = 0;
          v22 += 24;
          v19 += 24;
        }
        while (v22 != v21);
        int64x2_t v23 = *(int64x2_t *)(a1 + 1);
      }
      else
      {
        int64x2_t v23 = vdupq_n_s64(v19);
        unint64_t v21 = &v16[24 * v14];
      }
      long long v26 = (void *)*a1;
      *a1 = v16;
      a1[1] = v18;
      int64x2_t v27 = v23;
      uint64_t v24 = a1[3];
      a1[2] = v21;
      a1[3] = &v16[24 * v17];
      uint64_t v28 = v24;
      sub_1997A5C(&v26);
      uint64_t v4 = (void *)a1[2];
    }
    else
    {
      int64_t v6 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a1) >> 3);
      if (v6 >= -1) {
        uint64_t v7 = v6 + 1;
      }
      else {
        uint64_t v7 = v6 + 2;
      }
      uint64_t v8 = -3 * (v7 >> 1);
      sub_19983A4((uint64_t)&v26, v5, (uint64_t)v4, v5 - 24 * (v7 >> 1));
      uint64_t v4 = v9;
      a1[1] += 8 * v8;
      a1[2] = v9;
    }
  }
  void *v4 = 0;
  v4[1] = 0;
  long long v4[2] = 0;
  uint64_t result = sub_199762C(v4, *a2, a2[1], 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3));
  a1[2] += 24;
  return result;
}

uint64_t sub_1997DC8(uint64_t *a1, void *a2, void *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = (uint64_t)(a1 + 2);
  sub_1997934((uint64_t)(a1 + 2), (uint64_t)a3, a3, *a1, (void *)*a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_199841C(v7, (uint64_t)a3, a1[1], (void *)a2[2]);
  uint64_t v9 = *a1;
  *a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = a1[1];
  a1[1] = a2[2];
  a2[2] = v10;
  uint64_t v11 = a1[2];
  a1[2] = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

void *sub_1997E7C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v6 = a4 - 24;
    uint64_t v7 = a3;
    do
    {
      sub_1997EF0((void ***)v6);
      long long v8 = *(_OWORD *)(v7 - 3);
      v7 -= 3;
      *(_OWORD *)uint64_t v6 = v8;
      *(void *)(v6 + 16) = v7[2];
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
      v6 -= 24;
    }
    while (v7 != a2);
  }
  return a3;
}

void sub_1997EF0(void ***a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[1];
    uint64_t v4 = *a1;
    if (v3 != v1)
    {
      do
      {
        v3 -= 5;
        unint64_t v5 = v3;
        sub_18D522C(&v5);
      }
      while (v3 != v1);
      uint64_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void sub_1997F64(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  uint64_t v9 = *(void ***)a1;
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    sub_1997EF0((void ***)a1);
    if (a4 > 0x666666666666666) {
      sub_2E00();
    }
    unint64_t v10 = 0x999999999999999ALL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) >= 0x333333333333333) {
      unint64_t v11 = 0x666666666666666;
    }
    else {
      unint64_t v11 = v10;
    }
    sub_19976B4((void *)a1, v11);
    uint64_t v12 = sub_1997708(v8, a2, a3, *(void *)(a1 + 8));
    goto LABEL_11;
  }
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3) < a4)
  {
    uint64_t v13 = a2 + 8 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3);
    sub_19980E8((int)&v17, a2, v13, (uint64_t)v9);
    uint64_t v12 = sub_1997708(v8, v13, a3, *(void *)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = v12;
    return;
  }
  sub_19980E8((int)&v18, a2, a3, (uint64_t)v9);
  uint64_t v15 = v14;
  std::string::size_type v16 = *(void ***)(a1 + 8);
  if (v16 != v14)
  {
    do
    {
      v16 -= 5;
      unint64_t v19 = v16;
      sub_18D522C(&v19);
    }
    while (v16 != v15);
  }
  *(void *)(a1 + 8) = v15;
}

void sub_19980D8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_19980E0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_19980E8(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      if (v5 != a4) {
        sub_1998160(a4, *(std::string **)v5, *(std::string **)(v5 + 8), (uint64_t)(*(void *)(v5 + 8) - *(void *)v5) >> 6);
      }
      *(_OWORD *)(a4 + 24) = *(_OWORD *)(v5 + 24);
      v5 += 40;
      a4 += 40;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

void sub_1998160(uint64_t a1, std::string *__str, std::string *a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  uint64_t v9 = *(std::string **)a1;
  if (a4 > (uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 6)
  {
    sub_19982B0((void **)a1);
    if (a4 >> 58) {
      sub_2E00();
    }
    uint64_t v10 = *(void *)(a1 + 16) - *(void *)a1;
    uint64_t v11 = v10 >> 5;
    if (v10 >> 5 <= a4) {
      uint64_t v11 = a4;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFC0) {
      unint64_t v12 = 0x3FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    sub_18D5164((void *)a1, v12);
    uint64_t v13 = sub_18D51A8(v8, (uint64_t)__str, (uint64_t)a3, *(void *)(a1 + 8));
    goto LABEL_11;
  }
  unint64_t v14 = (uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 6;
  if (v14 < a4)
  {
    uint64_t v15 = (std::string *)((char *)__str + 64 * v14);
    sub_1998318((int)&v19, __str, v15, v9);
    uint64_t v13 = sub_18D51A8(v8, (uint64_t)v15, (uint64_t)a3, *(void *)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = v13;
    return;
  }
  sub_1998318((int)&v20, __str, a3, v9);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18 != v16)
  {
    do
    {
      v18 -= 64;
      sub_18D4ECC(v18);
    }
    while (v18 != v17);
  }
  *(void *)(a1 + 8) = v17;
}

void sub_19982A0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_19982A8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_19982B0(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    uint64_t v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 64;
        sub_18D4ECC(v3);
      }
      while ((void *)v3 != v1);
      uint64_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

std::string *sub_1998318(int a1, std::string *__str, std::string *a3, std::string *this)
{
  uint64_t v5 = __str;
  if (__str == a3) {
    return __str;
  }
  uint64_t v6 = a3;
  uint64_t v7 = (int *)&__str[2];
  do
  {
    std::string::operator=(this, v5);
    *(_OWORD *)&this[1].__r_.__value_.__l.__data_ = *(_OWORD *)&v5[1].__r_.__value_.__l.__data_;
    if (this != v5) {
      sub_199890C((uint64_t **)&this[1].__r_.__value_.__r.__words[2], (int *)v5[1].__r_.__value_.__r.__words[2], v7);
    }
    this = (std::string *)((char *)this + 64);
    v7 += 16;
    uint64_t v5 = (std::string *)((char *)v5 + 64);
  }
  while (v5 != v6);
  return v6;
}

uint64_t sub_19983A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    sub_1997EF0((void ***)a4);
    *(_OWORD *)a4 = *(_OWORD *)v5;
    *(void *)(a4 + 16) = *(void *)(v5 + 16);
    *(void *)uint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    *(void *)(v5 + 16) = 0;
    a4 += 24;
    v5 += 24;
  }
  while (v5 != v6);
  return v6;
}

void *sub_199841C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v9 = a4;
  uint64_t v8 = a4;
  v6[0] = a1;
  v6[1] = &v8;
  v6[2] = &v9;
  if (a2 != a3)
  {
    do
    {
      void *v4 = 0;
      v4[1] = 0;
      long long v4[2] = 0;
      *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
      long long v4[2] = *(void *)(a2 + 16);
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      v4 += 3;
      a2 += 24;
    }
    while (a2 != a3);
    uint64_t v9 = v4;
  }
  char v7 = 1;
  sub_19984AC((uint64_t)v6);
  return v4;
}

uint64_t sub_19984AC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_19984E4(a1);
  }
  return a1;
}

void sub_19984E4(uint64_t a1)
{
  uint64_t v1 = **(void ****)(a1 + 16);
  uint64_t v2 = **(void ****)(a1 + 8);
  while (v1 != v2)
  {
    v1 -= 3;
    uint64_t v3 = v1;
    sub_1997848(&v3);
  }
}

uint64_t sub_1998530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_18D554C((char *)(a4 + v7), (long long *)(a2 + v7));
      v7 += 64;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1998590(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 64;
    do
    {
      sub_18D4ECC(v4 + v2);
      v2 -= 64;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_19985B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      *(void *)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      *(void *)(v4 + 16) = 0;
      sub_18D50DC((void *)v4, *(void *)v6, *(void *)(v6 + 8), (uint64_t)(*(void *)(v6 + 8) - *(void *)v6) >> 6);
      *(_OWORD *)(v4 + 24) = *(_OWORD *)(v6 + 24);
      uint64_t v4 = v11 + 40;
      v11 += 40;
      v6 += 40;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_19977C4((uint64_t)v8);
  return v4;
}

void sub_199865C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1998670(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 3;
        uint64_t v6 = v4;
        sub_1891624(&v6);
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_19986E4(uint64_t *a1, void *a2)
{
  uint64_t result = sub_199875C((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_199875C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_1998800((uint64_t)v11);
  return v9;
}

uint64_t sub_1998800(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1998838(a1);
  }
  return a1;
}

void sub_1998838(uint64_t a1)
{
  uint64_t v1 = *(void ***)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void ***)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = v1;
    sub_1891624(&v3);
    v1 += 3;
  }
}

void **sub_1998884(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_19988B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = (void **)(i - 24);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = v4;
    sub_1891624(&v5);
  }
}

uint64_t **sub_199890C(uint64_t **result, int *a2, int *a3)
{
  uint64_t v5 = result;
  if (result[2])
  {
    uint64_t v6 = *result;
    uint64_t v7 = result[1];
    *uint64_t result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      long long v8 = (uint64_t *)v6[1];
    }
    else {
      long long v8 = v6;
    }
    long long v14 = result;
    uint64_t v15 = v8;
    uint64_t v16 = v8;
    if (v8)
    {
      uint64_t v15 = sub_18947B4((uint64_t)v8);
      if (a2 != a3)
      {
        uint64_t v9 = a2;
        do
        {
          *((_DWORD *)v8 + 7) = v9[7];
          sub_1998A70(v5, (uint64_t)v8);
          long long v8 = v15;
          uint64_t v16 = v15;
          if (v15) {
            uint64_t v15 = sub_18947B4((uint64_t)v15);
          }
          uint64_t v10 = (int *)*((void *)v9 + 1);
          if (v10)
          {
            do
            {
              a2 = v10;
              uint64_t v10 = *(int **)v10;
            }
            while (v10);
          }
          else
          {
            do
            {
              a2 = (int *)*((void *)v9 + 2);
              BOOL v11 = *(void *)a2 == (void)v9;
              uint64_t v9 = a2;
            }
            while (!v11);
          }
          if (!v8) {
            break;
          }
          uint64_t v9 = a2;
        }
        while (a2 != a3);
      }
    }
    uint64_t result = (uint64_t **)sub_1998AE0((uint64_t)&v14);
  }
  if (a2 != a3)
  {
    do
    {
      uint64_t result = (uint64_t **)sub_1998B38(v5, a2 + 7);
      char v12 = (int *)*((void *)a2 + 1);
      if (v12)
      {
        do
        {
          long long v13 = v12;
          char v12 = *(int **)v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          long long v13 = (int *)*((void *)a2 + 2);
          BOOL v11 = *(void *)v13 == (void)a2;
          a2 = v13;
        }
        while (!v11);
      }
      a2 = v13;
    }
    while (v13 != a3);
  }
  return result;
}

void sub_1998A5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1998AE0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1998A70(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = a1 + 1;
  uint64_t v4 = a1[1];
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v3 = (uint64_t **)v4;
        if (*(_DWORD *)(a2 + 28) >= *((_DWORD *)v4 + 7)) {
          break;
        }
        uint64_t v4 = (uint64_t *)*v4;
        uint64_t v5 = v3;
        if (!*v3) {
          goto LABEL_8;
        }
      }
      uint64_t v4 = (uint64_t *)v4[1];
    }
    while (v4);
    uint64_t v5 = v3 + 1;
  }
  else
  {
    uint64_t v5 = a1 + 1;
  }
LABEL_8:
  sub_11220BC(a1, (uint64_t)v3, v5, (uint64_t *)a2);
  return a2;
}

uint64_t sub_1998AE0(uint64_t a1)
{
  sub_22EFF4(*(void *)a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = (void *)v2[2];
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        uint64_t v3 = (void *)v3[2];
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    sub_22EFF4(*(void *)a1, v2);
  }
  return a1;
}

uint64_t *sub_1998B38(uint64_t **a1, int *a2)
{
  uint64_t v4 = (uint64_t *)operator new(0x20uLL);
  int v5 = *a2;
  *((_DWORD *)v4 + 7) = *a2;
  uint64_t v6 = a1 + 1;
  uint64_t v7 = a1[1];
  if (v7)
  {
    do
    {
      while (1)
      {
        uint64_t v6 = (uint64_t **)v7;
        if (v5 >= *((_DWORD *)v7 + 7)) {
          break;
        }
        uint64_t v7 = (uint64_t *)*v7;
        long long v8 = v6;
        if (!*v6) {
          goto LABEL_8;
        }
      }
      uint64_t v7 = (uint64_t *)v7[1];
    }
    while (v7);
    long long v8 = v6 + 1;
  }
  else
  {
    long long v8 = a1 + 1;
  }
LABEL_8:
  sub_11220BC(a1, (uint64_t)v6, v8, v4);
  return v4;
}

void *sub_1998BC8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = operator new(0x68uLL);
  uint64_t result = sub_1998C14(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_1998C00(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1998C14(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_24E7E28;
  sub_1CB70FC((uint64_t)(a1 + 3));
  return a1;
}

void sub_1998C5C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1998C70(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24E7E28;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1998C90(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24E7E28;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1998CE4(uint64_t a1)
{
}

void sub_1998CF0(uint64_t a1)
{
  sub_1998D40(a1 + 48, *(void **)(a1 + 56));
  uint64_t v2 = (void **)(a1 + 24);
  sub_1998D9C(&v2);
  uint64_t v2 = (void **)a1;
  sub_1998670(&v2);
}

void sub_1998D40(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1998D40(a1, *a2);
    sub_1998D40(a1, a2[1]);
    sub_18985E0((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_1998D9C(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    int v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = v4 - 24;
        sub_22EFF4((uint64_t)(v4 - 24), *((void **)v4 - 2));
        uint64_t v4 = v6;
      }
      while (v6 != v2);
      int v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_1998E28(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24E7E78;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1998E48(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24E7E78;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1998E9C(uint64_t a1)
{
}

void sub_1998EB0(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1998EB0(a1, *a2);
    sub_1998EB0(a1, a2[1]);
    sub_1998F0C((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_1998F0C(uint64_t a1)
{
  sub_22EFF4(a1 + 24, *(void **)(a1 + 32));
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

uint64_t *sub_1998F60(uint64_t **a1, void **a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (uint64_t **)sub_1122028((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    long long v8 = v6;
    sub_199900C((uint64_t)a1, a4, (uint64_t)v10);
    sub_11220BC(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_19990A4((uint64_t)v10, 0);
  }
  return v7;
}

unsigned char *sub_199900C@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 4;
  long long v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_4200(result, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    v6[6] = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }
  v6[8] = 0;
  v6[9] = 0;
  v6[7] = v6 + 8;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_199908C(_Unwind_Exception *a1)
{
  sub_19990A4(v1, 0);
  _Unwind_Resume(a1);
}

void sub_19990A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1998F0C((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void sub_19990FC()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2626510, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_19A00DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_19A20E8()
{
}

void sub_19A20F4()
{
}

void sub_19A2104()
{
}

void sub_19A2110()
{
}

void sub_19A2120()
{
}

void sub_19A212C()
{
}

void sub_19A213C()
{
}

void sub_19A2148()
{
}

void sub_19A2158()
{
}

void sub_19A2164()
{
}

void sub_19A2174()
{
}

void sub_19A2180()
{
}

void sub_19A2190()
{
}

void sub_19A219C()
{
}

void sub_19A21AC()
{
}

void sub_19A21B8()
{
}

void sub_19A21C8()
{
}

void sub_19A21D4()
{
}

void sub_19A21E4()
{
}

void sub_19A21F0()
{
}

void sub_19A2200()
{
}

void sub_19A220C()
{
}

void sub_19A221C()
{
}

void sub_19A2228()
{
}

void sub_19A2238()
{
}

void sub_19A2244()
{
}

void sub_19A2254()
{
}

void sub_19A2260()
{
}

void sub_19A2270()
{
}

void sub_19A227C()
{
}

void sub_19A228C()
{
}

void sub_19A2298()
{
}

void sub_19A22A8()
{
}

void sub_19A22B4()
{
}

void sub_19A22C4()
{
}

void sub_19A22D0()
{
}

void sub_19A22E0()
{
}

void sub_19A22EC()
{
}

void sub_19A22FC()
{
}

void sub_19A2308()
{
}

void sub_19A2318()
{
}

void sub_19A2324()
{
}

void sub_19A2334()
{
}

void sub_19A2340()
{
}

void sub_19A2350()
{
}

void sub_19A235C()
{
}

void sub_19A236C()
{
}

void sub_19A2378()
{
}

void sub_19A2388()
{
}

void sub_19A2394()
{
}

void sub_19A23A4()
{
}

void sub_19A23B0()
{
}

void sub_19A23C0()
{
}

void sub_19A23CC()
{
}

void sub_19A23DC()
{
}

void sub_19A23E8()
{
}

void sub_19A23F8()
{
}

void sub_19A2404()
{
}

void sub_19A2414()
{
}

void sub_19A2420()
{
}

void sub_19A2430()
{
}

void sub_19A243C()
{
}

void sub_19A244C()
{
}

void sub_19A2458()
{
}

void sub_19A2468()
{
}

void sub_19A2474()
{
}

void sub_19A2484()
{
}

void sub_19A2490()
{
}

void sub_19A24A0()
{
}

void sub_19A24AC()
{
}

void sub_19A24BC()
{
}

void sub_19A24C8()
{
}

void sub_19A24D8()
{
}

void sub_19A24E4()
{
}

void sub_19A24F4()
{
}

void sub_19A2500()
{
}

void sub_19A2510()
{
}

void sub_19A251C()
{
}

void sub_19A252C()
{
}

void sub_19A2538()
{
}

void sub_19A2548()
{
}

void sub_19A2554()
{
}

void sub_19A2564()
{
}

void sub_19A2570()
{
}

void sub_19A2580()
{
}

void sub_19A258C()
{
}

void sub_19A259C()
{
}

void sub_19A25A8()
{
}

void sub_19A25B8()
{
}

void sub_19A25C4()
{
}

void sub_19A25D4()
{
}

void sub_19A25E0()
{
}

void sub_19A25F0()
{
}

void sub_19A25FC()
{
}

void sub_19A260C()
{
}

void sub_19A2618()
{
}

void sub_19A2628()
{
}

void sub_19A2634()
{
}

void sub_19A2644()
{
}

void sub_19A2650()
{
}

void sub_19A2660()
{
}

void sub_19A266C()
{
}

void sub_19A267C()
{
}

void sub_19A2688()
{
}

void sub_19A2698()
{
}

void sub_19A26A4()
{
}

void sub_19A26B4()
{
}

void sub_19A26C0()
{
}

void sub_19A26D0()
{
}

void sub_19A26DC()
{
}

void sub_19A26EC()
{
}

void sub_19A26F8()
{
}

void sub_19A2708()
{
}

void sub_19A2714()
{
}

void sub_19A2724()
{
}

void sub_19A2730()
{
}

void sub_19A2740()
{
}

void sub_19A274C()
{
}

void sub_19A275C()
{
}

void sub_19A2768()
{
}

void sub_19A2778()
{
}

void sub_19A2784()
{
}

void sub_19A2794()
{
}

void sub_19A27A0()
{
}

void sub_19A27B0()
{
}

void sub_19A27BC()
{
}

void sub_19A27CC()
{
}

void sub_19A27D8()
{
}

void sub_19A27E8()
{
}

void sub_19A27F4()
{
}

void sub_19A2804()
{
}

void sub_19A2810()
{
}

void sub_19A2820()
{
}

void sub_19A282C()
{
}

void sub_19A283C()
{
}

void sub_19A2848()
{
}

void sub_19A2858()
{
}

void sub_19A2864()
{
}

void sub_19A2874()
{
}

void sub_19A2880()
{
}

void sub_19A2890()
{
}

void sub_19A289C()
{
}

void sub_19A28AC()
{
}

void sub_19A28B8()
{
}

void sub_19A28C8()
{
}

void sub_19A28D4()
{
}

void sub_19A28E4()
{
}

void sub_19A28F0()
{
}

void sub_19A2900()
{
}

void sub_19A290C()
{
}

void sub_19A291C()
{
}

void sub_19A2928()
{
}

void sub_19A2938()
{
}

void sub_19A2944()
{
}

void sub_19A2954()
{
}

void sub_19A2960()
{
}

void sub_19A2970()
{
}

void sub_19A297C()
{
}

void sub_19A298C()
{
}

void sub_19A2998()
{
}

void sub_19A29A8()
{
}

void sub_19A29B4()
{
}

void sub_19A29C4()
{
}

void sub_19A29D0()
{
}

void sub_19A29E0()
{
}

void sub_19A29EC()
{
}

void sub_19A29FC()
{
}

void sub_19A2A08()
{
}

void sub_19A2A18()
{
}

void sub_19A2A24()
{
}

void sub_19A2A34()
{
}

void sub_19A2A40()
{
}

void sub_19A2A50()
{
}

void sub_19A2A5C()
{
}

void sub_19A2A6C()
{
}

void sub_19A2A78()
{
}

void sub_19A2A88()
{
}

void sub_19A2A94()
{
}

void sub_19A2AA4()
{
}

void sub_19A2AB0()
{
}

void sub_19A2AC0()
{
}

void sub_19A2ACC()
{
}

void sub_19A2ADC()
{
}

void sub_19A2AE8()
{
}

void sub_19A2AF8()
{
}

void sub_19A2B04()
{
}

void sub_19A2B14()
{
}

void sub_19A2B20()
{
}

void sub_19A2B30()
{
}

void sub_19A2B3C()
{
}

void sub_19A2B4C()
{
}

void sub_19A2B58()
{
}

void sub_19A2B68()
{
}

void sub_19A2B74()
{
}

void sub_19A2B84()
{
}

void sub_19A2B90()
{
}

void sub_19A2BA0()
{
}

void sub_19A2BAC()
{
}

void sub_19A2BBC()
{
}

void sub_19A2BC8()
{
}

void sub_19A2BD8()
{
}

void sub_19A2BE4()
{
}

void sub_19A2BF4()
{
}

void sub_19A2C00()
{
}

void sub_19A2C10()
{
}

void sub_19A2C1C()
{
}

void sub_19A2C2C()
{
}

void sub_19A2C38()
{
}

void sub_19A2C48()
{
}

void sub_19A2C54()
{
}

void sub_19A2C64()
{
}

void sub_19A2C70()
{
}

void sub_19A2C80()
{
}

void sub_19A2C8C()
{
}

void sub_19A2C9C()
{
}

void sub_19A2CA8()
{
}

void sub_19A2CB8()
{
}

void sub_19A2CC4()
{
}

void sub_19A2CD4()
{
}

void sub_19A2CE0()
{
}

void sub_19A2CF0()
{
}

void sub_19A2CFC()
{
}

void sub_19A2D0C()
{
}

void sub_19A2D18()
{
}

void sub_19A2D28()
{
}

void sub_19A2D34()
{
}

void sub_19A2D44()
{
}

void sub_19A2D50()
{
}

void sub_19A2D60()
{
}

void sub_19A2D6C()
{
}

void sub_19A2D7C()
{
}

void sub_19A2D88()
{
}

void sub_19A2D98()
{
}

void sub_19A2DA4()
{
}

void sub_19A2DB4()
{
}

void sub_19A2DC0()
{
}

void sub_19A2DD0()
{
}

void sub_19A2DDC()
{
}

void sub_19A2DEC()
{
}

void sub_19A2DF8()
{
}

void sub_19A2E08()
{
}

void sub_19A2E14()
{
}

void sub_19A2E24()
{
}

void sub_19A2E30()
{
}

void sub_19A2E40()
{
}

void sub_19A2E4C()
{
}

void sub_19A2E5C()
{
}

void sub_19A2E68()
{
}

void sub_19A2E78()
{
}

void sub_19A2E84()
{
}

void sub_19A2E94()
{
}

void sub_19A2EA0()
{
}

void sub_19A2EB0()
{
}

void sub_19A2EBC()
{
}

void sub_19A2ECC()
{
}

void sub_19A2ED8()
{
}

void sub_19A2EE8()
{
}

void sub_19A2EF4()
{
}

void sub_19A2F04()
{
}

void sub_19A2F10()
{
}

void sub_19A2F20()
{
}

void sub_19A2F2C()
{
}

void sub_19A2F3C()
{
}

void sub_19A2F48()
{
}

void sub_19A2F58()
{
}

void sub_19A2F64()
{
}

void sub_19A2F74()
{
}

void sub_19A2F80()
{
}

void sub_19A2F90()
{
}

void sub_19A2F9C()
{
}

void sub_19A2FAC()
{
}

void sub_19A2FB8()
{
}

void sub_19A2FC8()
{
}

void sub_19A2FD4()
{
}

void sub_19A2FE4()
{
}

void sub_19A2FF0()
{
}

void sub_19A3000()
{
}

void sub_19A300C()
{
}

void sub_19A301C()
{
}

void sub_19A3028()
{
}

void sub_19A3034()
{
}

void sub_19A3040()
{
}

void sub_19A304C()
{
}

void sub_19A305C()
{
}

void sub_19A3068()
{
}

void sub_19A3078()
{
}

void sub_19A3084()
{
}

void sub_19A3094()
{
}

void sub_19A30A0()
{
}

void sub_19A30B0()
{
}

void sub_19A30BC()
{
}

void sub_19A30CC()
{
}

void sub_19A30D8()
{
}

void sub_19A30E8()
{
}

void sub_19A30F4()
{
}

void sub_19A3104()
{
}

void sub_19A3110()
{
}

void sub_19A3120()
{
}

void sub_19A312C()
{
}

void sub_19A313C()
{
}

void sub_19A3148()
{
}

void sub_19A3158()
{
}

void sub_19A3164()
{
}

void sub_19A3174()
{
}

void sub_19A3180()
{
}

void sub_19A3190()
{
}

void sub_19A319C()
{
}

void sub_19A31AC()
{
}

void sub_19A31B8()
{
}

void sub_19A31C8()
{
}

void sub_19A31D4()
{
}

void sub_19A31E4()
{
}

void sub_19A31F0()
{
}

void sub_19A3200()
{
}

void sub_19A320C()
{
}

void sub_19A321C()
{
}

void sub_19A3228()
{
}

void sub_19A3238()
{
}

void sub_19A3244()
{
}

void sub_19A3254()
{
}

void sub_19A3260()
{
}

void sub_19A3270()
{
}

void sub_19A327C()
{
}

void sub_19A328C()
{
}

void sub_19A3298()
{
}

void sub_19A32A8()
{
}

void sub_19A32B4()
{
}

void sub_19A32C4()
{
}

void sub_19A32D0()
{
}

void sub_19A32E0()
{
}

void sub_19A32EC()
{
}

void sub_19A32FC()
{
}

void sub_19A3308()
{
}

void sub_19A3318()
{
}

void sub_19A3324()
{
}

void sub_19A3334()
{
}

void sub_19A3340()
{
}

void sub_19A3350()
{
}

void sub_19A335C()
{
}

void sub_19A336C()
{
}

void sub_19A3378()
{
}

void sub_19A3388()
{
}

void sub_19A3394()
{
}

void sub_19A33A4()
{
}

void sub_19A33B0()
{
}

void sub_19A33C0()
{
}

void sub_19A33CC()
{
}

void sub_19A33DC()
{
}

void sub_19A33E8()
{
}

void sub_19A33F8()
{
}

void sub_19A3404()
{
}

void sub_19A3414()
{
}

void sub_19A3420()
{
}

void sub_19A3430()
{
}

void sub_19A343C()
{
}

void sub_19A344C()
{
}

void sub_19A3458()
{
}

void sub_19A3468()
{
}

void sub_19A3474()
{
}

void sub_19A3484()
{
}

void sub_19A3490()
{
}

void sub_19A34A0()
{
}

void sub_19A34AC()
{
}

void sub_19A34BC()
{
}

void sub_19A34C8()
{
}

void sub_19A34D8()
{
}

void sub_19A34E4()
{
}

void sub_19A34F4()
{
}

void sub_19A3500()
{
}

void sub_19A3510()
{
}

void sub_19A351C()
{
}

void sub_19A352C()
{
}

void sub_19A3538()
{
}

void sub_19A3548()
{
}

void sub_19A3554()
{
}

void sub_19A3564()
{
}

void sub_19A3570()
{
}

void sub_19A3580()
{
}

void sub_19A358C()
{
}

void sub_19A359C()
{
}

void sub_19A35A8()
{
}

void sub_19A35B8()
{
}

void sub_19A35C4()
{
}

void sub_19A35D4()
{
}

void sub_19A35E0()
{
}

void sub_19A35F0()
{
}

void sub_19A35FC()
{
}

void sub_19A360C()
{
}

void sub_19A3618()
{
}

void sub_19A3628()
{
}

void sub_19A3634()
{
}

void sub_19A3644()
{
}

void sub_19A3650()
{
}

void sub_19A3660()
{
}

void sub_19A366C()
{
}

void sub_19A367C()
{
}

void sub_19A3688()
{
}

void sub_19A3698()
{
}

void sub_19A36A4()
{
}

void sub_19A36B4()
{
}

void sub_19A36C0()
{
}

void sub_19A36D0()
{
}

void sub_19A36DC()
{
}

void sub_19A36EC()
{
}

void sub_19A36F8()
{
}

void sub_19A3708()
{
}

void sub_19A3714()
{
}

void sub_19A3724()
{
}

void sub_19A3730()
{
}

void sub_19A3740()
{
}

void sub_19A374C()
{
}

void sub_19A375C()
{
}

void sub_19A3768()
{
}

void sub_19A3778()
{
}

void sub_19A3784()
{
}

void sub_19A3794()
{
}

void sub_19A37A0()
{
}

void sub_19A37B0()
{
}

void sub_19A37BC()
{
}

void sub_19A37CC()
{
}

void sub_19A37D8()
{
}

void sub_19A37E8()
{
}

void sub_19A37F4()
{
}

void sub_19A3804()
{
}

void sub_19A3810()
{
}

void sub_19A3820()
{
}

void sub_19A382C()
{
}

void sub_19A383C()
{
}

void sub_19A3848()
{
}

void sub_19A3858()
{
}

void sub_19A3864()
{
}

void sub_19A3874()
{
}

void sub_19A3880()
{
}

void sub_19A3890()
{
}

void sub_19A389C()
{
}

void sub_19A38AC()
{
}

void sub_19A38B8()
{
}

void sub_19A38C8()
{
}

void sub_19A38D4()
{
}

void sub_19A38E4()
{
}

void sub_19A38F0()
{
}

void sub_19A3900()
{
}

void sub_19A390C()
{
}

void sub_19A391C()
{
}

void sub_19A3928()
{
}

void sub_19A3938()
{
}

void sub_19A3944()
{
}

void sub_19A3954()
{
}

void sub_19A3960()
{
}

void sub_19A3970()
{
}

void sub_19A397C()
{
}

void sub_19A398C()
{
}

void sub_19A3998()
{
}

void sub_19A39A8()
{
}

void sub_19A39B4()
{
}

void sub_19A39C4()
{
}

void sub_19A39D0()
{
}

void sub_19A39E0()
{
}

void sub_19A39EC()
{
}

void sub_19A39FC()
{
}

void sub_19A3A08()
{
}

void sub_19A3A18()
{
}

void sub_19A3A24()
{
}

void sub_19A3A34()
{
}

void sub_19A3A40()
{
}

void sub_19A3A50()
{
}

void sub_19A3A5C()
{
}

void sub_19A3A6C()
{
}

void sub_19A3A78()
{
}

void sub_19A3A88()
{
}

void sub_19A3A94()
{
}

void sub_19A3AA4()
{
}

void sub_19A3AB0()
{
}

void sub_19A3AC0()
{
}

void sub_19A3ACC()
{
}

void sub_19A3ADC()
{
}

void sub_19A3AE8()
{
}

void sub_19A3AF8()
{
}

void sub_19A3B04()
{
}

void sub_19A3B14()
{
}

void sub_19A3B20()
{
}

void sub_19A3B30()
{
}

void sub_19A3B3C()
{
}

void sub_19A3B4C()
{
}

void sub_19A3B58()
{
}

void sub_19A3B68()
{
}

void sub_19A3B74()
{
}

void sub_19A3B80()
{
}

void sub_19A3B94()
{
}

void sub_19A3BA8()
{
}

void sub_19A3BB0()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_26264C8 = 0;
  qword_26264D0 = 0;
  qword_26264D8 = 0;
  qword_26264C8 = (uint64_t)operator new(0x18uLL);
  qword_26264D0 = qword_26264C8;
  qword_26264D8 = qword_26264C8 + 24;
  qword_26264D0 = (uint64_t)sub_18914E4((uint64_t)&qword_26264D8, (long long *)__p, v4, (char *)qword_26264C8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_26264E0 = 0;
  qword_26264E8 = 0;
  qword_26264F0 = 0;
  qword_26264E0 = (uint64_t)operator new(0x18uLL);
  qword_26264E8 = qword_26264E0;
  qword_26264F0 = qword_26264E0 + 24;
  qword_26264E8 = (uint64_t)sub_18914E4((uint64_t)&qword_26264F0, (long long *)__p, v4, (char *)qword_26264E0);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_26264F8 = 0;
  qword_2626500 = 0;
  qword_2626508 = 0;
  qword_26264F8 = (uint64_t)operator new(0x18uLL);
  qword_2626500 = qword_26264F8;
  qword_2626508 = qword_26264F8 + 24;
  qword_2626500 = (uint64_t)sub_18914E4((uint64_t)&qword_2626508, (long long *)__p, v4, (char *)qword_26264F8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_19990FC();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_2626528, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_2626550, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_19A426C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

void sub_19A441C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  int v4 = *(uint64_t (****)())(a1 + 56);
  if (!v4) {
    int v4 = &off_253C230;
  }
  int v5 = *((_DWORD *)v4 + 12);
  switch(v5)
  {
    case 0:
      sub_1906174((const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), 58, (uint64_t)&v38);
      char v26 = *(uint64_t (****)())(a1 + 56);
      if (!v26) {
        char v26 = &off_253C230;
      }
      unint64_t v27 = (unint64_t)v26[3] & 0xFFFFFFFFFFFFFFFELL;
      int v28 = *(char *)(v27 + 23);
      if (v28 >= 0) {
        int v29 = (const std::string::value_type *)v27;
      }
      else {
        int v29 = *(const std::string::value_type **)v27;
      }
      if (v28 >= 0) {
        std::string::size_type v30 = *(unsigned __int8 *)(v27 + 23);
      }
      else {
        std::string::size_type v30 = *(void *)(v27 + 8);
      }
      int v31 = std::string::append(&v38, v29, v30);
      *a2 = *v31;
      v31->__r_.__value_.__l.__size_ = 0;
      v31->__r_.__value_.__r.__words[2] = 0;
      v31->__r_.__value_.__r.__words[0] = 0;
      goto LABEL_59;
    case 2:
      sub_1906174((const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), 58, (uint64_t)&v34);
      uint64_t v10 = std::string::append(&v34, "[", 1uLL);
      long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
      v35.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v11;
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      v10->__r_.__value_.__r.__words[0] = 0;
      char v12 = *(uint64_t (****)())(a1 + 56);
      if (!v12) {
        char v12 = &off_253C230;
      }
      int v13 = (double *)v12[4];
      if (!v13) {
        int v13 = (double *)&off_253C208;
      }
      std::to_string(&v33, v13[3]);
      if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v14 = &v33;
      }
      else {
        int v14 = (std::string *)v33.__r_.__value_.__r.__words[0];
      }
      if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v33.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v33.__r_.__value_.__l.__size_;
      }
      char v16 = std::string::append(&v35, (const std::string::value_type *)v14, size);
      long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
      v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
      v16->__r_.__value_.__l.__size_ = 0;
      v16->__r_.__value_.__r.__words[2] = 0;
      v16->__r_.__value_.__r.__words[0] = 0;
      std::string::push_back(&v36, 44);
      std::string v37 = v36;
      memset(&v36, 0, sizeof(v36));
      char v18 = *(uint64_t (****)())(a1 + 56);
      if (!v18) {
        char v18 = &off_253C230;
      }
      uint64_t v19 = (double *)v18[4];
      if (!v19) {
        uint64_t v19 = (double *)&off_253C208;
      }
      std::to_string(&v32, v19[4]);
      if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        long long v20 = &v32;
      }
      else {
        long long v20 = (std::string *)v32.__r_.__value_.__r.__words[0];
      }
      if ((v32.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v21 = HIBYTE(v32.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v21 = v32.__r_.__value_.__l.__size_;
      }
      long long v22 = std::string::append(&v37, (const std::string::value_type *)v20, v21);
      long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
      v38.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v23;
      v22->__r_.__value_.__l.__size_ = 0;
      v22->__r_.__value_.__r.__words[2] = 0;
      v22->__r_.__value_.__r.__words[0] = 0;
      int v24 = std::string::append(&v38, "]", 1uLL);
      *a2 = *v24;
      v24->__r_.__value_.__l.__size_ = 0;
      v24->__r_.__value_.__r.__words[2] = 0;
      v24->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v38.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v32.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v37.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v36.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v33.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v35.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0)
      {
        int v25 = (void *)v34.__r_.__value_.__r.__words[0];
LABEL_61:
        operator delete(v25);
      }
      break;
    case 1:
      sub_1906174((const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), 58, (uint64_t)&v38);
      char v6 = *(uint64_t (****)())(a1 + 56);
      if (!v6) {
        char v6 = &off_253C230;
      }
      std::to_string(&v37, *((double *)v6 + 5));
      if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v7 = &v37;
      }
      else {
        int v7 = (std::string *)v37.__r_.__value_.__r.__words[0];
      }
      if ((v37.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v8 = HIBYTE(v37.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v8 = v37.__r_.__value_.__l.__size_;
      }
      int v9 = std::string::append(&v38, (const std::string::value_type *)v7, v8);
      *a2 = *v9;
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      v9->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v37.__r_.__value_.__l.__data_);
      }
LABEL_59:
      if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
      int v25 = (void *)v38.__r_.__value_.__r.__words[0];
      goto LABEL_61;
    default:
      a2->__r_.__value_.__r.__words[0] = 0;
      a2->__r_.__value_.__l.__size_ = 0;
      a2->__r_.__value_.__r.__words[2] = 0;
      break;
  }
}

void sub_19A4748(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 57) < 0) {
    operator delete(*(void **)(v40 - 80));
  }
  _Unwind_Resume(exception_object);
}

char *sub_19A4824@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (*((_DWORD *)result + 10) != 1) {
    goto LABEL_6;
  }
  char v3 = (uint64_t (***)())*((void *)result + 3);
  if (!v3) {
    char v3 = &off_2530AE8;
  }
  if (*((_DWORD *)v3 + 12) == 1)
  {
    uint64_t result = sub_19A83FC((char *)&v4, (long long *)((unint64_t)v3[3] & 0xFFFFFFFFFFFFFFFELL), (long long *)((unint64_t)v3[4] & 0xFFFFFFFFFFFFFFFELL));
    *(_OWORD *)a2 = v4;
    *(void *)(a2 + 16) = v5;
    *(_OWORD *)(a2 + 24) = v6;
    *(void *)(a2 + 40) = v7;
    *(unsigned char *)(a2 + 48) = 1;
  }
  else
  {
LABEL_6:
    *(unsigned char *)a2 = 0;
    *(unsigned char *)(a2 + 48) = 0;
  }
  return result;
}

uint64_t sub_19A48C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)a2 = a2 + 8;
  if (*(void *)(a1 + 32)) {
    char v3 = *(char **)(a1 + 32);
  }
  else {
    char v3 = (char *)&off_2530B58;
  }
  sub_19A4824(v3, (uint64_t)v5);
  if (v6) {
    sub_2F0A4((uint64_t **)a2, v5, (uint64_t)v5);
  }
  return sub_19A8494((uint64_t)v5);
}

void sub_19A4930(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19A8494((uint64_t)va);
  sub_2F020(v2, *(char **)(v2 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_19A4958@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)a2 = a2 + 8;
  uint64_t v3 = *(void *)(result + 40);
  if (v3) {
    uint64_t v4 = v3 + 8;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(int *)(result + 32);
  if (v5)
  {
    uint64_t v6 = 8 * v5;
    do
    {
      if (*(void *)(*(void *)v4 + 40)) {
        uint64_t v7 = *(char **)(*(void *)v4 + 40);
      }
      else {
        uint64_t v7 = (char *)&off_2530B58;
      }
      sub_19A4824(v7, (uint64_t)v8);
      if (v9) {
        sub_2F0A4((uint64_t **)a2, v8, (uint64_t)v8);
      }
      uint64_t result = sub_19A8494((uint64_t)v8);
      v4 += 8;
      v6 -= 8;
    }
    while (v6);
  }
  return result;
}

void sub_19A49FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19A8494((uint64_t)va);
  sub_2F020(v2, *(char **)(v2 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_19A4A24@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  int v2 = *(_DWORD *)(result + 72);
  if (v2 == 3)
  {
    if (*(void *)(result + 40)) {
      uint64_t v4 = *(uint64_t (****)())(result + 40);
    }
    else {
      uint64_t v4 = &off_2530CF0;
    }
    return sub_19A4958((uint64_t)v4, (uint64_t)a2);
  }
  else if (v2 == 1)
  {
    if (*(void *)(result + 24)) {
      uint64_t v3 = *(uint64_t (****)())(result + 24);
    }
    else {
      uint64_t v3 = &off_2530B88;
    }
    return sub_19A48C0((uint64_t)v3, (uint64_t)a2);
  }
  else
  {
    a2[2] = 0;
    a2[1] = 0;
    *a2 = a2 + 1;
  }
  return result;
}

uint64_t sub_19A4A7C@<X0>(uint64_t result@<X0>, void *a2@<X1>, std::string *a3@<X8>)
{
  if (*(unsigned char *)(result + 48))
  {
    uint64_t v5 = result;
    if (*(void *)(result + 32)) {
      uint64_t v6 = *(char **)(result + 32);
    }
    else {
      uint64_t v6 = (char *)&off_2530B58;
    }
    sub_19A4824(v6, (uint64_t)__src);
    if (!v45) {
      goto LABEL_18;
    }
    std::string::size_type size = HIBYTE(__src[0].__r_.__value_.__r.__words[2]);
    if ((__src[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __src[0].__r_.__value_.__l.__size_;
    }
    if (size != 13) {
      goto LABEL_15;
    }
    std::string::size_type v8 = (std::string *)__src[0].__r_.__value_.__r.__words[0];
    if ((__src[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v8 = __src;
    }
    std::string::size_type v9 = v8->__r_.__value_.__r.__words[0];
    uint64_t v10 = *(std::string::size_type *)((char *)v8->__r_.__value_.__r.__words + 5);
    if (v9 == 0x5F444554414C4552 && v10 == 0x444E4152425F4445)
    {
LABEL_18:
      a3->__r_.__value_.__s.__data_[0] = 0;
      a3[6].__r_.__value_.__s.__data_[0] = 0;
    }
    else
    {
LABEL_15:
      if (SHIBYTE(__src[0].__r_.__value_.__r.__words[2]) < 0) {
        sub_4200(&__dst, __src[0].__r_.__value_.__l.__data_, __src[0].__r_.__value_.__l.__size_);
      }
      else {
        std::string __dst = __src[0];
      }
      if (sub_13A8C(a2, (uint64_t)&__dst))
      {
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          sub_4200(v47, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
        }
        else {
          *(std::string *)int v47 = __dst;
        }
        sub_19764DC((uint64_t)v32, (uint64_t)v47, 1);
        if ((v47[23] & 0x80000000) != 0) {
          operator delete(*(void **)v47);
        }
        if ((*(_DWORD *)(v5 + 16) & 0x80) != 0) {
          int v17 = *(_DWORD *)(v5 + 52);
        }
        else {
          int v17 = -1;
        }
        LODWORD(v23) = v17;
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        {
          sub_4200(&__p, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
          int v17 = v23;
        }
        else
        {
          std::string __p = __dst;
        }
        *(_DWORD *)int v47 = v17;
        *(std::string *)&v47[8] = __p;
        memset(&__p, 0, sizeof(__p));
        uint64_t v39 = 0;
        uint64_t v40 = 0;
        std::string v38 = 0;
        *(void *)&v21[0] = &v38;
        BYTE8(v21[0]) = 0;
        std::string v38 = (char *)operator new(0x20uLL);
        uint64_t v39 = (uint64_t)v38;
        uint64_t v40 = v38 + 32;
        uint64_t v39 = sub_19A84E0((uint64_t)&v40, (uint64_t)v47, (uint64_t)&v48, (uint64_t)v38);
        if ((v47[31] & 0x80000000) != 0) {
          operator delete(*(void **)&v47[8]);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        sub_19A86D4((uint64_t)&v23, (uint64_t)&unk_2173C1A, (uint64_t)v32, (uint64_t *)&v38);
        uint64_t v18 = v23;
        std::string::size_type v19 = __p.__r_.__value_.__r.__words[0];
        uint64_t v23 = 0;
        __p.__r_.__value_.__r.__words[0] = 0;
        *(void *)int v47 = v18;
        *(void *)&v47[8] = v19;
        *(_OWORD *)&v47[16] = *(_OWORD *)&__p.__r_.__value_.__r.__words[1];
        int v48 = v25;
        if (__p.__r_.__value_.__r.__words[2])
        {
          std::string::size_type v20 = *(void *)(__p.__r_.__value_.__l.__size_ + 8);
          if ((v19 & (v19 - 1)) != 0)
          {
            if (v20 >= v19) {
              v20 %= v19;
            }
          }
          else
          {
            v20 &= v19 - 1;
          }
          *(void *)(v18 + 8 * v20) = &v47[16];
          *(_OWORD *)&__p.__r_.__value_.__r.__words[1] = 0uLL;
        }
        long long v49 = v26;
        uint64_t v50 = v27;
        uint64_t v27 = 0;
        long long v26 = 0uLL;
        char v51 = 1;
        sub_19A8888(a3, (uint64_t)v47);
        sub_19A898C((uint64_t)v47);
        *(void *)&v21[0] = &v26;
        sub_19A8630((void ***)v21);
        sub_1898170((uint64_t)&v23);
        *(void *)int v47 = &v38;
        sub_19A8630((void ***)v47);
        sub_1898170((uint64_t)v32);
      }
      else
      {
        sub_1505A94((uint64_t)&v38, 0, 0);
        int v42 = 0;
        LODWORD(v40) = v40 | 9;
        char v12 = (uint64_t *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
        if (v39) {
          char v12 = (uint64_t *)*v12;
        }
        sub_19AA140(&v41, "true", v12);
        sub_1506560((uint64_t)v32, 0, 0);
        int v37 = 2;
        v34 |= 5u;
        int v13 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
        if (v33) {
          int v13 = (uint64_t *)*v13;
        }
        sub_1881DF4(&v35, (long long *)&__dst, v13);
        v34 |= 2u;
        int v14 = v36;
        if (!v36)
        {
          int v15 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
          if (v33) {
            int v15 = (void *)*v15;
          }
          int v14 = (std::string *)sub_150E7D4((uint64_t)v15);
          std::string v36 = v14;
        }
        sub_1506428(v14, (uint64_t)&v38);
        if ((*(_DWORD *)(v5 + 16) & 0x80) != 0) {
          int v16 = *(_DWORD *)(v5 + 52);
        }
        else {
          int v16 = -1;
        }
        LODWORD(v23) = v16;
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        {
          sub_4200(&__p, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
          int v16 = v23;
        }
        else
        {
          std::string __p = __dst;
        }
        *(_DWORD *)int v47 = v16;
        *(std::string *)&v47[8] = __p;
        memset(&__p, 0, sizeof(__p));
        uint64_t v30 = 0;
        int v31 = 0;
        int v29 = 0;
        *(void *)&v21[0] = &v29;
        BYTE8(v21[0]) = 0;
        int v29 = (char *)operator new(0x20uLL);
        uint64_t v30 = (uint64_t)v29;
        int v31 = v29 + 32;
        uint64_t v30 = sub_19A84E0((uint64_t)&v31, (uint64_t)v47, (uint64_t)&v48, (uint64_t)v29);
        if ((v47[31] & 0x80000000) != 0) {
          operator delete(*(void **)&v47[8]);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        sub_1506770(&v23);
        char v28 = 1;
        memset(v21, 0, sizeof(v21));
        int v22 = 1065353216;
        sub_19A8AF0((std::string *)v47, (uint64_t)&v23, (uint64_t *)v21, (uint64_t *)&v29);
        sub_19A89D8(a3, (uint64_t)v47);
        a3[6].__r_.__value_.__s.__data_[0] = 1;
        char v46 = (void **)&v54;
        sub_19A8630(&v46);
        sub_1898170((uint64_t)&v53);
        if (v52) {
          sub_1506848((uint64_t)v47);
        }
        sub_1898170((uint64_t)v21);
        if (v28) {
          sub_1506848((uint64_t)&v23);
        }
        *(void *)int v47 = &v29;
        sub_19A8630((void ***)v47);
        sub_1506848((uint64_t)v32);
        sub_1505CE0((uint64_t)&v38);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
    }
    return sub_19A8494((uint64_t)__src);
  }
  else
  {
    a3->__r_.__value_.__s.__data_[0] = 0;
    a3[6].__r_.__value_.__s.__data_[0] = 0;
  }
  return result;
}

void sub_19A501C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *__p,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,char a56)
{
  if (a54 < 0) {
    operator delete(__p);
  }
  sub_19A8494((uint64_t)&a56);
  _Unwind_Resume(a1);
}

uint64_t sub_19A5184(uint64_t a1)
{
  uint64_t v3 = (void **)(a1 + 40);
  sub_19A8630(&v3);
  return sub_1898170(a1);
}

void sub_19A51C4(uint64_t a1@<X0>, void *a2@<X1>, std::string *a3@<X8>)
{
  uint64_t v79 = 0;
  uint64_t v80 = 0;
  uint64_t v81 = 0;
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5) {
    uint64_t v6 = (uint64_t *)(v5 + 8);
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(int *)(a1 + 32);
  if (v7)
  {
    uint64_t v8 = 8 * v7;
    do
    {
      uint64_t v9 = *v6;
      if (*(unsigned char *)(*v6 + 48))
      {
        uint64_t v10 = *(uint64_t (****)())(v9 + 40);
        if (!v10) {
          uint64_t v10 = &off_2530B58;
        }
        if (*((_DWORD *)v10 + 10) == 1)
        {
          long long v11 = (uint64_t (***)())v10[3];
          if (!v11) {
            long long v11 = &off_2530AE8;
          }
          if (*((_DWORD *)v11 + 12) == 1) {
            sub_19A5FF0(&v79, v9);
          }
        }
      }
      ++v6;
      v8 -= 8;
    }
    while (v8);
    uint64_t v12 = v79;
    uint64_t v13 = v80;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  if (v13 - v12 == 64)
  {
    if (*(void *)(v12 + 40)) {
      int v14 = *(char **)(v12 + 40);
    }
    else {
      int v14 = (char *)&off_2530B58;
    }
    sub_19A4824(v14, (uint64_t)&v75);
    if (v78)
    {
      if (SBYTE7(v76) < 0)
      {
        sub_4200(&__dst, (void *)v75, *((unint64_t *)&v75 + 1));
      }
      else
      {
        *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v75;
        __dst.__r_.__value_.__r.__words[2] = v76;
      }
      if (sub_13A8C(a2, (uint64_t)&__dst))
      {
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          sub_4200(&v83, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
        }
        else {
          std::string v83 = __dst;
        }
        sub_19764DC((uint64_t)&v62, (uint64_t)&v83, 1);
        if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v83.__r_.__value_.__l.__data_);
        }
        if (v80 == v79) {
          sub_66748();
        }
        if ((*(unsigned char *)(v79 + 16) & 0x40) != 0) {
          int v48 = *(_DWORD *)(v79 + 60);
        }
        else {
          int v48 = -1;
        }
        *(_DWORD *)int v57 = v48;
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        {
          sub_4200(&v57[8], __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
          int v48 = *(_DWORD *)v57;
        }
        else
        {
          *(std::string *)&v57[8] = __dst;
        }
        LODWORD(v83.__r_.__value_.__l.__data_) = v48;
        *(_OWORD *)&v83.__r_.__value_.__r.__words[1] = *(_OWORD *)&v57[8];
        uint64_t v84 = *(char **)&v57[24];
        memset(&v57[8], 0, 24);
        unint64_t v70 = 0;
        unint64_t v71 = 0;
        int v69 = 0;
        *(void *)&long long v54 = &v69;
        BYTE8(v54) = 0;
        int v69 = (char *)operator new(0x20uLL);
        unint64_t v70 = (unint64_t)v69;
        unint64_t v71 = (unint64_t)(v69 + 32);
        unint64_t v70 = sub_19A84E0((uint64_t)&v71, (uint64_t)&v83, (uint64_t)&v85, (uint64_t)v69);
        if (SHIBYTE(v84) < 0) {
          operator delete((void *)v83.__r_.__value_.__l.__size_);
        }
        if ((v57[31] & 0x80000000) != 0) {
          operator delete(*(void **)&v57[8]);
        }
        sub_19A86D4((uint64_t)v57, (uint64_t)&unk_2173C1A, (uint64_t)&v62, (uint64_t *)&v69);
        std::string::size_type v49 = *(void *)v57;
        std::string::size_type v50 = *(void *)&v57[8];
        *(void *)int v57 = 0;
        *(void *)&v57[8] = 0;
        v83.__r_.__value_.__r.__words[0] = v49;
        v83.__r_.__value_.__l.__size_ = v50;
        v83.__r_.__value_.__r.__words[2] = *(void *)&v57[16];
        uint64_t v84 = *(char **)&v57[24];
        LODWORD(v85) = v58;
        if (*(void *)&v57[24])
        {
          std::string::size_type v51 = *(void *)(*(void *)&v57[16] + 8);
          if ((v50 & (v50 - 1)) != 0)
          {
            if (v51 >= v50) {
              v51 %= v50;
            }
          }
          else
          {
            v51 &= v50 - 1;
          }
          *(void *)(v49 + 8 * v51) = (char *)&v83.__r_.__value_.__l + 16;
          *(void *)&v57[16] = 0;
          *(void *)&v57[24] = 0;
        }
        long long v86 = v59;
        uint64_t v87 = v60;
        long long v60 = 0;
        long long v59 = 0uLL;
        LOBYTE(v88) = 1;
        sub_19A8888(a3, (uint64_t)&v83);
        sub_19A898C((uint64_t)&v83);
        *(void *)&long long v54 = &v59;
        sub_19A8630((void ***)&v54);
        sub_1898170((uint64_t)v57);
        v83.__r_.__value_.__r.__words[0] = (std::string::size_type)&v69;
        sub_19A8630((void ***)&v83);
        sub_1898170((uint64_t)&v62);
      }
      else
      {
        sub_1505A94((uint64_t)&v69, 0, 0);
        int v73 = 0;
        LODWORD(v71) = v71 | 9;
        int v43 = (uint64_t *)(v70 & 0xFFFFFFFFFFFFFFFCLL);
        if (v70) {
          int v43 = (uint64_t *)*v43;
        }
        sub_19AA140(&v72, "true", v43);
        sub_1506560((uint64_t)&v62, 0, 0);
        int v68 = 2;
        LODWORD(__p.__r_.__value_.__r.__words[1]) |= 5u;
        int v44 = (uint64_t *)(__p.__r_.__value_.__r.__words[0] & 0xFFFFFFFFFFFFFFFCLL);
        if (__p.__r_.__value_.__s.__data_[0]) {
          int v44 = (uint64_t *)*v44;
        }
        sub_1881DF4(&v66, (long long *)&__dst, v44);
        LODWORD(__p.__r_.__value_.__r.__words[1]) |= 2u;
        char v45 = v67;
        if (!v67)
        {
          char v46 = (void *)(__p.__r_.__value_.__r.__words[0] & 0xFFFFFFFFFFFFFFFCLL);
          if (__p.__r_.__value_.__s.__data_[0]) {
            char v46 = (void *)*v46;
          }
          char v45 = (std::string *)sub_150E7D4((uint64_t)v46);
          long long v67 = v45;
        }
        sub_1506428(v45, (uint64_t)&v69);
        if (v80 == v79) {
          sub_66748();
        }
        if ((*(unsigned char *)(v79 + 16) & 0x40) != 0) {
          int v47 = *(_DWORD *)(v79 + 60);
        }
        else {
          int v47 = -1;
        }
        *(_DWORD *)int v57 = v47;
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        {
          sub_4200(&v57[8], __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
          int v47 = *(_DWORD *)v57;
        }
        else
        {
          *(std::string *)&v57[8] = __dst;
        }
        LODWORD(v83.__r_.__value_.__l.__data_) = v47;
        *(_OWORD *)&v83.__r_.__value_.__r.__words[1] = *(_OWORD *)&v57[8];
        uint64_t v84 = *(char **)&v57[24];
        memset(&v57[8], 0, 24);
        uint64_t v93 = 0;
        long long v92 = 0uLL;
        *(void *)&long long v54 = &v92;
        BYTE8(v54) = 0;
        *(void *)&long long v92 = operator new(0x20uLL);
        *((void *)&v92 + 1) = v92;
        uint64_t v93 = v92 + 32;
        *((void *)&v92 + 1) = sub_19A84E0((uint64_t)&v93, (uint64_t)&v83, (uint64_t)&v85, v92);
        if (SHIBYTE(v84) < 0) {
          operator delete((void *)v83.__r_.__value_.__l.__size_);
        }
        if ((v57[31] & 0x80000000) != 0) {
          operator delete(*(void **)&v57[8]);
        }
        sub_1506770(v57);
        char v61 = 1;
        long long v54 = 0u;
        long long v55 = 0u;
        int v56 = 1065353216;
        sub_19A8AF0(&v83, (uint64_t)v57, (uint64_t *)&v54, (uint64_t *)&v92);
        sub_19A89D8(a3, (uint64_t)&v83)[6].__r_.__value_.__s.__data_[0] = 1;
        uint64_t v82 = (void **)v91;
        sub_19A8630(&v82);
        sub_1898170((uint64_t)v90);
        if (v89) {
          sub_1506848((uint64_t)&v83);
        }
        sub_1898170((uint64_t)&v54);
        if (v61) {
          sub_1506848((uint64_t)v57);
        }
        v83.__r_.__value_.__r.__words[0] = (std::string::size_type)&v92;
        sub_19A8630((void ***)&v83);
        sub_1506848((uint64_t)&v62);
        sub_1505CE0((uint64_t)&v69);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      a3->__r_.__value_.__s.__data_[0] = 0;
      a3[6].__r_.__value_.__s.__data_[0] = 0;
    }
    sub_19A8494((uint64_t)&v75);
  }
  else
  {
    BOOL v52 = *(_DWORD *)(a1 + 76) != 1;
    int v69 = 0;
    unint64_t v70 = 0;
    unint64_t v71 = 0;
    long long v75 = 0u;
    long long v76 = 0u;
    int v77 = 1065353216;
    long long v54 = 0uLL;
    for (*(void *)&long long v55 = 0; v12 != v13; v12 += 64)
    {
      if (*(void *)(v12 + 40)) {
        int v15 = *(char **)(v12 + 40);
      }
      else {
        int v15 = (char *)&off_2530B58;
      }
      sub_19A4824(v15, (uint64_t)v57);
      if (BYTE8(v59))
      {
        if ((v57[23] & 0x80000000) != 0) {
          sub_4200(&__dst, *(void **)v57, *(unint64_t *)&v57[8]);
        }
        else {
          std::string __dst = *(std::string *)v57;
        }
        if ((*(unsigned char *)(v12 + 16) & 0x40) != 0) {
          int v16 = *(_DWORD *)(v12 + 60);
        }
        else {
          int v16 = -1;
        }
        int v62 = v16;
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        {
          sub_4200(&__p, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
          int v16 = v62;
        }
        else
        {
          std::string __p = __dst;
        }
        *(void *)&long long v92 = __p.__r_.__value_.__l.__size_;
        std::string::size_type v17 = __p.__r_.__value_.__r.__words[0];
        *(void *)((char *)&v92 + 7) = *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7);
        char v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        memset(&__p, 0, sizeof(__p));
        unint64_t v19 = v70;
        if (v70 >= v71)
        {
          uint64_t v22 = (uint64_t)(v70 - (void)v69) >> 5;
          unint64_t v23 = v22 + 1;
          if ((unint64_t)(v22 + 1) >> 59) {
            sub_2E00();
          }
          uint64_t v24 = v71 - (void)v69;
          if ((uint64_t)(v71 - (void)v69) >> 4 > v23) {
            unint64_t v23 = v24 >> 4;
          }
          if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFE0) {
            unint64_t v25 = 0x7FFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v25 = v23;
          }
          long long v85 = &v71;
          if (v25) {
            long long v26 = (char *)sub_18B0970((uint64_t)&v71, v25);
          }
          else {
            long long v26 = 0;
          }
          std::string::size_type v27 = (std::string::size_type)&v26[32 * v22];
          v83.__r_.__value_.__r.__words[0] = (std::string::size_type)v26;
          v83.__r_.__value_.__l.__size_ = v27;
          uint64_t v84 = &v26[32 * v25];
          *(_DWORD *)std::string::size_type v27 = v16;
          *(void *)(v27 + 8) = v17;
          *(void *)(v27 + 16) = v92;
          *(void *)(v27 + 23) = *(void *)((char *)&v92 + 7);
          *(unsigned char *)(v27 + 31) = v18;
          v83.__r_.__value_.__r.__words[2] = v27 + 32;
          sub_19A8D0C((uint64_t *)&v69, &v83);
          unint64_t v21 = v70;
          sub_19A8EA8((uint64_t)&v83);
        }
        else
        {
          *(_DWORD *)unint64_t v70 = v16;
          uint64_t v20 = v92;
          *(void *)(v19 + 8) = v17;
          *(void *)(v19 + 16) = v20;
          *(void *)(v19 + 23) = *(void *)((char *)&v92 + 7);
          *(unsigned char *)(v19 + 31) = v18;
          unint64_t v21 = v19 + 32;
        }
        unint64_t v70 = v21;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (sub_13A8C(a2, (uint64_t)&__dst))
        {
          sub_24AFC((uint64_t)&v75, (uint64_t)&__dst, (uint64_t)&__dst);
        }
        else
        {
          sub_1505A94((uint64_t)&v62, 0, 0);
          LODWORD(v66) = 0;
          LODWORD(__p.__r_.__value_.__r.__words[1]) |= 9u;
          char v28 = (uint64_t *)(__p.__r_.__value_.__r.__words[0] & 0xFFFFFFFFFFFFFFFCLL);
          if (__p.__r_.__value_.__s.__data_[0]) {
            char v28 = (uint64_t *)*v28;
          }
          sub_19AA140((std::string **)&__p.__r_.__value_.__r.__words[2], "true", v28);
          sub_1506560((uint64_t)&v83, 0, 0);
          int v88 = 2;
          LODWORD(v83.__r_.__value_.__r.__words[2]) |= 5u;
          int v29 = (uint64_t *)(v83.__r_.__value_.__l.__size_ & 0xFFFFFFFFFFFFFFFCLL);
          if (v83.__r_.__value_.__s.__data_[8]) {
            int v29 = (uint64_t *)*v29;
          }
          sub_1881DF4((std::string **)&v86 + 1, (long long *)&__dst, v29);
          LODWORD(v83.__r_.__value_.__r.__words[2]) |= 2u;
          uint64_t v30 = v87;
          if (!v87)
          {
            int v31 = (void *)(v83.__r_.__value_.__l.__size_ & 0xFFFFFFFFFFFFFFFCLL);
            if (v83.__r_.__value_.__s.__data_[8]) {
              int v31 = (void *)*v31;
            }
            uint64_t v30 = (std::string *)sub_150E7D4((uint64_t)v31);
            uint64_t v87 = v30;
          }
          sub_1506428(v30, (uint64_t)&v62);
          uint64_t v32 = *((void *)&v54 + 1);
          if (*((void *)&v54 + 1) >= (unint64_t)v55)
          {
            uint64_t v33 = sub_19A8F38((uint64_t)&v54);
          }
          else
          {
            sub_1506770(*((void *)&v54 + 1));
            uint64_t v33 = v32 + 72;
          }
          *((void *)&v54 + 1) = v33;
          sub_1506848((uint64_t)&v83);
          sub_1505CE0((uint64_t)&v62);
        }
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__dst.__r_.__value_.__l.__data_);
        }
      }
      sub_19A8494((uint64_t)v57);
    }
    sub_1506560((uint64_t)&v62, 0, 0);
    uint64_t v34 = *((void *)&v54 + 1);
    uint64_t v35 = v54;
    if (*((void *)&v54 + 1) == (void)v54)
    {
      sub_19A86D4((uint64_t)v57, (uint64_t)&unk_2173C1A, (uint64_t)&v75, (uint64_t *)&v69);
      std::string::size_type v40 = *(void *)v57;
      std::string::size_type v41 = *(void *)&v57[8];
      *(void *)int v57 = 0;
      *(void *)&v57[8] = 0;
      v83.__r_.__value_.__r.__words[0] = v40;
      v83.__r_.__value_.__l.__size_ = v41;
      v83.__r_.__value_.__r.__words[2] = *(void *)&v57[16];
      uint64_t v84 = *(char **)&v57[24];
      LODWORD(v85) = v58;
      if (*(void *)&v57[24])
      {
        std::string::size_type v42 = *(void *)(*(void *)&v57[16] + 8);
        if ((v41 & (v41 - 1)) != 0)
        {
          if (v42 >= v41) {
            v42 %= v41;
          }
        }
        else
        {
          v42 &= v41 - 1;
        }
        *(void *)(v40 + 8 * v42) = (char *)&v83.__r_.__value_.__l + 16;
        *(void *)&v57[16] = 0;
        *(void *)&v57[24] = 0;
      }
      long long v86 = v59;
      uint64_t v87 = v60;
      long long v60 = 0;
      long long v59 = 0uLL;
      LOBYTE(v88) = 1;
      sub_19A8888(a3, (uint64_t)&v83);
      sub_19A898C((uint64_t)&v83);
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&v59;
      sub_19A8630((void ***)&__dst);
      sub_1898170((uint64_t)v57);
    }
    else
    {
      int v36 = 954437177 * ((*((void *)&v54 + 1) - (void)v54) >> 3);
      LODWORD(__p.__r_.__value_.__r.__words[1]) |= 4u;
      int v68 = v52;
      if (v36 != -1) {
        sub_188CC60((uint64_t)&__p.__r_.__value_.__r.__words[2], v64 + v36);
      }
      do
      {
        if (v65 && (uint64_t v37 = v64, v64 < *v65))
        {
          ++v64;
          std::string v38 = *(std::string **)&v65[2 * v37 + 2];
        }
        else
        {
          uint64_t v39 = sub_150E85C(__p.__r_.__value_.__r.__words[2]);
          std::string v38 = (std::string *)sub_188CDC8((uint64_t)&__p.__r_.__value_.__r.__words[2], v39);
        }
        sub_15072C8(v38, v35);
        v35 += 72;
      }
      while (v35 != v34);
      sub_1506770(v57);
      char v61 = 1;
      sub_19A9130(&v83, (uint64_t)v57, (uint64_t)&v75, (uint64_t *)&v69);
      sub_19A89D8(a3, (uint64_t)&v83)[6].__r_.__value_.__s.__data_[0] = 1;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v91;
      sub_19A8630((void ***)&__dst);
      sub_1898170((uint64_t)v90);
      if (v89) {
        sub_1506848((uint64_t)&v83);
      }
      if (v61) {
        sub_1506848((uint64_t)v57);
      }
    }
    sub_1506848((uint64_t)&v62);
    v83.__r_.__value_.__r.__words[0] = (std::string::size_type)&v54;
    sub_19A91DC((void ***)&v83);
    sub_1898170((uint64_t)&v75);
    v83.__r_.__value_.__r.__words[0] = (std::string::size_type)&v69;
    sub_19A8630((void ***)&v83);
  }
  v83.__r_.__value_.__r.__words[0] = (std::string::size_type)&v79;
  sub_19A9260((void ***)&v83);
}

void sub_19A5D5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *__p,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
  if (a52 < 0) {
    operator delete(__p);
  }
  sub_19A8494((uint64_t)&a54);
  a21 = (uint64_t)&a62;
  sub_19A9260((void ***)&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_19A5FF0(uint64_t *a1, uint64_t a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(v4 - 8);
  if (v7 >= v6)
  {
    uint64_t v10 = (uint64_t)(v7 - *a1) >> 6;
    if ((unint64_t)(v10 + 1) >> 58) {
      sub_2E00();
    }
    uint64_t v11 = v5 - *a1;
    uint64_t v12 = v11 >> 5;
    if (v11 >> 5 <= (unint64_t)(v10 + 1)) {
      uint64_t v12 = v10 + 1;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFC0) {
      unint64_t v13 = 0x3FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v12;
    }
    uint64_t v19 = v4;
    if (v13) {
      int v14 = (char *)sub_18D4E00(v4, v13);
    }
    else {
      int v14 = 0;
    }
    int v15 = v14;
    int v16 = &v14[64 * v10];
    char v18 = &v14[64 * v13];
    sub_12AD500((uint64_t)v16, a2);
    std::string::size_type v17 = v16 + 64;
    sub_19A8B94(a1, &v15);
    uint64_t v9 = a1[1];
    uint64_t result = sub_19A8CBC((uint64_t)&v15);
  }
  else
  {
    uint64_t result = sub_12AD500(*(void *)(v4 - 8), a2);
    uint64_t v9 = v7 + 64;
    a1[1] = v7 + 64;
  }
  a1[1] = v9;
  return result;
}

void sub_19A60E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

void sub_19A6104(uint64_t a1@<X0>, void *a2@<X1>, std::string *a3@<X8>)
{
  int v3 = *(_DWORD *)(a1 + 72);
  if (v3 == 3)
  {
    if (*(void *)(a1 + 40)) {
      unint64_t v5 = *(uint64_t (****)())(a1 + 40);
    }
    else {
      unint64_t v5 = &off_2530CF0;
    }
    sub_19A51C4((uint64_t)v5, a2, a3);
  }
  else if (v3 == 1)
  {
    if (*(void *)(a1 + 24)) {
      uint64_t v4 = *(uint64_t (****)())(a1 + 24);
    }
    else {
      uint64_t v4 = &off_2530B88;
    }
    sub_19A4A7C((uint64_t)v4, a2, a3);
  }
  else
  {
    a3->__r_.__value_.__s.__data_[0] = 0;
    a3[6].__r_.__value_.__s.__data_[0] = 0;
  }
}

void sub_19A6154(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  if (*(char *)(a1 + 23) < 0)
  {
    sub_4200(v4, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t v4 = *(_OWORD *)a1;
    uint64_t v5 = *(void *)(a1 + 16);
  }
  *(_OWORD *)std::string __p = *(_OWORD *)v4;
  uint64_t v3 = v5;
  v4[0] = 0;
  v4[1] = 0;
  uint64_t v5 = 0;
  unint64_t v6 = "true";
  uint64_t v8 = v3;
  uint64_t v9 = "true";
  char v10 = 1;
  sub_19A92E4(a2, (uint64_t)__p);
  if (v10 && SHIBYTE(v8) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v5) < 0) {
    operator delete(v4[0]);
  }
}

void sub_19A6200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  if (a20)
  {
    if (a18 < 0) {
      operator delete(__p);
    }
  }
  sub_20B1E48((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_19A622C(void **a1@<X0>, void ****a2@<X1>, void *a3@<X8>)
{
  unint64_t v71 = 0;
  long long v72 = 0;
  unint64_t v73 = 0;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  if (*a2 == v4)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  else
  {
    unint64_t v6 = a1 + 1;
    unint64_t v7 = (void **)(v3 + 1);
    do
    {
      *((void *)&v67 + 1) = 0;
      uint64_t v68 = 0;
      *(void *)&long long v67 = (char *)&v67 + 8;
      sub_19A939C(*a1, v6, *v3, v7, (uint64_t)&v67, (uint64_t)&v67 + 8, (uint64_t)&v53);
      if (v68)
      {
        uint64_t v8 = v72;
        if ((unint64_t)v72 >= v73)
        {
          uint64_t v9 = (uint64_t *)sub_19A9550((uint64_t *)&v71, (const void ***)&v67);
        }
        else
        {
          sub_1897AE4(v72, (const void ***)&v67);
          uint64_t v9 = v8 + 3;
        }
        long long v72 = v9;
      }
      sub_2F020((uint64_t)&v67, *((char **)&v67 + 1));
      v3 += 3;
      v7 += 3;
    }
    while (v3 != v4);
    char v10 = v71;
    uint64_t v11 = v72;
    a3[1] = 0;
    a3[2] = 0;
    *a3 = 0;
    if (v10 != v11)
    {
      int v48 = v11;
      do
      {
        if (v10[2] == 1)
        {
          sub_19A6154(*v10 + 32, &v67);
          if (v70)
          {
            sub_1505A94((uint64_t)v62, 0, 0);
            int v12 = v64;
            v64 |= 8u;
            int v66 = 0;
            if (!v70) {
              sub_1907A2C();
            }
            int v64 = v12 | 9;
            unint64_t v13 = (uint64_t *)(v63 & 0xFFFFFFFFFFFFFFFCLL);
            if (v63) {
              unint64_t v13 = (uint64_t *)*v13;
            }
            sub_1881DF4(v65, &v69, v13);
            sub_1506560((uint64_t)&v53, 0, 0);
            int v14 = v55;
            v55 |= 4u;
            int v61 = 2;
            if (!v70) {
              sub_1907A2C();
            }
            int v55 = v14 | 5;
            int v15 = (uint64_t *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
            if (v54) {
              int v15 = (uint64_t *)*v15;
            }
            sub_1881DF4(&v59, &v67, v15);
            v55 |= 2u;
            int v16 = v60;
            if (!v60)
            {
              std::string::size_type v17 = (void *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
              if (v54) {
                std::string::size_type v17 = (void *)*v17;
              }
              int v16 = (std::string *)sub_150E7D4((uint64_t)v17);
              long long v60 = v16;
            }
            sub_1506428(v16, (uint64_t)v62);
            unint64_t v18 = a3[1];
            if (v18 >= a3[2])
            {
              uint64_t v19 = sub_19A8F38((uint64_t)a3);
              uint64_t v20 = a3;
            }
            else
            {
              sub_1506770(a3[1]);
              uint64_t v19 = v18 + 72;
              uint64_t v20 = a3;
              a3[1] = v18 + 72;
            }
            v20[1] = v19;
            sub_1506848((uint64_t)&v53);
            sub_1505CE0((uint64_t)v62);
          }
          sub_19A8494((uint64_t)&v67);
        }
        else
        {
          uint64_t v50 = 0;
          unint64_t v51 = 0;
          unint64_t v52 = 0;
          unint64_t v21 = (void *)*v10;
          if ((uint64_t *)*v10 == v10 + 1)
          {
            uint64_t v33 = 0;
            unint64_t v34 = 0;
          }
          else
          {
            do
            {
              sub_19A6154((uint64_t)(v21 + 4), &v67);
              if (v70)
              {
                sub_1505A94((uint64_t)v62, 0, 0);
                int v22 = v64;
                v64 |= 8u;
                int v66 = 0;
                if (!v70) {
                  sub_1907A2C();
                }
                int v64 = v22 | 9;
                unint64_t v23 = (uint64_t *)(v63 & 0xFFFFFFFFFFFFFFFCLL);
                if (v63) {
                  unint64_t v23 = (uint64_t *)*v23;
                }
                sub_1881DF4(v65, &v69, v23);
                sub_1506560((uint64_t)&v53, 0, 0);
                int v24 = v55;
                v55 |= 4u;
                int v61 = 2;
                if (!v70) {
                  sub_1907A2C();
                }
                int v55 = v24 | 5;
                unint64_t v25 = (uint64_t *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
                if (v54) {
                  unint64_t v25 = (uint64_t *)*v25;
                }
                sub_1881DF4(&v59, &v67, v25);
                v55 |= 2u;
                long long v26 = v60;
                if (!v60)
                {
                  std::string::size_type v27 = (void *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
                  if (v54) {
                    std::string::size_type v27 = (void *)*v27;
                  }
                  long long v26 = (std::string *)sub_150E7D4((uint64_t)v27);
                  long long v60 = v26;
                }
                sub_1506428(v26, (uint64_t)v62);
                unint64_t v28 = v51;
                if (v51 >= v52)
                {
                  uint64_t v29 = sub_19A8F38((uint64_t)&v50);
                }
                else
                {
                  sub_1506770(v51);
                  uint64_t v29 = v28 + 72;
                }
                unint64_t v51 = v29;
                sub_1506848((uint64_t)&v53);
                sub_1505CE0((uint64_t)v62);
              }
              sub_19A8494((uint64_t)&v67);
              uint64_t v30 = (uint64_t *)v21[1];
              if (v30)
              {
                do
                {
                  int v31 = v30;
                  uint64_t v30 = (uint64_t *)*v30;
                }
                while (v30);
              }
              else
              {
                do
                {
                  int v31 = (uint64_t *)v21[2];
                  BOOL v32 = *v31 == (void)v21;
                  unint64_t v21 = v31;
                }
                while (!v32);
              }
              unint64_t v21 = v31;
            }
            while (v31 != v10 + 1);
            uint64_t v33 = v50;
            unint64_t v34 = v51;
          }
          unint64_t v35 = 0x8E38E38E38E38E39 * ((uint64_t)(v34 - v33) >> 3);
          uint64_t v11 = v48;
          if (v35)
          {
            if (v35 == 1)
            {
              unint64_t v36 = a3[1];
              if (v36 >= a3[2])
              {
                uint64_t v37 = sub_19A8F38((uint64_t)a3);
                std::string v38 = a3;
              }
              else
              {
                sub_1506770(a3[1]);
                uint64_t v37 = v36 + 72;
                std::string v38 = a3;
                a3[1] = v36 + 72;
              }
              v38[1] = v37;
            }
            else
            {
              sub_1506560((uint64_t)&v53, 0, 0);
              v55 |= 4u;
              int v61 = 1;
              uint64_t v40 = v50;
              unint64_t v39 = v51;
              int v41 = 954437177 * ((v51 - v50) >> 3);
              if (v41 != -1) {
                sub_188CC60((uint64_t)&v56, v57 + v41);
              }
              while (v40 != v39)
              {
                if (v58 && (uint64_t v42 = v57, v57 < *v58))
                {
                  ++v57;
                  int v43 = *(std::string **)&v58[2 * v42 + 2];
                }
                else
                {
                  uint64_t v44 = sub_150E85C(v56);
                  int v43 = (std::string *)sub_188CDC8((uint64_t)&v56, v44);
                }
                sub_15072C8(v43, v40);
                v40 += 72;
              }
              unint64_t v45 = a3[1];
              if (v45 >= a3[2])
              {
                uint64_t v46 = sub_19A8F38((uint64_t)a3);
                int v47 = a3;
              }
              else
              {
                sub_1506770(a3[1]);
                uint64_t v46 = v45 + 72;
                int v47 = a3;
                a3[1] = v45 + 72;
              }
              v47[1] = v46;
              sub_1506848((uint64_t)&v53);
            }
          }
          uint64_t v53 = (void **)&v50;
          sub_19A91DC(&v53);
        }
        v10 += 3;
      }
      while (v10 != v11);
    }
  }
  uint64_t v53 = (void **)&v71;
  sub_19A8370(&v53);
}

void sub_19A67FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, void **a16)
{
  *(void *)(a11 + 8) = v16;
  a16 = (void **)&a13;
  sub_19A91DC(&a16);
  a16 = (void **)a11;
  sub_19A91DC(&a16);
  *(void *)(v17 - 168) = v17 - 112;
  sub_19A8370((void ***)(v17 - 168));
  _Unwind_Resume(a1);
}

void sub_19A6930(uint64_t a1@<X0>, void ****a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v59 = 0;
  unint64_t v60 = 0;
  unint64_t v61 = 0;
  int v57 = 0;
  uint64_t v58 = 0;
  uint64_t v55 = 0;
  uint64_t v56 = &v57;
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  sub_15073A0(&v46, 0, 0);
  sub_1506560((uint64_t)v40, 0, 0);
  v41 |= 4u;
  int v45 = 1;
  uint64_t v8 = *(void *)(a1 + 64);
  if (v8) {
    uint64_t v9 = v8 + 8;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = *(int *)(a1 + 56);
  if (v10)
  {
    uint64_t v11 = v9 + 8 * v10;
    do
    {
      uint64_t v12 = *(void *)(*(void *)v9 + 40);
      if (v12) {
        unint64_t v13 = (uint64_t *)(v12 + 8);
      }
      else {
        unint64_t v13 = 0;
      }
      uint64_t v14 = *(int *)(*(void *)v9 + 32);
      if (v14)
      {
        int v15 = &v13[v14];
        do
        {
          sub_19A6104(*v13, a3, v34);
          if (v39)
          {
            if (v35)
            {
              unint64_t v16 = v60;
              if (v60 >= v61)
              {
                uint64_t v17 = sub_19A8F38((uint64_t)&v59);
              }
              else
              {
                sub_1506770(v60);
                uint64_t v17 = v16 + 72;
              }
              unint64_t v60 = v17;
              if (!v39) {
                sub_1907A2C();
              }
            }
            unint64_t v18 = v36;
            if (v36)
            {
              do
              {
                sub_1897BC8((uint64_t **)&v56, (uint64_t *)&v57, v18 + 2, (uint64_t)(v18 + 2));
                unint64_t v18 = (const void **)*v18;
              }
              while (v18);
              if (!v39) {
                sub_1907A2C();
              }
            }
            sub_19A988C(&v53, v54, v37, v38, (v38 - (uint64_t)v37) >> 5);
          }
          sub_19A8930((uint64_t)v34);
          ++v13;
        }
        while (v13 != v15);
      }
      v9 += 8;
    }
    while (v9 != v11);
  }
  if (v58)
  {
    sub_19A622C(&v56, a2, v34);
    std::string::size_type size = v34[0].__r_.__value_.__l.__size_;
    uint64_t v19 = v34[0].__r_.__value_.__r.__words[0];
    int v21 = 954437177 * ((v34[0].__r_.__value_.__l.__size_ - v34[0].__r_.__value_.__r.__words[0]) >> 3);
    if (v21 != -1) {
      sub_188CC60((uint64_t)&v49, v50 + v21);
    }
    while (v19 != size)
    {
      if (v51 && (uint64_t v22 = v50, v50 < *v51))
      {
        ++v50;
        unint64_t v23 = *(std::string **)&v51[2 * v22 + 2];
      }
      else
      {
        uint64_t v24 = sub_150E85C(v49);
        unint64_t v23 = (std::string *)sub_188CDC8((uint64_t)&v49, v24);
      }
      sub_15072C8(v23, v19);
      v19 += 72;
    }
    int v62 = (void **)v34;
    sub_19A91DC(&v62);
  }
  uint64_t v25 = v59;
  unint64_t v26 = v60;
  if (v60 != v59)
  {
    int v27 = 954437177 * ((v60 - v59) >> 3);
    if (v27 != -1) {
      sub_188CC60((uint64_t)&v42, v43 + v27);
    }
    do
    {
      if (v44 && (uint64_t v28 = v43, v43 < *v44))
      {
        ++v43;
        uint64_t v29 = *(std::string **)&v44[2 * v28 + 2];
      }
      else
      {
        uint64_t v30 = sub_150E85C(v42);
        uint64_t v29 = (std::string *)sub_188CDC8((uint64_t)&v42, v30);
      }
      sub_15072C8(v29, v25);
      v25 += 72;
    }
    while (v25 != v26);
    v48 |= 1u;
    int v31 = v52;
    if (!v52)
    {
      BOOL v32 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
      if (v47) {
        BOOL v32 = (void *)*v32;
      }
      int v31 = (std::string *)sub_150E85C((uint64_t)v32);
      unint64_t v52 = v31;
    }
    sub_1507148(v31, (uint64_t)v40);
  }
  if ((v48 & 1) != 0 || v50 >= 1)
  {
    sub_15017A8((uint64_t)a4, (uint64_t)&v46);
    char v33 = 1;
  }
  else
  {
    char v33 = 0;
    *a4 = 0;
  }
  a4[56] = v33;
  sub_1506848((uint64_t)v40);
  sub_1507620((uint64_t)&v46);
  v34[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v53;
  sub_19A8630((void ***)v34);
  sub_2F020((uint64_t)&v56, v57);
  v34[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v59;
  sub_19A91DC((void ***)v34);
}

void sub_19A6CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void **a29)
{
  *(void *)(v29 - 88) = &a10;
  sub_19A91DC((void ***)(v29 - 88));
  sub_1506848((uint64_t)&a29);
  sub_1507620(v29 - 216);
  a29 = (void **)(v29 - 160);
  sub_19A8630(&a29);
  sub_2F020(v29 - 136, *(char **)(v29 - 128));
  a29 = (void **)(v29 - 112);
  sub_19A91DC(&a29);
  _Unwind_Resume(a1);
}

uint64_t sub_19A6D78@<X0>(uint64_t a1@<X0>, void ****a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  sub_15073A0(&v145, 0, 0);
  sub_1506560((uint64_t)v139, 0, 0);
  v140 |= 4u;
  int v144 = 1;
  memset(v138, 0, sizeof(v138));
  uint64_t v135 = 0;
  unint64_t v136 = 0;
  unint64_t v137 = 0;
  v134[0] = 0;
  v134[1] = 0;
  uint64_t v132 = 0;
  char v133 = v134;
  long long v130 = 0;
  char v131 = 0;
  long long v127 = 0;
  char v128 = 0;
  unint64_t v129 = 0;
  long long v125 = 0;
  uint64_t v126 = 0;
  int v124 = &v125;
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6) {
    unint64_t v7 = (uint64_t *)(v6 + 8);
  }
  else {
    unint64_t v7 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 32);
  int v99 = a3;
  if (v8)
  {
    uint64_t v9 = 8 * v8;
    do
    {
      sub_19A4A24(*v7, &v113);
      sub_1897B3C((uint64_t *)&v133, (const void **)v113.__r_.__value_.__l.__data_, (const void ***)&v113.__r_.__value_.__l.__size_);
      sub_2F020((uint64_t)&v113, (char *)v113.__r_.__value_.__l.__size_);
      ++v7;
      v9 -= 8;
    }
    while (v9);
    uint64_t v10 = *(void *)(a1 + 40);
    uint64_t v11 = *(int *)(a1 + 32);
    uint64_t v12 = v10 ? (uint64_t *)(v10 + 8) : 0;
    if (v11)
    {
      unint64_t v13 = &v12[v11];
      do
      {
        sub_19A6104(*v12, a3, &v113);
        if (v123)
        {
          sub_19A9D78(&v106, (uint64_t)&v113);
          if (v112)
          {
            unint64_t v14 = v136;
            if (v136 >= v137)
            {
              uint64_t v15 = sub_19A8F38((uint64_t)&v135);
            }
            else
            {
              sub_1506770(v136);
              uint64_t v15 = v14 + 72;
            }
            unint64_t v136 = v15;
          }
          if (!v123) {
            sub_1907A2C();
          }
          unint64_t v16 = v120;
          if (v120)
          {
            do
            {
              sub_1897BC8((uint64_t **)&v124, (uint64_t *)&v125, v16 + 2, (uint64_t)(v16 + 2));
              unint64_t v16 = (const void **)*v16;
            }
            while (v16);
            if (!v123) {
              sub_1907A2C();
            }
          }
          sub_19A988C((uint64_t *)&v130, v131, v121, (uint64_t)v122, (v122 - v121) >> 5);
          a3 = v99;
          if (v112) {
            sub_1506848((uint64_t)&v106);
          }
        }
        sub_19A8930((uint64_t)&v113);
        ++v12;
      }
      while (v12 != v13);
    }
  }
  uint64_t v17 = *(void *)(a1 + 64);
  if (v17) {
    uint64_t v18 = v17 + 8;
  }
  else {
    uint64_t v18 = 0;
  }
  uint64_t v19 = *(int *)(a1 + 56);
  if (v19)
  {
    uint64_t v97 = v18 + 8 * v19;
    while (1)
    {
      uint64_t v98 = v18;
      uint64_t v20 = *(void *)(*(void *)v18 + 40);
      int v21 = v20 ? (uint64_t *)(v20 + 8) : 0;
      uint64_t v22 = *(int *)(*(void *)v18 + 32);
      if (v22) {
        break;
      }
LABEL_171:
      uint64_t v18 = v98 + 8;
      if (v98 + 8 == v97) {
        goto LABEL_172;
      }
    }
    long long v100 = &v21[v22];
    while (1)
    {
      sub_19A6104(*v21, a3, &v113);
      char v101 = v21;
      if (v123) {
        break;
      }
LABEL_167:
      sub_19A8930((uint64_t)&v113);
      int v21 = v101 + 1;
      if (v101 + 1 == v100) {
        goto LABEL_171;
      }
    }
    if (!v119)
    {
LABEL_162:
      for (uint64_t i = v120; i; uint64_t i = (const void **)*i)
      {
        sub_19A6154((uint64_t)(i + 2), &v106);
        if (v111 && v134 == (char **)sub_19081D4((uint64_t)&v133, (void **)&v106)) {
          sub_2F0A4((uint64_t **)&v124, i + 2, (uint64_t)(i + 2));
        }
        sub_19A8494((uint64_t)&v106);
      }
      goto LABEL_167;
    }
    if (v118 == 2)
    {
      if (v134 != (char **)sub_19081D4((uint64_t)&v133, (void **)(v117 & 0xFFFFFFFFFFFFFFFELL))) {
        goto LABEL_161;
      }
      unint64_t v23 = v136;
      if (v136 >= v137)
      {
        uint64_t v24 = sub_19A8F38((uint64_t)&v135);
      }
      else
      {
        sub_1506770(v136);
        uint64_t v24 = v23 + 72;
      }
      unint64_t v136 = v24;
      sub_19A441C((uint64_t)&v113, &v105);
      if (!v123) {
        sub_1907A2C();
      }
      uint64_t v59 = v121;
      unint64_t v60 = v122;
      int v61 = SHIBYTE(v105.__r_.__value_.__r.__words[2]);
      if (v121 != v122)
      {
        if ((v105.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(v105.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = v105.__r_.__value_.__l.__size_;
        }
        if ((v105.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v63 = &v105;
        }
        else {
          uint64_t v63 = (std::string *)v105.__r_.__value_.__r.__words[0];
        }
        int v64 = -1;
        while (1)
        {
          uint64_t v65 = v59[31];
          if ((v65 & 0x80u) == 0) {
            uint64_t v66 = v59[31];
          }
          else {
            uint64_t v66 = *((void *)v59 + 2);
          }
          if (v66 != size) {
            goto LABEL_136;
          }
          if ((v65 & 0x80) == 0) {
            break;
          }
          if (!memcmp(*((const void **)v59 + 1), v63, *((void *)v59 + 2))) {
            goto LABEL_135;
          }
LABEL_136:
          v59 += 32;
          if (v59 == v60) {
            goto LABEL_143;
          }
        }
        if (v59[31])
        {
          uint64_t v67 = 0;
          while (v59[v67 + 8] == v63->__r_.__value_.__s.__data_[v67])
          {
            if (v65 == ++v67) {
              goto LABEL_135;
            }
          }
          goto LABEL_136;
        }
LABEL_135:
        int v64 = *(_DWORD *)v59;
        goto LABEL_136;
      }
      int v64 = -1;
LABEL_143:
      LODWORD(v103) = v64;
      if (v61 < 0) {
        sub_4200(&v104, v105.__r_.__value_.__l.__data_, v105.__r_.__value_.__l.__size_);
      }
      else {
        std::string v104 = v105;
      }
      uint64_t v68 = v128;
      if ((unint64_t)v128 >= v129)
      {
        uint64_t v70 = ((char *)v128 - v127) >> 5;
        unint64_t v71 = v70 + 1;
        if ((unint64_t)(v70 + 1) >> 59) {
          sub_2E00();
        }
        uint64_t v72 = v129 - (void)v127;
        if ((uint64_t)(v129 - (void)v127) >> 4 > v71) {
          unint64_t v71 = v72 >> 4;
        }
        if ((unint64_t)v72 >= 0x7FFFFFFFFFFFFFE0) {
          unint64_t v73 = 0x7FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v73 = v71;
        }
        long long v110 = &v129;
        if (v73) {
          int v74 = (std::string *)sub_18B0970((uint64_t)&v129, v73);
        }
        else {
          int v74 = 0;
        }
        long long v75 = (char *)v74 + 32 * v70;
        char v106 = v74;
        long long v107 = (std::string *)v75;
        int v109 = (char *)v74 + 32 * v73;
        *(_DWORD *)long long v75 = v103;
        long long v76 = *(_OWORD *)&v104.__r_.__value_.__l.__data_;
        *((void *)v75 + 3) = *((void *)&v104.__r_.__value_.__l + 2);
        *(_OWORD *)(v75 + 8) = v76;
        memset(&v104, 0, sizeof(v104));
        char v108 = v75 + 32;
        sub_19A8D0C((uint64_t *)&v127, &v106);
        int v77 = v128;
        sub_19A8EA8((uint64_t)&v106);
        char v128 = v77;
        if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v104.__r_.__value_.__l.__data_);
          if ((v61 & 0x80000000) == 0) {
            goto LABEL_160;
          }
        }
        else if ((v61 & 0x80000000) == 0)
        {
          goto LABEL_160;
        }
      }
      else
      {
        *char v128 = v103;
        long long v69 = *(_OWORD *)&v104.__r_.__value_.__l.__data_;
        *((void *)v68 + 3) = *((void *)&v104.__r_.__value_.__l + 2);
        *(_OWORD *)(v68 + 2) = v69;
        char v128 = v68 + 8;
        if ((v61 & 0x80000000) == 0)
        {
LABEL_160:
          a3 = v99;
LABEL_161:
          if (!v123) {
            sub_1907A2C();
          }
          goto LABEL_162;
        }
      }
      operator delete(v105.__r_.__value_.__l.__data_);
      goto LABEL_160;
    }
    memset(&v105, 0, sizeof(v105));
    if (v116) {
      uint64_t v25 = v116 + 2;
    }
    else {
      uint64_t v25 = 0;
    }
    if (v115)
    {
      unint64_t v26 = &v25[2 * v115];
      while (1)
      {
        if (v134 == (char **)sub_19081D4((uint64_t)&v133, (void **)(*(void *)(*(void *)v25 + 48) & 0xFFFFFFFFFFFFFFFELL)))
        {
          std::string::size_type v27 = v105.__r_.__value_.__l.__size_;
          if (v105.__r_.__value_.__l.__size_ >= v105.__r_.__value_.__r.__words[2])
          {
            std::string::size_type v28 = sub_19A8F38((uint64_t)&v105);
          }
          else
          {
            sub_1506770(v105.__r_.__value_.__l.__size_);
            std::string::size_type v28 = v27 + 72;
          }
          v105.__r_.__value_.__l.__size_ = v28;
          sub_19A441C((uint64_t)&v113, &__p);
          if (!v123) {
            sub_1907A2C();
          }
          uint64_t v29 = v121;
          uint64_t v30 = v122;
          int v31 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
          if (v121 != v122)
          {
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v32 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type v32 = __p.__r_.__value_.__l.__size_;
            }
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              p_p = &__p;
            }
            else {
              p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            int v34 = -1;
            while (1)
            {
              uint64_t v35 = v29[31];
              if ((v35 & 0x80u) == 0) {
                uint64_t v36 = v29[31];
              }
              else {
                uint64_t v36 = *((void *)v29 + 2);
              }
              if (v36 != v32) {
                goto LABEL_71;
              }
              if ((v35 & 0x80) == 0) {
                break;
              }
              if (!memcmp(*((const void **)v29 + 1), p_p, *((void *)v29 + 2))) {
                goto LABEL_70;
              }
LABEL_71:
              v29 += 32;
              if (v29 == v30) {
                goto LABEL_74;
              }
            }
            if (v29[31])
            {
              uint64_t v37 = 0;
              while (v29[v37 + 8] == p_p->__r_.__value_.__s.__data_[v37])
              {
                if (v35 == ++v37) {
                  goto LABEL_70;
                }
              }
              goto LABEL_71;
            }
LABEL_70:
            int v34 = *(_DWORD *)v29;
            goto LABEL_71;
          }
          int v34 = -1;
LABEL_74:
          LODWORD(v103) = v34;
          if (v31 < 0) {
            sub_4200(&v104, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
          }
          else {
            std::string v104 = __p;
          }
          uint64_t v38 = v128;
          if ((unint64_t)v128 >= v129)
          {
            uint64_t v40 = ((char *)v128 - v127) >> 5;
            unint64_t v41 = v40 + 1;
            if ((unint64_t)(v40 + 1) >> 59) {
              sub_2E00();
            }
            uint64_t v42 = v129 - (void)v127;
            if ((uint64_t)(v129 - (void)v127) >> 4 > v41) {
              unint64_t v41 = v42 >> 4;
            }
            if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFE0) {
              unint64_t v43 = 0x7FFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v43 = v41;
            }
            long long v110 = &v129;
            if (v43) {
              uint64_t v44 = (std::string *)sub_18B0970((uint64_t)&v129, v43);
            }
            else {
              uint64_t v44 = 0;
            }
            int v45 = (char *)v44 + 32 * v40;
            char v106 = v44;
            long long v107 = (std::string *)v45;
            int v109 = (char *)v44 + 32 * v43;
            *(_DWORD *)int v45 = v103;
            long long v46 = *(_OWORD *)&v104.__r_.__value_.__l.__data_;
            *((void *)v45 + 3) = *((void *)&v104.__r_.__value_.__l + 2);
            *(_OWORD *)(v45 + 8) = v46;
            memset(&v104, 0, sizeof(v104));
            char v108 = v45 + 32;
            sub_19A8D0C((uint64_t *)&v127, &v106);
            uint64_t v47 = v128;
            sub_19A8EA8((uint64_t)&v106);
            char v128 = v47;
            if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0)
            {
              operator delete(v104.__r_.__value_.__l.__data_);
              if ((v31 & 0x80000000) == 0) {
                goto LABEL_91;
              }
            }
            else if ((v31 & 0x80000000) == 0)
            {
              goto LABEL_91;
            }
LABEL_79:
            operator delete(__p.__r_.__value_.__l.__data_);
            goto LABEL_91;
          }
          *char v128 = v103;
          long long v39 = *(_OWORD *)&v104.__r_.__value_.__l.__data_;
          *((void *)v38 + 3) = *((void *)&v104.__r_.__value_.__l + 2);
          *(_OWORD *)(v38 + 2) = v39;
          char v128 = v38 + 8;
          if (v31 < 0) {
            goto LABEL_79;
          }
        }
LABEL_91:
        v25 += 2;
        if (v25 == v26)
        {
          std::string::size_type v48 = v105.__r_.__value_.__l.__size_;
          uint64_t v49 = v105.__r_.__value_.__r.__words[0];
          a3 = v99;
          goto LABEL_96;
        }
      }
    }
    uint64_t v49 = 0;
    std::string::size_type v48 = 0;
LABEL_96:
    unint64_t v50 = 0x8E38E38E38E38E39 * ((uint64_t)(v48 - v49) >> 3);
    if (!v50)
    {
LABEL_141:
      char v106 = &v105;
      sub_19A91DC((void ***)&v106);
      goto LABEL_161;
    }
    if (v50 == 1)
    {
      unint64_t v51 = v136;
      if (v136 < v137)
      {
        sub_1506770(v136);
        uint64_t v52 = v51 + 72;
LABEL_140:
        unint64_t v136 = v52;
        goto LABEL_141;
      }
    }
    else
    {
      uint64_t v53 = v115;
      if (v115 >= 1)
      {
        uint64_t v54 = (uint64_t *)(v116 + 2);
        do
        {
          sub_1506884(*v54++);
          --v53;
        }
        while (v53);
        int v115 = 0;
        std::string::size_type v48 = v105.__r_.__value_.__l.__size_;
        uint64_t v49 = v105.__r_.__value_.__r.__words[0];
        unint64_t v50 = 0x8E38E38E38E38E39
            * ((uint64_t)(v105.__r_.__value_.__l.__size_ - v105.__r_.__value_.__r.__words[0]) >> 3);
      }
      if (v50 != -1) {
        sub_188CC60((uint64_t)&v114, v53 + v50);
      }
      while (v49 != v48)
      {
        if (v116 && (uint64_t v55 = v115, v115 < *v116))
        {
          ++v115;
          uint64_t v56 = *(std::string **)&v116[2 * v55 + 2];
        }
        else
        {
          uint64_t v57 = sub_150E85C(v114);
          uint64_t v56 = (std::string *)sub_188CDC8((uint64_t)&v114, v57);
        }
        sub_15072C8(v56, v49);
        v49 += 72;
      }
      unint64_t v58 = v136;
      if (v136 < v137)
      {
        sub_1506770(v136);
        uint64_t v52 = v58 + 72;
LABEL_139:
        a3 = v99;
        goto LABEL_140;
      }
    }
    uint64_t v52 = sub_19A8F38((uint64_t)&v135);
    goto LABEL_139;
  }
LABEL_172:
  memset(&v113, 0, sizeof(v113));
  sub_19A9DD8((uint64_t *)&v113, 0, v130, (uint64_t)v131, (v131 - v130) >> 5);
  sub_19A9DD8((uint64_t *)&v113, (_DWORD *)v113.__r_.__value_.__l.__size_, v127, (uint64_t)v128, ((char *)v128 - v127) >> 5);
  if (v126)
  {
    sub_19A622C(&v124, a2, &v106);
    uint64_t v80 = v106;
    uint64_t v79 = v107;
    int v81 = 954437177 * ((unint64_t)((char *)v107 - (char *)v106) >> 3);
    if (v81 != -1) {
      sub_188CC60((uint64_t)&v148, v149 + v81);
    }
    while (v80 != v79)
    {
      if (v150 && (uint64_t v82 = v149, v149 < *v150))
      {
        ++v149;
        std::string v83 = *(std::string **)&v150[2 * v82 + 2];
      }
      else
      {
        uint64_t v84 = sub_150E85C(v148);
        std::string v83 = (std::string *)sub_188CDC8((uint64_t)&v148, v84);
      }
      sub_15072C8(v83, (uint64_t)v80);
      v80 += 3;
    }
    char v103 = &v106;
    sub_19A91DC((void ***)&v103);
  }
  uint64_t v86 = v135;
  unint64_t v85 = v136;
  if (v136 != v135)
  {
    int v87 = 954437177 * ((v136 - v135) >> 3);
    if (v87 != -1) {
      sub_188CC60((uint64_t)&v141, v142 + v87);
    }
    do
    {
      if (v143 && (uint64_t v88 = v142, v142 < *v143))
      {
        ++v142;
        char v89 = *(std::string **)&v143[2 * v88 + 2];
      }
      else
      {
        uint64_t v90 = sub_150E85C(v141);
        char v89 = (std::string *)sub_188CDC8((uint64_t)&v141, v90);
      }
      sub_15072C8(v89, v86);
      v86 += 72;
    }
    while (v86 != v85);
    v147 |= 1u;
    char v91 = v151;
    if (!v151)
    {
      long long v92 = (void *)(v146 & 0xFFFFFFFFFFFFFFFCLL);
      if (v146) {
        long long v92 = (void *)*v92;
      }
      char v91 = (std::string *)sub_150E85C((uint64_t)v92);
      char v151 = v91;
    }
    sub_1507148(v91, (uint64_t)v139);
  }
  if ((v147 & 1) != 0 || v149 >= 1)
  {
    sub_15017A8((uint64_t)a4, (uint64_t)&v145);
    char v93 = 1;
  }
  else
  {
    char v93 = 0;
    *a4 = 0;
  }
  a4[56] = v93;
  char v106 = &v113;
  sub_19A8630((void ***)&v106);
  sub_2F020((uint64_t)&v124, v125);
  v113.__r_.__value_.__r.__words[0] = (std::string::size_type)&v127;
  sub_19A8630((void ***)&v113);
  v113.__r_.__value_.__r.__words[0] = (std::string::size_type)&v130;
  sub_19A8630((void ***)&v113);
  sub_2F020((uint64_t)&v133, v134[0]);
  v113.__r_.__value_.__r.__words[0] = (std::string::size_type)&v135;
  sub_19A91DC((void ***)&v113);
  v113.__r_.__value_.__r.__words[0] = (std::string::size_type)v138;
  sub_19079A8((void ***)&v113);
  sub_1506848((uint64_t)v139);
  return sub_1507620((uint64_t)&v145);
}

void sub_19A7920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,__int16 a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,char a61,uint64_t a62,uint64_t a63)
{
  a22 = (uint64_t)&a29;
  sub_19A91DC((void ***)&a22);
  a22 = (uint64_t)&a39;
  sub_19A8630((void ***)&a22);
  sub_2F020((uint64_t)&a58, (char *)a59);
  a22 = (uint64_t)&a61;
  sub_19A8630((void ***)&a22);
  a22 = (uint64_t)&a64;
  sub_19A8630((void ***)&a22);
  sub_2F020((uint64_t)&a67, (char *)a68);
  a22 = (uint64_t)&a70;
  sub_19A91DC((void ***)&a22);
  a22 = v70 - 240;
  sub_19079A8((void ***)&a22);
  sub_1506848(v70 - 216);
  sub_1507620(v70 - 144);
  _Unwind_Resume(a1);
}

void *sub_19A7B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  int v4 = *(_DWORD *)(a1 + 40);
  if (v4)
  {
    uint64_t v6 = *(uint64_t (****)())(*(void *)(a1 + 56) + 272);
  }
  else
  {
    if ((v4 & 0x800) == 0)
    {
      uint64_t result = sub_15073A0(a3, 0, 0);
      a3[8] = 0;
      a3[9] = 0;
      a3[7] = a3 + 8;
      return result;
    }
    uint64_t v6 = *(uint64_t (****)())(*(void *)(a1 + 144) + 184);
  }
  if (v6) {
    unint64_t v7 = v6;
  }
  else {
    unint64_t v7 = &off_2530F90;
  }

  return sub_19A7BEC((uint64_t)v7, a2, a3);
}

void *sub_19A7BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*(int *)(a1 + 32) <= 0)
  {
    uint64_t result = sub_15073A0(a3, 0, 0);
    a3[8] = 0;
    a3[9] = 0;
    a3[7] = a3 + 8;
  }
  else
  {
    memset(v24, 0, sizeof(v24));
    int v25 = 1065353216;
    uint64_t v6 = (void *)qword_254DD20;
    uint64_t v7 = qword_254DD28;
    while (v6 != (void *)v7)
    {
      uint64_t v8 = (void *)*v6;
      if ((void *)*v6 != v6 + 1)
      {
        do
        {
          sub_24AFC((uint64_t)v24, (uint64_t)(v8 + 4), (uint64_t)(v8 + 4));
          uint64_t v9 = (void *)v8[1];
          if (v9)
          {
            do
            {
              uint64_t v10 = v9;
              uint64_t v9 = (void *)*v9;
            }
            while (v9);
          }
          else
          {
            do
            {
              uint64_t v10 = (void *)v8[2];
              BOOL v11 = *v10 == (void)v8;
              uint64_t v8 = v10;
            }
            while (!v11);
          }
          uint64_t v8 = v10;
        }
        while (v10 != v6 + 1);
      }
      v6 += 3;
    }
    v21.__r_.__value_.__s.__data_[0] = 0;
    char v23 = 0;
    if (*(_DWORD *)(a1 + 80) == 2) {
      sub_19A6930(a1, (void ****)&qword_254DD20, v24, &v17);
    }
    else {
      sub_19A6D78(a1, (void ****)&qword_254DD20, v24, &v17);
    }
    sub_19AA000(&v21, (uint64_t)&v17);
    if (v20) {
      sub_1507620((uint64_t)&v17);
    }
    if (v23 && ((v21.__r_.__value_.__s.__data_[16] & 1) != 0 || v22 >= 1))
    {
      sub_19A7F78(a2, &v17);
      sub_15017A8((uint64_t)a3, (uint64_t)&v21);
      unint64_t v14 = v17;
      unint64_t v13 = v18;
      a3[8] = v18;
      uint64_t v15 = a3 + 8;
      a3[7] = v14;
      uint64_t v16 = v19;
      a3[9] = v19;
      if (v16)
      {
        v13[2] = v15;
        uint64_t v17 = &v18;
        uint64_t v18 = 0;
        uint64_t v19 = 0;
        unint64_t v13 = 0;
      }
      else
      {
        a3[7] = v15;
      }
      sub_1896400((uint64_t)&v17, v13);
    }
    else
    {
      sub_15073A0(a3, 0, 0);
      a3[8] = 0;
      a3[9] = 0;
      a3[7] = a3 + 8;
    }
    if (v23) {
      sub_1507620((uint64_t)&v21);
    }
    return (void *)sub_1898170((uint64_t)v24);
  }
  return result;
}

void sub_19A7DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  if (a24) {
    sub_1507620((uint64_t)&a17);
  }
  sub_1898170(v24 - 112);
  _Unwind_Resume(a1);
}

uint64_t sub_19A7E50@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(unsigned int *)(result + 24);
  if ((int)v3 < 1)
  {
LABEL_8:
    *a2 = 0;
    a2[64] = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(result + 32);
    if (v4) {
      uint64_t v5 = (void *)(v4 + 8);
    }
    else {
      uint64_t v5 = 0;
    }
    uint64_t v6 = 8 * v3;
    while (1)
    {
      sub_12A6018(v7, *v5);
      if (v7[12] == 1) {
        break;
      }
      uint64_t result = sub_12A6104(v7);
      ++v5;
      v6 -= 8;
      if (!v6) {
        goto LABEL_8;
      }
    }
    sub_12A6018(a2, v7);
    a2[64] = 1;
    return sub_12A6104(v7);
  }
  return result;
}

void sub_19A7EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_19A7F08@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  int v2 = *(_DWORD *)(result + 40);
  if ((v2 & 1) != 0
    && (uint64_t v3 = *(void *)(result + 56), (*(unsigned char *)(v3 + 41) & 0x40) != 0)
    && (uint64_t v4 = *(void *)(v3 + 272), (*(unsigned char *)(v4 + 16) & 1) != 0)
    && (uint64_t v5 = *(void *)(v4 + 72), (*(unsigned char *)(v5 + 16) & 1) != 0))
  {
    uint64_t v9 = *(void *)(v5 + 48);
  }
  else
  {
    if ((v2 & 0x800) == 0
      || (uint64_t v6 = *(void *)(result + 144), (*(unsigned char *)(v6 + 16) & 0x80) == 0)
      || (uint64_t v7 = *(void *)(v6 + 184), (*(unsigned char *)(v7 + 16) & 1) == 0)
      || (uint64_t v8 = *(void *)(v7 + 72), (*(unsigned char *)(v8 + 16) & 1) == 0))
    {
      *a2 = 0;
      a2[64] = 0;
      return result;
    }
    uint64_t v9 = *(void *)(v8 + 48);
  }
  return sub_19A7E50(v9, a2);
}

void sub_19A7F78(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(a1 + 1104);
  sub_5E5C(__p, "search_filter_config");
  uint64_t v4 = sub_1908254(v3, (unsigned __int8 *)__p);
  uint64_t v5 = v4;
  if (v10 < 0)
  {
    operator delete(__p[0]);
    if (!v5)
    {
LABEL_6:
      a2[2] = 0;
      a2[1] = 0;
      *a2 = a2 + 1;
      return;
    }
  }
  else if (!v4)
  {
    goto LABEL_6;
  }
  if ((*(uint64_t (**)(void))(**((void **)v5 + 5) + 8))(*((void *)v5 + 5))) {
    goto LABEL_6;
  }
  uint64_t v6 = (const void *)*((void *)v5 + 5);
  if (v6)
  {
    if (v7)
    {
      uint64_t v8 = (std::__shared_weak_count *)*((void *)v5 + 6);
      if (v8) {
        atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v8 = 0;
LABEL_13:
  sub_5E5C(__p, "v2Mapping");
  sub_1CB8D3C((uint64_t)v7, a2);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  if (v8) {
    sub_20A69F0(v8);
  }
}

void sub_19A80D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (v15) {
    sub_20A69F0(v15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_19A811C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 40);
  if (v1)
  {
    uint64_t v3 = (uint64_t (****)())(*(void *)(a1 + 56) + 272);
  }
  else
  {
    if ((v1 & 0x800) == 0) {
      return 0;
    }
    uint64_t v3 = (uint64_t (****)())(*(void *)(a1 + 144) + 184);
  }
  uint64_t v4 = *v3;
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = &off_2530F90;
  }
  uint64_t result = sub_19A8178((uint64_t)v5);
  if ((result & 0xFF00000000) != 0) {
    return result;
  }
  else {
    return 0;
  }
}

uint64_t sub_19A8178(uint64_t a1)
{
  uint64_t v1 = *(int *)(a1 + 32);
  if (!v1) {
    return 0x100000000;
  }
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    uint64_t v3 = (uint64_t *)(v2 + 8);
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 8 * v1;
  while (1)
  {
    uint64_t v5 = *v3;
    int v6 = *(_DWORD *)(*v3 + 16);
    if ((v6 & 0x40) != 0 && (v6 & 8) != 0 && *(_DWORD *)(v5 + 72) == 4)
    {
      uint64_t v7 = *(void *)(v5 + 48);
      if ((*(unsigned char *)(v7 + 16) & 2) != 0)
      {
        uint64_t v8 = *(int *)(v7 + 56);
        if (*(_DWORD *)(v7 + 32) > v8)
        {
          uint64_t v9 = *(void *)(*(void *)(v7 + 40) + 8 * v8 + 8);
          if ((*(unsigned char *)(v9 + 16) & 8) != 0)
          {
            uint64_t v10 = *(void *)(v9 + 48);
            if (*(_DWORD *)(v10 + 40) == 2)
            {
              BOOL v11 = *(uint64_t (****)())(v10 + 32);
              if (!v11) {
                BOOL v11 = &off_2530B28;
              }
              if (((_BYTE)v11[2] & 2) != 0) {
                break;
              }
            }
          }
        }
      }
    }
    ++v3;
    v4 -= 8;
    if (!v4) {
      return 0x100000000;
    }
  }
  int v13 = *((_DWORD *)v11 + 8);
  uint64_t v14 = 0x100000000;
  if (v13 == 2) {
    uint64_t v14 = 0x100000006;
  }
  if (v13 == 1) {
    return 0x100000007;
  }
  else {
    return v14;
  }
}

uint64_t *sub_19A8248(uint64_t a1, const void ***a2, const void ***a3, uint64_t *a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  BOOL v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    int v6 = a2;
    do
    {
      sub_1897AE4(v4, v6);
      v6 += 3;
      uint64_t v4 = v11 + 3;
      v11 += 3;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_19A82EC((uint64_t)v8);
  return v4;
}

void sub_19A82D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_19A82EC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_19A8324(a1);
  }
  return a1;
}

void sub_19A8324(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  if (v1 != v2)
  {
    do
    {
      uint64_t v3 = v1 - 24;
      sub_2F020(v1 - 24, *(char **)(v1 - 16));
      uint64_t v1 = v3;
    }
    while (v3 != v2);
  }
}

void sub_19A8370(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char **)**a1;
  if (v2)
  {
    uint64_t v4 = (char **)v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        int v6 = v4 - 3;
        sub_2F020((uint64_t)(v4 - 3), *(v4 - 2));
        uint64_t v4 = v6;
      }
      while (v6 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

char *sub_19A83FC(char *__dst, long long *a2, long long *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v5;
  }
  int v6 = __dst + 24;
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200(v6, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)int v6 = v7;
  }
  return __dst;
}

void sub_19A8478(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_19A8494(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    if (*(char *)(a1 + 47) < 0) {
      operator delete(*(void **)(a1 + 24));
    }
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
  }
  return a1;
}

uint64_t sub_19A84E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v13 = a4;
  uint64_t v14 = a4;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  char v12 = 0;
  if (a2 != a3)
  {
    int v6 = (long long *)(a2 + 8);
    do
    {
      uint64_t v7 = (uint64_t)v6 - 8;
      *(_DWORD *)uint64_t v4 = *((_DWORD *)v6 - 2);
      uint64_t v8 = (unsigned char *)(v4 + 8);
      if (*((char *)v6 + 23) < 0)
      {
        sub_4200(v8, *(void **)v6, *((void *)v6 + 1));
        uint64_t v4 = v14;
      }
      else
      {
        long long v9 = *v6;
        *(void *)(v4 + 24) = *((void *)v6 + 2);
        *(_OWORD *)uint64_t v8 = v9;
      }
      v4 += 32;
      uint64_t v14 = v4;
      v6 += 2;
    }
    while (v7 + 32 != a3);
  }
  char v12 = 1;
  sub_19A85B0((uint64_t)v11);
  return v4;
}

void sub_19A859C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_19A85B0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_19A85E8(a1);
  }
  return a1;
}

void sub_19A85E8(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 32;
  }
}

void sub_19A8630(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_19A8684((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_19A8684(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 32)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

uint64_t sub_19A86D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  int v6 = (void *)sub_4BC310(a1, a3);
  void v6[5] = 0;
  v6[6] = 0;
  v6 += 5;
  v6[2] = 0;
  sub_19A8730(v6, *a4, a4[1], (a4[1] - *a4) >> 5);
  return a1;
}

void sub_19A871C(_Unwind_Exception *a1)
{
  sub_1898170(v1);
  _Unwind_Resume(a1);
}

void *sub_19A8730(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    int v6 = result;
    sub_19168D4(result, a4);
    uint64_t result = (void *)sub_19A87B8((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_19A8798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_19A8630(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_19A87B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v13 = a4;
  uint64_t v14 = a4;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  char v12 = 0;
  if (a2 != a3)
  {
    int v6 = (long long *)(a2 + 8);
    do
    {
      uint64_t v7 = (uint64_t)v6 - 8;
      *(_DWORD *)uint64_t v4 = *((_DWORD *)v6 - 2);
      uint64_t v8 = (unsigned char *)(v4 + 8);
      if (*((char *)v6 + 23) < 0)
      {
        sub_4200(v8, *(void **)v6, *((void *)v6 + 1));
        uint64_t v4 = v14;
      }
      else
      {
        long long v9 = *v6;
        *(void *)(v4 + 24) = *((void *)v6 + 2);
        *(_OWORD *)uint64_t v8 = v9;
      }
      v4 += 32;
      uint64_t v14 = v4;
      v6 += 2;
    }
    while (v7 + 32 != a3);
  }
  char v12 = 1;
  sub_19A85B0((uint64_t)v11);
  return v4;
}

void sub_19A8874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

unsigned char *sub_19A8888(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[144] = 0;
  sub_19A88CC((uint64_t)a1, a2);
  return a1;
}

void sub_19A88B8(_Unwind_Exception *a1)
{
  sub_19A8930(v1);
  _Unwind_Resume(a1);
}

__n128 sub_19A88CC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 64))
  {
    *(unsigned char *)a1 = 0;
    *(unsigned char *)(a1 + 72) = 0;
    sub_1893348(a1 + 80, (uint64_t *)a2);
    *(void *)(a1 + 120) = 0;
    *(void *)(a1 + 128) = 0;
    *(void *)(a1 + 136) = 0;
    __n128 result = *(__n128 *)(a2 + 40);
    *(__n128 *)(a1 + 120) = result;
    *(void *)(a1 + 136) = *(void *)(a2 + 56);
    *(void *)(a2 + 40) = 0;
    *(void *)(a2 + 48) = 0;
    *(void *)(a2 + 56) = 0;
    *(unsigned char *)(a1 + 144) = 1;
  }
  return result;
}

uint64_t sub_19A8930(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 144))
  {
    uint64_t v3 = (void **)(a1 + 120);
    sub_19A8630(&v3);
    sub_1898170(a1 + 80);
    if (*(unsigned char *)(a1 + 72)) {
      sub_1506848(a1);
    }
  }
  return a1;
}

uint64_t sub_19A898C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v3 = (void **)(a1 + 40);
    sub_19A8630(&v3);
    sub_1898170(a1);
  }
  return a1;
}

std::string *sub_19A89D8(std::string *a1, uint64_t a2)
{
  a1->__r_.__value_.__s.__data_[0] = 0;
  a1[3].__r_.__value_.__s.__data_[0] = 0;
  if (*(unsigned char *)(a2 + 72))
  {
    sub_19A8A50(a1, a2);
    a1[3].__r_.__value_.__s.__data_[0] = 1;
  }
  sub_1893348((uint64_t)&a1[3].__r_.__value_.__l.__size_, (uint64_t *)(a2 + 80));
  a1[5].__r_.__value_.__r.__words[0] = 0;
  a1[5].__r_.__value_.__l.__size_ = 0;
  a1[5].__r_.__value_.__r.__words[2] = 0;
  *(_OWORD *)&a1[5].__r_.__value_.__l.__data_ = *(_OWORD *)(a2 + 120);
  a1[5].__r_.__value_.__r.__words[2] = *(void *)(a2 + 136);
  *(void *)(a2 + 120) = 0;
  *(void *)(a2 + 128) = 0;
  *(void *)(a2 + 136) = 0;
  return a1;
}

std::string *sub_19A8A50(std::string *a1, uint64_t a2)
{
  sub_1506560((uint64_t)a1, 0, 0);
  if (a1 != (std::string *)a2)
  {
    std::string::size_type size = a1->__r_.__value_.__l.__size_;
    if ((size & 2) != 0)
    {
      long long v5 = 0;
    }
    else
    {
      long long v5 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        long long v5 = (void *)*v5;
      }
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if ((v6 & 2) != 0)
    {
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
    }
    if (v5 == v7) {
      sub_150731C((uint64_t)a1, a2);
    }
    else {
      sub_15072C8(a1, a2);
    }
  }
  return a1;
}

std::string *sub_19A8AF0(std::string *a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  a1->__r_.__value_.__s.__data_[0] = 0;
  a1[3].__r_.__value_.__s.__data_[0] = 0;
  if (*(unsigned char *)(a2 + 72))
  {
    sub_19A8A50(a1, a2);
    a1[3].__r_.__value_.__s.__data_[0] = 1;
  }
  sub_1893348((uint64_t)&a1[3].__r_.__value_.__l.__size_, a3);
  a1[5].__r_.__value_.__r.__words[0] = 0;
  a1[5].__r_.__value_.__l.__size_ = 0;
  a1[5].__r_.__value_.__r.__words[2] = 0;
  sub_19A8730(a1[5].__r_.__value_.__r.__words, *a4, a4[1], (a4[1] - *a4) >> 5);
  return a1;
}

void sub_19A8B70(_Unwind_Exception *a1)
{
  sub_1898170(v2);
  if (*(unsigned char *)(v1 + 72)) {
    sub_1506848(v1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_19A8B94(uint64_t *a1, void *a2)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t result = a2[1];
  while (v4 != v5)
  {
    v4 -= 64;
    uint64_t result = sub_19A8C1C(result - 64, v4);
  }
  a2[1] = result;
  uint64_t v7 = *a1;
  *a1 = result;
  a2[1] = v7;
  uint64_t v8 = a1[1];
  a1[1] = a2[2];
  a2[2] = v8;
  uint64_t v9 = a1[2];
  a1[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

uint64_t sub_19A8C1C(uint64_t a1, uint64_t a2)
{
  sub_12AD338(a1, 0, 0);
  if (a1 != a2)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if ((v4 & 2) != 0)
    {
      uint64_t v5 = 0;
    }
    else
    {
      uint64_t v5 = (void *)(v4 & 0xFFFFFFFFFFFFFFFCLL);
      if (v4) {
        uint64_t v5 = (void *)*v5;
      }
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if ((v6 & 2) != 0)
    {
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
    }
    if (v5 == v7) {
      sub_12AE268(a1, a2);
    }
    else {
      sub_12AE1F0(a1, a2);
    }
  }
  return a1;
}

uint64_t sub_19A8CBC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 64;
    sub_12AD5EC(i - 64);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_19A8D0C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_19A8D84((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_19A8D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = a7;
    do
    {
      int v9 = *(_DWORD *)(a3 - 32);
      a3 -= 32;
      *(_DWORD *)(v8 - 32) = v9;
      v8 -= 32;
      long long v10 = *(_OWORD *)(a3 + 8);
      *(void *)(v8 + 24) = *(void *)(a3 + 24);
      *(_OWORD *)(v8 + 8) = v10;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      *(void *)(a3 + 8) = 0;
      v7 -= 32;
    }
    while (a3 != a5);
    *((void *)&v16 + 1) = v8;
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_19A8E28((uint64_t)v13);
  return v11;
}

uint64_t sub_19A8E28(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_19A8E60(a1);
  }
  return a1;
}

void sub_19A8E60(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 31) < 0) {
      operator delete(*(void **)(v1 + 8));
    }
    v1 += 32;
  }
}

uint64_t sub_19A8EA8(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_19A8EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 32;
      *(void *)(a1 + 16) = v2 - 32;
      if (*(char *)(v2 - 1) < 0)
      {
        operator delete(*(void **)(v2 - 24));
        uint64_t v5 = *(void *)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

uint64_t sub_19A8F38(uint64_t a1)
{
  uint64_t v2 = *(std::string **)a1;
  unint64_t v3 = 0x8E38E38E38E38E39 * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x38E38E38E38E38ELL) {
    sub_2E00();
  }
  uint64_t v5 = a1 + 16;
  unint64_t v6 = 0x8E38E38E38E38E39 * ((uint64_t)(*(void *)(a1 + 16) - (void)v2) >> 3);
  if (2 * v6 > v4) {
    unint64_t v4 = 2 * v6;
  }
  if (v6 >= 0x1C71C71C71C71C7) {
    unint64_t v7 = 0x38E38E38E38E38ELL;
  }
  else {
    unint64_t v7 = v4;
  }
  uint64_t v15 = a1 + 16;
  if (v7) {
    uint64_t v8 = (char *)sub_1916EC4(v5, v7);
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v11 = v8;
  char v12 = &v8[72 * v3];
  char v14 = &v8[72 * v7];
  sub_1506770(v12);
  uint64_t v13 = v12 + 72;
  sub_19A9058((std::string **)a1, &v11);
  uint64_t v9 = *(void *)(a1 + 8);
  sub_19A90E0((uint64_t)&v11);
  return v9;
}

void sub_19A9044(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19A90E0((uint64_t)va);
  _Unwind_Resume(a1);
}

std::string *sub_19A9058(std::string **a1, void *a2)
{
  uint64_t v5 = *a1;
  uint64_t v4 = (uint64_t)a1[1];
  uint64_t result = (std::string *)a2[1];
  while ((std::string *)v4 != v5)
  {
    v4 -= 72;
    uint64_t result = sub_19A8A50(result - 3, v4);
  }
  a2[1] = result;
  unint64_t v7 = *a1;
  *a1 = result;
  a2[1] = v7;
  uint64_t v8 = a1[1];
  a1[1] = (std::string *)a2[2];
  a2[2] = v8;
  uint64_t v9 = a1[2];
  a1[2] = (std::string *)a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

uint64_t sub_19A90E0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 72;
    sub_1506848(i - 72);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

std::string *sub_19A9130(std::string *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  a1->__r_.__value_.__s.__data_[0] = 0;
  a1[3].__r_.__value_.__s.__data_[0] = 0;
  if (*(unsigned char *)(a2 + 72))
  {
    sub_19A8A50(a1, a2);
    a1[3].__r_.__value_.__s.__data_[0] = 1;
  }
  sub_4BC310((uint64_t)&a1[3].__r_.__value_.__l.__size_, a3);
  a1[5].__r_.__value_.__r.__words[0] = 0;
  a1[5].__r_.__value_.__l.__size_ = 0;
  a1[5].__r_.__value_.__r.__words[2] = 0;
  sub_19A8730(a1[5].__r_.__value_.__r.__words, *a4, a4[1], (a4[1] - *a4) >> 5);
  return a1;
}

void sub_19A91B0(_Unwind_Exception *a1)
{
  sub_1898170(v2);
  if (*(unsigned char *)(v1 + 72)) {
    sub_1506848(v1);
  }
  _Unwind_Resume(a1);
}

void sub_19A91DC(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_1506848(v4 - 72);
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_19A9260(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_12AD5EC(v4 - 64);
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

unsigned char *sub_19A92E4(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[48] = 0;
  if (*(unsigned char *)(a2 + 32))
  {
    sub_19A933C((uint64_t)a1, (long long *)a2);
    a1[48] = 1;
  }
  return a1;
}

void sub_19A9328(_Unwind_Exception *a1)
{
  sub_19A8494(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_19A933C(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v3;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  sub_5E5C((void *)(a1 + 24), *((char **)a2 + 3));
  return a1;
}

void sub_19A9380(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

double sub_19A939C@<D0>(void *a1@<X0>, void *a2@<X1>, void **a3@<X2>, void **a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)&long long v20 = a5;
  *((void *)&v20 + 1) = a6;
  if (a1 != a2)
  {
    long long v10 = a3;
    if (a3 != a4)
    {
      uint64_t v11 = a1;
      do
      {
        if ((sub_1122114(v11 + 4, v10 + 4) & 0x80) != 0)
        {
          uint64_t v15 = (void *)v11[1];
          if (v15)
          {
            do
            {
              uint64_t v11 = v15;
              uint64_t v15 = (void *)*v15;
            }
            while (v15);
          }
          else
          {
            do
            {
              long long v16 = v11;
              uint64_t v11 = (void *)v11[2];
            }
            while ((void *)*v11 != v16);
          }
        }
        else
        {
          if ((sub_1122114(v10 + 4, (void **)v11 + 4) & 0x80) != 0)
          {
            uint64_t v13 = v11;
          }
          else
          {
            sub_19A94E4((uint64_t)&v20, (const void **)v11 + 4);
            char v12 = (void *)v11[1];
            if (v12)
            {
              do
              {
                uint64_t v13 = v12;
                char v12 = (void *)*v12;
              }
              while (v12);
            }
            else
            {
              do
              {
                uint64_t v13 = (void *)v11[2];
                BOOL v14 = *v13 == (void)v11;
                uint64_t v11 = v13;
              }
              while (!v14);
            }
          }
          uint64_t v17 = (void **)v10[1];
          if (v17)
          {
            do
            {
              long long v10 = v17;
              uint64_t v17 = (void **)*v17;
            }
            while (v17);
          }
          else
          {
            do
            {
              uint64_t v18 = v10;
              long long v10 = (void **)v10[2];
            }
            while (*v10 != v18);
          }
          uint64_t v11 = v13;
        }
      }
      while (v11 != a2 && v10 != a4);
    }
  }
  *(void *)a7 = a2;
  *(void *)(a7 + 8) = a4;
  double result = *(double *)&v20;
  *(_OWORD *)(a7 + 16) = v20;
  return result;
}

uint64_t sub_19A94E4(uint64_t a1, const void **a2)
{
  long long v3 = sub_1897BC8(*(uint64_t ***)a1, *(uint64_t **)(a1 + 8), a2, (uint64_t)a2);
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = (uint64_t *)v3[1];
  if (v4)
  {
    do
    {
      uint64_t v5 = v4;
      uint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  else
  {
    do
    {
      uint64_t v5 = (uint64_t *)v3[2];
      BOOL v6 = *v5 == (void)v3;
      long long v3 = v5;
    }
    while (!v6);
  }
  *(void *)(a1 + 8) = v5;
  return a1;
}

uint64_t sub_19A9550(uint64_t *a1, const void ***a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    long long v10 = (char *)sub_112C518(v7, v9);
  }
  else {
    long long v10 = 0;
  }
  uint64_t v13 = v10;
  BOOL v14 = (uint64_t *)&v10[24 * v4];
  long long v16 = &v10[24 * v9];
  sub_1897AE4(v14, a2);
  uint64_t v15 = v14 + 3;
  sub_19A9658(a1, &v13);
  uint64_t v11 = a1[1];
  sub_19A9810(&v13);
  return v11;
}

void sub_19A9644(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19A9810((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_19A9658(uint64_t *a1, void *a2)
{
  uint64_t result = sub_19A96D0((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_19A96D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v19 = a6;
  *((void *)&v19 + 1) = a7;
  long long v18 = v19;
  v16[0] = a1;
  v16[1] = &v18;
  v16[2] = &v19;
  if (a3 == a5)
  {
    uint64_t v14 = a6;
  }
  else
  {
    uint64_t v8 = a3;
    do
    {
      uint64_t v9 = *(void *)(v8 - 24);
      v8 -= 24;
      *(void *)(v7 - 24) = v9;
      long long v10 = (void *)(a3 - 16);
      uint64_t v11 = *(void *)(a3 - 16);
      *(void *)(v7 - 16) = v11;
      uint64_t v12 = v7 - 16;
      uint64_t v13 = *(void *)(a3 - 8);
      *(void *)(v7 - 8) = v13;
      if (v13)
      {
        *(void *)(v11 + 16) = v12;
        *(void *)(a3 - 24) = v10;
        *long long v10 = 0;
        *(void *)(a3 - 8) = 0;
      }
      else
      {
        *(void *)(v7 - 24) = v12;
      }
      uint64_t v7 = *((void *)&v19 + 1) - 24;
      *((void *)&v19 + 1) -= 24;
      a3 = v8;
    }
    while (v8 != a5);
    uint64_t v14 = v19;
  }
  char v17 = 1;
  sub_19A9794((uint64_t)v16);
  return v14;
}

uint64_t sub_19A9794(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_19A97CC(a1);
  }
  return a1;
}

void sub_19A97CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    sub_2F020(v1, *(char **)(v1 + 8));
    v1 += 24;
  }
}

void **sub_19A9810(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_19A9844(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 24;
    sub_2F020(i - 24, *(char **)(i - 16));
  }
}

_DWORD *sub_19A988C(uint64_t *a1, _DWORD *a2, _DWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a2;
  if (a5 >= 1)
  {
    uint64_t v11 = a1[2];
    uint64_t v9 = (uint64_t)(a1 + 2);
    uint64_t v10 = v11;
    unint64_t v12 = *(void *)(v9 - 8);
    if (a5 <= (uint64_t)(v11 - v12) >> 5)
    {
      uint64_t v19 = v12 - (void)a2;
      uint64_t v20 = (uint64_t)(v12 - (void)a2) >> 5;
      if (v20 >= a5)
      {
        std::string v21 = &a3[8 * a5];
      }
      else
      {
        std::string v21 = &a3[8 * v20];
        a1[1] = sub_19A84E0(v9, (uint64_t)v21, a4, *(void *)(v9 - 8));
        if (v19 < 1) {
          return v5;
        }
      }
      sub_19A9A0C((uint64_t)a1, (uint64_t)v5, v12, (uint64_t)&v5[8 * a5]);
      sub_19A9C84(a3, v21, v5);
    }
    else
    {
      uint64_t v13 = *a1;
      unint64_t v14 = a5 + ((uint64_t)(v12 - *a1) >> 5);
      if (v14 >> 59) {
        sub_2E00();
      }
      uint64_t v15 = ((uint64_t)a2 - v13) >> 5;
      uint64_t v16 = v10 - v13;
      if (v16 >> 4 > v14) {
        unint64_t v14 = v16 >> 4;
      }
      if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFE0) {
        unint64_t v17 = 0x7FFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v17 = v14;
      }
      uint64_t v27 = v9;
      if (v17) {
        long long v18 = (char *)sub_18B0970(v9, v17);
      }
      else {
        long long v18 = 0;
      }
      char v23 = v18;
      uint64_t v24 = &v18[32 * v15];
      int v25 = v24;
      unint64_t v26 = &v18[32 * v17];
      sub_19A9A8C(&v23, (uint64_t)a3, a5);
      uint64_t v5 = (_DWORD *)sub_19A9B34(a1, &v23, (uint64_t)v5);
      sub_19A8EA8((uint64_t)&v23);
    }
  }
  return v5;
}

void sub_19A99EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

uint64_t sub_19A9A0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  uint64_t v8 = v6;
  if (v7 < a3)
  {
    unint64_t v9 = v7;
    uint64_t v8 = *(void *)(a1 + 8);
    do
    {
      *(_DWORD *)uint64_t v8 = *(_DWORD *)v9;
      long long v10 = *(_OWORD *)(v9 + 8);
      *(void *)(v8 + 24) = *(void *)(v9 + 24);
      *(_OWORD *)(v8 + 8) = v10;
      *(void *)(v9 + 16) = 0;
      *(void *)(v9 + 24) = 0;
      *(void *)(v9 + 8) = 0;
      v8 += 32;
      v9 += 32;
    }
    while (v9 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_19A9BE8((uint64_t)&v12, a2, v7, v6);
}

void *sub_19A9A8C(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = result;
  uint64_t v4 = result[2];
  if (a3)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 32 * a3;
    uint64_t v8 = v4 + 32 * a3;
    do
    {
      *(_DWORD *)(v4 + v6) = *(_DWORD *)(a2 + v6);
      uint64_t result = (void *)(v4 + v6 + 8);
      unint64_t v9 = (void **)(a2 + v6 + 8);
      if (*(char *)(a2 + v6 + 31) < 0)
      {
        uint64_t result = sub_4200(result, *v9, *(void *)(a2 + v6 + 16));
      }
      else
      {
        long long v10 = *(_OWORD *)v9;
        *(void *)(v4 + v6 + 24) = *(void *)(a2 + v6 + 24);
        *(_OWORD *)uint64_t result = v10;
      }
      v6 += 32;
    }
    while (v7 != v6);
  }
  else
  {
    uint64_t v8 = result[2];
  }
  v3[2] = v8;
  return result;
}

void sub_19A9B28(_Unwind_Exception *a1)
{
  *(void *)(v1 + 16) = v2 + v3;
  _Unwind_Resume(a1);
}

uint64_t sub_19A9B34(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = (uint64_t)(a1 + 2);
  sub_19A8D84((uint64_t)(a1 + 2), a3, a3, *a1, *a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_19A9CE8(v7, a3, a1[1], a2[2]);
  uint64_t v9 = *a1;
  *a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = a1[1];
  a1[1] = a2[2];
  a2[2] = v10;
  uint64_t v11 = a1[2];
  a1[2] = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_19A9BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = a3 + v7;
      *(_DWORD *)(a4 + v7 - 32) = *(_DWORD *)(a3 + v7 - 32);
      uint64_t v9 = (void **)(a4 + v7 - 24);
      if (*(char *)(a4 + v7 - 1) < 0) {
        operator delete(*v9);
      }
      long long v10 = *(_OWORD *)(v8 - 24);
      *(void *)(a4 + v7 - 8) = *(void *)(v8 - 8);
      *(_OWORD *)uint64_t v9 = v10;
      *(unsigned char *)(v8 - 1) = 0;
      *(unsigned char *)(v8 - 24) = 0;
      v7 -= 32;
    }
    while (a3 + v7 != a2);
  }
  return a3;
}

_DWORD *sub_19A9C84(_DWORD *a1, _DWORD *a2, _DWORD *a3)
{
  uint64_t v4 = a1;
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = a2;
  do
  {
    uint64_t v6 = (const std::string *)(v4 + 2);
    int v7 = *v4;
    v4 += 8;
    uint64_t v8 = (std::string *)(a3 + 2);
    *a3 = v7;
    a3 += 8;
    std::string::operator=(v8, v6);
  }
  while (v4 != v5);
  return v5;
}

uint64_t sub_19A9CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      *(_DWORD *)uint64_t v4 = *(_DWORD *)a2;
      long long v5 = *(_OWORD *)(a2 + 8);
      *(void *)(v4 + 24) = *(void *)(a2 + 24);
      *(_OWORD *)(v4 + 8) = v5;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 8) = 0;
      v4 += 32;
      a2 += 32;
    }
    while (a2 != a3);
    uint64_t v10 = v4;
  }
  char v8 = 1;
  sub_19A85B0((uint64_t)v7);
  return v4;
}

unsigned char *sub_19A9D78(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[72] = 0;
  if (*(unsigned char *)(a2 + 72))
  {
    sub_1506770(a1);
    a1[72] = 1;
  }
  return a1;
}

void sub_19A9DBC(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 72)) {
    sub_1506848(v1);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_19A9DD8(uint64_t *a1, _DWORD *a2, _DWORD *a3, uint64_t a4, uint64_t a5)
{
  long long v5 = a2;
  if (a5 >= 1)
  {
    uint64_t v11 = a1[2];
    uint64_t v9 = (uint64_t)(a1 + 2);
    uint64_t v10 = v11;
    unint64_t v12 = *(void *)(v9 - 8);
    if (a5 <= (uint64_t)(v11 - v12) >> 5)
    {
      uint64_t v19 = v12 - (void)a2;
      uint64_t v20 = (uint64_t)(v12 - (void)a2) >> 5;
      if (v20 >= a5)
      {
        std::string v21 = &a3[8 * a5];
      }
      else
      {
        std::string v21 = &a3[8 * v20];
        a1[1] = sub_19A87B8(v9, (uint64_t)v21, a4, *(void *)(v9 - 8));
        if (v19 < 1) {
          return v5;
        }
      }
      sub_19A9A0C((uint64_t)a1, (uint64_t)v5, v12, (uint64_t)&v5[8 * a5]);
      sub_19A9C84(a3, v21, v5);
    }
    else
    {
      uint64_t v13 = *a1;
      unint64_t v14 = a5 + ((uint64_t)(v12 - *a1) >> 5);
      if (v14 >> 59) {
        sub_2E00();
      }
      uint64_t v15 = ((uint64_t)a2 - v13) >> 5;
      uint64_t v16 = v10 - v13;
      if (v16 >> 4 > v14) {
        unint64_t v14 = v16 >> 4;
      }
      if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFE0) {
        unint64_t v17 = 0x7FFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v17 = v14;
      }
      uint64_t v27 = v9;
      if (v17) {
        long long v18 = (char *)sub_18B0970(v9, v17);
      }
      else {
        long long v18 = 0;
      }
      char v23 = v18;
      uint64_t v24 = &v18[32 * v15];
      int v25 = v24;
      unint64_t v26 = &v18[32 * v17];
      sub_19A9F58(&v23, (uint64_t)a3, a5);
      long long v5 = (_DWORD *)sub_19A9B34(a1, &v23, (uint64_t)v5);
      sub_19A8EA8((uint64_t)&v23);
    }
  }
  return v5;
}

void sub_19A9F38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

void *sub_19A9F58(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = result;
  uint64_t v4 = result[2];
  if (a3)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 32 * a3;
    uint64_t v8 = v4 + 32 * a3;
    do
    {
      *(_DWORD *)(v4 + v6) = *(_DWORD *)(a2 + v6);
      uint64_t result = (void *)(v4 + v6 + 8);
      uint64_t v9 = (void **)(a2 + v6 + 8);
      if (*(char *)(a2 + v6 + 31) < 0)
      {
        uint64_t result = sub_4200(result, *v9, *(void *)(a2 + v6 + 16));
      }
      else
      {
        long long v10 = *(_OWORD *)v9;
        *(void *)(v4 + v6 + 24) = *(void *)(a2 + v6 + 24);
        *(_OWORD *)uint64_t result = v10;
      }
      v6 += 32;
    }
    while (v7 != v6);
  }
  else
  {
    uint64_t v8 = result[2];
  }
  v3[2] = v8;
  return result;
}

void sub_19A9FF4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 16) = v2 + v3;
  _Unwind_Resume(a1);
}

double sub_19AA000(std::string *a1, uint64_t a2)
{
  if (a1[2].__r_.__value_.__s.__data_[8] == *(unsigned __int8 *)(a2 + 56))
  {
    if (a1 != (std::string *)a2 && a1[2].__r_.__value_.__s.__data_[8])
    {
      std::string::size_type size = a1->__r_.__value_.__l.__size_;
      if ((size & 2) != 0)
      {
        uint64_t v3 = 0;
      }
      else
      {
        uint64_t v3 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v3 = (void *)*v3;
        }
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if ((v7 & 2) != 0)
      {
        uint64_t v8 = 0;
      }
      else
      {
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
      }
      if (v3 == v8) {
        *(void *)&double result = sub_123A04C((uint64_t)a1, a2).n128_u64[0];
      }
      else {
        sub_1507AF4(a1, a2);
      }
    }
  }
  else
  {
    if (a1[2].__r_.__value_.__s.__data_[8])
    {
      uint64_t v4 = sub_1507620((uint64_t)a1);
      char v6 = 0;
    }
    else
    {
      uint64_t v4 = (uint64_t)sub_19AA0A0(a1, a2);
      char v6 = 1;
    }
    *(unsigned char *)(v4 + 56) = v6;
  }
  return result;
}

std::string *sub_19AA0A0(std::string *a1, uint64_t a2)
{
  sub_15073A0(a1, 0, 0);
  if (a1 != (std::string *)a2)
  {
    std::string::size_type size = a1->__r_.__value_.__l.__size_;
    if ((size & 2) != 0)
    {
      long long v5 = 0;
    }
    else
    {
      long long v5 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        long long v5 = (void *)*v5;
      }
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if ((v6 & 2) != 0)
    {
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
    }
    if (v5 == v7) {
      sub_123A04C((uint64_t)a1, a2);
    }
    else {
      sub_1507AF4(a1, a2);
    }
  }
  return a1;
}

void sub_19AA140(std::string **a1, char *a2, uint64_t *a3)
{
  sub_5E5C(__p, a2);
  sub_1881DF4(a1, (long long *)__p, a3);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
}

void sub_19AA194(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_19AA1B0()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_26265C0, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_19B1190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_19B319C()
{
}

void sub_19B31A8()
{
}

void sub_19B31B8()
{
}

void sub_19B31C4()
{
}

void sub_19B31D4()
{
}

void sub_19B31E0()
{
}

void sub_19B31F0()
{
}

void sub_19B31FC()
{
}

void sub_19B320C()
{
}

void sub_19B3218()
{
}

void sub_19B3228()
{
}

void sub_19B3234()
{
}

void sub_19B3244()
{
}

void sub_19B3250()
{
}

void sub_19B3260()
{
}

void sub_19B326C()
{
}

void sub_19B327C()
{
}

void sub_19B3288()
{
}

void sub_19B3298()
{
}

void sub_19B32A4()
{
}

void sub_19B32B4()
{
}

void sub_19B32C0()
{
}

void sub_19B32D0()
{
}

void sub_19B32DC()
{
}

void sub_19B32EC()
{
}

void sub_19B32F8()
{
}

void sub_19B3308()
{
}

void sub_19B3314()
{
}

void sub_19B3324()
{
}

void sub_19B3330()
{
}

void sub_19B3340()
{
}

void sub_19B334C()
{
}

void sub_19B335C()
{
}

void sub_19B3368()
{
}

void sub_19B3378()
{
}

void sub_19B3384()
{
}

void sub_19B3394()
{
}

void sub_19B33A0()
{
}

void sub_19B33B0()
{
}

void sub_19B33BC()
{
}