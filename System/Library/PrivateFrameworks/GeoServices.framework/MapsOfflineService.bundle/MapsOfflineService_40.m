BOOL sub_1129928(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  char v5;
  int v7;

  v1 = *(void *)(a1 + 8);
  if (v1 - 32 < 0xFFFFFFFFFFFFFFE5) {
    return 0;
  }
  v2 = a1 + 16;
  if (v1 < 8) {
    v2 = a1;
  }
  v3 = v1 + v2;
  if (*(unsigned char *)(v1 + v2 - 3) != 95) {
    return 0;
  }
  v4 = ((char)__toupper(*(char *)(v3 - 2)) | 0x3000000) - 0x1000000;
  v7 = v4;
  v5 = __toupper(*(char *)(v3 - 1));
  if (!(v4 >> 26)) {
    v7 = ((v5 << (24 - 16 * (v4 >> 25))) | v4) - 0x1000000;
  }
  return sub_1133D84(&v7);
}

uint64_t sub_11299DC(unsigned __int8 *a1)
{
  unint64_t v1 = *((void *)a1 + 1);
  if (v1 >= 0x20)
  {
    unsigned int v9 = 2;
    long long v10 = off_2491A20;
    v11 = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/maps-lang-cpp/src/lib/cache/impl/localecacheimpl.cpp";
    v12 = "isValidLocaleString";
    int v13 = 162;
    sub_E1B4((uint64_t)v14);
    sub_188FC78(v15, (uint64_t)"Trying to construct a locale with a malformed string: hash=", 59);
    std::ostream::operator<<();
    sub_188FC78(v15, (uint64_t)" size=", 6);
    std::ostream::operator<<();
LABEL_23:
    sub_1121418(&v9);
    return 0;
  }
  else
  {
    if (v1 >= 8) {
      a1 += 16;
    }
    if (v1)
    {
      BOOL v2 = 0;
      v3 = a1;
      do
      {
        int v4 = *v3;
        BOOL v6 = v4 == 95 || v4 == 45;
        if ((v4 - 48) >= 0xA && (v4 & 0xFFFFFFDF) - 65 >= 0x1A)
        {
          if (v2 || !v6)
          {
LABEL_22:
            unsigned int v9 = 2;
            long long v10 = off_2491A20;
            v11 = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/maps-lang-cpp/src/lib/cache/impl/"
                  "localecacheimpl.cpp";
            v12 = "isValidLocaleString";
            int v13 = 178;
            sub_E1B4((uint64_t)v14);
            sub_188FC78(v15, (uint64_t)"Trying to construct a locale with a non-BCP47 standard conforming string: String='", 82);
            std::ostream::write();
            sub_188FC78(v15, (uint64_t)"'.", 2);
            goto LABEL_23;
          }
        }
        else if (v2 && v6)
        {
          goto LABEL_22;
        }
        ++v3;
        BOOL v2 = v6;
        --v1;
      }
      while (v1);
    }
    if (sub_1129C5C(a1, 0) == 50331648)
    {
      unsigned int v9 = 2;
      long long v10 = off_2491A20;
      v11 = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/maps-lang-cpp/src/lib/cache/impl/localecacheimpl.cpp";
      v12 = "isValidLocaleString";
      int v13 = 189;
      sub_E1B4((uint64_t)v14);
      sub_188FC78(v15, (uint64_t)"Trying to construct a locale with a non-BCP47 standard conforming string: String='", 82);
      std::ostream::write();
      sub_188FC78(v15, (uint64_t)"'.", 2);
      goto LABEL_23;
    }
    return 1;
  }
}

void sub_1129C38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1121418((unsigned int *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1129C5C(unsigned __int8 *a1, void *a2)
{
  char v4 = 1;
  unsigned int v5 = 50331648;
  while (1)
  {
    int v6 = *a1;
    if (v6 == 45) {
      break;
    }
    if (v6 == 95 || v6 == 0) {
      break;
    }
    if ((v6 - 65) < 0x1A) {
      LOBYTE(v6) = v6 + 32;
    }
    v4 &= ((v6 & 0xDF) - 65) < 0x1Au;
    int v8 = (((char)v6 << (24 - 8 * HIBYTE(v5))) | v5) - 0x1000000;
    if (HIBYTE(v5) - 1 > 2u) {
      int v8 = v5;
    }
    if (!(v5 >> 26)) {
      unsigned int v5 = v8;
    }
    ++a1;
  }
  unsigned int v10 = v5;
  LODWORD(result) = sub_1133E18(&v10);
  if (a2) {
    *a2 = a1;
  }
  if (((((3 - BYTE3(result)) & 0xFFFFFFFE) == 2) & v4) != 0) {
    return result;
  }
  else {
    return 50331648;
  }
}

uint64_t sub_1129D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = sub_1125EE4(a1 + 64, (unsigned __int8 *)a2);
  if (*(void *)(a1 + 8272) != v5) {
    return *(void *)(*(void *)(v5 + 8) + 48);
  }
  if ((sub_11299DC((unsigned __int8 *)a2) & 1) == 0)
  {
    long long v17 = xmmword_212F540;
    long long v18 = 0u;
    long long v19 = 0u;
    uint64_t v6 = sub_1129D50(a1, &v17);
    long long v11 = *(_OWORD *)(a2 + 16);
    long long v17 = *(_OWORD *)a2;
    long long v18 = v11;
    long long v19 = *(_OWORD *)(a2 + 32);
    uint64_t v20 = v6;
    v12 = (unsigned __int8 *)&v17;
LABEL_20:
    sub_1129EE8(v4, v12);
    return v6;
  }
  if (sub_11297C4(a2))
  {
    unint64_t v8 = *(void *)(a2 + 8);
    if (v8 - 3 >= 0x1F) {
      uint64_t v9 = 31;
    }
    else {
      uint64_t v9 = v8 - 3;
    }
    if (v9)
    {
      if (v8 >= 8) {
        unsigned int v10 = (unsigned __int8 *)(a2 + 16);
      }
      else {
        unsigned int v10 = (unsigned __int8 *)a2;
      }
      sub_1123148(v10, v9, (uint64_t)&v17);
    }
    else
    {
      long long v18 = 0u;
      long long v19 = 0u;
      long long v17 = 0u;
    }
    return sub_1129D50(a1, &v17);
  }
  if (*(void *)(a2 + 8) >= 8uLL) {
    int v13 = (unsigned __int8 *)(a2 + 16);
  }
  else {
    int v13 = (unsigned __int8 *)a2;
  }
  sub_1129FD0(v13, (uint64_t)&v17);
  uint64_t v6 = sub_112A0D0(a1, (unint64_t *)&v17, (unint64_t *)&v17 + 1, (unsigned int *)&v18, (void *)&v18 + 1);
  if (!sub_1126618((void *)a2, (unsigned __int8 *)(v6 + 56)))
  {
    long long v14 = *(_OWORD *)(a2 + 16);
    v15[0] = *(_OWORD *)a2;
    v15[1] = v14;
    v15[2] = *(_OWORD *)(a2 + 32);
    uint64_t v16 = v6;
    v12 = (unsigned __int8 *)v15;
    goto LABEL_20;
  }
  return v6;
}

uint64_t sub_1129EE8(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v11 = v4;
  uint64_t v5 = *(void *)(a1 + 8200);
  uint64_t v6 = *(unsigned int *)(a1 + 4 * (v4 & 0x7FF));
  uint64_t v7 = *(unsigned int *)(a1 + ((((unint64_t)(v4 & 0x7FF) << 32) + 0x100000000) >> 30));
  if (v6 == v7) {
LABEL_6:
  }
    sub_112C61C((uint64_t *)(a1 + 8200), (uint64_t *)(v5 + 16 * v7), &v11);
  uint64_t v8 = v5 + 16 * v6;
  uint64_t v9 = 16 * v7 - 16 * v6;
  while (*(void *)v8 != v4 || !sub_1126618(*(void **)(v8 + 8), a2))
  {
    v8 += 16;
    v9 -= 16;
    if (!v9) {
      goto LABEL_6;
    }
  }
  return v8;
}

double sub_1129FD0@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v10 = a1;
  *(void *)(a2 + 8) = 0x700000000000000;
  *(_DWORD *)(a2 + 16) = 50331648;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(void *)(a2 + 56) = 0;
  *(_DWORD *)a2 = sub_1129C5C(a1, &v10);
  int v4 = *v10;
  if (v4 == 95 || v4 == 45)
  {
    uint64_t v9 = 0;
    *(void *)(a2 + 8) = sub_112A770(v10 + 1, &v9);
    uint64_t v5 = v10;
    if (v9 != v10 + 1)
    {
      unsigned int v10 = v9;
      uint64_t v5 = v9;
    }
    int v6 = *v5;
    if (v6 == 95 || v6 == 45)
    {
      uint64_t v8 = 0;
      *(_DWORD *)(a2 + 16) = sub_1120F28((uint64_t)(v5 + 1), &v8);
      uint64_t v7 = v10;
      if (v8 != v10 + 1)
      {
        unsigned int v10 = v8;
        uint64_t v7 = v8;
      }
      if (*v7 == 45) {
        return sub_112BE58(v7 + 1, 45, a2 + 24);
      }
    }
  }
  return result;
}

uint64_t sub_112A0D0(uint64_t a1, unint64_t *a2, unint64_t *a3, unsigned int *a4, void *a5)
{
  sub_112A96C(a2, a3, a4, a5, (uint64_t)&v8);
  uint64_t v6 = sub_1125EE4(a1 + 59136, (unsigned __int8 *)&v8);
  if (*(void *)(a1 + 67344) == v6) {
    operator new();
  }
  return *(void *)(*(void *)(v6 + 8) + 48);
}

uint64_t sub_112A240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8288;
  uint64_t v5 = sub_1125EE4(a1 + 8288, (unsigned __int8 *)a2);
  if (*(void *)(a1 + 16496) != v5) {
    return *(void *)(*(void *)(v5 + 8) + 48);
  }
  if (sub_1129928(a2))
  {
    unint64_t v7 = *(void *)(a2 + 8);
    if (v7 - 3 >= 0x1F) {
      uint64_t v8 = 31;
    }
    else {
      uint64_t v8 = v7 - 3;
    }
    if (v8)
    {
      if (v7 >= 8) {
        uint64_t v9 = (unsigned __int8 *)(a2 + 16);
      }
      else {
        uint64_t v9 = (unsigned __int8 *)a2;
      }
      sub_1123148(v9, v8, (uint64_t)&v12);
    }
    else
    {
      long long v13 = 0u;
      long long v14 = 0u;
      long long v12 = 0u;
    }
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 16);
    long long v12 = *(_OWORD *)a2;
    long long v13 = v10;
    long long v14 = *(_OWORD *)(a2 + 32);
  }
  uint64_t v11 = (void *)sub_112A344(v4, (unsigned __int8 *)a2);
  uint64_t result = sub_1129D50(a1, (uint64_t)&v12);
  void *v11 = result;
  return result;
}

uint64_t sub_112A344(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v11 = v4;
  uint64_t v5 = *(void *)(a1 + 8200);
  uint64_t v6 = *(unsigned int *)(a1 + 4 * (v4 & 0x7FF));
  uint64_t v7 = *(unsigned int *)(a1 + ((((unint64_t)(v4 & 0x7FF) << 32) + 0x100000000) >> 30));
  if (v6 == v7) {
LABEL_6:
  }
    sub_112CE7C((uint64_t *)(a1 + 8200), (uint64_t *)(v5 + 16 * v7), &v11);
  uint64_t v8 = v5 + 16 * v6;
  uint64_t v9 = 16 * v7 - 16 * v6;
  while (*(void *)v8 != v4 || !sub_1126618(*(void **)(v8 + 8), a2))
  {
    v8 += 16;
    v9 -= 16;
    if (!v9) {
      goto LABEL_6;
    }
  }
  return *(void *)(v8 + 8) + 48;
}

uint64_t sub_112A430(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = a1 + 16512;
  uint64_t v3 = *(void *)(a1 + 16512 + 8 * a2);
  if (!v3)
  {
    uint64_t v5 = a2;
    unint64_t v6 = qword_20F5A80[a2];
    v7[0] = v6 & 0xFFFFFFFFFFFFFFLL;
    v7[1] = 7 - HIBYTE(v6);
    long long v8 = 0u;
    long long v9 = 0u;
    uint64_t v3 = sub_1129D50(a1, (uint64_t)v7);
    *(void *)(v2 + 8 * v5) = v3;
  }
  return v3;
}

uint64_t sub_112A4D4(uint64_t a1, unsigned int a2)
{
  uint64_t v2 = a1 + 17608;
  uint64_t v3 = *(void *)(a1 + 17608 + 8 * a2);
  if (!v3)
  {
    uint64_t v5 = a2;
    unint64_t v6 = *(void *)&aUnd_0[8 * a2];
    v7[0] = v6 & 0xFFFFFFFFFFFFFFLL;
    v7[1] = 7 - HIBYTE(v6);
    long long v8 = 0u;
    long long v9 = 0u;
    uint64_t v3 = sub_1129D50(a1, (uint64_t)v7);
    *(void *)(v2 + 8 * v5) = v3;
  }
  return v3;
}

uint64_t sub_112A578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 18016;
  uint64_t v5 = sub_1125EE4(a1 + 18016, (unsigned __int8 *)a2);
  if (*(void *)(a1 + 26224) != v5) {
    return *(void *)(*(void *)(v5 + 8) + 48);
  }
  uint64_t v7 = (void *)sub_112A344(v4, (unsigned __int8 *)a2);
  unsigned int v14 = 50331648;
  long long v13 = 0;
  if (*(void *)(a2 + 8) >= 8uLL) {
    long long v8 = (unsigned __int8 *)(a2 + 16);
  }
  else {
    long long v8 = (unsigned __int8 *)a2;
  }
  if (sub_112A6C4(v8, &v14, &v13))
  {
    int v9 = *v13;
    if (v9 == 95 || v9 == 45)
    {
      ++v13;
      uint64_t v10 = sub_112A770(v13, &v13);
    }
    else
    {
      uint64_t v10 = 0x700000000000000;
    }
    uint64_t v11 = &unk_2115650;
    uint64_t v12 = 12672;
    while (*((_DWORD *)v11 - 4) != v14 || *((void *)v11 - 1) != v10)
    {
      v11 += 4;
      v12 -= 64;
      if (!v12) {
        goto LABEL_15;
      }
    }
  }
  else
  {
LABEL_15:
    memset(&v15[1], 0, 32);
    v15[0] = xmmword_212F540;
    uint64_t v11 = v15;
  }
  uint64_t result = sub_1129D50(a1, (uint64_t)v11);
  *uint64_t v7 = result;
  return result;
}

BOOL sub_112A6C4(unsigned __int8 *a1, unsigned int *a2, void *a3)
{
  unsigned int v6 = 50331648;
  while (1)
  {
    int v7 = *a1;
    if (v7 == 45) {
      break;
    }
    if (v7 == 95 || v7 == 0) {
      break;
    }
    char v9 = __tolower((char)v7);
    if (HIBYTE(v6) - 1 <= 2u) {
      unsigned int v6 = ((v9 << (24 - 8 * HIBYTE(v6))) | v6) - 0x1000000;
    }
    ++a1;
  }
  *a2 = v6;
  if (a3) {
    *a3 = a1;
  }
  return HIBYTE(v6) == 0;
}

uint64_t sub_112A770(unsigned __int8 *a1, void *a2)
{
  if (a2) {
    *a2 = a1;
  }
  uint64_t v2 = 0;
  char v3 = 1;
  while (1)
  {
    int v4 = a1[v2];
    if (!a1[v2] || v4 == 45 || v4 == 95) {
      break;
    }
    v3 &= (v4 & 0xFFFFFFDF) - 65 < 0x1A;
    ++v2;
  }
  if (((v2 == 4) & v3) == 1)
  {
    if (a2) {
      *a2 = &a1[v2];
    }
    int v5 = *a1;
    if ((v5 - 97) < 0x1A) {
      LOBYTE(v5) = v5 - 32;
    }
    unint64_t v6 = ((char)v5 | 0x700000000000000) - 0x100000000000000;
    for (uint64_t i = 1; i != 4; ++i)
    {
      if (HIBYTE(v6) - 4 <= 4u)
      {
        int v8 = a1[i];
        if ((v8 - 65) < 0x1A) {
          LOBYTE(v8) = v8 + 32;
        }
        unint64_t v6 = (((uint64_t)(char)v8 << (56 - 8 * HIBYTE(v6))) | v6) - 0x100000000000000;
      }
    }
  }
  else
  {
    if (a2) {
      *a2 = a1;
    }
    return 0x700000000000000;
  }
  return v6;
}

uint64_t sub_112A85C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 26240;
  uint64_t v5 = sub_1125EE4(a1 + 26240, (unsigned __int8 *)a2);
  if (*(void *)(v4 + 8208) != v5) {
    return *(void *)(*(void *)(v5 + 8) + 48);
  }
  int v7 = (void *)sub_112A344(v4, (unsigned __int8 *)a2);
  unsigned int v12 = 50331648;
  uint64_t v11 = 0;
  if (*(void *)(a2 + 8) >= 8uLL) {
    int v8 = (unsigned __int8 *)(a2 + 16);
  }
  else {
    int v8 = (unsigned __int8 *)a2;
  }
  if (sub_112A6C4(v8, &v12, &v11))
  {
    char v9 = "af-ZA";
    uint64_t v10 = 8400;
    while (*((_DWORD *)v9 - 2) != v12)
    {
      v9 += 56;
      v10 -= 56;
      if (!v10) {
        goto LABEL_10;
      }
    }
  }
  else
  {
LABEL_10:
    memset(&v13[1], 0, 32);
    v13[0] = xmmword_212F540;
    char v9 = (const char *)v13;
  }
  uint64_t result = sub_1129D50(a1, (uint64_t)v9);
  *int v7 = result;
  return result;
}

unint64_t *sub_112A96C@<X0>(unint64_t *result@<X0>, unint64_t *a2@<X1>, unsigned int *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = (3 - HIBYTE(*(_DWORD *)result));
  *(void *)a5 = *(_DWORD *)result & 0xFFFFFF;
  *(void *)(a5 + 8) = v8;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  if (*a2 != 0x700000000000000)
  {
    if (v8 <= 0x1E) {
      sub_112BFE4((unint64_t *)a5, 45);
    }
    uint64_t result = sub_112C0EC((unint64_t *)a5, a2);
  }
  if (*a3 != 50331648)
  {
    if ((unint64_t)(*(void *)(a5 + 8) + 1) <= 0x1F) {
      sub_112BFE4((unint64_t *)a5, 45);
    }
    uint64_t result = sub_112C180((unint64_t *)a5, a3);
  }
  if (a4[1])
  {
    if ((unint64_t)(*(void *)(a5 + 8) + 1) <= 0x1F) {
      sub_112BFE4((unint64_t *)a5, 45);
    }
    return sub_112C210((unint64_t *)a5, a4);
  }
  return result;
}

void *sub_112AA70(uint64_t *a1, void *a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  int v7 = *(void **)(v4 - 8);
  if ((unint64_t)v7 >= v6)
  {
    uint64_t v9 = ((uint64_t)v7 - *a1) >> 3;
    if ((unint64_t)(v9 + 1) >> 61) {
      sub_2E00();
    }
    uint64_t v10 = v5 - *a1;
    uint64_t v11 = v10 >> 2;
    if (v10 >> 2 <= (unint64_t)(v9 + 1)) {
      uint64_t v11 = v9 + 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    v16[4] = v4;
    if (v12) {
      long long v13 = (char *)sub_1122DC0(v4, v12);
    }
    else {
      long long v13 = 0;
    }
    unsigned int v14 = &v13[8 * v9];
    v16[0] = v13;
    v16[1] = v14;
    v16[3] = &v13[8 * v12];
    *(void *)unsigned int v14 = *a2;
    v16[2] = v14 + 8;
    sub_112C2DC(a1, v16);
    uint64_t v8 = (void *)a1[1];
    sub_112C47C((uint64_t)v16);
  }
  else
  {
    *int v7 = *a2;
    uint64_t v8 = v7 + 1;
    a1[1] = (uint64_t)v8;
  }
  a1[1] = (uint64_t)v8;
  return v8 - 1;
}

void sub_112AB54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_112C47C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_112AB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 42688;
  uint64_t v5 = *(unsigned int *)(a1 + 42688 + 4 * (a2 & 0x7FF));
  uint64_t v6 = *(unsigned int *)(a1 + 42688 + ((((unint64_t)(a2 & 0x7FF) << 32) + 0x100000000) >> 30));
  if (v5 == v6) {
    goto LABEL_5;
  }
  int v7 = (void *)(*(void *)(a1 + 50888) + 16 * v5);
  uint64_t v8 = 16 * v6 - 16 * v5;
  while (*v7 != a2)
  {
    v7 += 2;
    v8 -= 16;
    if (!v8) {
      goto LABEL_5;
    }
  }
  if (v7 != *(void **)(a1 + 50896)) {
    return *(void *)(v7[1] + 8);
  }
LABEL_5:
  uint64_t v9 = (void *)((char *)&unk_248DDA0 + 16 * (*(unsigned char *)a2 & 0x7F));
  uint64_t v10 = v9[1];
  uint64_t v11 = a2;
  if (*v9 != v10)
  {
    uint64_t v12 = *v9 + 16;
    while (!sub_112AD58(v12 - 16, a2))
    {
      uint64_t v13 = v12 + 16;
      v12 += 32;
      if (v13 == v10)
      {
        uint64_t v11 = a2;
        goto LABEL_30;
      }
    }
    int v15 = *(_DWORD *)a2;
    if (*(_DWORD *)a2 == 50331648 || v15 == 6581877) {
      long long v17 = (unint64_t *)v12;
    }
    else {
      long long v17 = (unint64_t *)a2;
    }
    uint64_t v18 = *(void *)(a2 + 8);
    if (v18 == 0x700000000000000
      || (long long v19 = (unint64_t *)(a2 + 8), v18 == 0x30000007A7A7A5ALL) && *(void *)(v12 - 8) != 0x700000000000000)
    {
      long long v19 = (unint64_t *)(v12 + 8);
    }
    int v20 = *(_DWORD *)(a2 + 4);
    if (v20 == 50331648) {
      v21 = (unsigned int *)(v12 + 4);
    }
    else {
      v21 = (unsigned int *)(a2 + 4);
    }
    if (v15 != *(_DWORD *)v17 || v18 != *v19 || (uint64_t v11 = a2, v20 != *v21)) {
      uint64_t v11 = sub_112A0D0(a1, v17, v19, v21, (void *)(a2 + 16));
    }
  }
LABEL_30:
  if (*(void *)(a2 + 8) == 0x30000007A7A7A5ALL && *(void *)(v11 + 8) != 0x30000007A7A7A5ALL) {
    uint64_t v11 = sub_112AB68(a1, v11);
  }
  v22[0] = a2;
  v22[1] = v11;
  sub_112ADAC(v4, v22);
  return v11;
}

BOOL sub_112AD58(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != 50331648 && *(_DWORD *)a1 != *(_DWORD *)a2) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3 != 0x700000000000000 && v3 != *(void *)(a2 + 8)) {
    return 0;
  }
  int v5 = *(_DWORD *)(a1 + 4);
  return v5 == 50331648 || v5 == *(_DWORD *)(a2 + 4);
}

void *sub_112ADAC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v9 = v3;
  uint64_t v4 = *(void *)(a1 + 8200);
  uint64_t v5 = *(unsigned int *)(a1 + 4 * (v3 & 0x7FF));
  uint64_t v6 = *(unsigned int *)(a1 + ((((unint64_t)(v3 & 0x7FF) << 32) + 0x100000000) >> 30));
  if (v5 == v6) {
LABEL_5:
  }
    sub_112D1DC((uint64_t *)(a1 + 8200), (uint64_t *)(v4 + 16 * v6), &v9);
  uint64_t result = (void *)(v4 + 16 * v5);
  uint64_t v8 = 16 * v6 - 16 * v5;
  while (*result != v3)
  {
    result += 2;
    v8 -= 16;
    if (!v8) {
      goto LABEL_5;
    }
  }
  return result;
}

uint64_t sub_112AE60(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2;
  uint64_t v3 = a1 + 34464;
  uint64_t v4 = *(unsigned int *)(v3 + 4 * (a2 & 0x7FF));
  uint64_t v5 = *(unsigned int *)(v3 + ((((unint64_t)(a2 & 0x7FF) << 32) + 0x100000000) >> 30));
  if (v4 == v5) {
    goto LABEL_5;
  }
  uint64_t v6 = (void *)(*(void *)(a1 + 42664) + 16 * v4);
  uint64_t v7 = 16 * v5 - 16 * v4;
  while (*v6 != a2)
  {
    v6 += 2;
    v7 -= 16;
    if (!v7) {
      goto LABEL_5;
    }
  }
  if (v6 != *(void **)(a1 + 42672)) {
    return v6[1] + 8;
  }
LABEL_5:
  uint64_t v8 = (void **)sub_112B058(v3, &v25);
  uint64_t v9 = v8;
  uint64_t v10 = 72;
  if (*(void *)(v25 + 64) < 8uLL) {
    uint64_t v10 = 56;
  }
  uint64_t v11 = (uint64_t *)((char *)&unk_2115240 + 8 * (*(unsigned char *)(v25 + v10) & 0x7F));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  if (*v11 == v13)
  {
LABEL_19:
    uint64_t v20 = 0;
    uint64_t v21 = 0;
  }
  else
  {
    unsigned int v14 = (void *)((char *)&unk_248E5A0 + 32 * v12 + 16);
    uint64_t v15 = 32 * v13 - 32 * v12;
    while (1)
    {
      int v16 = *((_DWORD *)v14 - 4);
      if (v16 == 50331648 || v16 == *(_DWORD *)v25)
      {
        uint64_t v18 = *(v14 - 1);
        if (v18 == 0x700000000000000 || v18 == *(void *)(v25 + 8)) {
          break;
        }
      }
      v14 += 4;
      v15 -= 32;
      if (!v15) {
        goto LABEL_19;
      }
    }
    uint64_t v20 = *v14;
    uint64_t v21 = v14[1];
  }
  sub_112B114(v8, 0xAAAAAAAAAAAAAAABLL * ((v21 - v20) >> 3));
  for (; v20 != v21; v20 += 24)
  {
    unsigned int v23 = 50331648;
    uint64_t v27 = 0;
    memset(v26, 0, sizeof(v26));
    uint64_t v24 = sub_112A0D0(a1, (unint64_t *)v20, (unint64_t *)(v20 + 8), &v23, v26);
    sub_112B1C8(v9, &v24, (uint64_t *)(v20 + 16));
  }
  return (uint64_t)v9;
}

uint64_t sub_112B058(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v10 = v3;
  uint64_t v4 = *(void *)(a1 + 8200);
  uint64_t v5 = *(unsigned int *)(a1 + 4 * (v3 & 0x7FF));
  uint64_t v6 = *(unsigned int *)(a1 + ((((unint64_t)(v3 & 0x7FF) << 32) + 0x100000000) >> 30));
  if (v5 == v6) {
LABEL_5:
  }
    sub_112DA0C((uint64_t *)(a1 + 8200), (void *)(v4 + 16 * v6), &v10);
  uint64_t v7 = (void *)(v4 + 16 * v5);
  uint64_t v8 = 16 * v6 - 16 * v5;
  while (*v7 != v3)
  {
    v7 += 2;
    v8 -= 16;
    if (!v8) {
      goto LABEL_5;
    }
  }
  return v7[1] + 8;
}

void sub_112B114(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 4)
  {
    if (a2 >> 60) {
      sub_2E00();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)sub_1121C00(v3, a2);
    uint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF0];
    uint64_t v9 = &v6[16 * v8];
    uint64_t v11 = (char *)*a1;
    uint64_t v10 = (char *)a1[1];
    uint64_t v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        *((_OWORD *)v12 - 1) = *((_OWORD *)v10 - 1);
        v12 -= 16;
        v10 -= 16;
      }
      while (v10 != v11);
      uint64_t v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void *sub_112B1C8(void **a1, void *a2, uint64_t *a3)
{
  unint64_t v8 = (unint64_t)a1[2];
  uint64_t v6 = (uint64_t)(a1 + 2);
  unint64_t v7 = v8;
  uint64_t v9 = *(void **)(v6 - 8);
  if ((unint64_t)v9 >= v8)
  {
    uint64_t v12 = ((char *)v9 - (unsigned char *)*a1) >> 4;
    unint64_t v13 = v12 + 1;
    if ((unint64_t)(v12 + 1) >> 60) {
      sub_2E00();
    }
    uint64_t v14 = v7 - (void)*a1;
    if (v14 >> 3 > v13) {
      unint64_t v13 = v14 >> 3;
    }
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v15 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v15 = v13;
    }
    int v16 = (char *)sub_1121C00(v6, v15);
    long long v17 = &v16[16 * v12];
    long long v19 = &v16[16 * v18];
    uint64_t v20 = *a3;
    *(void *)long long v17 = *a2;
    *((void *)v17 + 1) = v20;
    uint64_t v11 = v17 + 16;
    v22 = (char *)*a1;
    uint64_t v21 = (char *)a1[1];
    if (v21 != *a1)
    {
      do
      {
        *((_OWORD *)v17 - 1) = *((_OWORD *)v21 - 1);
        v17 -= 16;
        v21 -= 16;
      }
      while (v21 != v22);
      uint64_t v21 = (char *)*a1;
    }
    *a1 = v17;
    a1[1] = v11;
    a1[2] = v19;
    if (v21) {
      operator delete(v21);
    }
  }
  else
  {
    uint64_t v10 = *a3;
    *uint64_t v9 = *a2;
    v9[1] = v10;
    uint64_t v11 = v9 + 2;
  }
  a1[1] = v11;
  return v11 - 2;
}

void **sub_112B2C4(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + 75608;
  int64_t v5 = sub_1126F70(a1 + 75608, a2);
  if (*(void **)(v4 + 8208) != v5) {
    return (void **)(v5[1] + 8);
  }
  uint64_t result = (void **)sub_112B43C(v4, a2);
  unint64_t v7 = (uint64_t *)((char *)&unk_20FDBA8 + 8 * (*(unsigned char *)a2 & 0x7F));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  if (*v7 != v9)
  {
    uint64_t v10 = 5 * v8;
    uint64_t v11 = (void *)((char *)&unk_248B5A0 + 40 * v8 + 24);
    uint64_t v12 = 40 * v9 - 8 * v10;
    while (*((_DWORD *)v11 - 5) != *a2)
    {
      v11 += 5;
      v12 -= 40;
      if (!v12) {
        return result;
      }
    }
    uint64_t v14 = (unint64_t *)*(v11 - 1);
    unint64_t v13 = (unint64_t *)*v11;
    long long v17 = result;
    sub_112B500(result, (uint64_t)(*v11 - (void)v14) >> 5);
    if (v13 != v14)
    {
      unint64_t v15 = v14;
      do
      {
        uint64_t v18 = v15;
        uint64_t v20 = 0;
        memset(v19, 0, sizeof(v19));
        uint64_t v16 = sub_112A0D0(a1, v15, v15 + 1, (unsigned int *)a2, v19);
        *(void *)&v19[0] = sub_112AB68(a1, v16);
        sub_112B5D8(v17, v19, (uint64_t *)v18 + 2, (int *)v18 + 6);
        unint64_t v15 = v18 + 4;
      }
      while (v18 + 4 != v13);
    }
    return v17;
  }
  return result;
}

uint64_t sub_112B43C(uint64_t a1, int *a2)
{
  int v3 = *a2;
  uint64_t v4 = *a2 & 0xFFFFFF;
  uint64_t v11 = v4;
  uint64_t v5 = *(void *)(a1 + 8200);
  uint64_t v6 = *(unsigned int *)(a1 + 4 * (v3 & 0x7FF));
  uint64_t v7 = *(unsigned int *)(a1 + ((((unint64_t)(v3 & 0x7FF) << 32) + 0x100000000) >> 30));
  if (v6 == v7) {
LABEL_5:
  }
    sub_112E32C((uint64_t *)(a1 + 8200), (void *)(v5 + 16 * v7), &v11);
  uint64_t v8 = (void *)(v5 + 16 * v6);
  uint64_t v9 = 16 * v7 - 16 * v6;
  while (*v8 != v4)
  {
    v8 += 2;
    v9 -= 16;
    if (!v9) {
      goto LABEL_5;
    }
  }
  return v8[1] + 8;
}

void sub_112B500(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - (unsigned char *)*a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL) {
      sub_2E00();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)sub_112C518(v3, a2);
    uint64_t v7 = &v6[v5];
    uint64_t v9 = &v6[24 * v8];
    uint64_t v11 = (char *)*a1;
    uint64_t v10 = (char *)a1[1];
    uint64_t v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        long long v13 = *(_OWORD *)(v10 - 24);
        *((_DWORD *)v12 - 2) = *((_DWORD *)v10 - 2);
        *(_OWORD *)(v12 - 24) = v13;
        v12 -= 24;
        v10 -= 24;
      }
      while (v10 != v11);
      uint64_t v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

char *sub_112B5D8(void **a1, void *a2, uint64_t *a3, int *a4)
{
  uint64_t v10 = a1[2];
  uint64_t v8 = (uint64_t)(a1 + 2);
  uint64_t v9 = v10;
  unint64_t v11 = *(void *)(v8 - 8);
  if (v11 >= (unint64_t)v10)
  {
    unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - (void)*a1) >> 3);
    unint64_t v16 = v15 + 1;
    if (v15 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_2E00();
    }
    unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((v9 - (unsigned char *)*a1) >> 3);
    if (2 * v17 > v16) {
      unint64_t v16 = 2 * v17;
    }
    if (v17 >= 0x555555555555555) {
      unint64_t v18 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v18 = v16;
    }
    long long v19 = (char *)sub_112C518(v8, v18);
    uint64_t v20 = &v19[24 * v15];
    v22 = &v19[24 * v21];
    uint64_t v23 = *a3;
    int v24 = *a4;
    *(void *)uint64_t v20 = *a2;
    *((void *)v20 + 1) = v23;
    *((_DWORD *)v20 + 4) = v24;
    uint64_t v14 = v20 + 24;
    v26 = (char *)*a1;
    uint64_t v25 = (char *)a1[1];
    if (v25 != *a1)
    {
      do
      {
        long long v27 = *(_OWORD *)(v25 - 24);
        *((_DWORD *)v20 - 2) = *((_DWORD *)v25 - 2);
        *(_OWORD *)(v20 - 24) = v27;
        v20 -= 24;
        v25 -= 24;
      }
      while (v25 != v26);
      uint64_t v25 = (char *)*a1;
    }
    *a1 = v20;
    a1[1] = v14;
    a1[2] = v22;
    if (v25) {
      operator delete(v25);
    }
  }
  else
  {
    uint64_t v12 = *a3;
    int v13 = *a4;
    *(void *)unint64_t v11 = *a2;
    *(void *)(v11 + 8) = v12;
    *(_DWORD *)(v11 + 16) = v13;
    uint64_t v14 = (char *)(v11 + 24);
  }
  a1[1] = v14;
  return v14 - 24;
}

uint64_t sub_112B718(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  sub_112B844(a3, (uint64_t)&v12);
  uint64_t v5 = sub_112A0D0(a1, &v12, &v13, &v14, v15);
  uint64_t v6 = a1 + 64;
  *(void *)sub_112A344(a1 + 64, (unsigned __int8 *)a2) = v5;
  uint64_t v7 = a1 + 59136;
  *(void *)sub_112A344(v7, (unsigned __int8 *)a2) = v5;
  if (*(void *)(a2 + 8) >= 8uLL) {
    uint64_t v8 = (unsigned __int8 *)(a2 + 16);
  }
  else {
    uint64_t v8 = (unsigned __int8 *)a2;
  }
  sub_112B844(v8, (uint64_t)&v16);
  sub_112A96C(&v16, &v17, &v18, v19, (uint64_t)v10);
  uint64_t result = sub_1126618((void *)a2, v10);
  if ((result & 1) == 0)
  {
    if (v11)
    {
      *(void *)sub_112A344(v6, v10) = v5;
      uint64_t result = sub_112A344(v7, v10);
      *(void *)uint64_t result = v5;
    }
  }
  return result;
}

double sub_112B844@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v10 = a1;
  *(void *)(a2 + 8) = 0x700000000000000;
  *(_DWORD *)(a2 + 16) = 50331648;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(void *)(a2 + 56) = 0;
  *(_DWORD *)a2 = sub_112C560(a1, &v10);
  int v4 = *v10;
  if (v4 == 95 || v4 == 45)
  {
    uint64_t v9 = 0;
    *(void *)(a2 + 8) = sub_112A770(v10 + 1, &v9);
    uint64_t v5 = v10;
    if (v9 != v10 + 1)
    {
      uint64_t v10 = v9;
      uint64_t v5 = v9;
    }
    int v6 = *v5;
    if (v6 == 95 || v6 == 45)
    {
      uint64_t v8 = 0;
      *(_DWORD *)(a2 + 16) = sub_11285E0((uint64_t)(v5 + 1), &v8);
      uint64_t v7 = v10;
      if (v8 != v10 + 1)
      {
        uint64_t v10 = v8;
        uint64_t v7 = v8;
      }
      if (*v7 == 45) {
        return sub_112BE58(v7 + 1, 45, a2 + 24);
      }
    }
  }
  return result;
}

uint64_t sub_112B944(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v10 = v3;
  uint64_t v4 = *(void *)(a1 + 8200);
  uint64_t v5 = *(unsigned int *)(a1 + 4 * (v3 & 0x7FF));
  uint64_t v6 = *(unsigned int *)(a1 + ((((unint64_t)(v3 & 0x7FF) << 32) + 0x100000000) >> 30));
  if (v5 == v6) {
LABEL_5:
  }
    sub_112EC5C((uint64_t *)(a1 + 8200), v4 + 16 * v6, &v10);
  uint64_t v7 = (void *)(v4 + 16 * v5);
  uint64_t v8 = 16 * v6 - 16 * v5;
  while (*v7 != v3)
  {
    v7 += 2;
    v8 -= 16;
    if (!v8) {
      goto LABEL_5;
    }
  }
  return v7[1] + 8;
}

void sub_112BA00(void ***a1)
{
  uint64_t v2 = (uint64_t **)*a1;
  if (*v2)
  {
    sub_112BA54((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_112BA54(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4 != a2)
  {
    uint64_t v5 = v4 - 1;
    do
    {
      uint64_t v6 = *v5;
      *uint64_t v5 = 0;
      if (v6) {
        sub_112BAB8((uint64_t)v5, v6);
      }
      uint64_t v7 = v5 - 1;
      v5 -= 2;
    }
    while (v7 != a2);
  }
  *(void *)(a1 + 8) = a2;
}

void sub_112BAB8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = *(void **)(a2 + 8);
    if (v2)
    {
      *(void *)(a2 + 16) = v2;
      operator delete(v2);
    }
    operator delete();
  }
}

void sub_112BB14(void ***a1)
{
  uint64_t v2 = (uint64_t **)*a1;
  if (*v2)
  {
    sub_112BB68((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_112BB68(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4 != a2)
  {
    uint64_t v5 = v4 - 1;
    do
    {
      uint64_t v6 = *v5;
      *uint64_t v5 = 0;
      if (v6) {
        sub_112BBCC((uint64_t)v5, v6);
      }
      uint64_t v7 = v5 - 1;
      v5 -= 2;
    }
    while (v7 != a2);
  }
  *(void *)(a1 + 8) = a2;
}

void sub_112BBCC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = *(void **)(a2 + 8);
    if (v2)
    {
      *(void *)(a2 + 16) = v2;
      operator delete(v2);
    }
    operator delete();
  }
}

void sub_112BC28(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_112BC7C((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

uint64_t sub_112BC7C(uint64_t result, void *a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(void **)(result + 8);
  while (v3 != a2)
  {
    uint64_t v4 = *--v3;
    double result = v4;
    void *v3 = 0;
    if (v4) {
      operator delete();
    }
  }
  *(void *)(v2 + 8) = a2;
  return result;
}

void sub_112BCE0(void ***a1)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (*v2)
  {
    sub_112BD34((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

uint64_t sub_112BD34(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  for (uint64_t i = *(void *)(result + 8); i != a2; i -= 16)
  {
    double result = *(void *)(i - 8);
    *(void *)(i - 8) = 0;
    if (result) {
      operator delete();
    }
  }
  *(void *)(v2 + 8) = a2;
  return result;
}

void sub_112BD9C(void ***a1)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (*v2)
  {
    sub_112BDF0((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

uint64_t sub_112BDF0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  for (uint64_t i = *(void *)(result + 8); i != a2; i -= 16)
  {
    double result = *(void *)(i - 8);
    *(void *)(i - 8) = 0;
    if (result) {
      operator delete();
    }
  }
  *(void *)(v2 + 8) = a2;
  return result;
}

double sub_112BE58@<D0>(unsigned char *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4 = a1;
  uint64_t v16 = 0;
  long long v14 = 0u;
  long long v15 = 0u;
  if (a2 != 95 && a2 != 45) {
    goto LABEL_11;
  }
  char v6 = *a1;
  if (!*a1) {
    goto LABEL_11;
  }
  unint64_t v7 = 0;
  while (1)
  {
    unint64_t v8 = v7;
    if (v7 <= 0x17) {
      break;
    }
LABEL_9:
    unint64_t v7 = v8 + 1;
    char v6 = v4[v8 + 1];
    if (!v6)
    {
      v4 += v7;
      if (v8 != -1) {
        goto LABEL_22;
      }
      goto LABEL_11;
    }
  }
  if (v6 != 95)
  {
    if ((unint64_t)(*((void *)&v14 + 1) + 1) <= 0x17) {
      sub_112BFE4((unint64_t *)&v14, v6);
    }
    goto LABEL_9;
  }
  v4 += v7;
  if (v7) {
    goto LABEL_22;
  }
LABEL_11:
  if (a2 == 64)
  {
LABEL_12:
    LOBYTE(v9) = *v4;
    if (*v4)
    {
      unint64_t v10 = 0;
      uint64_t v11 = v4 + 1;
      do
      {
        if (v10 <= 0x17 && (unint64_t)(*((void *)&v14 + 1) + 1) <= 0x17)
        {
          if ((v9 - 97) < 0x1Au) {
            LOBYTE(v9) = v9 - 32;
          }
          if ((v9 & 0xFE) == 0x2C) {
            LOBYTE(v9) = 95;
          }
          sub_112BFE4((unint64_t *)&v14, (char)v9);
        }
        int v9 = v11[v10++];
      }
      while (v9);
    }
LABEL_22:
    double result = *(double *)&v14;
    long long v13 = v15;
    *(_OWORD *)a3 = v14;
    *(_OWORD *)(a3 + 16) = v13;
    *(void *)(a3 + 32) = v16;
  }
  else
  {
    if (v4)
    {
      while (*v4++ != 64)
      {
        if (!*(v4 - 1)) {
          goto LABEL_26;
        }
      }
      goto LABEL_12;
    }
LABEL_26:
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

unint64_t *sub_112BFE4(unint64_t *result, int a2)
{
  unint64_t v2 = result[1];
  if (v2 + 1 > 7)
  {
    if (v2 == 7)
    {
      unint64_t v3 = 0;
      unint64_t v4 = *result;
      do
      {
        *((unsigned char *)result + v3 + 16) = v4;
        unint64_t v5 = result[1];
        unint64_t v4 = *result >> 8;
        *double result = v4;
        ++v3;
      }
      while (v3 < v5);
      char v6 = (unsigned __int8 *)(result + 2);
      v6[v5] = a2;
      uint64_t v7 = result[1] + 1;
      result[1] = v7;
      v6[v7] = 0;
      uint64_t v8 = result[1];
      if (v8 < 1)
      {
        unint64_t v9 = 0;
      }
      else
      {
        unint64_t v9 = 0;
        do
        {
          unsigned int v10 = *v6++;
          v9 ^= (v9 << 6) - 0x61C8864680B583EDLL + (v9 >> 2) + v10;
          --v8;
        }
        while (v8);
      }
      *double result = v9;
    }
    else
    {
      uint64_t v11 = result + 2;
      *((unsigned char *)v11 + v2) = a2;
      uint64_t v12 = result[1] + 1;
      result[1] = v12;
      *((unsigned char *)v11 + v12) = 0;
      *result ^= (*result << 6) + (*result >> 2) + a2 - 0x61C8864680B583EDLL;
    }
  }
  else
  {
    *result |= (uint64_t)a2 << (8 * v2);
    result[1] = v2 + 1;
  }
  return result;
}

unint64_t *sub_112C0EC(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (7 - HIBYTE(*a2) >= 4u) {
    unint64_t v4 = 4;
  }
  else {
    unint64_t v4 = 7 - HIBYTE(*a2);
  }
  if (v4) {
    BOOL v5 = *a2 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    unint64_t v6 = v3 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = 1;
    do
    {
      if (a1[1] + 1 <= 0x1F) {
        sub_112BFE4(a1, (char)v3);
      }
      if (v7 >= v4) {
        break;
      }
      unint64_t v3 = v6 >> 8;
      ++v7;
      unint64_t v6 = v3;
    }
    while ((_BYTE)v3);
  }
  return a1;
}

unint64_t *sub_112C180(unint64_t *a1, unsigned int *a2)
{
  unsigned int v3 = *a2;
  unsigned int v4 = 3 - HIBYTE(*a2);
  if (v4 >= 3) {
    unint64_t v5 = 3;
  }
  else {
    unint64_t v5 = v4;
  }
  if (v5) {
    BOOL v6 = *a2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6)
  {
    unsigned int v7 = v3 & 0xFFFFFF;
    unint64_t v8 = 1;
    do
    {
      if (a1[1] + 1 <= 0x1F) {
        sub_112BFE4(a1, (char)v3);
      }
      if (v8 >= v5) {
        break;
      }
      unsigned int v3 = v7 >> 8;
      ++v8;
      unsigned int v7 = v3;
    }
    while ((_BYTE)v3);
  }
  return a1;
}

unint64_t *sub_112C210(unint64_t *a1, void *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >= 0x17) {
    unint64_t v4 = 23;
  }
  else {
    unint64_t v4 = a2[1];
  }
  if (v3 > 7)
  {
    unint64_t v8 = (unsigned __int8 *)(a2 + 2);
    if (v4 <= 1) {
      unint64_t v4 = 1;
    }
    do
    {
      int v10 = *v8++;
      char v9 = v10;
      if (!v10) {
        break;
      }
      if (a1[1] + 1 <= 0x1F) {
        sub_112BFE4(a1, v9);
      }
      --v4;
    }
    while (v4);
  }
  else
  {
    unint64_t v5 = *a2;
    if (v4) {
      BOOL v6 = *a2 == 0;
    }
    else {
      BOOL v6 = 1;
    }
    if (!v6)
    {
      unint64_t v7 = 1;
      do
      {
        if (a1[1] + 1 <= 0x1F) {
          sub_112BFE4(a1, (char)v5);
        }
        if (v7 >= v4) {
          break;
        }
        v5 >>= 8;
        ++v7;
      }
      while ((_BYTE)v5);
    }
  }
  return a1;
}

uint64_t sub_112C2DC(uint64_t *a1, void *a2)
{
  uint64_t result = sub_112C354((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_112C354(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    char v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_112C3EC((uint64_t)v13);
  return v11;
}

uint64_t sub_112C3EC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_112C424(a1);
  }
  return a1;
}

uint64_t sub_112C424(uint64_t result)
{
  unint64_t v1 = *(uint64_t **)(*(void *)(result + 16) + 8);
  unint64_t v2 = *(uint64_t **)(*(void *)(result + 8) + 8);
  while (v1 != v2)
  {
    uint64_t result = *v1;
    *unint64_t v1 = 0;
    if (result) {
      operator delete();
    }
    ++v1;
  }
  return result;
}

uint64_t sub_112C47C(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_112C4B4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2 != a2)
  {
    uint64_t v3 = result;
    do
    {
      *(void *)(v3 + 16) = v2 - 8;
      uint64_t result = *(void *)(v2 - 8);
      *(void *)(v2 - 8) = 0;
      if (result) {
        operator delete();
      }
      uint64_t v2 = *(void *)(v3 + 16);
    }
    while (v2 != a2);
  }
  return result;
}

void *sub_112C518(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_188D718();
  }
  return operator new(24 * a2);
}

uint64_t sub_112C560(unsigned __int8 *a1, void *a2)
{
  char v3 = 1;
  uint64_t result = 50331648;
  while (1)
  {
    int v5 = *a1;
    if (v5 == 45) {
      break;
    }
    if (v5 == 95 || v5 == 0) {
      break;
    }
    if ((v5 - 65) < 0x1A) {
      LOBYTE(v5) = v5 + 32;
    }
    v3 &= ((v5 & 0xDF) - 65) < 0x1Au;
    unsigned int v7 = (((char)v5 << (24 - 8 * BYTE3(result))) | result) - 0x1000000;
    if (BYTE3(result) - 1 > 2u) {
      unsigned int v7 = result;
    }
    if (result >> 26) {
      uint64_t result = result;
    }
    else {
      uint64_t result = v7;
    }
    ++a1;
  }
  if (a2) {
    *a2 = a1;
  }
  if (((((3 - BYTE3(result)) & 0xFFFFFFFE) == 2) & v3) == 0) {
    return 50331648;
  }
  return result;
}

void sub_112C61C(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = *a1;
  unint64_t v4 = (uint64_t *)a1[1];
  uint64_t v6 = ((uint64_t)a2 - *a1) >> 4;
  unint64_t v9 = a1[2];
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = v9;
  if ((unint64_t)v4 < v9)
  {
    if (a2 != v4) {
      operator new();
    }
    *a2 = *a3;
    operator new();
  }
  unint64_t v10 = (((uint64_t)v4 - v5) >> 4) + 1;
  if (!(v10 >> 60))
  {
    uint64_t v11 = v8 - v5;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    uint64_t v18 = v7;
    if (v12) {
      long long v13 = (char *)sub_1121C00(v7, v12);
    }
    else {
      long long v13 = 0;
    }
    char v14 = v13;
    long long v15 = &v13[16 * v6];
    long long v16 = v15;
    unint64_t v17 = &v13[16 * v12];
    sub_112C880(&v14, a3);
  }
  sub_2E00();
}

void sub_112C7D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v11 + 8) = v10;
  _Unwind_Resume(exception_object);
}

uint64_t sub_112C818(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  unint64_t v8 = (void *)v6;
  if (v7 < a3)
  {
    unint64_t v9 = (uint64_t *)v7;
    unint64_t v8 = *(void **)(a1 + 8);
    do
    {
      uint64_t v10 = *v9;
      uint64_t v11 = v9[1];
      v9[1] = 0;
      *unint64_t v8 = v10;
      v8[1] = v11;
      v8 += 2;
      v9 += 2;
    }
    while ((unint64_t)v9 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_112CAA4((uint64_t)&v13, a2, v7, v6);
}

void sub_112C880(void *a1, uint64_t *a2)
{
  unint64_t v4 = (uint64_t *)a1[2];
  if (v4 == (uint64_t *)a1[3])
  {
    uint64_t v5 = (uint64_t *)a1[1];
    uint64_t v6 = (uint64_t)v5 - *a1;
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (uint64_t *)*a1) {
        unint64_t v13 = 1;
      }
      else {
        unint64_t v13 = ((uint64_t)v4 - *a1) >> 3;
      }
      uint64_t v14 = a1[4];
      uint64_t v28 = a1[4];
      long long v15 = (char *)sub_1121C00(v14, v13);
      unint64_t v17 = &v15[16 * (v13 >> 2)];
      uint64_t v18 = (void *)a1[1];
      uint64_t v19 = a1[2] - (void)v18;
      if (v19)
      {
        uint64_t v20 = &v17[v19];
        uint64_t v21 = &v15[16 * (v13 >> 2)];
        do
        {
          *(void *)uint64_t v21 = *v18;
          uint64_t v22 = v18[1];
          v18[1] = 0;
          *((void *)v21 + 1) = v22;
          v21 += 16;
          v18 += 2;
        }
        while (v21 != v20);
        int64x2_t v23 = *(int64x2_t *)(a1 + 1);
      }
      else
      {
        int64x2_t v23 = vdupq_n_s64((unint64_t)v18);
        uint64_t v20 = &v15[16 * (v13 >> 2)];
      }
      uint64_t v25 = (uint64_t *)*a1;
      *a1 = v15;
      a1[1] = v17;
      int64x2_t v26 = v23;
      uint64_t v24 = a1[3];
      a1[2] = v20;
      a1[3] = &v15[16 * v16];
      uint64_t v27 = v24;
      sub_112CDE0((uint64_t)&v25);
      unint64_t v4 = (uint64_t *)a1[2];
    }
    else
    {
      uint64_t v7 = v6 >> 4;
      BOOL v8 = v6 >> 4 < -1;
      uint64_t v9 = (v6 >> 4) + 2;
      if (v8) {
        unint64_t v10 = v9;
      }
      else {
        unint64_t v10 = v7 + 1;
      }
      unint64_t v11 = v10 >> 1;
      sub_112CB20((uint64_t)&v25, v5, v4, &v5[-2 * (v10 >> 1)]);
      unint64_t v4 = v12;
      a1[1] -= 16 * v11;
      a1[2] = v12;
    }
  }
  *unint64_t v4 = *a2;
  operator new();
}

uint64_t sub_112C9F0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1 + 16;
  sub_112CBA0(a1 + 16, (uint64_t)a3, (uint64_t)a3, *(void *)a1, *(void *)a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_112CC3C(v7, a3, *(void **)(a1 + 8), (void *)a2[2]);
  uint64_t v9 = *(void *)a1;
  *(void *)a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = a2[2];
  a2[2] = v10;
  uint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_112CAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    do
    {
      uint64_t v6 = *(void *)(v5 - 16);
      v5 -= 16;
      *(void *)(a4 - 16) = v6;
      a4 -= 16;
      uint64_t v7 = *(void *)(v5 + 8);
      *(void *)(v5 + 8) = 0;
      uint64_t v8 = *(void *)(a4 + 8);
      *(void *)(a4 + 8) = v7;
      if (v8) {
        operator delete();
      }
    }
    while (v5 != a2);
  }
  return a3;
}

uint64_t *sub_112CB20(uint64_t a1, uint64_t *a2, uint64_t *a3, void *a4)
{
  uint64_t v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    uint64_t v7 = *v5;
    uint64_t v8 = v5[1];
    v5[1] = 0;
    uint64_t v9 = a4[1];
    *a4 = v7;
    a4[1] = v8;
    if (v9) {
      operator delete();
    }
    a4 += 2;
    v5 += 2;
  }
  while (v5 != a3);
  return v6;
}

uint64_t sub_112CBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 16);
    do
    {
      uint64_t v9 = *(void *)(a3 - 16);
      a3 -= 16;
      *uint64_t v8 = v9;
      uint64_t v10 = *(void *)(a3 + 8);
      *(void *)(a3 + 8) = 0;
      v8[1] = v10;
      *((void *)&v16 + 1) = v8;
      v8 -= 2;
      v7 -= 16;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_112CCC0((uint64_t)v13);
  return v11;
}

void *sub_112CC3C(uint64_t a1, void *a2, void *a3, void *a4)
{
  unint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  void v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      *unint64_t v4 = *a2;
      uint64_t v5 = a2[1];
      a2[1] = 0;
      v4[1] = v5;
      v4 += 2;
      a2 += 2;
    }
    while (a2 != a3);
    uint64_t v10 = v4;
  }
  char v8 = 1;
  sub_112CD50((uint64_t)v7);
  return v4;
}

uint64_t sub_112CCC0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_112CCF8(a1);
  }
  return a1;
}

uint64_t sub_112CCF8(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(result + 8) + 8);
  while (v1 != v2)
  {
    uint64_t result = *(void *)(v1 + 8);
    *(void *)(v1 + 8) = 0;
    if (result) {
      operator delete();
    }
    v1 += 16;
  }
  return result;
}

uint64_t sub_112CD50(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_112CD88(a1);
  }
  return a1;
}

uint64_t sub_112CD88(uint64_t result)
{
  uint64_t v1 = **(void **)(result + 16);
  uint64_t v2 = **(void **)(result + 8);
  while (v1 != v2)
  {
    uint64_t result = *(void *)(v1 - 8);
    *(void *)(v1 - 8) = 0;
    if (result) {
      operator delete();
    }
    v1 -= 16;
  }
  return result;
}

uint64_t sub_112CDE0(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_112CE18(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2 != a2)
  {
    uint64_t v3 = result;
    do
    {
      *(void *)(v3 + 16) = v2 - 16;
      uint64_t result = *(void *)(v2 - 8);
      *(void *)(v2 - 8) = 0;
      if (result) {
        operator delete();
      }
      uint64_t v2 = *(void *)(v3 + 16);
    }
    while (v2 != a2);
  }
  return result;
}

void sub_112CE7C(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = *a1;
  unint64_t v4 = (uint64_t *)a1[1];
  uint64_t v6 = ((uint64_t)a2 - *a1) >> 4;
  unint64_t v9 = a1[2];
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = v9;
  if ((unint64_t)v4 < v9)
  {
    if (a2 != v4) {
      operator new();
    }
    *a2 = *a3;
    operator new();
  }
  unint64_t v10 = (((uint64_t)v4 - v5) >> 4) + 1;
  if (!(v10 >> 60))
  {
    uint64_t v11 = v8 - v5;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    uint64_t v18 = v7;
    if (v12) {
      unint64_t v13 = (char *)sub_1121C00(v7, v12);
    }
    else {
      unint64_t v13 = 0;
    }
    char v14 = v13;
    long long v15 = &v13[16 * v6];
    long long v16 = v15;
    unint64_t v17 = &v13[16 * v12];
    sub_112D070(&v14, a3);
  }
  sub_2E00();
}

void sub_112D030(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v11 + 8) = v10;
  _Unwind_Resume(exception_object);
}

void sub_112D070(void *a1, uint64_t *a2)
{
  unint64_t v4 = (uint64_t *)a1[2];
  if (v4 == (uint64_t *)a1[3])
  {
    uint64_t v5 = (uint64_t *)a1[1];
    uint64_t v6 = (uint64_t)v5 - *a1;
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (uint64_t *)*a1) {
        unint64_t v13 = 1;
      }
      else {
        unint64_t v13 = ((uint64_t)v4 - *a1) >> 3;
      }
      uint64_t v14 = a1[4];
      uint64_t v28 = a1[4];
      long long v15 = (char *)sub_1121C00(v14, v13);
      unint64_t v17 = &v15[16 * (v13 >> 2)];
      uint64_t v18 = (void *)a1[1];
      uint64_t v19 = a1[2] - (void)v18;
      if (v19)
      {
        uint64_t v20 = &v17[v19];
        uint64_t v21 = &v15[16 * (v13 >> 2)];
        do
        {
          *(void *)uint64_t v21 = *v18;
          uint64_t v22 = v18[1];
          v18[1] = 0;
          *((void *)v21 + 1) = v22;
          v21 += 16;
          v18 += 2;
        }
        while (v21 != v20);
        int64x2_t v23 = *(int64x2_t *)(a1 + 1);
      }
      else
      {
        int64x2_t v23 = vdupq_n_s64((unint64_t)v18);
        uint64_t v20 = &v15[16 * (v13 >> 2)];
      }
      uint64_t v25 = (uint64_t *)*a1;
      *a1 = v15;
      a1[1] = v17;
      int64x2_t v26 = v23;
      uint64_t v24 = a1[3];
      a1[2] = v20;
      a1[3] = &v15[16 * v16];
      uint64_t v27 = v24;
      sub_112CDE0((uint64_t)&v25);
      unint64_t v4 = (uint64_t *)a1[2];
    }
    else
    {
      uint64_t v7 = v6 >> 4;
      BOOL v8 = v6 >> 4 < -1;
      uint64_t v9 = (v6 >> 4) + 2;
      if (v8) {
        unint64_t v10 = v9;
      }
      else {
        unint64_t v10 = v7 + 1;
      }
      unint64_t v11 = v10 >> 1;
      sub_112CB20((uint64_t)&v25, v5, v4, &v5[-2 * (v10 >> 1)]);
      unint64_t v4 = v12;
      a1[1] -= 16 * v11;
      a1[2] = v12;
    }
  }
  *unint64_t v4 = *a2;
  operator new();
}

void sub_112D1DC(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = *a1;
  unint64_t v4 = (uint64_t *)a1[1];
  uint64_t v6 = ((uint64_t)a2 - *a1) >> 4;
  unint64_t v9 = a1[2];
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = v9;
  if ((unint64_t)v4 < v9)
  {
    if (a2 != v4) {
      operator new();
    }
    *a2 = *a3;
    operator new();
  }
  unint64_t v10 = (((uint64_t)v4 - v5) >> 4) + 1;
  if (!(v10 >> 60))
  {
    uint64_t v11 = v8 - v5;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    uint64_t v18 = v7;
    if (v12) {
      unint64_t v13 = (char *)sub_1121C00(v7, v12);
    }
    else {
      unint64_t v13 = 0;
    }
    uint64_t v14 = v13;
    long long v15 = &v13[16 * v6];
    uint64_t v16 = v15;
    unint64_t v17 = &v13[16 * v12];
    sub_112D420(&v14, a3);
  }
  sub_2E00();
}

void sub_112D378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v11 + 8) = v10;
  _Unwind_Resume(exception_object);
}

uint64_t sub_112D3B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  unint64_t v8 = (void *)v6;
  if (v7 < a3)
  {
    unint64_t v9 = (uint64_t *)v7;
    unint64_t v8 = *(void **)(a1 + 8);
    do
    {
      uint64_t v10 = *v9;
      uint64_t v11 = v9[1];
      v9[1] = 0;
      *unint64_t v8 = v10;
      v8[1] = v11;
      v8 += 2;
      v9 += 2;
    }
    while ((unint64_t)v9 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_112D634((uint64_t)&v13, a2, v7, v6);
}

void sub_112D420(void *a1, uint64_t *a2)
{
  unint64_t v4 = (uint64_t *)a1[2];
  if (v4 == (uint64_t *)a1[3])
  {
    uint64_t v5 = (uint64_t *)a1[1];
    uint64_t v6 = (uint64_t)v5 - *a1;
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (uint64_t *)*a1) {
        unint64_t v13 = 1;
      }
      else {
        unint64_t v13 = ((uint64_t)v4 - *a1) >> 3;
      }
      uint64_t v14 = a1[4];
      uint64_t v28 = a1[4];
      long long v15 = (char *)sub_1121C00(v14, v13);
      unint64_t v17 = &v15[16 * (v13 >> 2)];
      uint64_t v18 = (void *)a1[1];
      uint64_t v19 = a1[2] - (void)v18;
      if (v19)
      {
        uint64_t v20 = &v17[v19];
        uint64_t v21 = &v15[16 * (v13 >> 2)];
        do
        {
          *(void *)uint64_t v21 = *v18;
          uint64_t v22 = v18[1];
          v18[1] = 0;
          *((void *)v21 + 1) = v22;
          v21 += 16;
          v18 += 2;
        }
        while (v21 != v20);
        int64x2_t v23 = *(int64x2_t *)(a1 + 1);
      }
      else
      {
        int64x2_t v23 = vdupq_n_s64((unint64_t)v18);
        uint64_t v20 = &v15[16 * (v13 >> 2)];
      }
      uint64_t v25 = (uint64_t *)*a1;
      *a1 = v15;
      a1[1] = v17;
      int64x2_t v26 = v23;
      uint64_t v24 = a1[3];
      a1[2] = v20;
      a1[3] = &v15[16 * v16];
      uint64_t v27 = v24;
      sub_112D970((uint64_t)&v25);
      unint64_t v4 = (uint64_t *)a1[2];
    }
    else
    {
      uint64_t v7 = v6 >> 4;
      BOOL v8 = v6 >> 4 < -1;
      uint64_t v9 = (v6 >> 4) + 2;
      if (v8) {
        unint64_t v10 = v9;
      }
      else {
        unint64_t v10 = v7 + 1;
      }
      unint64_t v11 = v10 >> 1;
      sub_112D6B0((uint64_t)&v25, v5, v4, &v5[-2 * (v10 >> 1)]);
      unint64_t v4 = v12;
      a1[1] -= 16 * v11;
      a1[2] = v12;
    }
  }
  *unint64_t v4 = *a2;
  operator new();
}

uint64_t sub_112D580(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1 + 16;
  sub_112D730(a1 + 16, (uint64_t)a3, (uint64_t)a3, *(void *)a1, *(void *)a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_112D7CC(v7, a3, *(void **)(a1 + 8), (void *)a2[2]);
  uint64_t v9 = *(void *)a1;
  *(void *)a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = a2[2];
  a2[2] = v10;
  uint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_112D634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    do
    {
      uint64_t v6 = *(void *)(v5 - 16);
      v5 -= 16;
      *(void *)(a4 - 16) = v6;
      a4 -= 16;
      uint64_t v7 = *(void *)(v5 + 8);
      *(void *)(v5 + 8) = 0;
      uint64_t v8 = *(void *)(a4 + 8);
      *(void *)(a4 + 8) = v7;
      if (v8) {
        operator delete();
      }
    }
    while (v5 != a2);
  }
  return a3;
}

uint64_t *sub_112D6B0(uint64_t a1, uint64_t *a2, uint64_t *a3, void *a4)
{
  uint64_t v5 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  do
  {
    uint64_t v7 = *v5;
    uint64_t v8 = v5[1];
    v5[1] = 0;
    uint64_t v9 = a4[1];
    *a4 = v7;
    a4[1] = v8;
    if (v9) {
      operator delete();
    }
    a4 += 2;
    v5 += 2;
  }
  while (v5 != a3);
  return v6;
}

uint64_t sub_112D730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 16);
    do
    {
      uint64_t v9 = *(void *)(a3 - 16);
      a3 -= 16;
      *uint64_t v8 = v9;
      uint64_t v10 = *(void *)(a3 + 8);
      *(void *)(a3 + 8) = 0;
      v8[1] = v10;
      *((void *)&v16 + 1) = v8;
      v8 -= 2;
      v7 -= 16;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_112D850((uint64_t)v13);
  return v11;
}

void *sub_112D7CC(uint64_t a1, void *a2, void *a3, void *a4)
{
  unint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  void v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      *unint64_t v4 = *a2;
      uint64_t v5 = a2[1];
      a2[1] = 0;
      v4[1] = v5;
      v4 += 2;
      a2 += 2;
    }
    while (a2 != a3);
    uint64_t v10 = v4;
  }
  char v8 = 1;
  sub_112D8E0((uint64_t)v7);
  return v4;
}

uint64_t sub_112D850(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_112D888(a1);
  }
  return a1;
}

uint64_t sub_112D888(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(result + 8) + 8);
  while (v1 != v2)
  {
    uint64_t result = *(void *)(v1 + 8);
    *(void *)(v1 + 8) = 0;
    if (result) {
      operator delete();
    }
    v1 += 16;
  }
  return result;
}

uint64_t sub_112D8E0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_112D918(a1);
  }
  return a1;
}

uint64_t sub_112D918(uint64_t result)
{
  uint64_t v1 = **(void **)(result + 16);
  uint64_t v2 = **(void **)(result + 8);
  while (v1 != v2)
  {
    uint64_t result = *(void *)(v1 - 8);
    *(void *)(v1 - 8) = 0;
    if (result) {
      operator delete();
    }
    v1 -= 16;
  }
  return result;
}

uint64_t sub_112D970(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_112D9A8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2 != a2)
  {
    uint64_t v3 = result;
    do
    {
      *(void *)(v3 + 16) = v2 - 16;
      uint64_t result = *(void *)(v2 - 8);
      *(void *)(v2 - 8) = 0;
      if (result) {
        operator delete();
      }
      uint64_t v2 = *(void *)(v3 + 16);
    }
    while (v2 != a2);
  }
  return result;
}

void sub_112DA0C(uint64_t *a1, void *a2, uint64_t *a3)
{
  uint64_t v5 = *a1;
  unint64_t v4 = (void *)a1[1];
  uint64_t v6 = ((uint64_t)a2 - *a1) >> 4;
  unint64_t v9 = a1[2];
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = v9;
  if ((unint64_t)v4 < v9)
  {
    if (a2 != v4)
    {
      uint64_t v16 = v7;
      sub_112DE14(&v14, *a3);
    }
    sub_112DE14(a2, *a3);
  }
  unint64_t v10 = (((uint64_t)v4 - v5) >> 4) + 1;
  if (!(v10 >> 60))
  {
    uint64_t v11 = v8 - v5;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    uint64_t v18 = v7;
    if (v12) {
      unint64_t v13 = (char *)sub_1121C00(v7, v12);
    }
    else {
      unint64_t v13 = 0;
    }
    char v14 = v13;
    long long v15 = &v13[16 * v6];
    uint64_t v16 = (uint64_t)v15;
    unint64_t v17 = &v13[16 * v12];
    sub_112DC28(&v14, a3);
  }
  sub_2E00();
}

void sub_112DB84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  *(void *)(v12 + 8) = v11;
  _Unwind_Resume(exception_object);
}

uint64_t sub_112DBC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  unint64_t v8 = (void *)v6;
  if (v7 < a3)
  {
    unint64_t v9 = (uint64_t *)v7;
    unint64_t v8 = *(void **)(a1 + 8);
    do
    {
      uint64_t v10 = *v9;
      uint64_t v11 = v9[1];
      v9[1] = 0;
      *unint64_t v8 = v10;
      v8[1] = v11;
      v8 += 2;
      v9 += 2;
    }
    while ((unint64_t)v9 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_112DF6C((uint64_t)&v13, a2, v7, v6);
}

void sub_112DC28(void *a1, uint64_t *a2)
{
  unint64_t v4 = (uint64_t *)a1[2];
  if (v4 == (uint64_t *)a1[3])
  {
    uint64_t v5 = (uint64_t *)a1[1];
    uint64_t v6 = (uint64_t)v5 - *a1;
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (uint64_t *)*a1) {
        unint64_t v13 = 1;
      }
      else {
        unint64_t v13 = ((uint64_t)v4 - *a1) >> 3;
      }
      uint64_t v14 = a1[4];
      uint64_t v28 = a1[4];
      long long v15 = (char *)sub_1121C00(v14, v13);
      unint64_t v17 = &v15[16 * (v13 >> 2)];
      uint64_t v18 = (void *)a1[1];
      uint64_t v19 = a1[2] - (void)v18;
      if (v19)
      {
        uint64_t v20 = &v17[v19];
        uint64_t v21 = &v15[16 * (v13 >> 2)];
        do
        {
          *(void *)uint64_t v21 = *v18;
          uint64_t v22 = v18[1];
          v18[1] = 0;
          *((void *)v21 + 1) = v22;
          v21 += 16;
          v18 += 2;
        }
        while (v21 != v20);
        int64x2_t v23 = *(int64x2_t *)(a1 + 1);
      }
      else
      {
        int64x2_t v23 = vdupq_n_s64((unint64_t)v18);
        uint64_t v20 = &v15[16 * (v13 >> 2)];
      }
      uint64_t v25 = (uint64_t *)*a1;
      *a1 = v15;
      a1[1] = v17;
      int64x2_t v26 = v23;
      uint64_t v24 = a1[3];
      a1[2] = v20;
      a1[3] = &v15[16 * v16];
      uint64_t v27 = v24;
      sub_112E2A0((uint64_t)&v25);
      unint64_t v4 = (uint64_t *)a1[2];
    }
    else
    {
      uint64_t v7 = v6 >> 4;
      BOOL v8 = v6 >> 4 < -1;
      uint64_t v9 = (v6 >> 4) + 2;
      if (v8) {
        unint64_t v10 = v9;
      }
      else {
        unint64_t v10 = v7 + 1;
      }
      unint64_t v11 = v10 >> 1;
      sub_112DFE4((uint64_t)&v25, v5, v4, (uint64_t)&v5[-2 * (v10 >> 1)]);
      unint64_t v4 = v12;
      a1[1] -= 16 * v11;
      a1[2] = v12;
    }
  }
  sub_112DE14(v4, *a2);
}

uint64_t sub_112DD60(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1 + 16;
  sub_112E060(a1 + 16, (uint64_t)a3, (uint64_t)a3, *(void *)a1, *(void *)a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_112E0FC(v7, a3, *(void **)(a1 + 8), (void *)a2[2]);
  uint64_t v9 = *(void *)a1;
  *(void *)a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = a2[2];
  a2[2] = v10;
  uint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

void sub_112DE14(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_112DE88()
{
}

void *sub_112DEAC(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_112DF28(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_112DF0C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_112DF28(void *a1, unint64_t a2)
{
  if (a2 >> 60) {
    sub_2E00();
  }
  uint64_t result = (char *)sub_1121C00((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[16 * v4];
  return result;
}

uint64_t sub_112DF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v6 = (uint64_t *)(a4 - 8);
    uint64_t v7 = a3;
    do
    {
      uint64_t v8 = *(void *)(v7 - 16);
      v7 -= 16;
      *(v6 - 1) = v8;
      uint64_t v9 = *(void *)(v7 + 8);
      *(void *)(v7 + 8) = 0;
      uint64_t v10 = *v6;
      *uint64_t v6 = v9;
      if (v10) {
        sub_112BBCC((uint64_t)v6, v10);
      }
      v6 -= 2;
    }
    while (v7 != a2);
  }
  return a3;
}

uint64_t *sub_112DFE4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v5 = a3;
  uint64_t v6 = (uint64_t *)(a4 + 8);
  do
  {
    uint64_t v7 = v4[1];
    *(v6 - 1) = *v4;
    v4[1] = 0;
    uint64_t v8 = *v6;
    *uint64_t v6 = v7;
    if (v8) {
      sub_112BBCC((uint64_t)v6, v8);
    }
    v6 += 2;
    v4 += 2;
  }
  while (v4 != v5);
  return v5;
}

uint64_t sub_112E060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 16);
    do
    {
      uint64_t v9 = *(void *)(a3 - 16);
      a3 -= 16;
      *uint64_t v8 = v9;
      uint64_t v10 = *(void *)(a3 + 8);
      *(void *)(a3 + 8) = 0;
      v8[1] = v10;
      *((void *)&v16 + 1) = v8;
      v8 -= 2;
      v7 -= 16;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_112E180((uint64_t)v13);
  return v11;
}

void *sub_112E0FC(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  void v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      *uint64_t v4 = *a2;
      uint64_t v5 = a2[1];
      a2[1] = 0;
      v4[1] = v5;
      v4 += 2;
      a2 += 2;
    }
    while (a2 != a3);
    uint64_t v10 = v4;
  }
  char v8 = 1;
  sub_112E210((uint64_t)v7);
  return v4;
}

uint64_t sub_112E180(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_112E1B8(a1);
  }
  return a1;
}

void sub_112E1B8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(uint64_t **)(*(void *)(a1 + 8) + 8);
  if (v1 != v2)
  {
    uint64_t v3 = v1 + 1;
    do
    {
      uint64_t v4 = *v3;
      uint64_t *v3 = 0;
      if (v4) {
        sub_112BBCC((uint64_t)v3, v4);
      }
      uint64_t v5 = v3 + 1;
      v3 += 2;
    }
    while (v5 != v2);
  }
}

uint64_t sub_112E210(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_112E248(a1);
  }
  return a1;
}

void sub_112E248(uint64_t a1)
{
  uint64_t v1 = **(uint64_t ***)(a1 + 16);
  uint64_t v2 = **(uint64_t ***)(a1 + 8);
  if (v1 != v2)
  {
    uint64_t v3 = v1 - 1;
    do
    {
      uint64_t v4 = *v3;
      uint64_t *v3 = 0;
      if (v4) {
        sub_112BBCC((uint64_t)v3, v4);
      }
      uint64_t v5 = v3 - 1;
      v3 -= 2;
    }
    while (v5 != v2);
  }
}

uint64_t sub_112E2A0(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_112E2D8(uint64_t a1, uint64_t a2)
{
  for (uint64_t result = *(void *)(a1 + 16); result != a2; uint64_t result = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = result - 16;
    uint64_t v7 = *(void *)(result - 8);
    uint64_t v5 = (void *)(result - 8);
    uint64_t v6 = v7;
    *uint64_t v5 = 0;
    if (v7) {
      sub_112BBCC((uint64_t)v5, v6);
    }
  }
  return result;
}

void sub_112E32C(uint64_t *a1, void *a2, uint64_t *a3)
{
  uint64_t v5 = *a1;
  uint64_t v4 = (void *)a1[1];
  uint64_t v6 = ((uint64_t)a2 - *a1) >> 4;
  unint64_t v9 = a1[2];
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = v9;
  if ((unint64_t)v4 < v9)
  {
    if (a2 != v4)
    {
      uint64_t v16 = v7;
      sub_112E734(&v14, *a3);
    }
    sub_112E734(a2, *a3);
  }
  unint64_t v10 = (((uint64_t)v4 - v5) >> 4) + 1;
  if (!(v10 >> 60))
  {
    uint64_t v11 = v8 - v5;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    uint64_t v18 = v7;
    if (v12) {
      unint64_t v13 = (char *)sub_1121C00(v7, v12);
    }
    else {
      unint64_t v13 = 0;
    }
    char v14 = v13;
    long long v15 = &v13[16 * v6];
    uint64_t v16 = (uint64_t)v15;
    unint64_t v17 = &v13[16 * v12];
    sub_112E548(&v14, a3);
  }
  sub_2E00();
}

void sub_112E4A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11)
{
  *(void *)(v12 + 8) = v11;
  _Unwind_Resume(exception_object);
}

uint64_t sub_112E4E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  unint64_t v8 = (void *)v6;
  if (v7 < a3)
  {
    unint64_t v9 = (uint64_t *)v7;
    unint64_t v8 = *(void **)(a1 + 8);
    do
    {
      uint64_t v10 = *v9;
      uint64_t v11 = v9[1];
      v9[1] = 0;
      *unint64_t v8 = v10;
      v8[1] = v11;
      v8 += 2;
      v9 += 2;
    }
    while ((unint64_t)v9 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_112E89C((uint64_t)&v13, a2, v7, v6);
}

void sub_112E548(void *a1, uint64_t *a2)
{
  uint64_t v4 = (uint64_t *)a1[2];
  if (v4 == (uint64_t *)a1[3])
  {
    uint64_t v5 = (uint64_t *)a1[1];
    uint64_t v6 = (uint64_t)v5 - *a1;
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (uint64_t *)*a1) {
        unint64_t v13 = 1;
      }
      else {
        unint64_t v13 = ((uint64_t)v4 - *a1) >> 3;
      }
      uint64_t v14 = a1[4];
      uint64_t v28 = a1[4];
      long long v15 = (char *)sub_1121C00(v14, v13);
      unint64_t v17 = &v15[16 * (v13 >> 2)];
      uint64_t v18 = (void *)a1[1];
      uint64_t v19 = a1[2] - (void)v18;
      if (v19)
      {
        uint64_t v20 = &v17[v19];
        uint64_t v21 = &v15[16 * (v13 >> 2)];
        do
        {
          *(void *)uint64_t v21 = *v18;
          uint64_t v22 = v18[1];
          v18[1] = 0;
          *((void *)v21 + 1) = v22;
          v21 += 16;
          v18 += 2;
        }
        while (v21 != v20);
        int64x2_t v23 = *(int64x2_t *)(a1 + 1);
      }
      else
      {
        int64x2_t v23 = vdupq_n_s64((unint64_t)v18);
        uint64_t v20 = &v15[16 * (v13 >> 2)];
      }
      uint64_t v25 = (uint64_t *)*a1;
      *a1 = v15;
      a1[1] = v17;
      int64x2_t v26 = v23;
      uint64_t v24 = a1[3];
      a1[2] = v20;
      a1[3] = &v15[16 * v16];
      uint64_t v27 = v24;
      sub_112EBD0((uint64_t)&v25);
      uint64_t v4 = (uint64_t *)a1[2];
    }
    else
    {
      uint64_t v7 = v6 >> 4;
      BOOL v8 = v6 >> 4 < -1;
      uint64_t v9 = (v6 >> 4) + 2;
      if (v8) {
        unint64_t v10 = v9;
      }
      else {
        unint64_t v10 = v7 + 1;
      }
      unint64_t v11 = v10 >> 1;
      sub_112E914((uint64_t)&v25, v5, v4, (uint64_t)&v5[-2 * (v10 >> 1)]);
      uint64_t v4 = v12;
      a1[1] -= 16 * v11;
      a1[2] = v12;
    }
  }
  sub_112E734(v4, *a2);
}

uint64_t sub_112E680(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = a1 + 16;
  sub_112E990(a1 + 16, (uint64_t)a3, (uint64_t)a3, *(void *)a1, *(void *)a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_112EA2C(v7, a3, *(void **)(a1 + 8), (void *)a2[2]);
  uint64_t v9 = *(void *)a1;
  *(void *)a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = a2[2];
  a2[2] = v10;
  uint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

void sub_112E734(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_112E7A8()
{
}

void *sub_112E7CC(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_112E848(result, a4);
    uint64_t v7 = v6[1];
    uint64_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8 - 4);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_112E82C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_112E848(void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_2E00();
  }
  uint64_t result = (char *)sub_112C518((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

uint64_t sub_112E89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v6 = (uint64_t *)(a4 - 8);
    uint64_t v7 = a3;
    do
    {
      uint64_t v8 = *(void *)(v7 - 16);
      v7 -= 16;
      *(v6 - 1) = v8;
      uint64_t v9 = *(void *)(v7 + 8);
      *(void *)(v7 + 8) = 0;
      uint64_t v10 = *v6;
      *uint64_t v6 = v9;
      if (v10) {
        sub_112BAB8((uint64_t)v6, v10);
      }
      v6 -= 2;
    }
    while (v7 != a2);
  }
  return a3;
}

uint64_t *sub_112E914(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4 = a2;
  if (a2 == a3) {
    return a2;
  }
  uint64_t v5 = a3;
  uint64_t v6 = (uint64_t *)(a4 + 8);
  do
  {
    uint64_t v7 = v4[1];
    *(v6 - 1) = *v4;
    v4[1] = 0;
    uint64_t v8 = *v6;
    *uint64_t v6 = v7;
    if (v8) {
      sub_112BAB8((uint64_t)v6, v8);
    }
    v6 += 2;
    v4 += 2;
  }
  while (v4 != v5);
  return v5;
}

uint64_t sub_112E990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 16);
    do
    {
      uint64_t v9 = *(void *)(a3 - 16);
      a3 -= 16;
      *uint64_t v8 = v9;
      uint64_t v10 = *(void *)(a3 + 8);
      *(void *)(a3 + 8) = 0;
      v8[1] = v10;
      *((void *)&v16 + 1) = v8;
      v8 -= 2;
      v7 -= 16;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_112EAB0((uint64_t)v13);
  return v11;
}

void *sub_112EA2C(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v4 = a4;
  uint64_t v10 = a4;
  uint64_t v9 = a4;
  v7[0] = a1;
  v7[1] = &v9;
  void v7[2] = &v10;
  if (a2 != a3)
  {
    do
    {
      *uint64_t v4 = *a2;
      uint64_t v5 = a2[1];
      a2[1] = 0;
      v4[1] = v5;
      v4 += 2;
      a2 += 2;
    }
    while (a2 != a3);
    uint64_t v10 = v4;
  }
  char v8 = 1;
  sub_112EB40((uint64_t)v7);
  return v4;
}

uint64_t sub_112EAB0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_112EAE8(a1);
  }
  return a1;
}

void sub_112EAE8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(uint64_t **)(*(void *)(a1 + 8) + 8);
  if (v1 != v2)
  {
    uint64_t v3 = v1 + 1;
    do
    {
      uint64_t v4 = *v3;
      uint64_t *v3 = 0;
      if (v4) {
        sub_112BAB8((uint64_t)v3, v4);
      }
      uint64_t v5 = v3 + 1;
      v3 += 2;
    }
    while (v5 != v2);
  }
}

uint64_t sub_112EB40(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_112EB78(a1);
  }
  return a1;
}

void sub_112EB78(uint64_t a1)
{
  uint64_t v1 = **(uint64_t ***)(a1 + 16);
  uint64_t v2 = **(uint64_t ***)(a1 + 8);
  if (v1 != v2)
  {
    uint64_t v3 = v1 - 1;
    do
    {
      uint64_t v4 = *v3;
      uint64_t *v3 = 0;
      if (v4) {
        sub_112BAB8((uint64_t)v3, v4);
      }
      uint64_t v5 = v3 - 1;
      v3 -= 2;
    }
    while (v5 != v2);
  }
}

uint64_t sub_112EBD0(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_112EC08(uint64_t a1, uint64_t a2)
{
  for (uint64_t result = *(void *)(a1 + 16); result != a2; uint64_t result = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = result - 16;
    uint64_t v7 = *(void *)(result - 8);
    uint64_t v5 = (void *)(result - 8);
    uint64_t v6 = v7;
    *uint64_t v5 = 0;
    if (v7) {
      sub_112BAB8((uint64_t)v5, v6);
    }
  }
  return result;
}

void sub_112EC5C(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v7 = (a2 - *a1) >> 4;
  unint64_t v10 = a1[2];
  uint64_t v8 = (uint64_t)(a1 + 2);
  unint64_t v9 = v10;
  if (v5 < v10)
  {
    if (a2 != v5) {
      operator new();
    }
    sub_112EE08((uint64_t)a1, a3);
  }
  unint64_t v11 = ((uint64_t)(v5 - v6) >> 4) + 1;
  if (!(v11 >> 60))
  {
    uint64_t v12 = v9 - v6;
    if (v12 >> 3 > v11) {
      unint64_t v11 = v12 >> 3;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v11;
    }
    uint64_t v19 = v8;
    if (v13) {
      char v14 = (char *)sub_1121C00(v8, v13);
    }
    else {
      char v14 = 0;
    }
    long long v15 = v14;
    long long v16 = &v14[16 * v7];
    unint64_t v17 = v16;
    uint64_t v18 = &v14[16 * v13];
    sub_112EE74(&v15, a3);
  }
  sub_2E00();
}

void sub_112EDD4()
{
}

void sub_112EE08(uint64_t a1, void *a2)
{
  **(void **)(a1 + 8) = *a2;
  operator new();
}

void sub_112EE6C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_112EE74(void *a1, uint64_t *a2)
{
  uint64_t v4 = (uint64_t *)a1[2];
  if (v4 == (uint64_t *)a1[3])
  {
    unint64_t v5 = (uint64_t *)a1[1];
    uint64_t v6 = (uint64_t)v5 - *a1;
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (uint64_t *)*a1) {
        unint64_t v13 = 1;
      }
      else {
        unint64_t v13 = ((uint64_t)v4 - *a1) >> 3;
      }
      uint64_t v14 = a1[4];
      uint64_t v28 = a1[4];
      long long v15 = (char *)sub_1121C00(v14, v13);
      unint64_t v17 = &v15[16 * (v13 >> 2)];
      uint64_t v18 = (void *)a1[1];
      uint64_t v19 = a1[2] - (void)v18;
      if (v19)
      {
        uint64_t v20 = &v17[v19];
        uint64_t v21 = &v15[16 * (v13 >> 2)];
        do
        {
          *(void *)uint64_t v21 = *v18;
          uint64_t v22 = v18[1];
          v18[1] = 0;
          *((void *)v21 + 1) = v22;
          v21 += 16;
          v18 += 2;
        }
        while (v21 != v20);
        int64x2_t v23 = *(int64x2_t *)(a1 + 1);
      }
      else
      {
        int64x2_t v23 = vdupq_n_s64((unint64_t)v18);
        uint64_t v20 = &v15[16 * (v13 >> 2)];
      }
      uint64_t v25 = (uint64_t *)*a1;
      *a1 = v15;
      a1[1] = v17;
      int64x2_t v26 = v23;
      uint64_t v24 = a1[3];
      a1[2] = v20;
      a1[3] = &v15[16 * v16];
      uint64_t v27 = v24;
      sub_112D970((uint64_t)&v25);
      uint64_t v4 = (uint64_t *)a1[2];
    }
    else
    {
      uint64_t v7 = v6 >> 4;
      BOOL v8 = v6 >> 4 < -1;
      uint64_t v9 = (v6 >> 4) + 2;
      if (v8) {
        unint64_t v10 = v9;
      }
      else {
        unint64_t v10 = v7 + 1;
      }
      unint64_t v11 = v10 >> 1;
      sub_112D6B0((uint64_t)&v25, v5, v4, &v5[-2 * (v10 >> 1)]);
      uint64_t v4 = v12;
      a1[1] -= 16 * v11;
      a1[2] = v12;
    }
  }
  *uint64_t v4 = *a2;
  operator new();
}

uint64_t sub_112EFD4(uint64_t a1, long long *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE400, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE400))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24FC2C8, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_24FC2C8))
    {
      sub_1122314((uint64_t)&unk_24F8230);
      __cxa_guard_release(&qword_24FC2C8);
    }
    qword_25FE3F8 = (uint64_t)&unk_24F8230;
    __cxa_guard_release(&qword_25FE400);
  }
  uint64_t v3 = (std::mutex *)qword_25FE3F8;
  std::mutex::lock((std::mutex *)qword_25FE3F8);
  uint64_t v4 = sub_1122318(qword_25FE3F8, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_112F0A0(_Unwind_Exception *a1)
{
}

uint64_t sub_112F0D4()
{
  v0 = &qword_25FE000;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE3F0, memory_order_acquire) & 1) == 0)
  {
    int v2 = __cxa_guard_acquire(&qword_25FE3F0);
    v0 = &qword_25FE000;
    if (v2)
    {
      qword_25FE3E8 = (uint64_t)&unk_212F4D0;
      __cxa_guard_release(&qword_25FE3F0);
      v0 = &qword_25FE000;
    }
  }
  return v0[125];
}

uint64_t sub_112F134(uint64_t a1, int *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE410, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE410))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2500350, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2500350))
    {
      qword_24FC2D0 = 850045863;
      qword_24FE318 = 0;
      xmmword_24FE320 = 0u;
      bzero(&unk_24FC2D8, 0x203CuLL);
      sub_112F3AC((uint64_t)&qword_24FC2D0 + &unk_2048, 0);
      qword_2500348 = 0;
      *(_OWORD *)((char *)&qword_24FC2D0 + sub_4068) = 0u;
      bzero((char *)&qword_24FC2D0 + &unk_2060, 0x2004uLL);
      sub_112F414((uint64_t)&qword_24FC2D0 + sub_4068, 0);
      __cxa_guard_release(&qword_2500350);
    }
    qword_25FE408 = (uint64_t)&qword_24FC2D0;
    __cxa_guard_release(&qword_25FE410);
  }
  uint64_t v3 = (std::mutex *)qword_25FE408;
  std::mutex::lock((std::mutex *)qword_25FE408);
  uint64_t v4 = sub_1126EFC(qword_25FE408, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_112F25C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

char *sub_112F270(uint64_t a1, int *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE420, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE420))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2500350, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2500350))
    {
      qword_24FC2D0 = 850045863;
      qword_24FE318 = 0;
      xmmword_24FE320 = 0u;
      bzero(&unk_24FC2D8, 0x203CuLL);
      sub_112F3AC((uint64_t)&qword_24FC2D0 + &unk_2048, 0);
      qword_2500348 = 0;
      *(_OWORD *)((char *)&qword_24FC2D0 + sub_4068) = 0u;
      bzero((char *)&qword_24FC2D0 + &unk_2060, 0x2004uLL);
      sub_112F414((uint64_t)&qword_24FC2D0 + sub_4068, 0);
      __cxa_guard_release(&qword_2500350);
    }
    qword_25FE418 = (uint64_t)&qword_24FC2D0;
    __cxa_guard_release(&qword_25FE420);
  }
  uint64_t v3 = (std::mutex *)qword_25FE418;
  std::mutex::lock((std::mutex *)qword_25FE418);
  uint64_t v4 = sub_1127094(qword_25FE418, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_112F398(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_112F3AC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  for (uint64_t i = *(void *)(result + 8); i != a2; i -= 16)
  {
    uint64_t result = *(void *)(i - 8);
    *(void *)(i - 8) = 0;
    if (result) {
      operator delete();
    }
  }
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t sub_112F414(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  for (uint64_t i = *(void *)(result + 8); i != a2; i -= 16)
  {
    uint64_t result = *(void *)(i - 8);
    *(void *)(i - 8) = 0;
    if (result) {
      operator delete();
    }
  }
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t sub_112F47C(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE430, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE430))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2514AD0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2514AD0))
    {
      sub_11297C0(&unk_2500358);
      __cxa_guard_release(&qword_2514AD0);
    }
    qword_25FE428 = (uint64_t)&unk_2500358;
    __cxa_guard_release(&qword_25FE430);
  }
  uint64_t v3 = (std::mutex *)qword_25FE428;
  std::mutex::lock((std::mutex *)qword_25FE428);
  uint64_t v4 = sub_1129D50(qword_25FE428, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_112F548(_Unwind_Exception *a1)
{
}

uint64_t sub_112F57C(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE440, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE440))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2514AD0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2514AD0))
    {
      sub_11297C0(&unk_2500358);
      __cxa_guard_release(&qword_2514AD0);
    }
    qword_25FE438 = (uint64_t)&unk_2500358;
    __cxa_guard_release(&qword_25FE440);
  }
  uint64_t v3 = (std::mutex *)qword_25FE438;
  std::mutex::lock((std::mutex *)qword_25FE438);
  uint64_t v4 = sub_112A240(qword_25FE438, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_112F648(_Unwind_Exception *a1)
{
}

uint64_t sub_112F67C(uint64_t a1, unsigned int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE450, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE450))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2514AD0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2514AD0))
    {
      sub_11297C0(&unk_2500358);
      __cxa_guard_release(&qword_2514AD0);
    }
    qword_25FE448 = (uint64_t)&unk_2500358;
    __cxa_guard_release(&qword_25FE450);
  }
  uint64_t v3 = (std::mutex *)qword_25FE448;
  std::mutex::lock((std::mutex *)qword_25FE448);
  uint64_t v4 = sub_112A430(qword_25FE448, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_112F748(_Unwind_Exception *a1)
{
}

uint64_t sub_112F77C(uint64_t a1, unsigned int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE460, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE460))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2514AD0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2514AD0))
    {
      sub_11297C0(&unk_2500358);
      __cxa_guard_release(&qword_2514AD0);
    }
    qword_25FE458 = (uint64_t)&unk_2500358;
    __cxa_guard_release(&qword_25FE460);
  }
  uint64_t v3 = (std::mutex *)qword_25FE458;
  std::mutex::lock((std::mutex *)qword_25FE458);
  uint64_t v4 = sub_112A4D4(qword_25FE458, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_112F848(_Unwind_Exception *a1)
{
}

uint64_t sub_112F87C(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE470, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE470))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2514AD0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2514AD0))
    {
      sub_11297C0(&unk_2500358);
      __cxa_guard_release(&qword_2514AD0);
    }
    qword_25FE468 = (uint64_t)&unk_2500358;
    __cxa_guard_release(&qword_25FE470);
  }
  uint64_t v3 = (std::mutex *)qword_25FE468;
  std::mutex::lock((std::mutex *)qword_25FE468);
  uint64_t v4 = sub_112A578(qword_25FE468, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_112F948(_Unwind_Exception *a1)
{
}

uint64_t sub_112F97C(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE480, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE480))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2514AD0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2514AD0))
    {
      sub_11297C0(&unk_2500358);
      __cxa_guard_release(&qword_2514AD0);
    }
    qword_25FE478 = (uint64_t)&unk_2500358;
    __cxa_guard_release(&qword_25FE480);
  }
  uint64_t v3 = (std::mutex *)qword_25FE478;
  std::mutex::lock((std::mutex *)qword_25FE478);
  uint64_t v4 = sub_112A85C(qword_25FE478, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_112FA48(_Unwind_Exception *a1)
{
}

uint64_t sub_112FA7C(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE490, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE490))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2514AD0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2514AD0))
    {
      sub_11297C0(&unk_2500358);
      __cxa_guard_release(&qword_2514AD0);
    }
    qword_25FE488 = (uint64_t)&unk_2500358;
    __cxa_guard_release(&qword_25FE490);
  }
  uint64_t v3 = (std::mutex *)qword_25FE488;
  std::mutex::lock((std::mutex *)qword_25FE488);
  uint64_t v4 = sub_112AB68(qword_25FE488, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_112FB48(_Unwind_Exception *a1)
{
}

uint64_t sub_112FB7C(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE4A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE4A0))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2514AD0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2514AD0))
    {
      sub_11297C0(&unk_2500358);
      __cxa_guard_release(&qword_2514AD0);
    }
    qword_25FE498 = (uint64_t)&unk_2500358;
    __cxa_guard_release(&qword_25FE4A0);
  }
  uint64_t v3 = (std::mutex *)qword_25FE498;
  std::mutex::lock((std::mutex *)qword_25FE498);
  uint64_t v4 = sub_112AE60(qword_25FE498, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_112FC48(_Unwind_Exception *a1)
{
}

void **sub_112FC7C(uint64_t a1, int *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE4B0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE4B0))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2514AD0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2514AD0))
    {
      sub_11297C0(&unk_2500358);
      __cxa_guard_release(&qword_2514AD0);
    }
    qword_25FE4A8 = (uint64_t)&unk_2500358;
    __cxa_guard_release(&qword_25FE4B0);
  }
  uint64_t v3 = (std::mutex *)qword_25FE4A8;
  std::mutex::lock((std::mutex *)qword_25FE4A8);
  uint64_t v4 = sub_112B2C4(qword_25FE4A8, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_112FD48(_Unwind_Exception *a1)
{
}

uint64_t sub_112FD7C(uint64_t a1, unsigned char *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE4C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE4C0))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_251AB78, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_251AB78))
    {
      sub_113001C((uint64_t)&unk_2514AD8);
      __cxa_guard_release(&qword_251AB78);
    }
    qword_25FE4B8 = (uint64_t)&unk_2514AD8;
    __cxa_guard_release(&qword_25FE4C0);
  }
  uint64_t v3 = (std::mutex *)qword_25FE4B8;
  std::mutex::lock((std::mutex *)qword_25FE4B8);
  uint64_t v4 = sub_11243D8(qword_25FE4B8, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_112FE48(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_112FE5C(uint64_t a1, uint64_t *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE4D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE4D0))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_251AB78, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_251AB78))
    {
      sub_113001C((uint64_t)&unk_2514AD8);
      __cxa_guard_release(&qword_251AB78);
    }
    qword_25FE4C8 = (uint64_t)&unk_2514AD8;
    __cxa_guard_release(&qword_25FE4D0);
  }
  uint64_t v3 = (std::mutex *)qword_25FE4C8;
  std::mutex::lock((std::mutex *)qword_25FE4C8);
  uint64_t v4 = sub_11244CC(qword_25FE4C8, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_112FF28(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_112FF3C(uint64_t a1, int *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE4E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE4E0))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_251AB78, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_251AB78))
    {
      sub_113001C((uint64_t)&unk_2514AD8);
      __cxa_guard_release(&qword_251AB78);
    }
    qword_25FE4D8 = (uint64_t)&unk_2514AD8;
    __cxa_guard_release(&qword_25FE4E0);
  }
  uint64_t v3 = (std::mutex *)qword_25FE4D8;
  std::mutex::lock((std::mutex *)qword_25FE4D8);
  uint64_t v4 = sub_11245C4(qword_25FE4D8, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_1130008(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_113001C(uint64_t a1)
{
  *(void *)a1 = 850045863;
  *(void *)(a1 + 8264) = 0;
  *(_OWORD *)(a1 + 8272) = 0u;
  bzero((void *)(a1 + 8), 0x203CuLL);
  sub_11300D4(a1 + 8264, 0);
  *(void *)(a1 + 16504) = 0;
  *(_OWORD *)(a1 + 16488) = 0u;
  bzero((void *)(a1 + 8288), 0x2004uLL);
  sub_113013C(a1 + 16488, 0);
  *(void *)(a1 + 24728) = 0;
  *(_OWORD *)(a1 + 24712) = 0u;
  bzero((void *)(a1 + 16512), 0x2004uLL);
  sub_11300D4(a1 + 24712, 0);
  return a1;
}

uint64_t sub_11300D4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  for (uint64_t i = *(void *)(result + 8); i != a2; i -= 16)
  {
    uint64_t result = *(void *)(i - 8);
    *(void *)(i - 8) = 0;
    if (result) {
      operator delete();
    }
  }
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t sub_113013C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  for (uint64_t i = *(void *)(result + 8); i != a2; i -= 16)
  {
    uint64_t result = *(void *)(i - 8);
    *(void *)(i - 8) = 0;
    if (result) {
      operator delete();
    }
  }
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t sub_11301A4(uint64_t a1, unsigned __int8 *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE4F0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE4F0))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2527840, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2527840))
    {
      sub_1125E54((uint64_t)&unk_251AB80);
      __cxa_guard_release(&qword_2527840);
    }
    qword_25FE4E8 = (uint64_t)&unk_251AB80;
    __cxa_guard_release(&qword_25FE4F0);
  }
  uint64_t v3 = (std::mutex *)qword_25FE4E8;
  std::mutex::lock((std::mutex *)qword_25FE4E8);
  uint64_t v4 = sub_1125E58(qword_25FE4E8, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_1130270(_Unwind_Exception *a1)
{
}

uint64_t sub_11302A4(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE500, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE500))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2527840, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2527840))
    {
      sub_1125E54((uint64_t)&unk_251AB80);
      __cxa_guard_release(&qword_2527840);
    }
    qword_25FE4F8 = (uint64_t)&unk_251AB80;
    __cxa_guard_release(&qword_25FE500);
  }
  uint64_t v3 = (std::mutex *)qword_25FE4F8;
  std::mutex::lock((std::mutex *)qword_25FE4F8);
  uint64_t v4 = sub_11260E4(qword_25FE4F8, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_1130370(_Unwind_Exception *a1)
{
}

uint64_t *sub_11303A4(uint64_t a1, unsigned int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE510, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE510))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2527840, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2527840))
    {
      sub_1125E54((uint64_t)&unk_251AB80);
      __cxa_guard_release(&qword_2527840);
    }
    qword_25FE508 = (uint64_t)&unk_251AB80;
    __cxa_guard_release(&qword_25FE510);
  }
  uint64_t v3 = (std::mutex *)qword_25FE508;
  std::mutex::lock((std::mutex *)qword_25FE508);
  uint64_t v4 = sub_11261F0(qword_25FE508, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_1130470(_Unwind_Exception *a1)
{
}

uint64_t *sub_11304A4(uint64_t a1, unsigned int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE520, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE520))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2527840, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2527840))
    {
      sub_1125E54((uint64_t)&unk_251AB80);
      __cxa_guard_release(&qword_2527840);
    }
    qword_25FE518 = (uint64_t)&unk_251AB80;
    __cxa_guard_release(&qword_25FE520);
  }
  uint64_t v3 = (std::mutex *)qword_25FE518;
  std::mutex::lock((std::mutex *)qword_25FE518);
  uint64_t v4 = sub_11262BC(qword_25FE518, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_1130570(_Unwind_Exception *a1)
{
}

uint64_t sub_11305A4(uint64_t a1, unsigned __int8 *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE530, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE530))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2527840, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2527840))
    {
      sub_1125E54((uint64_t)&unk_251AB80);
      __cxa_guard_release(&qword_2527840);
    }
    qword_25FE528 = (uint64_t)&unk_251AB80;
    __cxa_guard_release(&qword_25FE530);
  }
  uint64_t v3 = (std::mutex *)qword_25FE528;
  std::mutex::lock((std::mutex *)qword_25FE528);
  uint64_t v4 = sub_1126388(qword_25FE528, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_1130670(_Unwind_Exception *a1)
{
}

uint64_t sub_11306A4(uint64_t a1, unsigned __int8 *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE540, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE540))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2527840, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_2527840))
    {
      sub_1125E54((uint64_t)&unk_251AB80);
      __cxa_guard_release(&qword_2527840);
    }
    qword_25FE538 = (uint64_t)&unk_251AB80;
    __cxa_guard_release(&qword_25FE540);
  }
  uint64_t v3 = (std::mutex *)qword_25FE538;
  std::mutex::lock((std::mutex *)qword_25FE538);
  uint64_t v4 = sub_1126414(qword_25FE538, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_1130770(_Unwind_Exception *a1)
{
}

void *sub_11307A4(uint64_t a1, uint64_t *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE560, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE560))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25298C0, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_25298C0))
    {
      qword_2527848 = 850045863;
      qword_2529890 = 0;
      xmmword_2529898 = 0u;
      bzero(&unk_2527850, 0x203CuLL);
      sub_11309D4((uint64_t)&qword_2527848 + &unk_2048, 0);
      qword_25298B8 = 0;
      xmmword_25298A8 = 0u;
      __cxa_guard_release(&qword_25298C0);
    }
    qword_25FE558 = (uint64_t)&qword_2527848;
    __cxa_guard_release(&qword_25FE560);
  }
  uint64_t v3 = (std::mutex *)qword_25FE558;
  std::mutex::lock((std::mutex *)qword_25FE558);
  uint64_t v4 = sub_1128364(qword_25FE558, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_11308A8(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_11308BC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE550, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE550))
  {
    sub_1130934();
    qword_25FE548 = (uint64_t)sub_112888C();
    __cxa_guard_release(&qword_25FE550);
  }
  return qword_25FE548;
}

void sub_113091C(_Unwind_Exception *a1)
{
}

uint64_t *sub_1130934()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25298C0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25298C0))
  {
    qword_2527848 = 850045863;
    qword_2529890 = 0;
    xmmword_2529898 = 0u;
    bzero(&unk_2527850, 0x203CuLL);
    sub_11309D4((uint64_t)&qword_2527848 + &unk_2048, 0);
    qword_25298B8 = 0;
    xmmword_25298A8 = 0u;
    __cxa_guard_release(&qword_25298C0);
  }
  return &qword_2527848;
}

uint64_t sub_11309D4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  for (uint64_t i = *(void *)(result + 8); i != a2; i -= 16)
  {
    uint64_t result = *(void *)(i - 8);
    *(void *)(i - 8) = 0;
    if (result) {
      operator delete();
    }
  }
  *(void *)(v2 + 8) = a2;
  return result;
}

void *sub_1130A3C(uint64_t a1, uint64_t *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)qword_25FE570, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(qword_25FE570))
  {
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252B928, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_252B928))
    {
      qword_25298C8 = 850045863;
      qword_252B910 = 0;
      qword_252B920 = 0;
      qword_252B918 = 0;
      bzero(&unk_25298D0, 0x203CuLL);
      sub_11309D4((uint64_t)&qword_25298C8 + &unk_2048, 0);
      __cxa_guard_release(&qword_252B928);
    }
    qword_25FE568 = (uint64_t)&qword_25298C8;
    __cxa_guard_release(qword_25FE570);
  }
  uint64_t v3 = (std::mutex *)qword_25FE568;
  std::mutex::lock((std::mutex *)qword_25FE568);
  uint64_t v4 = sub_1120C64(qword_25FE568, a2);
  std::mutex::unlock(v3);
  return v4;
}

void sub_1130B34(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1130B48()
{
  return qword_25FE580;
}

void sub_1130B68()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE590, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE590))
  {
    sub_1130BEC(&qword_25FE580);
    __cxa_guard_release(&qword_25FE590);
  }
}

void sub_1130BD4(_Unwind_Exception *a1)
{
}

void sub_1130BEC(void *a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE5A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE5A8))
  {
    uint64_t v3 = operator new(0x20uLL);
    v3[1] = 0;
    v3[2] = 0;
    void *v3 = off_2491A40;
    v3[3] = off_2491B20;
    qword_25FE598 = (uint64_t)(v3 + 3);
    unk_25FE5A0 = v3;
    __cxa_guard_release(&qword_25FE5A8);
  }
  uint64_t v2 = unk_25FE5A0;
  *a1 = qword_25FE598;
  a1[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
}

void sub_1130CA8(_Unwind_Exception *a1)
{
}

void sub_1130CC0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_2491A40;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1130CE0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_2491A40;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1130D34(uint64_t a1)
{
  return nullsub_1(a1 + 24);
}

uint64_t sub_1130D40(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 48))();
}

uint64_t sub_1130D68(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 72))();
}

unint64_t sub_1130D90(uint64_t a1, uint64_t a2, uint64_t **a3, long long *a4, long long *a5)
{
  sub_1130FEC(a3, a5, &v27);
  sub_11312CC((uint64_t)&v27, (uint64_t **)&v25);
  sub_11313AC((uint64_t ***)&v25, (uint64_t)&__p);
  unint64_t v22 = *((void *)a4 + 2);
  long long v21 = *a4;
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *((void *)v27 + HIDWORD(v22));
    if (v8)
    {
      uint64_t v9 = (char *)v25;
      if (v25 != v26)
      {
        while (*(void *)v9 != v8)
        {
          v9 += 8;
          if (v9 == v26)
          {
            uint64_t v9 = v26;
            break;
          }
        }
      }
      unint64_t v10 = (unint64_t)(v9 - (unsigned char *)v25) >> 3;
    }
    else
    {
      LODWORD(v10) = -1;
    }
    HIDWORD(v22) = v10;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  v29[0] = __p;
  v29[1] = v24;
  int v30 = 2;
  uint64_t v31 = (v24 - (unsigned char *)__p) >> 3;
  unint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, void *, long long *))(*(void *)v11 + 48))(v11, a2, v29, &v21);
  unsigned int v13 = v12;
  uint64_t v14 = HIDWORD(v12);
  if ((v12 & 0x80000000) != 0)
  {
    uint64_t v16 = __p;
    if (v24 != __p)
    {
      uint64_t v17 = 0;
      unint64_t v18 = 0;
      while (*(_DWORD *)sub_40EFE8((uint64_t)v16 + v17) != 6581877)
      {
        ++v18;
        uint64_t v16 = __p;
        v17 += 8;
        if (v18 >= (v24 - (unsigned char *)__p) >> 3)
        {
          if ((v13 & 0x80000000) == 0) {
            goto LABEL_11;
          }
          goto LABEL_25;
        }
      }
      uint64_t v14 = 1;
      unsigned int v13 = v18;
      if ((v18 & 0x80000000) == 0) {
        goto LABEL_11;
      }
    }
LABEL_25:
    unint64_t v19 = v13 | (unint64_t)(v14 << 32);
  }
  else
  {
LABEL_11:
    if (v27 == v28)
    {
      long long v15 = (char *)v27;
    }
    else
    {
      long long v15 = (char *)v27;
      while (*(void *)v15 != *((void *)v25 + v13))
      {
        v15 += 8;
        if (v15 == v28)
        {
          long long v15 = v28;
          break;
        }
      }
    }
    unint64_t v19 = (v14 << 32) | ((unint64_t)(v15 - (unsigned char *)v27) >> 3);
  }
  if (__p)
  {
    uint64_t v24 = __p;
    operator delete(__p);
  }
  if (v25)
  {
    int64x2_t v26 = (char *)v25;
    operator delete(v25);
  }
  if (v27)
  {
    uint64_t v28 = (char *)v27;
    operator delete(v27);
  }
  return v19;
}

void sub_1130F9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  if (__p) {
    operator delete(__p);
  }
  if (a15) {
    operator delete(a15);
  }
  if (a18) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

void sub_1130FEC(uint64_t **a1@<X0>, long long *a2@<X1>, void **a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  sub_1131A34((uint64_t)a3, 0);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  if (*a1 != v7)
  {
    do
    {
      uint64_t v8 = *v6;
      long long v9 = *a2;
      long long v36 = *(_OWORD *)(*v6 + 16);
      long long v37 = v9;
      if (!sub_1131A64((uint64_t)&v37, (uint64_t)&v36)) {
        goto LABEL_12;
      }
      long long v10 = a2[1];
      long long v34 = *(_OWORD *)(v8 + 32);
      long long v35 = v10;
      if (!sub_1131A64((uint64_t)&v35, (uint64_t)&v34)) {
        goto LABEL_12;
      }
      uint64_t v11 = (uint64_t *)*((void *)a2 + 4);
      uint64_t v12 = *((unsigned __int8 *)a2 + 40);
      long long v33 = *(_OWORD *)(v8 + 48);
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE5C8, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(&qword_25FE5C8))
      {
        sub_1131C74(&v38, "XX");
        qword_25FE5C0 = (uint64_t)sub_1134298((uint64_t *)&v38);
        __cxa_guard_release(&qword_25FE5C8);
      }
      unsigned int v13 = (uint64_t *)qword_25FE5C0;
      if (v12) {
        unsigned int v13 = v11;
      }
      v38 = v13;
      if (!BYTE8(v33) || sub_1134340(&v38, (uint64_t **)&v33) || sub_11343B8((uint64_t)&v33) == 0x500000000005A5ALL)
      {
        long long v15 = a3[1];
        unint64_t v14 = (unint64_t)a3[2];
        if ((unint64_t)v15 >= v14)
        {
          uint64_t v28 = ((char *)v15 - (unsigned char *)*a3) >> 3;
          if ((unint64_t)(v28 + 1) >> 61) {
LABEL_45:
          }
            sub_2E00();
          uint64_t v29 = v14 - (void)*a3;
          uint64_t v30 = v29 >> 2;
          if (v29 >> 2 <= (unint64_t)(v28 + 1)) {
            uint64_t v30 = v28 + 1;
          }
          if ((unint64_t)v29 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v22 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v22 = v30;
          }
          if (v22) {
            int64x2_t v23 = (char *)sub_1122DC0((uint64_t)(a3 + 2), v22);
          }
          else {
            int64x2_t v23 = 0;
          }
          uint64_t v24 = &v23[8 * v28];
          *(void *)uint64_t v24 = v8;
          uint64_t v16 = v24 + 8;
          uint64_t v31 = (char *)*a3;
          uint64_t v25 = (char *)a3[1];
          if (v25 != *a3)
          {
            do
            {
              uint64_t v32 = *((void *)v25 - 1);
              v25 -= 8;
              *((void *)v24 - 1) = v32;
              v24 -= 8;
            }
            while (v25 != v31);
            goto LABEL_37;
          }
          goto LABEL_38;
        }
        *long long v15 = v8;
        uint64_t v16 = v15 + 1;
      }
      else
      {
LABEL_12:
        unint64_t v18 = a3[1];
        unint64_t v17 = (unint64_t)a3[2];
        if ((unint64_t)v18 >= v17)
        {
          uint64_t v19 = ((char *)v18 - (unsigned char *)*a3) >> 3;
          if ((unint64_t)(v19 + 1) >> 61) {
            goto LABEL_45;
          }
          uint64_t v20 = v17 - (void)*a3;
          uint64_t v21 = v20 >> 2;
          if (v20 >> 2 <= (unint64_t)(v19 + 1)) {
            uint64_t v21 = v19 + 1;
          }
          if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v22 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v22 = v21;
          }
          if (v22) {
            int64x2_t v23 = (char *)sub_1122DC0((uint64_t)(a3 + 2), v22);
          }
          else {
            int64x2_t v23 = 0;
          }
          uint64_t v24 = &v23[8 * v19];
          *(void *)uint64_t v24 = 0;
          uint64_t v16 = v24 + 8;
          int64x2_t v26 = (char *)*a3;
          uint64_t v25 = (char *)a3[1];
          if (v25 != *a3)
          {
            do
            {
              uint64_t v27 = *((void *)v25 - 1);
              v25 -= 8;
              *((void *)v24 - 1) = v27;
              v24 -= 8;
            }
            while (v25 != v26);
LABEL_37:
            uint64_t v25 = (char *)*a3;
          }
LABEL_38:
          *a3 = v24;
          a3[1] = v16;
          a3[2] = &v23[8 * v22];
          if (v25) {
            operator delete(v25);
          }
          goto LABEL_40;
        }
        *unint64_t v18 = 0;
        uint64_t v16 = v18 + 1;
      }
LABEL_40:
      a3[1] = v16;
      ++v6;
    }
    while (v6 != v7);
  }
}

void sub_1131288(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25FE5C8);
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(a1);
}

void sub_11312CC(uint64_t a1@<X0>, uint64_t **a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_1131D04(a2, *(const void **)a1, *(void *)(a1 + 8), (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3);
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v8 = (uint64_t (*)(uint64_t *, uint64_t *))sub_1131CCC;
  if ((char *)v4 - (char *)v3 < 1025)
  {
    unint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  else
  {
    unint64_t v5 = (uint64_t *)sub_1131DC4(v4 - v3);
    uint64_t v7 = v6;
  }
  sub_1131E28(v3, v4, &v8, v4 - v3, v5, v7);
  if (v5) {
    operator delete(v5);
  }
}

void sub_1131384(_Unwind_Exception *exception_object)
{
  if (v2) {
    operator delete(v2);
  }
  uint64_t v4 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

void sub_11313AC(uint64_t ***a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  sub_1132C48(a2, 0);
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  if (*a1 != v5)
  {
    do
    {
      uint64_t v6 = *v4;
      if (*v4 && *((unsigned char *)v6 + 8))
      {
        uint64_t v7 = *v6;
        long long v9 = *(void **)(a2 + 8);
        unint64_t v8 = *(void *)(a2 + 16);
        if ((unint64_t)v9 >= v8)
        {
          uint64_t v11 = ((uint64_t)v9 - *(void *)a2) >> 3;
          if ((unint64_t)(v11 + 1) >> 61) {
            sub_2E00();
          }
          uint64_t v12 = v8 - *(void *)a2;
          uint64_t v13 = v12 >> 2;
          if (v12 >> 2 <= (unint64_t)(v11 + 1)) {
            uint64_t v13 = v11 + 1;
          }
          if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v14 = v13;
          }
          if (v14) {
            long long v15 = (char *)sub_1122DC0(a2 + 16, v14);
          }
          else {
            long long v15 = 0;
          }
          uint64_t v16 = &v15[8 * v11];
          *(void *)uint64_t v16 = v7;
          long long v10 = v16 + 8;
          unint64_t v18 = *(char **)a2;
          unint64_t v17 = *(char **)(a2 + 8);
          if (v17 != *(char **)a2)
          {
            do
            {
              uint64_t v19 = *((void *)v17 - 1);
              v17 -= 8;
              *((void *)v16 - 1) = v19;
              v16 -= 8;
            }
            while (v17 != v18);
            unint64_t v17 = *(char **)a2;
          }
          *(void *)a2 = v16;
          *(void *)(a2 + 8) = v10;
          *(void *)(a2 + 16) = &v15[8 * v14];
          if (v17) {
            operator delete(v17);
          }
        }
        else
        {
          *long long v9 = v7;
          long long v10 = v9 + 1;
        }
        *(void *)(a2 + 8) = v10;
      }
      else
      {
        sub_1132C78((void **)a2);
      }
      ++v4;
    }
    while (v4 != v5);
  }
}

void sub_11314EC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1131514(uint64_t a1@<X0>, uint64_t **a2@<X2>, long long *a3@<X3>, long long *a4@<X4>, void **a5@<X8>)
{
  sub_1130FEC(a2, a4, &v54);
  sub_11312CC((uint64_t)&v54, (uint64_t **)&v52);
  sub_11313AC((uint64_t ***)&v52, (uint64_t)&__p);
  unint64_t v49 = *((void *)a3 + 2);
  long long v48 = *a3;
  if ((v49 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *((void *)v54 + HIDWORD(v49));
    if (v8)
    {
      long long v9 = (char *)v52;
      if (v52 != v53)
      {
        while (*(void *)v9 != v8)
        {
          v9 += 8;
          if (v9 == v53)
          {
            long long v9 = v53;
            break;
          }
        }
      }
      unint64_t v10 = (unint64_t)(v9 - (unsigned char *)v52) >> 3;
    }
    else
    {
      LODWORD(v10) = -1;
    }
    HIDWORD(v49) = v10;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  v56 = __p;
  v57 = v51;
  int v58 = 2;
  uint64_t v59 = (v51 - (unsigned char *)__p) >> 3;
  (*(void (**)(uint64_t **__return_ptr))(*(void *)v11 + 72))(&v45);
  uint64_t v12 = v45;
  uint64_t v13 = v46;
  if (v45 == v46)
  {
    unint64_t v14 = __p;
    uint64_t v13 = v45;
    if (v51 != __p)
    {
      unint64_t v15 = 0;
      do
      {
        if (*(_DWORD *)sub_40EFE8((uint64_t)v14 + 8 * v15) == 6581877)
        {
          uint64_t v16 = v15 | 0x100000000;
          unint64_t v17 = v46;
          if (v46 >= v47)
          {
            uint64_t v19 = v46 - v45;
            if ((unint64_t)(v19 + 1) >> 61) {
              sub_2E00();
            }
            unint64_t v20 = ((char *)v47 - (char *)v45) >> 2;
            if (v20 <= v19 + 1) {
              unint64_t v20 = v19 + 1;
            }
            if ((unint64_t)((char *)v47 - (char *)v45) >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v21 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v21 = v20;
            }
            if (v21) {
              unint64_t v22 = (char *)sub_1122DC0((uint64_t)&v47, v21);
            }
            else {
              unint64_t v22 = 0;
            }
            int64x2_t v23 = (uint64_t *)&v22[8 * v19];
            *int64x2_t v23 = v16;
            unint64_t v18 = v23 + 1;
            uint64_t v25 = v45;
            uint64_t v24 = v46;
            if (v46 != v45)
            {
              do
              {
                uint64_t v26 = *--v24;
                *--int64x2_t v23 = v26;
              }
              while (v24 != v25);
              uint64_t v24 = v45;
            }
            v45 = v23;
            v46 = v18;
            v47 = (uint64_t *)&v22[8 * v21];
            if (v24) {
              operator delete(v24);
            }
          }
          else
          {
            uint64_t *v46 = v16;
            unint64_t v18 = v17 + 1;
          }
          v46 = v18;
        }
        ++v15;
        unint64_t v14 = __p;
      }
      while (v15 < (v51 - (unsigned char *)__p) >> 3);
      uint64_t v12 = v45;
      uint64_t v13 = v46;
    }
  }
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  sub_113196C(a5, v13 - v12);
  uint64_t v27 = (unsigned int *)v45;
  uint64_t v28 = (unsigned int *)v46;
  if (v45 != v46)
  {
    do
    {
      uint64_t v29 = *v27;
      if ((v29 & 0x80000000) != 0)
      {
        unint64_t v32 = *(void *)v27;
      }
      else
      {
        if (v54 == v55)
        {
          uint64_t v31 = (char *)v54;
        }
        else
        {
          uint64_t v30 = *((void *)v52 + v29);
          uint64_t v31 = (char *)v54;
          while (*(void *)v31 != v30)
          {
            v31 += 8;
            if (v31 == v55)
            {
              uint64_t v31 = v55;
              break;
            }
          }
        }
        unint64_t v32 = ((unint64_t)v27[1] << 32) | ((unint64_t)(v31 - (unsigned char *)v54) >> 3);
      }
      long long v34 = (unint64_t *)a5[1];
      unint64_t v33 = (unint64_t)a5[2];
      if ((unint64_t)v34 >= v33)
      {
        uint64_t v36 = ((char *)v34 - (unsigned char *)*a5) >> 3;
        if ((unint64_t)(v36 + 1) >> 61) {
          sub_2E00();
        }
        uint64_t v37 = v33 - (void)*a5;
        uint64_t v38 = v37 >> 2;
        if (v37 >> 2 <= (unint64_t)(v36 + 1)) {
          uint64_t v38 = v36 + 1;
        }
        if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v39 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v39 = v38;
        }
        if (v39) {
          v40 = (char *)sub_1122DC0((uint64_t)(a5 + 2), v39);
        }
        else {
          v40 = 0;
        }
        v41 = (unint64_t *)&v40[8 * v36];
        unint64_t *v41 = v32;
        long long v35 = (char *)(v41 + 1);
        v43 = (char *)*a5;
        v42 = (char *)a5[1];
        if (v42 != *a5)
        {
          do
          {
            unint64_t v44 = *((void *)v42 - 1);
            v42 -= 8;
            *--v41 = v44;
          }
          while (v42 != v43);
          v42 = (char *)*a5;
        }
        *a5 = v41;
        a5[1] = v35;
        a5[2] = &v40[8 * v39];
        if (v42) {
          operator delete(v42);
        }
      }
      else
      {
        *long long v34 = v32;
        long long v35 = (char *)(v34 + 1);
      }
      a5[1] = v35;
      v27 += 2;
    }
    while (v27 != v28);
    uint64_t v27 = (unsigned int *)v45;
  }
  if (v27)
  {
    v46 = (uint64_t *)v27;
    operator delete(v27);
  }
  if (__p)
  {
    v51 = __p;
    operator delete(__p);
  }
  if (v52)
  {
    v53 = (char *)v52;
    operator delete(v52);
  }
  if (v54)
  {
    v55 = (char *)v54;
    operator delete(v54);
  }
}

void sub_11318E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23)
{
  uint64_t v25 = *(void **)v23;
  if (*(void *)v23)
  {
    *(void *)(v23 + 8) = v25;
    operator delete(v25);
  }
  if (__p) {
    operator delete(__p);
  }
  if (a16) {
    operator delete(a16);
  }
  if (a19) {
    operator delete(a19);
  }
  if (a22) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

void sub_113196C(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 3)
  {
    if (a2 >> 61) {
      sub_2E00();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)sub_1122DC0(v3, a2);
    uint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    long long v9 = &v6[8 * v8];
    uint64_t v11 = (char *)*a1;
    unint64_t v10 = (char *)a1[1];
    uint64_t v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        uint64_t v13 = *((void *)v10 - 1);
        v10 -= 8;
        *((void *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v10 != v11);
      unint64_t v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_1131A18()
{
}

uint64_t sub_1131A2C(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_1131A34(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    sub_1131B60((void **)a1, a2 - v2);
  }
}

BOOL sub_1131A64(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE5B8, memory_order_acquire) & 1) == 0)
  {
    uint64_t v6 = a1;
    int v5 = __cxa_guard_acquire(&qword_25FE5B8);
    a1 = v6;
    if (v5)
    {
      sub_1131C74(&v7, "XX");
      qword_25FE5B0 = (uint64_t)sub_1133FBC(&v7);
      __cxa_guard_release(&qword_25FE5B8);
      a1 = v6;
    }
  }
  uint64_t v3 = &qword_25FE5B0;
  if (*(unsigned char *)(a1 + 8)) {
    uint64_t v3 = (uint64_t *)a1;
  }
  uint64_t v7 = *v3;
  return !*(unsigned char *)(a2 + 8)
      || sub_1133FB0(&v7, (void **)a2)
      || *(void *)sub_40EFE8(a2) == 0x500000000005A5ALL;
}

void sub_1131B48(_Unwind_Exception *a1)
{
}

void sub_1131B60(void **a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  int v5 = v6;
  uint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 3);
    if (v9 >> 61) {
      sub_2E00();
    }
    uint64_t v10 = v8 >> 3;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 2 > v9) {
      unint64_t v9 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      uint64_t v13 = (char *)sub_1122DC0(v4, v12);
    }
    else {
      uint64_t v13 = 0;
    }
    unint64_t v14 = &v13[8 * v10];
    unint64_t v15 = &v13[8 * v12];
    bzero(v14, 8 * a2);
    uint64_t v16 = &v14[8 * a2];
    unint64_t v18 = (char *)*a1;
    unint64_t v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        uint64_t v19 = *((void *)v17 - 1);
        v17 -= 8;
        *((void *)v14 - 1) = v19;
        v14 -= 8;
      }
      while (v17 != v18);
      unint64_t v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
    {
      operator delete(v17);
    }
  }
}

void *sub_1131C74(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 7) {
    unint64_t v5 = 7;
  }
  else {
    unint64_t v5 = v4;
  }
  sub_11231DC(&v7, (unsigned __int8 *)__s, v5);
  *a1 = v7;
  return a1;
}

BOOL sub_1131CCC(void *a1, void *a2)
{
  unsigned int v3 = sub_1132ABC(a1);
  return v3 > sub_1132ABC(a2);
}

void *sub_1131D04(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    uint64_t result = sub_1131D80(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1131D64(_Unwind_Exception *exception_object)
{
  unsigned int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1131D80(void *a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_2E00();
  }
  uint64_t result = (char *)sub_1122DC0((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void *sub_1131DC4(uint64_t a1)
{
  if (a1 < 1) {
    return 0;
  }
  if (a1 >= 0xFFFFFFFFFFFFFFFLL) {
    unint64_t v1 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v1 = a1;
  }
  while (1)
  {
    uint64_t result = operator new(8 * v1, &std::nothrow);
    if (result) {
      break;
    }
    BOOL v3 = v1 > 1;
    v1 >>= 1;
    if (!v3) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1131E28(uint64_t *result, uint64_t *a2, uint64_t (**a3)(uint64_t *, uint64_t *), unint64_t a4, uint64_t *a5, uint64_t a6)
{
  if (a4 >= 2)
  {
    size_t v8 = result;
    if (a4 == 2)
    {
      unint64_t v9 = a2 - 1;
      uint64_t result = (uint64_t *)(*a3)(a2 - 1, result);
      if (result)
      {
        uint64_t v10 = *v8;
        *size_t v8 = *v9;
        *unint64_t v9 = v10;
      }
    }
    else if ((uint64_t)a4 > 128)
    {
      unint64_t v14 = a4 >> 1;
      unint64_t v15 = &result[a4 >> 1];
      unint64_t v16 = a4 >> 1;
      if ((uint64_t)a4 <= a6)
      {
        sub_11320BC(result, v15, a3, v16, a5);
        sub_11320BC(&v8[a4 >> 1], a2, a3, a4 - (a4 >> 1), &a5[v14]);
        return (uint64_t *)sub_113221C((uint64_t)a5, &a5[v14], &a5[v14], &a5[a4], v8, a3);
      }
      else
      {
        sub_1131E28(result, v15, a3, v16, a5, a6);
        sub_1131E28(&v8[a4 >> 1], a2, a3, a4 - (a4 >> 1), a5, a6);
        return (uint64_t *)sub_11322E0((uint64_t)v8, (char *)&v8[a4 >> 1], (char *)a2, (uint64_t (**)(char *, char *))a3, a4 >> 1, a4 - (a4 >> 1), (char *)a5, a6);
      }
    }
    else
    {
      return (uint64_t *)sub_1131FE8((uint64_t)result, a2, (uint64_t (**)(void *, void))a3);
    }
  }
  return result;
}

uint64_t sub_1131FE8(uint64_t result, void *a2, uint64_t (**a3)(void *, void))
{
  if ((void *)result != a2)
  {
    v14[7] = v3;
    v14[8] = v4;
    uint64_t v6 = (void *)result;
    uint64_t v7 = (void *)(result + 8);
    if ((void *)(result + 8) != a2)
    {
      uint64_t v9 = 0;
      uint64_t v10 = (void *)result;
      do
      {
        uint64_t v11 = v10;
        uint64_t v10 = v7;
        uint64_t result = (*a3)(v7, v11);
        if (result)
        {
          v14[0] = *v10;
          uint64_t v12 = v9;
          while (1)
          {
            *(void *)((char *)v6 + v12 + 8) = *(void *)((char *)v6 + v12);
            if (!v12) {
              break;
            }
            v12 -= 8;
            uint64_t result = (*a3)(v14, (char *)v6 + v12);
            if ((result & 1) == 0)
            {
              uint64_t v13 = (void *)((char *)v6 + v12 + 8);
              goto LABEL_10;
            }
          }
          uint64_t v13 = v6;
LABEL_10:
          *uint64_t v13 = v14[0];
        }
        uint64_t v7 = v10 + 1;
        v9 += 8;
      }
      while (v10 + 1 != a2);
    }
  }
  return result;
}

uint64_t *sub_11320BC(uint64_t *result, uint64_t *a2, uint64_t (**a3)(uint64_t *, uint64_t *), unint64_t a4, uint64_t *a5)
{
  if (a4)
  {
    uint64_t v9 = result;
    if (a4 == 2)
    {
      uint64_t v10 = a2 - 1;
      uint64_t result = (uint64_t *)(*a3)(a2 - 1, result);
      if (result)
      {
        *a5 = *v10;
        uint64_t v11 = *v9;
      }
      else
      {
        *a5 = *v9;
        uint64_t v11 = *v10;
      }
      a5[1] = v11;
    }
    else if (a4 == 1)
    {
      *a5 = *result;
    }
    else if ((uint64_t)a4 > 8)
    {
      sub_1131E28(result, &result[a4 >> 1], a3, a4 >> 1, a5, a4 >> 1);
      sub_1131E28(&v9[a4 >> 1], a2, a3, a4 - (a4 >> 1), &a5[a4 >> 1], a4 - (a4 >> 1));
      return (uint64_t *)sub_11326D4((uint64_t)v9, &v9[a4 >> 1], &v9[a4 >> 1], a2, a5, a3);
    }
    else
    {
      return sub_11325E8(result, a2, a5, a3);
    }
  }
  return result;
}

uint64_t sub_113221C(uint64_t result, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t (**a6)(uint64_t *, uint64_t *))
{
  if ((uint64_t *)result == a2)
  {
LABEL_10:
    while (a3 != a4)
    {
      uint64_t v13 = *a3++;
      *a5++ = v13;
    }
  }
  else
  {
    uint64_t v11 = (uint64_t *)result;
    while (a3 != a4)
    {
      uint64_t result = (*a6)(a3, v11);
      if (result) {
        uint64_t v12 = a3;
      }
      else {
        uint64_t v12 = v11;
      }
      v11 += result ^ 1;
      a3 += result;
      *a5++ = *v12;
      if (v11 == a2) {
        goto LABEL_10;
      }
    }
    if (v11 != a2)
    {
      uint64_t v14 = 0;
      do
      {
        a5[v14] = v11[v14];
        ++v14;
      }
      while (&v11[v14] != a2);
    }
  }
  return result;
}

uint64_t sub_11322E0(uint64_t result, char *a2, char *a3, uint64_t (**a4)(char *, char *), uint64_t a5, uint64_t a6, char *a7, uint64_t a8)
{
  uint64_t v48 = a6;
  if (a6)
  {
    uint64_t v14 = (char *)result;
    while (v48 > a8 && a5 > a8)
    {
      if (!a5) {
        return result;
      }
      uint64_t v15 = 0;
      uint64_t v16 = -a5;
      while (1)
      {
        unint64_t v17 = &v14[v15];
        uint64_t result = (*a4)(a2, &v14[v15]);
        if (result) {
          break;
        }
        v15 += 8;
        if (__CFADD__(v16++, 1)) {
          return result;
        }
      }
      uint64_t v19 = -v16;
      uint64_t v20 = v48;
      uint64_t v43 = a8;
      unint64_t v44 = a7;
      v45 = a3;
      if (-v16 >= v48)
      {
        if (v16 == -1)
        {
          uint64_t v41 = *(void *)&v14[v15];
          *(void *)&v14[v15] = *(void *)a2;
          *(void *)a2 = v41;
          return result;
        }
        if (v16 > 0) {
          uint64_t v19 = 1 - v16;
        }
        uint64_t v26 = v19 >> 1;
        uint64_t v24 = &v14[8 * (v19 >> 1) + v15];
        uint64_t v27 = a3;
        uint64_t v23 = a2;
        if (a2 != v27)
        {
          uint64_t v42 = v26;
          v51 = a4;
          v47 = *a4;
          unint64_t v28 = (v45 - a2) >> 3;
          uint64_t v23 = a2;
          do
          {
            uint64_t v29 = &v23[8 * (v28 >> 1)];
            int v30 = v47(v29, v24);
            if (v30) {
              v28 += ~(v28 >> 1);
            }
            else {
              v28 >>= 1;
            }
            if (v30) {
              uint64_t v23 = v29 + 8;
            }
          }
          while (v28);
          uint64_t v20 = v48;
          a4 = v51;
          uint64_t v26 = v42;
        }
        uint64_t v22 = (v23 - a2) >> 3;
      }
      else
      {
        if (v48 >= 0) {
          uint64_t v21 = v48;
        }
        else {
          uint64_t v21 = v48 + 1;
        }
        uint64_t v22 = v21 >> 1;
        uint64_t v23 = &a2[8 * (v21 >> 1)];
        uint64_t v24 = a2;
        if (a2 - v14 != v15)
        {
          uint64_t v46 = v21 >> 1;
          v50 = a4;
          unint64_t v25 = (a2 - v14 - v15) >> 3;
          uint64_t v24 = &v14[v15];
          do
          {
            if ((*v50)(v23, &v24[8 * (v25 >> 1)]))
            {
              v25 >>= 1;
            }
            else
            {
              v24 += 8 * (v25 >> 1) + 8;
              v25 += ~(v25 >> 1);
            }
          }
          while (v25);
          uint64_t v20 = v48;
          a4 = v50;
          uint64_t v22 = v46;
        }
        uint64_t v26 = (v24 - v14 - v15) >> 3;
      }
      a5 = -(v26 + v16);
      *(void *)unint64_t v49 = v20;
      uint64_t v52 = v20 - v22;
      uint64_t v31 = a2;
      uint64_t v32 = v26;
      uint64_t v33 = v22;
      long long v34 = sub_1132924(v24, v31, v23);
      uint64_t v35 = v33;
      uint64_t v36 = v34;
      if (v32 + v35 >= *(void *)v49 - (v32 + v35) - v16)
      {
        uint64_t v40 = v32;
        uint64_t v39 = v35;
        a7 = v44;
        uint64_t result = sub_11322E0(v34, v23, v45, a4, a5, v52, v44, v43);
        a3 = v36;
        a2 = v24;
        a8 = v43;
        a5 = v40;
      }
      else
      {
        uint64_t v37 = v24;
        uint64_t v38 = v32;
        a8 = v43;
        a7 = v44;
        uint64_t result = sub_11322E0(&v14[v15], v37, v34, a4, v38, v35, v44, v43);
        unint64_t v17 = v36;
        a2 = v23;
        a3 = v45;
        uint64_t v39 = v52;
      }
      uint64_t v48 = v39;
      uint64_t v14 = v17;
      if (!v39) {
        return result;
      }
    }
    return (uint64_t)sub_1132798(v14, a2, a3, a4, a5, v48, a7);
  }
  return result;
}

uint64_t *sub_11325E8(uint64_t *result, uint64_t *a2, uint64_t *a3, uint64_t (**a4)(uint64_t *, uint64_t *))
{
  if (result != a2)
  {
    uint64_t v6 = result + 1;
    *a3 = *result;
    if (result + 1 != a2)
    {
      uint64_t v8 = 0;
      uint64_t v9 = a3;
      do
      {
        uint64_t v10 = v9++;
        uint64_t result = (uint64_t *)(*a4)(v6, v10);
        uint64_t v11 = v9;
        if (result)
        {
          v10[1] = *v10;
          uint64_t v11 = a3;
          if (v10 != a3)
          {
            uint64_t v12 = v8;
            while (1)
            {
              uint64_t v11 = (uint64_t *)((char *)a3 + v12);
              uint64_t result = (uint64_t *)(*a4)(v6, (uint64_t *)((char *)a3 + v12 - 8));
              if (!result) {
                break;
              }
              *(uint64_t *)((char *)a3 + v12) = *(uint64_t *)((char *)a3 + v12 - 8);
              v12 -= 8;
              if (!v12)
              {
                uint64_t v11 = a3;
                break;
              }
            }
          }
        }
        uint64_t v13 = *v6++;
        uint64_t *v11 = v13;
        v8 += 8;
      }
      while (v6 != a2);
    }
  }
  return result;
}

uint64_t sub_11326D4(uint64_t result, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t (**a6)(uint64_t *, uint64_t *))
{
  if ((uint64_t *)result == a2)
  {
LABEL_10:
    while (a3 != a4)
    {
      uint64_t v13 = *a3++;
      *a5++ = v13;
    }
  }
  else
  {
    uint64_t v11 = (uint64_t *)result;
    while (a3 != a4)
    {
      uint64_t result = (*a6)(a3, v11);
      if (result) {
        uint64_t v12 = a3;
      }
      else {
        uint64_t v12 = v11;
      }
      a3 += result;
      v11 += result ^ 1;
      *a5++ = *v12;
      if (v11 == a2) {
        goto LABEL_10;
      }
    }
    if (v11 != a2)
    {
      uint64_t v14 = 0;
      do
      {
        a5[v14] = v11[v14];
        ++v14;
      }
      while (&v11[v14] != a2);
    }
  }
  return result;
}

char *sub_1132798(char *__dst, char *a2, char *a3, uint64_t (**a4)(char *, char *), uint64_t a5, uint64_t a6, char *__src)
{
  uint64_t v10 = a2;
  uint64_t v11 = __dst;
  if (a5 <= a6)
  {
    if (__dst != a2)
    {
      unint64_t v16 = 0;
      do
      {
        *(void *)&__src[v16] = *(void *)&__dst[v16];
        v16 += 8;
      }
      while (&__dst[v16] != a2);
      if (v16)
      {
        unint64_t v17 = &__src[v16];
        unint64_t v18 = __src;
        while (v10 != a3)
        {
          __dst = (char *)(*a4)(v10, v18);
          if (__dst) {
            uint64_t v19 = v10;
          }
          else {
            uint64_t v19 = v18;
          }
          v10 += 8 * __dst;
          v18 += 8 * (__dst ^ 1);
          *(void *)uint64_t v11 = *(void *)v19;
          v11 += 8;
          if (v17 == v18) {
            return __dst;
          }
        }
        return (char *)memmove(v11, v18, __src - v18 + v16);
      }
    }
  }
  else if (a2 != a3)
  {
    uint64_t v12 = 0;
    do
    {
      *(void *)&__src[v12] = *(void *)&a2[v12];
      v12 += 8;
    }
    while (&a2[v12] != a3);
    if (v12)
    {
      uint64_t v13 = &__src[v12];
      uint64_t v14 = a3 - 8;
      while (v10 != v11)
      {
        __dst = (char *)(*a4)(v13 - 8, v10 - 8);
        if (__dst) {
          uint64_t v15 = v10;
        }
        else {
          uint64_t v15 = v13;
        }
        if (__dst) {
          v10 -= 8;
        }
        else {
          v13 -= 8;
        }
        *(void *)uint64_t v14 = *((void *)v15 - 1);
        v14 -= 8;
        if (v13 == __src) {
          return __dst;
        }
      }
      uint64_t v20 = 0;
      do
      {
        *(void *)&v14[v20] = *(void *)&v13[v20 - 8];
        v20 -= 8;
      }
      while (&v13[v20] != __src);
    }
  }
  return __dst;
}

char *sub_1132924(char *__src, char *a2, char *a3)
{
  uint64_t v4 = a3;
  if (__src != a2)
  {
    if (a2 == a3)
    {
      return __src;
    }
    else if (__src + 8 == a2)
    {
      uint64_t v6 = *(void *)__src;
      int64_t v7 = a3 - a2;
      memmove(__src, a2, a3 - a2);
      uint64_t v4 = &__src[v7];
      *(void *)uint64_t v4 = v6;
    }
    else if (a2 + 8 == a3)
    {
      uint64_t v8 = *((void *)a3 - 1);
      uint64_t v4 = __src + 8;
      size_t v9 = a3 - 8 - __src;
      if (a3 - 8 != __src) {
        memmove(__src + 8, __src, v9);
      }
      *(void *)__src = v8;
    }
    else
    {
      return (char *)sub_11329E8(__src, a2, a3);
    }
  }
  return v4;
}

void *sub_11329E8(void *a1, void *a2, void *a3)
{
  uint64_t v3 = a2 - a1;
  if (v3 == a3 - a2)
  {
    if (a1 != a2 && a2 != a3)
    {
      uint64_t v4 = a1 + 1;
      unint64_t v5 = a2 + 1;
      do
      {
        uint64_t v6 = *(v4 - 1);
        *(v4 - 1) = *(v5 - 1);
        *(v5 - 1) = v6;
        if (v4 == a2) {
          break;
        }
        ++v4;
      }
      while (v5++ != a3);
    }
  }
  else
  {
    uint64_t v8 = a3 - a2;
    uint64_t v9 = a2 - a1;
    do
    {
      uint64_t v10 = v9;
      uint64_t v9 = v8;
      uint64_t v8 = v10 % v8;
    }
    while (v8);
    if (v9)
    {
      uint64_t v11 = &a1[v9];
      do
      {
        uint64_t v13 = *--v11;
        uint64_t v12 = v13;
        uint64_t v14 = &v11[v3];
        uint64_t v15 = v11;
        do
        {
          unint64_t v16 = v14;
          *uint64_t v15 = *v14;
          unint64_t v17 = &v14[v3];
          BOOL v18 = __OFSUB__(v3, a3 - v14);
          uint64_t v20 = v3 - (a3 - v14);
          char v19 = (v20 < 0) ^ v18;
          uint64_t v14 = &a1[v20];
          if (v19) {
            uint64_t v14 = v17;
          }
          uint64_t v15 = v16;
        }
        while (v14 != v11);
        *unint64_t v16 = v12;
      }
      while (v11 != a1);
    }
    return &a1[a3 - a2];
  }
  return a2;
}

uint64_t sub_1132ABC(void *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE5D8, memory_order_acquire) & 1) == 0)
  {
    uint64_t v13 = a1;
    int v14 = __cxa_guard_acquire(&qword_25FE5D8);
    a1 = v13;
    if (v14)
    {
      sub_1131C74(v17, "ZZ");
      qword_25FE5D0 = (uint64_t)sub_1133FBC((uint64_t *)v17);
      __cxa_guard_release(&qword_25FE5D8);
      a1 = v13;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE5E8, memory_order_acquire) & 1) == 0)
  {
    uint64_t v15 = a1;
    int v16 = __cxa_guard_acquire(&qword_25FE5E8);
    a1 = v15;
    if (v16)
    {
      sub_1131C74(v17, "ZZ");
      qword_25FE5E0 = (uint64_t)sub_1134298((uint64_t *)v17);
      __cxa_guard_release(&qword_25FE5E8);
      a1 = v15;
    }
  }
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    uint64_t v3 = *(unsigned __int8 *)(v1 + 24);
    uint64_t v4 = *(void *)(v1 + 32);
    uint64_t v5 = *(unsigned __int8 *)(v1 + 40);
    int64_t v7 = *(uint64_t **)(v1 + 48);
    uint64_t v6 = *(uint64_t **)(v1 + 56);
    v17[0] = v7;
    v17[1] = v6;
    BOOL v8 = v3 != 0 && qword_25FE5D0 != v2;
    if (v8) {
      char v9 = 2;
    }
    else {
      char v9 = 1;
    }
    if (qword_25FE5D0 == v4 || v5 == 0) {
      unsigned __int8 v11 = v8;
    }
    else {
      unsigned __int8 v11 = v9;
    }
    if ((_BYTE)v6) {
      v11 += sub_113437C(v17, (uint64_t **)&qword_25FE5E0);
    }
  }
  else
  {
    return 0;
  }
  return v11;
}

void sub_1132C20(_Unwind_Exception *a1)
{
}

void sub_1132C48(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    sub_1132D8C((void **)a1, a2 - v2);
  }
}

void *sub_1132C78(void **a1)
{
  unint64_t v4 = (unint64_t)a1[2];
  uint64_t v2 = (uint64_t)(a1 + 2);
  unint64_t v3 = v4;
  uint64_t v5 = *(uint64_t **)(v2 - 8);
  if ((unint64_t)v5 >= v4)
  {
    uint64_t v7 = ((char *)v5 - (unsigned char *)*a1) >> 3;
    if ((unint64_t)(v7 + 1) >> 61) {
      sub_2E00();
    }
    uint64_t v8 = v3 - (void)*a1;
    uint64_t v9 = v8 >> 2;
    if (v8 >> 2 <= (unint64_t)(v7 + 1)) {
      uint64_t v9 = v7 + 1;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v10 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v10 = v9;
    }
    if (v10)
    {
      unsigned __int8 v11 = (char *)sub_1122DC0(v2, v10);
      uint64_t v13 = v12;
    }
    else
    {
      unsigned __int8 v11 = 0;
      uint64_t v13 = 0;
    }
    uint64_t v14 = sub_1133328();
    uint64_t v15 = &v11[8 * v13];
    int v16 = (uint64_t *)&v11[8 * v7];
    *int v16 = v14;
    uint64_t v6 = v16 + 1;
    BOOL v18 = (char *)*a1;
    unint64_t v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        uint64_t v19 = *((void *)v17 - 1);
        v17 -= 8;
        *--int v16 = v19;
      }
      while (v17 != v18);
      unint64_t v17 = (char *)*a1;
    }
    *a1 = v16;
    a1[1] = v6;
    a1[2] = v15;
    if (v17) {
      operator delete(v17);
    }
  }
  else
  {
    *uint64_t v5 = sub_1133328();
    uint64_t v6 = v5 + 1;
    a1[1] = v6;
  }
  a1[1] = v6;
  return v6 - 1;
}

void sub_1132D68(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1132D8C(void **a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(uint64_t **)(v4 - 8);
  if (a2 <= (v6 - (unsigned char *)v7) >> 3)
  {
    if (a2)
    {
      uint64_t v14 = 8 * a2;
      uint64_t v15 = &v7[a2];
      do
      {
        *v7++ = sub_1133328();
        v14 -= 8;
      }
      while (v14);
      uint64_t v7 = v15;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = (char *)v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 3);
    if (v9 >> 61) {
      sub_2E00();
    }
    uint64_t v10 = v8 >> 3;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 2 > v9) {
      unint64_t v9 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      uint64_t v13 = (char *)sub_1122DC0(v4, v12);
    }
    else {
      uint64_t v13 = 0;
    }
    int v16 = &v13[8 * v10];
    uint64_t v17 = 8 * v10;
    BOOL v18 = &v13[8 * v12];
    uint64_t v19 = 8 * a2;
    uint64_t v20 = &v16[8 * a2];
    do
    {
      *(void *)&v13[v17] = sub_1133328();
      v17 += 8;
      v19 -= 8;
    }
    while (v19);
    uint64_t v22 = (char *)*a1;
    uint64_t v21 = (char *)a1[1];
    if (v21 != *a1)
    {
      do
      {
        uint64_t v23 = *((void *)v21 - 1);
        v21 -= 8;
        *((void *)v16 - 1) = v23;
        v16 -= 8;
      }
      while (v21 != v22);
      uint64_t v21 = (char *)*a1;
    }
    *a1 = v16;
    a1[1] = v20;
    a1[2] = v18;
    if (v21)
    {
      operator delete(v21);
    }
  }
}

void sub_1132ED4(_Unwind_Exception *exception_object)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(exception_object);
}

uint64_t sub_1132EF8(void *a1)
{
  return *a1 + 8;
}

uint64_t sub_1132F04(void *a1)
{
  return *a1 + 56;
}

uint64_t sub_1132F10(uint64_t *a1)
{
  return sub_11333EC(*a1);
}

uint64_t sub_1132F18(uint64_t *a1)
{
  return sub_11335C4(*a1);
}

uint64_t sub_1132F20(uint64_t a1)
{
  return *(void *)(*(void *)a1 + 56);
}

uint64_t sub_1132F2C(uint64_t *a1)
{
  int v2 = sub_11337BC((unsigned char *)*a1);
  uint64_t v3 = *a1;
  if (*(void *)(*a1 + 8) == 0x700000000000000)
  {
    int v4 = 1;
  }
  else
  {
    int v4 = sub_1133884(v3);
    uint64_t v3 = *a1;
  }
  BOOL v5 = *(_DWORD *)(v3 + 4) == 50331648 || sub_1133924(v3);
  if (v2) {
    return v4 & v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1132FB0(uint64_t *a1)
{
  if (*(_DWORD *)*a1 == 6581877) {
    return 0;
  }
  else {
    return sub_1132F2C(a1);
  }
}

BOOL sub_1132FD0(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2
      || sub_1126618((void *)(*(void *)a1 + 56), (unsigned __int8 *)(*(void *)a2 + 56));
}

BOOL sub_1132FF4(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 != *(void *)a2
      && !sub_1126618((void *)(*(void *)a1 + 56), (unsigned __int8 *)(*(void *)a2 + 56));
}

uint64_t sub_1133030(uint64_t *a1)
{
  return sub_1133780(*a1);
}

uint64_t sub_1133038(uint64_t a1, int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F8218, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_24F8218))
  {
    nullsub_1(&unk_24F8210);
    __cxa_guard_release(&qword_24F8218);
  }
  switch(a2)
  {
    case 0:
      goto LABEL_7;
    case 1:
      uint64_t result = sub_112F57C((uint64_t)&unk_24F8210, a1);
      break;
    case 2:
      uint64_t result = sub_112F87C((uint64_t)&unk_24F8210, a1);
      break;
    case 3:
      uint64_t result = sub_112F97C((uint64_t)&unk_24F8210, a1);
      break;
    default:
      unsigned int v5 = 2;
      long long v6 = off_2491AF0;
      uint64_t v7 = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/maps-lang-cpp/src/lib/locale.cpp";
      uint64_t v8 = "createFromString";
      int v9 = 141;
      sub_E1B4((uint64_t)&v10);
      std::ostream::operator<<();
      sub_188FC78(v11, (uint64_t)" localeString: \"", 16);
      std::ostream::write();
      sub_188FC78(v11, (uint64_t)"\"", 1);
      sub_1121418(&v5);
LABEL_7:
      uint64_t result = sub_112F47C((uint64_t)&unk_24F8210, a1);
      break;
  }
  return result;
}

void sub_11331CC(_Unwind_Exception *a1)
{
}

uint64_t sub_1133208(unsigned int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F8218, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_24F8218))
  {
    nullsub_1(&unk_24F8210);
    __cxa_guard_release(&qword_24F8218);
  }

  return sub_112F67C((uint64_t)&unk_24F8210, a1);
}

void sub_1133280(_Unwind_Exception *a1)
{
}

uint64_t sub_1133298(unsigned int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F8218, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_24F8218))
  {
    nullsub_1(&unk_24F8210);
    __cxa_guard_release(&qword_24F8218);
  }

  return sub_112F77C((uint64_t)&unk_24F8210, a1);
}

void sub_1133310(_Unwind_Exception *a1)
{
}

uint64_t sub_1133328()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE5F8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE5F8))
  {
    v1[0] = xmmword_212F540;
    memset(&v1[1], 0, 32);
    qword_25FE5F0 = sub_1133038((uint64_t)v1, 0);
    __cxa_guard_release(&qword_25FE5F8);
  }
  return qword_25FE5F0;
}

void sub_11333D4(_Unwind_Exception *a1)
{
}

uint64_t sub_11333EC(uint64_t a1)
{
  uint64_t result = *(unsigned int *)(a1 + 140);
  if (result == 137)
  {
    uint64_t result = sub_113342C((int *)a1);
    *(_DWORD *)(a1 + 140) = result;
  }
  return result;
}

uint64_t sub_113342C(int *a1)
{
  uint64_t v2 = 0;
  uint64_t v3 = *((void *)a1 + 1);
  int v4 = *a1;
  int v5 = a1[1];
  while (1)
  {
    int v6 = dword_20F5EC8[v2];
    if (v6 == 50331648 || v6 == v4)
    {
      uint64_t v8 = *(void *)&dword_20F5EC8[v2 + 2];
      if (v8 == 0x700000000000000 || v8 == v3)
      {
        int v10 = dword_20F5EC8[v2 + 1];
        if (v10 == 50331648 || v10 == v5)
        {
          BOOL v12 = v8 == 0x700000000000000 && v10 == 50331648;
          if (!v12 || dword_20F5EC8[v2 + 4] == 1)
          {
            uint64_t result = dword_20F5EC8[v2 + 4];
            if (result != 11 && result != 121 && result != 93) {
              break;
            }
          }
        }
      }
    }
    v2 += 6;
    if (v2 == 864)
    {
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE608, memory_order_acquire) & 1) == 0
        && __cxa_guard_acquire(&qword_25FE608))
      {
        qword_25FE600 = (uint64_t)sub_1133988();
        __cxa_guard_release(&qword_25FE608);
      }
      uint64_t v15 = a1;
      v19[0] = &v15;
      v19[1] = v16;
      int v20 = 2;
      uint64_t v21 = 1;
      v16[0] = dword_252B940;
      v16[1] = &dword_252B940[137];
      int v17 = 3;
      uint64_t v18 = 137;
      unsigned int v14 = (*(uint64_t (**)(uint64_t, void *, void *))(*(void *)qword_25FE600 + 40))(qword_25FE600, v19, v16);
      if (v14 > 0x88) {
        return 0;
      }
      else {
        return dword_252B940[v14];
      }
    }
  }
  return result;
}

void sub_11335AC(_Unwind_Exception *a1)
{
}

uint64_t sub_11335C4(uint64_t a1)
{
  uint64_t result = *(unsigned int *)(a1 + 144);
  if (result == 51)
  {
    uint64_t result = sub_1133604(a1);
    *(_DWORD *)(a1 + 144) = result;
  }
  return result;
}

uint64_t sub_1133604(uint64_t a1)
{
  for (uint64_t i = 0; i != 306; i += 6)
  {
    int v3 = dword_20F5568[i];
    if (v3 == 50331648 || v3 == *(_DWORD *)a1)
    {
      uint64_t v5 = *(void *)&dword_20F5568[i + 2];
      if (v5 == 0x700000000000000 || v5 == *(void *)(a1 + 8))
      {
        BOOL v7 = v5 == 0x700000000000000;
        int v8 = dword_20F5568[i + 1];
        int v9 = v8 == 50331648 ? v7 : v8 != *(_DWORD *)(a1 + 4);
        if (v9 != 1) {
          return dword_20F5568[i + 4];
        }
      }
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_25FE618, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_25FE618))
  {
    qword_25FE610 = (uint64_t)sub_1133988();
    __cxa_guard_release(&qword_25FE618);
  }
  uint64_t v12 = a1;
  v16[0] = &v12;
  v16[1] = v13;
  int v17 = 2;
  uint64_t v18 = 1;
  v13[0] = dword_212F62C;
  v13[1] = "N4maps4lang12VERSION_3_106LoggerE";
  int v14 = 4;
  uint64_t v15 = 51;
  unsigned int v10 = (*(uint64_t (**)(uint64_t, void *, void *))(*(void *)qword_25FE610 + 40))(qword_25FE610, v16, v13);
  if (v10 > 0x32) {
    return 0;
  }
  else {
    return dword_212F62C[v10];
  }
}

void sub_1133768(_Unwind_Exception *a1)
{
}

uint64_t sub_1133780(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 152);
  if (!result)
  {
    int v3 = sub_1125F80();
    uint64_t result = sub_112FA7C((uint64_t)v3, a1);
    *(void *)(a1 + 152) = result;
  }
  return result;
}

uint64_t sub_11337BC(unsigned char *a1)
{
  if (a1[168]) {
    return a1[168] == 2;
  }
  int v3 = sub_113380C();
  uint64_t result = sub_112FD7C((uint64_t)v3, a1);
  if (result) {
    char v4 = 2;
  }
  else {
    char v4 = 1;
  }
  a1[168] = v4;
  return result;
}

void *sub_113380C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252B938, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252B938))
  {
    nullsub_1(&unk_252B930);
    __cxa_guard_release(&qword_252B938);
  }
  return &unk_252B930;
}

void sub_113386C(_Unwind_Exception *a1)
{
}

uint64_t sub_1133884(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 169)) {
    return *(unsigned __int8 *)(a1 + 169) == 2;
  }
  int v3 = sub_113380C();
  uint64_t result = sub_112FE5C((uint64_t)v3, (uint64_t *)(a1 + 8));
  if (result) {
    char v4 = 2;
  }
  else {
    char v4 = 1;
  }
  *(unsigned char *)(a1 + 169) = v4;
  return result;
}

uint64_t sub_11338D4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 170)) {
    return *(unsigned __int8 *)(a1 + 170) == 2;
  }
  int v3 = sub_113380C();
  uint64_t result = sub_112FF3C((uint64_t)v3, (int *)(a1 + 4));
  if (result) {
    char v4 = 2;
  }
  else {
    char v4 = 1;
  }
  *(unsigned char *)(a1 + 170) = v4;
  return result;
}

BOOL sub_1133924(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 171)) {
    return *(unsigned char *)(a1 + 171) == 2;
  }
  if ((sub_11338D4(a1) & 1) != 0 || *(_DWORD *)(a1 + 4) == 3748148)
  {
    char v3 = 2;
    BOOL result = 1;
  }
  else
  {
    BOOL result = 0;
    char v3 = 1;
  }
  *(unsigned char *)(a1 + 171) = v3;
  return result;
}

uint64_t (***sub_1133988())()
{
  double v0 = sub_11207C4(&v3);
  (*(void (**)(uint64_t *__return_ptr, double))(*(void *)v3 + 16))(&v4, v0);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v4 + 32))(&v6);
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v6 + 56))(&v8);
  uint64_t v1 = sub_1134760(&v8);
  if (v9) {
    sub_20A69F0(v9);
  }
  if (v7) {
    sub_20A69F0(v7);
  }
  if (v5) {
    sub_20A69F0(v5);
  }
  if (*((void *)&v3 + 1)) {
    sub_20A69F0(*((std::__shared_weak_count **)&v3 + 1));
  }
  return v1;
}

void sub_1133A80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12, uint64_t a13, std::__shared_weak_count *a14)
{
  int v16 = *(std::__shared_weak_count **)(v14 - 24);
  if (v16) {
    sub_20A69F0(v16);
  }
  if (a14) {
    sub_20A69F0(a14);
  }
  if (a12) {
    sub_20A69F0(a12);
  }
  if (a10) {
    sub_20A69F0(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1133AD4(uint64_t a1, int *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB70, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB70))
  {
    nullsub_1(&unk_252BB68);
    __cxa_guard_release(&qword_252BB70);
  }
  uint64_t v4 = (int *)sub_112F134((uint64_t)&unk_252BB68, a2);
  int v5 = *v4;
  *(_DWORD *)a1 = *v4;
  if (v5 != 50331648 && !*(void *)(a1 + 8))
  {
    unint64_t v7 = (*(void *)&v5 & 0xFFFFFFLL | ((unint64_t)(HIBYTE(v5) + 253) << 56))
       + 0x700000000000000;
    sub_1133BB4(a1, (uint64_t *)&v7);
  }
  return a1;
}

void sub_1133B94(void *a1)
{
}

uint64_t sub_1133BB4(uint64_t a1, uint64_t *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB80))
  {
    nullsub_1(&unk_252BB78);
    __cxa_guard_release(&qword_252BB80);
  }
  uint64_t v4 = sub_1130A3C((uint64_t)&unk_252BB78, a2);
  *(void *)(a1 + 8) = v4;
  if (v4 != (void *)&unk_2491B50 && *(_DWORD *)a1 == 50331648)
  {
    unint64_t v5 = 7 - HIBYTE(*v4);
    if (v5 >= 3) {
      LODWORD(v5) = 3;
    }
    int v7 = (*v4 & 0xFFFFFF | 0x3000000) - (v5 << 24);
    sub_1133AD4(a1, &v7);
  }
  return a1;
}

void sub_1133C84(void *a1)
{
}

BOOL sub_1133CA4(unsigned char *a1)
{
  uint64_t v1 = qword_211B550[*a1 & 0x7F];
  uint64_t v2 = qword_211B550[(*a1 + 1) & 0x7F];
  if (v1 == v2) {
    return 0;
  }
  uint64_t v4 = (int *)((char *)&unk_211A890 + 4 * v1);
  int v5 = *(_DWORD *)a1;
  uint64_t v6 = 4 * v2 - 4 * v1 - 4;
  do
  {
    int v7 = *v4++;
    BOOL result = v5 == v7;
    BOOL v8 = v5 == v7 || v6 == 0;
    v6 -= 4;
  }
  while (!v8);
  return result;
}

BOOL sub_1133D0C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (*a1 == 0x700000000000000) {
    return 1;
  }
  uint64_t v3 = qword_211BFA8[*a1 & 0x7F];
  uint64_t v4 = qword_211BFA8[((_BYTE)v1 + 1) & 0x7F];
  if (v3 == v4) {
    return 0;
  }
  int v5 = &aAdlm[8 * v3];
  uint64_t v6 = 8 * v4 - 8 * v3 - 8;
  do
  {
    uint64_t v7 = *(void *)v5;
    v5 += 8;
    BOOL result = v1 == v7;
    BOOL v8 = v1 == v7 || v6 == 0;
    v6 -= 8;
  }
  while (!v8);
  return result;
}

BOOL sub_1133D84(_DWORD *a1)
{
  if (*a1 == 50331648) {
    return 1;
  }
  int v2 = sub_1120F28((uint64_t)a1, 0);
  uint64_t v3 = (uint64_t *)((char *)&unk_20FDBA8 + 8 * (v2 & 0x7F));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4 != v5)
  {
    uint64_t v6 = 5 * v4;
    uint64_t v7 = 40 * v5 - 40 * v4;
    BOOL v8 = (int *)((char *)&unk_248B5A0 + 8 * v6 + 4);
    while (1)
    {
      int v9 = *v8;
      v8 += 10;
      if (v9 == v2) {
        break;
      }
      v7 -= 40;
      if (!v7) {
        return v2 == 16797249;
      }
    }
    return 1;
  }
  return v2 == 16797249;
}

uint64_t sub_1133E18(unsigned int *a1)
{
  uint64_t result = *a1;
  if (!BYTE3(result))
  {
    uint64_t v2 = qword_211C970[result & 0x7F];
    uint64_t v3 = qword_211C970[((_BYTE)result + 1) & 0x7F];
    if (v2 != v3)
    {
      uint64_t v4 = (unsigned int *)((char *)&unk_211C3A8 + 8 * v2 + 4);
      uint64_t v5 = 8 * v3 - 8 * v2;
      while (result != *(v4 - 1))
      {
        v4 += 2;
        v5 -= 8;
        if (!v5) {
          return result;
        }
      }
      return *v4;
    }
  }
  return result;
}

uint64_t sub_1133E84(unsigned int *a1)
{
  uint64_t result = *a1;
  if (!BYTE3(result))
  {
    uint64_t v2 = qword_211D710[result & 0x7F];
    uint64_t v3 = qword_211D710[((_BYTE)result + 1) & 0x7F];
    if (v2 != v3)
    {
      uint64_t v4 = (unsigned int *)((char *)&unk_211CD70 + 8 * v2 + 4);
      uint64_t v5 = 8 * v3 - 8 * v2;
      while (result != *(v4 - 1))
      {
        v4 += 2;
        v5 -= 8;
        if (!v5) {
          return result;
        }
      }
      return *v4;
    }
  }
  return result;
}

uint64_t sub_1133EF0(uint64_t a1)
{
  return *(unsigned int *)(*(void *)a1 + 4);
}

uint64_t sub_1133EFC(uint64_t a1)
{
  return *(unsigned int *)(*(void *)a1 + 32);
}

char *sub_1133F08(int *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB70, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB70))
  {
    nullsub_1(&unk_252BB68);
    __cxa_guard_release(&qword_252BB70);
  }

  return sub_112F270((uint64_t)&unk_252BB68, a1);
}

void sub_1133F80(_Unwind_Exception *a1)
{
}

BOOL sub_1133F98(void *a1)
{
  return *a1 != (void)&unk_2491B50;
}

uint64_t sub_1133FB0(uint64_t *a1, void **a2)
{
  return sub_1134120(*a1, *a2);
}

void *sub_1133FBC(uint64_t *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB80))
  {
    nullsub_1(&unk_252BB78);
    __cxa_guard_release(&qword_252BB80);
  }

  return sub_1130A3C((uint64_t)&unk_252BB78, a1);
}

void sub_1134034(_Unwind_Exception *a1)
{
}

uint64_t sub_113404C(void **a1)
{
  return **a1 & 0xFFFFFFFFFFFFFFLL;
}

void sub_113405C()
{
}

void *sub_11340B8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  if (a2 >= 2) {
    uint64_t v7 = &std::cerr;
  }
  else {
    uint64_t v7 = &std::cout;
  }
  BOOL v8 = sub_188FC78(v7, *a7, a7[1]);
  char v10 = 10;
  return sub_188FC78(v8, (uint64_t)&v10, 1);
}

void sub_113410C()
{
}

uint64_t sub_1134120(uint64_t a1, void *a2)
{
  if ((_UNKNOWN *)a1 != &unk_2491B50 && a2 != &unk_2491B50)
  {
    if ((void *)a1 == a2) {
      return 1;
    }
    uint64_t v3 = *(void **)(a1 + 32);
    if (v3 == &unk_2491B50)
    {
      uint64_t v4 = 2;
      goto LABEL_12;
    }
    if (v3 == a2) {
      return 3;
    }
    if (*(_UNKNOWN **)(a1 + 8) == &unk_2491B50)
    {
      a1 = *(void *)(a1 + 32);
      uint64_t v4 = 4;
    }
    else
    {
      uint64_t v4 = 2;
    }
LABEL_12:
    while (1)
    {
      a1 = *(void *)(a1 + 8);
      if ((_UNKNOWN *)a1 == &unk_2491B50) {
        break;
      }
      if ((void *)a1 == a2) {
        return v4;
      }
    }
  }
  return 0;
}

uint64_t sub_11341A4(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F8218, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_24F8218))
  {
    nullsub_1(&unk_24F8210);
    __cxa_guard_release(&qword_24F8218);
  }
  uint64_t v2 = *(char **)(a1 + 40);
  if (v2) {
    sub_1123180(v4, v2);
  }
  else {
    sub_1123180(v4, "und");
  }
  return sub_112F47C((uint64_t)&unk_24F8210, (uint64_t)v4);
}

void sub_1134278(_Unwind_Exception *a1)
{
}

void *sub_1134298(uint64_t *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F8228, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_24F8228))
  {
    nullsub_1(&unk_24F8220);
    __cxa_guard_release(&qword_24F8228);
  }

  return sub_11307A4((uint64_t)&unk_24F8220, a1);
}

void sub_1134310(_Unwind_Exception *a1)
{
}

BOOL sub_1134328(uint64_t a1)
{
  return *(void *)(*(void *)a1 + 8) == 0x700000000000000;
}

BOOL sub_1134340(uint64_t **a1, uint64_t **a2)
{
  uint64_t v2 = **a1;
  uint64_t v3 = **a2;
  return !(v2 | v3) && (*a1)[1] == (*a2)[1] || (v3 & v2) != 0;
}

BOOL sub_113437C(uint64_t **a1, uint64_t **a2)
{
  uint64_t v2 = **a1;
  uint64_t v3 = **a2;
  return (v2 | v3 || (*a1)[1] != (*a2)[1]) && (v3 & v2) == 0;
}

uint64_t sub_11343B8(uint64_t a1)
{
  return *(void *)(*(void *)a1 + 8);
}

unint64_t sub_11343C4(uint64_t a1, uint64_t a2)
{
  return (**(void **)a2
        + ((*(void *)(*(void *)a2 + 8) & 0xFFFFFFFFFFFFFFLL) << 6)
        + ((*(void *)(*(void *)a2 + 8) & 0xFFFFFFFFFFFFFFuLL) >> 2)
        - 0x61C8864680B583EDLL) ^ *(void *)(*(void *)a2 + 8) & 0xFFFFFFFFFFFFFFLL;
}

uint64_t *sub_11343F4(uint64_t *a1)
{
  *a1 = sub_112F0D4();
  return a1;
}

uint64_t sub_1134420(uint64_t *a1, void *a2)
{
  long long v3 = *(_OWORD *)(*a1 + 48);
  long long v5 = *(_OWORD *)*a1;
  long long v4 = *(_OWORD *)(*a1 + 16);
  v8[2] = *(_OWORD *)(*a1 + 32);
  v8[3] = v3;
  v8[0] = v5;
  v8[1] = v4;
  uint64_t v6 = a2[1];
  *(void *)&v8[0] = *a2;
  BYTE8(v8[0]) = v6;
  uint64_t result = sub_112EFD4((uint64_t)&unk_252BB88, v8);
  *a1 = result;
  return result;
}

uint64_t sub_113447C(uint64_t *a1, uint64_t *a2)
{
  long long v3 = *(_OWORD *)(*a1 + 48);
  long long v5 = *(_OWORD *)*a1;
  long long v4 = *(_OWORD *)(*a1 + 16);
  long long v10 = *(_OWORD *)(*a1 + 32);
  long long v11 = v3;
  long long v8 = v5;
  long long v9 = v4;
  uint64_t v6 = a2[1];
  uint64_t v12 = *a2;
  uint64_t v13 = v6;
  if ((_BYTE)v6 && sub_1133F98(&v12))
  {
    *(void *)&long long v9 = v12;
    BYTE8(v9) = v13;
  }
  else if (BYTE8(v9))
  {
    BYTE8(v9) = 0;
  }
  uint64_t result = sub_112EFD4((uint64_t)&unk_252BB88, &v8);
  *a1 = result;
  return result;
}

uint64_t sub_1134508(uint64_t *a1, uint64_t *a2)
{
  long long v3 = *(_OWORD *)(*a1 + 48);
  long long v5 = *(_OWORD *)*a1;
  long long v4 = *(_OWORD *)(*a1 + 16);
  long long v9 = *(_OWORD *)(*a1 + 32);
  long long v10 = v3;
  v8[0] = v5;
  v8[1] = v4;
  uint64_t v6 = a2[1];
  uint64_t v11 = *a2;
  uint64_t v12 = v6;
  if ((_BYTE)v6 && sub_1133F98(&v11))
  {
    *(void *)&long long v9 = v11;
    BYTE8(v9) = v12;
  }
  else if (BYTE8(v9))
  {
    BYTE8(v9) = 0;
  }
  uint64_t result = sub_112EFD4((uint64_t)&unk_252BB88, v8);
  *a1 = result;
  return result;
}

uint64_t sub_1134594(uint64_t *a1, uint64_t *a2)
{
  long long v3 = *(_OWORD *)(*a1 + 48);
  long long v5 = *(_OWORD *)*a1;
  long long v4 = *(_OWORD *)(*a1 + 16);
  long long v8[2] = *(_OWORD *)(*a1 + 32);
  long long v9 = v3;
  v8[0] = v5;
  v8[1] = v4;
  uint64_t v6 = a2[1];
  uint64_t v10 = *a2;
  uint64_t v11 = v6;
  if ((_BYTE)v6 && !sub_1134328((uint64_t)&v10))
  {
    *(void *)&long long v9 = v10;
    BYTE8(v9) = v11;
  }
  else if (BYTE8(v9))
  {
    BYTE8(v9) = 0;
  }
  uint64_t result = sub_112EFD4((uint64_t)&unk_252BB88, v8);
  *a1 = result;
  return result;
}

uint64_t sub_1134620()
{
  uint64_t result = qword_25FE620;
  if (!qword_25FE620)
  {
    v5.__m_.__sig = 850045863;
    memset(v5.__m_.__opaque, 0, sizeof(v5.__m_.__opaque));
    std::mutex::lock(&v5);
    if (!qword_25FE620)
    {
      double v1 = sub_11207C4(&v2);
      (*(void (**)(uint64_t *__return_ptr, double))(*(void *)v2 + 56))(&v3, v1);
      qword_25FE620 = (uint64_t)sub_1134760(&v3);
      if (v4) {
        sub_20A69F0(v4);
      }
      if (*((void *)&v2 + 1)) {
        sub_20A69F0(*((std::__shared_weak_count **)&v2 + 1));
      }
    }
    std::mutex::unlock(&v5);
    std::mutex::~mutex(&v5);
    return qword_25FE620;
  }
  return result;
}

void sub_1134714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, std::mutex *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, std::__shared_weak_count *a13, uint64_t a14)
{
  if (a13) {
    sub_20A69F0(a13);
  }
  if (a11) {
    sub_20A69F0(a11);
  }
  std::mutex::unlock((std::mutex *)&a14);
  std::mutex::~mutex((std::mutex *)&a14);
  _Unwind_Resume(a1);
}

uint64_t (***sub_1134760(uint64_t *a1))()
{
  switch(sub_4F44((unsigned int *)*a1))
  {
    case 0u:
      switch(sub_53FA4(*a1))
      {
        case 0u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2491B80;
              long long v4 = &off_2491C40;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2491CC0;
              long long v4 = &off_2491D70;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2491DF0;
              long long v4 = &off_2491EA0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2491F20;
              long long v4 = &off_2491FD0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 1u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492050;
              long long v4 = &off_24920D0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492150;
              long long v4 = &off_24921D0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492250;
              long long v4 = &off_24922D0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492350;
              long long v4 = &off_24923D0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 2u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492450;
              long long v4 = &off_24924D0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492550;
              long long v4 = &off_24925D0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492650;
              long long v4 = &off_24926D0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492750;
              long long v4 = &off_24927D0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 3u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492850;
              long long v4 = &off_24928D0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492950;
              long long v4 = &off_24929D0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492A50;
              long long v4 = &off_2492AD0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492B50;
              long long v4 = &off_2492BD0;
              goto LABEL_108;
            default:
              return 0;
          }
        default:
          return 0;
      }
    case 1u:
      switch(sub_53FA4(*a1))
      {
        case 0u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492C50;
              long long v4 = &off_2492CD0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492D50;
              long long v4 = &off_2492DD0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492E50;
              long long v4 = &off_2492ED0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2492F50;
              long long v4 = &off_2492FD0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 1u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493050;
              long long v4 = &off_24930D0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493150;
              long long v4 = &off_24931D0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493250;
              long long v4 = &off_24932D0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493350;
              long long v4 = &off_24933D0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 2u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493450;
              long long v4 = &off_24934D0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493550;
              long long v4 = &off_24935D0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493650;
              long long v4 = &off_24936D0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493750;
              long long v4 = &off_24937D0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 3u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493850;
              long long v4 = &off_24938D0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493950;
              long long v4 = &off_24939D0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493A50;
              long long v4 = &off_2493AD0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493B50;
              long long v4 = &off_2493BD0;
              goto LABEL_108;
            default:
              return 0;
          }
        default:
          return 0;
      }
    case 2u:
      switch(sub_53FA4(*a1))
      {
        case 0u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493C50;
              long long v4 = &off_2493CD0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493D50;
              long long v4 = &off_2493DD0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493E50;
              long long v4 = &off_2493ED0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2493F50;
              long long v4 = &off_2493FD0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 1u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494050;
              long long v4 = &off_24940D0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494150;
              long long v4 = &off_24941D0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494250;
              long long v4 = &off_24942D0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494350;
              long long v4 = &off_24943D0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 2u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494450;
              long long v4 = &off_24944D0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494550;
              long long v4 = &off_24945D0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494650;
              long long v4 = &off_24946D0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494750;
              long long v4 = &off_24947D0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 3u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494850;
              long long v4 = &off_24948D0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494950;
              long long v4 = &off_24949D0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494A50;
              long long v4 = &off_2494AD0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494B50;
              long long v4 = &off_2494BD0;
              goto LABEL_108;
            default:
              return 0;
          }
        default:
          return 0;
      }
    case 3u:
      switch(sub_53FA4(*a1))
      {
        case 0u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494C50;
              long long v4 = &off_2494CD0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494D50;
              long long v4 = &off_2494DD0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494E50;
              long long v4 = &off_2494ED0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2494F50;
              long long v4 = &off_2494FD0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 1u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495050;
              long long v4 = &off_24950D0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495150;
              long long v4 = &off_24951D0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495250;
              long long v4 = &off_24952D0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495350;
              long long v4 = &off_24953D0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 2u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495450;
              long long v4 = &off_24954D0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495550;
              long long v4 = &off_24955D0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495650;
              long long v4 = &off_24956D0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495750;
              long long v4 = &off_24957D0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 3u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495850;
              long long v4 = &off_24958D0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495950;
              long long v4 = &off_24959D0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495A50;
              long long v4 = &off_2495AD0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495B50;
              long long v4 = &off_2495BD0;
              goto LABEL_108;
            default:
              return 0;
          }
        default:
          return 0;
      }
    case 4u:
      switch(sub_53FA4(*a1))
      {
        case 0u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495C50;
              long long v4 = &off_2495CD0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495D50;
              long long v4 = &off_2495DD0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495E50;
              long long v4 = &off_2495ED0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2495F50;
              long long v4 = &off_2495FD0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 1u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2496050;
              long long v4 = &off_24960D0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2496150;
              long long v4 = &off_24961D0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2496250;
              long long v4 = &off_24962D0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2496350;
              long long v4 = &off_24963D0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 2u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2496450;
              long long v4 = &off_24964D0;
              goto LABEL_108;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2496550;
              long long v4 = &off_24965D0;
              goto LABEL_108;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2496650;
              long long v4 = &off_24966D0;
              goto LABEL_108;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2496750;
              long long v4 = &off_24967D0;
              goto LABEL_108;
            default:
              return 0;
          }
        case 3u:
          switch(sub_40A44C(*a1))
          {
            case 0u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2496850;
              long long v4 = &off_24968D0;
              break;
            case 1u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2496950;
              long long v4 = &off_24969D0;
              break;
            case 2u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2496A50;
              long long v4 = &off_2496AD0;
              break;
            case 3u:
              char v2 = sub_40AB24(*a1);
              uint64_t v3 = &off_2496B50;
              long long v4 = &off_2496BD0;
              break;
            default:
              return 0;
          }
LABEL_108:
          if (v2) {
            return v3;
          }
          else {
            return v4;
          }
        default:
          return 0;
      }
    default:
      return 0;
  }
  return 0;
}

void sub_113573C()
{
}

uint64_t sub_1135750()
{
  return 0;
}

uint64_t sub_1135758()
{
  return 0;
}

uint64_t sub_1135760()
{
  return 0;
}

unint64_t sub_1135768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1135840(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1135870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_113594C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113597C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1135A60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1135A90(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1135B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1135BA8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1135C84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

uint64_t sub_1135CCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v6[0] = a2;
  v6[1] = a3;
  sub_1139150((uint64_t)a3, 0);
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  if (v4 == -1) {
    sub_11388B8();
  }
  unint64_t v7 = v6;
  return ((uint64_t (*)(void **, uint64_t))off_2491C10[v4])(&v7, a1);
}

void sub_1135D44(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1135D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v6[0] = a2;
  v6[1] = a3;
  sub_1139150((uint64_t)a3, 0);
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  if (v4 == -1) {
    sub_11388B8();
  }
  unint64_t v7 = v6;
  return ((uint64_t (*)(void **, uint64_t))off_2491C10[v4])(&v7, a1);
}

void sub_1135DD8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1135DF4(uint64_t **a1, uint64_t **a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v4 = 0x1FFFFFFFFLL;
  if (a2[1] != *a2)
  {
    unsigned int v8 = 0;
    uint64_t v6 = sub_1135E68(a1, a2, &v8, a3, a4, 1u, 1u);
    if (a2[1] != v6) {
      return ((unint64_t)((char *)v6 - (char *)*a2) >> 4) | ((unint64_t)v8 << 32);
    }
  }
  return v4;
}

uint64_t *sub_1135E68(uint64_t **a1, uint64_t **a2, _DWORD *a3, uint64_t a4, unsigned char *a5, unsigned int a6, unsigned int a7)
{
  if (a4) {
    int v13 = *(_DWORD *)a4;
  }
  else {
    int v13 = 50331648;
  }
  uint64_t v15 = *a2;
  uint64_t v14 = a2[1];
  int v37 = v13;
  *a5 = a6;
  if (a6 > a7)
  {
LABEL_55:
    *a3 = 1;
    *a5 = 0;
    return v14;
  }
  else
  {
    while (1)
    {
      switch((char)a6)
      {
        case 1:
          uint64_t result = sub_1136238(a1, a2, &v37);
          goto LABEL_53;
        case 2:
          uint64_t result = sub_1136418(a1, a2, &v37);
          goto LABEL_53;
        case 3:
          if (!a4) {
            goto LABEL_54;
          }
          uint64_t result = (uint64_t *)sub_11365D8((uint64_t *)a1, a2, *(_DWORD *)(a4 + 20));
          goto LABEL_53;
        case 4:
          if (!a4) {
            goto LABEL_54;
          }
          uint64_t v32 = *(void *)(a4 + 8);
          if (!v32 || !*(void *)(v32 + 40)) {
            goto LABEL_54;
          }
          uint64_t v33 = sub_11341A4(v32);
          uint64_t result = (uint64_t *)sub_1136640((uint64_t *)a1, (uint64_t *)a2, v33);
          goto LABEL_53;
        case 5:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          uint64_t v22 = sub_11366B8(&v37);
          if ((*(unsigned char *)(a4 + 16) & 2) == 0) {
            goto LABEL_54;
          }
          uint64_t v23 = (uint64_t *)v22;
          uint64_t v24 = (uint64_t *)a1;
          unint64_t v25 = (uint64_t *)a2;
          int v26 = 2;
          goto LABEL_50;
        case 6:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          long long v34 = sub_11366B8(&v37);
          if ((*(unsigned char *)(a4 + 16) & 4) == 0) {
            goto LABEL_54;
          }
          uint64_t v23 = (uint64_t *)v34;
          uint64_t v24 = (uint64_t *)a1;
          unint64_t v25 = (uint64_t *)a2;
          int v26 = 4;
          goto LABEL_50;
        case 7:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          uint64_t v36 = sub_11366B8(&v37);
          if ((*(unsigned char *)(a4 + 16) & 8) == 0) {
            goto LABEL_54;
          }
          uint64_t v23 = (uint64_t *)v36;
          uint64_t v24 = (uint64_t *)a1;
          unint64_t v25 = (uint64_t *)a2;
          int v26 = 8;
          goto LABEL_50;
        case 8:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          uint64_t v23 = (uint64_t *)sub_11366B8(&v37);
          uint64_t v24 = (uint64_t *)a1;
          unint64_t v25 = (uint64_t *)a2;
          int v26 = 15;
LABEL_50:
          uint64_t result = (uint64_t *)sub_1136744(v24, v25, v23, v26);
          goto LABEL_53;
        case 9:
          uint64_t result = (uint64_t *)sub_1136940((uint64_t *)a1, (uint64_t *)a2);
          goto LABEL_53;
        case 10:
          uint64_t result = (uint64_t *)sub_1136B74((uint64_t *)a1, (uint64_t *)a2);
          goto LABEL_53;
        case 11:
          uint64_t result = (uint64_t *)sub_1136C24((uint64_t *)a1, (uint64_t *)a2);
          goto LABEL_53;
        case 12:
          if (!a4) {
            goto LABEL_54;
          }
          uint64_t v21 = *(unsigned int *)(a4 + 20);
          if ((v21 & 0x80000000) != 0 || (int)v21 >= (int)((unint64_t)((char *)a2[1] - (char *)*a2) >> 4)) {
            goto LABEL_54;
          }
          uint64_t result = &v15[2 * v21];
          goto LABEL_53;
        case 13:
          if (!a4) {
            goto LABEL_54;
          }
          uint64_t v27 = *(void *)(a4 + 8);
          if (!v27 || !*(void *)(v27 + 40)) {
            goto LABEL_54;
          }
          uint64_t v28 = sub_11341A4(v27);
          uint64_t result = *a2;
          uint64_t v29 = a2[1];
          if (*a2 == v29) {
            goto LABEL_53;
          }
          break;
        case 14:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          uint64_t v35 = sub_11366B8(&v37);
          if ((*(unsigned char *)(a4 + 16) & 2) == 0) {
            goto LABEL_54;
          }
          int v17 = (uint64_t *)v35;
          uint64_t v18 = (uint64_t *)a2;
          int v19 = 2;
          goto LABEL_46;
        case 15:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          int v20 = sub_11366B8(&v37);
          if ((*(unsigned char *)(a4 + 16) & 4) == 0) {
            goto LABEL_54;
          }
          int v17 = (uint64_t *)v20;
          uint64_t v18 = (uint64_t *)a2;
          int v19 = 4;
          goto LABEL_46;
        case 16:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          uint64_t v31 = sub_11366B8(&v37);
          if ((*(unsigned char *)(a4 + 16) & 8) == 0) {
            goto LABEL_54;
          }
          int v17 = (uint64_t *)v31;
          uint64_t v18 = (uint64_t *)a2;
          int v19 = 8;
          goto LABEL_46;
        case 17:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          int v17 = (uint64_t *)sub_11366B8(&v37);
          uint64_t v18 = (uint64_t *)a2;
          int v19 = 15;
LABEL_46:
          uint64_t result = (uint64_t *)sub_1136CC4(v18, v17, v19);
          goto LABEL_53;
        default:
          goto LABEL_54;
      }
      while (1)
      {
        uint64_t v30 = result[1];
        if (*(_DWORD *)v30 == *(_DWORD *)v28 && *(void *)(v30 + 8) == *(void *)(v28 + 8)) {
          break;
        }
        result += 2;
        if (result == v29)
        {
          uint64_t result = a2[1];
          break;
        }
      }
LABEL_53:
      if (result != v14) {
        break;
      }
LABEL_54:
      LOBYTE(a6) = *a5 + 1;
      *a5 = a6;
      if (a7 < a6) {
        goto LABEL_55;
      }
    }
    *a3 = *a5 > 9u;
  }
  return result;
}

uint64_t *sub_1136238(uint64_t **a1, uint64_t **a2, int *a3)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = *a1;
  uint64_t v21 = a1[1];
  if (*a1 == v21) {
    return a2[1];
  }
  unint64_t v5 = *a2;
  int v6 = *a3;
  double v7 = 0.5;
  double v8 = 0.0;
  uint64_t v22 = a2[1];
  double v9 = 1.0;
  int v20 = *a2;
  while (1)
  {
    uint64_t v23 = v4;
    if (v5 != v3) {
      break;
    }
LABEL_18:
    double v8 = v8 + 0.07000001;
    double v9 = 1.0 - v8;
    uint64_t v4 = v23 + 2;
    unint64_t v5 = v20;
    if (v7 >= 1.0 - v8 || v4 == v21) {
      return v22;
    }
  }
  uint64_t v10 = *v4;
  uint64_t v11 = v4[1];
  while (1)
  {
    uint64_t v12 = *v5;
    double v25 = 1.0;
    uint64_t v13 = sub_1133780(v10);
    uint64_t v14 = sub_1133780(v12);
    sub_1136E90(v10, v13, v12, v14, &v25);
    double v15 = v25;
    if (v6 != 50331648 && *(_DWORD *)(v5[1] + 4) == *a3) {
      double v15 = v25 + 0.0011;
    }
    if (*(_DWORD *)v11 == 16803962 && *(void *)(v11 + 8) == 0x3000000736E6148)
    {
      uint64_t v16 = v5[1];
      if (*(_DWORD *)v16 == 16803962 && *(void *)(v16 + 8) == 0x3000000746E6148) {
        double v15 = 0.0;
      }
    }
    double v17 = v15 - v8;
    if (v17 > v7)
    {
      double v7 = v17;
      uint64_t v22 = v5;
      if (v17 >= v9) {
        return v5;
      }
    }
    v5 += 2;
    if (v5 == v3) {
      goto LABEL_18;
    }
  }
}

uint64_t *sub_1136418(uint64_t **a1, uint64_t **a2, int *a3)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = *a1;
  uint64_t v22 = a1[1];
  if (*a1 == v22) {
    return a2[1];
  }
  unint64_t v5 = *a2;
  int v6 = *a3;
  double v7 = 0.5;
  double v8 = 0.0;
  int v20 = a2[1];
  uint64_t v21 = *a2;
  double v9 = 1.0;
  while (1)
  {
    uint64_t v23 = v4;
    if (v5 != v3) {
      break;
    }
LABEL_16:
    double v8 = v8 + 0.07000001;
    double v9 = 1.0 - v8;
    uint64_t v4 = v23 + 2;
    BOOL v18 = v7 >= 1.0 - v8 || v4 == v22;
    unint64_t v5 = v21;
    if (v18) {
      return v20;
    }
  }
  uint64_t v10 = *v4;
  uint64_t v11 = v4[1];
  while (1)
  {
    if (*(void *)(v5[1] + 8) == 0x30000006E74614CLL)
    {
      uint64_t v12 = *v5;
      double v25 = 1.0;
      uint64_t v13 = sub_1133780(v10);
      uint64_t v14 = sub_1133780(v12);
      sub_1137458(v10, v13, v12, v14, &v25);
      double v15 = v25;
      int v16 = *(_DWORD *)(v5[1] + 4);
      if (v6 != 50331648 && v16 == *a3) {
        double v15 = v25 + 0.0011;
      }
      if (*(_DWORD *)(v11 + 4) == v16) {
        double v15 = v15 + 0.002;
      }
      double v17 = v15 - v8;
      if (v17 > v7)
      {
        double v7 = v17;
        int v20 = v5;
        if (v17 >= v9) {
          return v5;
        }
      }
    }
    v5 += 2;
    if (v5 == v3) {
      goto LABEL_16;
    }
  }
}

uint64_t sub_11365D8(uint64_t *a1, void *a2, int a3)
{
  uint64_t result = a2[1];
  if ((a3 & 0x80000000) == 0 && (int)((unint64_t)(result - *a2) >> 4) > a3)
  {
    uint64_t v6 = *a1;
    uint64_t v5 = a1[1];
    if (v6 != v5)
    {
      uint64_t v7 = *a2 + 16 * a3;
      while (*(void *)(*(void *)(v6 + 8) + 8) != *(void *)(*(void *)(v7 + 8) + 8))
      {
        v6 += 16;
        if (v6 == v5) {
          return result;
        }
      }
      return v7;
    }
  }
  return result;
}

uint64_t sub_1136640(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1 == v4) {
    return a2[1];
  }
  uint64_t v5 = a2[1];
  while (1)
  {
    if (*a2 != v5)
    {
      uint64_t v6 = *(void *)(*(void *)(v3 + 8) + 8);
      if (v6 == *(void *)(a3 + 8)) {
        break;
      }
    }
LABEL_9:
    v3 += 16;
    if (v3 == v4) {
      return a2[1];
    }
  }
  uint64_t result = *a2;
  while (1)
  {
    uint64_t v8 = *(void *)(result + 8);
    if (*(_DWORD *)v8 == *(_DWORD *)a3 && *(void *)(v8 + 8) == v6) {
      return result;
    }
    result += 16;
    if (result == v5) {
      goto LABEL_9;
    }
  }
}

void **sub_11366B8(int *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F8218, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_24F8218))
  {
    nullsub_1(&unk_24F8210);
    __cxa_guard_release(&qword_24F8218);
  }
  return sub_112FC7C((uint64_t)&unk_24F8210, a1);
}

void sub_1136724(void *a1)
{
}

uint64_t sub_1136744(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4)
{
  uint64_t v4 = a2[1];
  uint64_t v18 = a3[1];
  if (*a3 == v18) {
    return v4;
  }
  uint64_t v20 = *a3;
  double v6 = 0.0;
  uint64_t v7 = a2[1];
  do
  {
    int v8 = *(_DWORD *)(v20 + 16);
    if ((v8 & a4) != 0)
    {
      uint64_t v9 = *(void *)v20;
      if (v8 != 1 || *(double *)(v20 + 8) > 0.5)
      {
        uint64_t v11 = *a1;
        uint64_t v10 = a1[1];
        uint64_t v21 = v10;
        while (v11 != v10)
        {
          if (*(void *)(*(void *)(v11 + 8) + 8) == *(void *)(v9 + 8))
          {
            if (*a2 != v4)
            {
              uint64_t v4 = *a2;
              do
              {
                uint64_t v12 = *(void *)(v4 + 8);
                if (*(_DWORD *)v12 != 16803962
                  || *(void *)(v12 + 8) != 0x3000000746E6148
                  || (uint64_t v13 = *(void *)(v11 + 8), *(_DWORD *)v13 != 16803962)
                  || *(void *)(v13 + 8) != 0x3000000736E6148)
                {
                  if (*(_DWORD *)v9 == *(_DWORD *)v12 && *(void *)(v9 + 8) == *(void *)(v12 + 8))
                  {
                    double v22 = 1.0;
                    uint64_t v14 = sub_1133780(v9);
                    uint64_t v15 = sub_1133780(v12);
                    sub_1136E90(v9, v14, v12, v15, &v22);
                    if (v22 > v6)
                    {
                      uint64_t v7 = v4;
                      double v6 = v22;
                      if (v22 >= 1.0) {
                        return v4;
                      }
                    }
                  }
                }
                v4 += 16;
              }
              while (v4 != a2[1]);
            }
            uint64_t result = v7;
            uint64_t v7 = v4;
            if (result != v4) {
              return result;
            }
          }
          v11 += 16;
          uint64_t v10 = v21;
        }
      }
    }
    uint64_t result = v7;
    v20 += 24;
  }
  while (v20 != v18);
  return result;
}

uint64_t sub_1136940(uint64_t *a1, uint64_t *a2)
{
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  unint64_t v30 = 0;
  sub_11379E8((uint64_t)&v28, 0);
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (*a1 != v5)
  {
    do
    {
      double v6 = (__n128 **)sub_1137A18(*(void *)(v4 + 8));
      uint64_t v7 = *v6;
      int v8 = v6[1];
      while (v7 != v8 && v7->n128_f64[1] >= 0.25)
      {
        uint64_t v9 = v29;
        if ((unint64_t)v29 >= v30)
        {
          int64_t v11 = v29 - v28;
          unint64_t v12 = v11 + 1;
          if ((unint64_t)(v11 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v13 = v30 - (void)v28;
          if ((uint64_t)(v30 - (void)v28) >> 3 > v12) {
            unint64_t v12 = v13 >> 3;
          }
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v14 = v12;
          }
          if (v14) {
            uint64_t v15 = (char *)sub_1121C00((uint64_t)&v30, v14);
          }
          else {
            uint64_t v15 = 0;
          }
          int v16 = (__n128 *)&v15[16 * v11];
          *int v16 = *v7;
          uint64_t v18 = v28;
          double v17 = v29;
          int v19 = v16;
          if (v29 != v28)
          {
            do
            {
              v19[-1] = v17[-1];
              --v19;
              --v17;
            }
            while (v17 != v18);
            double v17 = v28;
          }
          uint64_t v10 = v16 + 1;
          uint64_t v28 = v19;
          uint64_t v29 = v16 + 1;
          unint64_t v30 = (unint64_t)&v15[16 * v14];
          if (v17) {
            operator delete(v17);
          }
        }
        else
        {
          *uint64_t v29 = *v7;
          uint64_t v10 = v9 + 1;
        }
        uint64_t v29 = v10;
        ++v7;
      }
      v4 += 16;
    }
    while (v4 != v5);
  }
  unint64_t v20 = 126 - 2 * __clz(v29 - v28);
  if (v29 == v28) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = v20;
  }
  sub_1137BC4(v28, v29, (uint64_t)&v31, v21, 1);
  if (v28 == v29)
  {
    uint64_t v25 = a2[1];
  }
  else
  {
    uint64_t v22 = *a2;
    uint64_t v23 = a2[1];
    uint64_t v24 = v28;
    while (v22 == v23)
    {
LABEL_33:
      if (++v24 == v29)
      {
        uint64_t v25 = v23;
        goto LABEL_36;
      }
    }
    uint64_t v25 = v22;
    while (1)
    {
      uint64_t v26 = *(void *)(v25 + 8);
      if (*(_DWORD *)v24->n128_u64[0] == *(_DWORD *)v26 && *(void *)(v24->n128_u64[0] + 8) == *(void *)(v26 + 8)) {
        break;
      }
      v25 += 16;
      if (v25 == v23) {
        goto LABEL_33;
      }
    }
  }
LABEL_36:
  if (v28)
  {
    uint64_t v29 = v28;
    operator delete(v28);
  }
  return v25;
}

uint64_t sub_1136B74(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  while (1)
  {
    if (v3 == v4) {
      return a2[1];
    }
    uint64_t v5 = *(void *)(v3 + 8);
    double v6 = (uint64_t *)sub_1137A18(v5);
    uint64_t v7 = *v6;
    uint64_t v8 = v6[1];
    if (*v6 != v8) {
      break;
    }
LABEL_14:
    v3 += 16;
  }
  uint64_t v9 = *(void *)(v5 + 8);
  uint64_t v10 = a2[1];
  while (v9 != *(void *)(*(void *)v7 + 8) || *a2 == v10)
  {
LABEL_13:
    v7 += 16;
    if (v7 == v8) {
      goto LABEL_14;
    }
  }
  uint64_t result = *a2;
  while (1)
  {
    uint64_t v13 = *(void *)(result + 8);
    if (v9 == *(void *)(v13 + 8) && **(_DWORD **)v7 == *(_DWORD *)v13) {
      return result;
    }
    result += 16;
    if (result == v10) {
      goto LABEL_13;
    }
  }
}

uint64_t sub_1136C24(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  if (*a1 == v3) {
    return a2[1];
  }
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  while (v4 == v5)
  {
LABEL_13:
    v2 += 16;
    if (v2 == v3) {
      return v5;
    }
  }
  uint64_t v6 = *(void *)(v2 + 8);
  uint64_t result = v4;
  while (1)
  {
    if (*(_DWORD *)v6 != 16803682
      || ((v8 = **(_DWORD **)(result + 8), v8 != 16807282) ? (BOOL v9 = v8 == 16804725) : (BOOL v9 = 1), !v9))
    {
      uint64_t v10 = *(void *)(v6 + 8);
      if (v10 != 0x700000000000000 && v10 == *(void *)(*(void *)(result + 8) + 8)) {
        return result;
      }
    }
    result += 16;
    if (result == v5) {
      goto LABEL_13;
    }
  }
}

uint64_t sub_1136CC4(uint64_t *a1, uint64_t *a2, int a3)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v17 = a2[1];
  if (*a2 == v17) {
    return a1[1];
  }
  double v6 = 0.0;
  uint64_t v7 = a1[1];
  uint64_t v8 = v7;
  while (2)
  {
    int v9 = *(_DWORD *)(v4 + 16);
    if ((v9 & a3) == 0 || v9 == 1 && *(double *)(v4 + 8) <= 0.5) {
      goto LABEL_20;
    }
    uint64_t v10 = *a1;
    if (*a1 == v7)
    {
      uint64_t v7 = v3;
      goto LABEL_19;
    }
    int64_t v11 = *(_DWORD **)v4;
    while (1)
    {
      uint64_t v12 = *(void *)(v10 + 8);
      int v13 = *(_DWORD *)v12;
      if (*(_DWORD *)v12 == 16803962)
      {
        if (*(void *)(v12 + 8) == 0x3000000746E6148 || **(_DWORD **)v4 != 16803962) {
          goto LABEL_16;
        }
        goto LABEL_14;
      }
      if (**(_DWORD **)v4 != v13) {
        goto LABEL_16;
      }
      if (v13 == 16802154) {
        break;
      }
LABEL_14:
      double v19 = 1.0;
      uint64_t v14 = sub_1133780((uint64_t)v11);
      uint64_t v15 = sub_1133780(v12);
      sub_1136E90((BOOL)v11, v14, v12, v15, &v19);
      if (v19 > v6)
      {
        uint64_t v8 = v10;
        double v6 = v19;
        if (v19 >= 1.0) {
          return v10;
        }
      }
LABEL_16:
      v10 += 16;
      uint64_t v3 = a1[1];
      uint64_t v7 = v10;
      if (v10 == v3) {
        goto LABEL_19;
      }
    }
    double v6 = 100.0;
    uint64_t v7 = v3;
    uint64_t v8 = v10;
LABEL_19:
    uint64_t v10 = v8;
    uint64_t v3 = v7;
    uint64_t v8 = v7;
    if (v10 == v7)
    {
LABEL_20:
      v4 += 24;
      uint64_t v10 = v8;
      if (v4 == v17) {
        return v10;
      }
      continue;
    }
    return v10;
  }
}

BOOL sub_1136E90(BOOL result, uint64_t a2, uint64_t a3, uint64_t a4, double *a5)
{
  if (*(_DWORD *)a4 == 6581877)
  {
    double v10 = 0.0;
LABEL_6:
    *a5 = v10;
    return result;
  }
  BOOL v9 = result;
  sub_1136F6C((unsigned char *)a2, (_DWORD *)result, (_DWORD *)a2, (_DWORD *)a4, (_DWORD *)a3, (_DWORD *)a4, a5);
  sub_1136FC4((_DWORD *)a2, (void *)(v9 + 8), (void *)(a2 + 8), a4, (void *)(a3 + 8), (void *)(a4 + 8), a5);
  sub_113701C((int *)a2, (_DWORD *)(v9 + 4), (_DWORD *)(a2 + 4), (int *)a4, (_DWORD *)(a3 + 4), (_DWORD *)(a4 + 4), a5);
  uint64_t result = sub_1126618((void *)(a2 + 16), (unsigned __int8 *)(a4 + 16));
  if (!result)
  {
    double v10 = *a5 + -0.01;
    goto LABEL_6;
  }
  return result;
}

double sub_1136F6C(unsigned char *a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, double *a7)
{
  if (*a3 == *a6)
  {
    if (*a2 != *a5 && *(_DWORD *)a1 == 16807024)
    {
      double result = *a7 + -0.001;
      *a7 = result;
    }
  }
  else
  {
    sub_1137074(a1, a4, a7);
  }
  return result;
}

double sub_1136FC4(_DWORD *a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6, double *a7)
{
  if (*a3 == *a6)
  {
    if (*a2 != *a5 && *a1 == 16807024)
    {
      double result = *a7 + -0.001;
      *a7 = result;
    }
  }
  else
  {
    sub_113714C((uint64_t)a1, a4, a7);
  }
  return result;
}

double sub_113701C(int *a1, _DWORD *a2, _DWORD *a3, int *a4, _DWORD *a5, _DWORD *a6, double *a7)
{
  if (*a3 == *a6)
  {
    if (*a2 != *a5 && *a1 == 16807024)
    {
      double result = *a7 + -0.001;
      *a7 = result;
    }
  }
  else
  {
    sub_11372AC(a1, a4, a7);
  }
  return result;
}

unsigned char *sub_1137074(unsigned char *result, _DWORD *a2, double *a3)
{
  uint64_t v3 = qword_211F350[*result & 0x7F];
  uint64_t v4 = qword_211F350[(*result + 1) & 0x7F];
  if (v3 == v4)
  {
LABEL_13:
    double v11 = 0.8;
  }
  else
  {
    uint64_t v5 = (double *)((char *)&unk_211DF10 + 16 * v3 + 8);
    uint64_t v6 = 16 * v4 - 16 * v3;
    while (1)
    {
      int v7 = *((_DWORD *)v5 - 2);
      if (v7 == 50331648 || v7 == *(_DWORD *)result)
      {
        int v9 = *((_DWORD *)v5 - 1);
        if (v9 == 50331648 || v9 == *a2) {
          break;
        }
      }
      v5 += 2;
      v6 -= 16;
      if (!v6) {
        goto LABEL_13;
      }
    }
    double v11 = *v5;
  }
  *a3 = *a3 - v11;
  return result;
}

uint64_t sub_113714C(uint64_t result, uint64_t a2, double *a3)
{
  uint64_t v3 = qword_211FF20[*(unsigned char *)result & 0x7F];
  uint64_t v4 = qword_211FF20[(*(unsigned char *)result + 1) & 0x7F];
  if (v3 == v4)
  {
LABEL_21:
    double v14 = 0.4;
  }
  else
  {
    uint64_t v5 = 5 * v3;
    uint64_t v6 = (char *)&unk_211F750 + 40 * v3 + 16;
    uint64_t v7 = 40 * v4 - 8 * v5;
    while (1)
    {
      int v8 = *((_DWORD *)v6 - 4);
      if (v8 == 50331648 || v8 == *(_DWORD *)result)
      {
        uint64_t v10 = *((void *)v6 - 1);
        if ((v10 == 0x700000000000000 || v10 == *(void *)(result + 8))
          && (*(_DWORD *)v6 == 50331648 || *(_DWORD *)v6 == *(_DWORD *)a2))
        {
          uint64_t v13 = *((void *)v6 + 1);
          if (v13 == 0x700000000000000 || v13 == *(void *)(a2 + 8)) {
            break;
          }
        }
      }
      v6 += 40;
      v7 -= 40;
      if (!v7) {
        goto LABEL_21;
      }
    }
    double v14 = *((double *)v6 + 2);
  }
  *a3 = *a3 - v14;
  return result;
}

uint64_t sub_11372AC(int *a1, int *a2, double *a3)
{
  uint64_t v3 = qword_2125DC0[*(unsigned char *)a1 & 0x7F];
  uint64_t v4 = qword_2125DC0[(*(unsigned char *)a1 + 1) & 0x7F];
  int v5 = *a1;
  if (v3 == v4)
  {
    uint64_t v6 = *((void *)a1 + 1);
    int v7 = a1[1];
    uint64_t v8 = *((void *)a2 + 1);
    int v9 = *a2;
    int v10 = a2[1];
LABEL_26:
    uint64_t v22 = 80;
    uint64_t v23 = (double *)&qword_2125D90;
    while (1)
    {
      uint64_t result = *((unsigned int *)v23 - 8);
      if (result == 50331648 || result == v5)
      {
        uint64_t result = *((void *)v23 - 3);
        if (result == 0x700000000000000 || result == v6)
        {
          uint64_t result = *((unsigned int *)v23 - 7);
          if (result == 50331648 || result == v7)
          {
            uint64_t result = *((unsigned int *)v23 - 4);
            if (result == 50331648 || result == v9)
            {
              uint64_t result = *((void *)v23 - 1);
              if (result == 0x700000000000000 || result == v8)
              {
                uint64_t result = *((unsigned int *)v23 - 3);
                if (result == 50331648 || result == v10) {
                  break;
                }
              }
            }
          }
        }
      }
      v23 += 5;
      v22 -= 40;
      if (!v22)
      {
        double v27 = *a3 + -0.4;
        goto LABEL_50;
      }
    }
    double v28 = *v23;
  }
  else
  {
    uint64_t v6 = *((void *)a1 + 1);
    int v7 = a1[1];
    uint64_t v8 = *((void *)a2 + 1);
    int v9 = *a2;
    int v10 = a2[1];
    uint64_t v11 = 5 * v3;
    uint64_t v12 = (char *)&unk_2120320 + 40 * v3 + 16;
    uint64_t v13 = 40 * v4 - 8 * v11;
    while (1)
    {
      int v14 = *((_DWORD *)v12 - 4);
      if (v14 == 50331648 || v14 == v5)
      {
        uint64_t v16 = *((void *)v12 - 1);
        if (v16 == 0x700000000000000 || v16 == v6)
        {
          int v18 = *((_DWORD *)v12 - 3);
          BOOL v19 = v18 == 50331648 || v18 == v7;
          if (v19 && (*(_DWORD *)v12 == 50331648 || *(_DWORD *)v12 == v9))
          {
            uint64_t v20 = *((void *)v12 + 1);
            if (v20 == 0x700000000000000 || v20 == v8)
            {
              uint64_t result = *((unsigned int *)v12 + 1);
              if (result == 50331648 || result == v10) {
                break;
              }
            }
          }
        }
      }
      v12 += 40;
      v13 -= 40;
      if (!v13) {
        goto LABEL_26;
      }
    }
    double v28 = *((double *)v12 + 2);
  }
  double v27 = *a3 - v28;
LABEL_50:
  *a3 = v27;
  return result;
}

BOOL sub_1137458(BOOL result, uint64_t a2, uint64_t a3, uint64_t a4, double *a5)
{
  if (*(_DWORD *)a4 == 6581877)
  {
    double v10 = 0.0;
LABEL_6:
    *a5 = v10;
    return result;
  }
  BOOL v9 = result;
  sub_1137534((unsigned char *)a2, (_DWORD *)result, (_DWORD *)a2, (_DWORD *)a4, (_DWORD *)a3, (_DWORD *)a4, a5);
  sub_113758C((int *)a2, (void *)(v9 + 8), (void *)(a2 + 8), (int *)a4, (void *)(a3 + 8), (void *)(a4 + 8), a5);
  sub_11375E4((int *)a2, (_DWORD *)(v9 + 4), (_DWORD *)(a2 + 4), (int *)a4, (_DWORD *)(a3 + 4), (_DWORD *)(a4 + 4), a5);
  uint64_t result = sub_1126618((void *)(a2 + 16), (unsigned __int8 *)(a4 + 16));
  if (!result)
  {
    double v10 = *a5 + -0.01;
    goto LABEL_6;
  }
  return result;
}

double sub_1137534(unsigned char *a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, double *a7)
{
  if (*a3 == *a6)
  {
    if (*a2 != *a5 && *(_DWORD *)a1 == 16807024)
    {
      double result = *a7 + -0.001;
      *a7 = result;
    }
  }
  else
  {
    sub_113763C(a1, a4, a7);
  }
  return result;
}

double sub_113758C(int *a1, void *a2, void *a3, int *a4, void *a5, void *a6, double *a7)
{
  if (*a3 == *a6)
  {
    if (*a2 != *a5 && *a1 == 16807024)
    {
      double result = *a7 + -0.001;
      *a7 = result;
    }
  }
  else
  {
    sub_11376DC(a1, a4, a7);
  }
  return result;
}

double sub_11375E4(int *a1, _DWORD *a2, _DWORD *a3, int *a4, _DWORD *a5, _DWORD *a6, double *a7)
{
  if (*a3 == *a6)
  {
    if (*a2 != *a5 && *a1 == 16807024)
    {
      double result = *a7 + -0.001;
      *a7 = result;
    }
  }
  else
  {
    sub_1137834(a1, a4, a7);
  }
  return result;
}

unsigned char *sub_113763C(unsigned char *result, _DWORD *a2, double *a3)
{
  uint64_t v3 = qword_2127860[*result & 0x7F];
  uint64_t v4 = qword_2127860[(*result + 1) & 0x7F];
  if (v3 == v4)
  {
LABEL_13:
    double v11 = *a3 + -0.99;
  }
  else
  {
    int v5 = (double *)((char *)&unk_21261C0 + 16 * v3 + 8);
    uint64_t v6 = 16 * v4 - 16 * v3;
    while (1)
    {
      int v7 = *((_DWORD *)v5 - 2);
      if (v7 == 50331648 || v7 == *(_DWORD *)result)
      {
        int v9 = *((_DWORD *)v5 - 1);
        if (v9 == 50331648 || v9 == *a2) {
          break;
        }
      }
      v5 += 2;
      v6 -= 16;
      if (!v6) {
        goto LABEL_13;
      }
    }
    double v11 = *a3 - *v5;
  }
  *a3 = v11;
  return result;
}

int *sub_11376DC(int *result, int *a2, double *a3)
{
  uint64_t v3 = qword_21282A0[*(unsigned char *)result & 0x7F];
  uint64_t v4 = qword_21282A0[(*(unsigned char *)result + 1) & 0x7F];
  int v5 = *result;
  if (v3 == v4)
  {
    uint64_t v6 = *((void *)result + 1);
    int v7 = *a2;
    uint64_t v8 = *((void *)a2 + 1);
LABEL_22:
    uint64_t v18 = 0;
    while (1)
    {
      int v19 = *(_DWORD *)((char *)&unk_2127C60 + v18 + 1000);
      if (v19 == 50331648 || v19 == v5)
      {
        uint64_t v21 = *(void *)((char *)&unk_2127C60 + v18 + 1008);
        if (v21 == 0x700000000000000 || v21 == v6)
        {
          int v23 = *(_DWORD *)((char *)&unk_2127C60 + v18 + 1016);
          if (v23 == 50331648 || v23 == v7)
          {
            uint64_t v25 = *(void *)((char *)&unk_2127C60 + v18 + 1024);
            if (v25 == 0x700000000000000 || v25 == v8) {
              break;
            }
          }
        }
      }
      v18 += 40;
      if (v18 == 600)
      {
        double v26 = *a3 + -0.2;
        goto LABEL_42;
      }
    }
    double v27 = *(double *)((char *)&unk_2127C60 + v18 + 1032);
  }
  else
  {
    uint64_t v6 = *((void *)result + 1);
    int v7 = *a2;
    uint64_t v8 = *((void *)a2 + 1);
    uint64_t v9 = 5 * v3;
    double v10 = (char *)&unk_2127C60 + 40 * v3 + 16;
    uint64_t v11 = 40 * v4 - 8 * v9;
    while (1)
    {
      int v12 = *((_DWORD *)v10 - 4);
      if (v12 == 50331648 || v12 == v5)
      {
        uint64_t v14 = *((void *)v10 - 1);
        if ((v14 == 0x700000000000000 || v14 == v6) && (*(_DWORD *)v10 == 50331648 || *(_DWORD *)v10 == v7))
        {
          uint64_t v17 = *((void *)v10 + 1);
          if (v17 == 0x700000000000000 || v17 == v8) {
            break;
          }
        }
      }
      v10 += 40;
      v11 -= 40;
      if (!v11) {
        goto LABEL_22;
      }
    }
    double v27 = *((double *)v10 + 2);
  }
  double v26 = *a3 - v27;
LABEL_42:
  *a3 = v26;
  return result;
}

uint64_t sub_1137834(int *a1, int *a2, double *a3)
{
  uint64_t v3 = qword_2128F10[*(unsigned char *)a1 & 0x7F];
  uint64_t v4 = qword_2128F10[(*(unsigned char *)a1 + 1) & 0x7F];
  int v5 = *a1;
  if (v3 == v4)
  {
    uint64_t v6 = *((void *)a1 + 1);
    int v7 = a1[1];
    uint64_t v8 = *((void *)a2 + 1);
    int v9 = *a2;
    int v10 = a2[1];
LABEL_26:
    uint64_t v23 = 0;
    while (1)
    {
      uint64_t result = (uint64_t)&unk_21286A0 + v23;
      int v24 = *(_DWORD *)((char *)&unk_21286A0 + v23 + 1560);
      if (v24 == 50331648 || v24 == v5)
      {
        uint64_t result = *(void *)(result + 1568);
        if (result == 0x700000000000000 || result == v6)
        {
          uint64_t result = (uint64_t)&unk_21286A0 + v23;
          int v27 = *(_DWORD *)((char *)&unk_21286A0 + v23 + 1564);
          if (v27 == 50331648 || v27 == v7)
          {
            uint64_t result = *(unsigned int *)(result + 1576);
            if (result == 50331648 || result == v9)
            {
              uint64_t result = (uint64_t)&unk_21286A0 + v23;
              uint64_t v29 = *(void *)((char *)&unk_21286A0 + v23 + 1584);
              if (v29 == 0x700000000000000 || v29 == v8)
              {
                uint64_t result = *(unsigned int *)(result + 1580);
                if (result == 50331648 || result == v10) {
                  break;
                }
              }
            }
          }
        }
      }
      v23 += 40;
      if (v23 == 600)
      {
        double v30 = *a3 + -0.4;
        goto LABEL_50;
      }
    }
    double v31 = *(double *)((char *)&unk_21286A0 + v23 + 1592);
  }
  else
  {
    uint64_t v6 = *((void *)a1 + 1);
    int v7 = a1[1];
    uint64_t v8 = *((void *)a2 + 1);
    int v9 = *a2;
    int v10 = a2[1];
    uint64_t v11 = 5 * v3;
    int v12 = (char *)&unk_21286A0 + 40 * v3 + 16;
    uint64_t v13 = 40 * v4 - 8 * v11;
    uint64_t result = 0x700000000000000;
    while (1)
    {
      int v15 = *((_DWORD *)v12 - 4);
      if (v15 == 50331648 || v15 == v5)
      {
        uint64_t v17 = *((void *)v12 - 1);
        if (v17 == 0x700000000000000 || v17 == v6)
        {
          int v19 = *((_DWORD *)v12 - 3);
          BOOL v20 = v19 == 50331648 || v19 == v7;
          if (v20 && (*(_DWORD *)v12 == 50331648 || *(_DWORD *)v12 == v9))
          {
            uint64_t v21 = *((void *)v12 + 1);
            if (v21 == 0x700000000000000 || v21 == v8)
            {
              int v22 = *((_DWORD *)v12 + 1);
              if (v22 == 50331648 || v22 == v10) {
                break;
              }
            }
          }
        }
      }
      v12 += 40;
      v13 -= 40;
      if (!v13) {
        goto LABEL_26;
      }
    }
    double v31 = *((double *)v12 + 2);
  }
  double v30 = *a3 - v31;
LABEL_50:
  *a3 = v30;
  return result;
}

void sub_11379E8(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 4;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 16 * a2;
    }
  }
  else
  {
    sub_1137AA4((void **)a1, a2 - v2);
  }
}

uint64_t sub_1137A18(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F8218, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_24F8218))
  {
    nullsub_1(&unk_24F8210);
    __cxa_guard_release(&qword_24F8218);
  }
  return sub_112FB7C((uint64_t)&unk_24F8210, a1);
}

void sub_1137A84(void *a1)
{
}

void sub_1137AA4(void **a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  int v5 = v6;
  int v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 4)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 16 * a2);
      v7 += 16 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 4);
    if (v9 >> 60) {
      sub_2E00();
    }
    uint64_t v10 = v8 >> 4;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 3 > v9) {
      unint64_t v9 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      uint64_t v13 = (char *)sub_1121C00(v4, v12);
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v14 = &v13[16 * v10];
    int v15 = &v13[16 * v12];
    bzero(v14, 16 * a2);
    uint64_t v16 = &v14[16 * a2];
    uint64_t v18 = (char *)*a1;
    uint64_t v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        *((_OWORD *)v14 - 1) = *((_OWORD *)v17 - 1);
        v14 -= 16;
        v17 -= 16;
      }
      while (v17 != v18);
      uint64_t v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
    {
      operator delete(v17);
    }
  }
}

void sub_1137BC4(__n128 *a1, __n128 *a2, uint64_t a3, uint64_t a4, char a5)
{
uint64_t sub_1137FB8(uint64_t result, void *a2)
{
  if ((void *)result != a2)
  {
    unint64_t v2 = (void *)(result + 16);
    if ((void *)(result + 16) != a2)
    {
      uint64_t v3 = 0;
      uint64_t v4 = (void *)result;
      do
      {
        double v5 = *((double *)v4 + 3);
        double v6 = *((double *)v4 + 1);
        uint64_t v4 = v2;
        if (v5 > v6)
        {
          uint64_t v7 = *v2;
          uint64_t v8 = v3;
          while (1)
          {
            *(_OWORD *)(result + v8 + 16) = *(_OWORD *)(result + v8);
            if (!v8) {
              break;
            }
            double v9 = *(double *)(result + v8 - 8);
            v8 -= 16;
            if (v5 <= v9)
            {
              uint64_t v10 = result + v8 + 16;
              goto LABEL_10;
            }
          }
          uint64_t v10 = result;
LABEL_10:
          *(void *)uint64_t v10 = v7;
          *(double *)(v10 + 8) = v5;
        }
        unint64_t v2 = v4 + 2;
        v3 += 16;
      }
      while (v4 + 2 != a2);
    }
  }
  return result;
}

uint64_t sub_113803C(double *a1, double *a2, double *a3)
{
  double v3 = a2[1];
  double v4 = a3[1];
  if (v3 > a1[1])
  {
    if (v4 > v3)
    {
      long long v5 = *(_OWORD *)a1;
      *(_OWORD *)a1 = *(_OWORD *)a3;
      *(_OWORD *)a3 = v5;
      return 1;
    }
    long long v8 = *(_OWORD *)a1;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)a2 = v8;
    if (a3[1] <= a2[1]) {
      return 1;
    }
    long long v9 = *(_OWORD *)a2;
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *(_OWORD *)a3 = v9;
    return 2;
  }
  if (v4 > v3)
  {
    long long v6 = *(_OWORD *)a2;
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *(_OWORD *)a3 = v6;
    if (a2[1] <= a1[1]) {
      return 1;
    }
    long long v7 = *(_OWORD *)a1;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)a2 = v7;
    return 2;
  }
  return 0;
}

unint64_t sub_11380F8(double *a1, double *a2)
{
  double v2 = a1[1];
  if (v2 <= *(a2 - 1))
  {
    unint64_t v6 = (unint64_t)(a1 + 2);
    do
    {
      unint64_t v4 = v6;
      if (v6 >= (unint64_t)a2) {
        break;
      }
      double v7 = *(double *)(v6 + 8);
      v6 += 16;
    }
    while (v2 <= v7);
  }
  else
  {
    double v3 = a1;
    do
    {
      unint64_t v4 = (unint64_t)(v3 + 2);
      double v5 = v3[3];
      v3 += 2;
    }
    while (v2 <= v5);
  }
  if (v4 >= (unint64_t)a2)
  {
    long long v8 = a2;
  }
  else
  {
    do
    {
      long long v8 = a2 - 2;
      double v9 = *(a2 - 1);
      a2 -= 2;
    }
    while (v2 > v9);
  }
  double v10 = *a1;
  while (v4 < (unint64_t)v8)
  {
    long long v14 = *(_OWORD *)v4;
    *(_OWORD *)unint64_t v4 = *(_OWORD *)v8;
    *(_OWORD *)long long v8 = v14;
    do
    {
      double v11 = *(double *)(v4 + 24);
      v4 += 16;
    }
    while (v2 <= v11);
    do
    {
      double v12 = *(v8 - 1);
      v8 -= 2;
    }
    while (v2 > v12);
  }
  if ((double *)(v4 - 16) != a1) {
    *(_OWORD *)a1 = *(_OWORD *)(v4 - 16);
  }
  *(double *)(v4 - 16) = v10;
  *(double *)(v4 - 8) = v2;
  return v4;
}

unint64_t sub_11381DC(double *a1, double *a2)
{
  uint64_t v2 = 0;
  double v3 = *a1;
  double v4 = a1[1];
  do
  {
    double v5 = a1[v2 + 3];
    v2 += 2;
  }
  while (v5 > v4);
  unint64_t v6 = (unint64_t)&a1[v2];
  if (v2 == 2)
  {
    while (v6 < (unint64_t)a2)
    {
      double v7 = a2 - 2;
      double v9 = *(a2 - 1);
      a2 -= 2;
      if (v9 > v4) {
        goto LABEL_9;
      }
    }
    double v7 = a2;
  }
  else
  {
    do
    {
      double v7 = a2 - 2;
      double v8 = *(a2 - 1);
      a2 -= 2;
    }
    while (v8 <= v4);
  }
LABEL_9:
  unint64_t v10 = (unint64_t)&a1[v2];
  if (v6 < (unint64_t)v7)
  {
    double v11 = v7;
    do
    {
      long long v12 = *(_OWORD *)v10;
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
      *(_OWORD *)double v11 = v12;
      do
      {
        double v13 = *(double *)(v10 + 24);
        v10 += 16;
      }
      while (v13 > v4);
      do
      {
        double v14 = *(v11 - 1);
        v11 -= 2;
      }
      while (v14 <= v4);
    }
    while (v10 < (unint64_t)v11);
  }
  if ((double *)(v10 - 16) != a1) {
    *(_OWORD *)a1 = *(_OWORD *)(v10 - 16);
  }
  *(double *)(v10 - 16) = v3;
  *(double *)(v10 - 8) = v4;
  return v10 - 16;
}

BOOL sub_11382C0(__n128 *a1, __n128 *a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (a2[-1].n128_f64[1] > a1->n128_f64[1])
      {
        __n128 v6 = *a1;
        *a1 = a2[-1];
        a2[-1] = v6;
      }
      return result;
    case 3:
      sub_113803C(a1->n128_f64, a1[1].n128_f64, a2[-1].n128_f64);
      return 1;
    case 4:
      sub_1138470(a1->n128_f64, (uint64_t)&a1[1], (uint64_t)&a1[2], (uint64_t)&a2[-1]);
      return 1;
    case 5:
      sub_1138514(a1->n128_f64, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      double v7 = a1 + 2;
      sub_113803C(a1->n128_f64, a1[1].n128_f64, a1[2].n128_f64);
      double v8 = a1 + 3;
      if (&a1[3] == a2) {
        return 1;
      }
      uint64_t v9 = 0;
      int v10 = 0;
      break;
  }
  while (1)
  {
    double v11 = v8->n128_f64[1];
    if (v11 > v7->n128_f64[1])
    {
      unint64_t v12 = v8->n128_u64[0];
      uint64_t v13 = v9;
      while (1)
      {
        *(__n128 *)((char *)a1 + v13 + 48) = *(__n128 *)((char *)a1 + v13 + 32);
        if (v13 == -32) {
          break;
        }
        double v14 = *(double *)((char *)&a1[1].n128_f64[1] + v13);
        v13 -= 16;
        if (v11 <= v14)
        {
          uint64_t v15 = (uint64_t)&a1[3] + v13;
          goto LABEL_12;
        }
      }
      uint64_t v15 = (uint64_t)a1;
LABEL_12:
      *(void *)uint64_t v15 = v12;
      *(double *)(v15 + 8) = v11;
      if (++v10 == 8) {
        return &v8[1] == a2;
      }
    }
    double v7 = v8;
    v9 += 16;
    if (++v8 == a2) {
      return 1;
    }
  }
}

__n128 sub_1138470(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_113803C(a1, (double *)a2, (double *)a3);
  result.n128_u64[0] = *(void *)(a4 + 8);
  if (result.n128_f64[0] > *(double *)(a3 + 8))
  {
    __n128 result = *(__n128 *)a3;
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(__n128 *)a4 = result;
    result.n128_u64[0] = *(void *)(a3 + 8);
    if (result.n128_f64[0] > *(double *)(a2 + 8))
    {
      __n128 result = *(__n128 *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(__n128 *)a3 = result;
      result.n128_u64[0] = *(void *)(a2 + 8);
      if (result.n128_f64[0] > a1[1])
      {
        __n128 result = *(__n128 *)a1;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(__n128 *)a2 = result;
      }
    }
  }
  return result;
}

__n128 sub_1138514(double *a1, __n128 *a2, __n128 *a3, __n128 *a4, __n128 *a5)
{
  sub_1138470(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)a4);
  result.n128_u64[0] = a5->n128_u64[1];
  if (result.n128_f64[0] > a4->n128_f64[1])
  {
    __n128 result = *a4;
    *a4 = *a5;
    *a5 = result;
    result.n128_u64[0] = a4->n128_u64[1];
    if (result.n128_f64[0] > a3->n128_f64[1])
    {
      __n128 result = *a3;
      *a3 = *a4;
      *a4 = result;
      result.n128_u64[0] = a3->n128_u64[1];
      if (result.n128_f64[0] > a2->n128_f64[1])
      {
        __n128 result = *a2;
        *a2 = *a3;
        *a3 = result;
        result.n128_u64[0] = a2->n128_u64[1];
        if (result.n128_f64[0] > a1[1])
        {
          __n128 result = *(__n128 *)a1;
          *(__n128 *)a1 = *a2;
          *a2 = result;
        }
      }
    }
  }
  return result;
}

double *sub_11385E4(double *a1, double *a2, double *a3, uint64_t a4)
{
  if (a1 != a2)
  {
    __n128 v6 = a2;
    uint64_t v8 = (char *)a2 - (char *)a1;
    uint64_t v9 = ((char *)a2 - (char *)a1) >> 4;
    if ((char *)a2 - (char *)a1 >= 17)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      unint64_t v12 = &a1[2 * v10];
      do
      {
        sub_1138798((uint64_t)a1, a4, v9, v12);
        v12 -= 2;
        --v11;
      }
      while (v11);
    }
    uint64_t v13 = v6;
    if (v6 != a3)
    {
      double v14 = v6;
      do
      {
        if (v14[1] > a1[1])
        {
          long long v15 = *(_OWORD *)v14;
          *(_OWORD *)double v14 = *(_OWORD *)a1;
          *(_OWORD *)a1 = v15;
          sub_1138798((uint64_t)a1, a4, v9, a1);
        }
        v14 += 2;
      }
      while (v14 != a3);
      uint64_t v13 = a3;
    }
    if (v8 >= 17)
    {
      uint64_t v16 = (unint64_t)v8 >> 4;
      do
      {
        uint64_t v17 = 0;
        long long v24 = *(_OWORD *)a1;
        uint64_t v18 = a1;
        do
        {
          char v19 = v18;
          v18 += 2 * v17 + 2;
          uint64_t v20 = 2 * v17;
          uint64_t v17 = (2 * v17) | 1;
          uint64_t v21 = v20 + 2;
          if (v21 < v16 && v18[1] > v18[3])
          {
            v18 += 2;
            uint64_t v17 = v21;
          }
          *(_OWORD *)char v19 = *(_OWORD *)v18;
        }
        while (v17 <= (uint64_t)((unint64_t)(v16 - 2) >> 1));
        v6 -= 2;
        if (v18 == v6)
        {
          *(_OWORD *)uint64_t v18 = v24;
        }
        else
        {
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v6;
          *(_OWORD *)__n128 v6 = v24;
          sub_113885C((uint64_t)a1, (uint64_t)(v18 + 2), a4, ((char *)(v18 + 2) - (char *)a1) >> 4);
        }
      }
      while (v16-- > 2);
    }
    return v13;
  }
  return a3;
}

uint64_t sub_1138798(uint64_t result, uint64_t a2, uint64_t a3, double *a4)
{
  if (a3 >= 2)
  {
    uint64_t v4 = (uint64_t)a4 - result;
    int64_t v5 = (unint64_t)(a3 - 2) >> 1;
    if (v5 >= ((uint64_t)a4 - result) >> 4)
    {
      uint64_t v6 = v4 >> 3;
      uint64_t v7 = (v4 >> 3) + 1;
      uint64_t v8 = (double *)(result + 16 * v7);
      uint64_t v9 = v6 + 2;
      if (v9 < a3 && v8[1] > v8[3])
      {
        v8 += 2;
        uint64_t v7 = v9;
      }
      double v10 = a4[1];
      if (v8[1] <= v10)
      {
        double v11 = *a4;
        do
        {
          unint64_t v12 = a4;
          a4 = v8;
          *(_OWORD *)unint64_t v12 = *(_OWORD *)v8;
          if (v5 < v7) {
            break;
          }
          uint64_t v13 = 2 * v7;
          uint64_t v7 = (2 * v7) | 1;
          uint64_t v8 = (double *)(result + 16 * v7);
          uint64_t v14 = v13 + 2;
          if (v14 < a3 && v8[1] > v8[3])
          {
            v8 += 2;
            uint64_t v7 = v14;
          }
        }
        while (v8[1] <= v10);
        *a4 = v11;
        a4[1] = v10;
      }
    }
  }
  return result;
}

uint64_t sub_113885C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 >= 2)
  {
    unint64_t v4 = (unint64_t)(a4 - 2) >> 1;
    double v5 = *(double *)(a2 - 8);
    if (*(double *)(result + 16 * v4 + 8) > v5)
    {
      uint64_t v8 = *(void *)(a2 - 16);
      uint64_t v6 = a2 - 16;
      uint64_t v7 = v8;
      do
      {
        uint64_t v9 = (_OWORD *)v6;
        uint64_t v6 = result + 16 * v4;
        *uint64_t v9 = *(_OWORD *)v6;
        if (!v4) {
          break;
        }
        unint64_t v4 = (v4 - 1) >> 1;
      }
      while (*(double *)(result + 16 * v4 + 8) > v5);
      *(void *)uint64_t v6 = v7;
      *(double *)(v6 + 8) = v5;
    }
  }
  return result;
}

void sub_11388B8()
{
  exception = __cxa_allocate_exception(8uLL);
}

void sub_1138908(uint64_t **a1, uint64_t *a2)
{
}

void sub_1138910(uint64_t **a1, unsigned __int8 **a2)
{
}

void sub_1138918(uint64_t *a1, uint64_t **a2)
{
}

void sub_1138920(uint64_t **a1, unsigned int **a2)
{
}

void sub_1138928(uint64_t **a1, unsigned int **a2)
{
}

void sub_1138930(uint64_t **a1, char ***a2)
{
}

void sub_1138938(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      sub_1138AB0(v19, v2);
      double v5 = (void **)a1[1];
      uint64_t v6 = (_OWORD *)sub_11301A4(*a1, (unsigned __int8 *)v19);
      unint64_t v7 = (unint64_t)v5[2];
      uint64_t v8 = v5[1];
      if ((unint64_t)v8 >= v7)
      {
        uint64_t v10 = ((char *)v8 - (unsigned char *)*v5) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v12 = v7 - (void)*v5;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13) {
          uint64_t v14 = (char *)sub_1121C00((uint64_t)(v5 + 2), v13);
        }
        else {
          uint64_t v14 = 0;
        }
        long long v15 = &v14[16 * v10];
        *(_OWORD *)long long v15 = *v6;
        uint64_t v17 = (char *)*v5;
        uint64_t v16 = (char *)v5[1];
        uint64_t v18 = v15;
        if (v16 != *v5)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v16 - 1);
            v18 -= 16;
            v16 -= 16;
          }
          while (v16 != v17);
          uint64_t v16 = (char *)*v5;
        }
        uint64_t v9 = v15 + 16;
        *double v5 = v18;
        v5[1] = v15 + 16;
        v5[2] = &v14[16 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *uint64_t v8 = *v6;
        uint64_t v9 = v8 + 1;
      }
      v5[1] = v9;
      v2 += 24;
    }
    while (v2 != v3);
  }
}

_OWORD *sub_1138AB0(_OWORD *a1, uint64_t a2)
{
  unint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  int v4 = (char)v3;
  if ((v3 & 0x80u) != 0) {
    unint64_t v3 = *(void *)(a2 + 8);
  }
  if (v3 >= 0x1F) {
    unint64_t v3 = 31;
  }
  if (v3)
  {
    if (v4 >= 0) {
      double v5 = (unsigned __int8 *)a2;
    }
    else {
      double v5 = *(unsigned __int8 **)a2;
    }
    sub_1123148(v5, v3, (uint64_t)a1);
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return a1;
}

void sub_1138B20(uint64_t *a1, unsigned __int8 **a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      double v5 = (void **)a1[1];
      uint64_t v6 = (_OWORD *)sub_11301A4(*a1, v2);
      unint64_t v7 = v5[1];
      unint64_t v8 = (unint64_t)v5[2];
      if ((unint64_t)v7 >= v8)
      {
        uint64_t v10 = ((char *)v7 - (unsigned char *)*v5) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v12 = v8 - (void)*v5;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13) {
          uint64_t v14 = (char *)sub_1121C00((uint64_t)(v5 + 2), v13);
        }
        else {
          uint64_t v14 = 0;
        }
        long long v15 = &v14[16 * v10];
        *(_OWORD *)long long v15 = *v6;
        uint64_t v17 = (char *)*v5;
        uint64_t v16 = (char *)v5[1];
        uint64_t v18 = v15;
        if (v16 != *v5)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v16 - 1);
            v18 -= 16;
            v16 -= 16;
          }
          while (v16 != v17);
          uint64_t v16 = (char *)*v5;
        }
        uint64_t v9 = v15 + 16;
        *double v5 = v18;
        v5[1] = v15 + 16;
        v5[2] = &v14[16 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *unint64_t v7 = *v6;
        uint64_t v9 = v7 + 1;
      }
      v5[1] = v9;
      v2 += 48;
    }
    while (v2 != v3);
  }
}

void sub_1138C50(uint64_t a1, uint64_t **a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      double v5 = *(void ***)(a1 + 8);
      uint64_t v6 = *v2;
      uint64_t v7 = sub_1133780(*v2);
      unint64_t v8 = (uint64_t *)v5[1];
      unint64_t v9 = (unint64_t)v5[2];
      if ((unint64_t)v8 >= v9)
      {
        uint64_t v11 = ((char *)v8 - (unsigned char *)*v5) >> 4;
        unint64_t v12 = v11 + 1;
        if ((unint64_t)(v11 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v13 = v9 - (void)*v5;
        if (v13 >> 3 > v12) {
          unint64_t v12 = v13 >> 3;
        }
        if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v14 = v12;
        }
        uint64_t v16 = (char *)sub_1121C00((uint64_t)(v5 + 2), v14);
        uint64_t v17 = (uint64_t *)&v16[16 * v11];
        *uint64_t v17 = v6;
        v17[1] = v7;
        char v19 = (char *)*v5;
        uint64_t v18 = (char *)v5[1];
        uint64_t v20 = v17;
        if (v18 != *v5)
        {
          do
          {
            *((_OWORD *)v20 - 1) = *((_OWORD *)v18 - 1);
            v20 -= 2;
            v18 -= 16;
          }
          while (v18 != v19);
          uint64_t v18 = (char *)*v5;
        }
        uint64_t v10 = v17 + 2;
        *double v5 = v20;
        v5[1] = v17 + 2;
        v5[2] = &v16[16 * v15];
        if (v18) {
          operator delete(v18);
        }
      }
      else
      {
        *unint64_t v8 = v6;
        v8[1] = v7;
        uint64_t v10 = v8 + 2;
      }
      v5[1] = v10;
      ++v2;
    }
    while (v2 != v3);
  }
}

void sub_1138D78(uint64_t *a1, unsigned int **a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      double v5 = (void **)a1[1];
      uint64_t v6 = sub_11303A4(*a1, *v2);
      uint64_t v7 = v5[1];
      unint64_t v8 = (unint64_t)v5[2];
      if ((unint64_t)v7 >= v8)
      {
        uint64_t v10 = ((char *)v7 - (unsigned char *)*v5) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v12 = v8 - (void)*v5;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13) {
          unint64_t v14 = (char *)sub_1121C00((uint64_t)(v5 + 2), v13);
        }
        else {
          unint64_t v14 = 0;
        }
        uint64_t v15 = &v14[16 * v10];
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v6;
        uint64_t v17 = (char *)*v5;
        uint64_t v16 = (char *)v5[1];
        uint64_t v18 = v15;
        if (v16 != *v5)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v16 - 1);
            v18 -= 16;
            v16 -= 16;
          }
          while (v16 != v17);
          uint64_t v16 = (char *)*v5;
        }
        unint64_t v9 = v15 + 16;
        *double v5 = v18;
        v5[1] = v15 + 16;
        v5[2] = &v14[16 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *uint64_t v7 = *(_OWORD *)v6;
        unint64_t v9 = v7 + 1;
      }
      v5[1] = v9;
      ++v2;
    }
    while (v2 != v3);
  }
}

void sub_1138EA8(uint64_t *a1, unsigned int **a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      double v5 = (void **)a1[1];
      uint64_t v6 = sub_11304A4(*a1, *v2);
      uint64_t v7 = v5[1];
      unint64_t v8 = (unint64_t)v5[2];
      if ((unint64_t)v7 >= v8)
      {
        uint64_t v10 = ((char *)v7 - (unsigned char *)*v5) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v12 = v8 - (void)*v5;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13) {
          unint64_t v14 = (char *)sub_1121C00((uint64_t)(v5 + 2), v13);
        }
        else {
          unint64_t v14 = 0;
        }
        uint64_t v15 = &v14[16 * v10];
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v6;
        uint64_t v17 = (char *)*v5;
        uint64_t v16 = (char *)v5[1];
        uint64_t v18 = v15;
        if (v16 != *v5)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v16 - 1);
            v18 -= 16;
            v16 -= 16;
          }
          while (v16 != v17);
          uint64_t v16 = (char *)*v5;
        }
        unint64_t v9 = v15 + 16;
        *double v5 = v18;
        v5[1] = v15 + 16;
        v5[2] = &v14[16 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *uint64_t v7 = *(_OWORD *)v6;
        unint64_t v9 = v7 + 1;
      }
      v5[1] = v9;
      ++v2;
    }
    while (v2 != v3);
  }
}

void sub_1138FD8(uint64_t *a1, char ***a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      sub_1123180(v19, *v2);
      double v5 = (void **)a1[1];
      uint64_t v6 = (_OWORD *)sub_11301A4(*a1, (unsigned __int8 *)v19);
      unint64_t v7 = (unint64_t)v5[2];
      unint64_t v8 = v5[1];
      if ((unint64_t)v8 >= v7)
      {
        uint64_t v10 = ((char *)v8 - (unsigned char *)*v5) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v12 = v7 - (void)*v5;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13) {
          unint64_t v14 = (char *)sub_1121C00((uint64_t)(v5 + 2), v13);
        }
        else {
          unint64_t v14 = 0;
        }
        uint64_t v15 = &v14[16 * v10];
        *(_OWORD *)uint64_t v15 = *v6;
        uint64_t v17 = (char *)*v5;
        uint64_t v16 = (char *)v5[1];
        uint64_t v18 = v15;
        if (v16 != *v5)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v16 - 1);
            v18 -= 16;
            v16 -= 16;
          }
          while (v16 != v17);
          uint64_t v16 = (char *)*v5;
        }
        unint64_t v9 = v15 + 16;
        *double v5 = v18;
        v5[1] = v15 + 16;
        v5[2] = &v14[16 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *unint64_t v8 = *v6;
        unint64_t v9 = v8 + 1;
      }
      v5[1] = v9;
      ++v2;
    }
    while (v2 != v3);
  }
}

void sub_1139150(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 4;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 16 * a2;
    }
  }
  else
  {
    sub_1139180((void **)a1, a2 - v2);
  }
}

void sub_1139180(void **a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  double v5 = v6;
  unint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 4)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 16 * a2);
      v7 += 16 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 4);
    if (v9 >> 60) {
      sub_2E00();
    }
    uint64_t v10 = v8 >> 4;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 3 > v9) {
      unint64_t v9 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      unint64_t v13 = (char *)sub_1121C00(v4, v12);
    }
    else {
      unint64_t v13 = 0;
    }
    unint64_t v14 = &v13[16 * v10];
    uint64_t v15 = &v13[16 * v12];
    bzero(v14, 16 * a2);
    uint64_t v16 = &v14[16 * a2];
    uint64_t v18 = (char *)*a1;
    uint64_t v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        *((_OWORD *)v14 - 1) = *((_OWORD *)v17 - 1);
        v14 -= 16;
        v17 -= 16;
      }
      while (v17 != v18);
      uint64_t v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
    {
      operator delete(v17);
    }
  }
}

unint64_t sub_11392A0(uint64_t **a1, void *a2, unsigned int **a3, int *a4)
{
  uint64_t v4 = 0x1FFFFFFFFLL;
  if (a2[1] != *a2)
  {
    unsigned int v9 = 0;
    char v8 = 0;
    uint64_t v6 = sub_1139314(a1, (uint64_t)a2, a3, &v9, a4, &v8, 1u);
    if ((uint64_t *)a2[1] != v6) {
      return (((unint64_t)v6 - *a2) >> 4) | ((unint64_t)v9 << 32);
    }
  }
  return v4;
}

uint64_t *sub_1139314(uint64_t **a1, uint64_t a2, unsigned int **a3, _DWORD *a4, int *a5, unsigned char *a6, unsigned int a7)
{
  v53 = 0;
  v54 = 0;
  v55 = 0;
  __p = 0;
  v51 = 0;
  uint64_t v52 = 0;
  sub_1139150((uint64_t)&v53, 0);
  sub_113962C((uint64_t)&__p, 0);
  sub_113965C(&v53, a3[1] - *a3);
  sub_113196C(&__p, a3[1] - *a3);
  unint64_t v44 = a6;
  unsigned int v45 = a7;
  uint64_t v10 = *a3;
  uint64_t v11 = a3[1];
  if (*a3 != v11)
  {
    unint64_t v12 = *(uint64_t **)a2;
    uint64_t v13 = (*(void *)(a2 + 8) - *(void *)a2) >> 4;
    do
    {
      uint64_t v14 = *v10;
      if ((v14 & 0x80000000) == 0 && (int)v14 < (int)v13)
      {
        uint64_t v15 = &v12[2 * v14];
        uint64_t v16 = v54;
        if (v54 >= v55)
        {
          uint64_t v18 = (v54 - (unsigned char *)v53) >> 4;
          unint64_t v19 = v18 + 1;
          if ((unint64_t)(v18 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v20 = v55 - (unsigned char *)v53;
          if ((v55 - (unsigned char *)v53) >> 3 > v19) {
            unint64_t v19 = v20 >> 3;
          }
          if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v21 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v21 = v19;
          }
          if (v21) {
            double v22 = (char *)sub_1121C00((uint64_t)&v55, v21);
          }
          else {
            double v22 = 0;
          }
          double v23 = &v22[16 * v18];
          *(_OWORD *)double v23 = *(_OWORD *)v15;
          uint64_t v25 = (char *)v53;
          long long v24 = v54;
          double v26 = v23;
          if (v54 != v53)
          {
            do
            {
              *((_OWORD *)v26 - 1) = *((_OWORD *)v24 - 1);
              v26 -= 16;
              v24 -= 16;
            }
            while (v24 != v25);
            long long v24 = (char *)v53;
          }
          uint64_t v17 = v23 + 16;
          v53 = v26;
          v54 = v23 + 16;
          v55 = &v22[16 * v21];
          if (v24) {
            operator delete(v24);
          }
        }
        else
        {
          *(_OWORD *)v54 = *(_OWORD *)v15;
          uint64_t v17 = v16 + 16;
        }
        v54 = v17;
        __n128 v27 = v51;
        if (v51 >= v52)
        {
          uint64_t v29 = (v51 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v29 + 1) >> 61) {
            sub_2E00();
          }
          unint64_t v30 = (v52 - (unsigned char *)__p) >> 2;
          if (v30 <= v29 + 1) {
            unint64_t v30 = v29 + 1;
          }
          if ((unint64_t)(v52 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v31 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v31 = v30;
          }
          if (v31) {
            uint64_t v32 = (char *)sub_1122DC0((uint64_t)&v52, v31);
          }
          else {
            uint64_t v32 = 0;
          }
          uint64_t v33 = (uint64_t **)&v32[8 * v29];
          *uint64_t v33 = v15;
          __n128 v28 = (char *)(v33 + 1);
          uint64_t v35 = (char *)__p;
          long long v34 = v51;
          if (v51 != __p)
          {
            do
            {
              uint64_t v36 = (uint64_t *)*((void *)v34 - 1);
              v34 -= 8;
              *--uint64_t v33 = v36;
            }
            while (v34 != v35);
            long long v34 = (char *)__p;
          }
          __p = v33;
          v51 = v28;
          uint64_t v52 = &v32[8 * v31];
          if (v34) {
            operator delete(v34);
          }
        }
        else
        {
          *(void *)v51 = v15;
          __n128 v28 = v27 + 8;
        }
        v51 = v28;
      }
      ++v10;
    }
    while (v10 != v11);
  }
  int v37 = v53;
  uint64_t v38 = (uint64_t *)v54;
  uint64_t v39 = sub_1136238(a1, (uint64_t **)&v53, a5);
  if (v38 != v39)
  {
    *a4 = 0;
    uint64_t v40 = (char *)v39 - v37;
    uint64_t v41 = (char *)__p;
    uint64_t v42 = *(uint64_t **)((char *)__p + (v40 >> 1));
LABEL_41:
    v51 = v41;
    operator delete(v41);
    goto LABEL_42;
  }
  uint64_t v42 = sub_1135E68(a1, (uint64_t **)a2, a4, (uint64_t)a5, v44, 1u, v45);
  *a4 = 1;
  uint64_t v41 = (char *)__p;
  if (__p) {
    goto LABEL_41;
  }
LABEL_42:
  if (v53)
  {
    v54 = (char *)v53;
    operator delete(v53);
  }
  return v42;
}

void sub_113962C(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    sub_1139710((void **)a1, a2 - v2);
  }
}

void sub_113965C(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 4)
  {
    if (a2 >> 60) {
      sub_2E00();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)sub_1121C00(v3, a2);
    unint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF0];
    unsigned int v9 = &v6[16 * v8];
    uint64_t v11 = (char *)*a1;
    uint64_t v10 = (char *)a1[1];
    unint64_t v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        *((_OWORD *)v12 - 1) = *((_OWORD *)v10 - 1);
        v12 -= 16;
        v10 -= 16;
      }
      while (v10 != v11);
      uint64_t v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_1139710(void **a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  int64_t v5 = v6;
  unint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 3);
    if (v9 >> 61) {
      sub_2E00();
    }
    uint64_t v10 = v8 >> 3;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 2 > v9) {
      unint64_t v9 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12)
    {
      uint64_t v13 = (char *)sub_1122DC0(v4, v12);
      unint64_t v7 = (char *)a1[1];
    }
    else
    {
      uint64_t v13 = 0;
    }
    uint64_t v14 = &v13[8 * v10];
    uint64_t v15 = &v13[8 * v12];
    bzero(v14, 8 * a2);
    uint64_t v16 = &v14[8 * a2];
    uint64_t v17 = (char *)*a1;
    if (v7 != *a1)
    {
      do
      {
        uint64_t v18 = *((void *)v7 - 1);
        v7 -= 8;
        *((void *)v14 - 1) = v18;
        v14 -= 8;
      }
      while (v7 != v17);
      unint64_t v7 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v7)
    {
      operator delete(v7);
    }
  }
}

void sub_1139838(uint64_t **a1@<X0>, void *a2@<X1>, long long *a3@<X2>, void **a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  uint64_t v5 = a2[1] - *a2;
  if (v5)
  {
    sub_113196C(a4, v5 >> 4);
    LODWORD(v66) = 50331648;
    *((void *)&v66 + 1) = 0;
    uint64_t v67 = -4294967282;
    if (a3)
    {
      long long v66 = *a3;
      uint64_t v67 = *((void *)a3 + 2);
      v56 = &v66;
    }
    else
    {
      v56 = 0;
    }
    v63 = 0;
    v64 = 0;
    v65 = 0;
    __p = 0;
    v61 = 0;
    v62 = 0;
    sub_1139150((uint64_t)&v63, 0);
    sub_113962C((uint64_t)&__p, 0);
    v55 = a3;
    uint64_t v8 = (_OWORD *)*a2;
    if (*a2 == a2[1])
    {
      unint64_t v30 = (_OWORD *)*a2;
    }
    else
    {
      do
      {
        unint64_t v9 = v64;
        if (v64 >= v65)
        {
          uint64_t v11 = (v64 - (unsigned char *)v63) >> 4;
          unint64_t v12 = v11 + 1;
          if ((unint64_t)(v11 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v13 = v65 - (unsigned char *)v63;
          if ((v65 - (unsigned char *)v63) >> 3 > v12) {
            unint64_t v12 = v13 >> 3;
          }
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v14 = v12;
          }
          if (v14) {
            uint64_t v15 = (char *)sub_1121C00((uint64_t)&v65, v14);
          }
          else {
            uint64_t v15 = 0;
          }
          uint64_t v16 = &v15[16 * v11];
          *(_OWORD *)uint64_t v16 = *v8;
          uint64_t v18 = (char *)v63;
          uint64_t v17 = v64;
          unint64_t v19 = v16;
          if (v64 != v63)
          {
            do
            {
              *((_OWORD *)v19 - 1) = *((_OWORD *)v17 - 1);
              v19 -= 16;
              v17 -= 16;
            }
            while (v17 != v18);
            uint64_t v17 = (char *)v63;
          }
          uint64_t v10 = v16 + 16;
          v63 = v19;
          v64 = v16 + 16;
          v65 = &v15[16 * v14];
          if (v17) {
            operator delete(v17);
          }
        }
        else
        {
          *(_OWORD *)v64 = *v8;
          uint64_t v10 = v9 + 16;
        }
        v64 = v10;
        uint64_t v20 = v61;
        if (v61 >= v62)
        {
          uint64_t v22 = (v61 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v22 + 1) >> 61) {
            sub_2E00();
          }
          unint64_t v23 = (v62 - (unsigned char *)__p) >> 2;
          if (v23 <= v22 + 1) {
            unint64_t v23 = v22 + 1;
          }
          if ((unint64_t)(v62 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v24 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v24 = v23;
          }
          if (v24) {
            uint64_t v25 = (char *)sub_1122DC0((uint64_t)&v62, v24);
          }
          else {
            uint64_t v25 = 0;
          }
          double v26 = &v25[8 * v22];
          *(void *)double v26 = v8;
          unint64_t v21 = v26 + 8;
          __n128 v28 = (char *)__p;
          __n128 v27 = v61;
          if (v61 != __p)
          {
            do
            {
              uint64_t v29 = *((void *)v27 - 1);
              v27 -= 8;
              *((void *)v26 - 1) = v29;
              v26 -= 8;
            }
            while (v27 != v28);
            __n128 v27 = (char *)__p;
          }
          __p = v26;
          v61 = v21;
          v62 = &v25[8 * v24];
          if (v27) {
            operator delete(v27);
          }
        }
        else
        {
          *(void *)v61 = v8;
          unint64_t v21 = v20 + 8;
        }
        v61 = v21;
        ++v8;
      }
      while (v8 != (_OWORD *)a2[1]);
      unint64_t v30 = (_OWORD *)*a2;
    }
    unsigned int v59 = 1;
    unsigned __int8 v58 = 1;
    if (((unsigned char *)a4[1] - (unsigned char *)*a4) >> 3 < (unint64_t)(v8 - v30))
    {
      do
      {
        unint64_t v31 = sub_1135E68(a1, (uint64_t **)&v63, &v59, (uint64_t)v56, &v58, v58, 1u);
        if (v64 == (char *)v31) {
          break;
        }
        uint64_t v32 = v31;
        uint64_t v33 = (char *)v31 - (unsigned char *)v63;
        unint64_t v34 = ((unint64_t)v59 << 32) | ((*(void *)((char *)__p
                                                                        + (((char *)v31 - (unsigned char *)v63) >> 1))
                                                            - *a2) >> 4);
        uint64_t v36 = (unint64_t *)a4[1];
        unint64_t v35 = (unint64_t)a4[2];
        if ((unint64_t)v36 >= v35)
        {
          uint64_t v38 = ((char *)v36 - (unsigned char *)*a4) >> 3;
          if ((unint64_t)(v38 + 1) >> 61) {
            sub_2E00();
          }
          uint64_t v39 = v35 - (void)*a4;
          uint64_t v40 = v39 >> 2;
          if (v39 >> 2 <= (unint64_t)(v38 + 1)) {
            uint64_t v40 = v38 + 1;
          }
          if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v41 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v41 = v40;
          }
          if (v41) {
            uint64_t v42 = (char *)sub_1122DC0((uint64_t)(a4 + 2), v41);
          }
          else {
            uint64_t v42 = 0;
          }
          uint64_t v43 = (unint64_t *)&v42[8 * v38];
          unint64_t *v43 = v34;
          int v37 = (char *)(v43 + 1);
          unsigned int v45 = (char *)*a4;
          unint64_t v44 = (char *)a4[1];
          if (v44 != *a4)
          {
            do
            {
              unint64_t v46 = *((void *)v44 - 1);
              v44 -= 8;
              *--uint64_t v43 = v46;
            }
            while (v44 != v45);
            unint64_t v44 = (char *)*a4;
          }
          *a4 = v43;
          a4[1] = v37;
          a4[2] = &v42[8 * v41];
          if (v44) {
            operator delete(v44);
          }
        }
        else
        {
          *uint64_t v36 = v34;
          int v37 = (char *)(v36 + 1);
        }
        a4[1] = v37;
        if (v55 && (v67 & 0x8000000000000000) == 0)
        {
          int v54 = -1;
          if (v58 != 3 && v58 != 12)
          {
            if (SHIDWORD(v67) <= (int)((unint64_t)((char *)v32 - (unsigned char *)v63) >> 4)) {
              goto LABEL_60;
            }
            int v54 = HIDWORD(v67) - 1;
          }
          HIDWORD(v67) = v54;
        }
LABEL_60:
        uint64_t v47 = v33 >> 4;
        uint64_t v48 = v64;
        unint64_t v49 = (char *)v63 + 16 * (v33 >> 4);
        for (uint64_t i = v49 + 16; i != v48; i += 16)
        {
          uint64_t v51 = *((void *)i + 1);
          *((void *)i - 2) = *(void *)i;
          *((void *)i - 1) = v51;
          v49 += 16;
        }
        v64 = v49;
        uint64_t v52 = (char *)__p + 8 * v47;
        int64_t v53 = v61 - (v52 + 8);
        if (v61 != v52 + 8)
        {
          memmove((char *)__p + 8 * v47, v52 + 8, v61 - (v52 + 8));
          int v37 = (char *)a4[1];
        }
        v61 = &v52[v53];
      }
      while ((v37 - (unsigned char *)*a4) >> 3 < (unint64_t)((uint64_t)(a2[1] - *a2) >> 4));
    }
    if (__p)
    {
      v61 = (char *)__p;
      operator delete(__p);
    }
    if (v63)
    {
      v64 = (char *)v63;
      operator delete(v63);
    }
  }
}

void sub_1139CE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  unint64_t v19 = *(void **)v17;
  if (*(void *)v17)
  {
    *(void *)(v17 + 8) = v19;
    operator delete(v19);
  }
  _Unwind_Resume(exception_object);
}

void sub_1139D3C()
{
}

uint64_t sub_1139D50()
{
  return 0;
}

uint64_t sub_1139D58()
{
  return 0;
}

uint64_t sub_1139D60()
{
  return 0;
}

unint64_t sub_1139D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1139E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1139E70(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1139F4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1139F7C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_113A060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_113A090(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_113A160(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113A1A8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_113A284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

unint64_t sub_113A2CC(uint64_t **a1, uint64_t **a2, int *a3, unsigned char *a4)
{
  uint64_t v4 = 0x1FFFFFFFFLL;
  if (a2[1] != *a2)
  {
    unsigned int v8 = 0;
    uint64_t v6 = sub_113A340(a1, a2, &v8, a3, a4, 1u, 1u);
    if (a2[1] != v6) {
      return ((unint64_t)((char *)v6 - (char *)*a2) >> 4) | ((unint64_t)v8 << 32);
    }
  }
  return v4;
}

uint64_t *sub_113A340(uint64_t **a1, uint64_t **a2, _DWORD *a3, int *a4, unsigned char *a5, unsigned int a6, unsigned int a7)
{
  unsigned int v7 = a7;
  unint64_t v9 = a4;
  if (a4) {
    int v11 = *a4;
  }
  else {
    int v11 = 50331648;
  }
  v79 = a2[1];
  v70 = *a2;
  int v80 = v11;
  *a5 = a6;
  if (a6 > a7)
  {
LABEL_5:
    *a3 = 1;
    *a5 = 0;
    return v79;
  }
  while (2)
  {
    switch((char)a6)
    {
      case 1:
        uint64_t v14 = (uint64_t)sub_113AB94(a1, a2, &v80);
        goto LABEL_116;
      case 2:
        uint64_t v14 = (uint64_t)sub_113AD0C(a1, a2, &v80);
        goto LABEL_116;
      case 3:
        if (!v9) {
          goto LABEL_118;
        }
        uint64_t v14 = sub_11365D8((uint64_t *)a1, a2, v9[5]);
        goto LABEL_116;
      case 4:
        if (!v9) {
          goto LABEL_118;
        }
        uint64_t v56 = *((void *)v9 + 1);
        if (!v56 || !*(void *)(v56 + 40)) {
          goto LABEL_118;
        }
        uint64_t v57 = sub_11341A4(v56);
        uint64_t v14 = sub_1136640((uint64_t *)a1, (uint64_t *)a2, v57);
        goto LABEL_116;
      case 5:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        uint64_t v38 = sub_11366B8(&v80);
        if ((v9[4] & 2) == 0) {
          goto LABEL_118;
        }
        uint64_t v39 = (uint64_t *)v38;
        uint64_t v40 = (uint64_t *)a1;
        unint64_t v41 = (uint64_t *)a2;
        int v42 = 2;
        goto LABEL_113;
      case 6:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        unsigned __int8 v58 = sub_11366B8(&v80);
        if ((v9[4] & 4) == 0) {
          goto LABEL_118;
        }
        uint64_t v39 = (uint64_t *)v58;
        uint64_t v40 = (uint64_t *)a1;
        unint64_t v41 = (uint64_t *)a2;
        int v42 = 4;
        goto LABEL_113;
      case 7:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        v69 = sub_11366B8(&v80);
        if ((v9[4] & 8) == 0) {
          goto LABEL_118;
        }
        uint64_t v39 = (uint64_t *)v69;
        uint64_t v40 = (uint64_t *)a1;
        unint64_t v41 = (uint64_t *)a2;
        int v42 = 8;
        goto LABEL_113;
      case 8:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        uint64_t v39 = (uint64_t *)sub_11366B8(&v80);
        uint64_t v40 = (uint64_t *)a1;
        unint64_t v41 = (uint64_t *)a2;
        int v42 = 15;
LABEL_113:
        uint64_t v14 = sub_113AECC(v40, v41, v39, v42);
LABEL_116:
        unint64_t v12 = (uint64_t *)v14;
        goto LABEL_117;
      case 9:
        uint64_t v14 = sub_1136940((uint64_t *)a1, (uint64_t *)a2);
        goto LABEL_116;
      case 10:
        uint64_t v14 = sub_1136B74((uint64_t *)a1, (uint64_t *)a2);
        goto LABEL_116;
      case 11:
        uint64_t v14 = sub_1136C24((uint64_t *)a1, (uint64_t *)a2);
        goto LABEL_116;
      case 12:
        if (!v9) {
          goto LABEL_118;
        }
        uint64_t v37 = v9[5];
        if ((v37 & 0x80000000) != 0 || (int)v37 >= (int)((unint64_t)((char *)a2[1] - (char *)*a2) >> 4)) {
          goto LABEL_118;
        }
        unint64_t v12 = &v70[2 * v37];
        goto LABEL_117;
      case 13:
        if (!v9) {
          goto LABEL_118;
        }
        uint64_t v43 = *((void *)v9 + 1);
        if (!v43 || !*(void *)(v43 + 40)) {
          goto LABEL_118;
        }
        uint64_t v44 = sub_11341A4(v43);
        unint64_t v12 = *a2;
        uint64_t v16 = a2[1];
        if (*a2 == v16) {
          goto LABEL_117;
        }
        while (1)
        {
          uint64_t v45 = v12[1];
          if (*(_DWORD *)v45 == *(_DWORD *)v44 && *(void *)(v45 + 8) == *(void *)(v44 + 8)) {
            goto LABEL_117;
          }
          v12 += 2;
          if (v12 == v16)
          {
LABEL_120:
            unint64_t v12 = v16;
            goto LABEL_117;
          }
        }
      case 14:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        unsigned int v59 = sub_11366B8(&v80);
        if ((v9[4] & 2) == 0) {
          goto LABEL_118;
        }
        uint64_t v16 = a2[1];
        v60 = (char *)*v59;
        v75 = (char *)v59[1];
        if (*v59 == v75) {
          goto LABEL_120;
        }
        double v61 = 0.0;
        v62 = a2[1];
        v63 = v62;
        while (2)
        {
          if ((v60[16] & 2) == 0) {
            goto LABEL_107;
          }
          unint64_t v12 = *a2;
          if (*a2 == v62)
          {
            v62 = v16;
            goto LABEL_106;
          }
          v64 = *(_DWORD **)v60;
          while (2)
          {
            v65 = (_DWORD *)v12[1];
            int v66 = **(_DWORD **)v60;
            if (v66 != *v65) {
              goto LABEL_103;
            }
            if (v66 != 16802154)
            {
              double v81 = 1.0;
              uint64_t v67 = sub_1133780((uint64_t)v64);
              uint64_t v68 = sub_1133780((uint64_t)v65);
              sub_1136E90((BOOL)v64, v67, (uint64_t)v65, v68, &v81);
              if (v81 > v61)
              {
                v63 = v12;
                double v61 = v81;
                if (v81 >= 1.0) {
                  goto LABEL_121;
                }
              }
LABEL_103:
              v12 += 2;
              uint64_t v16 = a2[1];
              v62 = v12;
              if (v12 == v16) {
                goto LABEL_106;
              }
              continue;
            }
            break;
          }
          double v61 = 100.0;
          v62 = v16;
          v63 = v12;
LABEL_106:
          unint64_t v12 = v63;
          uint64_t v16 = v62;
          v63 = v62;
          unsigned int v7 = a7;
          unint64_t v9 = a4;
          if (v12 == v62)
          {
LABEL_107:
            v60 += 24;
            unint64_t v12 = v63;
            if (v60 == v75) {
              break;
            }
            continue;
          }
          break;
        }
LABEL_117:
        if (v12 == v79)
        {
LABEL_118:
          LOBYTE(a6) = *a5 + 1;
          *a5 = a6;
          if (v7 < a6) {
            goto LABEL_5;
          }
          continue;
        }
        *a3 = *a5 > 9u;
        return v12;
      case 15:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        __n128 v27 = sub_11366B8(&v80);
        if ((v9[4] & 4) == 0) {
          goto LABEL_118;
        }
        uint64_t v16 = a2[1];
        __n128 v28 = (char *)*v27;
        v73 = (char *)v27[1];
        if (*v27 == v73) {
          goto LABEL_120;
        }
        double v29 = 0.0;
        unint64_t v30 = a2[1];
        unint64_t v31 = v30;
        while (1)
        {
          if ((v28[16] & 4) != 0)
          {
            unint64_t v12 = *a2;
            if (*a2 != v30)
            {
              uint64_t v32 = *(_DWORD **)v28;
              while (1)
              {
                uint64_t v33 = (_DWORD *)v12[1];
                int v34 = **(_DWORD **)v28;
                if (v34 == *v33)
                {
                  if (v34 == 16802154)
                  {
                    double v29 = 100.0;
                    unint64_t v30 = v16;
                    unint64_t v31 = v12;
                    goto LABEL_42;
                  }
                  double v81 = 1.0;
                  uint64_t v35 = sub_1133780((uint64_t)v32);
                  uint64_t v36 = sub_1133780((uint64_t)v33);
                  sub_1136E90((BOOL)v32, v35, (uint64_t)v33, v36, &v81);
                  if (v81 > v29)
                  {
                    unint64_t v31 = v12;
                    double v29 = v81;
                    if (v81 >= 1.0) {
                      goto LABEL_121;
                    }
                  }
                }
                v12 += 2;
                uint64_t v16 = a2[1];
                unint64_t v30 = v12;
                if (v12 == v16) {
                  goto LABEL_42;
                }
              }
            }
            unint64_t v30 = v16;
LABEL_42:
            unint64_t v12 = v31;
            uint64_t v16 = v30;
            unint64_t v31 = v30;
            unsigned int v7 = a7;
            unint64_t v9 = a4;
            if (v12 != v30) {
              goto LABEL_117;
            }
          }
          v28 += 24;
          unint64_t v12 = v31;
          if (v28 == v73) {
            goto LABEL_117;
          }
        }
      case 16:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        unint64_t v46 = sub_11366B8(&v80);
        if ((v9[4] & 8) == 0) {
          goto LABEL_118;
        }
        uint64_t v16 = a2[1];
        uint64_t v47 = (char *)*v46;
        v74 = (char *)v46[1];
        if (*v46 == v74) {
          goto LABEL_120;
        }
        double v48 = 0.0;
        unint64_t v49 = a2[1];
        v50 = v49;
        while (1)
        {
          if ((v47[16] & 8) != 0)
          {
            unint64_t v12 = *a2;
            if (*a2 != v49)
            {
              uint64_t v51 = *(_DWORD **)v47;
              while (1)
              {
                uint64_t v52 = (_DWORD *)v12[1];
                int v53 = **(_DWORD **)v47;
                if (v53 == *v52)
                {
                  if (v53 == 16802154)
                  {
                    double v48 = 100.0;
                    unint64_t v49 = v16;
                    v50 = v12;
                    goto LABEL_78;
                  }
                  double v81 = 1.0;
                  uint64_t v54 = sub_1133780((uint64_t)v51);
                  uint64_t v55 = sub_1133780((uint64_t)v52);
                  sub_1136E90((BOOL)v51, v54, (uint64_t)v52, v55, &v81);
                  if (v81 > v48)
                  {
                    v50 = v12;
                    double v48 = v81;
                    if (v81 >= 1.0) {
                      goto LABEL_121;
                    }
                  }
                }
                v12 += 2;
                uint64_t v16 = a2[1];
                unint64_t v49 = v12;
                if (v12 == v16) {
                  goto LABEL_78;
                }
              }
            }
            unint64_t v49 = v16;
LABEL_78:
            unint64_t v12 = v50;
            uint64_t v16 = v49;
            v50 = v49;
            unsigned int v7 = a7;
            unint64_t v9 = a4;
            if (v12 != v49) {
              goto LABEL_117;
            }
          }
          v47 += 24;
          unint64_t v12 = v50;
          if (v47 == v74) {
            goto LABEL_117;
          }
        }
      case 17:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        uint64_t v15 = sub_11366B8(&v80);
        uint64_t v16 = a2[1];
        uint64_t v17 = (double *)*v15;
        v72 = v15[1];
        if (*v15 == v72) {
          goto LABEL_120;
        }
        double v18 = 0.0;
        unint64_t v19 = a2[1];
        uint64_t v20 = v19;
        while (1)
        {
          int v21 = *((_DWORD *)v17 + 4);
          if ((v21 & 0xF) != 0 && (v21 != 1 || v17[1] > 0.5))
          {
            unint64_t v12 = *a2;
            if (*a2 != v19)
            {
              uint64_t v22 = *(int **)v17;
              while (1)
              {
                unint64_t v23 = (_DWORD *)v12[1];
                int v24 = **(_DWORD **)v17;
                if (v24 == *v23)
                {
                  if (v24 == 16802154)
                  {
                    double v18 = 100.0;
                    unint64_t v19 = v16;
                    uint64_t v20 = v12;
                    goto LABEL_24;
                  }
                  double v81 = 1.0;
                  uint64_t v25 = sub_1133780((uint64_t)v22);
                  uint64_t v26 = sub_1133780((uint64_t)v23);
                  sub_1136E90((BOOL)v22, v25, (uint64_t)v23, v26, &v81);
                  if (v81 > v18)
                  {
                    uint64_t v20 = v12;
                    double v18 = v81;
                    if (v81 >= 1.0)
                    {
LABEL_121:
                      unsigned int v7 = a7;
                      unint64_t v9 = a4;
                      goto LABEL_117;
                    }
                  }
                }
                v12 += 2;
                uint64_t v16 = a2[1];
                unint64_t v19 = v12;
                if (v12 == v16) {
                  goto LABEL_24;
                }
              }
            }
            unint64_t v19 = v16;
LABEL_24:
            unint64_t v12 = v20;
            uint64_t v16 = v19;
            uint64_t v20 = v19;
            unsigned int v7 = a7;
            unint64_t v9 = a4;
            if (v12 != v19) {
              goto LABEL_117;
            }
          }
          v17 += 3;
          unint64_t v12 = v20;
          if (v17 == (double *)v72) {
            goto LABEL_117;
          }
        }
      default:
        goto LABEL_118;
    }
  }
}

uint64_t *sub_113AB94(uint64_t **a1, uint64_t **a2, int *a3)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = *a1;
  uint64_t v20 = a1[1];
  if (*a1 == v20) {
    return a2[1];
  }
  uint64_t v6 = *a2;
  int v7 = *a3;
  double v8 = 0.5;
  double v9 = 0.0;
  int v21 = a2[1];
  double v10 = 1.0;
  unint64_t v19 = *a2;
  while (v6 == v3)
  {
LABEL_13:
    double v9 = v9 + 0.07000001;
    double v10 = 1.0 - v9;
    v4 += 2;
    uint64_t v6 = v19;
    if (v8 >= 1.0 - v9 || v4 == v20) {
      return v21;
    }
  }
  uint64_t v11 = *v4;
  while (1)
  {
    uint64_t v12 = *v6;
    double v22 = 1.0;
    uint64_t v13 = sub_1133780(v11);
    uint64_t v14 = sub_1133780(v12);
    sub_1136E90(v11, v13, v12, v14, &v22);
    double v15 = v22;
    if (v7 != 50331648 && *(_DWORD *)(v6[1] + 4) == *a3) {
      double v15 = v22 + 0.0011;
    }
    double v16 = v15 - v9;
    if (v16 > v8)
    {
      double v8 = v16;
      int v21 = v6;
      if (v16 >= v10) {
        return v6;
      }
    }
    v6 += 2;
    if (v6 == v3) {
      goto LABEL_13;
    }
  }
}

uint64_t *sub_113AD0C(uint64_t **a1, uint64_t **a2, int *a3)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = *a1;
  double v22 = a1[1];
  if (*a1 == v22) {
    return a2[1];
  }
  unint64_t v5 = *a2;
  int v6 = *a3;
  double v7 = 0.5;
  double v8 = 0.0;
  uint64_t v20 = a2[1];
  int v21 = *a2;
  double v9 = 1.0;
  while (1)
  {
    unint64_t v23 = v4;
    if (v5 != v3) {
      break;
    }
LABEL_16:
    double v8 = v8 + 0.07000001;
    double v9 = 1.0 - v8;
    uint64_t v4 = v23 + 2;
    BOOL v18 = v7 >= 1.0 - v8 || v4 == v22;
    unint64_t v5 = v21;
    if (v18) {
      return v20;
    }
  }
  uint64_t v10 = *v4;
  uint64_t v11 = v4[1];
  while (1)
  {
    if (*(void *)(v5[1] + 8) == 0x30000006E74614CLL)
    {
      uint64_t v12 = *v5;
      double v25 = 1.0;
      uint64_t v13 = sub_1133780(v10);
      uint64_t v14 = sub_1133780(v12);
      sub_1137458(v10, v13, v12, v14, &v25);
      double v15 = v25;
      int v16 = *(_DWORD *)(v5[1] + 4);
      if (v6 != 50331648 && v16 == *a3) {
        double v15 = v25 + 0.0011;
      }
      if (*(_DWORD *)(v11 + 4) == v16) {
        double v15 = v15 + 0.002;
      }
      double v17 = v15 - v8;
      if (v17 > v7)
      {
        double v7 = v17;
        uint64_t v20 = v5;
        if (v17 >= v9) {
          return v5;
        }
      }
    }
    v5 += 2;
    if (v5 == v3) {
      goto LABEL_16;
    }
  }
}

uint64_t sub_113AECC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4)
{
  uint64_t v4 = a2[1];
  uint64_t v5 = *a3;
  uint64_t v18 = a3[1];
  if (*a3 == v18) {
    return v4;
  }
  double v7 = 0.0;
  uint64_t v8 = a2[1];
  do
  {
    int v9 = *(_DWORD *)(v5 + 16);
    if ((v9 & a4) != 0)
    {
      uint64_t v10 = *(void *)v5;
      if (v9 != 1 || *(double *)(v5 + 8) > 0.5)
      {
        uint64_t v12 = *a1;
        uint64_t v11 = a1[1];
        while (v12 != v11)
        {
          if (*(void *)(*(void *)(v12 + 8) + 8) == *(void *)(v10 + 8))
          {
            if (*a2 != v4)
            {
              uint64_t v4 = *a2;
              do
              {
                uint64_t v13 = *(void *)(v4 + 8);
                if (*(_DWORD *)v10 == *(_DWORD *)v13 && *(void *)(v10 + 8) == *(void *)(v13 + 8))
                {
                  double v20 = 1.0;
                  uint64_t v14 = sub_1133780(v10);
                  uint64_t v15 = sub_1133780(v13);
                  sub_1136E90(v10, v14, v13, v15, &v20);
                  if (v20 > v7)
                  {
                    uint64_t v8 = v4;
                    double v7 = v20;
                    if (v20 >= 1.0) {
                      return v4;
                    }
                  }
                }
                v4 += 16;
              }
              while (v4 != a2[1]);
            }
            uint64_t result = v8;
            uint64_t v8 = v4;
            if (result != v4) {
              return result;
            }
          }
          v12 += 16;
        }
      }
    }
    v5 += 24;
    uint64_t result = v8;
  }
  while (v5 != v18);
  return result;
}

unint64_t sub_113B064(uint64_t **a1, void *a2, unsigned int **a3, int *a4)
{
  uint64_t v4 = 0x1FFFFFFFFLL;
  if (a2[1] != *a2)
  {
    unsigned int v9 = 0;
    char v8 = 0;
    int v6 = sub_113B0D8(a1, (uint64_t)a2, a3, &v9, a4, &v8, 1u);
    if ((uint64_t *)a2[1] != v6) {
      return (((unint64_t)v6 - *a2) >> 4) | ((unint64_t)v9 << 32);
    }
  }
  return v4;
}

uint64_t *sub_113B0D8(uint64_t **a1, uint64_t a2, unsigned int **a3, _DWORD *a4, int *a5, unsigned char *a6, unsigned int a7)
{
  int v53 = 0;
  uint64_t v54 = 0;
  uint64_t v55 = 0;
  __p = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  sub_1139150((uint64_t)&v53, 0);
  sub_113962C((uint64_t)&__p, 0);
  sub_113965C(&v53, a3[1] - *a3);
  sub_113196C(&__p, a3[1] - *a3);
  uint64_t v44 = a6;
  unsigned int v45 = a7;
  uint64_t v10 = *a3;
  uint64_t v11 = a3[1];
  if (*a3 != v11)
  {
    uint64_t v12 = *(uint64_t **)a2;
    uint64_t v13 = (*(void *)(a2 + 8) - *(void *)a2) >> 4;
    do
    {
      uint64_t v14 = *v10;
      if ((v14 & 0x80000000) == 0 && (int)v14 < (int)v13)
      {
        uint64_t v15 = &v12[2 * v14];
        int v16 = v54;
        if (v54 >= v55)
        {
          uint64_t v18 = (v54 - (unsigned char *)v53) >> 4;
          unint64_t v19 = v18 + 1;
          if ((unint64_t)(v18 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v20 = v55 - (unsigned char *)v53;
          if ((v55 - (unsigned char *)v53) >> 3 > v19) {
            unint64_t v19 = v20 >> 3;
          }
          if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v21 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v21 = v19;
          }
          if (v21) {
            double v22 = (char *)sub_1121C00((uint64_t)&v55, v21);
          }
          else {
            double v22 = 0;
          }
          unint64_t v23 = &v22[16 * v18];
          *(_OWORD *)unint64_t v23 = *(_OWORD *)v15;
          double v25 = (char *)v53;
          int v24 = v54;
          uint64_t v26 = v23;
          if (v54 != v53)
          {
            do
            {
              *((_OWORD *)v26 - 1) = *((_OWORD *)v24 - 1);
              v26 -= 16;
              v24 -= 16;
            }
            while (v24 != v25);
            int v24 = (char *)v53;
          }
          double v17 = v23 + 16;
          int v53 = v26;
          uint64_t v54 = v23 + 16;
          uint64_t v55 = &v22[16 * v21];
          if (v24) {
            operator delete(v24);
          }
        }
        else
        {
          *(_OWORD *)uint64_t v54 = *(_OWORD *)v15;
          double v17 = v16 + 16;
        }
        uint64_t v54 = v17;
        __n128 v27 = v51;
        if (v51 >= v52)
        {
          uint64_t v29 = (v51 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v29 + 1) >> 61) {
            sub_2E00();
          }
          unint64_t v30 = (v52 - (unsigned char *)__p) >> 2;
          if (v30 <= v29 + 1) {
            unint64_t v30 = v29 + 1;
          }
          if ((unint64_t)(v52 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v31 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v31 = v30;
          }
          if (v31) {
            uint64_t v32 = (char *)sub_1122DC0((uint64_t)&v52, v31);
          }
          else {
            uint64_t v32 = 0;
          }
          uint64_t v33 = (uint64_t **)&v32[8 * v29];
          *uint64_t v33 = v15;
          __n128 v28 = (char *)(v33 + 1);
          uint64_t v35 = (char *)__p;
          int v34 = v51;
          if (v51 != __p)
          {
            do
            {
              uint64_t v36 = (uint64_t *)*((void *)v34 - 1);
              v34 -= 8;
              *--uint64_t v33 = v36;
            }
            while (v34 != v35);
            int v34 = (char *)__p;
          }
          __p = v33;
          uint64_t v51 = v28;
          uint64_t v52 = &v32[8 * v31];
          if (v34) {
            operator delete(v34);
          }
        }
        else
        {
          *(void *)uint64_t v51 = v15;
          __n128 v28 = v27 + 8;
        }
        uint64_t v51 = v28;
      }
      ++v10;
    }
    while (v10 != v11);
  }
  uint64_t v37 = v53;
  uint64_t v38 = (uint64_t *)v54;
  uint64_t v39 = sub_113AB94(a1, (uint64_t **)&v53, a5);
  if (v38 != v39)
  {
    *a4 = 0;
    uint64_t v40 = (char *)v39 - v37;
    unint64_t v41 = (char *)__p;
    int v42 = *(uint64_t **)((char *)__p + (v40 >> 1));
LABEL_41:
    uint64_t v51 = v41;
    operator delete(v41);
    goto LABEL_42;
  }
  int v42 = sub_113A340(a1, (uint64_t **)a2, a4, a5, v44, 1u, v45);
  *a4 = 1;
  unint64_t v41 = (char *)__p;
  if (__p) {
    goto LABEL_41;
  }
LABEL_42:
  if (v53)
  {
    uint64_t v54 = (char *)v53;
    operator delete(v53);
  }
  return v42;
}

void sub_113B3F0(uint64_t **a1@<X0>, void *a2@<X1>, long long *a3@<X2>, void **a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  uint64_t v5 = a2[1] - *a2;
  if (v5)
  {
    sub_113196C(a4, v5 >> 4);
    LODWORD(v66) = 50331648;
    *((void *)&v66 + 1) = 0;
    uint64_t v67 = -4294967282;
    if (a3)
    {
      long long v66 = *a3;
      uint64_t v67 = *((void *)a3 + 2);
      uint64_t v56 = (int *)&v66;
    }
    else
    {
      uint64_t v56 = 0;
    }
    v63 = 0;
    v64 = 0;
    v65 = 0;
    __p = 0;
    double v61 = 0;
    v62 = 0;
    sub_1139150((uint64_t)&v63, 0);
    sub_113962C((uint64_t)&__p, 0);
    uint64_t v55 = a3;
    char v8 = (_OWORD *)*a2;
    if (*a2 == a2[1])
    {
      unint64_t v30 = (_OWORD *)*a2;
    }
    else
    {
      do
      {
        unsigned int v9 = v64;
        if (v64 >= v65)
        {
          uint64_t v11 = (v64 - (unsigned char *)v63) >> 4;
          unint64_t v12 = v11 + 1;
          if ((unint64_t)(v11 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v13 = v65 - (unsigned char *)v63;
          if ((v65 - (unsigned char *)v63) >> 3 > v12) {
            unint64_t v12 = v13 >> 3;
          }
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v14 = v12;
          }
          if (v14) {
            uint64_t v15 = (char *)sub_1121C00((uint64_t)&v65, v14);
          }
          else {
            uint64_t v15 = 0;
          }
          int v16 = &v15[16 * v11];
          *(_OWORD *)int v16 = *v8;
          uint64_t v18 = (char *)v63;
          double v17 = v64;
          unint64_t v19 = v16;
          if (v64 != v63)
          {
            do
            {
              *((_OWORD *)v19 - 1) = *((_OWORD *)v17 - 1);
              v19 -= 16;
              v17 -= 16;
            }
            while (v17 != v18);
            double v17 = (char *)v63;
          }
          uint64_t v10 = v16 + 16;
          v63 = v19;
          v64 = v16 + 16;
          v65 = &v15[16 * v14];
          if (v17) {
            operator delete(v17);
          }
        }
        else
        {
          *(_OWORD *)v64 = *v8;
          uint64_t v10 = v9 + 16;
        }
        v64 = v10;
        uint64_t v20 = v61;
        if (v61 >= v62)
        {
          uint64_t v22 = (v61 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v22 + 1) >> 61) {
            sub_2E00();
          }
          unint64_t v23 = (v62 - (unsigned char *)__p) >> 2;
          if (v23 <= v22 + 1) {
            unint64_t v23 = v22 + 1;
          }
          if ((unint64_t)(v62 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v24 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v24 = v23;
          }
          if (v24) {
            double v25 = (char *)sub_1122DC0((uint64_t)&v62, v24);
          }
          else {
            double v25 = 0;
          }
          uint64_t v26 = &v25[8 * v22];
          *(void *)uint64_t v26 = v8;
          unint64_t v21 = v26 + 8;
          __n128 v28 = (char *)__p;
          __n128 v27 = v61;
          if (v61 != __p)
          {
            do
            {
              uint64_t v29 = *((void *)v27 - 1);
              v27 -= 8;
              *((void *)v26 - 1) = v29;
              v26 -= 8;
            }
            while (v27 != v28);
            __n128 v27 = (char *)__p;
          }
          __p = v26;
          double v61 = v21;
          v62 = &v25[8 * v24];
          if (v27) {
            operator delete(v27);
          }
        }
        else
        {
          *(void *)double v61 = v8;
          unint64_t v21 = v20 + 8;
        }
        double v61 = v21;
        ++v8;
      }
      while (v8 != (_OWORD *)a2[1]);
      unint64_t v30 = (_OWORD *)*a2;
    }
    unsigned int v59 = 1;
    unsigned __int8 v58 = 1;
    if (((unsigned char *)a4[1] - (unsigned char *)*a4) >> 3 < (unint64_t)(v8 - v30))
    {
      do
      {
        unint64_t v31 = sub_113A340(a1, (uint64_t **)&v63, &v59, v56, &v58, v58, 1u);
        if (v64 == (char *)v31) {
          break;
        }
        uint64_t v32 = v31;
        uint64_t v33 = (char *)v31 - (unsigned char *)v63;
        unint64_t v34 = ((unint64_t)v59 << 32) | ((*(void *)((char *)__p
                                                                        + (((char *)v31 - (unsigned char *)v63) >> 1))
                                                            - *a2) >> 4);
        uint64_t v36 = (unint64_t *)a4[1];
        unint64_t v35 = (unint64_t)a4[2];
        if ((unint64_t)v36 >= v35)
        {
          uint64_t v38 = ((char *)v36 - (unsigned char *)*a4) >> 3;
          if ((unint64_t)(v38 + 1) >> 61) {
            sub_2E00();
          }
          uint64_t v39 = v35 - (void)*a4;
          uint64_t v40 = v39 >> 2;
          if (v39 >> 2 <= (unint64_t)(v38 + 1)) {
            uint64_t v40 = v38 + 1;
          }
          if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v41 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v41 = v40;
          }
          if (v41) {
            int v42 = (char *)sub_1122DC0((uint64_t)(a4 + 2), v41);
          }
          else {
            int v42 = 0;
          }
          uint64_t v43 = (unint64_t *)&v42[8 * v38];
          unint64_t *v43 = v34;
          uint64_t v37 = (char *)(v43 + 1);
          unsigned int v45 = (char *)*a4;
          uint64_t v44 = (char *)a4[1];
          if (v44 != *a4)
          {
            do
            {
              unint64_t v46 = *((void *)v44 - 1);
              v44 -= 8;
              *--uint64_t v43 = v46;
            }
            while (v44 != v45);
            uint64_t v44 = (char *)*a4;
          }
          *a4 = v43;
          a4[1] = v37;
          a4[2] = &v42[8 * v41];
          if (v44) {
            operator delete(v44);
          }
        }
        else
        {
          *uint64_t v36 = v34;
          uint64_t v37 = (char *)(v36 + 1);
        }
        a4[1] = v37;
        if (v55 && (v67 & 0x8000000000000000) == 0)
        {
          int v54 = -1;
          if (v58 != 3 && v58 != 12)
          {
            if (SHIDWORD(v67) <= (int)((unint64_t)((char *)v32 - (unsigned char *)v63) >> 4)) {
              goto LABEL_60;
            }
            int v54 = HIDWORD(v67) - 1;
          }
          HIDWORD(v67) = v54;
        }
LABEL_60:
        uint64_t v47 = v33 >> 4;
        double v48 = v64;
        unint64_t v49 = (char *)v63 + 16 * (v33 >> 4);
        for (uint64_t i = v49 + 16; i != v48; i += 16)
        {
          uint64_t v51 = *((void *)i + 1);
          *((void *)i - 2) = *(void *)i;
          *((void *)i - 1) = v51;
          v49 += 16;
        }
        v64 = v49;
        uint64_t v52 = (char *)__p + 8 * v47;
        int64_t v53 = v61 - (v52 + 8);
        if (v61 != v52 + 8)
        {
          memmove((char *)__p + 8 * v47, v52 + 8, v61 - (v52 + 8));
          uint64_t v37 = (char *)a4[1];
        }
        double v61 = &v52[v53];
      }
      while ((v37 - (unsigned char *)*a4) >> 3 < (unint64_t)((uint64_t)(a2[1] - *a2) >> 4));
    }
    if (__p)
    {
      double v61 = (char *)__p;
      operator delete(__p);
    }
    if (v63)
    {
      v64 = (char *)v63;
      operator delete(v63);
    }
  }
}

void sub_113B89C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  unint64_t v19 = *(void **)v17;
  if (*(void *)v17)
  {
    *(void *)(v17 + 8) = v19;
    operator delete(v19);
  }
  _Unwind_Resume(exception_object);
}

void sub_113B8F4()
{
}

uint64_t sub_113B908()
{
  return 0;
}

uint64_t sub_113B910()
{
  return 0;
}

uint64_t sub_113B918()
{
  return 1;
}

unint64_t sub_113B920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_113B9F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113BA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_113BB04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113BB34(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_113BC18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_113BC48(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_113BD18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113BD60(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_113BE3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

uint64_t sub_113BE84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v6[0] = a2;
  v6[1] = a3;
  sub_1139150((uint64_t)a3, 0);
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  if (v4 == -1) {
    sub_11388B8();
  }
  unint64_t v7 = v6;
  return ((uint64_t (*)(void **, uint64_t))off_2491D40[v4])(&v7, a1);
}

void sub_113BEFC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_113BF18(uint64_t **a1, uint64_t *a2)
{
}

void sub_113BF20(uint64_t **a1, uint64_t *a2)
{
}

void sub_113BF28(uint64_t *a1, uint64_t **a2)
{
}

void sub_113BF30(uint64_t **a1, unsigned int **a2)
{
}

void sub_113BF38(uint64_t **a1, unsigned int **a2)
{
}

void sub_113BF40(uint64_t **a1, char ***a2)
{
}

void sub_113BF48(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      sub_1138AB0(v19, v2);
      unint64_t v5 = (void **)a1[1];
      int v6 = (_OWORD *)sub_11302A4(*a1, (uint64_t)v19);
      unint64_t v7 = (unint64_t)v5[2];
      char v8 = v5[1];
      if ((unint64_t)v8 >= v7)
      {
        uint64_t v10 = ((char *)v8 - (unsigned char *)*v5) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v12 = v7 - (void)*v5;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13) {
          unint64_t v14 = (char *)sub_1121C00((uint64_t)(v5 + 2), v13);
        }
        else {
          unint64_t v14 = 0;
        }
        uint64_t v15 = &v14[16 * v10];
        *(_OWORD *)uint64_t v15 = *v6;
        uint64_t v17 = (char *)*v5;
        int v16 = (char *)v5[1];
        uint64_t v18 = v15;
        if (v16 != *v5)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v16 - 1);
            v18 -= 16;
            v16 -= 16;
          }
          while (v16 != v17);
          int v16 = (char *)*v5;
        }
        unint64_t v9 = v15 + 16;
        *unint64_t v5 = v18;
        v5[1] = v15 + 16;
        v5[2] = &v14[16 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *char v8 = *v6;
        unint64_t v9 = v8 + 1;
      }
      v5[1] = v9;
      v2 += 24;
    }
    while (v2 != v3);
  }
}

void sub_113C0C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      unint64_t v5 = (void **)a1[1];
      int v6 = (_OWORD *)sub_11302A4(*a1, v2);
      unint64_t v7 = v5[1];
      unint64_t v8 = (unint64_t)v5[2];
      if ((unint64_t)v7 >= v8)
      {
        uint64_t v10 = ((char *)v7 - (unsigned char *)*v5) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v12 = v8 - (void)*v5;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13) {
          unint64_t v14 = (char *)sub_1121C00((uint64_t)(v5 + 2), v13);
        }
        else {
          unint64_t v14 = 0;
        }
        uint64_t v15 = &v14[16 * v10];
        *(_OWORD *)uint64_t v15 = *v6;
        uint64_t v17 = (char *)*v5;
        int v16 = (char *)v5[1];
        uint64_t v18 = v15;
        if (v16 != *v5)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v16 - 1);
            v18 -= 16;
            v16 -= 16;
          }
          while (v16 != v17);
          int v16 = (char *)*v5;
        }
        unint64_t v9 = v15 + 16;
        *unint64_t v5 = v18;
        v5[1] = v15 + 16;
        v5[2] = &v14[16 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *unint64_t v7 = *v6;
        unint64_t v9 = v7 + 1;
      }
      v5[1] = v9;
      v2 += 48;
    }
    while (v2 != v3);
  }
}

void sub_113C1F0(uint64_t *a1, char ***a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      sub_1123180(v19, *v2);
      unint64_t v5 = (void **)a1[1];
      int v6 = (_OWORD *)sub_11302A4(*a1, (uint64_t)v19);
      unint64_t v7 = (unint64_t)v5[2];
      unint64_t v8 = v5[1];
      if ((unint64_t)v8 >= v7)
      {
        uint64_t v10 = ((char *)v8 - (unsigned char *)*v5) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v12 = v7 - (void)*v5;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13) {
          unint64_t v14 = (char *)sub_1121C00((uint64_t)(v5 + 2), v13);
        }
        else {
          unint64_t v14 = 0;
        }
        uint64_t v15 = &v14[16 * v10];
        *(_OWORD *)uint64_t v15 = *v6;
        uint64_t v17 = (char *)*v5;
        int v16 = (char *)v5[1];
        uint64_t v18 = v15;
        if (v16 != *v5)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v16 - 1);
            v18 -= 16;
            v16 -= 16;
          }
          while (v16 != v17);
          int v16 = (char *)*v5;
        }
        unint64_t v9 = v15 + 16;
        *unint64_t v5 = v18;
        v5[1] = v15 + 16;
        v5[2] = &v14[16 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *unint64_t v8 = *v6;
        unint64_t v9 = v8 + 1;
      }
      v5[1] = v9;
      ++v2;
    }
    while (v2 != v3);
  }
}

void sub_113C36C()
{
}

uint64_t sub_113C380()
{
  return 0;
}

uint64_t sub_113C388()
{
  return 0;
}

uint64_t sub_113C390()
{
  return 1;
}

unint64_t sub_113C398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_113C470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113C4A0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_113C57C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113C5AC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_113C690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_113C6C0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_113C790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113C7D8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_113C8B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113C900()
{
}

uint64_t sub_113C914()
{
  return 0;
}

uint64_t sub_113C91C()
{
  return 0;
}

uint64_t sub_113C924()
{
  return 2;
}

unint64_t sub_113C92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_113CA04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113CA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_113CB10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113CB40(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_113CC24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_113CC54(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_113CD24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113CD6C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_113CE48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

uint64_t sub_113CE90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v6[0] = a2;
  v6[1] = a3;
  sub_1139150((uint64_t)a3, 0);
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  if (v4 == -1) {
    sub_11388B8();
  }
  unint64_t v7 = v6;
  return ((uint64_t (*)(void **, uint64_t))off_2491E70[v4])(&v7, a1);
}

void sub_113CF08(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_113CF24(uint64_t **a1, uint64_t *a2)
{
}

void sub_113CF2C(uint64_t **a1, unsigned __int8 **a2)
{
}

void sub_113CF34(uint64_t *a1, uint64_t **a2)
{
}

void sub_113CF3C(uint64_t **a1, unsigned int **a2)
{
}

void sub_113CF44(uint64_t **a1, unsigned int **a2)
{
}

void sub_113CF4C(uint64_t **a1, char ***a2)
{
}

void sub_113CF54(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      sub_1138AB0(v19, v2);
      unint64_t v5 = (void **)a1[1];
      int v6 = (_OWORD *)sub_11305A4(*a1, (unsigned __int8 *)v19);
      unint64_t v7 = (unint64_t)v5[2];
      unint64_t v8 = v5[1];
      if ((unint64_t)v8 >= v7)
      {
        uint64_t v10 = ((char *)v8 - (unsigned char *)*v5) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v12 = v7 - (void)*v5;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13) {
          unint64_t v14 = (char *)sub_1121C00((uint64_t)(v5 + 2), v13);
        }
        else {
          unint64_t v14 = 0;
        }
        uint64_t v15 = &v14[16 * v10];
        *(_OWORD *)uint64_t v15 = *v6;
        uint64_t v17 = (char *)*v5;
        int v16 = (char *)v5[1];
        uint64_t v18 = v15;
        if (v16 != *v5)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v16 - 1);
            v18 -= 16;
            v16 -= 16;
          }
          while (v16 != v17);
          int v16 = (char *)*v5;
        }
        unint64_t v9 = v15 + 16;
        *unint64_t v5 = v18;
        v5[1] = v15 + 16;
        v5[2] = &v14[16 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *unint64_t v8 = *v6;
        unint64_t v9 = v8 + 1;
      }
      v5[1] = v9;
      v2 += 24;
    }
    while (v2 != v3);
  }
}

void sub_113D0CC(uint64_t *a1, unsigned __int8 **a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      unint64_t v5 = (void **)a1[1];
      int v6 = (_OWORD *)sub_11305A4(*a1, v2);
      unint64_t v7 = v5[1];
      unint64_t v8 = (unint64_t)v5[2];
      if ((unint64_t)v7 >= v8)
      {
        uint64_t v10 = ((char *)v7 - (unsigned char *)*v5) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v12 = v8 - (void)*v5;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13) {
          unint64_t v14 = (char *)sub_1121C00((uint64_t)(v5 + 2), v13);
        }
        else {
          unint64_t v14 = 0;
        }
        uint64_t v15 = &v14[16 * v10];
        *(_OWORD *)uint64_t v15 = *v6;
        uint64_t v17 = (char *)*v5;
        int v16 = (char *)v5[1];
        uint64_t v18 = v15;
        if (v16 != *v5)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v16 - 1);
            v18 -= 16;
            v16 -= 16;
          }
          while (v16 != v17);
          int v16 = (char *)*v5;
        }
        unint64_t v9 = v15 + 16;
        *unint64_t v5 = v18;
        v5[1] = v15 + 16;
        v5[2] = &v14[16 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *unint64_t v7 = *v6;
        unint64_t v9 = v7 + 1;
      }
      v5[1] = v9;
      v2 += 48;
    }
    while (v2 != v3);
  }
}

void sub_113D1FC(uint64_t *a1, char ***a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      sub_1123180(v19, *v2);
      unint64_t v5 = (void **)a1[1];
      int v6 = (_OWORD *)sub_11305A4(*a1, (unsigned __int8 *)v19);
      unint64_t v7 = (unint64_t)v5[2];
      unint64_t v8 = v5[1];
      if ((unint64_t)v8 >= v7)
      {
        uint64_t v10 = ((char *)v8 - (unsigned char *)*v5) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v12 = v7 - (void)*v5;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13) {
          unint64_t v14 = (char *)sub_1121C00((uint64_t)(v5 + 2), v13);
        }
        else {
          unint64_t v14 = 0;
        }
        uint64_t v15 = &v14[16 * v10];
        *(_OWORD *)uint64_t v15 = *v6;
        uint64_t v17 = (char *)*v5;
        int v16 = (char *)v5[1];
        uint64_t v18 = v15;
        if (v16 != *v5)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v16 - 1);
            v18 -= 16;
            v16 -= 16;
          }
          while (v16 != v17);
          int v16 = (char *)*v5;
        }
        unint64_t v9 = v15 + 16;
        *unint64_t v5 = v18;
        v5[1] = v15 + 16;
        v5[2] = &v14[16 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *unint64_t v8 = *v6;
        unint64_t v9 = v8 + 1;
      }
      v5[1] = v9;
      ++v2;
    }
    while (v2 != v3);
  }
}

void sub_113D378()
{
}

uint64_t sub_113D38C()
{
  return 0;
}

uint64_t sub_113D394()
{
  return 0;
}

uint64_t sub_113D39C()
{
  return 2;
}

unint64_t sub_113D3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_113D47C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113D4AC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_113D588(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113D5B8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_113D69C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_113D6CC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_113D79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113D7E4(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_113D8C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113D90C()
{
}

uint64_t sub_113D920()
{
  return 0;
}

uint64_t sub_113D928()
{
  return 0;
}

uint64_t sub_113D930()
{
  return 3;
}

unint64_t sub_113D938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_113DA10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113DA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_113DB1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113DB4C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_113DC30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_113DC60(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_113DD30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113DD78(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_113DE54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

uint64_t sub_113DE9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v6[0] = a2;
  v6[1] = a3;
  sub_1139150((uint64_t)a3, 0);
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  if (v4 == -1) {
    sub_11388B8();
  }
  unint64_t v7 = v6;
  return ((uint64_t (*)(void **, uint64_t))off_2491FA0[v4])(&v7, a1);
}

void sub_113DF14(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_113DF30(uint64_t **a1, uint64_t *a2)
{
}

void sub_113DF38(uint64_t **a1, unsigned __int8 **a2)
{
}

void sub_113DF40(uint64_t *a1, uint64_t **a2)
{
}

void sub_113DF48(uint64_t **a1, unsigned int **a2)
{
}

void sub_113DF50(uint64_t **a1, unsigned int **a2)
{
}

void sub_113DF58(uint64_t **a1, char ***a2)
{
}

void sub_113DF60(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      sub_1138AB0(v19, v2);
      unint64_t v5 = (void **)a1[1];
      int v6 = (_OWORD *)sub_11306A4(*a1, (unsigned __int8 *)v19);
      unint64_t v7 = (unint64_t)v5[2];
      unint64_t v8 = v5[1];
      if ((unint64_t)v8 >= v7)
      {
        uint64_t v10 = ((char *)v8 - (unsigned char *)*v5) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v12 = v7 - (void)*v5;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13) {
          unint64_t v14 = (char *)sub_1121C00((uint64_t)(v5 + 2), v13);
        }
        else {
          unint64_t v14 = 0;
        }
        uint64_t v15 = &v14[16 * v10];
        *(_OWORD *)uint64_t v15 = *v6;
        uint64_t v17 = (char *)*v5;
        int v16 = (char *)v5[1];
        uint64_t v18 = v15;
        if (v16 != *v5)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v16 - 1);
            v18 -= 16;
            v16 -= 16;
          }
          while (v16 != v17);
          int v16 = (char *)*v5;
        }
        unint64_t v9 = v15 + 16;
        *unint64_t v5 = v18;
        v5[1] = v15 + 16;
        v5[2] = &v14[16 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *unint64_t v8 = *v6;
        unint64_t v9 = v8 + 1;
      }
      v5[1] = v9;
      v2 += 24;
    }
    while (v2 != v3);
  }
}

void sub_113E0D8(uint64_t *a1, unsigned __int8 **a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      unint64_t v5 = (void **)a1[1];
      int v6 = (_OWORD *)sub_11306A4(*a1, v2);
      unint64_t v7 = v5[1];
      unint64_t v8 = (unint64_t)v5[2];
      if ((unint64_t)v7 >= v8)
      {
        uint64_t v10 = ((char *)v7 - (unsigned char *)*v5) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v12 = v8 - (void)*v5;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13) {
          unint64_t v14 = (char *)sub_1121C00((uint64_t)(v5 + 2), v13);
        }
        else {
          unint64_t v14 = 0;
        }
        uint64_t v15 = &v14[16 * v10];
        *(_OWORD *)uint64_t v15 = *v6;
        uint64_t v17 = (char *)*v5;
        int v16 = (char *)v5[1];
        uint64_t v18 = v15;
        if (v16 != *v5)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v16 - 1);
            v18 -= 16;
            v16 -= 16;
          }
          while (v16 != v17);
          int v16 = (char *)*v5;
        }
        unint64_t v9 = v15 + 16;
        *unint64_t v5 = v18;
        v5[1] = v15 + 16;
        v5[2] = &v14[16 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *unint64_t v7 = *v6;
        unint64_t v9 = v7 + 1;
      }
      v5[1] = v9;
      v2 += 48;
    }
    while (v2 != v3);
  }
}

void sub_113E208(uint64_t *a1, char ***a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    do
    {
      sub_1123180(v19, *v2);
      unint64_t v5 = (void **)a1[1];
      int v6 = (_OWORD *)sub_11306A4(*a1, (unsigned __int8 *)v19);
      unint64_t v7 = (unint64_t)v5[2];
      unint64_t v8 = v5[1];
      if ((unint64_t)v8 >= v7)
      {
        uint64_t v10 = ((char *)v8 - (unsigned char *)*v5) >> 4;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v12 = v7 - (void)*v5;
        if (v12 >> 3 > v11) {
          unint64_t v11 = v12 >> 3;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        if (v13) {
          unint64_t v14 = (char *)sub_1121C00((uint64_t)(v5 + 2), v13);
        }
        else {
          unint64_t v14 = 0;
        }
        uint64_t v15 = &v14[16 * v10];
        *(_OWORD *)uint64_t v15 = *v6;
        uint64_t v17 = (char *)*v5;
        int v16 = (char *)v5[1];
        uint64_t v18 = v15;
        if (v16 != *v5)
        {
          do
          {
            *((_OWORD *)v18 - 1) = *((_OWORD *)v16 - 1);
            v18 -= 16;
            v16 -= 16;
          }
          while (v16 != v17);
          int v16 = (char *)*v5;
        }
        unint64_t v9 = v15 + 16;
        *unint64_t v5 = v18;
        v5[1] = v15 + 16;
        v5[2] = &v14[16 * v13];
        if (v16) {
          operator delete(v16);
        }
      }
      else
      {
        *unint64_t v8 = *v6;
        unint64_t v9 = v8 + 1;
      }
      v5[1] = v9;
      ++v2;
    }
    while (v2 != v3);
  }
}

void sub_113E384()
{
}

uint64_t sub_113E398()
{
  return 0;
}

uint64_t sub_113E3A0()
{
  return 0;
}

uint64_t sub_113E3A8()
{
  return 3;
}

unint64_t sub_113E3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_113E488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113E4B8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_113E594(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113E5C4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_113E6A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_113E6D8(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_113E7A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113E7F0(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_113E8CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113E918()
{
}

uint64_t sub_113E92C()
{
  return 0;
}

uint64_t sub_113E934()
{
  return 1;
}

uint64_t sub_113E93C()
{
  return 0;
}

unint64_t sub_113E944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_113EA1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113EA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_113EB28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113EB58(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_113EC3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_113EC6C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_113ED3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113ED84(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_113EE60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

uint64_t sub_113EEA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v6[0] = a2;
  v6[1] = a3;
  sub_1139150((uint64_t)a3, 0);
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  if (v4 == -1) {
    sub_11388B8();
  }
  unint64_t v7 = v6;
  return ((uint64_t (*)(void **, uint64_t))off_2491D40[v4])(&v7, a1);
}

void sub_113EF20(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_113EF40()
{
}

uint64_t sub_113EF54()
{
  return 0;
}

uint64_t sub_113EF5C()
{
  return 1;
}

uint64_t sub_113EF64()
{
  return 0;
}

unint64_t sub_113EF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_113F044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113F074(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_113F150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113F180(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_113F264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_113F294(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_113F364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113F3AC(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_113F488(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113F4D4()
{
}

uint64_t sub_113F4E8()
{
  return 0;
}

uint64_t sub_113F4F0()
{
  return 1;
}

uint64_t sub_113F4F8()
{
  return 1;
}

unint64_t sub_113F500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_113F5D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113F608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_113F6E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113F714(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_113F7F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_113F828(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_113F8F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113F940(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_113FA1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113FA68()
{
}

uint64_t sub_113FA7C()
{
  return 0;
}

uint64_t sub_113FA84()
{
  return 1;
}

uint64_t sub_113FA8C()
{
  return 1;
}

unint64_t sub_113FA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_113FB6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113FB9C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_113FC78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_113FCA8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_113FD8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_113FDBC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_113FE8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113FED4(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_113FFB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_113FFFC()
{
}

uint64_t sub_1140010()
{
  return 0;
}

uint64_t sub_1140018()
{
  return 1;
}

uint64_t sub_1140020()
{
  return 2;
}

unint64_t sub_1140028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1140100(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1140130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114020C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114023C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1140320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1140350(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1140420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1140468(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1140544(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1140590()
{
}

uint64_t sub_11405A4()
{
  return 0;
}

uint64_t sub_11405AC()
{
  return 1;
}

uint64_t sub_11405B4()
{
  return 2;
}

unint64_t sub_11405BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1140694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11406C4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11407A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11407D0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11408B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11408E4(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11409B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11409FC(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1140AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1140B24()
{
}

uint64_t sub_1140B38()
{
  return 0;
}

uint64_t sub_1140B40()
{
  return 1;
}

uint64_t sub_1140B48()
{
  return 3;
}

unint64_t sub_1140B50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1140C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1140C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1140D34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1140D64(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1140E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1140E78(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1140F48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1140F90(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114106C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11410B8()
{
}

uint64_t sub_11410CC()
{
  return 0;
}

uint64_t sub_11410D4()
{
  return 1;
}

uint64_t sub_11410DC()
{
  return 3;
}

unint64_t sub_11410E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11411BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11411EC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11412C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11412F8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11413DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114140C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11414DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1141524(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1141600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114164C()
{
}

uint64_t sub_1141660()
{
  return 0;
}

uint64_t sub_1141668()
{
  return 2;
}

uint64_t sub_1141670()
{
  return 0;
}

unint64_t sub_1141678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1141750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1141780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114185C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114188C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1141970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11419A0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1141A70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1141AB8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1141B94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

uint64_t sub_1141BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v6[0] = a2;
  v6[1] = a3;
  sub_1139150((uint64_t)a3, 0);
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  if (v4 == -1) {
    sub_11388B8();
  }
  unint64_t v7 = v6;
  return ((uint64_t (*)(void **, uint64_t))off_2491E70[v4])(&v7, a1);
}

void sub_1141C54(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1141C74()
{
}

uint64_t sub_1141C88()
{
  return 0;
}

uint64_t sub_1141C90()
{
  return 2;
}

uint64_t sub_1141C98()
{
  return 0;
}

unint64_t sub_1141CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1141D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1141DA8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1141E84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1141EB4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1141F98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1141FC8(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1142098(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11420E0(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11421BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1142208()
{
}

uint64_t sub_114221C()
{
  return 0;
}

uint64_t sub_1142224()
{
  return 2;
}

uint64_t sub_114222C()
{
  return 1;
}

unint64_t sub_1142234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114230C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114233C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1142418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1142448(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114252C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114255C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114262C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1142674(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1142750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114279C()
{
}

uint64_t sub_11427B0()
{
  return 0;
}

uint64_t sub_11427B8()
{
  return 2;
}

uint64_t sub_11427C0()
{
  return 1;
}

unint64_t sub_11427C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11428A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11428D0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11429AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11429DC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1142AC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1142AF0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1142BC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1142C08(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1142CE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1142D30()
{
}

uint64_t sub_1142D44()
{
  return 0;
}

uint64_t sub_1142D4C()
{
  return 2;
}

uint64_t sub_1142D54()
{
  return 2;
}

unint64_t sub_1142D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1142E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1142E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1142F40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1142F70(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1143054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1143084(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1143154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114319C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1143278(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11432C4()
{
}

uint64_t sub_11432D8()
{
  return 0;
}

uint64_t sub_11432E0()
{
  return 2;
}

uint64_t sub_11432E8()
{
  return 2;
}

unint64_t sub_11432F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11433C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11433F8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11434D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1143504(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11435E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1143618(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11436E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1143730(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114380C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1143858()
{
}

uint64_t sub_114386C()
{
  return 0;
}

uint64_t sub_1143874()
{
  return 2;
}

uint64_t sub_114387C()
{
  return 3;
}

unint64_t sub_1143884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114395C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114398C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1143A68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1143A98(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1143B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1143BAC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1143C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1143CC4(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1143DA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1143DEC()
{
}

uint64_t sub_1143E00()
{
  return 0;
}

uint64_t sub_1143E08()
{
  return 2;
}

uint64_t sub_1143E10()
{
  return 3;
}

unint64_t sub_1143E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1143EF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1143F20(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1143FFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114402C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1144110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1144140(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1144210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1144258(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1144334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1144380()
{
}

uint64_t sub_1144394()
{
  return 0;
}

uint64_t sub_114439C()
{
  return 3;
}

uint64_t sub_11443A4()
{
  return 0;
}

unint64_t sub_11443AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1144484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11444B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1144590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11445C0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11446A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11446D4(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11447A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11447EC(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11448C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

uint64_t sub_1144910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  v6[0] = a2;
  v6[1] = a3;
  sub_1139150((uint64_t)a3, 0);
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  if (v4 == -1) {
    sub_11388B8();
  }
  unint64_t v7 = v6;
  return ((uint64_t (*)(void **, uint64_t))off_2491FA0[v4])(&v7, a1);
}

void sub_1144988(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_11449A8()
{
}

uint64_t sub_11449BC()
{
  return 0;
}

uint64_t sub_11449C4()
{
  return 3;
}

uint64_t sub_11449CC()
{
  return 0;
}

unint64_t sub_11449D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1144AAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1144ADC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1144BB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1144BE8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1144CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1144CFC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1144DCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1144E14(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1144EF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1144F3C()
{
}

uint64_t sub_1144F50()
{
  return 0;
}

uint64_t sub_1144F58()
{
  return 3;
}

uint64_t sub_1144F60()
{
  return 1;
}

unint64_t sub_1144F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1145040(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1145070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114514C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114517C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1145260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1145290(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1145360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11453A8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1145484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11454D0()
{
}

uint64_t sub_11454E4()
{
  return 0;
}

uint64_t sub_11454EC()
{
  return 3;
}

uint64_t sub_11454F4()
{
  return 1;
}

unint64_t sub_11454FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11455D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1145604(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11456E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1145710(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11457F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1145824(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11458F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114593C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1145A18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1145A64()
{
}

uint64_t sub_1145A78()
{
  return 0;
}

uint64_t sub_1145A80()
{
  return 3;
}

uint64_t sub_1145A88()
{
  return 2;
}

unint64_t sub_1145A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1145B68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1145B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1145C74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1145CA4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1145D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1145DB8(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1145E88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1145ED0(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1145FAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1145FF8()
{
}

uint64_t sub_114600C()
{
  return 0;
}

uint64_t sub_1146014()
{
  return 3;
}

uint64_t sub_114601C()
{
  return 2;
}

unint64_t sub_1146024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11460FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114612C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1146208(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1146238(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114631C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114634C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114641C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1146464(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1146540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114658C()
{
}

uint64_t sub_11465A0()
{
  return 0;
}

uint64_t sub_11465A8()
{
  return 3;
}

uint64_t sub_11465B0()
{
  return 3;
}

unint64_t sub_11465B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1135DF4((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1146690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11466C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1135DF4((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114679C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11467CC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11392A0((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11468B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11468E0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11469B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11469F8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1139838((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1146AD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1146B20()
{
}

uint64_t sub_1146B34()
{
  return 0;
}

uint64_t sub_1146B3C()
{
  return 3;
}

uint64_t sub_1146B44()
{
  return 3;
}

unint64_t sub_1146B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_113A2CC((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1146C24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1146C54(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_113A2CC((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1146D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1146D60(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_113B064((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1146E44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1146E74(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1146F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1146F8C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_113B3F0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1147068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11470B4()
{
}

uint64_t sub_11470C8()
{
  return 1;
}

uint64_t sub_11470D0()
{
  return 0;
}

uint64_t sub_11470D8()
{
  return 0;
}

unint64_t sub_11470E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11471B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11471E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11472C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11472F4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11473D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1147408(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11474D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1147520(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11475FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

unint64_t sub_1147644(uint64_t **a1, uint64_t **a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v4 = 0x1FFFFFFFFLL;
  if (a2[1] != *a2)
  {
    unsigned int v8 = 0;
    int v6 = sub_11476B8(a1, a2, &v8, a3, a4, 1u, 1u);
    if (a2[1] != v6) {
      return ((unint64_t)((char *)v6 - (char *)*a2) >> 4) | ((unint64_t)v8 << 32);
    }
  }
  return v4;
}

uint64_t *sub_11476B8(uint64_t **a1, uint64_t **a2, _DWORD *a3, uint64_t a4, unsigned char *a5, unsigned int a6, unsigned int a7)
{
  if (a4) {
    int v13 = *(_DWORD *)a4;
  }
  else {
    int v13 = 50331648;
  }
  uint64_t v15 = *a2;
  unint64_t v14 = a2[1];
  int v37 = v13;
  *a5 = a6;
  if (a6 > a7)
  {
LABEL_55:
    *a3 = 1;
    *a5 = 0;
    return v14;
  }
  else
  {
    while (1)
    {
      switch((char)a6)
      {
        case 1:
          uint64_t result = sub_1147A88(a1, a2, &v37);
          goto LABEL_53;
        case 2:
          uint64_t result = sub_1136418(a1, a2, &v37);
          goto LABEL_53;
        case 3:
          if (!a4) {
            goto LABEL_54;
          }
          uint64_t result = (uint64_t *)sub_11365D8((uint64_t *)a1, a2, *(_DWORD *)(a4 + 20));
          goto LABEL_53;
        case 4:
          if (!a4) {
            goto LABEL_54;
          }
          uint64_t v32 = *(void *)(a4 + 8);
          if (!v32 || !*(void *)(v32 + 40)) {
            goto LABEL_54;
          }
          uint64_t v33 = sub_11341A4(v32);
          uint64_t result = (uint64_t *)sub_1136640((uint64_t *)a1, (uint64_t *)a2, v33);
          goto LABEL_53;
        case 5:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          uint64_t v22 = sub_11366B8(&v37);
          if ((*(unsigned char *)(a4 + 16) & 2) == 0) {
            goto LABEL_54;
          }
          unint64_t v23 = (uint64_t *)v22;
          unint64_t v24 = (uint64_t *)a1;
          double v25 = (uint64_t *)a2;
          int v26 = 2;
          goto LABEL_50;
        case 6:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          unint64_t v34 = sub_11366B8(&v37);
          if ((*(unsigned char *)(a4 + 16) & 4) == 0) {
            goto LABEL_54;
          }
          unint64_t v23 = (uint64_t *)v34;
          unint64_t v24 = (uint64_t *)a1;
          double v25 = (uint64_t *)a2;
          int v26 = 4;
          goto LABEL_50;
        case 7:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          uint64_t v36 = sub_11366B8(&v37);
          if ((*(unsigned char *)(a4 + 16) & 8) == 0) {
            goto LABEL_54;
          }
          unint64_t v23 = (uint64_t *)v36;
          unint64_t v24 = (uint64_t *)a1;
          double v25 = (uint64_t *)a2;
          int v26 = 8;
          goto LABEL_50;
        case 8:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          unint64_t v23 = (uint64_t *)sub_11366B8(&v37);
          unint64_t v24 = (uint64_t *)a1;
          double v25 = (uint64_t *)a2;
          int v26 = 15;
LABEL_50:
          uint64_t result = (uint64_t *)sub_1136744(v24, v25, v23, v26);
          goto LABEL_53;
        case 9:
          uint64_t result = (uint64_t *)sub_1136940((uint64_t *)a1, (uint64_t *)a2);
          goto LABEL_53;
        case 10:
          uint64_t result = (uint64_t *)sub_1136B74((uint64_t *)a1, (uint64_t *)a2);
          goto LABEL_53;
        case 11:
          uint64_t result = (uint64_t *)sub_1136C24((uint64_t *)a1, (uint64_t *)a2);
          goto LABEL_53;
        case 12:
          if (!a4) {
            goto LABEL_54;
          }
          uint64_t v21 = *(unsigned int *)(a4 + 20);
          if ((v21 & 0x80000000) != 0 || (int)v21 >= (int)((unint64_t)((char *)a2[1] - (char *)*a2) >> 4)) {
            goto LABEL_54;
          }
          uint64_t result = &v15[2 * v21];
          goto LABEL_53;
        case 13:
          if (!a4) {
            goto LABEL_54;
          }
          uint64_t v27 = *(void *)(a4 + 8);
          if (!v27 || !*(void *)(v27 + 40)) {
            goto LABEL_54;
          }
          uint64_t v28 = sub_11341A4(v27);
          uint64_t result = *a2;
          uint64_t v29 = a2[1];
          if (*a2 == v29) {
            goto LABEL_53;
          }
          break;
        case 14:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          unint64_t v35 = sub_11366B8(&v37);
          if ((*(unsigned char *)(a4 + 16) & 2) == 0) {
            goto LABEL_54;
          }
          uint64_t v17 = (uint64_t *)v35;
          uint64_t v18 = (uint64_t *)a2;
          int v19 = 2;
          goto LABEL_46;
        case 15:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          uint64_t v20 = sub_11366B8(&v37);
          if ((*(unsigned char *)(a4 + 16) & 4) == 0) {
            goto LABEL_54;
          }
          uint64_t v17 = (uint64_t *)v20;
          uint64_t v18 = (uint64_t *)a2;
          int v19 = 4;
          goto LABEL_46;
        case 16:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          unint64_t v31 = sub_11366B8(&v37);
          if ((*(unsigned char *)(a4 + 16) & 8) == 0) {
            goto LABEL_54;
          }
          uint64_t v17 = (uint64_t *)v31;
          uint64_t v18 = (uint64_t *)a2;
          int v19 = 8;
          goto LABEL_46;
        case 17:
          if (v37 == 50331648) {
            goto LABEL_54;
          }
          uint64_t v17 = (uint64_t *)sub_11366B8(&v37);
          uint64_t v18 = (uint64_t *)a2;
          int v19 = 15;
LABEL_46:
          uint64_t result = (uint64_t *)sub_1136CC4(v18, v17, v19);
          goto LABEL_53;
        default:
          goto LABEL_54;
      }
      while (1)
      {
        uint64_t v30 = result[1];
        if (*(_DWORD *)v30 == *(_DWORD *)v28 && *(void *)(v30 + 8) == *(void *)(v28 + 8)) {
          break;
        }
        result += 2;
        if (result == v29)
        {
          uint64_t result = a2[1];
          break;
        }
      }
LABEL_53:
      if (result != v14) {
        break;
      }
LABEL_54:
      LOBYTE(a6) = *a5 + 1;
      *a5 = a6;
      if (a7 < a6) {
        goto LABEL_55;
      }
    }
    *a3 = *a5 > 9u;
  }
  return result;
}

uint64_t *sub_1147A88(uint64_t **a1, uint64_t **a2, int *a3)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = *a1;
  uint64_t v20 = a1[1];
  if (*a1 == v20) {
    return a2[1];
  }
  int v6 = *a2;
  int v7 = *a3;
  double v8 = 0.5;
  double v9 = 0.0;
  uint64_t v21 = a2[1];
  double v10 = 1.0;
  int v19 = *a2;
  while (v6 == v3)
  {
LABEL_13:
    double v9 = v9 + 0.07000001;
    double v10 = 1.0 - v9;
    v4 += 2;
    int v6 = v19;
    if (v8 >= 1.0 - v9 || v4 == v20) {
      return v21;
    }
  }
  uint64_t v11 = *v4;
  while (1)
  {
    uint64_t v12 = *v6;
    double v22 = 1.0;
    uint64_t v13 = sub_1133780(v11);
    uint64_t v14 = sub_1133780(v12);
    sub_1147C00(v11, v13, v12, v14, &v22);
    double v15 = v22;
    if (v7 != 50331648 && *(_DWORD *)(v6[1] + 4) == *a3) {
      double v15 = v22 + 0.0011;
    }
    double v16 = v15 - v9;
    if (v16 > v8)
    {
      double v8 = v16;
      uint64_t v21 = v6;
      if (v16 >= v10) {
        return v6;
      }
    }
    v6 += 2;
    if (v6 == v3) {
      goto LABEL_13;
    }
  }
}

BOOL sub_1147C00(BOOL result, uint64_t a2, uint64_t a3, uint64_t a4, double *a5)
{
  if (*(_DWORD *)a4 == 6581877)
  {
    double v10 = 0.0;
LABEL_6:
    *a5 = v10;
    return result;
  }
  BOOL v9 = result;
  sub_1147CDC((unsigned char *)a2, (_DWORD *)result, (_DWORD *)a2, (_DWORD *)a4, (_DWORD *)a3, (_DWORD *)a4, a5);
  sub_1147D34((_DWORD *)a2, (void *)(v9 + 8), (void *)(a2 + 8), a4, (void *)(a3 + 8), (void *)(a4 + 8), a5);
  sub_1147D8C((int *)a2, (_DWORD *)(v9 + 4), (_DWORD *)(a2 + 4), (int *)a4, (_DWORD *)(a3 + 4), (_DWORD *)(a4 + 4), a5);
  uint64_t result = sub_1126618((void *)(a2 + 16), (unsigned __int8 *)(a4 + 16));
  if (!result)
  {
    double v10 = *a5 + -0.01;
    goto LABEL_6;
  }
  return result;
}

double sub_1147CDC(unsigned char *a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, _DWORD *a6, double *a7)
{
  if (*a3 == *a6)
  {
    if (*a2 != *a5 && *(_DWORD *)a1 == 16807024)
    {
      double result = *a7 + -0.001;
      *a7 = result;
    }
  }
  else
  {
    sub_1147DE4(a1, a4, a7);
  }
  return result;
}

double sub_1147D34(_DWORD *a1, void *a2, void *a3, uint64_t a4, void *a5, void *a6, double *a7)
{
  if (*a3 == *a6)
  {
    if (*a2 != *a5 && *a1 == 16807024)
    {
      double result = *a7 + -0.001;
      *a7 = result;
    }
  }
  else
  {
    sub_1147EBC((uint64_t)a1, a4, a7);
  }
  return result;
}

double sub_1147D8C(int *a1, _DWORD *a2, _DWORD *a3, int *a4, _DWORD *a5, _DWORD *a6, double *a7)
{
  if (*a3 == *a6)
  {
    if (*a2 != *a5 && *a1 == 16807024)
    {
      double result = *a7 + -0.001;
      *a7 = result;
    }
  }
  else
  {
    sub_114801C(a1, a4, a7);
  }
  return result;
}

unsigned char *sub_1147DE4(unsigned char *result, _DWORD *a2, double *a3)
{
  uint64_t v3 = qword_2129380[*result & 0x7F];
  uint64_t v4 = qword_2129380[(*result + 1) & 0x7F];
  if (v3 == v4)
  {
LABEL_13:
    double v11 = 0.8;
  }
  else
  {
    unint64_t v5 = (double *)((char *)&unk_2129310 + 16 * v3 + 8);
    uint64_t v6 = 16 * v4 - 16 * v3;
    while (1)
    {
      int v7 = *((_DWORD *)v5 - 2);
      if (v7 == 50331648 || v7 == *(_DWORD *)result)
      {
        int v9 = *((_DWORD *)v5 - 1);
        if (v9 == 50331648 || v9 == *a2) {
          break;
        }
      }
      v5 += 2;
      v6 -= 16;
      if (!v6) {
        goto LABEL_13;
      }
    }
    double v11 = *v5;
  }
  *a3 = *a3 - v11;
  return result;
}

uint64_t sub_1147EBC(uint64_t result, uint64_t a2, double *a3)
{
  uint64_t v3 = qword_21297D0[*(unsigned char *)result & 0x7F];
  uint64_t v4 = qword_21297D0[(*(unsigned char *)result + 1) & 0x7F];
  if (v3 == v4)
  {
LABEL_21:
    double v14 = 0.0;
  }
  else
  {
    uint64_t v5 = 5 * v3;
    uint64_t v6 = (char *)&unk_2129780 + 40 * v3 + 16;
    uint64_t v7 = 40 * v4 - 8 * v5;
    while (1)
    {
      int v8 = *((_DWORD *)v6 - 4);
      if (v8 == 50331648 || v8 == *(_DWORD *)result)
      {
        uint64_t v10 = *((void *)v6 - 1);
        if ((v10 == 0x700000000000000 || v10 == *(void *)(result + 8))
          && (*(_DWORD *)v6 == 50331648 || *(_DWORD *)v6 == *(_DWORD *)a2))
        {
          uint64_t v13 = *((void *)v6 + 1);
          if (v13 == 0x700000000000000 || v13 == *(void *)(a2 + 8)) {
            break;
          }
        }
      }
      v6 += 40;
      v7 -= 40;
      if (!v7) {
        goto LABEL_21;
      }
    }
    double v14 = *((double *)v6 + 2);
  }
  *a3 = *a3 - v14;
  return result;
}

uint64_t sub_114801C(int *a1, int *a2, double *a3)
{
  uint64_t v3 = qword_212EF18[*(unsigned char *)a1 & 0x7F];
  uint64_t v4 = qword_212EF18[(*(unsigned char *)a1 + 1) & 0x7F];
  int v5 = *a1;
  if (v3 == v4)
  {
    uint64_t v6 = *((void *)a1 + 1);
    int v7 = a1[1];
    uint64_t v8 = *((void *)a2 + 1);
    int v9 = *a2;
    int v10 = a2[1];
LABEL_26:
    uint64_t v22 = 80;
    unint64_t v23 = (double *)&qword_212EEE8;
    while (1)
    {
      uint64_t result = *((unsigned int *)v23 - 8);
      if (result == 50331648 || result == v5)
      {
        uint64_t result = *((void *)v23 - 3);
        if (result == 0x700000000000000 || result == v6)
        {
          uint64_t result = *((unsigned int *)v23 - 7);
          if (result == 50331648 || result == v7)
          {
            uint64_t result = *((unsigned int *)v23 - 4);
            if (result == 50331648 || result == v9)
            {
              uint64_t result = *((void *)v23 - 1);
              if (result == 0x700000000000000 || result == v8)
              {
                uint64_t result = *((unsigned int *)v23 - 3);
                if (result == 50331648 || result == v10) {
                  break;
                }
              }
            }
          }
        }
      }
      v23 += 5;
      v22 -= 40;
      if (!v22)
      {
        double v27 = *a3 + -0.4;
        goto LABEL_50;
      }
    }
    double v28 = *v23;
  }
  else
  {
    uint64_t v6 = *((void *)a1 + 1);
    int v7 = a1[1];
    uint64_t v8 = *((void *)a2 + 1);
    int v9 = *a2;
    int v10 = a2[1];
    uint64_t v11 = 5 * v3;
    uint64_t v12 = (char *)&unk_2129BD0 + 40 * v3 + 16;
    uint64_t v13 = 40 * v4 - 8 * v11;
    while (1)
    {
      int v14 = *((_DWORD *)v12 - 4);
      if (v14 == 50331648 || v14 == v5)
      {
        uint64_t v16 = *((void *)v12 - 1);
        if (v16 == 0x700000000000000 || v16 == v6)
        {
          int v18 = *((_DWORD *)v12 - 3);
          BOOL v19 = v18 == 50331648 || v18 == v7;
          if (v19 && (*(_DWORD *)v12 == 50331648 || *(_DWORD *)v12 == v9))
          {
            uint64_t v20 = *((void *)v12 + 1);
            if (v20 == 0x700000000000000 || v20 == v8)
            {
              uint64_t result = *((unsigned int *)v12 + 1);
              if (result == 50331648 || result == v10) {
                break;
              }
            }
          }
        }
      }
      v12 += 40;
      v13 -= 40;
      if (!v13) {
        goto LABEL_26;
      }
    }
    double v28 = *((double *)v12 + 2);
  }
  double v27 = *a3 - v28;
LABEL_50:
  *a3 = v27;
  return result;
}

unint64_t sub_11481C8(uint64_t **a1, void *a2, unsigned int **a3, int *a4)
{
  uint64_t v4 = 0x1FFFFFFFFLL;
  if (a2[1] != *a2)
  {
    unsigned int v9 = 0;
    char v8 = 0;
    uint64_t v6 = sub_114823C(a1, (uint64_t)a2, a3, &v9, a4, &v8, 1u);
    if ((uint64_t *)a2[1] != v6) {
      return (((unint64_t)v6 - *a2) >> 4) | ((unint64_t)v9 << 32);
    }
  }
  return v4;
}

uint64_t *sub_114823C(uint64_t **a1, uint64_t a2, unsigned int **a3, _DWORD *a4, int *a5, unsigned char *a6, unsigned int a7)
{
  int64_t v53 = 0;
  int v54 = 0;
  uint64_t v55 = 0;
  __p = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  sub_1139150((uint64_t)&v53, 0);
  sub_113962C((uint64_t)&__p, 0);
  sub_113965C(&v53, a3[1] - *a3);
  sub_113196C(&__p, a3[1] - *a3);
  uint64_t v44 = a6;
  unsigned int v45 = a7;
  int v10 = *a3;
  uint64_t v11 = a3[1];
  if (*a3 != v11)
  {
    uint64_t v12 = *(uint64_t **)a2;
    uint64_t v13 = (*(void *)(a2 + 8) - *(void *)a2) >> 4;
    do
    {
      uint64_t v14 = *v10;
      if ((v14 & 0x80000000) == 0 && (int)v14 < (int)v13)
      {
        double v15 = &v12[2 * v14];
        uint64_t v16 = v54;
        if (v54 >= v55)
        {
          uint64_t v18 = (v54 - (unsigned char *)v53) >> 4;
          unint64_t v19 = v18 + 1;
          if ((unint64_t)(v18 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v20 = v55 - (unsigned char *)v53;
          if ((v55 - (unsigned char *)v53) >> 3 > v19) {
            unint64_t v19 = v20 >> 3;
          }
          if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v21 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v21 = v19;
          }
          if (v21) {
            uint64_t v22 = (char *)sub_1121C00((uint64_t)&v55, v21);
          }
          else {
            uint64_t v22 = 0;
          }
          unint64_t v23 = &v22[16 * v18];
          *(_OWORD *)unint64_t v23 = *(_OWORD *)v15;
          double v25 = (char *)v53;
          unint64_t v24 = v54;
          int v26 = v23;
          if (v54 != v53)
          {
            do
            {
              *((_OWORD *)v26 - 1) = *((_OWORD *)v24 - 1);
              v26 -= 16;
              v24 -= 16;
            }
            while (v24 != v25);
            unint64_t v24 = (char *)v53;
          }
          uint64_t v17 = v23 + 16;
          int64_t v53 = v26;
          int v54 = v23 + 16;
          uint64_t v55 = &v22[16 * v21];
          if (v24) {
            operator delete(v24);
          }
        }
        else
        {
          *(_OWORD *)int v54 = *(_OWORD *)v15;
          uint64_t v17 = v16 + 16;
        }
        int v54 = v17;
        double v27 = v51;
        if (v51 >= v52)
        {
          uint64_t v29 = (v51 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v29 + 1) >> 61) {
            sub_2E00();
          }
          unint64_t v30 = (v52 - (unsigned char *)__p) >> 2;
          if (v30 <= v29 + 1) {
            unint64_t v30 = v29 + 1;
          }
          if ((unint64_t)(v52 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v31 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v31 = v30;
          }
          if (v31) {
            uint64_t v32 = (char *)sub_1122DC0((uint64_t)&v52, v31);
          }
          else {
            uint64_t v32 = 0;
          }
          uint64_t v33 = (uint64_t **)&v32[8 * v29];
          *uint64_t v33 = v15;
          double v28 = (char *)(v33 + 1);
          unint64_t v35 = (char *)__p;
          unint64_t v34 = v51;
          if (v51 != __p)
          {
            do
            {
              uint64_t v36 = (uint64_t *)*((void *)v34 - 1);
              v34 -= 8;
              *--uint64_t v33 = v36;
            }
            while (v34 != v35);
            unint64_t v34 = (char *)__p;
          }
          __p = v33;
          uint64_t v51 = v28;
          uint64_t v52 = &v32[8 * v31];
          if (v34) {
            operator delete(v34);
          }
        }
        else
        {
          *(void *)uint64_t v51 = v15;
          double v28 = v27 + 8;
        }
        uint64_t v51 = v28;
      }
      ++v10;
    }
    while (v10 != v11);
  }
  int v37 = v53;
  uint64_t v38 = (uint64_t *)v54;
  uint64_t v39 = sub_1147A88(a1, (uint64_t **)&v53, a5);
  if (v38 != v39)
  {
    *a4 = 0;
    uint64_t v40 = (char *)v39 - v37;
    unint64_t v41 = (char *)__p;
    int v42 = *(uint64_t **)((char *)__p + (v40 >> 1));
LABEL_41:
    uint64_t v51 = v41;
    operator delete(v41);
    goto LABEL_42;
  }
  int v42 = sub_11476B8(a1, (uint64_t **)a2, a4, (uint64_t)a5, v44, 1u, v45);
  *a4 = 1;
  unint64_t v41 = (char *)__p;
  if (__p) {
    goto LABEL_41;
  }
LABEL_42:
  if (v53)
  {
    int v54 = (char *)v53;
    operator delete(v53);
  }
  return v42;
}

void sub_1148554(uint64_t **a1@<X0>, void *a2@<X1>, long long *a3@<X2>, void **a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  uint64_t v5 = a2[1] - *a2;
  if (v5)
  {
    sub_113196C(a4, v5 >> 4);
    LODWORD(v66) = 50331648;
    *((void *)&v66 + 1) = 0;
    uint64_t v67 = -4294967282;
    if (a3)
    {
      long long v66 = *a3;
      uint64_t v67 = *((void *)a3 + 2);
      uint64_t v56 = &v66;
    }
    else
    {
      uint64_t v56 = 0;
    }
    v63 = 0;
    v64 = 0;
    v65 = 0;
    __p = 0;
    double v61 = 0;
    v62 = 0;
    sub_1139150((uint64_t)&v63, 0);
    sub_113962C((uint64_t)&__p, 0);
    uint64_t v55 = a3;
    char v8 = (_OWORD *)*a2;
    if (*a2 == a2[1])
    {
      unint64_t v30 = (_OWORD *)*a2;
    }
    else
    {
      do
      {
        unsigned int v9 = v64;
        if (v64 >= v65)
        {
          uint64_t v11 = (v64 - (unsigned char *)v63) >> 4;
          unint64_t v12 = v11 + 1;
          if ((unint64_t)(v11 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v13 = v65 - (unsigned char *)v63;
          if ((v65 - (unsigned char *)v63) >> 3 > v12) {
            unint64_t v12 = v13 >> 3;
          }
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v14 = v12;
          }
          if (v14) {
            double v15 = (char *)sub_1121C00((uint64_t)&v65, v14);
          }
          else {
            double v15 = 0;
          }
          uint64_t v16 = &v15[16 * v11];
          *(_OWORD *)uint64_t v16 = *v8;
          uint64_t v18 = (char *)v63;
          uint64_t v17 = v64;
          unint64_t v19 = v16;
          if (v64 != v63)
          {
            do
            {
              *((_OWORD *)v19 - 1) = *((_OWORD *)v17 - 1);
              v19 -= 16;
              v17 -= 16;
            }
            while (v17 != v18);
            uint64_t v17 = (char *)v63;
          }
          int v10 = v16 + 16;
          v63 = v19;
          v64 = v16 + 16;
          v65 = &v15[16 * v14];
          if (v17) {
            operator delete(v17);
          }
        }
        else
        {
          *(_OWORD *)v64 = *v8;
          int v10 = v9 + 16;
        }
        v64 = v10;
        uint64_t v20 = v61;
        if (v61 >= v62)
        {
          uint64_t v22 = (v61 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v22 + 1) >> 61) {
            sub_2E00();
          }
          unint64_t v23 = (v62 - (unsigned char *)__p) >> 2;
          if (v23 <= v22 + 1) {
            unint64_t v23 = v22 + 1;
          }
          if ((unint64_t)(v62 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v24 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v24 = v23;
          }
          if (v24) {
            double v25 = (char *)sub_1122DC0((uint64_t)&v62, v24);
          }
          else {
            double v25 = 0;
          }
          int v26 = &v25[8 * v22];
          *(void *)int v26 = v8;
          unint64_t v21 = v26 + 8;
          double v28 = (char *)__p;
          double v27 = v61;
          if (v61 != __p)
          {
            do
            {
              uint64_t v29 = *((void *)v27 - 1);
              v27 -= 8;
              *((void *)v26 - 1) = v29;
              v26 -= 8;
            }
            while (v27 != v28);
            double v27 = (char *)__p;
          }
          __p = v26;
          double v61 = v21;
          v62 = &v25[8 * v24];
          if (v27) {
            operator delete(v27);
          }
        }
        else
        {
          *(void *)double v61 = v8;
          unint64_t v21 = v20 + 8;
        }
        double v61 = v21;
        ++v8;
      }
      while (v8 != (_OWORD *)a2[1]);
      unint64_t v30 = (_OWORD *)*a2;
    }
    unsigned int v59 = 1;
    unsigned __int8 v58 = 1;
    if (((unsigned char *)a4[1] - (unsigned char *)*a4) >> 3 < (unint64_t)(v8 - v30))
    {
      do
      {
        unint64_t v31 = sub_11476B8(a1, (uint64_t **)&v63, &v59, (uint64_t)v56, &v58, v58, 1u);
        if (v64 == (char *)v31) {
          break;
        }
        uint64_t v32 = v31;
        uint64_t v33 = (char *)v31 - (unsigned char *)v63;
        unint64_t v34 = ((unint64_t)v59 << 32) | ((*(void *)((char *)__p
                                                                        + (((char *)v31 - (unsigned char *)v63) >> 1))
                                                            - *a2) >> 4);
        uint64_t v36 = (unint64_t *)a4[1];
        unint64_t v35 = (unint64_t)a4[2];
        if ((unint64_t)v36 >= v35)
        {
          uint64_t v38 = ((char *)v36 - (unsigned char *)*a4) >> 3;
          if ((unint64_t)(v38 + 1) >> 61) {
            sub_2E00();
          }
          uint64_t v39 = v35 - (void)*a4;
          uint64_t v40 = v39 >> 2;
          if (v39 >> 2 <= (unint64_t)(v38 + 1)) {
            uint64_t v40 = v38 + 1;
          }
          if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v41 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v41 = v40;
          }
          if (v41) {
            int v42 = (char *)sub_1122DC0((uint64_t)(a4 + 2), v41);
          }
          else {
            int v42 = 0;
          }
          uint64_t v43 = (unint64_t *)&v42[8 * v38];
          unint64_t *v43 = v34;
          int v37 = (char *)(v43 + 1);
          unsigned int v45 = (char *)*a4;
          uint64_t v44 = (char *)a4[1];
          if (v44 != *a4)
          {
            do
            {
              unint64_t v46 = *((void *)v44 - 1);
              v44 -= 8;
              *--uint64_t v43 = v46;
            }
            while (v44 != v45);
            uint64_t v44 = (char *)*a4;
          }
          *a4 = v43;
          a4[1] = v37;
          a4[2] = &v42[8 * v41];
          if (v44) {
            operator delete(v44);
          }
        }
        else
        {
          *uint64_t v36 = v34;
          int v37 = (char *)(v36 + 1);
        }
        a4[1] = v37;
        if (v55 && (v67 & 0x8000000000000000) == 0)
        {
          int v54 = -1;
          if (v58 != 3 && v58 != 12)
          {
            if (SHIDWORD(v67) <= (int)((unint64_t)((char *)v32 - (unsigned char *)v63) >> 4)) {
              goto LABEL_60;
            }
            int v54 = HIDWORD(v67) - 1;
          }
          HIDWORD(v67) = v54;
        }
LABEL_60:
        uint64_t v47 = v33 >> 4;
        double v48 = v64;
        unint64_t v49 = (char *)v63 + 16 * (v33 >> 4);
        for (uint64_t i = v49 + 16; i != v48; i += 16)
        {
          uint64_t v51 = *((void *)i + 1);
          *((void *)i - 2) = *(void *)i;
          *((void *)i - 1) = v51;
          v49 += 16;
        }
        v64 = v49;
        uint64_t v52 = (char *)__p + 8 * v47;
        int64_t v53 = v61 - (v52 + 8);
        if (v61 != v52 + 8)
        {
          memmove((char *)__p + 8 * v47, v52 + 8, v61 - (v52 + 8));
          int v37 = (char *)a4[1];
        }
        double v61 = &v52[v53];
      }
      while ((v37 - (unsigned char *)*a4) >> 3 < (unint64_t)((uint64_t)(a2[1] - *a2) >> 4));
    }
    if (__p)
    {
      double v61 = (char *)__p;
      operator delete(__p);
    }
    if (v63)
    {
      v64 = (char *)v63;
      operator delete(v63);
    }
  }
}

void sub_1148A00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  unint64_t v19 = *(void **)v17;
  if (*(void *)v17)
  {
    *(void *)(v17 + 8) = v19;
    operator delete(v19);
  }
  _Unwind_Resume(exception_object);
}

void sub_1148A58()
{
}

uint64_t sub_1148A6C()
{
  return 1;
}

uint64_t sub_1148A74()
{
  return 0;
}

uint64_t sub_1148A7C()
{
  return 0;
}

unint64_t sub_1148A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1148B5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1148B8C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1148C68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1148C98(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1148D7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1148DAC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1148E7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1148EC4(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1148FA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

unint64_t sub_1148FE8(uint64_t **a1, uint64_t **a2, int *a3, unsigned char *a4)
{
  uint64_t v4 = 0x1FFFFFFFFLL;
  if (a2[1] != *a2)
  {
    unsigned int v8 = 0;
    uint64_t v6 = sub_114905C(a1, a2, &v8, a3, a4, 1u, 1u);
    if (a2[1] != v6) {
      return ((unint64_t)((char *)v6 - (char *)*a2) >> 4) | ((unint64_t)v8 << 32);
    }
  }
  return v4;
}

uint64_t *sub_114905C(uint64_t **a1, uint64_t **a2, _DWORD *a3, int *a4, unsigned char *a5, unsigned int a6, unsigned int a7)
{
  unsigned int v7 = a7;
  unint64_t v9 = a4;
  if (a4) {
    int v11 = *a4;
  }
  else {
    int v11 = 50331648;
  }
  v79 = a2[1];
  v70 = *a2;
  int v80 = v11;
  *a5 = a6;
  if (a6 > a7)
  {
LABEL_5:
    *a3 = 1;
    *a5 = 0;
    return v79;
  }
  while (2)
  {
    switch((char)a6)
    {
      case 1:
        uint64_t v14 = (uint64_t)sub_11498B0(a1, a2, &v80);
        goto LABEL_116;
      case 2:
        uint64_t v14 = (uint64_t)sub_113AD0C(a1, a2, &v80);
        goto LABEL_116;
      case 3:
        if (!v9) {
          goto LABEL_118;
        }
        uint64_t v14 = sub_11365D8((uint64_t *)a1, a2, v9[5]);
        goto LABEL_116;
      case 4:
        if (!v9) {
          goto LABEL_118;
        }
        uint64_t v56 = *((void *)v9 + 1);
        if (!v56 || !*(void *)(v56 + 40)) {
          goto LABEL_118;
        }
        uint64_t v57 = sub_11341A4(v56);
        uint64_t v14 = sub_1136640((uint64_t *)a1, (uint64_t *)a2, v57);
        goto LABEL_116;
      case 5:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        uint64_t v38 = sub_11366B8(&v80);
        if ((v9[4] & 2) == 0) {
          goto LABEL_118;
        }
        uint64_t v39 = (uint64_t *)v38;
        uint64_t v40 = (uint64_t *)a1;
        unint64_t v41 = (uint64_t *)a2;
        int v42 = 2;
        goto LABEL_113;
      case 6:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        unsigned __int8 v58 = sub_11366B8(&v80);
        if ((v9[4] & 4) == 0) {
          goto LABEL_118;
        }
        uint64_t v39 = (uint64_t *)v58;
        uint64_t v40 = (uint64_t *)a1;
        unint64_t v41 = (uint64_t *)a2;
        int v42 = 4;
        goto LABEL_113;
      case 7:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        v69 = sub_11366B8(&v80);
        if ((v9[4] & 8) == 0) {
          goto LABEL_118;
        }
        uint64_t v39 = (uint64_t *)v69;
        uint64_t v40 = (uint64_t *)a1;
        unint64_t v41 = (uint64_t *)a2;
        int v42 = 8;
        goto LABEL_113;
      case 8:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        uint64_t v39 = (uint64_t *)sub_11366B8(&v80);
        uint64_t v40 = (uint64_t *)a1;
        unint64_t v41 = (uint64_t *)a2;
        int v42 = 15;
LABEL_113:
        uint64_t v14 = sub_113AECC(v40, v41, v39, v42);
LABEL_116:
        unint64_t v12 = (uint64_t *)v14;
        goto LABEL_117;
      case 9:
        uint64_t v14 = sub_1136940((uint64_t *)a1, (uint64_t *)a2);
        goto LABEL_116;
      case 10:
        uint64_t v14 = sub_1136B74((uint64_t *)a1, (uint64_t *)a2);
        goto LABEL_116;
      case 11:
        uint64_t v14 = sub_1136C24((uint64_t *)a1, (uint64_t *)a2);
        goto LABEL_116;
      case 12:
        if (!v9) {
          goto LABEL_118;
        }
        uint64_t v37 = v9[5];
        if ((v37 & 0x80000000) != 0 || (int)v37 >= (int)((unint64_t)((char *)a2[1] - (char *)*a2) >> 4)) {
          goto LABEL_118;
        }
        unint64_t v12 = &v70[2 * v37];
        goto LABEL_117;
      case 13:
        if (!v9) {
          goto LABEL_118;
        }
        uint64_t v43 = *((void *)v9 + 1);
        if (!v43 || !*(void *)(v43 + 40)) {
          goto LABEL_118;
        }
        uint64_t v44 = sub_11341A4(v43);
        unint64_t v12 = *a2;
        uint64_t v16 = a2[1];
        if (*a2 == v16) {
          goto LABEL_117;
        }
        while (1)
        {
          uint64_t v45 = v12[1];
          if (*(_DWORD *)v45 == *(_DWORD *)v44 && *(void *)(v45 + 8) == *(void *)(v44 + 8)) {
            goto LABEL_117;
          }
          v12 += 2;
          if (v12 == v16)
          {
LABEL_120:
            unint64_t v12 = v16;
            goto LABEL_117;
          }
        }
      case 14:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        unsigned int v59 = sub_11366B8(&v80);
        if ((v9[4] & 2) == 0) {
          goto LABEL_118;
        }
        uint64_t v16 = a2[1];
        v60 = (char *)*v59;
        v75 = (char *)v59[1];
        if (*v59 == v75) {
          goto LABEL_120;
        }
        double v61 = 0.0;
        v62 = a2[1];
        v63 = v62;
        while (2)
        {
          if ((v60[16] & 2) == 0) {
            goto LABEL_107;
          }
          unint64_t v12 = *a2;
          if (*a2 == v62)
          {
            v62 = v16;
            goto LABEL_106;
          }
          v64 = *(_DWORD **)v60;
          while (2)
          {
            v65 = (_DWORD *)v12[1];
            int v66 = **(_DWORD **)v60;
            if (v66 != *v65) {
              goto LABEL_103;
            }
            if (v66 != 16802154)
            {
              double v81 = 1.0;
              uint64_t v67 = sub_1133780((uint64_t)v64);
              uint64_t v68 = sub_1133780((uint64_t)v65);
              sub_1136E90((BOOL)v64, v67, (uint64_t)v65, v68, &v81);
              if (v81 > v61)
              {
                v63 = v12;
                double v61 = v81;
                if (v81 >= 1.0) {
                  goto LABEL_121;
                }
              }
LABEL_103:
              v12 += 2;
              uint64_t v16 = a2[1];
              v62 = v12;
              if (v12 == v16) {
                goto LABEL_106;
              }
              continue;
            }
            break;
          }
          double v61 = 100.0;
          v62 = v16;
          v63 = v12;
LABEL_106:
          unint64_t v12 = v63;
          uint64_t v16 = v62;
          v63 = v62;
          unsigned int v7 = a7;
          unint64_t v9 = a4;
          if (v12 == v62)
          {
LABEL_107:
            v60 += 24;
            unint64_t v12 = v63;
            if (v60 == v75) {
              break;
            }
            continue;
          }
          break;
        }
LABEL_117:
        if (v12 == v79)
        {
LABEL_118:
          LOBYTE(a6) = *a5 + 1;
          *a5 = a6;
          if (v7 < a6) {
            goto LABEL_5;
          }
          continue;
        }
        *a3 = *a5 > 9u;
        return v12;
      case 15:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        double v27 = sub_11366B8(&v80);
        if ((v9[4] & 4) == 0) {
          goto LABEL_118;
        }
        uint64_t v16 = a2[1];
        double v28 = (char *)*v27;
        v73 = (char *)v27[1];
        if (*v27 == v73) {
          goto LABEL_120;
        }
        double v29 = 0.0;
        unint64_t v30 = a2[1];
        unint64_t v31 = v30;
        while (1)
        {
          if ((v28[16] & 4) != 0)
          {
            unint64_t v12 = *a2;
            if (*a2 != v30)
            {
              uint64_t v32 = *(_DWORD **)v28;
              while (1)
              {
                uint64_t v33 = (_DWORD *)v12[1];
                int v34 = **(_DWORD **)v28;
                if (v34 == *v33)
                {
                  if (v34 == 16802154)
                  {
                    double v29 = 100.0;
                    unint64_t v30 = v16;
                    unint64_t v31 = v12;
                    goto LABEL_42;
                  }
                  double v81 = 1.0;
                  uint64_t v35 = sub_1133780((uint64_t)v32);
                  uint64_t v36 = sub_1133780((uint64_t)v33);
                  sub_1136E90((BOOL)v32, v35, (uint64_t)v33, v36, &v81);
                  if (v81 > v29)
                  {
                    unint64_t v31 = v12;
                    double v29 = v81;
                    if (v81 >= 1.0) {
                      goto LABEL_121;
                    }
                  }
                }
                v12 += 2;
                uint64_t v16 = a2[1];
                unint64_t v30 = v12;
                if (v12 == v16) {
                  goto LABEL_42;
                }
              }
            }
            unint64_t v30 = v16;
LABEL_42:
            unint64_t v12 = v31;
            uint64_t v16 = v30;
            unint64_t v31 = v30;
            unsigned int v7 = a7;
            unint64_t v9 = a4;
            if (v12 != v30) {
              goto LABEL_117;
            }
          }
          v28 += 24;
          unint64_t v12 = v31;
          if (v28 == v73) {
            goto LABEL_117;
          }
        }
      case 16:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        unint64_t v46 = sub_11366B8(&v80);
        if ((v9[4] & 8) == 0) {
          goto LABEL_118;
        }
        uint64_t v16 = a2[1];
        uint64_t v47 = (char *)*v46;
        v74 = (char *)v46[1];
        if (*v46 == v74) {
          goto LABEL_120;
        }
        double v48 = 0.0;
        unint64_t v49 = a2[1];
        v50 = v49;
        while (1)
        {
          if ((v47[16] & 8) != 0)
          {
            unint64_t v12 = *a2;
            if (*a2 != v49)
            {
              uint64_t v51 = *(_DWORD **)v47;
              while (1)
              {
                uint64_t v52 = (_DWORD *)v12[1];
                int v53 = **(_DWORD **)v47;
                if (v53 == *v52)
                {
                  if (v53 == 16802154)
                  {
                    double v48 = 100.0;
                    unint64_t v49 = v16;
                    v50 = v12;
                    goto LABEL_78;
                  }
                  double v81 = 1.0;
                  uint64_t v54 = sub_1133780((uint64_t)v51);
                  uint64_t v55 = sub_1133780((uint64_t)v52);
                  sub_1136E90((BOOL)v51, v54, (uint64_t)v52, v55, &v81);
                  if (v81 > v48)
                  {
                    v50 = v12;
                    double v48 = v81;
                    if (v81 >= 1.0) {
                      goto LABEL_121;
                    }
                  }
                }
                v12 += 2;
                uint64_t v16 = a2[1];
                unint64_t v49 = v12;
                if (v12 == v16) {
                  goto LABEL_78;
                }
              }
            }
            unint64_t v49 = v16;
LABEL_78:
            unint64_t v12 = v50;
            uint64_t v16 = v49;
            v50 = v49;
            unsigned int v7 = a7;
            unint64_t v9 = a4;
            if (v12 != v49) {
              goto LABEL_117;
            }
          }
          v47 += 24;
          unint64_t v12 = v50;
          if (v47 == v74) {
            goto LABEL_117;
          }
        }
      case 17:
        if (v80 == 50331648) {
          goto LABEL_118;
        }
        double v15 = sub_11366B8(&v80);
        uint64_t v16 = a2[1];
        uint64_t v17 = (double *)*v15;
        v72 = v15[1];
        if (*v15 == v72) {
          goto LABEL_120;
        }
        double v18 = 0.0;
        unint64_t v19 = a2[1];
        uint64_t v20 = v19;
        while (1)
        {
          int v21 = *((_DWORD *)v17 + 4);
          if ((v21 & 0xF) != 0 && (v21 != 1 || v17[1] > 0.5))
          {
            unint64_t v12 = *a2;
            if (*a2 != v19)
            {
              uint64_t v22 = *(int **)v17;
              while (1)
              {
                unint64_t v23 = (_DWORD *)v12[1];
                int v24 = **(_DWORD **)v17;
                if (v24 == *v23)
                {
                  if (v24 == 16802154)
                  {
                    double v18 = 100.0;
                    unint64_t v19 = v16;
                    uint64_t v20 = v12;
                    goto LABEL_24;
                  }
                  double v81 = 1.0;
                  uint64_t v25 = sub_1133780((uint64_t)v22);
                  uint64_t v26 = sub_1133780((uint64_t)v23);
                  sub_1136E90((BOOL)v22, v25, (uint64_t)v23, v26, &v81);
                  if (v81 > v18)
                  {
                    uint64_t v20 = v12;
                    double v18 = v81;
                    if (v81 >= 1.0)
                    {
LABEL_121:
                      unsigned int v7 = a7;
                      unint64_t v9 = a4;
                      goto LABEL_117;
                    }
                  }
                }
                v12 += 2;
                uint64_t v16 = a2[1];
                unint64_t v19 = v12;
                if (v12 == v16) {
                  goto LABEL_24;
                }
              }
            }
            unint64_t v19 = v16;
LABEL_24:
            unint64_t v12 = v20;
            uint64_t v16 = v19;
            uint64_t v20 = v19;
            unsigned int v7 = a7;
            unint64_t v9 = a4;
            if (v12 != v19) {
              goto LABEL_117;
            }
          }
          v17 += 3;
          unint64_t v12 = v20;
          if (v17 == (double *)v72) {
            goto LABEL_117;
          }
        }
      default:
        goto LABEL_118;
    }
  }
}

uint64_t *sub_11498B0(uint64_t **a1, uint64_t **a2, int *a3)
{
  uint64_t v3 = a2[1];
  uint64_t v4 = *a1;
  uint64_t v20 = a1[1];
  if (*a1 == v20) {
    return a2[1];
  }
  uint64_t v6 = *a2;
  int v7 = *a3;
  double v8 = 0.5;
  double v9 = 0.0;
  int v21 = a2[1];
  double v10 = 1.0;
  unint64_t v19 = *a2;
  while (v6 == v3)
  {
LABEL_13:
    double v9 = v9 + 0.07000001;
    double v10 = 1.0 - v9;
    v4 += 2;
    uint64_t v6 = v19;
    if (v8 >= 1.0 - v9 || v4 == v20) {
      return v21;
    }
  }
  uint64_t v11 = *v4;
  while (1)
  {
    uint64_t v12 = *v6;
    double v22 = 1.0;
    uint64_t v13 = sub_1133780(v11);
    uint64_t v14 = sub_1133780(v12);
    sub_1147C00(v11, v13, v12, v14, &v22);
    double v15 = v22;
    if (v7 != 50331648 && *(_DWORD *)(v6[1] + 4) == *a3) {
      double v15 = v22 + 0.0011;
    }
    double v16 = v15 - v9;
    if (v16 > v8)
    {
      double v8 = v16;
      int v21 = v6;
      if (v16 >= v10) {
        return v6;
      }
    }
    v6 += 2;
    if (v6 == v3) {
      goto LABEL_13;
    }
  }
}

unint64_t sub_1149A28(uint64_t **a1, void *a2, unsigned int **a3, int *a4)
{
  uint64_t v4 = 0x1FFFFFFFFLL;
  if (a2[1] != *a2)
  {
    unsigned int v9 = 0;
    char v8 = 0;
    uint64_t v6 = sub_1149A9C(a1, (uint64_t)a2, a3, &v9, a4, &v8, 1u);
    if ((uint64_t *)a2[1] != v6) {
      return (((unint64_t)v6 - *a2) >> 4) | ((unint64_t)v9 << 32);
    }
  }
  return v4;
}

uint64_t *sub_1149A9C(uint64_t **a1, uint64_t a2, unsigned int **a3, _DWORD *a4, int *a5, unsigned char *a6, unsigned int a7)
{
  int v53 = 0;
  uint64_t v54 = 0;
  uint64_t v55 = 0;
  __p = 0;
  uint64_t v51 = 0;
  uint64_t v52 = 0;
  sub_1139150((uint64_t)&v53, 0);
  sub_113962C((uint64_t)&__p, 0);
  sub_113965C(&v53, a3[1] - *a3);
  sub_113196C(&__p, a3[1] - *a3);
  uint64_t v44 = a6;
  unsigned int v45 = a7;
  double v10 = *a3;
  uint64_t v11 = a3[1];
  if (*a3 != v11)
  {
    uint64_t v12 = *(uint64_t **)a2;
    uint64_t v13 = (*(void *)(a2 + 8) - *(void *)a2) >> 4;
    do
    {
      uint64_t v14 = *v10;
      if ((v14 & 0x80000000) == 0 && (int)v14 < (int)v13)
      {
        double v15 = &v12[2 * v14];
        double v16 = v54;
        if (v54 >= v55)
        {
          uint64_t v18 = (v54 - (unsigned char *)v53) >> 4;
          unint64_t v19 = v18 + 1;
          if ((unint64_t)(v18 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v20 = v55 - (unsigned char *)v53;
          if ((v55 - (unsigned char *)v53) >> 3 > v19) {
            unint64_t v19 = v20 >> 3;
          }
          if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v21 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v21 = v19;
          }
          if (v21) {
            double v22 = (char *)sub_1121C00((uint64_t)&v55, v21);
          }
          else {
            double v22 = 0;
          }
          unint64_t v23 = &v22[16 * v18];
          *(_OWORD *)unint64_t v23 = *(_OWORD *)v15;
          uint64_t v25 = (char *)v53;
          int v24 = v54;
          uint64_t v26 = v23;
          if (v54 != v53)
          {
            do
            {
              *((_OWORD *)v26 - 1) = *((_OWORD *)v24 - 1);
              v26 -= 16;
              v24 -= 16;
            }
            while (v24 != v25);
            int v24 = (char *)v53;
          }
          uint64_t v17 = v23 + 16;
          int v53 = v26;
          uint64_t v54 = v23 + 16;
          uint64_t v55 = &v22[16 * v21];
          if (v24) {
            operator delete(v24);
          }
        }
        else
        {
          *(_OWORD *)uint64_t v54 = *(_OWORD *)v15;
          uint64_t v17 = v16 + 16;
        }
        uint64_t v54 = v17;
        double v27 = v51;
        if (v51 >= v52)
        {
          uint64_t v29 = (v51 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v29 + 1) >> 61) {
            sub_2E00();
          }
          unint64_t v30 = (v52 - (unsigned char *)__p) >> 2;
          if (v30 <= v29 + 1) {
            unint64_t v30 = v29 + 1;
          }
          if ((unint64_t)(v52 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v31 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v31 = v30;
          }
          if (v31) {
            uint64_t v32 = (char *)sub_1122DC0((uint64_t)&v52, v31);
          }
          else {
            uint64_t v32 = 0;
          }
          uint64_t v33 = (uint64_t **)&v32[8 * v29];
          *uint64_t v33 = v15;
          double v28 = (char *)(v33 + 1);
          uint64_t v35 = (char *)__p;
          int v34 = v51;
          if (v51 != __p)
          {
            do
            {
              uint64_t v36 = (uint64_t *)*((void *)v34 - 1);
              v34 -= 8;
              *--uint64_t v33 = v36;
            }
            while (v34 != v35);
            int v34 = (char *)__p;
          }
          __p = v33;
          uint64_t v51 = v28;
          uint64_t v52 = &v32[8 * v31];
          if (v34) {
            operator delete(v34);
          }
        }
        else
        {
          *(void *)uint64_t v51 = v15;
          double v28 = v27 + 8;
        }
        uint64_t v51 = v28;
      }
      ++v10;
    }
    while (v10 != v11);
  }
  uint64_t v37 = v53;
  uint64_t v38 = (uint64_t *)v54;
  uint64_t v39 = sub_11498B0(a1, (uint64_t **)&v53, a5);
  if (v38 != v39)
  {
    *a4 = 0;
    uint64_t v40 = (char *)v39 - v37;
    unint64_t v41 = (char *)__p;
    int v42 = *(uint64_t **)((char *)__p + (v40 >> 1));
LABEL_41:
    uint64_t v51 = v41;
    operator delete(v41);
    goto LABEL_42;
  }
  int v42 = sub_114905C(a1, (uint64_t **)a2, a4, a5, v44, 1u, v45);
  *a4 = 1;
  unint64_t v41 = (char *)__p;
  if (__p) {
    goto LABEL_41;
  }
LABEL_42:
  if (v53)
  {
    uint64_t v54 = (char *)v53;
    operator delete(v53);
  }
  return v42;
}

void sub_1149DB4(uint64_t **a1@<X0>, void *a2@<X1>, long long *a3@<X2>, void **a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  uint64_t v5 = a2[1] - *a2;
  if (v5)
  {
    sub_113196C(a4, v5 >> 4);
    LODWORD(v66) = 50331648;
    *((void *)&v66 + 1) = 0;
    uint64_t v67 = -4294967282;
    if (a3)
    {
      long long v66 = *a3;
      uint64_t v67 = *((void *)a3 + 2);
      uint64_t v56 = (int *)&v66;
    }
    else
    {
      uint64_t v56 = 0;
    }
    v63 = 0;
    v64 = 0;
    v65 = 0;
    __p = 0;
    double v61 = 0;
    v62 = 0;
    sub_1139150((uint64_t)&v63, 0);
    sub_113962C((uint64_t)&__p, 0);
    uint64_t v55 = a3;
    char v8 = (_OWORD *)*a2;
    if (*a2 == a2[1])
    {
      unint64_t v30 = (_OWORD *)*a2;
    }
    else
    {
      do
      {
        unsigned int v9 = v64;
        if (v64 >= v65)
        {
          uint64_t v11 = (v64 - (unsigned char *)v63) >> 4;
          unint64_t v12 = v11 + 1;
          if ((unint64_t)(v11 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v13 = v65 - (unsigned char *)v63;
          if ((v65 - (unsigned char *)v63) >> 3 > v12) {
            unint64_t v12 = v13 >> 3;
          }
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v14 = v12;
          }
          if (v14) {
            double v15 = (char *)sub_1121C00((uint64_t)&v65, v14);
          }
          else {
            double v15 = 0;
          }
          double v16 = &v15[16 * v11];
          *(_OWORD *)double v16 = *v8;
          uint64_t v18 = (char *)v63;
          uint64_t v17 = v64;
          unint64_t v19 = v16;
          if (v64 != v63)
          {
            do
            {
              *((_OWORD *)v19 - 1) = *((_OWORD *)v17 - 1);
              v19 -= 16;
              v17 -= 16;
            }
            while (v17 != v18);
            uint64_t v17 = (char *)v63;
          }
          double v10 = v16 + 16;
          v63 = v19;
          v64 = v16 + 16;
          v65 = &v15[16 * v14];
          if (v17) {
            operator delete(v17);
          }
        }
        else
        {
          *(_OWORD *)v64 = *v8;
          double v10 = v9 + 16;
        }
        v64 = v10;
        uint64_t v20 = v61;
        if (v61 >= v62)
        {
          uint64_t v22 = (v61 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v22 + 1) >> 61) {
            sub_2E00();
          }
          unint64_t v23 = (v62 - (unsigned char *)__p) >> 2;
          if (v23 <= v22 + 1) {
            unint64_t v23 = v22 + 1;
          }
          if ((unint64_t)(v62 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v24 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v24 = v23;
          }
          if (v24) {
            uint64_t v25 = (char *)sub_1122DC0((uint64_t)&v62, v24);
          }
          else {
            uint64_t v25 = 0;
          }
          uint64_t v26 = &v25[8 * v22];
          *(void *)uint64_t v26 = v8;
          unint64_t v21 = v26 + 8;
          double v28 = (char *)__p;
          double v27 = v61;
          if (v61 != __p)
          {
            do
            {
              uint64_t v29 = *((void *)v27 - 1);
              v27 -= 8;
              *((void *)v26 - 1) = v29;
              v26 -= 8;
            }
            while (v27 != v28);
            double v27 = (char *)__p;
          }
          __p = v26;
          double v61 = v21;
          v62 = &v25[8 * v24];
          if (v27) {
            operator delete(v27);
          }
        }
        else
        {
          *(void *)double v61 = v8;
          unint64_t v21 = v20 + 8;
        }
        double v61 = v21;
        ++v8;
      }
      while (v8 != (_OWORD *)a2[1]);
      unint64_t v30 = (_OWORD *)*a2;
    }
    unsigned int v59 = 1;
    unsigned __int8 v58 = 1;
    if (((unsigned char *)a4[1] - (unsigned char *)*a4) >> 3 < (unint64_t)(v8 - v30))
    {
      do
      {
        unint64_t v31 = sub_114905C(a1, (uint64_t **)&v63, &v59, v56, &v58, v58, 1u);
        if (v64 == (char *)v31) {
          break;
        }
        uint64_t v32 = v31;
        uint64_t v33 = (char *)v31 - (unsigned char *)v63;
        unint64_t v34 = ((unint64_t)v59 << 32) | ((*(void *)((char *)__p
                                                                        + (((char *)v31 - (unsigned char *)v63) >> 1))
                                                            - *a2) >> 4);
        uint64_t v36 = (unint64_t *)a4[1];
        unint64_t v35 = (unint64_t)a4[2];
        if ((unint64_t)v36 >= v35)
        {
          uint64_t v38 = ((char *)v36 - (unsigned char *)*a4) >> 3;
          if ((unint64_t)(v38 + 1) >> 61) {
            sub_2E00();
          }
          uint64_t v39 = v35 - (void)*a4;
          uint64_t v40 = v39 >> 2;
          if (v39 >> 2 <= (unint64_t)(v38 + 1)) {
            uint64_t v40 = v38 + 1;
          }
          if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v41 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v41 = v40;
          }
          if (v41) {
            int v42 = (char *)sub_1122DC0((uint64_t)(a4 + 2), v41);
          }
          else {
            int v42 = 0;
          }
          uint64_t v43 = (unint64_t *)&v42[8 * v38];
          unint64_t *v43 = v34;
          uint64_t v37 = (char *)(v43 + 1);
          unsigned int v45 = (char *)*a4;
          uint64_t v44 = (char *)a4[1];
          if (v44 != *a4)
          {
            do
            {
              unint64_t v46 = *((void *)v44 - 1);
              v44 -= 8;
              *--uint64_t v43 = v46;
            }
            while (v44 != v45);
            uint64_t v44 = (char *)*a4;
          }
          *a4 = v43;
          a4[1] = v37;
          a4[2] = &v42[8 * v41];
          if (v44) {
            operator delete(v44);
          }
        }
        else
        {
          *uint64_t v36 = v34;
          uint64_t v37 = (char *)(v36 + 1);
        }
        a4[1] = v37;
        if (v55 && (v67 & 0x8000000000000000) == 0)
        {
          int v54 = -1;
          if (v58 != 3 && v58 != 12)
          {
            if (SHIDWORD(v67) <= (int)((unint64_t)((char *)v32 - (unsigned char *)v63) >> 4)) {
              goto LABEL_60;
            }
            int v54 = HIDWORD(v67) - 1;
          }
          HIDWORD(v67) = v54;
        }
LABEL_60:
        uint64_t v47 = v33 >> 4;
        double v48 = v64;
        unint64_t v49 = (char *)v63 + 16 * (v33 >> 4);
        for (uint64_t i = v49 + 16; i != v48; i += 16)
        {
          uint64_t v51 = *((void *)i + 1);
          *((void *)i - 2) = *(void *)i;
          *((void *)i - 1) = v51;
          v49 += 16;
        }
        v64 = v49;
        uint64_t v52 = (char *)__p + 8 * v47;
        int64_t v53 = v61 - (v52 + 8);
        if (v61 != v52 + 8)
        {
          memmove((char *)__p + 8 * v47, v52 + 8, v61 - (v52 + 8));
          uint64_t v37 = (char *)a4[1];
        }
        double v61 = &v52[v53];
      }
      while ((v37 - (unsigned char *)*a4) >> 3 < (unint64_t)((uint64_t)(a2[1] - *a2) >> 4));
    }
    if (__p)
    {
      double v61 = (char *)__p;
      operator delete(__p);
    }
    if (v63)
    {
      v64 = (char *)v63;
      operator delete(v63);
    }
  }
}

void sub_114A260(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  unint64_t v19 = *(void **)v17;
  if (*(void *)v17)
  {
    *(void *)(v17 + 8) = v19;
    operator delete(v19);
  }
  _Unwind_Resume(exception_object);
}

void sub_114A2B8()
{
}

uint64_t sub_114A2CC()
{
  return 1;
}

uint64_t sub_114A2D4()
{
  return 0;
}

uint64_t sub_114A2DC()
{
  return 1;
}

unint64_t sub_114A2E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114A3BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114A3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114A4C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114A4F8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114A5DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114A60C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114A6DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114A724(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114A800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114A84C()
{
}

uint64_t sub_114A860()
{
  return 1;
}

uint64_t sub_114A868()
{
  return 0;
}

uint64_t sub_114A870()
{
  return 1;
}

unint64_t sub_114A878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114A950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114A980(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114AA5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114AA8C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114AB70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114ABA0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114AC70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114ACB8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114AD94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114ADE0()
{
}

uint64_t sub_114ADF4()
{
  return 1;
}

uint64_t sub_114ADFC()
{
  return 0;
}

uint64_t sub_114AE04()
{
  return 2;
}

unint64_t sub_114AE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114AEE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114AF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114AFF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114B020(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114B104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114B134(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114B204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114B24C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114B328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114B374()
{
}

uint64_t sub_114B388()
{
  return 1;
}

uint64_t sub_114B390()
{
  return 0;
}

uint64_t sub_114B398()
{
  return 2;
}

unint64_t sub_114B3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114B478(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114B4A8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114B584(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114B5B4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114B698(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114B6C8(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114B798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114B7E0(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114B8BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114B908()
{
}

uint64_t sub_114B91C()
{
  return 1;
}

uint64_t sub_114B924()
{
  return 0;
}

uint64_t sub_114B92C()
{
  return 3;
}

unint64_t sub_114B934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114BA0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114BA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114BB18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114BB48(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114BC2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114BC5C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114BD2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114BD74(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114BE50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114BE9C()
{
}

uint64_t sub_114BEB0()
{
  return 1;
}

uint64_t sub_114BEB8()
{
  return 0;
}

uint64_t sub_114BEC0()
{
  return 3;
}

unint64_t sub_114BEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114BFA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114BFD0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114C0AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114C0DC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114C1C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114C1F0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114C2C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114C308(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114C3E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114C430()
{
}

uint64_t sub_114C444()
{
  return 1;
}

uint64_t sub_114C44C()
{
  return 1;
}

uint64_t sub_114C454()
{
  return 0;
}

unint64_t sub_114C45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114C534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114C564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114C640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114C670(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114C754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114C784(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114C854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114C89C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114C978(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114C9C4()
{
}

uint64_t sub_114C9D8()
{
  return 1;
}

uint64_t sub_114C9E0()
{
  return 1;
}

uint64_t sub_114C9E8()
{
  return 0;
}

unint64_t sub_114C9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114CAC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114CAF8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114CBD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114CC04(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114CCE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114CD18(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114CDE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114CE30(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114CF0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114CF58()
{
}

uint64_t sub_114CF6C()
{
  return 1;
}

uint64_t sub_114CF74()
{
  return 1;
}

uint64_t sub_114CF7C()
{
  return 1;
}

unint64_t sub_114CF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114D05C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114D08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114D168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114D198(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114D27C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114D2AC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114D37C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114D3C4(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114D4A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114D4EC()
{
}

uint64_t sub_114D500()
{
  return 1;
}

uint64_t sub_114D508()
{
  return 1;
}

uint64_t sub_114D510()
{
  return 1;
}

unint64_t sub_114D518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114D5F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114D620(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114D6FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114D72C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114D810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114D840(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114D910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114D958(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114DA34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114DA80()
{
}

uint64_t sub_114DA94()
{
  return 1;
}

uint64_t sub_114DA9C()
{
  return 1;
}

uint64_t sub_114DAA4()
{
  return 2;
}

unint64_t sub_114DAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114DB84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114DBB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114DC90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114DCC0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114DDA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114DDD4(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114DEA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114DEEC(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114DFC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114E014()
{
}

uint64_t sub_114E028()
{
  return 1;
}

uint64_t sub_114E030()
{
  return 1;
}

uint64_t sub_114E038()
{
  return 2;
}

unint64_t sub_114E040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114E118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114E148(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114E224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114E254(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114E338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114E368(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114E438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114E480(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114E55C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114E5A8()
{
}

uint64_t sub_114E5BC()
{
  return 1;
}

uint64_t sub_114E5C4()
{
  return 1;
}

uint64_t sub_114E5CC()
{
  return 3;
}

unint64_t sub_114E5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114E6AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114E6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114E7B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114E7E8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114E8CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114E8FC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114E9CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114EA14(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114EAF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114EB3C()
{
}

uint64_t sub_114EB50()
{
  return 1;
}

uint64_t sub_114EB58()
{
  return 1;
}

uint64_t sub_114EB60()
{
  return 3;
}

unint64_t sub_114EB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114EC40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114EC70(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114ED4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114ED7C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114EE60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114EE90(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114EF60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114EFA8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114F084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114F0D0()
{
}

uint64_t sub_114F0E4()
{
  return 1;
}

uint64_t sub_114F0EC()
{
  return 2;
}

uint64_t sub_114F0F4()
{
  return 0;
}

unint64_t sub_114F0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114F1D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114F204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114F2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114F310(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114F3F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114F424(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114F4F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114F53C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114F618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114F664()
{
}

uint64_t sub_114F678()
{
  return 1;
}

uint64_t sub_114F680()
{
  return 2;
}

uint64_t sub_114F688()
{
  return 0;
}

unint64_t sub_114F690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114F768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114F798(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114F874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114F8A4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114F988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114F9B8(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_114FA88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114FAD0(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_114FBAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_114FBF8()
{
}

uint64_t sub_114FC0C()
{
  return 1;
}

uint64_t sub_114FC14()
{
  return 2;
}

uint64_t sub_114FC1C()
{
  return 1;
}

unint64_t sub_114FC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_114FCFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114FD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_114FE08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_114FE38(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_114FF1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_114FF4C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115001C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1150064(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1150140(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115018C()
{
}

uint64_t sub_11501A0()
{
  return 1;
}

uint64_t sub_11501A8()
{
  return 2;
}

uint64_t sub_11501B0()
{
  return 1;
}

unint64_t sub_11501B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1150290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11502C0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115039C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11503CC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11504B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11504E0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11505B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11505F8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11506D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1150720()
{
}

uint64_t sub_1150734()
{
  return 1;
}

uint64_t sub_115073C()
{
  return 2;
}

uint64_t sub_1150744()
{
  return 2;
}

unint64_t sub_115074C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1150824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1150854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1150930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1150960(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1150A44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1150A74(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1150B44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1150B8C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1150C68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1150CB4()
{
}

uint64_t sub_1150CC8()
{
  return 1;
}

uint64_t sub_1150CD0()
{
  return 2;
}

uint64_t sub_1150CD8()
{
  return 2;
}

unint64_t sub_1150CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1150DB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1150DE8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1150EC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1150EF4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1150FD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1151008(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11510D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1151120(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11511FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1151248()
{
}

uint64_t sub_115125C()
{
  return 1;
}

uint64_t sub_1151264()
{
  return 2;
}

uint64_t sub_115126C()
{
  return 3;
}

unint64_t sub_1151274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115134C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115137C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1151458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1151488(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115156C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115159C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115166C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11516B4(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1151790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11517DC()
{
}

uint64_t sub_11517F0()
{
  return 1;
}

uint64_t sub_11517F8()
{
  return 2;
}

uint64_t sub_1151800()
{
  return 3;
}

unint64_t sub_1151808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11518E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1151910(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11519EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1151A1C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1151B00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1151B30(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1151C00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1151C48(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1151D24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1151D70()
{
}

uint64_t sub_1151D84()
{
  return 1;
}

uint64_t sub_1151D8C()
{
  return 3;
}

uint64_t sub_1151D94()
{
  return 0;
}

unint64_t sub_1151D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1151E74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1151EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1151F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1151FB0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1152094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11520C4(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1152194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11521DC(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11522B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1152304()
{
}

uint64_t sub_1152318()
{
  return 1;
}

uint64_t sub_1152320()
{
  return 3;
}

uint64_t sub_1152328()
{
  return 0;
}

unint64_t sub_1152330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1152408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1152438(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1152514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1152544(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1152628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1152658(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1152728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1152770(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115284C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1152898()
{
}

uint64_t sub_11528AC()
{
  return 1;
}

uint64_t sub_11528B4()
{
  return 3;
}

uint64_t sub_11528BC()
{
  return 1;
}

unint64_t sub_11528C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115299C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11529CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1152AA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1152AD8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1152BBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1152BEC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1152CBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1152D04(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1152DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1152E2C()
{
}

uint64_t sub_1152E40()
{
  return 1;
}

uint64_t sub_1152E48()
{
  return 3;
}

uint64_t sub_1152E50()
{
  return 1;
}

unint64_t sub_1152E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1152F30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1152F60(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115303C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115306C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1153150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1153180(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1153250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1153298(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1153374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11533C0()
{
}

uint64_t sub_11533D4()
{
  return 1;
}

uint64_t sub_11533DC()
{
  return 3;
}

uint64_t sub_11533E4()
{
  return 2;
}

unint64_t sub_11533EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11534C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11534F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11535D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1153600(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11536E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1153714(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11537E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115382C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1153908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1153954()
{
}

uint64_t sub_1153968()
{
  return 1;
}

uint64_t sub_1153970()
{
  return 3;
}

uint64_t sub_1153978()
{
  return 2;
}

unint64_t sub_1153980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1153A58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1153A88(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1153B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1153B94(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1153C78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1153CA8(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1153D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1153DC0(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1153E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1153EE8()
{
}

uint64_t sub_1153EFC()
{
  return 1;
}

uint64_t sub_1153F04()
{
  return 3;
}

uint64_t sub_1153F0C()
{
  return 3;
}

unint64_t sub_1153F14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1147644((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1153FEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115401C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1147644((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11540F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1154128(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_11481C8((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115420C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115423C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115430C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1154354(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1148554((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1154430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115447C()
{
}

uint64_t sub_1154490()
{
  return 1;
}

uint64_t sub_1154498()
{
  return 3;
}

uint64_t sub_11544A0()
{
  return 3;
}

unint64_t sub_11544A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1148FE8((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1154580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11545B0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1148FE8((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115468C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11546BC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1149A28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11547A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11547D0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11548A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11548E8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1149DB4((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11549C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1154A10()
{
}

uint64_t sub_1154A24()
{
  return 2;
}

uint64_t sub_1154A2C()
{
  return 0;
}

uint64_t sub_1154A34()
{
  return 0;
}

unint64_t sub_1154A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1154B14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1154B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1154C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1154C50(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1154D34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1154D64(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1154E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1154E7C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1154F58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

unint64_t sub_1154FA0(uint64_t **a1, uint64_t **a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v4 = 0x1FFFFFFFFLL;
  if (a2[1] != *a2)
  {
    unsigned int v8 = 0;
    uint64_t v6 = sub_1135E68(a1, a2, &v8, a3, a4, 1u, 0x11u);
    if (a2[1] != v6) {
      return ((unint64_t)((char *)v6 - (char *)*a2) >> 4) | ((unint64_t)v8 << 32);
    }
  }
  return v4;
}

unint64_t sub_1155014(uint64_t **a1, void *a2, unsigned int **a3, int *a4)
{
  uint64_t v4 = 0x1FFFFFFFFLL;
  if (a2[1] != *a2)
  {
    unsigned int v9 = 0;
    char v8 = 0;
    uint64_t v6 = sub_1139314(a1, (uint64_t)a2, a3, &v9, a4, &v8, 0x11u);
    if ((uint64_t *)a2[1] != v6) {
      return (((unint64_t)v6 - *a2) >> 4) | ((unint64_t)v9 << 32);
    }
  }
  return v4;
}

void sub_1155088(uint64_t **a1@<X0>, void *a2@<X1>, long long *a3@<X2>, void **a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  uint64_t v5 = a2[1] - *a2;
  if (v5)
  {
    sub_113196C(a4, v5 >> 4);
    LODWORD(v66) = 50331648;
    *((void *)&v66 + 1) = 0;
    uint64_t v67 = -4294967282;
    if (a3)
    {
      long long v66 = *a3;
      uint64_t v67 = *((void *)a3 + 2);
      uint64_t v56 = &v66;
    }
    else
    {
      uint64_t v56 = 0;
    }
    v63 = 0;
    v64 = 0;
    v65 = 0;
    __p = 0;
    double v61 = 0;
    v62 = 0;
    sub_1139150((uint64_t)&v63, 0);
    sub_113962C((uint64_t)&__p, 0);
    uint64_t v55 = a3;
    char v8 = (_OWORD *)*a2;
    if (*a2 == a2[1])
    {
      unint64_t v30 = (_OWORD *)*a2;
    }
    else
    {
      do
      {
        unsigned int v9 = v64;
        if (v64 >= v65)
        {
          uint64_t v11 = (v64 - (unsigned char *)v63) >> 4;
          unint64_t v12 = v11 + 1;
          if ((unint64_t)(v11 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v13 = v65 - (unsigned char *)v63;
          if ((v65 - (unsigned char *)v63) >> 3 > v12) {
            unint64_t v12 = v13 >> 3;
          }
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v14 = v12;
          }
          if (v14) {
            double v15 = (char *)sub_1121C00((uint64_t)&v65, v14);
          }
          else {
            double v15 = 0;
          }
          double v16 = &v15[16 * v11];
          *(_OWORD *)double v16 = *v8;
          uint64_t v18 = (char *)v63;
          uint64_t v17 = v64;
          unint64_t v19 = v16;
          if (v64 != v63)
          {
            do
            {
              *((_OWORD *)v19 - 1) = *((_OWORD *)v17 - 1);
              v19 -= 16;
              v17 -= 16;
            }
            while (v17 != v18);
            uint64_t v17 = (char *)v63;
          }
          double v10 = v16 + 16;
          v63 = v19;
          v64 = v16 + 16;
          v65 = &v15[16 * v14];
          if (v17) {
            operator delete(v17);
          }
        }
        else
        {
          *(_OWORD *)v64 = *v8;
          double v10 = v9 + 16;
        }
        v64 = v10;
        uint64_t v20 = v61;
        if (v61 >= v62)
        {
          uint64_t v22 = (v61 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v22 + 1) >> 61) {
            sub_2E00();
          }
          unint64_t v23 = (v62 - (unsigned char *)__p) >> 2;
          if (v23 <= v22 + 1) {
            unint64_t v23 = v22 + 1;
          }
          if ((unint64_t)(v62 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v24 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v24 = v23;
          }
          if (v24) {
            uint64_t v25 = (char *)sub_1122DC0((uint64_t)&v62, v24);
          }
          else {
            uint64_t v25 = 0;
          }
          uint64_t v26 = &v25[8 * v22];
          *(void *)uint64_t v26 = v8;
          unint64_t v21 = v26 + 8;
          double v28 = (char *)__p;
          double v27 = v61;
          if (v61 != __p)
          {
            do
            {
              uint64_t v29 = *((void *)v27 - 1);
              v27 -= 8;
              *((void *)v26 - 1) = v29;
              v26 -= 8;
            }
            while (v27 != v28);
            double v27 = (char *)__p;
          }
          __p = v26;
          double v61 = v21;
          v62 = &v25[8 * v24];
          if (v27) {
            operator delete(v27);
          }
        }
        else
        {
          *(void *)double v61 = v8;
          unint64_t v21 = v20 + 8;
        }
        double v61 = v21;
        ++v8;
      }
      while (v8 != (_OWORD *)a2[1]);
      unint64_t v30 = (_OWORD *)*a2;
    }
    unsigned int v59 = 1;
    unsigned __int8 v58 = 1;
    if (((unsigned char *)a4[1] - (unsigned char *)*a4) >> 3 < (unint64_t)(v8 - v30))
    {
      do
      {
        unint64_t v31 = sub_1135E68(a1, (uint64_t **)&v63, &v59, (uint64_t)v56, &v58, v58, 0x11u);
        if (v64 == (char *)v31) {
          break;
        }
        uint64_t v32 = v31;
        uint64_t v33 = (char *)v31 - (unsigned char *)v63;
        unint64_t v34 = ((unint64_t)v59 << 32) | ((*(void *)((char *)__p
                                                                        + (((char *)v31 - (unsigned char *)v63) >> 1))
                                                            - *a2) >> 4);
        uint64_t v36 = (unint64_t *)a4[1];
        unint64_t v35 = (unint64_t)a4[2];
        if ((unint64_t)v36 >= v35)
        {
          uint64_t v38 = ((char *)v36 - (unsigned char *)*a4) >> 3;
          if ((unint64_t)(v38 + 1) >> 61) {
            sub_2E00();
          }
          uint64_t v39 = v35 - (void)*a4;
          uint64_t v40 = v39 >> 2;
          if (v39 >> 2 <= (unint64_t)(v38 + 1)) {
            uint64_t v40 = v38 + 1;
          }
          if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v41 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v41 = v40;
          }
          if (v41) {
            int v42 = (char *)sub_1122DC0((uint64_t)(a4 + 2), v41);
          }
          else {
            int v42 = 0;
          }
          uint64_t v43 = (unint64_t *)&v42[8 * v38];
          unint64_t *v43 = v34;
          uint64_t v37 = (char *)(v43 + 1);
          unsigned int v45 = (char *)*a4;
          uint64_t v44 = (char *)a4[1];
          if (v44 != *a4)
          {
            do
            {
              unint64_t v46 = *((void *)v44 - 1);
              v44 -= 8;
              *--uint64_t v43 = v46;
            }
            while (v44 != v45);
            uint64_t v44 = (char *)*a4;
          }
          *a4 = v43;
          a4[1] = v37;
          a4[2] = &v42[8 * v41];
          if (v44) {
            operator delete(v44);
          }
        }
        else
        {
          *uint64_t v36 = v34;
          uint64_t v37 = (char *)(v36 + 1);
        }
        a4[1] = v37;
        if (v55 && (v67 & 0x8000000000000000) == 0)
        {
          int v54 = -1;
          if (v58 != 3 && v58 != 12)
          {
            if (SHIDWORD(v67) <= (int)((unint64_t)((char *)v32 - (unsigned char *)v63) >> 4)) {
              goto LABEL_60;
            }
            int v54 = HIDWORD(v67) - 1;
          }
          HIDWORD(v67) = v54;
        }
LABEL_60:
        uint64_t v47 = v33 >> 4;
        double v48 = v64;
        unint64_t v49 = (char *)v63 + 16 * (v33 >> 4);
        for (uint64_t i = v49 + 16; i != v48; i += 16)
        {
          uint64_t v51 = *((void *)i + 1);
          *((void *)i - 2) = *(void *)i;
          *((void *)i - 1) = v51;
          v49 += 16;
        }
        v64 = v49;
        uint64_t v52 = (char *)__p + 8 * v47;
        int64_t v53 = v61 - (v52 + 8);
        if (v61 != v52 + 8)
        {
          memmove((char *)__p + 8 * v47, v52 + 8, v61 - (v52 + 8));
          uint64_t v37 = (char *)a4[1];
        }
        double v61 = &v52[v53];
      }
      while ((v37 - (unsigned char *)*a4) >> 3 < (unint64_t)((uint64_t)(a2[1] - *a2) >> 4));
    }
    if (__p)
    {
      double v61 = (char *)__p;
      operator delete(__p);
    }
    if (v63)
    {
      v64 = (char *)v63;
      operator delete(v63);
    }
  }
}

void sub_1155534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  unint64_t v19 = *(void **)v17;
  if (*(void *)v17)
  {
    *(void *)(v17 + 8) = v19;
    operator delete(v19);
  }
  _Unwind_Resume(exception_object);
}

void sub_115558C()
{
}

uint64_t sub_11555A0()
{
  return 2;
}

uint64_t sub_11555A8()
{
  return 0;
}

uint64_t sub_11555B0()
{
  return 0;
}

unint64_t sub_11555B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1155690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11556C0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115579C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11557CC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11558B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11558E0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11559B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11559F8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1155AD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

unint64_t sub_1155B1C(uint64_t **a1, uint64_t **a2, int *a3, unsigned char *a4)
{
  uint64_t v4 = 0x1FFFFFFFFLL;
  if (a2[1] != *a2)
  {
    unsigned int v8 = 0;
    uint64_t v6 = sub_113A340(a1, a2, &v8, a3, a4, 1u, 0x11u);
    if (a2[1] != v6) {
      return ((unint64_t)((char *)v6 - (char *)*a2) >> 4) | ((unint64_t)v8 << 32);
    }
  }
  return v4;
}

unint64_t sub_1155B90(uint64_t **a1, void *a2, unsigned int **a3, int *a4)
{
  uint64_t v4 = 0x1FFFFFFFFLL;
  if (a2[1] != *a2)
  {
    unsigned int v9 = 0;
    char v8 = 0;
    uint64_t v6 = sub_113B0D8(a1, (uint64_t)a2, a3, &v9, a4, &v8, 0x11u);
    if ((uint64_t *)a2[1] != v6) {
      return (((unint64_t)v6 - *a2) >> 4) | ((unint64_t)v9 << 32);
    }
  }
  return v4;
}

void sub_1155C04(uint64_t **a1@<X0>, void *a2@<X1>, long long *a3@<X2>, void **a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  uint64_t v5 = a2[1] - *a2;
  if (v5)
  {
    sub_113196C(a4, v5 >> 4);
    LODWORD(v66) = 50331648;
    *((void *)&v66 + 1) = 0;
    uint64_t v67 = -4294967282;
    if (a3)
    {
      long long v66 = *a3;
      uint64_t v67 = *((void *)a3 + 2);
      uint64_t v56 = (int *)&v66;
    }
    else
    {
      uint64_t v56 = 0;
    }
    v63 = 0;
    v64 = 0;
    v65 = 0;
    __p = 0;
    double v61 = 0;
    v62 = 0;
    sub_1139150((uint64_t)&v63, 0);
    sub_113962C((uint64_t)&__p, 0);
    uint64_t v55 = a3;
    char v8 = (_OWORD *)*a2;
    if (*a2 == a2[1])
    {
      unint64_t v30 = (_OWORD *)*a2;
    }
    else
    {
      do
      {
        unsigned int v9 = v64;
        if (v64 >= v65)
        {
          uint64_t v11 = (v64 - (unsigned char *)v63) >> 4;
          unint64_t v12 = v11 + 1;
          if ((unint64_t)(v11 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v13 = v65 - (unsigned char *)v63;
          if ((v65 - (unsigned char *)v63) >> 3 > v12) {
            unint64_t v12 = v13 >> 3;
          }
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v14 = v12;
          }
          if (v14) {
            double v15 = (char *)sub_1121C00((uint64_t)&v65, v14);
          }
          else {
            double v15 = 0;
          }
          double v16 = &v15[16 * v11];
          *(_OWORD *)double v16 = *v8;
          uint64_t v18 = (char *)v63;
          uint64_t v17 = v64;
          unint64_t v19 = v16;
          if (v64 != v63)
          {
            do
            {
              *((_OWORD *)v19 - 1) = *((_OWORD *)v17 - 1);
              v19 -= 16;
              v17 -= 16;
            }
            while (v17 != v18);
            uint64_t v17 = (char *)v63;
          }
          double v10 = v16 + 16;
          v63 = v19;
          v64 = v16 + 16;
          v65 = &v15[16 * v14];
          if (v17) {
            operator delete(v17);
          }
        }
        else
        {
          *(_OWORD *)v64 = *v8;
          double v10 = v9 + 16;
        }
        v64 = v10;
        uint64_t v20 = v61;
        if (v61 >= v62)
        {
          uint64_t v22 = (v61 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v22 + 1) >> 61) {
            sub_2E00();
          }
          unint64_t v23 = (v62 - (unsigned char *)__p) >> 2;
          if (v23 <= v22 + 1) {
            unint64_t v23 = v22 + 1;
          }
          if ((unint64_t)(v62 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v24 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v24 = v23;
          }
          if (v24) {
            uint64_t v25 = (char *)sub_1122DC0((uint64_t)&v62, v24);
          }
          else {
            uint64_t v25 = 0;
          }
          uint64_t v26 = &v25[8 * v22];
          *(void *)uint64_t v26 = v8;
          unint64_t v21 = v26 + 8;
          double v28 = (char *)__p;
          double v27 = v61;
          if (v61 != __p)
          {
            do
            {
              uint64_t v29 = *((void *)v27 - 1);
              v27 -= 8;
              *((void *)v26 - 1) = v29;
              v26 -= 8;
            }
            while (v27 != v28);
            double v27 = (char *)__p;
          }
          __p = v26;
          double v61 = v21;
          v62 = &v25[8 * v24];
          if (v27) {
            operator delete(v27);
          }
        }
        else
        {
          *(void *)double v61 = v8;
          unint64_t v21 = v20 + 8;
        }
        double v61 = v21;
        ++v8;
      }
      while (v8 != (_OWORD *)a2[1]);
      unint64_t v30 = (_OWORD *)*a2;
    }
    unsigned int v59 = 1;
    unsigned __int8 v58 = 1;
    if (((unsigned char *)a4[1] - (unsigned char *)*a4) >> 3 < (unint64_t)(v8 - v30))
    {
      do
      {
        unint64_t v31 = sub_113A340(a1, (uint64_t **)&v63, &v59, v56, &v58, v58, 0x11u);
        if (v64 == (char *)v31) {
          break;
        }
        uint64_t v32 = v31;
        uint64_t v33 = (char *)v31 - (unsigned char *)v63;
        unint64_t v34 = ((unint64_t)v59 << 32) | ((*(void *)((char *)__p
                                                                        + (((char *)v31 - (unsigned char *)v63) >> 1))
                                                            - *a2) >> 4);
        uint64_t v36 = (unint64_t *)a4[1];
        unint64_t v35 = (unint64_t)a4[2];
        if ((unint64_t)v36 >= v35)
        {
          uint64_t v38 = ((char *)v36 - (unsigned char *)*a4) >> 3;
          if ((unint64_t)(v38 + 1) >> 61) {
            sub_2E00();
          }
          uint64_t v39 = v35 - (void)*a4;
          uint64_t v40 = v39 >> 2;
          if (v39 >> 2 <= (unint64_t)(v38 + 1)) {
            uint64_t v40 = v38 + 1;
          }
          if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v41 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v41 = v40;
          }
          if (v41) {
            int v42 = (char *)sub_1122DC0((uint64_t)(a4 + 2), v41);
          }
          else {
            int v42 = 0;
          }
          uint64_t v43 = (unint64_t *)&v42[8 * v38];
          unint64_t *v43 = v34;
          uint64_t v37 = (char *)(v43 + 1);
          unsigned int v45 = (char *)*a4;
          uint64_t v44 = (char *)a4[1];
          if (v44 != *a4)
          {
            do
            {
              unint64_t v46 = *((void *)v44 - 1);
              v44 -= 8;
              *--uint64_t v43 = v46;
            }
            while (v44 != v45);
            uint64_t v44 = (char *)*a4;
          }
          *a4 = v43;
          a4[1] = v37;
          a4[2] = &v42[8 * v41];
          if (v44) {
            operator delete(v44);
          }
        }
        else
        {
          *uint64_t v36 = v34;
          uint64_t v37 = (char *)(v36 + 1);
        }
        a4[1] = v37;
        if (v55 && (v67 & 0x8000000000000000) == 0)
        {
          int v54 = -1;
          if (v58 != 3 && v58 != 12)
          {
            if (SHIDWORD(v67) <= (int)((unint64_t)((char *)v32 - (unsigned char *)v63) >> 4)) {
              goto LABEL_60;
            }
            int v54 = HIDWORD(v67) - 1;
          }
          HIDWORD(v67) = v54;
        }
LABEL_60:
        uint64_t v47 = v33 >> 4;
        double v48 = v64;
        unint64_t v49 = (char *)v63 + 16 * (v33 >> 4);
        for (uint64_t i = v49 + 16; i != v48; i += 16)
        {
          uint64_t v51 = *((void *)i + 1);
          *((void *)i - 2) = *(void *)i;
          *((void *)i - 1) = v51;
          v49 += 16;
        }
        v64 = v49;
        uint64_t v52 = (char *)__p + 8 * v47;
        int64_t v53 = v61 - (v52 + 8);
        if (v61 != v52 + 8)
        {
          memmove((char *)__p + 8 * v47, v52 + 8, v61 - (v52 + 8));
          uint64_t v37 = (char *)a4[1];
        }
        double v61 = &v52[v53];
      }
      while ((v37 - (unsigned char *)*a4) >> 3 < (unint64_t)((uint64_t)(a2[1] - *a2) >> 4));
    }
    if (__p)
    {
      double v61 = (char *)__p;
      operator delete(__p);
    }
    if (v63)
    {
      v64 = (char *)v63;
      operator delete(v63);
    }
  }
}

void sub_11560B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  unint64_t v19 = *(void **)v17;
  if (*(void *)v17)
  {
    *(void *)(v17 + 8) = v19;
    operator delete(v19);
  }
  _Unwind_Resume(exception_object);
}

void sub_1156108()
{
}

uint64_t sub_115611C()
{
  return 2;
}

uint64_t sub_1156124()
{
  return 0;
}

uint64_t sub_115612C()
{
  return 1;
}

unint64_t sub_1156134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115620C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115623C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1156318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1156348(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115642C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115645C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115652C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1156574(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1156650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115669C()
{
}

uint64_t sub_11566B0()
{
  return 2;
}

uint64_t sub_11566B8()
{
  return 0;
}

uint64_t sub_11566C0()
{
  return 1;
}

unint64_t sub_11566C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11567A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11567D0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11568AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11568DC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11569C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11569F0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1156AC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1156B08(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1156BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1156C30()
{
}

uint64_t sub_1156C44()
{
  return 2;
}

uint64_t sub_1156C4C()
{
  return 0;
}

uint64_t sub_1156C54()
{
  return 2;
}

unint64_t sub_1156C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1156D34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1156D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1156E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1156E70(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1156F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1156F84(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1157054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115709C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1157178(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11571C4()
{
}

uint64_t sub_11571D8()
{
  return 2;
}

uint64_t sub_11571E0()
{
  return 0;
}

uint64_t sub_11571E8()
{
  return 2;
}

unint64_t sub_11571F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11572C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11572F8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11573D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1157404(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11574E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1157518(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11575E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1157630(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115770C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1157758()
{
}

uint64_t sub_115776C()
{
  return 2;
}

uint64_t sub_1157774()
{
  return 0;
}

uint64_t sub_115777C()
{
  return 3;
}

unint64_t sub_1157784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115785C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115788C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1157968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1157998(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1157A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1157AAC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1157B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1157BC4(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1157CA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1157CEC()
{
}

uint64_t sub_1157D00()
{
  return 2;
}

uint64_t sub_1157D08()
{
  return 0;
}

uint64_t sub_1157D10()
{
  return 3;
}

unint64_t sub_1157D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1157DF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1157E20(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1157EFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1157F2C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1158010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1158040(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1158110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1158158(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1158234(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1158280()
{
}

uint64_t sub_1158294()
{
  return 2;
}

uint64_t sub_115829C()
{
  return 1;
}

uint64_t sub_11582A4()
{
  return 0;
}

unint64_t sub_11582AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1158384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11583B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1158490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11584C0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11585A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11585D4(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11586A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11586EC(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11587C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1158814()
{
}

uint64_t sub_1158828()
{
  return 2;
}

uint64_t sub_1158830()
{
  return 1;
}

uint64_t sub_1158838()
{
  return 0;
}

unint64_t sub_1158840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1158918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1158948(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1158A24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1158A54(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1158B38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1158B68(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1158C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1158C80(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1158D5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1158DA8()
{
}

uint64_t sub_1158DBC()
{
  return 2;
}

uint64_t sub_1158DC4()
{
  return 1;
}

uint64_t sub_1158DCC()
{
  return 1;
}

unint64_t sub_1158DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1158EAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1158EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1158FB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1158FE8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11590CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11590FC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11591CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1159214(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11592F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115933C()
{
}

uint64_t sub_1159350()
{
  return 2;
}

uint64_t sub_1159358()
{
  return 1;
}

uint64_t sub_1159360()
{
  return 1;
}

unint64_t sub_1159368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1159440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1159470(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115954C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115957C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1159660(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1159690(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1159760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11597A8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1159884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11598D0()
{
}

uint64_t sub_11598E4()
{
  return 2;
}

uint64_t sub_11598EC()
{
  return 1;
}

uint64_t sub_11598F4()
{
  return 2;
}

unint64_t sub_11598FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11599D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1159A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1159AE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1159B10(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1159BF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1159C24(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1159CF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1159D3C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1159E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1159E64()
{
}

uint64_t sub_1159E78()
{
  return 2;
}

uint64_t sub_1159E80()
{
  return 1;
}

uint64_t sub_1159E88()
{
  return 2;
}

unint64_t sub_1159E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1159F68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1159F98(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115A074(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115A0A4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115A188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115A1B8(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115A288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115A2D0(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115A3AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115A3F8()
{
}

uint64_t sub_115A40C()
{
  return 2;
}

uint64_t sub_115A414()
{
  return 1;
}

uint64_t sub_115A41C()
{
  return 3;
}

unint64_t sub_115A424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115A4FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115A52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115A608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115A638(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115A71C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115A74C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115A81C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115A864(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115A940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115A98C()
{
}

uint64_t sub_115A9A0()
{
  return 2;
}

uint64_t sub_115A9A8()
{
  return 1;
}

uint64_t sub_115A9B0()
{
  return 3;
}

unint64_t sub_115A9B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115AA90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115AAC0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115AB9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115ABCC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115ACB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115ACE0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115ADB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115ADF8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115AED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115AF20()
{
}

uint64_t sub_115AF34()
{
  return 2;
}

uint64_t sub_115AF3C()
{
  return 2;
}

uint64_t sub_115AF44()
{
  return 0;
}

unint64_t sub_115AF4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115B024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115B054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115B130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115B160(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115B244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115B274(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115B344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115B38C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115B468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115B4B4()
{
}

uint64_t sub_115B4C8()
{
  return 2;
}

uint64_t sub_115B4D0()
{
  return 2;
}

uint64_t sub_115B4D8()
{
  return 0;
}

unint64_t sub_115B4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115B5B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115B5E8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115B6C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115B6F4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115B7D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115B808(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115B8D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115B920(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115B9FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115BA48()
{
}

uint64_t sub_115BA5C()
{
  return 2;
}

uint64_t sub_115BA64()
{
  return 2;
}

uint64_t sub_115BA6C()
{
  return 1;
}

unint64_t sub_115BA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115BB4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115BB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115BC58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115BC88(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115BD6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115BD9C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115BE6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115BEB4(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115BF90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115BFDC()
{
}

uint64_t sub_115BFF0()
{
  return 2;
}

uint64_t sub_115BFF8()
{
  return 2;
}

uint64_t sub_115C000()
{
  return 1;
}

unint64_t sub_115C008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115C0E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115C110(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115C1EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115C21C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115C300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115C330(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115C400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115C448(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115C524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115C570()
{
}

uint64_t sub_115C584()
{
  return 2;
}

uint64_t sub_115C58C()
{
  return 2;
}

uint64_t sub_115C594()
{
  return 2;
}

unint64_t sub_115C59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115C674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115C6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115C780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115C7B0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115C894(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115C8C4(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115C994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115C9DC(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115CAB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115CB04()
{
}

uint64_t sub_115CB18()
{
  return 2;
}

uint64_t sub_115CB20()
{
  return 2;
}

uint64_t sub_115CB28()
{
  return 2;
}

unint64_t sub_115CB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115CC08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115CC38(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115CD14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115CD44(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115CE28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115CE58(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115CF28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115CF70(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115D04C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115D098()
{
}

uint64_t sub_115D0AC()
{
  return 2;
}

uint64_t sub_115D0B4()
{
  return 2;
}

uint64_t sub_115D0BC()
{
  return 3;
}

unint64_t sub_115D0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115D19C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115D1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115D2A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115D2D8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115D3BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115D3EC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115D4BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115D504(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115D5E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115D62C()
{
}

uint64_t sub_115D640()
{
  return 2;
}

uint64_t sub_115D648()
{
  return 2;
}

uint64_t sub_115D650()
{
  return 3;
}

unint64_t sub_115D658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115D730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115D760(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115D83C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115D86C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115D950(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115D980(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115DA50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115DA98(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115DB74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115DBC0()
{
}

uint64_t sub_115DBD4()
{
  return 2;
}

uint64_t sub_115DBDC()
{
  return 3;
}

uint64_t sub_115DBE4()
{
  return 0;
}

unint64_t sub_115DBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115DCC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115DCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115DDD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115DE00(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115DEE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115DF14(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115DFE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115E02C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115E108(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115E154()
{
}

uint64_t sub_115E168()
{
  return 2;
}

uint64_t sub_115E170()
{
  return 3;
}

uint64_t sub_115E178()
{
  return 0;
}

unint64_t sub_115E180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115E258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115E288(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115E364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115E394(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115E478(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115E4A8(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115E578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115E5C0(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115E69C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115E6E8()
{
}

uint64_t sub_115E6FC()
{
  return 2;
}

uint64_t sub_115E704()
{
  return 3;
}

uint64_t sub_115E70C()
{
  return 1;
}

unint64_t sub_115E714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115E7EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115E81C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115E8F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115E928(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115EA0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115EA3C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115EB0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115EB54(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115EC30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115EC7C()
{
}

uint64_t sub_115EC90()
{
  return 2;
}

uint64_t sub_115EC98()
{
  return 3;
}

uint64_t sub_115ECA0()
{
  return 1;
}

unint64_t sub_115ECA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115ED80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115EDB0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115EE8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115EEBC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115EFA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115EFD0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115F0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115F0E8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115F1C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115F210()
{
}

uint64_t sub_115F224()
{
  return 2;
}

uint64_t sub_115F22C()
{
  return 3;
}

uint64_t sub_115F234()
{
  return 2;
}

unint64_t sub_115F23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115F314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115F344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115F420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115F450(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115F534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115F564(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115F634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115F67C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115F758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115F7A4()
{
}

uint64_t sub_115F7B8()
{
  return 2;
}

uint64_t sub_115F7C0()
{
  return 3;
}

uint64_t sub_115F7C8()
{
  return 2;
}

unint64_t sub_115F7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115F8A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115F8D8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115F9B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115F9E4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_115FAC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_115FAF8(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_115FBC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115FC10(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_115FCEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_115FD38()
{
}

uint64_t sub_115FD4C()
{
  return 2;
}

uint64_t sub_115FD54()
{
  return 3;
}

uint64_t sub_115FD5C()
{
  return 3;
}

unint64_t sub_115FD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_115FE3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115FE6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_115FF48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_115FF78(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116005C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116008C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116015C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11601A4(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155088((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1160280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11602CC()
{
}

uint64_t sub_11602E0()
{
  return 2;
}

uint64_t sub_11602E8()
{
  return 3;
}

uint64_t sub_11602F0()
{
  return 3;
}

unint64_t sub_11602F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11603D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1160400(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11604DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116050C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11605F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1160620(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11606F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1160738(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1155C04((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1160814(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1160860()
{
}

uint64_t sub_1160874()
{
  return 3;
}

uint64_t sub_116087C()
{
  return 0;
}

uint64_t sub_1160884()
{
  return 0;
}

unint64_t sub_116088C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1160964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1160994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1160A70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1160AA0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1160B84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1160BB4(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1160C84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1160CCC(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1160DA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1160DF0(uint64_t **a1@<X0>, void *a2@<X1>, long long *a3@<X2>, void **a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  uint64_t v5 = a2[1] - *a2;
  if (v5)
  {
    sub_113196C(a4, v5 >> 4);
    LODWORD(v66) = 50331648;
    *((void *)&v66 + 1) = 0;
    uint64_t v67 = -4294967282;
    if (a3)
    {
      long long v66 = *a3;
      uint64_t v67 = *((void *)a3 + 2);
      uint64_t v56 = &v66;
    }
    else
    {
      uint64_t v56 = 0;
    }
    v63 = 0;
    v64 = 0;
    v65 = 0;
    __p = 0;
    double v61 = 0;
    v62 = 0;
    sub_1139150((uint64_t)&v63, 0);
    sub_113962C((uint64_t)&__p, 0);
    uint64_t v55 = a3;
    char v8 = (_OWORD *)*a2;
    if (*a2 == a2[1])
    {
      unint64_t v30 = (_OWORD *)*a2;
    }
    else
    {
      do
      {
        unint64_t v9 = v64;
        if (v64 >= v65)
        {
          uint64_t v11 = (v64 - (unsigned char *)v63) >> 4;
          unint64_t v12 = v11 + 1;
          if ((unint64_t)(v11 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v13 = v65 - (unsigned char *)v63;
          if ((v65 - (unsigned char *)v63) >> 3 > v12) {
            unint64_t v12 = v13 >> 3;
          }
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v14 = v12;
          }
          if (v14) {
            double v15 = (char *)sub_1121C00((uint64_t)&v65, v14);
          }
          else {
            double v15 = 0;
          }
          double v16 = &v15[16 * v11];
          *(_OWORD *)double v16 = *v8;
          uint64_t v18 = (char *)v63;
          uint64_t v17 = v64;
          unint64_t v19 = v16;
          if (v64 != v63)
          {
            do
            {
              *((_OWORD *)v19 - 1) = *((_OWORD *)v17 - 1);
              v19 -= 16;
              v17 -= 16;
            }
            while (v17 != v18);
            uint64_t v17 = (char *)v63;
          }
          double v10 = v16 + 16;
          v63 = v19;
          v64 = v16 + 16;
          v65 = &v15[16 * v14];
          if (v17) {
            operator delete(v17);
          }
        }
        else
        {
          *(_OWORD *)v64 = *v8;
          double v10 = v9 + 16;
        }
        v64 = v10;
        uint64_t v20 = v61;
        if (v61 >= v62)
        {
          uint64_t v22 = (v61 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v22 + 1) >> 61) {
            sub_2E00();
          }
          unint64_t v23 = (v62 - (unsigned char *)__p) >> 2;
          if (v23 <= v22 + 1) {
            unint64_t v23 = v22 + 1;
          }
          if ((unint64_t)(v62 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v24 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v24 = v23;
          }
          if (v24) {
            uint64_t v25 = (char *)sub_1122DC0((uint64_t)&v62, v24);
          }
          else {
            uint64_t v25 = 0;
          }
          uint64_t v26 = &v25[8 * v22];
          *(void *)uint64_t v26 = v8;
          unint64_t v21 = v26 + 8;
          double v28 = (char *)__p;
          double v27 = v61;
          if (v61 != __p)
          {
            do
            {
              uint64_t v29 = *((void *)v27 - 1);
              v27 -= 8;
              *((void *)v26 - 1) = v29;
              v26 -= 8;
            }
            while (v27 != v28);
            double v27 = (char *)__p;
          }
          __p = v26;
          double v61 = v21;
          v62 = &v25[8 * v24];
          if (v27) {
            operator delete(v27);
          }
        }
        else
        {
          *(void *)double v61 = v8;
          unint64_t v21 = v20 + 8;
        }
        double v61 = v21;
        ++v8;
      }
      while (v8 != (_OWORD *)a2[1]);
      unint64_t v30 = (_OWORD *)*a2;
    }
    unsigned int v59 = 1;
    unsigned __int8 v58 = 1;
    if (((unsigned char *)a4[1] - (unsigned char *)*a4) >> 3 < (unint64_t)(v8 - v30))
    {
      do
      {
        unint64_t v31 = sub_1135E68(a1, (uint64_t **)&v63, &v59, (uint64_t)v56, &v58, v58, 0x11u);
        if (v64 == (char *)v31) {
          break;
        }
        uint64_t v32 = v31;
        uint64_t v33 = (char *)v31 - (unsigned char *)v63;
        unint64_t v34 = ((unint64_t)v59 << 32) | ((*(void *)((char *)__p
                                                                        + (((char *)v31 - (unsigned char *)v63) >> 1))
                                                            - *a2) >> 4);
        uint64_t v36 = (unint64_t *)a4[1];
        unint64_t v35 = (unint64_t)a4[2];
        if ((unint64_t)v36 >= v35)
        {
          uint64_t v38 = ((char *)v36 - (unsigned char *)*a4) >> 3;
          if ((unint64_t)(v38 + 1) >> 61) {
            sub_2E00();
          }
          uint64_t v39 = v35 - (void)*a4;
          uint64_t v40 = v39 >> 2;
          if (v39 >> 2 <= (unint64_t)(v38 + 1)) {
            uint64_t v40 = v38 + 1;
          }
          if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v41 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v41 = v40;
          }
          if (v41) {
            int v42 = (char *)sub_1122DC0((uint64_t)(a4 + 2), v41);
          }
          else {
            int v42 = 0;
          }
          uint64_t v43 = (unint64_t *)&v42[8 * v38];
          unint64_t *v43 = v34;
          uint64_t v37 = (char *)(v43 + 1);
          unsigned int v45 = (char *)*a4;
          uint64_t v44 = (char *)a4[1];
          if (v44 != *a4)
          {
            do
            {
              unint64_t v46 = *((void *)v44 - 1);
              v44 -= 8;
              *--uint64_t v43 = v46;
            }
            while (v44 != v45);
            uint64_t v44 = (char *)*a4;
          }
          *a4 = v43;
          a4[1] = v37;
          a4[2] = &v42[8 * v41];
          if (v44) {
            operator delete(v44);
          }
        }
        else
        {
          *uint64_t v36 = v34;
          uint64_t v37 = (char *)(v36 + 1);
        }
        a4[1] = v37;
        if (v55 && (v67 & 0x8000000000000000) == 0)
        {
          int v54 = -1;
          if (v58 != 3 && v58 != 12)
          {
            if (SHIDWORD(v67) <= (int)((unint64_t)((char *)v32 - (unsigned char *)v63) >> 4)) {
              goto LABEL_60;
            }
            int v54 = HIDWORD(v67) - 1;
          }
          HIDWORD(v67) = v54;
        }
LABEL_60:
        uint64_t v47 = v33 >> 4;
        double v48 = v64;
        unint64_t v49 = (char *)v63 + 16 * (v33 >> 4);
        for (uint64_t i = v49 + 16; i != v48; i += 16)
        {
          uint64_t v51 = *((void *)i + 1);
          *((void *)i - 2) = *(void *)i;
          *((void *)i - 1) = v51;
          v49 += 16;
        }
        v64 = v49;
        uint64_t v52 = (char *)__p + 8 * v47;
        int64_t v53 = v61 - (v52 + 8);
        if (v61 != v52 + 8)
        {
          memmove((char *)__p + 8 * v47, v52 + 8, v61 - (v52 + 8));
          uint64_t v37 = (char *)a4[1];
        }
        double v61 = &v52[v53];
      }
      while ((v37 - (unsigned char *)*a4) >> 3 < (unint64_t)((uint64_t)(a2[1] - *a2) >> 4));
    }
    if (__p)
    {
      double v61 = (char *)__p;
      operator delete(__p);
    }
    if (v63)
    {
      v64 = (char *)v63;
      operator delete(v63);
    }
  }
}

void sub_116129C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  unint64_t v19 = *(void **)v17;
  if (*(void *)v17)
  {
    *(void *)(v17 + 8) = v19;
    operator delete(v19);
  }
  _Unwind_Resume(exception_object);
}

void sub_11612F4()
{
}

uint64_t sub_1161308()
{
  return 3;
}

uint64_t sub_1161310()
{
  return 0;
}

uint64_t sub_1161318()
{
  return 0;
}

unint64_t sub_1161320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11613F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1161428(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1161504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1161534(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1161618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1161648(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1161718(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1161760(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116183C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1161884(uint64_t **a1@<X0>, void *a2@<X1>, long long *a3@<X2>, void **a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  uint64_t v5 = a2[1] - *a2;
  if (v5)
  {
    sub_113196C(a4, v5 >> 4);
    LODWORD(v66) = 50331648;
    *((void *)&v66 + 1) = 0;
    uint64_t v67 = -4294967282;
    if (a3)
    {
      long long v66 = *a3;
      uint64_t v67 = *((void *)a3 + 2);
      uint64_t v56 = (int *)&v66;
    }
    else
    {
      uint64_t v56 = 0;
    }
    v63 = 0;
    v64 = 0;
    v65 = 0;
    __p = 0;
    double v61 = 0;
    v62 = 0;
    sub_1139150((uint64_t)&v63, 0);
    sub_113962C((uint64_t)&__p, 0);
    uint64_t v55 = a3;
    char v8 = (_OWORD *)*a2;
    if (*a2 == a2[1])
    {
      unint64_t v30 = (_OWORD *)*a2;
    }
    else
    {
      do
      {
        unint64_t v9 = v64;
        if (v64 >= v65)
        {
          uint64_t v11 = (v64 - (unsigned char *)v63) >> 4;
          unint64_t v12 = v11 + 1;
          if ((unint64_t)(v11 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v13 = v65 - (unsigned char *)v63;
          if ((v65 - (unsigned char *)v63) >> 3 > v12) {
            unint64_t v12 = v13 >> 3;
          }
          if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v14 = v12;
          }
          if (v14) {
            double v15 = (char *)sub_1121C00((uint64_t)&v65, v14);
          }
          else {
            double v15 = 0;
          }
          double v16 = &v15[16 * v11];
          *(_OWORD *)double v16 = *v8;
          uint64_t v18 = (char *)v63;
          uint64_t v17 = v64;
          unint64_t v19 = v16;
          if (v64 != v63)
          {
            do
            {
              *((_OWORD *)v19 - 1) = *((_OWORD *)v17 - 1);
              v19 -= 16;
              v17 -= 16;
            }
            while (v17 != v18);
            uint64_t v17 = (char *)v63;
          }
          double v10 = v16 + 16;
          v63 = v19;
          v64 = v16 + 16;
          v65 = &v15[16 * v14];
          if (v17) {
            operator delete(v17);
          }
        }
        else
        {
          *(_OWORD *)v64 = *v8;
          double v10 = v9 + 16;
        }
        v64 = v10;
        uint64_t v20 = v61;
        if (v61 >= v62)
        {
          uint64_t v22 = (v61 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v22 + 1) >> 61) {
            sub_2E00();
          }
          unint64_t v23 = (v62 - (unsigned char *)__p) >> 2;
          if (v23 <= v22 + 1) {
            unint64_t v23 = v22 + 1;
          }
          if ((unint64_t)(v62 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v24 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v24 = v23;
          }
          if (v24) {
            uint64_t v25 = (char *)sub_1122DC0((uint64_t)&v62, v24);
          }
          else {
            uint64_t v25 = 0;
          }
          uint64_t v26 = &v25[8 * v22];
          *(void *)uint64_t v26 = v8;
          unint64_t v21 = v26 + 8;
          double v28 = (char *)__p;
          double v27 = v61;
          if (v61 != __p)
          {
            do
            {
              uint64_t v29 = *((void *)v27 - 1);
              v27 -= 8;
              *((void *)v26 - 1) = v29;
              v26 -= 8;
            }
            while (v27 != v28);
            double v27 = (char *)__p;
          }
          __p = v26;
          double v61 = v21;
          v62 = &v25[8 * v24];
          if (v27) {
            operator delete(v27);
          }
        }
        else
        {
          *(void *)double v61 = v8;
          unint64_t v21 = v20 + 8;
        }
        double v61 = v21;
        ++v8;
      }
      while (v8 != (_OWORD *)a2[1]);
      unint64_t v30 = (_OWORD *)*a2;
    }
    unsigned int v59 = 1;
    unsigned __int8 v58 = 1;
    if (((unsigned char *)a4[1] - (unsigned char *)*a4) >> 3 < (unint64_t)(v8 - v30))
    {
      do
      {
        unint64_t v31 = sub_113A340(a1, (uint64_t **)&v63, &v59, v56, &v58, v58, 0x11u);
        if (v64 == (char *)v31) {
          break;
        }
        uint64_t v32 = v31;
        uint64_t v33 = (char *)v31 - (unsigned char *)v63;
        unint64_t v34 = ((unint64_t)v59 << 32) | ((*(void *)((char *)__p
                                                                        + (((char *)v31 - (unsigned char *)v63) >> 1))
                                                            - *a2) >> 4);
        uint64_t v36 = (unint64_t *)a4[1];
        unint64_t v35 = (unint64_t)a4[2];
        if ((unint64_t)v36 >= v35)
        {
          uint64_t v38 = ((char *)v36 - (unsigned char *)*a4) >> 3;
          if ((unint64_t)(v38 + 1) >> 61) {
            sub_2E00();
          }
          uint64_t v39 = v35 - (void)*a4;
          uint64_t v40 = v39 >> 2;
          if (v39 >> 2 <= (unint64_t)(v38 + 1)) {
            uint64_t v40 = v38 + 1;
          }
          if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v41 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v41 = v40;
          }
          if (v41) {
            int v42 = (char *)sub_1122DC0((uint64_t)(a4 + 2), v41);
          }
          else {
            int v42 = 0;
          }
          uint64_t v43 = (unint64_t *)&v42[8 * v38];
          unint64_t *v43 = v34;
          uint64_t v37 = (char *)(v43 + 1);
          unsigned int v45 = (char *)*a4;
          uint64_t v44 = (char *)a4[1];
          if (v44 != *a4)
          {
            do
            {
              unint64_t v46 = *((void *)v44 - 1);
              v44 -= 8;
              *--uint64_t v43 = v46;
            }
            while (v44 != v45);
            uint64_t v44 = (char *)*a4;
          }
          *a4 = v43;
          a4[1] = v37;
          a4[2] = &v42[8 * v41];
          if (v44) {
            operator delete(v44);
          }
        }
        else
        {
          *uint64_t v36 = v34;
          uint64_t v37 = (char *)(v36 + 1);
        }
        a4[1] = v37;
        if (v55 && (v67 & 0x8000000000000000) == 0)
        {
          int v54 = -1;
          if (v58 != 3 && v58 != 12)
          {
            if (SHIDWORD(v67) <= (int)((unint64_t)((char *)v32 - (unsigned char *)v63) >> 4)) {
              goto LABEL_60;
            }
            int v54 = HIDWORD(v67) - 1;
          }
          HIDWORD(v67) = v54;
        }
LABEL_60:
        uint64_t v47 = v33 >> 4;
        double v48 = v64;
        unint64_t v49 = (char *)v63 + 16 * (v33 >> 4);
        for (uint64_t i = v49 + 16; i != v48; i += 16)
        {
          uint64_t v51 = *((void *)i + 1);
          *((void *)i - 2) = *(void *)i;
          *((void *)i - 1) = v51;
          v49 += 16;
        }
        v64 = v49;
        uint64_t v52 = (char *)__p + 8 * v47;
        int64_t v53 = v61 - (v52 + 8);
        if (v61 != v52 + 8)
        {
          memmove((char *)__p + 8 * v47, v52 + 8, v61 - (v52 + 8));
          uint64_t v37 = (char *)a4[1];
        }
        double v61 = &v52[v53];
      }
      while ((v37 - (unsigned char *)*a4) >> 3 < (unint64_t)((uint64_t)(a2[1] - *a2) >> 4));
    }
    if (__p)
    {
      double v61 = (char *)__p;
      operator delete(__p);
    }
    if (v63)
    {
      v64 = (char *)v63;
      operator delete(v63);
    }
  }
}

void sub_1161D30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  unint64_t v19 = *(void **)v17;
  if (*(void *)v17)
  {
    *(void *)(v17 + 8) = v19;
    operator delete(v19);
  }
  _Unwind_Resume(exception_object);
}

void sub_1161D88()
{
}

uint64_t sub_1161D9C()
{
  return 3;
}

uint64_t sub_1161DA4()
{
  return 0;
}

uint64_t sub_1161DAC()
{
  return 1;
}

unint64_t sub_1161DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1161E8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1161EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1161F98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1161FC8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11620AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11620DC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11621AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11621F4(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11622D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116231C()
{
}

uint64_t sub_1162330()
{
  return 3;
}

uint64_t sub_1162338()
{
  return 0;
}

uint64_t sub_1162340()
{
  return 1;
}

unint64_t sub_1162348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1162420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1162450(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116252C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116255C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1162640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1162670(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1162740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1162788(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1162864(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11628B0()
{
}

uint64_t sub_11628C4()
{
  return 3;
}

uint64_t sub_11628CC()
{
  return 0;
}

uint64_t sub_11628D4()
{
  return 2;
}

unint64_t sub_11628DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11629B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11629E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1162AC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1162AF0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1162BD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1162C04(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1162CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1162D1C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1162DF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1162E44()
{
}

uint64_t sub_1162E58()
{
  return 3;
}

uint64_t sub_1162E60()
{
  return 0;
}

uint64_t sub_1162E68()
{
  return 2;
}

unint64_t sub_1162E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1162F48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1162F78(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1163054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1163084(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1163168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1163198(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1163268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11632B0(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116338C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11633D8()
{
}

uint64_t sub_11633EC()
{
  return 3;
}

uint64_t sub_11633F4()
{
  return 0;
}

uint64_t sub_11633FC()
{
  return 3;
}

unint64_t sub_1163404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11634DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116350C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11635E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1163618(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11636FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116372C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11637FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1163844(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1163920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116396C()
{
}

uint64_t sub_1163980()
{
  return 3;
}

uint64_t sub_1163988()
{
  return 0;
}

uint64_t sub_1163990()
{
  return 3;
}

unint64_t sub_1163998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1163A70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1163AA0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1163B7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1163BAC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1163C90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1163CC0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1163D90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1163DD8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1163EB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1163F00()
{
}

uint64_t sub_1163F14()
{
  return 3;
}

uint64_t sub_1163F1C()
{
  return 1;
}

uint64_t sub_1163F24()
{
  return 0;
}

unint64_t sub_1163F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1164004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1164034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1164110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1164140(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1164224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1164254(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1164324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116436C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1164448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1164494()
{
}

uint64_t sub_11644A8()
{
  return 3;
}

uint64_t sub_11644B0()
{
  return 1;
}

uint64_t sub_11644B8()
{
  return 0;
}

unint64_t sub_11644C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1164598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11645C8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11646A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11646D4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11647B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11647E8(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11648B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1164900(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11649DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1164A28()
{
}

uint64_t sub_1164A3C()
{
  return 3;
}

uint64_t sub_1164A44()
{
  return 1;
}

uint64_t sub_1164A4C()
{
  return 1;
}

unint64_t sub_1164A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1164B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1164B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1164C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1164C68(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1164D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1164D7C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1164E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1164E94(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1164F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1164FBC()
{
}

uint64_t sub_1164FD0()
{
  return 3;
}

uint64_t sub_1164FD8()
{
  return 1;
}

uint64_t sub_1164FE0()
{
  return 1;
}

unint64_t sub_1164FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11650C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11650F0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11651CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11651FC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11652E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1165310(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11653E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1165428(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1165504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1165550()
{
}

uint64_t sub_1165564()
{
  return 3;
}

uint64_t sub_116556C()
{
  return 1;
}

uint64_t sub_1165574()
{
  return 2;
}

unint64_t sub_116557C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1165654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1165684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1165760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1165790(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1165874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11658A4(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1165974(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11659BC(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1165A98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1165AE4()
{
}

uint64_t sub_1165AF8()
{
  return 3;
}

uint64_t sub_1165B00()
{
  return 1;
}

uint64_t sub_1165B08()
{
  return 2;
}

unint64_t sub_1165B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1165BE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1165C18(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1165CF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1165D24(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1165E08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1165E38(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1165F08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1165F50(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116602C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1166078()
{
}

uint64_t sub_116608C()
{
  return 3;
}

uint64_t sub_1166094()
{
  return 1;
}

uint64_t sub_116609C()
{
  return 3;
}

unint64_t sub_11660A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116617C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11661AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1166288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11662B8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116639C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11663CC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116649C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11664E4(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11665C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116660C()
{
}

uint64_t sub_1166620()
{
  return 3;
}

uint64_t sub_1166628()
{
  return 1;
}

uint64_t sub_1166630()
{
  return 3;
}

unint64_t sub_1166638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1166710(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1166740(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116681C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116684C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1166930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1166960(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1166A30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1166A78(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1166B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1166BA0()
{
}

uint64_t sub_1166BB4()
{
  return 3;
}

uint64_t sub_1166BBC()
{
  return 2;
}

uint64_t sub_1166BC4()
{
  return 0;
}

unint64_t sub_1166BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1166CA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1166CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1166DB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1166DE0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1166EC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1166EF4(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1166FC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116700C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11670E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1167134()
{
}

uint64_t sub_1167148()
{
  return 3;
}

uint64_t sub_1167150()
{
  return 2;
}

uint64_t sub_1167158()
{
  return 0;
}

unint64_t sub_1167160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1167238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1167268(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1167344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1167374(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1167458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1167488(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1167558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11675A0(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116767C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11676C8()
{
}

uint64_t sub_11676DC()
{
  return 3;
}

uint64_t sub_11676E4()
{
  return 2;
}

uint64_t sub_11676EC()
{
  return 1;
}

unint64_t sub_11676F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11677CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11677FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11678D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1167908(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11679EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1167A1C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1167AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1167B34(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1167C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1167C5C()
{
}

uint64_t sub_1167C70()
{
  return 3;
}

uint64_t sub_1167C78()
{
  return 2;
}

uint64_t sub_1167C80()
{
  return 1;
}

unint64_t sub_1167C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1167D60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1167D90(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1167E6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1167E9C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1167F80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1167FB0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1168080(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11680C8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11681A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11681F0()
{
}

uint64_t sub_1168204()
{
  return 3;
}

uint64_t sub_116820C()
{
  return 2;
}

uint64_t sub_1168214()
{
  return 2;
}

unint64_t sub_116821C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11682F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1168324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1168400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1168430(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1168514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1168544(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1168614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116865C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1168738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1168784()
{
}

uint64_t sub_1168798()
{
  return 3;
}

uint64_t sub_11687A0()
{
  return 2;
}

uint64_t sub_11687A8()
{
  return 2;
}

unint64_t sub_11687B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1168888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11688B8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1168994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11689C4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1168AA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1168AD8(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1168BA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1168BF0(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1168CCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1168D18()
{
}

uint64_t sub_1168D2C()
{
  return 3;
}

uint64_t sub_1168D34()
{
  return 2;
}

uint64_t sub_1168D3C()
{
  return 3;
}

unint64_t sub_1168D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1168E1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1168E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1168F28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1168F58(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116903C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116906C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116913C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1169184(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1169260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11692AC()
{
}

uint64_t sub_11692C0()
{
  return 3;
}

uint64_t sub_11692C8()
{
  return 2;
}

uint64_t sub_11692D0()
{
  return 3;
}

unint64_t sub_11692D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11693B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11693E0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11694BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11694EC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11695D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1169600(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11696D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1169718(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11697F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1169840()
{
}

uint64_t sub_1169854()
{
  return 3;
}

uint64_t sub_116985C()
{
  return 3;
}

uint64_t sub_1169864()
{
  return 0;
}

unint64_t sub_116986C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1169944(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1169974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1169A50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1169A80(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1169B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1169B94(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1169C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1169CAC(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1169D88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1169DD4()
{
}

uint64_t sub_1169DE8()
{
  return 3;
}

uint64_t sub_1169DF0()
{
  return 3;
}

uint64_t sub_1169DF8()
{
  return 0;
}

unint64_t sub_1169E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1169ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1169F08(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1169FE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116A014(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116A0F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116A128(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116A1F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116A240(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116A31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116A368()
{
}

uint64_t sub_116A37C()
{
  return 3;
}

uint64_t sub_116A384()
{
  return 3;
}

uint64_t sub_116A38C()
{
  return 1;
}

unint64_t sub_116A394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116A46C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116A49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116A578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116A5A8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116A68C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116A6BC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116A78C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116A7D4(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116A8B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116A8FC()
{
}

uint64_t sub_116A910()
{
  return 3;
}

uint64_t sub_116A918()
{
  return 3;
}

uint64_t sub_116A920()
{
  return 1;
}

unint64_t sub_116A928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116AA00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116AA30(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116AB0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116AB3C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116AC20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116AC50(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116AD20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116AD68(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116AE44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116AE90()
{
}

uint64_t sub_116AEA4()
{
  return 3;
}

uint64_t sub_116AEAC()
{
  return 3;
}

uint64_t sub_116AEB4()
{
  return 2;
}

unint64_t sub_116AEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116AF94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116AFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116B0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116B0D0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116B1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116B1E4(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116B2B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116B2FC(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116B3D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116B424()
{
}

uint64_t sub_116B438()
{
  return 3;
}

uint64_t sub_116B440()
{
  return 3;
}

uint64_t sub_116B448()
{
  return 2;
}

unint64_t sub_116B450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116B528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116B558(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116B634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116B664(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116B748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116B778(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116B848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116B890(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116B96C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116B9B8()
{
}

uint64_t sub_116B9CC()
{
  return 3;
}

uint64_t sub_116B9D4()
{
  return 3;
}

uint64_t sub_116B9DC()
{
  return 3;
}

unint64_t sub_116B9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1154FA0((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116BABC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116BAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1154FA0((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116BBC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116BBF8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155014((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116BCDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116BD0C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116BDDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116BE24(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1160DF0((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116BF00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116BF4C()
{
}

uint64_t sub_116BF60()
{
  return 3;
}

uint64_t sub_116BF68()
{
  return 3;
}

uint64_t sub_116BF70()
{
  return 3;
}

unint64_t sub_116BF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_1155B1C((uint64_t **)v8, (uint64_t **)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116C050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116C080(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_1155B1C((uint64_t **)v10, (uint64_t **)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116C15C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116C18C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_1155B90((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116C270(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116C2A0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116C370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116C3B8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_1161884((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116C494(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116C4E0()
{
}

uint64_t sub_116C4F4()
{
  return 4;
}

uint64_t sub_116C4FC()
{
  return 0;
}

uint64_t sub_116C504()
{
  return 0;
}

unint64_t sub_116C50C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116C5E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116C614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116C6F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116C720(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116C804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116C834(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116C904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116C94C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116CA28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

unint64_t sub_116CA70(uint64_t **a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  if (*(void *)(a2 + 8) == *(void *)a2) {
    return 0x1FFFFFFFFLL;
  }
  unsigned int v11 = 0;
  char v8 = sub_1135E68(a1, (uint64_t **)a2, &v11, a3, a4, 1u, 9u);
  unsigned int v9 = v11;
  if (v11 == 1)
  {
    char v8 = sub_1135E68(a1, (uint64_t **)a2, &v11, a3, a4, 0xCu, 0x11u);
    unsigned int v9 = v11;
  }
  if (*(uint64_t **)(a2 + 8) == v8) {
    return 0x1FFFFFFFFLL;
  }
  else {
    return (((unint64_t)v8 - *(void *)a2) >> 4) | ((unint64_t)v9 << 32);
  }
}

unint64_t sub_116CB28(uint64_t **a1, void *a2, unsigned int **a3, int *a4)
{
  uint64_t v4 = 0x1FFFFFFFFLL;
  if (a2[1] != *a2)
  {
    unsigned int v9 = 0;
    char v8 = 0;
    uint64_t v6 = sub_1139314(a1, (uint64_t)a2, a3, &v9, a4, &v8, 9u);
    if ((uint64_t *)a2[1] != v6) {
      return (((unint64_t)v6 - *a2) >> 4) | ((unint64_t)v9 << 32);
    }
  }
  return v4;
}

void sub_116CB9C(uint64_t **a1@<X0>, void *a2@<X1>, long long *a3@<X2>, void **a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  uint64_t v5 = a2[1] - *a2;
  if (v5)
  {
    sub_113196C(a4, v5 >> 4);
    LODWORD(v69) = 50331648;
    *((void *)&v69 + 1) = 0;
    uint64_t v70 = -4294967282;
    if (a3)
    {
      long long v69 = *a3;
      uint64_t v70 = *((void *)a3 + 2);
      char v8 = &v69;
    }
    else
    {
      char v8 = 0;
    }
    long long v66 = 0;
    uint64_t v67 = 0;
    uint64_t v68 = 0;
    __p = 0;
    v64 = 0;
    v65 = 0;
    sub_1139150((uint64_t)&v66, 0);
    sub_113962C((uint64_t)&__p, 0);
    unsigned int v59 = a3;
    unsigned int v9 = (_OWORD *)*a2;
    if (*a2 == a2[1])
    {
      unint64_t v31 = (_OWORD *)*a2;
    }
    else
    {
      do
      {
        double v10 = v67;
        if (v67 >= v68)
        {
          uint64_t v12 = (v67 - (unsigned char *)v66) >> 4;
          unint64_t v13 = v12 + 1;
          if ((unint64_t)(v12 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v14 = v68 - (unsigned char *)v66;
          if ((v68 - (unsigned char *)v66) >> 3 > v13) {
            unint64_t v13 = v14 >> 3;
          }
          if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v15 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v15 = v13;
          }
          if (v15) {
            double v16 = (char *)sub_1121C00((uint64_t)&v68, v15);
          }
          else {
            double v16 = 0;
          }
          uint64_t v17 = &v16[16 * v12];
          *(_OWORD *)uint64_t v17 = *v9;
          unint64_t v19 = (char *)v66;
          uint64_t v18 = v67;
          uint64_t v20 = v17;
          if (v67 != v66)
          {
            do
            {
              *((_OWORD *)v20 - 1) = *((_OWORD *)v18 - 1);
              v20 -= 16;
              v18 -= 16;
            }
            while (v18 != v19);
            uint64_t v18 = (char *)v66;
          }
          unsigned int v11 = v17 + 16;
          long long v66 = v20;
          uint64_t v67 = v17 + 16;
          uint64_t v68 = &v16[16 * v15];
          if (v18) {
            operator delete(v18);
          }
        }
        else
        {
          *(_OWORD *)uint64_t v67 = *v9;
          unsigned int v11 = v10 + 16;
        }
        uint64_t v67 = v11;
        unint64_t v21 = v64;
        if (v64 >= v65)
        {
          uint64_t v23 = (v64 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v23 + 1) >> 61) {
            sub_2E00();
          }
          unint64_t v24 = (v65 - (unsigned char *)__p) >> 2;
          if (v24 <= v23 + 1) {
            unint64_t v24 = v23 + 1;
          }
          if ((unint64_t)(v65 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v25 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v25 = v24;
          }
          if (v25) {
            uint64_t v26 = (char *)sub_1122DC0((uint64_t)&v65, v25);
          }
          else {
            uint64_t v26 = 0;
          }
          double v27 = &v26[8 * v23];
          *(void *)double v27 = v9;
          uint64_t v22 = v27 + 8;
          uint64_t v29 = (char *)__p;
          double v28 = v64;
          if (v64 != __p)
          {
            do
            {
              uint64_t v30 = *((void *)v28 - 1);
              v28 -= 8;
              *((void *)v27 - 1) = v30;
              v27 -= 8;
            }
            while (v28 != v29);
            double v28 = (char *)__p;
          }
          __p = v27;
          v64 = v22;
          v65 = &v26[8 * v25];
          if (v28) {
            operator delete(v28);
          }
        }
        else
        {
          *(void *)v64 = v9;
          uint64_t v22 = v21 + 8;
        }
        v64 = v22;
        ++v9;
      }
      while (v9 != (_OWORD *)a2[1]);
      unint64_t v31 = (_OWORD *)*a2;
    }
    unsigned int v62 = 1;
    unsigned __int8 v61 = 1;
    if (((unsigned char *)a4[1] - (unsigned char *)*a4) >> 3 < (unint64_t)(v9 - v31))
    {
      do
      {
        unsigned int v32 = v61;
        if (v61 > 9u
          || ((uint64_t v33 = sub_1135E68(a1, (uint64_t **)&v66, &v62, (uint64_t)v8, &v61, v61, 9u),
               unint64_t v34 = (uint64_t *)v67,
               unsigned int v32 = v61,
               v67 != (char *)v33)
            ? (BOOL v35 = v61 >= 0xAu)
            : (BOOL v35 = 1),
              v35))
        {
          if (v32 <= 0xB)
          {
            unsigned int v32 = 12;
            unsigned __int8 v61 = 12;
          }
          uint64_t v36 = sub_1135E68(a1, (uint64_t **)&v66, &v62, (uint64_t)v8, &v61, v32, 0x11u);
          unint64_t v34 = (uint64_t *)v67;
        }
        else
        {
          uint64_t v36 = v33;
        }
        if (v36 == v34) {
          break;
        }
        uint64_t v37 = (char *)v36 - (unsigned char *)v66;
        unint64_t v38 = ((unint64_t)v62 << 32) | ((*(void *)((char *)__p
                                                                        + (((char *)v36 - (unsigned char *)v66) >> 1))
                                                            - *a2) >> 4);
        uint64_t v40 = (unint64_t *)a4[1];
        unint64_t v39 = (unint64_t)a4[2];
        if ((unint64_t)v40 >= v39)
        {
          uint64_t v42 = ((char *)v40 - (unsigned char *)*a4) >> 3;
          if ((unint64_t)(v42 + 1) >> 61) {
            sub_2E00();
          }
          uint64_t v43 = v39 - (void)*a4;
          uint64_t v44 = v43 >> 2;
          if (v43 >> 2 <= (unint64_t)(v42 + 1)) {
            uint64_t v44 = v42 + 1;
          }
          if ((unint64_t)v43 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v45 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v45 = v44;
          }
          if (v45) {
            unint64_t v46 = (char *)sub_1122DC0((uint64_t)(a4 + 2), v45);
          }
          else {
            unint64_t v46 = 0;
          }
          uint64_t v47 = (unint64_t *)&v46[8 * v42];
          unint64_t *v47 = v38;
          unint64_t v41 = (char *)(v47 + 1);
          unint64_t v49 = (char *)*a4;
          double v48 = (char *)a4[1];
          if (v48 != *a4)
          {
            do
            {
              unint64_t v50 = *((void *)v48 - 1);
              v48 -= 8;
              *--uint64_t v47 = v50;
            }
            while (v48 != v49);
            double v48 = (char *)*a4;
          }
          *a4 = v47;
          a4[1] = v41;
          a4[2] = &v46[8 * v45];
          if (v48) {
            operator delete(v48);
          }
        }
        else
        {
          unint64_t *v40 = v38;
          unint64_t v41 = (char *)(v40 + 1);
        }
        a4[1] = v41;
        if (v59 && (v70 & 0x8000000000000000) == 0)
        {
          int v58 = -1;
          if (v61 != 3 && v61 != 12)
          {
            if (SHIDWORD(v70) <= (int)((unint64_t)((char *)v36 - (unsigned char *)v66) >> 4)) {
              goto LABEL_69;
            }
            int v58 = HIDWORD(v70) - 1;
          }
          HIDWORD(v70) = v58;
        }
LABEL_69:
        uint64_t v51 = v37 >> 4;
        uint64_t v52 = v67;
        int64_t v53 = (char *)v66 + 16 * (v37 >> 4);
        for (uint64_t i = v53 + 16; i != v52; i += 16)
        {
          uint64_t v55 = *((void *)i + 1);
          *((void *)i - 2) = *(void *)i;
          *((void *)i - 1) = v55;
          v53 += 16;
        }
        uint64_t v67 = v53;
        uint64_t v56 = (char *)__p + 8 * v51;
        int64_t v57 = v64 - (v56 + 8);
        if (v64 != v56 + 8)
        {
          memmove((char *)__p + 8 * v51, v56 + 8, v64 - (v56 + 8));
          unint64_t v41 = (char *)a4[1];
        }
        v64 = &v56[v57];
      }
      while ((v41 - (unsigned char *)*a4) >> 3 < (unint64_t)((uint64_t)(a2[1] - *a2) >> 4));
    }
    if (__p)
    {
      v64 = (char *)__p;
      operator delete(__p);
    }
    if (v66)
    {
      uint64_t v67 = (char *)v66;
      operator delete(v66);
    }
  }
}

void sub_116D098(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  unint64_t v19 = *(void **)v17;
  if (*(void *)v17)
  {
    *(void *)(v17 + 8) = v19;
    operator delete(v19);
  }
  _Unwind_Resume(exception_object);
}

void sub_116D0F0()
{
}

uint64_t sub_116D104()
{
  return 4;
}

uint64_t sub_116D10C()
{
  return 0;
}

uint64_t sub_116D114()
{
  return 0;
}

unint64_t sub_116D11C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116D1F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116D224(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116D300(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116D330(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116D414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116D444(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116D514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116D55C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116D638(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

unint64_t sub_116D680(uint64_t **a1, uint64_t a2, int *a3, unsigned char *a4)
{
  if (*(void *)(a2 + 8) == *(void *)a2) {
    return 0x1FFFFFFFFLL;
  }
  unsigned int v11 = 0;
  char v8 = sub_113A340(a1, (uint64_t **)a2, &v11, a3, a4, 1u, 9u);
  unsigned int v9 = v11;
  if (v11 == 1)
  {
    char v8 = sub_113A340(a1, (uint64_t **)a2, &v11, a3, a4, 0xCu, 0x11u);
    unsigned int v9 = v11;
  }
  if (*(uint64_t **)(a2 + 8) == v8) {
    return 0x1FFFFFFFFLL;
  }
  else {
    return (((unint64_t)v8 - *(void *)a2) >> 4) | ((unint64_t)v9 << 32);
  }
}

unint64_t sub_116D738(uint64_t **a1, void *a2, unsigned int **a3, int *a4)
{
  uint64_t v4 = 0x1FFFFFFFFLL;
  if (a2[1] != *a2)
  {
    unsigned int v9 = 0;
    char v8 = 0;
    uint64_t v6 = sub_113B0D8(a1, (uint64_t)a2, a3, &v9, a4, &v8, 9u);
    if ((uint64_t *)a2[1] != v6) {
      return (((unint64_t)v6 - *a2) >> 4) | ((unint64_t)v9 << 32);
    }
  }
  return v4;
}

void sub_116D7AC(uint64_t **a1@<X0>, void *a2@<X1>, long long *a3@<X2>, void **a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  uint64_t v5 = a2[1] - *a2;
  if (v5)
  {
    sub_113196C(a4, v5 >> 4);
    LODWORD(v69) = 50331648;
    *((void *)&v69 + 1) = 0;
    uint64_t v70 = -4294967282;
    if (a3)
    {
      long long v69 = *a3;
      uint64_t v70 = *((void *)a3 + 2);
      char v8 = (int *)&v69;
    }
    else
    {
      char v8 = 0;
    }
    long long v66 = 0;
    uint64_t v67 = 0;
    uint64_t v68 = 0;
    __p = 0;
    v64 = 0;
    v65 = 0;
    sub_1139150((uint64_t)&v66, 0);
    sub_113962C((uint64_t)&__p, 0);
    unsigned int v59 = a3;
    unsigned int v9 = (_OWORD *)*a2;
    if (*a2 == a2[1])
    {
      unint64_t v31 = (_OWORD *)*a2;
    }
    else
    {
      do
      {
        double v10 = v67;
        if (v67 >= v68)
        {
          uint64_t v12 = (v67 - (unsigned char *)v66) >> 4;
          unint64_t v13 = v12 + 1;
          if ((unint64_t)(v12 + 1) >> 60) {
            sub_2E00();
          }
          uint64_t v14 = v68 - (unsigned char *)v66;
          if ((v68 - (unsigned char *)v66) >> 3 > v13) {
            unint64_t v13 = v14 >> 3;
          }
          if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v15 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v15 = v13;
          }
          if (v15) {
            double v16 = (char *)sub_1121C00((uint64_t)&v68, v15);
          }
          else {
            double v16 = 0;
          }
          uint64_t v17 = &v16[16 * v12];
          *(_OWORD *)uint64_t v17 = *v9;
          unint64_t v19 = (char *)v66;
          uint64_t v18 = v67;
          uint64_t v20 = v17;
          if (v67 != v66)
          {
            do
            {
              *((_OWORD *)v20 - 1) = *((_OWORD *)v18 - 1);
              v20 -= 16;
              v18 -= 16;
            }
            while (v18 != v19);
            uint64_t v18 = (char *)v66;
          }
          unsigned int v11 = v17 + 16;
          long long v66 = v20;
          uint64_t v67 = v17 + 16;
          uint64_t v68 = &v16[16 * v15];
          if (v18) {
            operator delete(v18);
          }
        }
        else
        {
          *(_OWORD *)uint64_t v67 = *v9;
          unsigned int v11 = v10 + 16;
        }
        uint64_t v67 = v11;
        unint64_t v21 = v64;
        if (v64 >= v65)
        {
          uint64_t v23 = (v64 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v23 + 1) >> 61) {
            sub_2E00();
          }
          unint64_t v24 = (v65 - (unsigned char *)__p) >> 2;
          if (v24 <= v23 + 1) {
            unint64_t v24 = v23 + 1;
          }
          if ((unint64_t)(v65 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v25 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v25 = v24;
          }
          if (v25) {
            uint64_t v26 = (char *)sub_1122DC0((uint64_t)&v65, v25);
          }
          else {
            uint64_t v26 = 0;
          }
          double v27 = &v26[8 * v23];
          *(void *)double v27 = v9;
          uint64_t v22 = v27 + 8;
          uint64_t v29 = (char *)__p;
          double v28 = v64;
          if (v64 != __p)
          {
            do
            {
              uint64_t v30 = *((void *)v28 - 1);
              v28 -= 8;
              *((void *)v27 - 1) = v30;
              v27 -= 8;
            }
            while (v28 != v29);
            double v28 = (char *)__p;
          }
          __p = v27;
          v64 = v22;
          v65 = &v26[8 * v25];
          if (v28) {
            operator delete(v28);
          }
        }
        else
        {
          *(void *)v64 = v9;
          uint64_t v22 = v21 + 8;
        }
        v64 = v22;
        ++v9;
      }
      while (v9 != (_OWORD *)a2[1]);
      unint64_t v31 = (_OWORD *)*a2;
    }
    unsigned int v62 = 1;
    unsigned __int8 v61 = 1;
    if (((unsigned char *)a4[1] - (unsigned char *)*a4) >> 3 < (unint64_t)(v9 - v31))
    {
      do
      {
        unsigned int v32 = v61;
        if (v61 > 9u
          || ((uint64_t v33 = sub_113A340(a1, (uint64_t **)&v66, &v62, v8, &v61, v61, 9u),
               unint64_t v34 = (uint64_t *)v67,
               unsigned int v32 = v61,
               v67 != (char *)v33)
            ? (BOOL v35 = v61 >= 0xAu)
            : (BOOL v35 = 1),
              v35))
        {
          if (v32 <= 0xB)
          {
            unsigned int v32 = 12;
            unsigned __int8 v61 = 12;
          }
          uint64_t v36 = sub_113A340(a1, (uint64_t **)&v66, &v62, v8, &v61, v32, 0x11u);
          unint64_t v34 = (uint64_t *)v67;
        }
        else
        {
          uint64_t v36 = v33;
        }
        if (v36 == v34) {
          break;
        }
        uint64_t v37 = (char *)v36 - (unsigned char *)v66;
        unint64_t v38 = ((unint64_t)v62 << 32) | ((*(void *)((char *)__p
                                                                        + (((char *)v36 - (unsigned char *)v66) >> 1))
                                                            - *a2) >> 4);
        uint64_t v40 = (unint64_t *)a4[1];
        unint64_t v39 = (unint64_t)a4[2];
        if ((unint64_t)v40 >= v39)
        {
          uint64_t v42 = ((char *)v40 - (unsigned char *)*a4) >> 3;
          if ((unint64_t)(v42 + 1) >> 61) {
            sub_2E00();
          }
          uint64_t v43 = v39 - (void)*a4;
          uint64_t v44 = v43 >> 2;
          if (v43 >> 2 <= (unint64_t)(v42 + 1)) {
            uint64_t v44 = v42 + 1;
          }
          if ((unint64_t)v43 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v45 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v45 = v44;
          }
          if (v45) {
            unint64_t v46 = (char *)sub_1122DC0((uint64_t)(a4 + 2), v45);
          }
          else {
            unint64_t v46 = 0;
          }
          uint64_t v47 = (unint64_t *)&v46[8 * v42];
          unint64_t *v47 = v38;
          unint64_t v41 = (char *)(v47 + 1);
          unint64_t v49 = (char *)*a4;
          double v48 = (char *)a4[1];
          if (v48 != *a4)
          {
            do
            {
              unint64_t v50 = *((void *)v48 - 1);
              v48 -= 8;
              *--uint64_t v47 = v50;
            }
            while (v48 != v49);
            double v48 = (char *)*a4;
          }
          *a4 = v47;
          a4[1] = v41;
          a4[2] = &v46[8 * v45];
          if (v48) {
            operator delete(v48);
          }
        }
        else
        {
          unint64_t *v40 = v38;
          unint64_t v41 = (char *)(v40 + 1);
        }
        a4[1] = v41;
        if (v59 && (v70 & 0x8000000000000000) == 0)
        {
          int v58 = -1;
          if (v61 != 3 && v61 != 12)
          {
            if (SHIDWORD(v70) <= (int)((unint64_t)((char *)v36 - (unsigned char *)v66) >> 4)) {
              goto LABEL_69;
            }
            int v58 = HIDWORD(v70) - 1;
          }
          HIDWORD(v70) = v58;
        }
LABEL_69:
        uint64_t v51 = v37 >> 4;
        uint64_t v52 = v67;
        int64_t v53 = (char *)v66 + 16 * (v37 >> 4);
        for (uint64_t i = v53 + 16; i != v52; i += 16)
        {
          uint64_t v55 = *((void *)i + 1);
          *((void *)i - 2) = *(void *)i;
          *((void *)i - 1) = v55;
          v53 += 16;
        }
        uint64_t v67 = v53;
        uint64_t v56 = (char *)__p + 8 * v51;
        int64_t v57 = v64 - (v56 + 8);
        if (v64 != v56 + 8)
        {
          memmove((char *)__p + 8 * v51, v56 + 8, v64 - (v56 + 8));
          unint64_t v41 = (char *)a4[1];
        }
        v64 = &v56[v57];
      }
      while ((v41 - (unsigned char *)*a4) >> 3 < (unint64_t)((uint64_t)(a2[1] - *a2) >> 4));
    }
    if (__p)
    {
      v64 = (char *)__p;
      operator delete(__p);
    }
    if (v66)
    {
      uint64_t v67 = (char *)v66;
      operator delete(v66);
    }
  }
}

void sub_116DCA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17)
{
  unint64_t v19 = *(void **)v17;
  if (*(void *)v17)
  {
    *(void *)(v17 + 8) = v19;
    operator delete(v19);
  }
  _Unwind_Resume(exception_object);
}

void sub_116DD00()
{
}

uint64_t sub_116DD14()
{
  return 4;
}

uint64_t sub_116DD1C()
{
  return 0;
}

uint64_t sub_116DD24()
{
  return 1;
}

unint64_t sub_116DD2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116DE04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116DE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116DF10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116DF40(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116E024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116E054(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116E124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116E16C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116E248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116E294()
{
}

uint64_t sub_116E2A8()
{
  return 4;
}

uint64_t sub_116E2B0()
{
  return 0;
}

uint64_t sub_116E2B8()
{
  return 1;
}

unint64_t sub_116E2C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116E398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116E3C8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116E4A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116E4D4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116E5B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116E5E8(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116E6B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116E700(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116E7DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116E828()
{
}

uint64_t sub_116E83C()
{
  return 4;
}

uint64_t sub_116E844()
{
  return 0;
}

uint64_t sub_116E84C()
{
  return 2;
}

unint64_t sub_116E854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116E92C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116E95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116EA38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116EA68(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116EB4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116EB7C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116EC4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116EC94(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116ED70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116EDBC()
{
}

uint64_t sub_116EDD0()
{
  return 4;
}

uint64_t sub_116EDD8()
{
  return 0;
}

uint64_t sub_116EDE0()
{
  return 2;
}

unint64_t sub_116EDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116EEC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116EEF0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116EFCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116EFFC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116F0E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116F110(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116F1E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116F228(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116F304(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116F350()
{
}

uint64_t sub_116F364()
{
  return 4;
}

uint64_t sub_116F36C()
{
  return 0;
}

uint64_t sub_116F374()
{
  return 3;
}

unint64_t sub_116F37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116F454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116F484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116F560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116F590(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116F674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116F6A4(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116F774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116F7BC(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116F898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116F8E4()
{
}

uint64_t sub_116F8F8()
{
  return 4;
}

uint64_t sub_116F900()
{
  return 0;
}

uint64_t sub_116F908()
{
  return 3;
}

unint64_t sub_116F910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116F9E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116FA18(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_116FAF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116FB24(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_116FC08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_116FC38(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_116FD08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116FD50(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1135CCC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_116FE2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_116FE78()
{
}

uint64_t sub_116FE8C()
{
  return 4;
}

uint64_t sub_116FE94()
{
  return 1;
}

uint64_t sub_116FE9C()
{
  return 0;
}

unint64_t sub_116FEA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_116FF7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_116FFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1170088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11700B8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_117019C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11701CC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_117029C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11702E4(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11703C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_117040C()
{
}

uint64_t sub_1170420()
{
  return 4;
}

uint64_t sub_1170428()
{
  return 1;
}

uint64_t sub_1170430()
{
  return 0;
}

unint64_t sub_1170438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1170510(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1170540(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_117061C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_117064C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1170730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1170760(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1170830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1170878(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1170954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11709A0()
{
}

uint64_t sub_11709B4()
{
  return 4;
}

uint64_t sub_11709BC()
{
  return 1;
}

uint64_t sub_11709C4()
{
  return 1;
}

unint64_t sub_11709CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1170AA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1170AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1170BB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1170BE0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1170CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1170CF4(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1170DC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1170E0C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1170EE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1170F34()
{
}

uint64_t sub_1170F48()
{
  return 4;
}

uint64_t sub_1170F50()
{
  return 1;
}

uint64_t sub_1170F58()
{
  return 1;
}

unint64_t sub_1170F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1171038(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1171068(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1171144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1171174(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1171258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1171288(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1171358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11713A0(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_117147C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11714C8()
{
}

uint64_t sub_11714DC()
{
  return 4;
}

uint64_t sub_11714E4()
{
  return 1;
}

uint64_t sub_11714EC()
{
  return 2;
}

unint64_t sub_11714F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11715CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11715FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11716D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1171708(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11717EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_117181C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11718EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1171934(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1171A10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1171A5C()
{
}

uint64_t sub_1171A70()
{
  return 4;
}

uint64_t sub_1171A78()
{
  return 1;
}

uint64_t sub_1171A80()
{
  return 2;
}

unint64_t sub_1171A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1171B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1171B90(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1171C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1171C9C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1171D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1171DB0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1171E80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1171EC8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1171FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1171FF0()
{
}

uint64_t sub_1172004()
{
  return 4;
}

uint64_t sub_117200C()
{
  return 1;
}

uint64_t sub_1172014()
{
  return 3;
}

unint64_t sub_117201C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11720F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1172124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1172200(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1172230(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1172314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1172344(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1172414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_117245C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1172538(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1172584()
{
}

uint64_t sub_1172598()
{
  return 4;
}

uint64_t sub_11725A0()
{
  return 1;
}

uint64_t sub_11725A8()
{
  return 3;
}

unint64_t sub_11725B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1172688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11726B8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1172794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11727C4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11728A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11728D8(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11729A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11729F0(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_113EEA8(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1172ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1172B18()
{
}

uint64_t sub_1172B2C()
{
  return 4;
}

uint64_t sub_1172B34()
{
  return 2;
}

uint64_t sub_1172B3C()
{
  return 0;
}

unint64_t sub_1172B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1172C1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1172C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1172D28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1172D58(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1172E3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1172E6C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1172F3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1172F84(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1173060(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11730AC()
{
}

uint64_t sub_11730C0()
{
  return 4;
}

uint64_t sub_11730C8()
{
  return 2;
}

uint64_t sub_11730D0()
{
  return 0;
}

unint64_t sub_11730D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11731B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11731E0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11732BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11732EC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11733D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1173400(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11734D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1173518(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11735F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1173640()
{
}

uint64_t sub_1173654()
{
  return 4;
}

uint64_t sub_117365C()
{
  return 2;
}

uint64_t sub_1173664()
{
  return 1;
}

unint64_t sub_117366C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1173744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1173774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1173850(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1173880(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1173964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1173994(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1173A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1173AAC(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1173B88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1173BD4()
{
}

uint64_t sub_1173BE8()
{
  return 4;
}

uint64_t sub_1173BF0()
{
  return 2;
}

uint64_t sub_1173BF8()
{
  return 1;
}

unint64_t sub_1173C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1173CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1173D08(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1173DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1173E14(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1173EF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1173F28(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1173FF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1174040(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_117411C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1174168()
{
}

uint64_t sub_117417C()
{
  return 4;
}

uint64_t sub_1174184()
{
  return 2;
}

uint64_t sub_117418C()
{
  return 2;
}

unint64_t sub_1174194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_117426C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_117429C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1174378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11743A8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_117448C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11744BC(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_117458C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11745D4(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11746B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11746FC()
{
}

uint64_t sub_1174710()
{
  return 4;
}

uint64_t sub_1174718()
{
  return 2;
}

uint64_t sub_1174720()
{
  return 2;
}

unint64_t sub_1174728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1174800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1174830(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_117490C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_117493C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1174A20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1174A50(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1174B20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1174B68(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1174C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1174C90()
{
}

uint64_t sub_1174CA4()
{
  return 4;
}

uint64_t sub_1174CAC()
{
  return 2;
}

uint64_t sub_1174CB4()
{
  return 3;
}

unint64_t sub_1174CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1174D94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1174DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1174EA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1174ED0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1174FB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1174FE4(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11750B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11750FC(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11751D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1175224()
{
}

uint64_t sub_1175238()
{
  return 4;
}

uint64_t sub_1175240()
{
  return 2;
}

uint64_t sub_1175248()
{
  return 3;
}

unint64_t sub_1175250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1175328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1175358(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1175434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1175464(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1175548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1175578(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1175648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1175690(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1141BDC(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_117576C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11757B8()
{
}

uint64_t sub_11757CC()
{
  return 4;
}

uint64_t sub_11757D4()
{
  return 3;
}

uint64_t sub_11757DC()
{
  return 0;
}

unint64_t sub_11757E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11758BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11758EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11759C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11759F8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1175ADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1175B0C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1175BDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1175C24(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1175D00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1175D4C()
{
}

uint64_t sub_1175D60()
{
  return 4;
}

uint64_t sub_1175D68()
{
  return 3;
}

uint64_t sub_1175D70()
{
  return 0;
}

unint64_t sub_1175D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1175E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1175E80(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1175F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1175F8C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_1135D60(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1176070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11760A0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1176170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11761B8(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_1135D60(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1176294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_11762E0()
{
}

uint64_t sub_11762F4()
{
  return 4;
}

uint64_t sub_11762FC()
{
  return 3;
}

uint64_t sub_1176304()
{
  return 1;
}

unint64_t sub_117630C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11763E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1176414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11764F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1176520(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1176604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1176634(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1176704(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_117674C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1176828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1176874()
{
}

uint64_t sub_1176888()
{
  return 4;
}

uint64_t sub_1176890()
{
  return 3;
}

uint64_t sub_1176898()
{
  return 1;
}

unint64_t sub_11768A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1176978(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11769A8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1176A84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1176AB4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113BE84(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1176B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1176BC8(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1176C98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1176CE0(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113BE84(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1176DBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1176E08()
{
}

uint64_t sub_1176E1C()
{
  return 4;
}

uint64_t sub_1176E24()
{
  return 3;
}

uint64_t sub_1176E2C()
{
  return 2;
}

unint64_t sub_1176E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1176F0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1176F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1177018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1177048(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_117712C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_117715C(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_117722C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1177274(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1177350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_117739C()
{
}

uint64_t sub_11773B0()
{
  return 4;
}

uint64_t sub_11773B8()
{
  return 3;
}

uint64_t sub_11773C0()
{
  return 2;
}

unint64_t sub_11773C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_11774A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11774D0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11775AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_11775DC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113CE90(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11776C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_11776F0(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11777C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1177808(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113CE90(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_11778E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1177930()
{
}

uint64_t sub_1177944()
{
  return 4;
}

uint64_t sub_117794C()
{
  return 3;
}

uint64_t sub_1177954()
{
  return 3;
}

unint64_t sub_117795C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116CA70((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1177A34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1177A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116CA70((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_1177B40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1177B70(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116CB28((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_1177C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1177C84(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_1177D54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1177D9C(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116CB9C((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_1177E78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1177EC4()
{
}

uint64_t sub_1177ED8()
{
  return 4;
}

uint64_t sub_1177EE0()
{
  return 3;
}

uint64_t sub_1177EE8()
{
  return 3;
}

unint64_t sub_1177EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v8);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v9 = 0;
  unint64_t v5 = sub_116D680((uint64_t **)v8, (uint64_t)__p, 0, &v9);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v8[0])
  {
    v8[1] = v8[0];
    operator delete(v8[0]);
  }
  return v5;
}

void sub_1177FC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1177FF8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v10);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  char v11 = 0;
  unint64_t v7 = sub_116D680((uint64_t **)v10, (uint64_t)__p, a4, &v11);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v10[0])
  {
    v10[1] = v10[0];
    operator delete(v10[0]);
  }
  return v7;
}

void sub_11780D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
}

unint64_t sub_1178104(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int **a4, int *a5)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a2, (uint64_t)&unk_252BB90, v12);
  sub_113DE9C(a3, (uint64_t)&unk_252BB90, __p);
  unint64_t v9 = sub_116D738((uint64_t **)v12, __p, a4, a5);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v12[0])
  {
    v12[1] = v12[0];
    operator delete(v12[0]);
  }
  return v9;
}

void sub_11781E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
}

void sub_1178218(uint64_t a1@<X1>, uint64_t a2@<X2>, void **a3@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v7);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v7, __p, 0, a3);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v7[0])
  {
    v7[1] = v7[0];
    operator delete(v7[0]);
  }
}

void sub_11782E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

void sub_1178330(uint64_t a1@<X1>, uint64_t a2@<X2>, long long *a3@<X3>, void **a4@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_252BB98, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_252BB98))
  {
    nullsub_1(&unk_252BB90);
    __cxa_guard_release(&qword_252BB98);
  }
  sub_1144910(a1, (uint64_t)&unk_252BB90, v9);
  sub_113DE9C(a2, (uint64_t)&unk_252BB90, __p);
  sub_116D7AC((uint64_t **)v9, __p, a3, a4);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v9[0])
  {
    v9[1] = v9[0];
    operator delete(v9[0]);
  }
}

void sub_117840C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
}

__n128 sub_1178454(__n128 *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a2 + 24);
  *a1 = result;
  return result;
}

uint64_t sub_1178460(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a1 + 8)) {
    *(unsigned char *)(a1 + 8) = 1;
  }
  *(void *)a1 = a2;
  uint64_t v4 = *(void *)sub_40EFE8(a1);
  char v5 = 1;
  if (*(unsigned char *)(a1 + 24)) {
    sub_40EFE8(a1 + 16);
  }
  sub_11226C8(a1 + 32, &v4);
  return a1;
}

uint64_t sub_11784F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  uint64_t v3 = sub_1133FBC(&v5);
  return sub_1178460(a1, (uint64_t)v3);
}

uint64_t sub_1178530(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a1 + 24)) {
    *(unsigned char *)(a1 + 24) = 1;
  }
  *(void *)(a1 + 16) = a2;
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v5 = *(void *)sub_40EFE8(a1);
    int v3 = *(unsigned __int8 *)(a1 + 24);
    char v6 = 1;
    if (!v3) {
      goto LABEL_8;
    }
  }
  else
  {
    LOBYTE(v5) = 0;
    char v6 = 0;
  }
  sub_40EFE8(a1 + 16);
LABEL_8:
  sub_11226C8(a1 + 32, &v5);
  return a1;
}

uint64_t sub_11785D0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = a2;
  int v3 = sub_1133FBC(&v5);
  return sub_1178530(a1, (uint64_t)v3);
}

uint64_t sub_1178610(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if (!*(unsigned char *)(a1 + 40)) {
    *(unsigned char *)(a1 + 40) = 1;
  }
  *(void *)(a1 + 32) = v3;
  char v4 = *(unsigned char *)(a1 + 8);
  if (v4)
  {
    uint64_t v6 = *(void *)sub_40EFE8(a1);
    char v4 = 1;
  }
  else
  {
    LOBYTE(v6) = 0;
  }
  char v7 = v4;
  if (*(unsigned char *)(a1 + 24)) {
    sub_40EFE8(a1 + 16);
  }
  sub_11226C8(a1 + 32, &v6);
  return a1;
}

uint64_t sub_11786B8(uint64_t a1, unsigned __int8 *a2, unint64_t a3)
{
  if (a3 >= 7) {
    a3 = 7;
  }
  sub_11231DC((unint64_t *)&v5, a2, a3);
  uint64_t v6 = sub_1134298(&v5);
  return sub_1178610(a1, (uint64_t *)&v6);
}

void *sub_117870C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_11787BC((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_119492C(a1 + 12);
  sub_11948AC(a1 + 9);
  sub_119482C(a1 + 6);
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_11787BC(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 120);
  uint64_t v2 = (void ***)(a1 + 120);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  __n128 result = (void ***)(a1 + 128);
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252BBA0)
  {
    if (*(void *)(a1 + 136))
    {
      sub_1463FF8();
      operator delete();
    }
    if (*(void *)(a1 + 144))
    {
      sub_146E3A8();
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 152);
    if (v5)
    {
      sub_1182E7C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 160);
    if (v6)
    {
      sub_117DB88(v6);
      operator delete();
    }
    char v7 = *(void **)(a1 + 168);
    if (v7)
    {
      sub_117FAFC(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 176);
    if (v8)
    {
      sub_182B32C(v8);
      operator delete();
    }
    __n128 result = *(void ****)(a1 + 184);
    if (result)
    {
      sub_182E7B8(result);
      operator delete();
    }
  }
  return result;
}

void sub_1178914(void *a1)
{
  sub_117870C(a1);

  operator delete();
}

uint64_t sub_117894C(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  uint64_t v2 = *(unsigned int *)(result + 56);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      __n128 result = sub_11820F4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 80);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v7 = *v6++;
      __n128 result = sub_11819C8(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 80) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 104);
  if ((int)v8 >= 1)
  {
    unint64_t v9 = (uint64_t *)(*(void *)(v1 + 112) + 8);
    do
    {
      uint64_t v10 = *v9++;
      __n128 result = sub_117B29C(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 104) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if (!(_BYTE)v11) {
    goto LABEL_23;
  }
  if ((v11 & 1) == 0)
  {
    if ((v11 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_33:
    unint64_t v15 = *(void *)(v1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v15 + 23) < 0)
    {
      **(unsigned char **)unint64_t v15 = 0;
      *(void *)(v15 + 8) = 0;
      if ((v11 & 4) != 0) {
        goto LABEL_37;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v15 = 0;
      *(unsigned char *)(v15 + 23) = 0;
      if ((v11 & 4) != 0) {
        goto LABEL_37;
      }
    }
LABEL_17:
    if ((v11 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
  unint64_t v14 = *(void *)(v1 + 120) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v14 + 23) < 0)
  {
    **(unsigned char **)unint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    if ((v11 & 2) != 0) {
      goto LABEL_33;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v14 = 0;
    *(unsigned char *)(v14 + 23) = 0;
    if ((v11 & 2) != 0) {
      goto LABEL_33;
    }
  }
LABEL_16:
  if ((v11 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_37:
  __n128 result = sub_1464034(*(void *)(v1 + 136));
  if ((v11 & 8) == 0)
  {
LABEL_18:
    if ((v11 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  __n128 result = sub_13F04AC(*(void *)(v1 + 144));
  if ((v11 & 0x10) == 0)
  {
LABEL_19:
    if ((v11 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_40:
    __n128 result = sub_1178B48(*(void *)(v1 + 160));
    if ((v11 & 0x40) == 0)
    {
LABEL_21:
      if ((v11 & 0x80) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    goto LABEL_41;
  }
LABEL_39:
  __n128 result = sub_1178B04(*(void *)(v1 + 152));
  if ((v11 & 0x20) != 0) {
    goto LABEL_40;
  }
LABEL_20:
  if ((v11 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_41:
  __n128 result = sub_1178C4C(*(void *)(v1 + 168));
  if ((v11 & 0x80) != 0) {
LABEL_22:
  }
    __n128 result = sub_182B368(*(void *)(v1 + 176));
LABEL_23:
  if ((v11 & 0x100) != 0) {
    __n128 result = sub_182E7F4(*(void *)(v1 + 184));
  }
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_WORD *)(v12 + 184) = 0;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_1178B04(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 80) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1178B48(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (!(_BYTE)v2) {
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t result = sub_117DDD0(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_24;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_117DDD0(*(void *)(v1 + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = sub_117DDD0(*(void *)(v1 + 40));
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = sub_117DDD0(*(void *)(v1 + 48));
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_27:
    uint64_t result = sub_117DDF4(*(void *)(v1 + 64));
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_26:
  uint64_t result = sub_117DDD0(*(void *)(v1 + 56));
  if ((v2 & 0x20) != 0) {
    goto LABEL_27;
  }
LABEL_8:
  if ((v2 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_28:
  uint64_t result = sub_117DDF4(*(void *)(v1 + 72));
  if ((v2 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t result = sub_117DDF4(*(void *)(v1 + 80));
LABEL_11:
  if ((v2 & 0x300) != 0)
  {
    if ((v2 & 0x100) != 0) {
      uint64_t result = sub_117DDF4(*(void *)(v1 + 88));
    }
    if ((v2 & 0x200) != 0) {
      uint64_t result = sub_117DDF4(*(void *)(v1 + 96));
    }
  }
  if ((v2 & 0x3C00) != 0)
  {
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1178C4C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
  }
  if ((v1 & 0x3000000) != 0) {
    *(void *)(a1 + 120) = 0;
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1178CAC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v68 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v68, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v68 + 1);
    unsigned int v9 = **(unsigned char **)v68;
    if ((char)**(unsigned char **)v68 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v68, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v68 + 2);
      }
    }
    *(void *)uint64_t v68 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v12 = *(void *)(a1 + 136);
        if (!v12)
        {
          char v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            char v13 = (void *)*v13;
          }
          sub_1478F54((uint64_t)v13);
          uint64_t v12 = v14;
          *(void *)(a1 + 136) = v14;
          uint64_t v8 = *(unsigned __int8 **)v68;
        }
        uint64_t v15 = sub_11793D8(a3, v12, v8);
        goto LABEL_116;
      case 2u:
        if (v9 != 18) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 144);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          sub_147937C((uint64_t)v17);
          uint64_t v16 = v18;
          *(void *)(a1 + 144) = v18;
          uint64_t v8 = *(unsigned __int8 **)v68;
        }
        uint64_t v15 = sub_1179468(a3, v16, v8);
        goto LABEL_116;
      case 3u:
        if (v9 == 26)
        {
          uint64_t v15 = (uint64_t)sub_188C2DC((unsigned int *)(a1 + 24), v8, (uint64_t)a3);
          goto LABEL_116;
        }
        if (v9 == 24)
        {
          uint64_t v65 = sub_110DB5C((uint64_t *)v68);
          sub_11794F8(a1, v65);
          if (!*(void *)v68) {
            goto LABEL_122;
          }
LABEL_117:
          if (sub_11947B8((uint64_t)a3, (char **)v68, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_109:
        if (v9) {
          BOOL v66 = (v9 & 7) == 4;
        }
        else {
          BOOL v66 = 1;
        }
        if (!v66)
        {
          if (*v7)
          {
            uint64_t v67 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v67 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v68;
          }
          uint64_t v15 = (uint64_t)sub_1885AC0(v9, v67, (char *)v8, a3);
LABEL_116:
          *(void *)uint64_t v68 = v15;
          if (!v15) {
            goto LABEL_122;
          }
          goto LABEL_117;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_122:
        }
          *(void *)uint64_t v68 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v68;
      case 4u:
        if (v9 != 34) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v19 = *(void *)(a1 + 152);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          sub_1184A1C((uint64_t)v20);
          uint64_t v19 = v21;
          *(void *)(a1 + 152) = v21;
          uint64_t v8 = *(unsigned __int8 **)v68;
        }
        uint64_t v15 = (uint64_t)sub_1179568(a3, v19, v8);
        goto LABEL_116;
      case 5u:
        if (v9 != 42) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v23 = (uint64_t *)*v23;
        }
        unint64_t v24 = (void *)(a1 + 120);
        goto LABEL_37;
      case 6u:
        if (v9 != 50) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v23 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v23 = (uint64_t *)*v23;
        }
        unint64_t v24 = (void *)(a1 + 128);
LABEL_37:
        uint64_t v26 = (std::string *)sub_1880F84(v24, v23);
        uint64_t v15 = (uint64_t)sub_188C244(v26, *(char **)v68, (uint64_t)a3);
        goto LABEL_116;
      case 7u:
        if (v9 != 58) {
          goto LABEL_109;
        }
        double v27 = v8 - 1;
        while (1)
        {
          double v28 = v27 + 1;
          *(void *)uint64_t v68 = v27 + 1;
          uint64_t v29 = *(_DWORD **)(a1 + 64);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 56), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 56) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            uint64_t v32 = sub_118495C(*(void *)(a1 + 48));
            uint64_t v31 = sub_188CDC8(a1 + 48, v32);
            double v28 = *(unsigned __int8 **)v68;
          }
          double v27 = (unsigned __int8 *)sub_11795F8(a3, v31, v28);
          *(void *)uint64_t v68 = v27;
          if (!v27) {
            goto LABEL_122;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 58) {
            goto LABEL_117;
          }
        }
      case 8u:
        if (v9 != 66) {
          goto LABEL_109;
        }
        uint64_t v33 = v8 - 1;
        while (1)
        {
          unint64_t v34 = v33 + 1;
          *(void *)uint64_t v68 = v33 + 1;
          BOOL v35 = *(_DWORD **)(a1 + 88);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 80), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 80) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            uint64_t v38 = sub_11848D4(*(void *)(a1 + 72));
            uint64_t v37 = sub_188CDC8(a1 + 72, v38);
            unint64_t v34 = *(unsigned __int8 **)v68;
          }
          uint64_t v33 = (unsigned __int8 *)sub_1179688(a3, v37, v34);
          *(void *)uint64_t v68 = v33;
          if (!v33) {
            goto LABEL_122;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 66) {
            goto LABEL_117;
          }
        }
      case 9u:
        if (v9 != 72) {
          goto LABEL_109;
        }
        v5 |= 0x200u;
        unint64_t v39 = (char *)(v8 + 1);
        uint64_t v40 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_62;
        }
        int v41 = *v39;
        uint64_t v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v61 = sub_188C138((uint64_t)v8, v40);
          *(void *)uint64_t v68 = v61;
          *(unsigned char *)(a1 + 192) = v62 != 0;
          if (!v61) {
            goto LABEL_122;
          }
        }
        else
        {
          unint64_t v39 = (char *)(v8 + 2);
LABEL_62:
          *(void *)uint64_t v68 = v39;
          *(unsigned char *)(a1 + 192) = v40 != 0;
        }
        goto LABEL_117;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_109;
        }
        v5 |= 0x400u;
        uint64_t v42 = (char *)(v8 + 1);
        uint64_t v43 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_67;
        }
        int v44 = *v42;
        uint64_t v43 = v43 + (v44 << 7) - 128;
        if (v44 < 0)
        {
          uint64_t v63 = sub_188C138((uint64_t)v8, v43);
          *(void *)uint64_t v68 = v63;
          *(unsigned char *)(a1 + 193) = v64 != 0;
          if (!v63) {
            goto LABEL_122;
          }
        }
        else
        {
          uint64_t v42 = (char *)(v8 + 2);
LABEL_67:
          *(void *)uint64_t v68 = v42;
          *(unsigned char *)(a1 + 193) = v43 != 0;
        }
        goto LABEL_117;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_109;
        }
        unint64_t v45 = (char *)(v8 - 1);
        while (1)
        {
          unint64_t v46 = (unsigned __int8 *)(v45 + 1);
          *(void *)uint64_t v68 = v45 + 1;
          uint64_t v47 = *(_DWORD **)(a1 + 112);
          if (v47 && (uint64_t v48 = *(int *)(a1 + 104), (int)v48 < *v47))
          {
            *(_DWORD *)(a1 + 104) = v48 + 1;
            uint64_t v49 = *(void *)&v47[2 * v48 + 2];
          }
          else
          {
            uint64_t v50 = sub_1184428(*(void *)(a1 + 96));
            uint64_t v49 = sub_188CDC8(a1 + 96, v50);
            unint64_t v46 = *(unsigned __int8 **)v68;
          }
          unint64_t v45 = sub_1179718(a3, v49, v46);
          *(void *)uint64_t v68 = v45;
          if (!v45) {
            goto LABEL_122;
          }
          if (*(void *)a3 <= (unint64_t)v45 || *v45 != 90) {
            goto LABEL_117;
          }
        }
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v51 = *(void *)(a1 + 160);
        if (!v51)
        {
          uint64_t v52 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v52 = (void *)*v52;
          }
          sub_11846D0((uint64_t)v52);
          uint64_t v51 = v53;
          *(void *)(a1 + 160) = v53;
          uint64_t v8 = *(unsigned __int8 **)v68;
        }
        uint64_t v15 = (uint64_t)sub_11797A8(a3, v51, v8);
        goto LABEL_116;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v54 = *(void *)(a1 + 168);
        if (!v54)
        {
          uint64_t v55 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v55 = (void *)*v55;
          }
          sub_118484C((uint64_t)v55);
          uint64_t v54 = v56;
          *(void *)(a1 + 168) = v56;
          uint64_t v8 = *(unsigned __int8 **)v68;
        }
        uint64_t v15 = (uint64_t)sub_1179838(a3, v54, v8);
        goto LABEL_116;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v57 = *(void *)(a1 + 176);
        if (!v57)
        {
          int v58 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v58 = (void *)*v58;
          }
          uint64_t v57 = sub_1836E54((uint64_t)v58);
          *(void *)(a1 + 176) = v57;
          uint64_t v8 = *(unsigned __int8 **)v68;
        }
        uint64_t v15 = sub_11798C8(a3, v57, v8);
        goto LABEL_116;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v59 = *(void *)(a1 + 184);
        if (!v59)
        {
          v60 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v60 = (void *)*v60;
          }
          uint64_t v59 = sub_1836F0C((uint64_t)v60);
          *(void *)(a1 + 184) = v59;
          uint64_t v8 = *(unsigned __int8 **)v68;
        }
        uint64_t v15 = sub_1179958(a3, v59, v8);
        goto LABEL_116;
      default:
        goto LABEL_109;
    }
  }
}

uint64_t sub_11793D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = (uint64_t)sub_146448C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1179468(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_146E3E4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_11794F8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 24);
  char v4 = (_DWORD *)(a1 + 24);
  if (v5 == *(_DWORD *)(a1 + 28))
  {
    int v6 = v5 + 1;
    sub_188CA54((unsigned int *)(a1 + 24), v5 + 1);
    *(void *)(*(void *)(a1 + 32) + 8 * v5) = a2;
  }
  else
  {
    *(void *)(*(void *)(a1 + 32) + 8 * v5) = a2;
    int v6 = v5 + 1;
  }
  *char v4 = v6;
}

char *sub_1179568(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1182F28(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11795F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1182188(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1179688(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1181A1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1179718(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_117B34C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11797A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_117DE1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1179838(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_117FBA8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11798C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_182B4E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1179958(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_182E98C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11799E8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 136);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 28);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1466BF0(v7, v9, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 144);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_146ECEC(v10, (unint64_t)v12, a3);
  }
  unsigned int v13 = *(_DWORD *)(a1 + 40);
  if ((int)v13 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *char v4 = 26;
    uint64_t v14 = v4 + 1;
    if (v13 >= 0x80)
    {
      do
      {
        *v14++ = v13 | 0x80;
        unsigned int v58 = v13 >> 14;
        v13 >>= 7;
      }
      while (v58);
      char v4 = v14 - 1;
    }
    v4 += 2;
    *uint64_t v14 = v13;
    uint64_t v15 = *(unint64_t **)(a1 + 32);
    uint64_t v16 = &v15[*(int *)(a1 + 24)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v18 = *v15++;
      unint64_t v17 = v18;
      *char v4 = v18;
      if (v18 > 0x7F)
      {
        *char v4 = v17 | 0x80;
        unint64_t v19 = v17 >> 7;
        v4[1] = v17 >> 7;
        v4 += 2;
        if (v17 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v15 < v16);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v38 = *(void *)(a1 + 152);
    *char v4 = 34;
    unsigned int v39 = *(_DWORD *)(v38 + 20);
    v4[1] = v39;
    if (v39 > 0x7F) {
      uint64_t v40 = sub_188A9CC(v39, v4 + 1);
    }
    else {
      uint64_t v40 = v4 + 2;
    }
    char v4 = sub_1183708(v38, (unint64_t)v40, a3);
    if ((v6 & 1) == 0)
    {
LABEL_29:
      if ((v6 & 2) == 0) {
        goto LABEL_31;
      }
      goto LABEL_30;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_29;
  }
  char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) != 0) {
LABEL_30:
  }
    char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_31:
  int v21 = *(_DWORD *)(a1 + 56);
  if (v21)
  {
    for (int i = 0; i != v21; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *char v4 = 58;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      v4[1] = v24;
      if (v24 > 0x7F) {
        uint64_t v25 = sub_188A9CC(v24, v4 + 1);
      }
      else {
        uint64_t v25 = v4 + 2;
      }
      char v4 = sub_1182608(v23, (unint64_t)v25, a3);
    }
  }
  int v26 = *(_DWORD *)(a1 + 80);
  if (v26)
  {
    for (int j = 0; j != v26; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *char v4 = 66;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      v4[1] = v29;
      if (v29 > 0x7F) {
        uint64_t v30 = sub_188A9CC(v29, v4 + 1);
      }
      else {
        uint64_t v30 = v4 + 2;
      }
      char v4 = sub_1181C58(v28, (unint64_t)v30, a3);
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v31 = *(unsigned char *)(a1 + 192);
    *char v4 = 72;
    v4[1] = v31;
    v4 += 2;
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v32 = *(unsigned char *)(a1 + 193);
    *char v4 = 80;
    v4[1] = v32;
    v4 += 2;
  }
  int v33 = *(_DWORD *)(a1 + 104);
  if (v33)
  {
    for (int k = 0; k != v33; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *char v4 = 90;
      unsigned int v36 = *(_DWORD *)(v35 + 20);
      v4[1] = v36;
      if (v36 > 0x7F) {
        uint64_t v37 = sub_188A9CC(v36, v4 + 1);
      }
      else {
        uint64_t v37 = v4 + 2;
      }
      char v4 = sub_117B7A4(v35, (unint64_t)v37, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v41 = *(void *)(a1 + 160);
    *char v4 = 98;
    unsigned int v42 = *(_DWORD *)(v41 + 20);
    v4[1] = v42;
    if (v42 > 0x7F) {
      uint64_t v43 = sub_188A9CC(v42, v4 + 1);
    }
    else {
      uint64_t v43 = v4 + 2;
    }
    char v4 = sub_117E4EC(v41, (unint64_t)v43, a3);
    if ((v6 & 0x40) == 0)
    {
LABEL_65:
      if ((v6 & 0x80) == 0) {
        goto LABEL_66;
      }
      goto LABEL_88;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_65;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v44 = *(void *)(a1 + 168);
  *char v4 = 106;
  unsigned int v45 = *(_DWORD *)(v44 + 20);
  v4[1] = v45;
  if (v45 > 0x7F) {
    unint64_t v46 = sub_188A9CC(v45, v4 + 1);
  }
  else {
    unint64_t v46 = v4 + 2;
  }
  char v4 = sub_11806C0(v44, (unint64_t)v46, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_66:
    if ((v6 & 0x100) == 0) {
      goto LABEL_100;
    }
    goto LABEL_94;
  }
LABEL_88:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v47 = *(void *)(a1 + 176);
  *char v4 = 114;
  unsigned int v48 = *(_DWORD *)(v47 + 44);
  v4[1] = v48;
  if (v48 > 0x7F) {
    uint64_t v49 = sub_188A9CC(v48, v4 + 1);
  }
  else {
    uint64_t v49 = v4 + 2;
  }
  char v4 = sub_182BE50(v47, v49, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_94:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v50 = *(void *)(a1 + 184);
    *char v4 = 122;
    unsigned int v51 = *(_DWORD *)(v50 + 44);
    v4[1] = v51;
    if (v51 > 0x7F) {
      uint64_t v52 = sub_188A9CC(v51, v4 + 1);
    }
    else {
      uint64_t v52 = v4 + 2;
    }
    char v4 = sub_182F28C(v50, v52, a3);
  }
LABEL_100:
  uint64_t v53 = *(void *)(a1 + 8);
  if ((v53 & 1) == 0) {
    return v4;
  }
  unint64_t v55 = v53 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v55 + 31) < 0)
  {
    uint64_t v56 = *(void **)(v55 + 8);
    uint64_t v57 = *(void *)(v55 + 16);
  }
  else
  {
    uint64_t v56 = (void *)(v55 + 8);
    LODWORD(v57) = *(unsigned __int8 *)(v55 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v57)
  {
    uint64_t v59 = (int)v57;
    memcpy(v4, v56, (int)v57);
    v4 += v59;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v56, v57, v4);
}

char *sub_117A0AC(void *a1, int a2, const void **a3, unsigned char *a4)
{
  if (*((char *)a3 + 23) < 0)
  {
    int64_t v4 = (int64_t)a3[1];
    if (v4 > 127) {
      goto LABEL_21;
    }
  }
  else
  {
    int64_t v4 = *((unsigned __int8 *)a3 + 23);
  }
  unsigned int v5 = 8 * a2;
  uint64_t v6 = 1;
  uint64_t v7 = 2;
  uint64_t v8 = 3;
  uint64_t v9 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v9 = 5;
  }
  if (v5 >= 0x200000) {
    uint64_t v8 = v9;
  }
  if (v5 >= 0x4000) {
    uint64_t v7 = v8;
  }
  if (v5 >= 0x80) {
    uint64_t v6 = v7;
  }
  if ((uint64_t)(*a1 + ~(unint64_t)&a4[v6] + 16) >= v4)
  {
    unsigned int v10 = v5 | 2;
    *a4 = v5 | 2;
    if ((v5 | 2) > 0x7F)
    {
      *a4 = v5 | 0x82;
      unsigned int v12 = v5 >> 7;
      a4[1] = v12;
      unsigned int v11 = a4 + 2;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v11 - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *v11++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      unsigned int v11 = a4 + 1;
    }
    unsigned char *v11 = v4;
    uint64_t v14 = v11 + 1;
    if (*((char *)a3 + 23) >= 0) {
      uint64_t v15 = a3;
    }
    else {
      uint64_t v15 = *a3;
    }
    memcpy(v14, v15, v4);
    return &v14[v4];
  }
LABEL_21:

  return sub_188A6CC(a1, a2, (void **)a3, a4);
}

uint64_t sub_117A1C8(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  uint64_t v3 = 10;
  uint64_t v4 = (9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v2 >= 0) {
    uint64_t v3 = v4;
  }
  if (v2) {
    int v5 = v2;
  }
  else {
    int v5 = 0;
  }
  if (v2) {
    uint64_t v6 = v3 + 1;
  }
  else {
    uint64_t v6 = 0;
  }
  *(_DWORD *)(a1 + 40) = v5;
  uint64_t v7 = v6 + v2;
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v7 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1182A90(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1181E1C(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    uint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    uint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_117BAD8(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  int v29 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v29) {
    goto LABEL_37;
  }
  if (v29)
  {
    unint64_t v35 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
    uint64_t v37 = *(void *)(v35 + 8);
    if ((v36 & 0x80u) == 0) {
      uint64_t v37 = v36;
    }
    v23 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v29 & 2) == 0)
    {
LABEL_30:
      if ((v29 & 4) == 0) {
        goto LABEL_31;
      }
      goto LABEL_53;
    }
  }
  else if ((v29 & 2) == 0)
  {
    goto LABEL_30;
  }
  unint64_t v38 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v39 = *(unsigned __int8 *)(v38 + 23);
  uint64_t v40 = *(void *)(v38 + 8);
  if ((v39 & 0x80u) == 0) {
    uint64_t v40 = v39;
  }
  v23 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v29 & 4) == 0)
  {
LABEL_31:
    if ((v29 & 8) == 0) {
      goto LABEL_32;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v41 = sub_1468738(*(void *)(a1 + 136));
  v23 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v29 & 8) == 0)
  {
LABEL_32:
    if ((v29 & 0x10) == 0) {
      goto LABEL_33;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v42 = sub_146F320(*(void *)(a1 + 144));
  v23 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v29 & 0x10) == 0)
  {
LABEL_33:
    if ((v29 & 0x20) == 0) {
      goto LABEL_34;
    }
LABEL_56:
    uint64_t v44 = sub_117EBA4(*(void *)(a1 + 160));
    v23 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v29 & 0x40) == 0)
    {
LABEL_35:
      if ((v29 & 0x80) == 0) {
        goto LABEL_37;
      }
      goto LABEL_36;
    }
    goto LABEL_57;
  }
LABEL_55:
  uint64_t v43 = sub_1183FF0(*(void *)(a1 + 152));
  v23 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v29 & 0x20) != 0) {
    goto LABEL_56;
  }
LABEL_34:
  if ((v29 & 0x40) == 0) {
    goto LABEL_35;
  }
LABEL_57:
  uint64_t v45 = sub_1181404(*(void *)(a1 + 168));
  v23 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v29 & 0x80) != 0)
  {
LABEL_36:
    uint64_t v30 = sub_182C500(*(void *)(a1 + 176));
    v23 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_37:
  if ((v29 & 0x700) != 0)
  {
    if ((v29 & 0x100) != 0)
    {
      uint64_t v31 = sub_182F8B4(*(void *)(a1 + 184));
      v23 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v32 = v23 + 2;
    if ((v29 & 0x200) == 0) {
      uint64_t v32 = v23;
    }
    if ((v29 & 0x400) != 0) {
      uint64_t v23 = v32 + 2;
    }
    else {
      uint64_t v23 = v32;
    }
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if (v33)
  {
    unint64_t v46 = v33 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v46 + 31) < 0) {
      uint64_t v47 = *(void *)(v46 + 16);
    }
    else {
      uint64_t v47 = *(unsigned __int8 *)(v46 + 31);
    }
    v23 += v47;
  }
  *(_DWORD *)(a1 + 20) = v23;
  return v23;
}

void sub_117A578(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 56);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1194B2C((uint64_t *)(a1 + 48), v10, v9, v8, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v11 = *(_DWORD *)(a1 + 56) + v8;
    *(_DWORD *)(a1 + 56) = v11;
    uint64_t v12 = *(int **)(a1 + 64);
    if (*v12 < v11) {
      int *v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 80);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v15 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1194BB8((uint64_t *)(a1 + 72), v15, v14, v13, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v16 = *(_DWORD *)(a1 + 80) + v13;
    *(_DWORD *)(a1 + 80) = v16;
    uint64_t v17 = *(int **)(a1 + 88);
    if (*v17 < v16) {
      *uint64_t v17 = v16;
    }
  }
  int v18 = *(_DWORD *)(a2 + 104);
  if (v18)
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v20 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1194C44((uint64_t *)(a1 + 96), v20, v19, v18, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v21 = *(_DWORD *)(a1 + 104) + v18;
    *(_DWORD *)(a1 + 104) = v21;
    uint64_t v22 = *(int **)(a1 + 112);
    if (*v22 < v21) {
      int *v22 = v21;
    }
  }
  int v23 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v23) {
    goto LABEL_76;
  }
  if (v23)
  {
    uint64_t v24 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v25 = *(void *)(a1 + 8);
    uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      uint64_t v26 = (uint64_t *)*v26;
    }
    sub_1881DF4((std::string **)(a1 + 120), v24, v26);
    if ((v23 & 2) == 0)
    {
LABEL_15:
      if ((v23 & 4) == 0) {
        goto LABEL_16;
      }
      goto LABEL_28;
    }
  }
  else if ((v23 & 2) == 0)
  {
    goto LABEL_15;
  }
  uint64_t v27 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v28 = *(void *)(a1 + 8);
  int v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
  if (v28) {
    int v29 = (uint64_t *)*v29;
  }
  sub_1881DF4((std::string **)(a1 + 128), v27, v29);
  if ((v23 & 4) == 0)
  {
LABEL_16:
    if ((v23 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_28:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v30 = *(void *)(a1 + 136);
  if (!v30)
  {
    uint64_t v31 = *(void *)(a1 + 8);
    uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
    if (v31) {
      uint64_t v32 = (void *)*v32;
    }
    sub_1478F54((uint64_t)v32);
    *(void *)(a1 + 136) = v30;
  }
  if (*(void *)(a2 + 136)) {
    uint64_t v33 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    uint64_t v33 = &off_2539528;
  }
  sub_146945C(v30, (uint64_t)v33);
  if ((v23 & 8) == 0)
  {
LABEL_17:
    if ((v23 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_44;
  }
LABEL_36:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v34 = *(void *)(a1 + 144);
  if (!v34)
  {
    uint64_t v35 = *(void *)(a1 + 8);
    uint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
    if (v35) {
      uint64_t v36 = (void *)*v36;
    }
    sub_147937C((uint64_t)v36);
    *(void *)(a1 + 144) = v34;
  }
  if (*(void *)(a2 + 144)) {
    uint64_t v37 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    uint64_t v37 = &off_25398D0;
  }
  sub_13F17EC(v34, (uint64_t)v37);
  if ((v23 & 0x10) == 0)
  {
LABEL_18:
    if ((v23 & 0x20) == 0) {
      goto LABEL_19;
    }
LABEL_52:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v42 = *(std::string **)(a1 + 160);
    if (!v42)
    {
      uint64_t v43 = *(void *)(a1 + 8);
      uint64_t v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
      if (v43) {
        uint64_t v44 = (void *)*v44;
      }
      sub_11846D0((uint64_t)v44);
      *(void *)(a1 + 160) = v42;
    }
    if (*(void *)(a2 + 160)) {
      uint64_t v45 = *(uint64_t (****)())(a2 + 160);
    }
    else {
      uint64_t v45 = &off_252BC68;
    }
    sub_117AB94(v42, (uint64_t)v45);
    if ((v23 & 0x40) == 0)
    {
LABEL_20:
      if ((v23 & 0x80) == 0) {
        goto LABEL_76;
      }
      goto LABEL_68;
    }
    goto LABEL_60;
  }
LABEL_44:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  unint64_t v38 = *(std::string **)(a1 + 152);
  if (!v38)
  {
    uint64_t v39 = *(void *)(a1 + 8);
    uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
    if (v39) {
      uint64_t v40 = (void *)*v40;
    }
    sub_1184A1C((uint64_t)v40);
    *(void *)(a1 + 152) = v38;
  }
  if (*(void *)(a2 + 152)) {
    uint64_t v41 = *(void *(****)(void *))(a2 + 152);
  }
  else {
    uint64_t v41 = &off_252BDA8;
  }
  sub_117AA34(v38, (uint64_t)v41);
  if ((v23 & 0x20) != 0) {
    goto LABEL_52;
  }
LABEL_19:
  if ((v23 & 0x40) == 0) {
    goto LABEL_20;
  }
LABEL_60:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  unint64_t v46 = *(std::string **)(a1 + 168);
  if (!v46)
  {
    uint64_t v47 = *(void *)(a1 + 8);
    unsigned int v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
    if (v47) {
      unsigned int v48 = (void *)*v48;
    }
    sub_118484C((uint64_t)v48);
    *(void *)(a1 + 168) = v46;
  }
  if (*(void *)(a2 + 168)) {
    uint64_t v49 = *(void *(****)(void *))(a2 + 168);
  }
  else {
    uint64_t v49 = &off_252BD28;
  }
  sub_117AF44(v46, (uint64_t)v49);
  if ((v23 & 0x80) != 0)
  {
LABEL_68:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v50 = *(void *)(a1 + 176);
    if (!v50)
    {
      uint64_t v51 = *(void *)(a1 + 8);
      uint64_t v52 = (void *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
      if (v51) {
        uint64_t v52 = (void *)*v52;
      }
      uint64_t v50 = sub_1836E54((uint64_t)v52);
      *(void *)(a1 + 176) = v50;
    }
    if (*(void *)(a2 + 176)) {
      uint64_t v53 = *(uint64_t (****)())(a2 + 176);
    }
    else {
      uint64_t v53 = &off_254CA18;
    }
    sub_182C88C(v50, (uint64_t)v53);
  }
LABEL_76:
  if ((v23 & 0x700) == 0) {
    goto LABEL_82;
  }
  if ((v23 & 0x100) == 0)
  {
    if ((v23 & 0x200) == 0) {
      goto LABEL_79;
    }
LABEL_94:
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    if ((v23 & 0x400) == 0) {
      goto LABEL_81;
    }
    goto LABEL_80;
  }
  *(_DWORD *)(a1 + 16) |= 0x100u;
  uint64_t v55 = *(void *)(a1 + 184);
  if (!v55)
  {
    uint64_t v56 = *(void *)(a1 + 8);
    uint64_t v57 = (void *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (v56) {
      uint64_t v57 = (void *)*v57;
    }
    uint64_t v55 = sub_1836F0C((uint64_t)v57);
    *(void *)(a1 + 184) = v55;
  }
  if (*(void *)(a2 + 184)) {
    unsigned int v58 = *(uint64_t (****)())(a2 + 184);
  }
  else {
    unsigned int v58 = &off_254CB28;
  }
  sub_182FC60(v55, (uint64_t)v58);
  if ((v23 & 0x200) != 0) {
    goto LABEL_94;
  }
LABEL_79:
  if ((v23 & 0x400) != 0) {
LABEL_80:
  }
    *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
LABEL_81:
  *(_DWORD *)(a1 + 16) |= v23;
LABEL_82:
  uint64_t v54 = *(void *)(a2 + 8);
  if (v54)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v54 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_117AA34(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_29;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_30;
    }
LABEL_29:
    LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_31;
    }
LABEL_30:
    HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_32;
    }
LABEL_31:
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_33;
    }
LABEL_32:
    HIDWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
        goto LABEL_12;
      }
LABEL_10:
      HIDWORD(result[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
      goto LABEL_11;
    }
LABEL_33:
    LODWORD(result[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v2 & 0x100) != 0)
  {
    LODWORD(result[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v2 & 0x200) == 0)
    {
LABEL_15:
      if ((v2 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_37;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  HIDWORD(result[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  LODWORD(result[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
  if ((v2 & 0x800) == 0)
  {
LABEL_17:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  HIDWORD(result[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x1000) == 0)
  {
LABEL_18:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }
LABEL_39:
  LODWORD(result[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
  if ((v2 & 0x2000) == 0)
  {
LABEL_19:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_20;
    }
LABEL_41:
    LODWORD(result[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    if ((v2 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_40:
  HIDWORD(result[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
  if ((v2 & 0x4000) != 0) {
    goto LABEL_41;
  }
LABEL_20:
  if ((v2 & 0x8000) != 0) {
LABEL_21:
  }
    HIDWORD(result[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
LABEL_22:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_23:
  if ((v2 & 0x10000) != 0)
  {
    int v3 = *(_DWORD *)(a2 + 88);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 0x10000u;
    LODWORD(result[3].__r_.__value_.__r.__words[2]) = v3;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_117AB94(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_76;
  }
  if (v4)
  {
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v7 = (void *)*v7;
      }
      data = (std::string *)sub_1184758((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 24)) {
      int v8 = *(void *(****)(void *))(a2 + 24);
    }
    else {
      int v8 = &off_252BCE0;
    }
    uint64_t result = sub_117EF04(data, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_24;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
  if (!v9)
  {
    std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
    int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      int v11 = (void *)*v11;
    }
    uint64_t v9 = (std::string *)sub_1184758((uint64_t)v11);
    v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(void *(****)(void *))(a2 + 32);
  }
  else {
    uint64_t v12 = &off_252BCE0;
  }
  uint64_t result = sub_117EF04(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_24:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  int v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
  if (!v13)
  {
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    int v13 = (std::string *)sub_1184758((uint64_t)v15);
    v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
  }
  if (*(void *)(a2 + 40)) {
    int v16 = *(void *(****)(void *))(a2 + 40);
  }
  else {
    int v16 = &off_252BCE0;
  }
  uint64_t result = sub_117EF04(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_48;
    }
    goto LABEL_40;
  }
LABEL_32:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  uint64_t v17 = (std::string *)v3[2].__r_.__value_.__l.__data_;
  if (!v17)
  {
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    uint64_t v17 = (std::string *)sub_1184758((uint64_t)v19);
    v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v17;
  }
  if (*(void *)(a2 + 48)) {
    uint64_t v20 = *(void *(****)(void *))(a2 + 48);
  }
  else {
    uint64_t v20 = &off_252BCE0;
  }
  uint64_t result = sub_117EF04(v17, (uint64_t)v20);
  if ((v4 & 0x10) != 0)
  {
LABEL_40:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    int v21 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v21)
    {
      std::string::size_type v22 = v3->__r_.__value_.__l.__size_;
      int v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        int v23 = (void *)*v23;
      }
      int v21 = (std::string *)sub_1184758((uint64_t)v23);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v21;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v24 = *(void *(****)(void *))(a2 + 56);
    }
    else {
      uint64_t v24 = &off_252BCE0;
    }
    uint64_t result = sub_117EF04(v21, (uint64_t)v24);
  }
LABEL_48:
  if ((v4 & 0x20) != 0)
  {
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    uint64_t v25 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
    if (!v25)
    {
      std::string::size_type v26 = v3->__r_.__value_.__l.__size_;
      uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        uint64_t v27 = (void *)*v27;
      }
      uint64_t v25 = (std::string *)sub_11847D0((uint64_t)v27);
      v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v25;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v28 = *(void *(****)(void *))(a2 + 64);
    }
    else {
      uint64_t v28 = &off_252BD00;
    }
    uint64_t result = sub_117EF50(v25, (uint64_t)v28);
    if ((v4 & 0x40) == 0)
    {
LABEL_50:
      if ((v4 & 0x80) == 0) {
        goto LABEL_76;
      }
      goto LABEL_68;
    }
  }
  else if ((v4 & 0x40) == 0)
  {
    goto LABEL_50;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
  int v29 = (std::string *)v3[3].__r_.__value_.__l.__data_;
  if (!v29)
  {
    std::string::size_type v30 = v3->__r_.__value_.__l.__size_;
    uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
    if (v30) {
      uint64_t v31 = (void *)*v31;
    }
    int v29 = (std::string *)sub_11847D0((uint64_t)v31);
    v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)v29;
  }
  if (*(void *)(a2 + 72)) {
    uint64_t v32 = *(void *(****)(void *))(a2 + 72);
  }
  else {
    uint64_t v32 = &off_252BD00;
  }
  uint64_t result = sub_117EF50(v29, (uint64_t)v32);
  if ((v4 & 0x80) != 0)
  {
LABEL_68:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x80u;
    uint64_t v33 = (std::string *)v3[3].__r_.__value_.__l.__size_;
    if (!v33)
    {
      std::string::size_type v34 = v3->__r_.__value_.__l.__size_;
      uint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        uint64_t v35 = (void *)*v35;
      }
      uint64_t v33 = (std::string *)sub_11847D0((uint64_t)v35);
      v3[3].__r_.__value_.__l.__size_ = (std::string::size_type)v33;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v36 = *(void *(****)(void *))(a2 + 80);
    }
    else {
      uint64_t v36 = &off_252BD00;
    }
    uint64_t result = sub_117EF50(v33, (uint64_t)v36);
  }
LABEL_76:
  if ((v4 & 0x3F00) == 0) {
    goto LABEL_85;
  }
  if ((v4 & 0x100) != 0)
  {
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    unint64_t v38 = (std::string *)v3[3].__r_.__value_.__r.__words[2];
    if (!v38)
    {
      std::string::size_type v39 = v3->__r_.__value_.__l.__size_;
      uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
      if (v39) {
        uint64_t v40 = (void *)*v40;
      }
      unint64_t v38 = (std::string *)sub_11847D0((uint64_t)v40);
      v3[3].__r_.__value_.__r.__words[2] = (std::string::size_type)v38;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v41 = *(void *(****)(void *))(a2 + 88);
    }
    else {
      uint64_t v41 = &off_252BD00;
    }
    uint64_t result = sub_117EF50(v38, (uint64_t)v41);
    if ((v4 & 0x200) == 0)
    {
LABEL_79:
      if ((v4 & 0x400) == 0) {
        goto LABEL_80;
      }
      goto LABEL_105;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_79;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x200u;
  uint64_t v42 = (std::string *)v3[4].__r_.__value_.__l.__data_;
  if (!v42)
  {
    std::string::size_type v43 = v3->__r_.__value_.__l.__size_;
    uint64_t v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
    if (v43) {
      uint64_t v44 = (void *)*v44;
    }
    uint64_t v42 = (std::string *)sub_11847D0((uint64_t)v44);
    v3[4].__r_.__value_.__r.__words[0] = (std::string::size_type)v42;
  }
  if (*(void *)(a2 + 96)) {
    uint64_t v45 = *(void *(****)(void *))(a2 + 96);
  }
  else {
    uint64_t v45 = &off_252BD00;
  }
  uint64_t result = sub_117EF50(v42, (uint64_t)v45);
  if ((v4 & 0x400) == 0)
  {
LABEL_80:
    if ((v4 & 0x800) == 0) {
      goto LABEL_81;
    }
    goto LABEL_106;
  }
LABEL_105:
  LODWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 104);
  if ((v4 & 0x800) == 0)
  {
LABEL_81:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_82;
    }
LABEL_107:
    LODWORD(v3[4].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 112);
    if ((v4 & 0x2000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_83;
  }
LABEL_106:
  HIDWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 108);
  if ((v4 & 0x1000) != 0) {
    goto LABEL_107;
  }
LABEL_82:
  if ((v4 & 0x2000) != 0) {
LABEL_83:
  }
    HIDWORD(v3[4].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 116);
LABEL_84:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
LABEL_85:
  uint64_t v37 = *(void *)(a2 + 8);
  if (v37)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v37 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_117AF44(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_44;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_45;
    }
LABEL_44:
    LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_46;
    }
LABEL_45:
    HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_47;
    }
LABEL_46:
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_48;
    }
LABEL_47:
    HIDWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
        goto LABEL_12;
      }
LABEL_10:
      HIDWORD(result[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
      goto LABEL_11;
    }
LABEL_48:
    LODWORD(result[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v2 & 0x100) != 0)
  {
    LODWORD(result[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v2 & 0x200) == 0)
    {
LABEL_15:
      if ((v2 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_52;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  HIDWORD(result[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_53;
  }
LABEL_52:
  LODWORD(result[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
  if ((v2 & 0x800) == 0)
  {
LABEL_17:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_54;
  }
LABEL_53:
  HIDWORD(result[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
  if ((v2 & 0x1000) == 0)
  {
LABEL_18:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_55;
  }
LABEL_54:
  LODWORD(result[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
  if ((v2 & 0x2000) == 0)
  {
LABEL_19:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_20;
    }
LABEL_56:
    LODWORD(result[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    if ((v2 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_55:
  HIDWORD(result[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
  if ((v2 & 0x4000) != 0) {
    goto LABEL_56;
  }
LABEL_20:
  if ((v2 & 0x8000) != 0) {
LABEL_21:
  }
    HIDWORD(result[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
LABEL_22:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_23:
  if ((v2 & 0xFF0000) == 0) {
    goto LABEL_34;
  }
  if ((v2 & 0x10000) != 0)
  {
    LODWORD(result[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
    if ((v2 & 0x20000) == 0)
    {
LABEL_26:
      if ((v2 & 0x40000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_60;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  HIDWORD(result[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 92);
  if ((v2 & 0x40000) == 0)
  {
LABEL_27:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_61;
  }
LABEL_60:
  LODWORD(result[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
  if ((v2 & 0x80000) == 0)
  {
LABEL_28:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }
LABEL_61:
  HIDWORD(result[4].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 100);
  if ((v2 & 0x100000) == 0)
  {
LABEL_29:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_63;
  }
LABEL_62:
  LODWORD(result[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 104);
  if ((v2 & 0x200000) == 0)
  {
LABEL_30:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_31;
    }
LABEL_64:
    LODWORD(result[4].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 112);
    if ((v2 & 0x800000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
LABEL_63:
  HIDWORD(result[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 108);
  if ((v2 & 0x400000) != 0) {
    goto LABEL_64;
  }
LABEL_31:
  if ((v2 & 0x800000) != 0) {
LABEL_32:
  }
    HIDWORD(result[4].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 116);
LABEL_33:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_34:
  if ((v2 & 0x3000000) != 0)
  {
    if ((v2 & 0x1000000) != 0) {
      LODWORD(result[5].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 120);
    }
    if ((v2 & 0x2000000) != 0) {
      HIDWORD(result[5].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 124);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_117B14C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_146A1C8(*(void *)(a1 + 136));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_13F1C1C(*(void *)(a1 + 144));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x80) != 0)
  {
    uint64_t result = sub_182D83C(*(void *)(a1 + 176));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x100) == 0) {
    return 1;
  }
  uint64_t result = sub_18300B0(*(void *)(a1 + 184));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_117B1C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.FwdGeoQuery");
}

void *sub_117B1D0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1194A2C(a1 + 9);
  sub_11949AC(a1 + 6);
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_117B264(void *a1)
{
  sub_117B1D0(a1);

  operator delete();
}

uint64_t sub_117B29C(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  uint64_t v2 = *(unsigned int *)(result + 56);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_117BEC4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 80);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_117D560(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 80) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 88) = 0;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_117B34C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v33 + 2;
      }
    }
    uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 == 10)
        {
          uint64_t v12 = sub_188C2DC((unsigned int *)(a1 + 24), (unsigned __int8 *)v8, (uint64_t)a3);
          goto LABEL_48;
        }
        if (v9 != 8) {
          goto LABEL_41;
        }
        uint64_t v30 = sub_110DB5C((uint64_t *)&v33);
        sub_11794F8(a1, v30);
        if (v33) {
          goto LABEL_49;
        }
        goto LABEL_54;
      case 2u:
        if (v9 != 16) {
          goto LABEL_41;
        }
        std::string::size_type v14 = v8 + 1;
        LODWORD(v13) = *v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_15;
        }
        int v15 = *v14;
        uint64_t v13 = v13 + (v15 << 7) - 128;
        if (v15 < 0)
        {
          uint64_t v28 = (char *)sub_188C138((uint64_t)v8, v13);
          uint64_t v33 = v28;
          *(_DWORD *)(a1 + 96) = v29;
          int v5 = 1;
          if (!v28) {
            goto LABEL_54;
          }
        }
        else
        {
          std::string::size_type v14 = v8 + 2;
LABEL_15:
          uint64_t v33 = v14;
          *(_DWORD *)(a1 + 96) = v13;
          int v5 = 1;
        }
        goto LABEL_49;
      case 3u:
        if (v9 != 26) {
          goto LABEL_41;
        }
        int v16 = v8 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          uint64_t v33 = v16 + 1;
          std::string::size_type v18 = *(_DWORD **)(a1 + 64);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 56) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_11844E4(*(void *)(a1 + 48));
            uint64_t v20 = sub_188CDC8(a1 + 48, v21);
            uint64_t v17 = (unsigned __int8 *)v33;
          }
          int v16 = sub_117B684(a3, v20, v17);
          uint64_t v33 = v16;
          if (!v16) {
            goto LABEL_54;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_49;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_41;
        }
        std::string::size_type v22 = v8 - 1;
        while (1)
        {
          int v23 = (unsigned __int8 *)(v22 + 1);
          uint64_t v33 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 88);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 80), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 80) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_1184648(*(void *)(a1 + 72));
            uint64_t v26 = sub_188CDC8(a1 + 72, v27);
            int v23 = (unsigned __int8 *)v33;
          }
          std::string::size_type v22 = (char *)sub_117B714(a3, v26, v23);
          uint64_t v33 = v22;
          if (!v22) {
            goto LABEL_54;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_49;
          }
        }
      default:
LABEL_41:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v33;
          }
          uint64_t v12 = sub_1885AC0(v9, v32, v8, a3);
LABEL_48:
          uint64_t v33 = (char *)v12;
          if (!v12) {
            goto LABEL_54;
          }
LABEL_49:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_54:
        }
          uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v33;
    }
  }
}

char *sub_117B684(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_117BF5C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_117B714(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_117D5E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_117B7A4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  unsigned int v6 = *(_DWORD *)(a1 + 40);
  if ((int)v6 >= 1)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    *uint64_t v4 = 10;
    int v7 = v4 + 1;
    if (v6 >= 0x80)
    {
      do
      {
        *v7++ = v6 | 0x80;
        unsigned int v32 = v6 >> 14;
        v6 >>= 7;
      }
      while (v32);
      uint64_t v4 = v7 - 1;
    }
    v4 += 2;
    *int v7 = v6;
    uint64_t v8 = *(unint64_t **)(a1 + 32);
    unsigned int v9 = &v8[*(int *)(a1 + 24)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v11 = *v8++;
      unint64_t v10 = v11;
      *uint64_t v4 = v11;
      if (v11 > 0x7F)
      {
        *uint64_t v4 = v10 | 0x80;
        unint64_t v12 = v10 >> 7;
        v4[1] = v10 >> 7;
        v4 += 2;
        if (v10 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v8 < v9);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(int *)(a1 + 96);
    *uint64_t v4 = 16;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v17 = *(_DWORD *)(a1 + 56);
  if (v17)
  {
    for (int i = 0; i != v17; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v20 = *(_DWORD *)(v19 + 20);
      v4[1] = v20;
      if (v20 > 0x7F) {
        uint64_t v21 = sub_188A9CC(v20, v4 + 1);
      }
      else {
        uint64_t v21 = v4 + 2;
      }
      uint64_t v4 = sub_117C2FC(v19, (unint64_t)v21, a3);
    }
  }
  int v22 = *(_DWORD *)(a1 + 80);
  if (v22)
  {
    for (int j = 0; j != v22; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *uint64_t v4 = 34;
      unsigned int v25 = *(_DWORD *)(v24 + 20);
      v4[1] = v25;
      if (v25 > 0x7F) {
        uint64_t v26 = sub_188A9CC(v25, v4 + 1);
      }
      else {
        uint64_t v26 = v4 + 2;
      }
      uint64_t v4 = sub_117D800(v24, (unint64_t)v26, a3);
    }
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    uint64_t v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    uint64_t v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v31)
  {
    uint64_t v33 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v33;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_117BAD8(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 40) = v3;
  uint64_t v5 = *(int *)(a1 + 56);
  uint64_t v6 = v4 + v2 + v5;
  uint64_t v7 = *(void *)(a1 + 64);
  if (v7) {
    uint64_t v8 = (uint64_t *)(v7 + 8);
  }
  else {
    uint64_t v8 = 0;
  }
  if (v5)
  {
    uint64_t v9 = 8 * v5;
    do
    {
      uint64_t v10 = *v8++;
      uint64_t v11 = sub_117C5E4(v10);
      v6 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
      v9 -= 8;
    }
    while (v9);
  }
  uint64_t v12 = *(int *)(a1 + 80);
  uint64_t v13 = v6 + v12;
  uint64_t v14 = *(void *)(a1 + 88);
  if (v14) {
    unint64_t v15 = (uint64_t *)(v14 + 8);
  }
  else {
    unint64_t v15 = 0;
  }
  if (v12)
  {
    uint64_t v16 = 8 * v12;
    do
    {
      uint64_t v17 = *v15++;
      uint64_t v18 = sub_117D968(v17);
      v13 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6);
      v16 -= 8;
    }
    while (v16);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v19 = *(_DWORD *)(a1 + 96);
    uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v19 >= 0) {
      uint64_t v21 = v20;
    }
    else {
      uint64_t v21 = 11;
    }
    v13 += v21;
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v13 += v25;
  }
  *(_DWORD *)(a1 + 20) = v13;
  return v13;
}

std::string *sub_117BC58(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 56);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_1194CD0((uint64_t *)&v3[2], v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v11 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v8;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v11;
    uint64_t v12 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v12 < v11) {
      int *v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 80);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    unint64_t v15 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = (std::string *)sub_1194D5C((uint64_t *)&v3[3], v15, v14, v13, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2]- LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v16 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v13;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v16;
    uint64_t v17 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v17 < v16) {
      *uint64_t v17 = v16;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v18 = *(_DWORD *)(a2 + 96);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[4].__r_.__value_.__l.__data_) = v18;
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_117BDEC()
{
  return 1;
}

void *sub_117BDF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.FwdGeoSolution");
}

void *sub_117BE04(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1194AAC(a1 + 6);
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_117BE8C(void *a1)
{
  sub_117BE04(a1);

  operator delete();
}

uint64_t sub_117BEC4(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  uint64_t v2 = *(unsigned int *)(result + 56);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_117C980(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0)
  {
    *(unsigned char *)(v1 + 76) = 0;
    *(_DWORD *)(v1 + 72) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_117BF5C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v32 + 2;
      }
    }
    unsigned int v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_38;
        }
        v5 |= 1u;
        int v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v13 = v8 + 2;
LABEL_13:
          unsigned int v32 = v13;
          *(_DWORD *)(a1 + 72) = v12;
          goto LABEL_46;
        }
        uint64_t v25 = (char *)sub_188C138((uint64_t)v8, v12);
        unsigned int v32 = v25;
        *(_DWORD *)(a1 + 72) = v26;
        if (!v25) {
          goto LABEL_51;
        }
        goto LABEL_46;
      case 2u:
        if (v9 == 18)
        {
          unint64_t v15 = sub_188C2DC((unsigned int *)(a1 + 24), (unsigned __int8 *)v8, (uint64_t)a3);
          goto LABEL_45;
        }
        if (v9 == 16)
        {
          uint64_t v29 = sub_110DB5C((uint64_t *)&v32);
          sub_11794F8(a1, v29);
          if (!v32) {
            goto LABEL_51;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_38:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v7)
          {
            uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v32;
          }
          unint64_t v15 = sub_1885AC0(v9, v31, v8, a3);
LABEL_45:
          unsigned int v32 = (char *)v15;
          if (!v15) {
            goto LABEL_51;
          }
          goto LABEL_46;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_51:
        }
          unsigned int v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v32;
      case 3u:
        if (v9 != 24) {
          goto LABEL_38;
        }
        v5 |= 2u;
        int v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v17);
          unsigned int v32 = v27;
          *(unsigned char *)(a1 + 76) = v28 != 0;
          if (!v27) {
            goto LABEL_51;
          }
        }
        else
        {
          int v16 = v8 + 2;
LABEL_20:
          unsigned int v32 = v16;
          *(unsigned char *)(a1 + 76) = v17 != 0;
        }
        goto LABEL_46;
      case 4u:
        if (v9 != 34) {
          goto LABEL_38;
        }
        uint64_t v19 = v8 - 1;
        while (1)
        {
          uint64_t v20 = (unsigned __int8 *)(v19 + 1);
          unsigned int v32 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 64);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 56), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 56) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            uint64_t v24 = sub_118459C(*(void *)(a1 + 48));
            uint64_t v23 = sub_188CDC8(a1 + 48, v24);
            uint64_t v20 = (unsigned __int8 *)v32;
          }
          uint64_t v19 = (char *)sub_117C26C(a3, v23, v20);
          unsigned int v32 = v19;
          if (!v19) {
            goto LABEL_51;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 34) {
            goto LABEL_46;
          }
        }
      default:
        goto LABEL_38;
    }
  }
}

uint64_t sub_117C26C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_117CA78(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_117C2FC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  unsigned int v10 = *(_DWORD *)(a1 + 40);
  if ((int)v10 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *uint64_t v4 = 18;
    unsigned int v11 = v4 + 1;
    if (v10 >= 0x80)
    {
      do
      {
        *v11++ = v10 | 0x80;
        unsigned int v29 = v10 >> 14;
        v10 >>= 7;
      }
      while (v29);
      uint64_t v4 = v11 - 1;
    }
    v4 += 2;
    unsigned char *v11 = v10;
    uint64_t v12 = *(unint64_t **)(a1 + 32);
    int v13 = &v12[*(int *)(a1 + 24)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v15 = *v12++;
      unint64_t v14 = v15;
      *uint64_t v4 = v15;
      if (v15 > 0x7F)
      {
        *uint64_t v4 = v14 | 0x80;
        unint64_t v16 = v14 >> 7;
        v4[1] = v14 >> 7;
        v4 += 2;
        if (v14 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v12 < v13);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v18 = *(unsigned char *)(a1 + 76);
    *uint64_t v4 = 24;
    v4[1] = v18;
    v4 += 2;
  }
  int v19 = *(_DWORD *)(a1 + 56);
  if (v19)
  {
    for (int i = 0; i != v19; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v22 = *(_DWORD *)(v21 + 20);
      v4[1] = v22;
      if (v22 > 0x7F) {
        uint64_t v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        uint64_t v23 = v4 + 2;
      }
      uint64_t v4 = sub_117CE54(v21, v23, a3);
    }
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v28)
  {
    uint64_t v30 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v30;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_117C5E4(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 40) = v3;
  uint64_t v5 = *(int *)(a1 + 56);
  uint64_t v6 = v4 + v2 + v5;
  uint64_t v7 = *(void *)(a1 + 64);
  if (v7) {
    unint64_t v8 = (uint64_t *)(v7 + 8);
  }
  else {
    unint64_t v8 = 0;
  }
  if (v5)
  {
    uint64_t v9 = 8 * v5;
    do
    {
      uint64_t v10 = *v8++;
      uint64_t v11 = sub_117D118(v10);
      v6 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
      v9 -= 8;
    }
    while (v9);
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if ((v12 & 3) != 0)
  {
    if (v12)
    {
      int v13 = *(_DWORD *)(a1 + 72);
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v13 >= 0) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = 11;
      }
      v6 += v15;
    }
    if ((v12 & 2) != 0) {
      v6 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v6 += v19;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

std::string *sub_117C728(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 56);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_1194DE8((uint64_t *)&v3[2], v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v11 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v8;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v11;
    int v12 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v12 < v11) {
      int *v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 16);
  if ((v13 & 3) != 0)
  {
    if (v13) {
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
    }
    if ((v13 & 2) != 0) {
      v3[3].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 76);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v13;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_117C86C()
{
  return 1;
}

void *sub_117C874@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.FwdGeoEntity");
}

uint64_t sub_117C884(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1194A2C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_117C948(uint64_t a1)
{
  sub_117C884(a1);

  operator delete();
}

uint64_t sub_117C980(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_117D560(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v5 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_15:
  if ((v5 & 0x3C) != 0)
  {
    *(_WORD *)(v1 + 72) = 0;
    *(void *)(v1 + 64) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_117CA78(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v41 + 1);
    unsigned int v9 = **(unsigned char **)v41;
    if ((char)**(unsigned char **)v41 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v41, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v41 + 2);
      }
    }
    *(void *)uint64_t v41 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          int v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 48);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          int v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 56);
LABEL_17:
        uint64_t v16 = (std::string *)sub_1880F84(v14, v13);
        unint64_t v17 = (void *)sub_188C244(v16, *(char **)v41, (uint64_t)a3);
        goto LABEL_52;
      case 3u:
        if (v9 != 24) {
          goto LABEL_45;
        }
        v5 |= 4u;
        uint64_t v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_22;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v35 = sub_188C138((uint64_t)v8, v18);
          *(void *)uint64_t v41 = v35;
          *(_DWORD *)(a1 + 64) = v36;
          if (!v35) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_22:
          *(void *)uint64_t v41 = v19;
          *(_DWORD *)(a1 + 64) = v18;
        }
        goto LABEL_53;
      case 4u:
        if (v9 != 37) {
          goto LABEL_45;
        }
        v5 |= 8u;
        *(_DWORD *)(a1 + 68) = *(_DWORD *)v8;
        *(void *)uint64_t v41 = v8 + 4;
        goto LABEL_53;
      case 5u:
        if (v9 != 40) {
          goto LABEL_45;
        }
        v5 |= 0x10u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v37 = sub_188C138((uint64_t)v8, v22);
          *(void *)uint64_t v41 = v37;
          *(unsigned char *)(a1 + 72) = v38 != 0;
          if (!v37) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_29:
          *(void *)uint64_t v41 = v21;
          *(unsigned char *)(a1 + 72) = v22 != 0;
        }
        goto LABEL_53;
      case 6u:
        if (v9 != 48) {
          goto LABEL_45;
        }
        v5 |= 0x20u;
        uint64_t v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v39 = sub_188C138((uint64_t)v8, v25);
          *(void *)uint64_t v41 = v39;
          *(unsigned char *)(a1 + 73) = v40 != 0;
          if (!v39) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_34:
          *(void *)uint64_t v41 = v24;
          *(unsigned char *)(a1 + 73) = v25 != 0;
        }
        goto LABEL_53;
      case 7u:
        if (v9 != 58) {
          goto LABEL_45;
        }
        uint64_t v27 = v8 - 1;
        while (1)
        {
          uint64_t v28 = (unsigned __int8 *)(v27 + 1);
          *(void *)uint64_t v41 = v27 + 1;
          unsigned int v29 = *(_DWORD **)(a1 + 40);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 32), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 32) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            uint64_t v32 = sub_1184648(*(void *)(a1 + 24));
            uint64_t v31 = sub_188CDC8(a1 + 24, v32);
            uint64_t v28 = *(unsigned __int8 **)v41;
          }
          uint64_t v27 = (char *)sub_117B714(a3, v31, v28);
          *(void *)uint64_t v41 = v27;
          if (!v27) {
            goto LABEL_64;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 58) {
            goto LABEL_53;
          }
        }
      default:
LABEL_45:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            std::string::size_type v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            std::string::size_type v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v41;
          }
          unint64_t v17 = sub_1885AC0(v9, v34, v8, a3);
LABEL_52:
          *(void *)uint64_t v41 = v17;
          if (!v17) {
            goto LABEL_64;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_64:
        }
          *(void *)uint64_t v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v41;
    }
  }
}

unsigned char *sub_117CE54(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 64);
  *uint64_t v4 = 24;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v10 = *(_DWORD *)(a1 + 68);
    *uint64_t v4 = 37;
    *(_DWORD *)(v4 + 1) = v10;
    v4 += 5;
    if ((v6 & 0x10) == 0)
    {
LABEL_15:
      if ((v6 & 0x20) == 0) {
        goto LABEL_26;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_15;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 72);
  *uint64_t v4 = 40;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 0x20) != 0)
  {
LABEL_23:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v12 = *(unsigned char *)(a1 + 73);
    *uint64_t v4 = 48;
    v4[1] = v12;
    v4 += 2;
  }
LABEL_26:
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 58;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        unint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        unint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_117D800(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_117D118(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_117D968(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x3F) == 0) {
    goto LABEL_31;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_17:
    unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
  unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
  uint64_t v11 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 2) != 0) {
    goto LABEL_17;
  }
LABEL_12:
  if ((v8 & 4) != 0)
  {
LABEL_20:
    int v15 = *(_DWORD *)(a1 + 64);
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v16;
  }
LABEL_24:
  uint64_t v17 = v2 + 5;
  if ((v8 & 8) == 0) {
    uint64_t v17 = v2;
  }
  if ((v8 & 0x10) != 0) {
    v17 += 2;
  }
  if ((v8 & 0x20) != 0) {
    uint64_t v2 = v17 + 2;
  }
  else {
    uint64_t v2 = v17;
  }
LABEL_31:
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v2 += v21;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_117D2C0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1194D5C((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_23;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_24;
    }
LABEL_23:
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_25;
    }
LABEL_24:
    HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      v3[3].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 73);
      goto LABEL_12;
    }
LABEL_25:
    v3[3].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 72);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_117D458()
{
  return 1;
}

void *sub_117D460@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.FwdGeoMatchedSubsequence");
}

uint64_t sub_117D470(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_117D528(uint64_t a1)
{
  sub_117D470(a1);

  operator delete();
}

uint64_t sub_117D560(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_117D5E0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = (char *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t v19 = (void *)(a1 + 32);
LABEL_29:
      uint64_t v21 = (std::string *)sub_1880F84(v19, v18);
      uint64_t v16 = (void *)sub_188C244(v21, *(char **)v27, (uint64_t)a3);
LABEL_30:
      *(void *)uint64_t v27 = v16;
      if (!v16) {
        goto LABEL_43;
      }
      goto LABEL_36;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 4u;
    uint64_t v23 = v8 + 1;
    LODWORD(v22) = *v8;
    if ((v22 & 0x80) == 0) {
      goto LABEL_35;
    }
    int v24 = *v23;
    uint64_t v22 = v22 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v23 = v8 + 2;
LABEL_35:
      *(void *)uint64_t v27 = v23;
      *(_DWORD *)(a1 + 40) = v22;
      goto LABEL_36;
    }
    uint64_t v25 = sub_188C138((uint64_t)v8, v22);
    *(void *)uint64_t v27 = v25;
    *(_DWORD *)(a1 + 40) = v26;
    if (!v25) {
      goto LABEL_43;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (void *)(a1 + 24);
    goto LABEL_29;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      std::string::size_type v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = *(char **)v27;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_43:
  *(void *)uint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v27;
}

unsigned char *sub_117D800(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_117D968(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
LABEL_17:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_117DA78(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_117DB70()
{
  return 1;
}

void *sub_117DB78@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.FwdGeoToken");
}

uint64_t sub_117DB88(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_117DC0C((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_117DC0C(uint64_t (***result)()))()
{
  if (result != &off_252BC68)
  {
    int v1 = result;
    uint64_t v2 = result[3];
    if (v2)
    {
      sub_117EFCC(v2);
      operator delete();
    }
    unint64_t v3 = v1[4];
    if (v3)
    {
      sub_117EFCC(v3);
      operator delete();
    }
    int v4 = v1[5];
    if (v4)
    {
      sub_117EFCC(v4);
      operator delete();
    }
    uint64_t v5 = v1[6];
    if (v5)
    {
      sub_117EFCC(v5);
      operator delete();
    }
    unint64_t v6 = v1[7];
    if (v6)
    {
      sub_117EFCC(v6);
      operator delete();
    }
    uint64_t v7 = v1[8];
    if (v7)
    {
      sub_117F4DC(v7);
      operator delete();
    }
    uint64_t v8 = v1[9];
    if (v8)
    {
      sub_117F4DC(v8);
      operator delete();
    }
    int v9 = v1[10];
    if (v9)
    {
      sub_117F4DC(v9);
      operator delete();
    }
    uint64_t v10 = v1[11];
    if (v10)
    {
      sub_117F4DC(v10);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[12];
    if (result)
    {
      sub_117F4DC(result);
      operator delete();
    }
  }
  return result;
}

void sub_117DD98(uint64_t a1)
{
  sub_117DB88(a1);

  operator delete();
}

uint64_t sub_117DDD0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_117DDF4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_117DE1C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v47 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v47, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v47 + 1;
    unsigned int v9 = *v47;
    if (*v47 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v47, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v47 + 2;
      }
    }
    uint64_t v47 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_86;
        }
        v5 |= 0x400u;
        unint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v13 = v8 + 2;
LABEL_13:
          uint64_t v47 = v13;
          *(_DWORD *)(a1 + 104) = v12;
          goto LABEL_84;
        }
        uint64_t v39 = (char *)sub_188C138((uint64_t)v8, v12);
        uint64_t v47 = v39;
        *(_DWORD *)(a1 + 104) = v40;
        if (v39) {
          goto LABEL_84;
        }
        goto LABEL_104;
      case 2u:
        if (v9 != 16) {
          goto LABEL_86;
        }
        v5 |= 0x800u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v41 = (char *)sub_188C138((uint64_t)v8, v15);
          uint64_t v47 = v41;
          *(_DWORD *)(a1 + 108) = v42;
          if (!v41) {
            goto LABEL_104;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          uint64_t v47 = v16;
          *(_DWORD *)(a1 + 108) = v15;
        }
        goto LABEL_84;
      case 3u:
        if (v9 != 24) {
          goto LABEL_86;
        }
        v5 |= 0x1000u;
        uint64_t v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          std::string::size_type v43 = (char *)sub_188C138((uint64_t)v8, v18);
          uint64_t v47 = v43;
          *(_DWORD *)(a1 + 112) = v44;
          if (!v43) {
            goto LABEL_104;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_23:
          uint64_t v47 = v19;
          *(_DWORD *)(a1 + 112) = v18;
        }
        goto LABEL_84;
      case 4u:
        if (v9 != 32) {
          goto LABEL_86;
        }
        v5 |= 0x2000u;
        uint64_t v22 = v8 + 1;
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v45 = (char *)sub_188C138((uint64_t)v8, v21);
          uint64_t v47 = v45;
          *(_DWORD *)(a1 + 116) = v46;
          if (!v45) {
            goto LABEL_104;
          }
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_28:
          uint64_t v47 = v22;
          *(_DWORD *)(a1 + 116) = v21;
        }
        goto LABEL_84;
      case 5u:
        if (v9 != 42) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        int v24 = *(void **)(a1 + 24);
        if (v24) {
          goto LABEL_55;
        }
        uint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v25 = (void *)*v25;
        }
        int v24 = sub_1184758((uint64_t)v25);
        *(void *)(a1 + 24) = v24;
        goto LABEL_54;
      case 6u:
        if (v9 != 50) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        int v24 = *(void **)(a1 + 32);
        if (v24) {
          goto LABEL_55;
        }
        int v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v26 = (void *)*v26;
        }
        int v24 = sub_1184758((uint64_t)v26);
        *(void *)(a1 + 32) = v24;
        goto LABEL_54;
      case 7u:
        if (v9 != 58) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        int v24 = *(void **)(a1 + 40);
        if (v24) {
          goto LABEL_55;
        }
        uint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v27 = (void *)*v27;
        }
        int v24 = sub_1184758((uint64_t)v27);
        *(void *)(a1 + 40) = v24;
        goto LABEL_54;
      case 8u:
        if (v9 != 66) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        int v24 = *(void **)(a1 + 48);
        if (v24) {
          goto LABEL_55;
        }
        uint64_t v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v28 = (void *)*v28;
        }
        int v24 = sub_1184758((uint64_t)v28);
        *(void *)(a1 + 48) = v24;
        goto LABEL_54;
      case 9u:
        if (v9 != 74) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        int v24 = *(void **)(a1 + 56);
        if (v24) {
          goto LABEL_55;
        }
        unsigned int v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v29 = (void *)*v29;
        }
        int v24 = sub_1184758((uint64_t)v29);
        *(void *)(a1 + 56) = v24;
LABEL_54:
        uint64_t v8 = v47;
LABEL_55:
        uint64_t v30 = sub_117E3CC(a3, (uint64_t)v24, (unsigned __int8 *)v8);
        goto LABEL_83;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v31 = *(void *)(a1 + 64);
        if (v31) {
          goto LABEL_82;
        }
        uint64_t v32 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v32 = (void *)*v32;
        }
        uint64_t v31 = sub_11847D0((uint64_t)v32);
        *(void *)(a1 + 64) = v31;
        goto LABEL_81;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v31 = *(void *)(a1 + 72);
        if (v31) {
          goto LABEL_82;
        }
        BOOL v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          BOOL v33 = (void *)*v33;
        }
        uint64_t v31 = sub_11847D0((uint64_t)v33);
        *(void *)(a1 + 72) = v31;
        goto LABEL_81;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v31 = *(void *)(a1 + 80);
        if (v31) {
          goto LABEL_82;
        }
        std::string::size_type v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          std::string::size_type v34 = (void *)*v34;
        }
        uint64_t v31 = sub_11847D0((uint64_t)v34);
        *(void *)(a1 + 80) = v31;
        goto LABEL_81;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v31 = *(void *)(a1 + 88);
        if (v31) {
          goto LABEL_82;
        }
        uint64_t v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v35 = (void *)*v35;
        }
        uint64_t v31 = sub_11847D0((uint64_t)v35);
        *(void *)(a1 + 88) = v31;
        goto LABEL_81;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v31 = *(void *)(a1 + 96);
        if (v31) {
          goto LABEL_82;
        }
        int v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v36 = (void *)*v36;
        }
        uint64_t v31 = sub_11847D0((uint64_t)v36);
        *(void *)(a1 + 96) = v31;
LABEL_81:
        uint64_t v8 = v47;
LABEL_82:
        uint64_t v30 = sub_117E45C(a3, v31, (unsigned __int8 *)v8);
        goto LABEL_83;
      default:
LABEL_86:
        if (v9) {
          BOOL v37 = (v9 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v7)
          {
            uint64_t v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v47;
          }
          uint64_t v30 = (char *)sub_1885AC0(v9, v38, v8, a3);
LABEL_83:
          uint64_t v47 = v30;
          if (!v30) {
            goto LABEL_104;
          }
LABEL_84:
          if (sub_11947B8((uint64_t)a3, &v47, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_104:
        }
          uint64_t v47 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v47;
    }
  }
}

char *sub_117E3CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_117F078(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_117E45C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_117F588(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_117E4EC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x400) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 104);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 108);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 112);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 116);
    *int v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 24);
    *int v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      uint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      uint64_t v21 = v4 + 2;
    }
    int v4 = sub_117F260(v19, (unint64_t)v21, a3);
    if ((v6 & 2) == 0)
    {
LABEL_31:
      if ((v6 & 4) == 0) {
        goto LABEL_32;
      }
      goto LABEL_52;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_31;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 32);
  *int v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    int v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    int v24 = v4 + 2;
  }
  int v4 = sub_117F260(v22, (unint64_t)v24, a3);
  if ((v6 & 4) == 0)
  {
LABEL_32:
    if ((v6 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_58;
  }
LABEL_52:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 40);
  *int v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    uint64_t v27 = v4 + 2;
  }
  int v4 = sub_117F260(v25, (unint64_t)v27, a3);
  if ((v6 & 8) == 0)
  {
LABEL_33:
    if ((v6 & 0x10) == 0) {
      goto LABEL_34;
    }
    goto LABEL_64;
  }
LABEL_58:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 48);
  *int v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    uint64_t v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    uint64_t v30 = v4 + 2;
  }
  int v4 = sub_117F260(v28, (unint64_t)v30, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_34:
    if ((v6 & 0x20) == 0) {
      goto LABEL_35;
    }
    goto LABEL_70;
  }
LABEL_64:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 56);
  *int v4 = 74;
  unsigned int v32 = *(_DWORD *)(v31 + 20);
  v4[1] = v32;
  if (v32 > 0x7F) {
    BOOL v33 = sub_188A9CC(v32, v4 + 1);
  }
  else {
    BOOL v33 = v4 + 2;
  }
  int v4 = sub_117F260(v31, (unint64_t)v33, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_35:
    if ((v6 & 0x40) == 0) {
      goto LABEL_36;
    }
    goto LABEL_76;
  }
LABEL_70:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v34 = *(void *)(a1 + 64);
  *int v4 = 82;
  unsigned int v35 = *(_DWORD *)(v34 + 20);
  v4[1] = v35;
  if (v35 > 0x7F) {
    int v36 = sub_188A9CC(v35, v4 + 1);
  }
  else {
    int v36 = v4 + 2;
  }
  int v4 = sub_117F7D0(v34, (unint64_t)v36, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_36:
    if ((v6 & 0x80) == 0) {
      goto LABEL_37;
    }
    goto LABEL_82;
  }
LABEL_76:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v37 = *(void *)(a1 + 72);
  *int v4 = 90;
  unsigned int v38 = *(_DWORD *)(v37 + 20);
  v4[1] = v38;
  if (v38 > 0x7F) {
    uint64_t v39 = sub_188A9CC(v38, v4 + 1);
  }
  else {
    uint64_t v39 = v4 + 2;
  }
  int v4 = sub_117F7D0(v37, (unint64_t)v39, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_37:
    if ((v6 & 0x100) == 0) {
      goto LABEL_38;
    }
    goto LABEL_88;
  }
LABEL_82:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v40 = *(void *)(a1 + 80);
  *int v4 = 98;
  unsigned int v41 = *(_DWORD *)(v40 + 20);
  v4[1] = v41;
  if (v41 > 0x7F) {
    int v42 = sub_188A9CC(v41, v4 + 1);
  }
  else {
    int v42 = v4 + 2;
  }
  int v4 = sub_117F7D0(v40, (unint64_t)v42, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_38:
    if ((v6 & 0x200) == 0) {
      goto LABEL_100;
    }
    goto LABEL_94;
  }
LABEL_88:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v43 = *(void *)(a1 + 88);
  *int v4 = 106;
  unsigned int v44 = *(_DWORD *)(v43 + 20);
  v4[1] = v44;
  if (v44 > 0x7F) {
    uint64_t v45 = sub_188A9CC(v44, v4 + 1);
  }
  else {
    uint64_t v45 = v4 + 2;
  }
  int v4 = sub_117F7D0(v43, (unint64_t)v45, a3);
  if ((v6 & 0x200) != 0)
  {
LABEL_94:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v46 = *(void *)(a1 + 96);
    *int v4 = 114;
    unsigned int v47 = *(_DWORD *)(v46 + 20);
    v4[1] = v47;
    if (v47 > 0x7F) {
      unsigned int v48 = sub_188A9CC(v47, v4 + 1);
    }
    else {
      unsigned int v48 = v4 + 2;
    }
    int v4 = sub_117F7D0(v46, (unint64_t)v48, a3);
  }
LABEL_100:
  uint64_t v49 = *(void *)(a1 + 8);
  if ((v49 & 1) == 0) {
    return v4;
  }
  unint64_t v51 = v49 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v51 + 31) < 0)
  {
    uint64_t v52 = *(void **)(v51 + 8);
    uint64_t v53 = *(void *)(v51 + 16);
  }
  else
  {
    uint64_t v52 = (void *)(v51 + 8);
    LODWORD(v53) = *(unsigned __int8 *)(v51 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v53)
  {
    uint64_t v54 = (int)v53;
    memcpy(v4, v52, (int)v53);
    v4 += v54;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v52, v53, v4);
}

uint64_t sub_117EBA4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if (v2)
  {
    uint64_t v4 = sub_117F404(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_117F404(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v7 = sub_117F404(*(void *)(a1 + 40));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_25;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v8 = sub_117F404(*(void *)(a1 + 48));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v9 = sub_117F404(*(void *)(a1 + 56));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v10 = sub_117F9F0(*(void *)(a1 + 64));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_27:
  uint64_t v11 = sub_117F9F0(*(void *)(a1 + 72));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_14:
    uint64_t v6 = sub_117F9F0(*(void *)(a1 + 80));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  if ((v2 & 0x3F00) == 0) {
    goto LABEL_47;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v12 = sub_117F9F0(*(void *)(a1 + 88));
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_18:
      if ((v2 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_31;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v13 = sub_117F9F0(*(void *)(a1 + 96));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x400) == 0)
  {
LABEL_19:
    if ((v2 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }
LABEL_31:
  int v14 = *(_DWORD *)(a1 + 104);
  if (v14 < 0) {
    uint64_t v15 = 11;
  }
  else {
    uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v15;
  if ((v2 & 0x800) == 0)
  {
LABEL_20:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_39;
  }
LABEL_35:
  int v16 = *(_DWORD *)(a1 + 108);
  if (v16 < 0) {
    uint64_t v17 = 11;
  }
  else {
    uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v17;
  if ((v2 & 0x1000) == 0)
  {
LABEL_21:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_39:
  int v18 = *(_DWORD *)(a1 + 112);
  if (v18 < 0) {
    uint64_t v19 = 11;
  }
  else {
    uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v19;
  if ((v2 & 0x2000) != 0)
  {
LABEL_43:
    int v20 = *(_DWORD *)(a1 + 116);
    if (v20 < 0) {
      uint64_t v21 = 11;
    }
    else {
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v21;
  }
LABEL_47:
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v3 += v25;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_117EF04(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    }
    if ((v2 & 2) != 0) {
      HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_117EF50(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
LABEL_6:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_7:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_117EFB4()
{
  return 1;
}

void *sub_117EFBC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.FwdGeoAlgorithmInfo");
}

void *sub_117EFCC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_117F040(void *a1)
{
  sub_117EFCC(a1);

  operator delete();
}

char *sub_117F078(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    int v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      int v16 = v8 + 2;
LABEL_25:
      uint64_t v25 = v16;
      *(_DWORD *)(a1 + 28) = v15;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v15);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    LODWORD(v18) = *v8;
    if ((v18 & 0x80) == 0) {
      goto LABEL_29;
    }
    int v20 = *v19;
    uint64_t v18 = v18 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      uint64_t v25 = v19;
      *(_DWORD *)(a1 + 24) = v18;
      goto LABEL_30;
    }
    unsigned int v23 = (char *)sub_188C138((uint64_t)v8, v18);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_117F260(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_117F404(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_117F4C4()
{
  return 1;
}

void *sub_117F4CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.FwdGeoFilterInfo");
}

void *sub_117F4DC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_117F550(void *a1)
{
  sub_117F4DC(a1);

  operator delete();
}

char *sub_117F588(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v17 = v8 + 1;
      LODWORD(v16) = *v8;
      if ((v16 & 0x80) == 0) {
        goto LABEL_26;
      }
      int v18 = *v17;
      uint64_t v16 = v16 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v17 = v8 + 2;
LABEL_26:
        uint64_t v31 = v17;
        *(_DWORD *)(a1 + 32) = v16;
        goto LABEL_36;
      }
      uint64_t v25 = (char *)sub_188C138((uint64_t)v8, v16);
      uint64_t v31 = v25;
      *(_DWORD *)(a1 + 32) = v26;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    int v20 = v8 + 1;
    LODWORD(v19) = *v8;
    if ((v19 & 0x80) == 0) {
      goto LABEL_31;
    }
    int v21 = *v20;
    uint64_t v19 = v19 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      int v20 = v8 + 2;
LABEL_31:
      uint64_t v31 = v20;
      *(_DWORD *)(a1 + 28) = v19;
      goto LABEL_36;
    }
    uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unsigned int v23 = v8 + 1;
    LODWORD(v22) = *v8;
    if ((v22 & 0x80) == 0) {
      goto LABEL_35;
    }
    int v24 = *v23;
    uint64_t v22 = v22 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      unsigned int v23 = v8 + 2;
LABEL_35:
      uint64_t v31 = v23;
      *(_DWORD *)(a1 + 24) = v22;
      goto LABEL_36;
    }
    unsigned int v29 = (char *)sub_188C138((uint64_t)v8, v22);
    uint64_t v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v31;
    }
    uint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_117F7D0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 32);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_117F9F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_19;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  if ((v1 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_19:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_117FAE4()
{
  return 1;
}

void *sub_117FAEC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.FwdGeoComparatorInfo");
}

void *sub_117FAFC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_117FB70(void *a1)
{
  sub_117FAFC(a1);

  operator delete();
}

char *sub_117FBA8(uint64_t a1, char *a2, int32x2_t *a3)
{
  v144 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v144, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v144 + 1;
    unsigned int v9 = *v144;
    if (*v144 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v144, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v144 + 2;
      }
    }
    v144 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_139;
        }
        v5 |= 1u;
        unint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          v144 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_146;
        }
        v92 = (char *)sub_188C0D0((uint64_t)v8, v13);
        v144 = v92;
        *(_DWORD *)(a1 + 24) = v93;
        if (v92) {
          goto LABEL_146;
        }
        goto LABEL_203;
      case 2u:
        if (v9 != 16) {
          goto LABEL_139;
        }
        v5 |= 2u;
        unint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          v94 = (char *)sub_188C0D0((uint64_t)v8, v16);
          v144 = v94;
          *(_DWORD *)(a1 + 28) = v95;
          if (!v94) {
            goto LABEL_203;
          }
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_18:
          v144 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_146;
      case 3u:
        if (v9 != 24) {
          goto LABEL_139;
        }
        v5 |= 4u;
        unint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          v96 = (char *)sub_188C0D0((uint64_t)v8, v19);
          v144 = v96;
          *(_DWORD *)(a1 + 32) = v97;
          if (!v96) {
            goto LABEL_203;
          }
        }
        else
        {
          unint64_t v18 = v8 + 2;
LABEL_23:
          v144 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_146;
      case 4u:
        if (v9 != 32) {
          goto LABEL_139;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          v98 = (char *)sub_188C0D0((uint64_t)v8, v22);
          v144 = v98;
          *(_DWORD *)(a1 + 36) = v99;
          if (!v98) {
            goto LABEL_203;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          v144 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_146;
      case 5u:
        if (v9 != 40) {
          goto LABEL_139;
        }
        v5 |= 0x10u;
        int v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          v100 = (char *)sub_188C0D0((uint64_t)v8, v25);
          v144 = v100;
          *(_DWORD *)(a1 + 40) = v101;
          if (!v100) {
            goto LABEL_203;
          }
        }
        else
        {
          int v24 = v8 + 2;
LABEL_33:
          v144 = v24;
          *(_DWORD *)(a1 + 40) = v25;
        }
        goto LABEL_146;
      case 6u:
        if (v9 != 48) {
          goto LABEL_139;
        }
        v5 |= 0x20u;
        uint64_t v27 = v8 + 1;
        int v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          v102 = (char *)sub_188C0D0((uint64_t)v8, v28);
          v144 = v102;
          *(_DWORD *)(a1 + 44) = v103;
          if (!v102) {
            goto LABEL_203;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_38:
          v144 = v27;
          *(_DWORD *)(a1 + 44) = v28;
        }
        goto LABEL_146;
      case 7u:
        if (v9 != 56) {
          goto LABEL_139;
        }
        v5 |= 0x40u;
        int v30 = v8 + 1;
        int v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        int v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          v104 = (char *)sub_188C0D0((uint64_t)v8, v31);
          v144 = v104;
          *(_DWORD *)(a1 + 48) = v105;
          if (!v104) {
            goto LABEL_203;
          }
        }
        else
        {
          int v30 = v8 + 2;
LABEL_43:
          v144 = v30;
          *(_DWORD *)(a1 + 48) = v31;
        }
        goto LABEL_146;
      case 8u:
        if (v9 != 64) {
          goto LABEL_139;
        }
        v5 |= 0x80u;
        BOOL v33 = v8 + 1;
        int v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          v106 = (char *)sub_188C0D0((uint64_t)v8, v34);
          v144 = v106;
          *(_DWORD *)(a1 + 52) = v107;
          if (!v106) {
            goto LABEL_203;
          }
        }
        else
        {
          BOOL v33 = v8 + 2;
LABEL_48:
          v144 = v33;
          *(_DWORD *)(a1 + 52) = v34;
        }
        goto LABEL_146;
      case 9u:
        if (v9 != 72) {
          goto LABEL_139;
        }
        v5 |= 0x100u;
        int v36 = v8 + 1;
        int v37 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v38 = *v36;
        int v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          v108 = (char *)sub_188C0D0((uint64_t)v8, v37);
          v144 = v108;
          *(_DWORD *)(a1 + 56) = v109;
          if (!v108) {
            goto LABEL_203;
          }
        }
        else
        {
          int v36 = v8 + 2;
LABEL_53:
          v144 = v36;
          *(_DWORD *)(a1 + 56) = v37;
        }
        goto LABEL_146;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_139;
        }
        v5 |= 0x200u;
        uint64_t v39 = v8 + 1;
        int v40 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v41 = *v39;
        int v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          v110 = (char *)sub_188C0D0((uint64_t)v8, v40);
          v144 = v110;
          *(_DWORD *)(a1 + 60) = v111;
          if (!v110) {
            goto LABEL_203;
          }
        }
        else
        {
          uint64_t v39 = v8 + 2;
LABEL_58:
          v144 = v39;
          *(_DWORD *)(a1 + 60) = v40;
        }
        goto LABEL_146;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_139;
        }
        v5 |= 0x400u;
        int v42 = v8 + 1;
        int v43 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v44 = *v42;
        int v43 = v43 + (v44 << 7) - 128;
        if (v44 < 0)
        {
          v112 = (char *)sub_188C0D0((uint64_t)v8, v43);
          v144 = v112;
          *(_DWORD *)(a1 + 64) = v113;
          if (!v112) {
            goto LABEL_203;
          }
        }
        else
        {
          int v42 = v8 + 2;
LABEL_63:
          v144 = v42;
          *(_DWORD *)(a1 + 64) = v43;
        }
        goto LABEL_146;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_139;
        }
        v5 |= 0x800u;
        uint64_t v45 = v8 + 1;
        int v46 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v47 = *v45;
        int v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          v114 = (char *)sub_188C0D0((uint64_t)v8, v46);
          v144 = v114;
          *(_DWORD *)(a1 + 68) = v115;
          if (!v114) {
            goto LABEL_203;
          }
        }
        else
        {
          uint64_t v45 = v8 + 2;
LABEL_68:
          v144 = v45;
          *(_DWORD *)(a1 + 68) = v46;
        }
        goto LABEL_146;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_139;
        }
        v5 |= 0x1000u;
        unsigned int v48 = v8 + 1;
        int v49 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_73;
        }
        int v50 = *v48;
        int v49 = v49 + (v50 << 7) - 128;
        if (v50 < 0)
        {
          v116 = (char *)sub_188C0D0((uint64_t)v8, v49);
          v144 = v116;
          *(_DWORD *)(a1 + 72) = v117;
          if (!v116) {
            goto LABEL_203;
          }
        }
        else
        {
          unsigned int v48 = v8 + 2;
LABEL_73:
          v144 = v48;
          *(_DWORD *)(a1 + 72) = v49;
        }
        goto LABEL_146;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_139;
        }
        v5 |= 0x2000u;
        unint64_t v51 = v8 + 1;
        int v52 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_78;
        }
        int v53 = *v51;
        int v52 = v52 + (v53 << 7) - 128;
        if (v53 < 0)
        {
          v118 = (char *)sub_188C0D0((uint64_t)v8, v52);
          v144 = v118;
          *(_DWORD *)(a1 + 76) = v119;
          if (!v118) {
            goto LABEL_203;
          }
        }
        else
        {
          unint64_t v51 = v8 + 2;
LABEL_78:
          v144 = v51;
          *(_DWORD *)(a1 + 76) = v52;
        }
        goto LABEL_146;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_139;
        }
        v5 |= 0x4000u;
        uint64_t v54 = v8 + 1;
        int v55 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_83;
        }
        int v56 = *v54;
        int v55 = v55 + (v56 << 7) - 128;
        if (v56 < 0)
        {
          v120 = (char *)sub_188C0D0((uint64_t)v8, v55);
          v144 = v120;
          *(_DWORD *)(a1 + 80) = v121;
          if (!v120) {
            goto LABEL_203;
          }
        }
        else
        {
          uint64_t v54 = v8 + 2;
LABEL_83:
          v144 = v54;
          *(_DWORD *)(a1 + 80) = v55;
        }
        goto LABEL_146;
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_139;
        }
        v5 |= 0x8000u;
        uint64_t v57 = v8 + 1;
        int v58 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_88;
        }
        int v59 = *v57;
        int v58 = v58 + (v59 << 7) - 128;
        if (v59 < 0)
        {
          v122 = (char *)sub_188C0D0((uint64_t)v8, v58);
          v144 = v122;
          *(_DWORD *)(a1 + 84) = v123;
          if (!v122) {
            goto LABEL_203;
          }
        }
        else
        {
          uint64_t v57 = v8 + 2;
LABEL_88:
          v144 = v57;
          *(_DWORD *)(a1 + 84) = v58;
        }
        goto LABEL_146;
      case 0x11u:
        if (v9 != 136) {
          goto LABEL_139;
        }
        v5 |= 0x10000u;
        v60 = v8 + 1;
        int v61 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_93;
        }
        int v62 = *v60;
        int v61 = v61 + (v62 << 7) - 128;
        if (v62 < 0)
        {
          v124 = (char *)sub_188C0D0((uint64_t)v8, v61);
          v144 = v124;
          *(_DWORD *)(a1 + 88) = v125;
          if (!v124) {
            goto LABEL_203;
          }
        }
        else
        {
          v60 = v8 + 2;
LABEL_93:
          v144 = v60;
          *(_DWORD *)(a1 + 88) = v61;
        }
        goto LABEL_146;
      case 0x12u:
        if (v9 != 144) {
          goto LABEL_139;
        }
        v5 |= 0x20000u;
        uint64_t v63 = v8 + 1;
        int v64 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_98;
        }
        int v65 = *v63;
        int v64 = v64 + (v65 << 7) - 128;
        if (v65 < 0)
        {
          v126 = (char *)sub_188C0D0((uint64_t)v8, v64);
          v144 = v126;
          *(_DWORD *)(a1 + 92) = v127;
          if (!v126) {
            goto LABEL_203;
          }
        }
        else
        {
          uint64_t v63 = v8 + 2;
LABEL_98:
          v144 = v63;
          *(_DWORD *)(a1 + 92) = v64;
        }
        goto LABEL_146;
      case 0x13u:
        if (v9 != 152) {
          goto LABEL_139;
        }
        v5 |= 0x40000u;
        BOOL v66 = v8 + 1;
        int v67 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_103;
        }
        int v68 = *v66;
        int v67 = v67 + (v68 << 7) - 128;
        if (v68 < 0)
        {
          v128 = (char *)sub_188C0D0((uint64_t)v8, v67);
          v144 = v128;
          *(_DWORD *)(a1 + 96) = v129;
          if (!v128) {
            goto LABEL_203;
          }
        }
        else
        {
          BOOL v66 = v8 + 2;
LABEL_103:
          v144 = v66;
          *(_DWORD *)(a1 + 96) = v67;
        }
        goto LABEL_146;
      case 0x14u:
        if (v9 != 160) {
          goto LABEL_139;
        }
        v5 |= 0x80000u;
        long long v69 = v8 + 1;
        int v70 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_108;
        }
        int v71 = *v69;
        int v70 = v70 + (v71 << 7) - 128;
        if (v71 < 0)
        {
          v130 = (char *)sub_188C0D0((uint64_t)v8, v70);
          v144 = v130;
          *(_DWORD *)(a1 + 100) = v131;
          if (!v130) {
            goto LABEL_203;
          }
        }
        else
        {
          long long v69 = v8 + 2;
LABEL_108:
          v144 = v69;
          *(_DWORD *)(a1 + 100) = v70;
        }
        goto LABEL_146;
      case 0x15u:
        if (v9 != 168) {
          goto LABEL_139;
        }
        v5 |= 0x100000u;
        v72 = v8 + 1;
        int v73 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_113;
        }
        int v74 = *v72;
        int v73 = v73 + (v74 << 7) - 128;
        if (v74 < 0)
        {
          v132 = (char *)sub_188C0D0((uint64_t)v8, v73);
          v144 = v132;
          *(_DWORD *)(a1 + 104) = v133;
          if (!v132) {
            goto LABEL_203;
          }
        }
        else
        {
          v72 = v8 + 2;
LABEL_113:
          v144 = v72;
          *(_DWORD *)(a1 + 104) = v73;
        }
        goto LABEL_146;
      case 0x16u:
        if (v9 != 176) {
          goto LABEL_139;
        }
        v5 |= 0x200000u;
        v75 = v8 + 1;
        int v76 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_118;
        }
        int v77 = *v75;
        int v76 = v76 + (v77 << 7) - 128;
        if (v77 < 0)
        {
          v134 = (char *)sub_188C0D0((uint64_t)v8, v76);
          v144 = v134;
          *(_DWORD *)(a1 + 108) = v135;
          if (!v134) {
            goto LABEL_203;
          }
        }
        else
        {
          v75 = v8 + 2;
LABEL_118:
          v144 = v75;
          *(_DWORD *)(a1 + 108) = v76;
        }
        goto LABEL_146;
      case 0x17u:
        if (v9 != 184) {
          goto LABEL_139;
        }
        v5 |= 0x400000u;
        v78 = v8 + 1;
        int v79 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_123;
        }
        int v80 = *v78;
        int v79 = v79 + (v80 << 7) - 128;
        if (v80 < 0)
        {
          v136 = (char *)sub_188C0D0((uint64_t)v8, v79);
          v144 = v136;
          *(_DWORD *)(a1 + 112) = v137;
          if (!v136) {
            goto LABEL_203;
          }
        }
        else
        {
          v78 = v8 + 2;
LABEL_123:
          v144 = v78;
          *(_DWORD *)(a1 + 112) = v79;
        }
        goto LABEL_146;
      case 0x18u:
        if (v9 != 192) {
          goto LABEL_139;
        }
        v5 |= 0x800000u;
        double v81 = v8 + 1;
        int v82 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_128;
        }
        int v83 = *v81;
        int v82 = v82 + (v83 << 7) - 128;
        if (v83 < 0)
        {
          v138 = (char *)sub_188C0D0((uint64_t)v8, v82);
          v144 = v138;
          *(_DWORD *)(a1 + 116) = v139;
          if (!v138) {
            goto LABEL_203;
          }
        }
        else
        {
          double v81 = v8 + 2;
LABEL_128:
          v144 = v81;
          *(_DWORD *)(a1 + 116) = v82;
        }
        goto LABEL_146;
      case 0x19u:
        if (v9 != 200) {
          goto LABEL_139;
        }
        v5 |= 0x1000000u;
        v84 = v8 + 1;
        int v85 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_133;
        }
        int v86 = *v84;
        int v85 = v85 + (v86 << 7) - 128;
        if (v86 < 0)
        {
          v140 = (char *)sub_188C0D0((uint64_t)v8, v85);
          v144 = v140;
          *(_DWORD *)(a1 + 120) = v141;
          if (!v140) {
            goto LABEL_203;
          }
        }
        else
        {
          v84 = v8 + 2;
LABEL_133:
          v144 = v84;
          *(_DWORD *)(a1 + 120) = v85;
        }
        goto LABEL_146;
      case 0x1Au:
        if (v9 != 208) {
          goto LABEL_139;
        }
        v5 |= 0x2000000u;
        v87 = v8 + 1;
        int v88 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_138;
        }
        int v89 = *v87;
        int v88 = v88 + (v89 << 7) - 128;
        if (v89 < 0)
        {
          v142 = (char *)sub_188C0D0((uint64_t)v8, v88);
          v144 = v142;
          *(_DWORD *)(a1 + 124) = v143;
          if (!v142) {
            goto LABEL_203;
          }
        }
        else
        {
          v87 = v8 + 2;
LABEL_138:
          v144 = v87;
          *(_DWORD *)(a1 + 124) = v88;
        }
        goto LABEL_146;
      default:
LABEL_139:
        if (v9) {
          BOOL v90 = (v9 & 7) == 4;
        }
        else {
          BOOL v90 = 1;
        }
        if (!v90)
        {
          if (*v7)
          {
            v91 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v91 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v144;
          }
          v144 = (char *)sub_1885AC0(v9, v91, v8, a3);
          if (!v144) {
            goto LABEL_203;
          }
LABEL_146:
          if (sub_11947B8((uint64_t)a3, &v144, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_203:
        }
          v144 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v144;
    }
  }
}

unsigned char *sub_11806C0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    *int v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 40);
    *int v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 44);
    *int v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 48);
    *int v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 52);
    *int v4 = 64;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v31 = *(_DWORD *)(a1 + 56);
    *int v4 = 72;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unsigned int v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v34 = *(_DWORD *)(a1 + 60);
    *int v4 = 80;
    v4[1] = v34;
    if (v34 > 0x7F)
    {
      v4[1] = v34 | 0x80;
      unsigned int v35 = v34 >> 7;
      v4[2] = v34 >> 7;
      v4 += 3;
      if (v34 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v36 = v35 >> 14;
          v35 >>= 7;
          *v4++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v37 = *(_DWORD *)(a1 + 64);
    *int v4 = 88;
    v4[1] = v37;
    if (v37 > 0x7F)
    {
      v4[1] = v37 | 0x80;
      unsigned int v38 = v37 >> 7;
      v4[2] = v37 >> 7;
      v4 += 3;
      if (v37 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v39 = v38 >> 14;
          v38 >>= 7;
          *v4++ = v38;
        }
        while (v39);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v40 = *(_DWORD *)(a1 + 68);
    *int v4 = 96;
    v4[1] = v40;
    if (v40 > 0x7F)
    {
      v4[1] = v40 | 0x80;
      unsigned int v41 = v40 >> 7;
      v4[2] = v40 >> 7;
      v4 += 3;
      if (v40 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v42 = v41 >> 14;
          v41 >>= 7;
          *v4++ = v41;
        }
        while (v42);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v43 = *(_DWORD *)(a1 + 72);
    *int v4 = 104;
    v4[1] = v43;
    if (v43 > 0x7F)
    {
      v4[1] = v43 | 0x80;
      unsigned int v44 = v43 >> 7;
      v4[2] = v43 >> 7;
      v4 += 3;
      if (v43 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v45 = v44 >> 14;
          v44 >>= 7;
          *v4++ = v44;
        }
        while (v45);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v46 = *(_DWORD *)(a1 + 76);
    *int v4 = 112;
    v4[1] = v46;
    if (v46 > 0x7F)
    {
      v4[1] = v46 | 0x80;
      unsigned int v47 = v46 >> 7;
      v4[2] = v46 >> 7;
      v4 += 3;
      if (v46 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v48 = v47 >> 14;
          v47 >>= 7;
          *v4++ = v47;
        }
        while (v48);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v49 = *(_DWORD *)(a1 + 80);
    *int v4 = 120;
    v4[1] = v49;
    if (v49 > 0x7F)
    {
      v4[1] = v49 | 0x80;
      unsigned int v50 = v49 >> 7;
      v4[2] = v49 >> 7;
      v4 += 3;
      if (v49 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v51 = v50 >> 14;
          v50 >>= 7;
          *v4++ = v50;
        }
        while (v51);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v52 = *(_DWORD *)(a1 + 84);
    *(_WORD *)int v4 = 384;
    v4[2] = v52;
    if (v52 > 0x7F)
    {
      v4[2] = v52 | 0x80;
      unsigned int v53 = v52 >> 7;
      _OWORD v4[3] = v52 >> 7;
      v4 += 4;
      if (v52 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v54 = v53 >> 14;
          v53 >>= 7;
          *v4++ = v53;
        }
        while (v54);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x10000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v55 = *(_DWORD *)(a1 + 88);
    *(_WORD *)int v4 = 392;
    v4[2] = v55;
    if (v55 > 0x7F)
    {
      v4[2] = v55 | 0x80;
      unsigned int v56 = v55 >> 7;
      _OWORD v4[3] = v55 >> 7;
      v4 += 4;
      if (v55 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v57 = v56 >> 14;
          v56 >>= 7;
          *v4++ = v56;
        }
        while (v57);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v58 = *(_DWORD *)(a1 + 92);
    *(_WORD *)int v4 = 400;
    v4[2] = v58;
    if (v58 > 0x7F)
    {
      v4[2] = v58 | 0x80;
      unsigned int v59 = v58 >> 7;
      _OWORD v4[3] = v58 >> 7;
      v4 += 4;
      if (v58 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v60 = v59 >> 14;
          v59 >>= 7;
          *v4++ = v59;
        }
        while (v60);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v61 = *(_DWORD *)(a1 + 96);
    *(_WORD *)int v4 = 408;
    v4[2] = v61;
    if (v61 > 0x7F)
    {
      v4[2] = v61 | 0x80;
      unsigned int v62 = v61 >> 7;
      _OWORD v4[3] = v61 >> 7;
      v4 += 4;
      if (v61 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v63 = v62 >> 14;
          v62 >>= 7;
          *v4++ = v62;
        }
        while (v63);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x80000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v64 = *(_DWORD *)(a1 + 100);
    *(_WORD *)int v4 = 416;
    v4[2] = v64;
    if (v64 > 0x7F)
    {
      v4[2] = v64 | 0x80;
      unsigned int v65 = v64 >> 7;
      _OWORD v4[3] = v64 >> 7;
      v4 += 4;
      if (v64 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v66 = v65 >> 14;
          v65 >>= 7;
          *v4++ = v65;
        }
        while (v66);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x100000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v67 = *(_DWORD *)(a1 + 104);
    *(_WORD *)int v4 = 424;
    v4[2] = v67;
    if (v67 > 0x7F)
    {
      v4[2] = v67 | 0x80;
      unsigned int v68 = v67 >> 7;
      _OWORD v4[3] = v67 >> 7;
      v4 += 4;
      if (v67 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v69 = v68 >> 14;
          v68 >>= 7;
          *v4++ = v68;
        }
        while (v69);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x200000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v70 = *(_DWORD *)(a1 + 108);
    *(_WORD *)int v4 = 432;
    v4[2] = v70;
    if (v70 > 0x7F)
    {
      v4[2] = v70 | 0x80;
      unsigned int v71 = v70 >> 7;
      _OWORD v4[3] = v70 >> 7;
      v4 += 4;
      if (v70 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v72 = v71 >> 14;
          v71 >>= 7;
          *v4++ = v71;
        }
        while (v72);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x400000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v73 = *(_DWORD *)(a1 + 112);
    *(_WORD *)int v4 = 440;
    v4[2] = v73;
    if (v73 > 0x7F)
    {
      v4[2] = v73 | 0x80;
      unsigned int v74 = v73 >> 7;
      _OWORD v4[3] = v73 >> 7;
      v4 += 4;
      if (v73 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v75 = v74 >> 14;
          v74 >>= 7;
          *v4++ = v74;
        }
        while (v75);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x800000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v76 = *(_DWORD *)(a1 + 116);
    *(_WORD *)int v4 = 448;
    v4[2] = v76;
    if (v76 > 0x7F)
    {
      v4[2] = v76 | 0x80;
      unsigned int v77 = v76 >> 7;
      _OWORD v4[3] = v76 >> 7;
      v4 += 4;
      if (v76 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v78 = v77 >> 14;
          v77 >>= 7;
          *v4++ = v77;
        }
        while (v78);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x1000000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v79 = *(_DWORD *)(a1 + 120);
    *(_WORD *)int v4 = 456;
    v4[2] = v79;
    if (v79 > 0x7F)
    {
      v4[2] = v79 | 0x80;
      unsigned int v80 = v79 >> 7;
      _OWORD v4[3] = v79 >> 7;
      v4 += 4;
      if (v79 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v81 = v80 >> 14;
          v80 >>= 7;
          *v4++ = v80;
        }
        while (v81);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x2000000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v82 = *(_DWORD *)(a1 + 124);
    *(_WORD *)int v4 = 464;
    v4[2] = v82;
    if (v82 > 0x7F)
    {
      v4[2] = v82 | 0x80;
      unsigned int v83 = v82 >> 7;
      _OWORD v4[3] = v82 >> 7;
      v4 += 4;
      if (v82 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v84 = v83 >> 14;
          v83 >>= 7;
          *v4++ = v83;
        }
        while (v84);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v85 = *(void *)(a1 + 8);
  if ((v85 & 1) == 0) {
    return v4;
  }
  unint64_t v87 = v85 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v87 + 31) < 0)
  {
    int v88 = *(void **)(v87 + 8);
    uint64_t v89 = *(void *)(v87 + 16);
  }
  else
  {
    int v88 = (void *)(v87 + 8);
    LODWORD(v89) = *(unsigned __int8 *)(v87 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v89)
  {
    uint64_t v90 = (int)v89;
    memcpy(v4, v88, (int)v89);
    v4 += v90;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v88, v89, v4);
}

uint64_t sub_1181404(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_10:
      if ((v1 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_44;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_11:
    if ((v1 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_45;
  }
LABEL_44:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) == 0)
  {
LABEL_12:
    if ((v1 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_45:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x40) == 0)
  {
LABEL_13:
    if ((v1 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_46:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x80) != 0) {
LABEL_14:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  if ((v1 & 0xFF00) == 0) {
    goto LABEL_25;
  }
  if ((v1 & 0x100) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 0x200) == 0)
    {
LABEL_18:
      if ((v1 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_50;
    }
  }
  else if ((v1 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x400) == 0)
  {
LABEL_19:
    if ((v1 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_51;
  }
LABEL_50:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x800) == 0)
  {
LABEL_20:
    if ((v1 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_52;
  }
LABEL_51:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x1000) == 0)
  {
LABEL_21:
    if ((v1 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_53;
  }
LABEL_52:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x2000) == 0)
  {
LABEL_22:
    if ((v1 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_54;
  }
LABEL_53:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 76) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x4000) == 0)
  {
LABEL_23:
    if ((v1 & 0x8000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_54:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x8000) != 0) {
LABEL_24:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_25:
  if ((v1 & 0xFF0000) == 0) {
    goto LABEL_35;
  }
  if ((v1 & 0x10000) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v1 & 0x20000) == 0)
    {
LABEL_28:
      if ((v1 & 0x40000) == 0) {
        goto LABEL_29;
      }
      goto LABEL_58;
    }
  }
  else if ((v1 & 0x20000) == 0)
  {
    goto LABEL_28;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v1 & 0x40000) == 0)
  {
LABEL_29:
    if ((v1 & 0x80000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_59;
  }
LABEL_58:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 96) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v1 & 0x80000) == 0)
  {
LABEL_30:
    if ((v1 & 0x100000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_60;
  }
LABEL_59:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 100) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v1 & 0x100000) == 0)
  {
LABEL_31:
    if ((v1 & 0x200000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_61;
  }
LABEL_60:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 104) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v1 & 0x200000) == 0)
  {
LABEL_32:
    if ((v1 & 0x400000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_62;
  }
LABEL_61:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 108) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v1 & 0x400000) == 0)
  {
LABEL_33:
    if ((v1 & 0x800000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }
LABEL_62:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 112) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v1 & 0x800000) != 0) {
LABEL_34:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 116) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_35:
  if ((v1 & 0x3000000) != 0)
  {
    if ((v1 & 0x1000000) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 120) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v1 & 0x2000000) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 124) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_11818D8()
{
  return 1;
}

void *sub_11818E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.FwdGeoTimingInfo");
}

uint64_t sub_11818F0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1181990(uint64_t a1)
{
  sub_11818F0(a1);

  operator delete();
}

uint64_t sub_11819C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0)
  {
    *(_DWORD *)(a1 + 40) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1181A1C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = (char *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)unsigned int v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unsigned int v18 = v8 + 1;
      LODWORD(v17) = *v8;
      if ((v17 & 0x80) == 0) {
        goto LABEL_25;
      }
      int v19 = *v18;
      uint64_t v17 = v17 + (v19 << 7) - 128;
      if ((v19 & 0x80000000) == 0)
      {
        unsigned int v18 = v8 + 2;
LABEL_25:
        *(void *)unsigned int v30 = v18;
        *(_DWORD *)(a1 + 40) = v17;
        goto LABEL_36;
      }
      uint64_t v26 = sub_188C138((uint64_t)v8, v17);
      *(void *)unsigned int v30 = v26;
      *(_DWORD *)(a1 + 40) = v27;
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_36;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 2u;
    unsigned int v23 = v8 + 1;
    uint64_t v24 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v25 = *v23;
    uint64_t v24 = v24 + (v25 << 7) - 128;
    if ((v25 & 0x80000000) == 0)
    {
      unsigned int v23 = v8 + 2;
LABEL_35:
      *(void *)unsigned int v30 = v23;
      *(void *)(a1 + 32) = v24;
      goto LABEL_36;
    }
    uint64_t v28 = sub_188C138((uint64_t)v8, v24);
    *(void *)unsigned int v30 = v28;
    *(void *)(a1 + 32) = v29;
    if (!v28) {
      goto LABEL_45;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    unsigned int v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      unsigned int v21 = (uint64_t *)*v21;
    }
    unsigned int v22 = (std::string *)sub_1880F84((void *)(a1 + 24), v21);
    unsigned int v16 = (void *)sub_188C244(v22, *(char **)v30, (uint64_t)a3);
LABEL_30:
    *(void *)unsigned int v30 = v16;
    if (!v16) {
      goto LABEL_45;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unsigned int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = *(char **)v30;
    }
    unsigned int v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  *(void *)unsigned int v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v30;
}

unsigned char *sub_1181C58(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 40);
    *char v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unsigned int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unsigned int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1181E1C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_9:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_10:
  if ((v1 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_15:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1181F0C(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      int v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1181FDC()
{
  return 1;
}

void *sub_1181FE4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.FwdGeoUnmatchedToken");
}

uint64_t sub_1181FF4(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1889DA8(a1 + 48);
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11820BC(uint64_t a1)
{
  sub_1181FF4(a1);

  operator delete();
}

uint64_t sub_11820F4(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0x3C) != 0)
  {
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 96) = 0;
    *(_DWORD *)(a1 + 104) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1182188(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v42 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v42 + 1);
    unsigned int v9 = **(unsigned char **)v42;
    if ((char)**(unsigned char **)v42 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v42, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v42 + 2);
      }
    }
    *(void *)unsigned int v42 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_56;
        }
        v5 |= 4u;
        unint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)unsigned int v42 = v12;
          *(void *)(a1 + 88) = v13;
          goto LABEL_64;
        }
        uint64_t v30 = sub_188C138((uint64_t)v8, v13);
        *(void *)unsigned int v42 = v30;
        *(void *)(a1 + 88) = v31;
        if (!v30) {
          goto LABEL_69;
        }
        goto LABEL_64;
      case 2u:
        if (v9 == 18)
        {
          unint64_t v15 = sub_188C2DC((unsigned int *)(a1 + 24), v8, (uint64_t)a3);
          goto LABEL_63;
        }
        if (v9 != 16) {
          goto LABEL_56;
        }
        uint64_t v38 = sub_110DB5C((uint64_t *)v42);
        sub_11794F8(a1, v38);
        goto LABEL_54;
      case 3u:
        if (v9 == 26)
        {
          unint64_t v15 = sub_188C2BC((unsigned int *)(a1 + 48), v8, (uint64_t)a3);
          goto LABEL_63;
        }
        if (v9 == 24)
        {
          int v39 = sub_110DB5C((uint64_t *)v42);
          sub_1182598(a1, v39);
LABEL_54:
          if (!*(void *)v42) {
            goto LABEL_69;
          }
LABEL_64:
          if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_56:
        if (v9) {
          BOOL v40 = (v9 & 7) == 4;
        }
        else {
          BOOL v40 = 1;
        }
        if (!v40)
        {
          if (*v7)
          {
            unsigned int v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v42;
          }
          unint64_t v15 = sub_1885AC0(v9, v41, (char *)v8, a3);
LABEL_63:
          *(void *)unsigned int v42 = v15;
          if (!v15) {
            goto LABEL_69;
          }
          goto LABEL_64;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_69:
        }
          *(void *)unsigned int v42 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v42;
      case 4u:
        if (v9 != 34) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 72);
        goto LABEL_26;
      case 5u:
        if (v9 != 42) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 80);
LABEL_26:
        uint64_t v20 = (std::string *)sub_1880F84(v18, v17);
        unint64_t v15 = (void *)sub_188C244(v20, *(char **)v42, (uint64_t)a3);
        goto LABEL_63;
      case 6u:
        if (v9 != 48) {
          goto LABEL_56;
        }
        v5 |= 8u;
        unsigned int v22 = (char *)(v8 + 1);
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_31;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v32 = sub_188C138((uint64_t)v8, v21);
          *(void *)unsigned int v42 = v32;
          *(_DWORD *)(a1 + 96) = v33;
          if (!v32) {
            goto LABEL_69;
          }
        }
        else
        {
          unsigned int v22 = (char *)(v8 + 2);
LABEL_31:
          *(void *)unsigned int v42 = v22;
          *(_DWORD *)(a1 + 96) = v21;
        }
        goto LABEL_64;
      case 7u:
        if (v9 != 56) {
          goto LABEL_56;
        }
        v5 |= 0x10u;
        uint64_t v24 = (char *)(v8 + 1);
        uint64_t v25 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v34 = sub_188C138((uint64_t)v8, v25);
          *(void *)unsigned int v42 = v34;
          *(unsigned char *)(a1 + 100) = v35 != 0;
          if (!v34) {
            goto LABEL_69;
          }
        }
        else
        {
          uint64_t v24 = (char *)(v8 + 2);
LABEL_36:
          *(void *)unsigned int v42 = v24;
          *(unsigned char *)(a1 + 100) = v25 != 0;
        }
        goto LABEL_64;
      case 8u:
        if (v9 != 64) {
          goto LABEL_56;
        }
        v5 |= 0x20u;
        uint64_t v28 = (char *)(v8 + 1);
        LODWORD(v27) = *v8;
        if ((v27 & 0x80) == 0) {
          goto LABEL_41;
        }
        int v29 = *v28;
        uint64_t v27 = v27 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v36 = sub_188C138((uint64_t)v8, v27);
          *(void *)unsigned int v42 = v36;
          *(_DWORD *)(a1 + 104) = v37;
          if (!v36) {
            goto LABEL_69;
          }
        }
        else
        {
          uint64_t v28 = (char *)(v8 + 2);
LABEL_41:
          *(void *)unsigned int v42 = v28;
          *(_DWORD *)(a1 + 104) = v27;
        }
        goto LABEL_64;
      default:
        goto LABEL_56;
    }
  }
}

void sub_1182598(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 48);
  int v4 = (_DWORD *)(a1 + 48);
  if (v5 == *(_DWORD *)(a1 + 52))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 48), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 56) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 56) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  *int v4 = v6;
}

unsigned char *sub_1182608(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 88);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  unsigned int v10 = *(_DWORD *)(a1 + 40);
  if ((int)v10 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *int v4 = 18;
    unsigned int v11 = v4 + 1;
    if (v10 >= 0x80)
    {
      do
      {
        *v11++ = v10 | 0x80;
        unsigned int v38 = v10 >> 14;
        v10 >>= 7;
      }
      while (v38);
      int v4 = v11 - 1;
    }
    v4 += 2;
    unsigned char *v11 = v10;
    unint64_t v12 = *(unint64_t **)(a1 + 32);
    uint64_t v13 = &v12[*(int *)(a1 + 24)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v15 = *v12++;
      unint64_t v14 = v15;
      *int v4 = v15;
      if (v15 > 0x7F)
      {
        *int v4 = v14 | 0x80;
        unint64_t v16 = v14 >> 7;
        v4[1] = v14 >> 7;
        v4 += 2;
        if (v14 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v12 < v13);
  }
  unsigned int v18 = *(_DWORD *)(a1 + 64);
  if ((int)v18 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *int v4 = 26;
    uint64_t v19 = v4 + 1;
    if (v18 >= 0x80)
    {
      do
      {
        *v19++ = v18 | 0x80;
        unsigned int v39 = v18 >> 14;
        v18 >>= 7;
      }
      while (v39);
      int v4 = v19 - 1;
    }
    v4 += 2;
    *uint64_t v19 = v18;
    uint64_t v20 = *(int **)(a1 + 56);
    uint64_t v21 = &v20[*(int *)(a1 + 48)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v23 = *v20++;
      unint64_t v22 = v23;
      *int v4 = v23;
      if (v23 > 0x7F)
      {
        *int v4 = v22 | 0x80;
        unint64_t v24 = v22 >> 7;
        v4[1] = v22 >> 7;
        v4 += 2;
        if (v22 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v25 = v24 >> 14;
            v24 >>= 7;
            *v4++ = v24;
          }
          while (v25);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v20 < v21);
  }
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_34:
      if ((v6 & 8) == 0) {
        goto LABEL_44;
      }
      goto LABEL_38;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_34;
  }
  int v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_44;
  }
LABEL_38:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v26 = *(int *)(a1 + 96);
  *int v4 = 48;
  v4[1] = v26;
  if (v26 > 0x7F)
  {
    v4[1] = v26 | 0x80;
    unint64_t v27 = v26 >> 7;
    v4[2] = v26 >> 7;
    v4 += 3;
    if (v26 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v28 = v27 >> 14;
        v27 >>= 7;
        *v4++ = v27;
      }
      while (v28);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_44:
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v29 = *(unsigned char *)(a1 + 100);
    *int v4 = 56;
    v4[1] = v29;
    v4 += 2;
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v30 = *(int *)(a1 + 104);
    *int v4 = 64;
    v4[1] = v30;
    if (v30 > 0x7F)
    {
      v4[1] = v30 | 0x80;
      unint64_t v31 = v30 >> 7;
      v4[2] = v30 >> 7;
      v4 += 3;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if ((v33 & 1) == 0) {
    return v4;
  }
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v35 + 31) < 0)
  {
    uint64_t v36 = *(void **)(v35 + 8);
    uint64_t v37 = *(void *)(v35 + 16);
  }
  else
  {
    uint64_t v36 = (void *)(v35 + 8);
    LODWORD(v37) = *(unsigned __int8 *)(v35 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v37)
  {
    uint64_t v40 = (int)v37;
    memcpy(v4, v36, (int)v37);
    v4 += v40;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v36, v37, v4);
}

uint64_t sub_1182A90(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 40) = v3;
  uint64_t v5 = v4 + v2;
  uint64_t v6 = sub_188D498((unsigned int *)(a1 + 48));
  if (v6)
  {
    int v7 = v6;
    if ((v6 & 0x80000000) != 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v5 += v8;
  }
  else
  {
    int v7 = 0;
  }
  *(_DWORD *)(a1 + 64) = v7;
  uint64_t result = v5 + v6;
  int v10 = *(_DWORD *)(a1 + 16);
  if ((v10 & 0x3F) == 0) {
    goto LABEL_36;
  }
  if (v10)
  {
    unint64_t v11 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 2) == 0)
    {
LABEL_15:
      if ((v10 & 4) == 0) {
        goto LABEL_16;
      }
      goto LABEL_24;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_15;
  }
  unint64_t v14 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  result += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 4) == 0)
  {
LABEL_16:
    if ((v10 & 8) == 0) {
      goto LABEL_29;
    }
LABEL_25:
    int v17 = *(_DWORD *)(a1 + 96);
    if (v17 < 0) {
      uint64_t v18 = 11;
    }
    else {
      uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v18;
    goto LABEL_29;
  }
LABEL_24:
  result += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v10 & 8) != 0) {
    goto LABEL_25;
  }
LABEL_29:
  if ((v10 & 0x10) != 0) {
    result += 2;
  }
  if ((v10 & 0x20) != 0)
  {
    int v19 = *(_DWORD *)(a1 + 104);
    if (v19 < 0) {
      uint64_t v20 = 11;
    }
    else {
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v20;
  }
LABEL_36:
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v22 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    result += v23;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1182CB4(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[2], v9 + v8);
    std::string::size_type v10 = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 48);
    uint64_t result = (std::string *)memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v11 = *(_DWORD *)(a2 + 16);
  if ((v11 & 0x3F) != 0)
  {
    if (v11)
    {
      uint64_t v13 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (uint64_t *)*v15;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v13, v15);
      if ((v11 & 2) == 0)
      {
LABEL_8:
        if ((v11 & 4) == 0) {
          goto LABEL_9;
        }
        goto LABEL_24;
      }
    }
    else if ((v11 & 2) == 0)
    {
      goto LABEL_8;
    }
    uint64_t v16 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v16, v18);
    if ((v11 & 4) == 0)
    {
LABEL_9:
      if ((v11 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_25;
    }
LABEL_24:
    v3[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
    if ((v11 & 8) == 0)
    {
LABEL_10:
      if ((v11 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_26;
    }
LABEL_25:
    LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
    if ((v11 & 0x10) == 0)
    {
LABEL_11:
      if ((v11 & 0x20) == 0)
      {
LABEL_13:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v11;
        goto LABEL_14;
      }
LABEL_12:
      LODWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 104);
      goto LABEL_13;
    }
LABEL_26:
    v3[4].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 100);
    if ((v11 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1182E64()
{
  return 1;
}

void *sub_1182E6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.FwdGeoSubSequence");
}

void *sub_1182E7C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1182EF0(void *a1)
{
  sub_1182E7C(a1);

  operator delete();
}

char *sub_1182F28(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v99 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v99, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v99 + 1;
    unsigned int v9 = *v99;
    if (*v99 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v99, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v99 + 2;
      }
    }
    int v99 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_94;
        }
        v5 |= 1u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          int v99 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_101;
        }
        unsigned int v65 = (char *)sub_188C0D0((uint64_t)v8, v13);
        int v99 = v65;
        *(_DWORD *)(a1 + 24) = v66;
        if (v65) {
          goto LABEL_101;
        }
        goto LABEL_140;
      case 2u:
        if (v9 != 16) {
          goto LABEL_94;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          unsigned int v67 = (char *)sub_188C0D0((uint64_t)v8, v16);
          int v99 = v67;
          *(_DWORD *)(a1 + 28) = v68;
          if (!v67) {
            goto LABEL_140;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          int v99 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_101;
      case 3u:
        if (v9 != 24) {
          goto LABEL_94;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          unsigned int v69 = (char *)sub_188C0D0((uint64_t)v8, v19);
          int v99 = v69;
          *(_DWORD *)(a1 + 32) = v70;
          if (!v69) {
            goto LABEL_140;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          int v99 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_101;
      case 4u:
        if (v9 != 32) {
          goto LABEL_94;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          unsigned int v71 = (char *)sub_188C0D0((uint64_t)v8, v22);
          int v99 = v71;
          *(_DWORD *)(a1 + 36) = v72;
          if (!v71) {
            goto LABEL_140;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          int v99 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_101;
      case 5u:
        if (v9 != 40) {
          goto LABEL_94;
        }
        v5 |= 0x10u;
        unint64_t v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          unsigned int v73 = (char *)sub_188C0D0((uint64_t)v8, v25);
          int v99 = v73;
          *(_DWORD *)(a1 + 40) = v74;
          if (!v73) {
            goto LABEL_140;
          }
        }
        else
        {
          unint64_t v24 = v8 + 2;
LABEL_33:
          int v99 = v24;
          *(_DWORD *)(a1 + 40) = v25;
        }
        goto LABEL_101;
      case 6u:
        if (v9 != 48) {
          goto LABEL_94;
        }
        v5 |= 0x20u;
        unint64_t v27 = v8 + 1;
        int v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          unsigned int v75 = (char *)sub_188C0D0((uint64_t)v8, v28);
          int v99 = v75;
          *(_DWORD *)(a1 + 44) = v76;
          if (!v75) {
            goto LABEL_140;
          }
        }
        else
        {
          unint64_t v27 = v8 + 2;
LABEL_38:
          int v99 = v27;
          *(_DWORD *)(a1 + 44) = v28;
        }
        goto LABEL_101;
      case 7u:
        if (v9 != 56) {
          goto LABEL_94;
        }
        v5 |= 0x40u;
        unint64_t v30 = v8 + 1;
        int v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        int v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          unsigned int v77 = (char *)sub_188C0D0((uint64_t)v8, v31);
          int v99 = v77;
          *(_DWORD *)(a1 + 48) = v78;
          if (!v77) {
            goto LABEL_140;
          }
        }
        else
        {
          unint64_t v30 = v8 + 2;
LABEL_43:
          int v99 = v30;
          *(_DWORD *)(a1 + 48) = v31;
        }
        goto LABEL_101;
      case 8u:
        if (v9 != 64) {
          goto LABEL_94;
        }
        v5 |= 0x80u;
        uint64_t v33 = v8 + 1;
        int v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          unsigned int v79 = (char *)sub_188C0D0((uint64_t)v8, v34);
          int v99 = v79;
          *(_DWORD *)(a1 + 52) = v80;
          if (!v79) {
            goto LABEL_140;
          }
        }
        else
        {
          uint64_t v33 = v8 + 2;
LABEL_48:
          int v99 = v33;
          *(_DWORD *)(a1 + 52) = v34;
        }
        goto LABEL_101;
      case 9u:
        if (v9 != 72) {
          goto LABEL_94;
        }
        v5 |= 0x100u;
        uint64_t v36 = v8 + 1;
        int v37 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v38 = *v36;
        int v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          unsigned int v81 = (char *)sub_188C0D0((uint64_t)v8, v37);
          int v99 = v81;
          *(_DWORD *)(a1 + 56) = v82;
          if (!v81) {
            goto LABEL_140;
          }
        }
        else
        {
          uint64_t v36 = v8 + 2;
LABEL_53:
          int v99 = v36;
          *(_DWORD *)(a1 + 56) = v37;
        }
        goto LABEL_101;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_94;
        }
        v5 |= 0x200u;
        unsigned int v39 = v8 + 1;
        int v40 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v41 = *v39;
        int v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          unsigned int v83 = (char *)sub_188C0D0((uint64_t)v8, v40);
          int v99 = v83;
          *(_DWORD *)(a1 + 60) = v84;
          if (!v83) {
            goto LABEL_140;
          }
        }
        else
        {
          unsigned int v39 = v8 + 2;
LABEL_58:
          int v99 = v39;
          *(_DWORD *)(a1 + 60) = v40;
        }
        goto LABEL_101;
      case 0x15u:
        if (v9 != 168) {
          goto LABEL_94;
        }
        v5 |= 0x800u;
        unsigned int v42 = v8 + 1;
        int v43 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v44 = *v42;
        int v43 = v43 + (v44 << 7) - 128;
        if (v44 < 0)
        {
          uint64_t v85 = (char *)sub_188C0D0((uint64_t)v8, v43);
          int v99 = v85;
          *(_DWORD *)(a1 + 68) = v86;
          if (!v85) {
            goto LABEL_140;
          }
        }
        else
        {
          unsigned int v42 = v8 + 2;
LABEL_63:
          int v99 = v42;
          *(_DWORD *)(a1 + 68) = v43;
        }
        goto LABEL_101;
      case 0x16u:
        if (v9 != 176) {
          goto LABEL_94;
        }
        v5 |= 0x1000u;
        unsigned int v45 = v8 + 1;
        int v46 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v47 = *v45;
        int v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          unint64_t v87 = (char *)sub_188C0D0((uint64_t)v8, v46);
          int v99 = v87;
          *(_DWORD *)(a1 + 72) = v88;
          if (!v87) {
            goto LABEL_140;
          }
        }
        else
        {
          unsigned int v45 = v8 + 2;
LABEL_68:
          int v99 = v45;
          *(_DWORD *)(a1 + 72) = v46;
        }
        goto LABEL_101;
      case 0x17u:
        if (v9 != 184) {
          goto LABEL_94;
        }
        v5 |= 0x2000u;
        unsigned int v48 = v8 + 1;
        int v49 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_73;
        }
        int v50 = *v48;
        int v49 = v49 + (v50 << 7) - 128;
        if (v50 < 0)
        {
          uint64_t v89 = (char *)sub_188C0D0((uint64_t)v8, v49);
          int v99 = v89;
          *(_DWORD *)(a1 + 76) = v90;
          if (!v89) {
            goto LABEL_140;
          }
        }
        else
        {
          unsigned int v48 = v8 + 2;
LABEL_73:
          int v99 = v48;
          *(_DWORD *)(a1 + 76) = v49;
        }
        goto LABEL_101;
      case 0x18u:
        if (v9 != 192) {
          goto LABEL_94;
        }
        v5 |= 0x4000u;
        unsigned int v51 = v8 + 1;
        int v52 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_78;
        }
        int v53 = *v51;
        int v52 = v52 + (v53 << 7) - 128;
        if (v53 < 0)
        {
          v91 = (char *)sub_188C0D0((uint64_t)v8, v52);
          int v99 = v91;
          *(_DWORD *)(a1 + 80) = v92;
          if (!v91) {
            goto LABEL_140;
          }
        }
        else
        {
          unsigned int v51 = v8 + 2;
LABEL_78:
          int v99 = v51;
          *(_DWORD *)(a1 + 80) = v52;
        }
        goto LABEL_101;
      case 0x19u:
        if (v9 != 200) {
          goto LABEL_94;
        }
        v5 |= 0x8000u;
        unsigned int v54 = v8 + 1;
        int v55 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_83;
        }
        int v56 = *v54;
        int v55 = v55 + (v56 << 7) - 128;
        if (v56 < 0)
        {
          int v93 = (char *)sub_188C0D0((uint64_t)v8, v55);
          int v99 = v93;
          *(_DWORD *)(a1 + 84) = v94;
          if (!v93) {
            goto LABEL_140;
          }
        }
        else
        {
          unsigned int v54 = v8 + 2;
LABEL_83:
          int v99 = v54;
          *(_DWORD *)(a1 + 84) = v55;
        }
        goto LABEL_101;
      case 0x1Au:
        if (v9 != 208) {
          goto LABEL_94;
        }
        v5 |= 0x10000u;
        unsigned int v57 = v8 + 1;
        int v58 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_88;
        }
        int v59 = *v57;
        int v58 = v58 + (v59 << 7) - 128;
        if (v59 < 0)
        {
          int v95 = (char *)sub_188C0D0((uint64_t)v8, v58);
          int v99 = v95;
          *(_DWORD *)(a1 + 88) = v96;
          if (!v95) {
            goto LABEL_140;
          }
        }
        else
        {
          unsigned int v57 = v8 + 2;
LABEL_88:
          int v99 = v57;
          *(_DWORD *)(a1 + 88) = v58;
        }
        goto LABEL_101;
      case 0x1Bu:
        if (v9 != 216) {
          goto LABEL_94;
        }
        v5 |= 0x400u;
        unsigned int v60 = v8 + 1;
        int v61 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_93;
        }
        int v62 = *v60;
        int v61 = v61 + (v62 << 7) - 128;
        if (v62 < 0)
        {
          int v97 = (char *)sub_188C0D0((uint64_t)v8, v61);
          int v99 = v97;
          *(_DWORD *)(a1 + 64) = v98;
          if (!v97) {
            goto LABEL_140;
          }
        }
        else
        {
          unsigned int v60 = v8 + 2;
LABEL_93:
          int v99 = v60;
          *(_DWORD *)(a1 + 64) = v61;
        }
        goto LABEL_101;
      default:
LABEL_94:
        if (v9) {
          BOOL v63 = (v9 & 7) == 4;
        }
        else {
          BOOL v63 = 1;
        }
        if (!v63)
        {
          if (*v7)
          {
            unsigned int v64 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v64 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v99;
          }
          int v99 = (char *)sub_1885AC0(v9, v64, v8, a3);
          if (!v99) {
            goto LABEL_140;
          }
LABEL_101:
          if (sub_11947B8((uint64_t)a3, &v99, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_140:
        }
          int v99 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v99;
    }
  }
}

unsigned char *sub_1183708(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    *int v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 40);
    *int v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 44);
    *int v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 48);
    *int v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 52);
    *int v4 = 64;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v31 = *(_DWORD *)(a1 + 56);
    *int v4 = 72;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unsigned int v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v34 = *(_DWORD *)(a1 + 60);
    *int v4 = 80;
    v4[1] = v34;
    if (v34 > 0x7F)
    {
      v4[1] = v34 | 0x80;
      unsigned int v35 = v34 >> 7;
      v4[2] = v34 >> 7;
      v4 += 3;
      if (v34 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v36 = v35 >> 14;
          v35 >>= 7;
          *v4++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v37 = *(_DWORD *)(a1 + 68);
    *(_WORD *)int v4 = 424;
    v4[2] = v37;
    if (v37 > 0x7F)
    {
      v4[2] = v37 | 0x80;
      unsigned int v38 = v37 >> 7;
      _OWORD v4[3] = v37 >> 7;
      v4 += 4;
      if (v37 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v39 = v38 >> 14;
          v38 >>= 7;
          *v4++ = v38;
        }
        while (v39);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v40 = *(_DWORD *)(a1 + 72);
    *(_WORD *)int v4 = 432;
    v4[2] = v40;
    if (v40 > 0x7F)
    {
      v4[2] = v40 | 0x80;
      unsigned int v41 = v40 >> 7;
      _OWORD v4[3] = v40 >> 7;
      v4 += 4;
      if (v40 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v42 = v41 >> 14;
          v41 >>= 7;
          *v4++ = v41;
        }
        while (v42);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v43 = *(_DWORD *)(a1 + 76);
    *(_WORD *)int v4 = 440;
    v4[2] = v43;
    if (v43 > 0x7F)
    {
      v4[2] = v43 | 0x80;
      unsigned int v44 = v43 >> 7;
      _OWORD v4[3] = v43 >> 7;
      v4 += 4;
      if (v43 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v45 = v44 >> 14;
          v44 >>= 7;
          *v4++ = v44;
        }
        while (v45);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v46 = *(_DWORD *)(a1 + 80);
    *(_WORD *)int v4 = 448;
    v4[2] = v46;
    if (v46 > 0x7F)
    {
      v4[2] = v46 | 0x80;
      unsigned int v47 = v46 >> 7;
      _OWORD v4[3] = v46 >> 7;
      v4 += 4;
      if (v46 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v48 = v47 >> 14;
          v47 >>= 7;
          *v4++ = v47;
        }
        while (v48);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v49 = *(_DWORD *)(a1 + 84);
    *(_WORD *)int v4 = 456;
    v4[2] = v49;
    if (v49 > 0x7F)
    {
      v4[2] = v49 | 0x80;
      unsigned int v50 = v49 >> 7;
      _OWORD v4[3] = v49 >> 7;
      v4 += 4;
      if (v49 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v51 = v50 >> 14;
          v50 >>= 7;
          *v4++ = v50;
        }
        while (v51);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x10000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v52 = *(_DWORD *)(a1 + 88);
    *(_WORD *)int v4 = 464;
    v4[2] = v52;
    if (v52 > 0x7F)
    {
      v4[2] = v52 | 0x80;
      unsigned int v53 = v52 >> 7;
      _OWORD v4[3] = v52 >> 7;
      v4 += 4;
      if (v52 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v54 = v53 >> 14;
          v53 >>= 7;
          *v4++ = v53;
        }
        while (v54);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v55 = *(_DWORD *)(a1 + 64);
    *(_WORD *)int v4 = 472;
    v4[2] = v55;
    if (v55 > 0x7F)
    {
      v4[2] = v55 | 0x80;
      unsigned int v56 = v55 >> 7;
      _OWORD v4[3] = v55 >> 7;
      v4 += 4;
      if (v55 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v57 = v56 >> 14;
          v56 >>= 7;
          *v4++ = v56;
        }
        while (v57);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v58 = *(void *)(a1 + 8);
  if ((v58 & 1) == 0) {
    return v4;
  }
  unint64_t v60 = v58 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v60 + 31) < 0)
  {
    int v61 = *(void **)(v60 + 8);
    uint64_t v62 = *(void *)(v60 + 16);
  }
  else
  {
    int v61 = (void *)(v60 + 8);
    LODWORD(v62) = *(unsigned __int8 *)(v60 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v62)
  {
    uint64_t v63 = (int)v62;
    memcpy(v4, v61, (int)v62);
    v4 += v63;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v61, v62, v4);
}

uint64_t sub_1183FF0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_10:
      if ((v1 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_31;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_11:
    if ((v1 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) == 0)
  {
LABEL_12:
    if ((v1 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
LABEL_32:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x40) == 0)
  {
LABEL_13:
    if ((v1 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_33:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x80) != 0) {
LABEL_14:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  if ((v1 & 0xFF00) == 0) {
    goto LABEL_25;
  }
  if ((v1 & 0x100) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 0x200) == 0)
    {
LABEL_18:
      if ((v1 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_37;
    }
  }
  else if ((v1 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x400) == 0)
  {
LABEL_19:
    if ((v1 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_38;
  }
LABEL_37:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v1 & 0x800) == 0)
  {
LABEL_20:
    if ((v1 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_39;
  }
LABEL_38:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v1 & 0x1000) == 0)
  {
LABEL_21:
    if ((v1 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_40;
  }
LABEL_39:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v1 & 0x2000) == 0)
  {
LABEL_22:
    if ((v1 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_41;
  }
LABEL_40:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 76) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v1 & 0x4000) == 0)
  {
LABEL_23:
    if ((v1 & 0x8000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_41:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v1 & 0x8000) != 0) {
LABEL_24:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_25:
  if ((v1 & 0x10000) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_118432C()
{
  return 1;
}

void *sub_1184334@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.FwdGeoQueryStepTimes");
}

double sub_1184344(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_2496C60;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(_DWORD *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 120) = &qword_2550250;
  *(void *)(v2 + 128) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(_OWORD *)(v2 + 178) = 0u;
  return result;
}

uint64_t sub_1184428(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_2496CE0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(_DWORD *)(result + 96) = 0;
  return result;
}

uint64_t sub_11844E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_2496D60;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 69) = 0;
  return result;
}

uint64_t sub_118459C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_2496DE0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = 0;
  *(_WORD *)(result + 72) = 0;
  return result;
}

uint64_t sub_1184648(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_2496E60;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_11846D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_2496EE0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(void *)(v2 + 112) = 0;
  return result;
}

void *sub_1184758(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_2496F60;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_11847D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_2496FE0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_118484C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_2497060;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  return result;
}

uint64_t sub_11848D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24970E0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_118495C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_2497160;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(_DWORD *)(result + 64) = 0;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = 0;
  *(_DWORD *)(result + 104) = 0;
  return result;
}

double sub_1184A1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24971E0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 76) = 0u;
  return result;
}

void *sub_1184AA0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1194E74(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1184B20(void *a1)
{
  sub_1184AA0(a1);

  operator delete();
}

uint64_t sub_1184B58(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_11851EC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  unint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_1184BD4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      unsigned int v19 = v6;
      if (v7 == 10)
      {
        unsigned int v12 = v6 - 1;
        while (1)
        {
          unsigned int v13 = (unsigned __int8 *)(v12 + 1);
          unsigned int v19 = v12 + 1;
          unsigned int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            unsigned int v17 = sub_11870D4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            unsigned int v13 = (unsigned __int8 *)v19;
          }
          unsigned int v12 = (char *)sub_1184D74(a3, v16, v13);
          unsigned int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      unsigned int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_1184D74(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11852D0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1184E04(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1185B98(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unsigned int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unsigned int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1184F48(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1186238(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_1184FF8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_1194F74((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11850C8()
{
  return 1;
}

void *sub_11850D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.GeoSearchRequestLogRecord.GeoSearchTransaction");
}

uint64_t sub_11850E0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 168);
  if (*(uint64_t **)(a1 + 168) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 144));
  sub_1889DE8((void *)(a1 + 120));
  sub_1194EF4((void *)(a1 + 96));
  sub_1889DE8((void *)(a1 + 72));
  sub_1889DE8((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11851B4(uint64_t a1)
{
  sub_11850E0(a1);

  operator delete();
}

uint64_t sub_11851EC(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  sub_188CC00(a1 + 48);
  sub_188CC00(a1 + 72);
  uint64_t v2 = *(unsigned int *)(a1 + 104);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_1186A00(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 104) = 0;
  }
  sub_188CC00(a1 + 120);
  uint64_t result = sub_188CC00(a1 + 144);
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v7 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
  if ((v6 & 0x1E) != 0)
  {
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
  }
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = a1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_11852D0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v84 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v84, a3[11].i32[1]))
  {
    int v83 = 0;
    goto LABEL_3;
  }
  int v83 = 0;
  int v6 = (uint64_t **)(a1 + 144);
  unint64_t v7 = (uint64_t **)(a1 + 120);
  uint64_t v8 = (uint64_t **)(a1 + 72);
  char v9 = (uint64_t **)(a1 + 48);
  int v82 = (uint64_t *)(a1 + 8);
  unint64_t v10 = (uint64_t **)(a1 + 24);
  while (2)
  {
    uint64_t v11 = (char *)(*(void *)v84 + 1);
    unsigned int v12 = **(unsigned char **)v84;
    if ((char)**(unsigned char **)v84 < 0)
    {
      unsigned int v13 = v12 + (*v11 << 7);
      unsigned int v12 = v13 - 128;
      if (*v11 < 0)
      {
        uint64_t v11 = (char *)sub_188C180(*(uint64_t *)v84, v13 - 128);
        unsigned int v12 = v14;
      }
      else
      {
        uint64_t v11 = (char *)(*(void *)v84 + 2);
      }
    }
    *(void *)int v84 = v11;
    switch(v12 >> 3)
    {
      case 1u:
        if (v12 != 10) {
          goto LABEL_104;
        }
        uint64_t v15 = v11 - 1;
        while (1)
        {
          uint64_t v16 = (char *)(v15 + 1);
          *(void *)int v84 = v15 + 1;
          unsigned int v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            unsigned int v19 = *(std::string **)&v17[2 * v18 + 2];
          }
          else
          {
            if (!*v10) {
              operator new();
            }
            void *v21 = v20;
            v21[1] = sub_3A6EDC;
            *unsigned int v20 = 0;
            v20[1] = 0;
            v20[2] = 0;
            unsigned int v19 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v20);
            uint64_t v16 = *(char **)v84;
          }
          uint64_t v15 = sub_188C244(v19, v16, (uint64_t)a3);
          *(void *)int v84 = v15;
          if (!v15) {
            goto LABEL_125;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 10) {
            goto LABEL_112;
          }
        }
      case 2u:
        if (v12 != 18) {
          goto LABEL_104;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 8);
        unsigned int v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          unsigned int v23 = (uint64_t *)*v23;
        }
        unsigned int v24 = (std::string *)sub_1880F84((void *)(a1 + 168), v23);
        unsigned int v25 = (void *)sub_188C244(v24, *(char **)v84, (uint64_t)a3);
        goto LABEL_111;
      case 3u:
        if (v12 != 24) {
          goto LABEL_104;
        }
        v83 |= 2u;
        unsigned int v26 = v11 + 1;
        int v27 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v28 = *v26;
        int v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v74 = sub_188C0D0((uint64_t)v11, v27);
          *(void *)int v84 = v74;
          *(_DWORD *)(a1 + 176) = v75;
          if (!v74) {
            goto LABEL_125;
          }
        }
        else
        {
          unsigned int v26 = v11 + 2;
LABEL_30:
          *(void *)int v84 = v26;
          *(_DWORD *)(a1 + 176) = v27;
        }
        goto LABEL_112;
      case 4u:
        if (v12 != 32) {
          goto LABEL_104;
        }
        v83 |= 4u;
        unsigned int v29 = v11 + 1;
        int v30 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v31 = *v29;
        int v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v76 = sub_188C0D0((uint64_t)v11, v30);
          *(void *)int v84 = v76;
          *(_DWORD *)(a1 + 180) = v77;
          if (!v76) {
            goto LABEL_125;
          }
        }
        else
        {
          unsigned int v29 = v11 + 2;
LABEL_35:
          *(void *)int v84 = v29;
          *(_DWORD *)(a1 + 180) = v30;
        }
        goto LABEL_112;
      case 5u:
        if (v12 != 40) {
          goto LABEL_104;
        }
        v83 |= 8u;
        unsigned int v32 = v11 + 1;
        int v33 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v34 = *v32;
        int v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v78 = sub_188C0D0((uint64_t)v11, v33);
          *(void *)int v84 = v78;
          *(_DWORD *)(a1 + 184) = v79;
          if (!v78) {
            goto LABEL_125;
          }
        }
        else
        {
          unsigned int v32 = v11 + 2;
LABEL_40:
          *(void *)int v84 = v32;
          *(_DWORD *)(a1 + 184) = v33;
        }
        goto LABEL_112;
      case 6u:
        if (v12 != 48) {
          goto LABEL_104;
        }
        v83 |= 0x10u;
        unsigned int v35 = v11 + 1;
        int v36 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v37 = *v35;
        int v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v80 = sub_188C0D0((uint64_t)v11, v36);
          *(void *)int v84 = v80;
          *(_DWORD *)(a1 + 188) = v81;
          if (!v80) {
            goto LABEL_125;
          }
        }
        else
        {
          unsigned int v35 = v11 + 2;
LABEL_45:
          *(void *)int v84 = v35;
          *(_DWORD *)(a1 + 188) = v36;
        }
        goto LABEL_112;
      case 7u:
        if (v12 != 58) {
          goto LABEL_104;
        }
        unsigned int v38 = v11 - 1;
        while (1)
        {
          unsigned int v39 = (char *)(v38 + 1);
          *(void *)int v84 = v38 + 1;
          unsigned int v40 = *(_DWORD **)(a1 + 64);
          if (v40 && (uint64_t v41 = *(int *)(a1 + 56), (int)v41 < *v40))
          {
            *(_DWORD *)(a1 + 56) = v41 + 1;
            unsigned int v42 = *(std::string **)&v40[2 * v41 + 2];
          }
          else
          {
            if (!*v9) {
              operator new();
            }
            *unsigned int v44 = v43;
            v44[1] = sub_3A6EDC;
            void *v43 = 0;
            v43[1] = 0;
            v43[2] = 0;
            unsigned int v42 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v43);
            unsigned int v39 = *(char **)v84;
          }
          unsigned int v38 = sub_188C244(v42, v39, (uint64_t)a3);
          *(void *)int v84 = v38;
          if (!v38) {
            goto LABEL_125;
          }
          if (*(void *)a3 <= (unint64_t)v38 || *v38 != 58) {
            goto LABEL_112;
          }
        }
      case 8u:
        if (v12 != 66) {
          goto LABEL_104;
        }
        unsigned int v45 = v11 - 1;
        while (1)
        {
          unsigned int v46 = (char *)(v45 + 1);
          *(void *)int v84 = v45 + 1;
          unsigned int v47 = *(_DWORD **)(a1 + 88);
          if (v47 && (uint64_t v48 = *(int *)(a1 + 80), (int)v48 < *v47))
          {
            *(_DWORD *)(a1 + 80) = v48 + 1;
            unsigned int v49 = *(std::string **)&v47[2 * v48 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v51 = v50;
            v51[1] = sub_3A6EDC;
            void *v50 = 0;
            v50[1] = 0;
            v50[2] = 0;
            unsigned int v49 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v50);
            unsigned int v46 = *(char **)v84;
          }
          unsigned int v45 = sub_188C244(v49, v46, (uint64_t)a3);
          *(void *)int v84 = v45;
          if (!v45) {
            goto LABEL_125;
          }
          if (*(void *)a3 <= (unint64_t)v45 || *v45 != 66) {
            goto LABEL_112;
          }
        }
      case 9u:
        if (v12 != 74) {
          goto LABEL_104;
        }
        unsigned int v52 = v11 - 1;
        while (1)
        {
          unsigned int v53 = (unsigned __int8 *)(v52 + 1);
          *(void *)int v84 = v52 + 1;
          unsigned int v54 = *(_DWORD **)(a1 + 112);
          if (v54 && (uint64_t v55 = *(int *)(a1 + 104), (int)v55 < *v54))
          {
            *(_DWORD *)(a1 + 104) = v55 + 1;
            uint64_t v56 = *(void *)&v54[2 * v55 + 2];
          }
          else
          {
            unsigned int v57 = sub_11871AC(*(void *)(a1 + 96));
            uint64_t v56 = sub_188CDC8(a1 + 96, (uint64_t)v57);
            unsigned int v53 = *(unsigned __int8 **)v84;
          }
          unsigned int v52 = (char *)sub_1185B08(a3, v56, v53);
          *(void *)int v84 = v52;
          if (!v52) {
            goto LABEL_125;
          }
          if (*(void *)a3 <= (unint64_t)v52 || *v52 != 74) {
            goto LABEL_112;
          }
        }
      case 0xAu:
        if (v12 != 82) {
          goto LABEL_104;
        }
        uint64_t v58 = v11 - 1;
        while (1)
        {
          int v59 = (char *)(v58 + 1);
          *(void *)int v84 = v58 + 1;
          unint64_t v60 = *(_DWORD **)(a1 + 136);
          if (v60 && (uint64_t v61 = *(int *)(a1 + 128), (int)v61 < *v60))
          {
            *(_DWORD *)(a1 + 128) = v61 + 1;
            uint64_t v62 = *(std::string **)&v60[2 * v61 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v64 = v63;
            v64[1] = sub_3A6EDC;
            void *v63 = 0;
            v63[1] = 0;
            v63[2] = 0;
            uint64_t v62 = (std::string *)sub_188CDC8(a1 + 120, (uint64_t)v63);
            int v59 = *(char **)v84;
          }
          uint64_t v58 = sub_188C244(v62, v59, (uint64_t)a3);
          *(void *)int v84 = v58;
          if (!v58) {
            goto LABEL_125;
          }
          if (*(void *)a3 <= (unint64_t)v58 || *v58 != 82) {
            goto LABEL_112;
          }
        }
      case 0xBu:
        if (v12 != 90) {
          goto LABEL_104;
        }
        unsigned int v65 = v11 - 1;
        while (1)
        {
          int v66 = (char *)(v65 + 1);
          *(void *)int v84 = v65 + 1;
          unsigned int v67 = *(_DWORD **)(a1 + 160);
          if (v67 && (uint64_t v68 = *(int *)(a1 + 152), (int)v68 < *v67))
          {
            *(_DWORD *)(a1 + 152) = v68 + 1;
            unsigned int v69 = *(std::string **)&v67[2 * v68 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *unsigned int v71 = v70;
            v71[1] = sub_3A6EDC;
            void *v70 = 0;
            v70[1] = 0;
            v70[2] = 0;
            unsigned int v69 = (std::string *)sub_188CDC8(a1 + 144, (uint64_t)v70);
            int v66 = *(char **)v84;
          }
          unsigned int v65 = sub_188C244(v69, v66, (uint64_t)a3);
          *(void *)int v84 = v65;
          if (!v65) {
            goto LABEL_125;
          }
          if (*(void *)a3 <= (unint64_t)v65 || *v65 != 90) {
            goto LABEL_112;
          }
        }
      default:
LABEL_104:
        if (v12) {
          BOOL v72 = (v12 & 7) == 4;
        }
        else {
          BOOL v72 = 1;
        }
        if (!v72)
        {
          if (*v82)
          {
            unsigned int v73 = (std::string *)((*v82 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v73 = (std::string *)sub_188DBD8(v82);
            uint64_t v11 = *(char **)v84;
          }
          unsigned int v25 = sub_1885AC0(v12, v73, v11, a3);
LABEL_111:
          *(void *)int v84 = v25;
          if (!v25) {
            goto LABEL_125;
          }
LABEL_112:
          if (sub_11947B8((uint64_t)a3, (char **)v84, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
        if (v11) {
          a3[10].i32[0] = v12 - 1;
        }
        else {
LABEL_125:
        }
          *(void *)int v84 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 16) |= v83;
        return *(void *)v84;
    }
  }
}

uint64_t sub_1185B08(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1186A88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1185B98(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      char v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          char v9 = (void *)*v9;
        }
        uint64_t v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if (v12) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v12 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 176);
    *__dst = 24;
    __dst[1] = v13;
    if (v13 > 0x7F)
    {
      __dst[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      __dst[2] = v13 >> 7;
      __dst += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *__dst++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v12 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 180);
    *__dst = 32;
    __dst[1] = v16;
    if (v16 > 0x7F)
    {
      __dst[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      __dst[2] = v16 >> 7;
      __dst += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *__dst++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v12 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 184);
    *__dst = 40;
    __dst[1] = v19;
    if (v19 > 0x7F)
    {
      __dst[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      __dst[2] = v19 >> 7;
      __dst += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *__dst++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v12 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 188);
    *__dst = 48;
    __dst[1] = v22;
    if (v22 > 0x7F)
    {
      __dst[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      __dst[2] = v22 >> 7;
      __dst += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *__dst++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v25 = *(unsigned int *)(a1 + 56);
  if ((int)v25 >= 1)
  {
    uint64_t v26 = 0;
    uint64_t v27 = 8 * v25;
    do
    {
      int v28 = *(void **)(*(void *)(a1 + 64) + v26 + 8);
      if (*((char *)v28 + 23) < 0)
      {
        int64_t v29 = v28[1];
        if (v29 > 127) {
          goto LABEL_54;
        }
      }
      else
      {
        int64_t v29 = *((unsigned __int8 *)v28 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v29)
      {
        *__dst = 58;
        __dst[1] = v29;
        if (*((char *)v28 + 23) < 0) {
          int v28 = (void *)*v28;
        }
        int v30 = __dst + 2;
        memcpy(v30, v28, v29);
        __dst = &v30[v29];
        goto LABEL_52;
      }
LABEL_54:
      __dst = (char *)sub_188A868(a3, 7, (uint64_t)v28, __dst);
LABEL_52:
      v26 += 8;
    }
    while (v27 != v26);
  }
  uint64_t v31 = *(unsigned int *)(a1 + 80);
  if ((int)v31 >= 1)
  {
    uint64_t v32 = 0;
    uint64_t v33 = 8 * v31;
    do
    {
      int v34 = *(void **)(*(void *)(a1 + 88) + v32 + 8);
      if (*((char *)v34 + 23) < 0)
      {
        int64_t v35 = v34[1];
        if (v35 > 127) {
          goto LABEL_66;
        }
      }
      else
      {
        int64_t v35 = *((unsigned __int8 *)v34 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v35)
      {
        *__dst = 66;
        __dst[1] = v35;
        if (*((char *)v34 + 23) < 0) {
          int v34 = (void *)*v34;
        }
        int v36 = __dst + 2;
        memcpy(v36, v34, v35);
        __dst = &v36[v35];
        goto LABEL_64;
      }
LABEL_66:
      __dst = (char *)sub_188A868(a3, 8, (uint64_t)v34, __dst);
LABEL_64:
      v32 += 8;
    }
    while (v33 != v32);
  }
  int v37 = *(_DWORD *)(a1 + 104);
  if (v37)
  {
    for (int i = 0; i != v37; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v39 = *(void *)(*(void *)(a1 + 112) + 8 * i + 8);
      *__dst = 74;
      unsigned int v40 = *(_DWORD *)(v39 + 20);
      __dst[1] = v40;
      if (v40 > 0x7F) {
        uint64_t v41 = sub_188A9CC(v40, __dst + 1);
      }
      else {
        uint64_t v41 = __dst + 2;
      }
      __dst = sub_1186CB4(v39, v41, a3);
    }
  }
  uint64_t v42 = *(unsigned int *)(a1 + 128);
  if ((int)v42 >= 1)
  {
    uint64_t v43 = 0;
    uint64_t v44 = 8 * v42;
    do
    {
      unsigned int v45 = *(void **)(*(void *)(a1 + 136) + v43 + 8);
      if (*((char *)v45 + 23) < 0)
      {
        int64_t v46 = v45[1];
        if (v46 > 127) {
          goto LABEL_86;
        }
      }
      else
      {
        int64_t v46 = *((unsigned __int8 *)v45 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v46)
      {
        *__dst = 82;
        __dst[1] = v46;
        if (*((char *)v45 + 23) < 0) {
          unsigned int v45 = (void *)*v45;
        }
        unsigned int v47 = __dst + 2;
        memcpy(v47, v45, v46);
        __dst = &v47[v46];
        goto LABEL_84;
      }
LABEL_86:
      __dst = (char *)sub_188A868(a3, 10, (uint64_t)v45, __dst);
LABEL_84:
      v43 += 8;
    }
    while (v44 != v43);
  }
  uint64_t v48 = *(unsigned int *)(a1 + 152);
  if ((int)v48 >= 1)
  {
    uint64_t v49 = 0;
    uint64_t v50 = 8 * v48;
    do
    {
      unsigned int v51 = *(void **)(*(void *)(a1 + 160) + v49 + 8);
      if (*((char *)v51 + 23) < 0)
      {
        int64_t v52 = v51[1];
        if (v52 > 127) {
          goto LABEL_98;
        }
      }
      else
      {
        int64_t v52 = *((unsigned __int8 *)v51 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v52)
      {
        *__dst = 90;
        __dst[1] = v52;
        if (*((char *)v51 + 23) < 0) {
          unsigned int v51 = (void *)*v51;
        }
        unsigned int v53 = __dst + 2;
        memcpy(v53, v51, v52);
        __dst = &v53[v52];
        goto LABEL_96;
      }
LABEL_98:
      __dst = (char *)sub_188A868(a3, 11, (uint64_t)v51, __dst);
LABEL_96:
      v49 += 8;
    }
    while (v50 != v49);
  }
  uint64_t v54 = *(void *)(a1 + 8);
  if ((v54 & 1) == 0) {
    return __dst;
  }
  unint64_t v56 = v54 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v56 + 31) < 0)
  {
    unsigned int v57 = *(void **)(v56 + 8);
    uint64_t v58 = *(void *)(v56 + 16);
  }
  else
  {
    unsigned int v57 = (void *)(v56 + 8);
    LODWORD(v58) = *(unsigned __int8 *)(v56 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v58)
  {
    uint64_t v59 = (int)v58;
    memcpy(__dst, v57, (int)v58);
    __dst += v59;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v57, v58, __dst);
}

uint64_t sub_1186238(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  if ((int)v8 >= 1)
  {
    int64_t v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(unsigned int *)(a1 + 80);
  uint64_t v15 = v9 + v14;
  if ((int)v14 >= 1)
  {
    unsigned int v16 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
      uint64_t v19 = *(void *)(v17 + 8);
      if ((v18 & 0x80u) == 0) {
        uint64_t v19 = v18;
      }
      v15 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      --v14;
    }
    while (v14);
  }
  uint64_t v20 = *(int *)(a1 + 104);
  uint64_t v21 = v15 + v20;
  uint64_t v22 = *(void *)(a1 + 112);
  if (v22) {
    unsigned int v23 = (uint64_t *)(v22 + 8);
  }
  else {
    unsigned int v23 = 0;
  }
  if (v20)
  {
    uint64_t v24 = 8 * v20;
    do
    {
      uint64_t v25 = *v23++;
      uint64_t v26 = sub_1186E20(v25);
      v21 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
      v24 -= 8;
    }
    while (v24);
  }
  uint64_t v27 = *(unsigned int *)(a1 + 128);
  uint64_t v28 = v21 + v27;
  if ((int)v27 >= 1)
  {
    int64_t v29 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v30 = *v29++;
      uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
      uint64_t v32 = *(void *)(v30 + 8);
      if ((v31 & 0x80u) == 0) {
        uint64_t v32 = v31;
      }
      v28 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6);
      --v27;
    }
    while (v27);
  }
  uint64_t v33 = *(unsigned int *)(a1 + 152);
  uint64_t result = v28 + v33;
  if ((int)v33 >= 1)
  {
    int64_t v35 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v36 = *v35++;
      uint64_t v37 = *(unsigned __int8 *)(v36 + 23);
      uint64_t v38 = *(void *)(v36 + 8);
      if ((v37 & 0x80u) == 0) {
        uint64_t v38 = v37;
      }
      result += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6);
      --v33;
    }
    while (v33);
  }
  int v39 = *(_DWORD *)(a1 + 16);
  if ((v39 & 0x1F) == 0) {
    goto LABEL_41;
  }
  if (v39)
  {
    unint64_t v41 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v42 = *(unsigned __int8 *)(v41 + 23);
    uint64_t v43 = *(void *)(v41 + 8);
    if ((v42 & 0x80u) == 0) {
      uint64_t v43 = v42;
    }
    result += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v39 & 2) == 0)
    {
LABEL_37:
      if ((v39 & 4) == 0) {
        goto LABEL_38;
      }
LABEL_47:
      result += ((9 * (__clz(*(_DWORD *)(a1 + 180) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v39 & 8) == 0)
      {
LABEL_39:
        if ((v39 & 0x10) == 0) {
          goto LABEL_41;
        }
        goto LABEL_40;
      }
      goto LABEL_48;
    }
  }
  else if ((v39 & 2) == 0)
  {
    goto LABEL_37;
  }
  result += ((9 * (__clz(*(_DWORD *)(a1 + 176) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v39 & 4) != 0) {
    goto LABEL_47;
  }
LABEL_38:
  if ((v39 & 8) == 0) {
    goto LABEL_39;
  }
LABEL_48:
  result += ((9 * (__clz(*(_DWORD *)(a1 + 184) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v39 & 0x10) != 0) {
LABEL_40:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 188) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_41:
  uint64_t v40 = *(void *)(a1 + 8);
  if (v40)
  {
    unint64_t v44 = v40 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v44 + 31) < 0) {
      uint64_t v45 = *(void *)(v44 + 16);
    }
    else {
      uint64_t v45 = *(unsigned __int8 *)(v44 + 31);
    }
    result += v45;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_11865A4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    int64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 88) + 8);
    unsigned int v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[3], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2]- LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4((uint64_t)&v3[4], *(_DWORD *)(a2 + 104));
    uint64_t result = sub_1195000(v3 + 4, v21, v20, v19, *(_DWORD *)v3[4].__r_.__value_.__r.__words[2] - LODWORD(v3[4].__r_.__value_.__r.__words[1]));
    int v22 = LODWORD(v3[4].__r_.__value_.__r.__words[1]) + v19;
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = v22;
    unsigned int v23 = (int *)v3[4].__r_.__value_.__r.__words[2];
    if (*v23 < v22) {
      *unsigned int v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    uint64_t v25 = (const std::string **)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4((uint64_t)&v3[5], *(_DWORD *)(a2 + 128));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[5], v26, v25, v24, *(_DWORD *)v3[5].__r_.__value_.__r.__words[2]- LODWORD(v3[5].__r_.__value_.__r.__words[1]));
    int v27 = LODWORD(v3[5].__r_.__value_.__r.__words[1]) + v24;
    LODWORD(v3[5].__r_.__value_.__r.__words[1]) = v27;
    uint64_t v28 = (int *)v3[5].__r_.__value_.__r.__words[2];
    if (*v28 < v27) {
      *uint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 152);
  if (v29)
  {
    uint64_t v30 = (const std::string **)(*(void *)(a2 + 160) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4((uint64_t)&v3[6], *(_DWORD *)(a2 + 152));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[6], v31, v30, v29, *(_DWORD *)v3[6].__r_.__value_.__r.__words[2]- LODWORD(v3[6].__r_.__value_.__r.__words[1]));
    int v32 = LODWORD(v3[6].__r_.__value_.__r.__words[1]) + v29;
    LODWORD(v3[6].__r_.__value_.__r.__words[1]) = v32;
    uint64_t v33 = (int *)v3[6].__r_.__value_.__r.__words[2];
    if (*v33 < v32) {
      *uint64_t v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 16);
  if ((v34 & 0x1F) != 0)
  {
    if (v34)
    {
      uint64_t v36 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v38 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v38 = (uint64_t *)*v38;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[7], v36, v38);
      if ((v34 & 2) == 0)
      {
LABEL_22:
        if ((v34 & 4) == 0) {
          goto LABEL_23;
        }
        goto LABEL_35;
      }
    }
    else if ((v34 & 2) == 0)
    {
      goto LABEL_22;
    }
    LODWORD(v3[7].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 176);
    if ((v34 & 4) == 0)
    {
LABEL_23:
      if ((v34 & 8) == 0) {
        goto LABEL_24;
      }
      goto LABEL_36;
    }
LABEL_35:
    HIDWORD(v3[7].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 180);
    if ((v34 & 8) == 0)
    {
LABEL_24:
      if ((v34 & 0x10) == 0)
      {
LABEL_26:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v34;
        goto LABEL_27;
      }
LABEL_25:
      HIDWORD(v3[7].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 188);
      goto LABEL_26;
    }
LABEL_36:
    LODWORD(v3[7].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 184);
    if ((v34 & 0x10) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_27:
  uint64_t v35 = *(void *)(a2 + 8);
  if (v35)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v35 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11868F8()
{
  return 1;
}

void *sub_1186900@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.GeoSearchRequestLogRecord.GeoRequestLogEntry");
}

uint64_t sub_1186910(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11869C8(uint64_t a1)
{
  sub_1186910(a1);

  operator delete();
}

uint64_t sub_1186A00(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xC) != 0)
  {
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1186A88(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v23 + 1);
    unsigned int v9 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v23 + 2);
      }
    }
    *(void *)unsigned int v23 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 24);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 32);
LABEL_17:
        unsigned int v16 = (std::string *)sub_1880F84(v14, v13);
        int v17 = (void *)sub_188C244(v16, *(char **)v23, (uint64_t)a3);
        goto LABEL_30;
      case 3u:
        if (v9 != 25) {
          goto LABEL_23;
        }
        uint64_t v19 = *(void *)v8;
        uint64_t v18 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v19;
        goto LABEL_22;
      case 4u:
        if (v9 != 33) {
          goto LABEL_23;
        }
        uint64_t v20 = *(void *)v8;
        uint64_t v18 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v20;
LABEL_22:
        *(void *)unsigned int v23 = v18;
        goto LABEL_31;
      default:
LABEL_23:
        if (v9) {
          BOOL v21 = (v9 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v7)
          {
            int v22 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v23;
          }
          int v17 = sub_1885AC0(v9, v22, v8, a3);
LABEL_30:
          *(void *)unsigned int v23 = v17;
          if (!v17) {
            goto LABEL_36;
          }
LABEL_31:
          if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_36:
        }
          *(void *)unsigned int v23 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v23;
    }
  }
}

char *sub_1186CB4(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }
LABEL_8:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 40);
  *int v4 = 25;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 8) != 0)
  {
LABEL_11:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 48);
    *int v4 = 33;
    *(void *)(v4 + 1) = v8;
    v4 += 9;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1186E20(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0) {
    v2 += 9;
  }
  if ((v1 & 8) != 0) {
    uint64_t v3 = v2 + 9;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_17:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1186F14(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_18:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_118701C()
{
  return 1;
}

void *sub_1187024@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.GeoSearchRequestLogRecord.OverallMatchPair");
}

uint64_t sub_1187034(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_2497260;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_11870D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24972E0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = a1;
  result[10] = 0;
  result[11] = 0;
  result[12] = a1;
  result[13] = 0;
  result[14] = 0;
  result[15] = a1;
  result[16] = 0;
  result[17] = 0;
  result[18] = a1;
  result[19] = 0;
  result[20] = 0;
  result[22] = 0;
  result[23] = 0;
  result[21] = &qword_2550250;
  return result;
}

void *sub_11871AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_2497360;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_1187234(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_252BE38 && *(void *)(a1 + 120))
  {
    sub_1258388();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DE8((void *)(a1 + 96));
  sub_1889DE8((void *)(a1 + 72));
  sub_1889DE8((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_118730C(uint64_t a1)
{
  sub_1187234(a1);

  operator delete();
}

uint64_t sub_1187344(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  sub_188CC00(a1 + 48);
  sub_188CC00(a1 + 72);
  uint64_t result = sub_188CC00(a1 + 96);
  int v3 = *(_DWORD *)(a1 + 16);
  if (v3) {
    uint64_t result = sub_12583C4(*(void *)(a1 + 120));
  }
  if ((v3 & 0x7E) != 0)
  {
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 144) = 0u;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_11873D0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v73 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v73, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (uint64_t **)(a1 + 96);
  uint64_t v8 = (uint64_t **)(a1 + 72);
  uint64_t v9 = (uint64_t **)(a1 + 48);
  uint64_t v10 = (uint64_t **)(a1 + 24);
  std::string::size_type v11 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v12 = (unsigned __int8 *)(*(void *)v73 + 1);
    unsigned int v13 = **(unsigned char **)v73;
    if ((char)**(unsigned char **)v73 < 0)
    {
      unsigned int v14 = v13 + (*v12 << 7);
      unsigned int v13 = v14 - 128;
      if ((char)*v12 < 0)
      {
        unint64_t v12 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v73, v14 - 128);
        unsigned int v13 = v15;
      }
      else
      {
        unint64_t v12 = (unsigned __int8 *)(*(void *)v73 + 2);
      }
    }
    *(void *)unsigned int v73 = v12;
    switch(v13 >> 3)
    {
      case 1u:
        if (v13 != 10) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 120);
        if (!v16)
        {
          int v17 = (void *)(*v11 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v11) {
            int v17 = (void *)*v17;
          }
          sub_125C19C((uint64_t)v17);
          uint64_t v16 = v18;
          *(void *)(a1 + 120) = v18;
          unint64_t v12 = *(unsigned __int8 **)v73;
        }
        uint64_t v19 = sub_1187AA8(a3, v16, v12);
        goto LABEL_95;
      case 2u:
        if (v13 != 16) {
          goto LABEL_88;
        }
        v5 |= 2u;
        BOOL v21 = (char *)(v12 + 1);
        LODWORD(v20) = *v12;
        if ((v20 & 0x80) == 0) {
          goto LABEL_19;
        }
        int v22 = *v21;
        uint64_t v20 = v20 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v65 = sub_188C138((uint64_t)v12, v20);
          *(void *)unsigned int v73 = v65;
          *(_DWORD *)(a1 + 128) = v66;
          if (!v65) {
            goto LABEL_109;
          }
        }
        else
        {
          BOOL v21 = (char *)(v12 + 2);
LABEL_19:
          *(void *)unsigned int v73 = v21;
          *(_DWORD *)(a1 + 128) = v20;
        }
        goto LABEL_96;
      case 3u:
        if (v13 != 24) {
          goto LABEL_88;
        }
        v5 |= 4u;
        int v24 = (char *)(v12 + 1);
        LODWORD(v23) = *v12;
        if ((v23 & 0x80) == 0) {
          goto LABEL_24;
        }
        int v25 = *v24;
        uint64_t v23 = v23 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v67 = sub_188C138((uint64_t)v12, v23);
          *(void *)unsigned int v73 = v67;
          *(_DWORD *)(a1 + 132) = v68;
          if (!v67) {
            goto LABEL_109;
          }
        }
        else
        {
          int v24 = (char *)(v12 + 2);
LABEL_24:
          *(void *)unsigned int v73 = v24;
          *(_DWORD *)(a1 + 132) = v23;
        }
        goto LABEL_96;
      case 4u:
        if (v13 != 32) {
          goto LABEL_88;
        }
        v5 |= 8u;
        int v27 = (char *)(v12 + 1);
        LODWORD(v26) = *v12;
        if ((v26 & 0x80) == 0) {
          goto LABEL_29;
        }
        int v28 = *v27;
        uint64_t v26 = v26 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v69 = sub_188C138((uint64_t)v12, v26);
          *(void *)unsigned int v73 = v69;
          *(_DWORD *)(a1 + 136) = v70;
          if (!v69) {
            goto LABEL_109;
          }
        }
        else
        {
          int v27 = (char *)(v12 + 2);
LABEL_29:
          *(void *)unsigned int v73 = v27;
          *(_DWORD *)(a1 + 136) = v26;
        }
        goto LABEL_96;
      case 5u:
        if (v13 != 40) {
          goto LABEL_88;
        }
        v5 |= 0x10u;
        uint64_t v30 = (char *)(v12 + 1);
        LODWORD(v29) = *v12;
        if ((v29 & 0x80) == 0) {
          goto LABEL_34;
        }
        int v31 = *v30;
        uint64_t v29 = v29 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v71 = sub_188C138((uint64_t)v12, v29);
          *(void *)unsigned int v73 = v71;
          *(_DWORD *)(a1 + 140) = v72;
          if (!v71) {
            goto LABEL_109;
          }
        }
        else
        {
          uint64_t v30 = (char *)(v12 + 2);
LABEL_34:
          *(void *)unsigned int v73 = v30;
          *(_DWORD *)(a1 + 140) = v29;
        }
        goto LABEL_96;
      case 6u:
        if (v13 != 50) {
          goto LABEL_88;
        }
        int v32 = (const std::string::value_type *)(v12 - 1);
        while (1)
        {
          uint64_t v33 = (char *)(v32 + 1);
          *(void *)unsigned int v73 = v32 + 1;
          int v34 = *(_DWORD **)(a1 + 40);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 32), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 32) = v35 + 1;
            uint64_t v36 = *(std::string **)&v34[2 * v35 + 2];
          }
          else
          {
            if (!*v10) {
              operator new();
            }
            void *v38 = v37;
            v38[1] = sub_3A6EDC;
            *uint64_t v37 = 0;
            v37[1] = 0;
            v37[2] = 0;
            uint64_t v36 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v37);
            uint64_t v33 = *(char **)v73;
          }
          int v32 = sub_188C244(v36, v33, (uint64_t)a3);
          *(void *)unsigned int v73 = v32;
          if (!v32) {
            goto LABEL_109;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 50) {
            goto LABEL_96;
          }
        }
      case 7u:
        if (v13 != 58) {
          goto LABEL_88;
        }
        int v39 = (const std::string::value_type *)(v12 - 1);
        while (1)
        {
          uint64_t v40 = (char *)(v39 + 1);
          *(void *)unsigned int v73 = v39 + 1;
          unint64_t v41 = *(_DWORD **)(a1 + 64);
          if (v41 && (uint64_t v42 = *(int *)(a1 + 56), (int)v42 < *v41))
          {
            *(_DWORD *)(a1 + 56) = v42 + 1;
            uint64_t v43 = *(std::string **)&v41[2 * v42 + 2];
          }
          else
          {
            if (!*v9) {
              operator new();
            }
            void *v45 = v44;
            v45[1] = sub_3A6EDC;
            *unint64_t v44 = 0;
            v44[1] = 0;
            v44[2] = 0;
            uint64_t v43 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v44);
            uint64_t v40 = *(char **)v73;
          }
          int v39 = sub_188C244(v43, v40, (uint64_t)a3);
          *(void *)unsigned int v73 = v39;
          if (!v39) {
            goto LABEL_109;
          }
          if (*(void *)a3 <= (unint64_t)v39 || *v39 != 58) {
            goto LABEL_96;
          }
        }
      case 8u:
        if (v13 != 66) {
          goto LABEL_88;
        }
        int64_t v46 = (const std::string::value_type *)(v12 - 1);
        while (1)
        {
          unsigned int v47 = (char *)(v46 + 1);
          *(void *)unsigned int v73 = v46 + 1;
          uint64_t v48 = *(_DWORD **)(a1 + 88);
          if (v48 && (uint64_t v49 = *(int *)(a1 + 80), (int)v49 < *v48))
          {
            *(_DWORD *)(a1 + 80) = v49 + 1;
            uint64_t v50 = *(std::string **)&v48[2 * v49 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v52 = v51;
            v52[1] = sub_3A6EDC;
            void *v51 = 0;
            v51[1] = 0;
            v51[2] = 0;
            uint64_t v50 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v51);
            unsigned int v47 = *(char **)v73;
          }
          int64_t v46 = sub_188C244(v50, v47, (uint64_t)a3);
          *(void *)unsigned int v73 = v46;
          if (!v46) {
            goto LABEL_109;
          }
          if (*(void *)a3 <= (unint64_t)v46 || *v46 != 66) {
            goto LABEL_96;
          }
        }
      case 9u:
        if (v13 != 74) {
          goto LABEL_88;
        }
        unsigned int v53 = (const std::string::value_type *)(v12 - 1);
        while (1)
        {
          uint64_t v54 = (char *)(v53 + 1);
          *(void *)unsigned int v73 = v53 + 1;
          uint64_t v55 = *(_DWORD **)(a1 + 112);
          if (v55 && (uint64_t v56 = *(int *)(a1 + 104), (int)v56 < *v55))
          {
            *(_DWORD *)(a1 + 104) = v56 + 1;
            unsigned int v57 = *(std::string **)&v55[2 * v56 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v59 = v58;
            v59[1] = sub_3A6EDC;
            *uint64_t v58 = 0;
            v58[1] = 0;
            v58[2] = 0;
            unsigned int v57 = (std::string *)sub_188CDC8(a1 + 96, (uint64_t)v58);
            uint64_t v54 = *(char **)v73;
          }
          unsigned int v53 = sub_188C244(v57, v54, (uint64_t)a3);
          *(void *)unsigned int v73 = v53;
          if (!v53) {
            goto LABEL_109;
          }
          if (*(void *)a3 <= (unint64_t)v53 || *v53 != 74) {
            goto LABEL_96;
          }
        }
      case 0xAu:
        if (v13 != 81) {
          goto LABEL_88;
        }
        uint64_t v61 = *(void *)v12;
        unint64_t v60 = v12 + 8;
        v5 |= 0x20u;
        *(void *)(a1 + 144) = v61;
        goto LABEL_87;
      case 0xBu:
        if (v13 != 89) {
          goto LABEL_88;
        }
        uint64_t v62 = *(void *)v12;
        unint64_t v60 = v12 + 8;
        v5 |= 0x40u;
        *(void *)(a1 + 152) = v62;
LABEL_87:
        *(void *)unsigned int v73 = v60;
        goto LABEL_96;
      default:
LABEL_88:
        if (v13) {
          BOOL v63 = (v13 & 7) == 4;
        }
        else {
          BOOL v63 = 1;
        }
        if (!v63)
        {
          if (*v11)
          {
            unsigned int v64 = (std::string *)((*v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v64 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v12 = *(unsigned __int8 **)v73;
          }
          uint64_t v19 = (uint64_t)sub_1885AC0(v13, v64, (char *)v12, a3);
LABEL_95:
          *(void *)unsigned int v73 = v19;
          if (!v19) {
            goto LABEL_109;
          }
LABEL_96:
          if (sub_11947B8((uint64_t)a3, (char **)v73, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v12) {
          a3[10].i32[0] = v13 - 1;
        }
        else {
LABEL_109:
        }
          *(void *)unsigned int v73 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v73;
    }
  }
}

uint64_t sub_1187AA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12585A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1187B38(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 120);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      uint64_t v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      uint64_t v9 = v4 + 2;
    }
    uint64_t v4 = sub_1259540(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 128);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 132);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 136);
    *uint64_t v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 140);
    *uint64_t v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v22 = *(unsigned int *)(a1 + 32);
  if ((int)v22 >= 1)
  {
    uint64_t v23 = 0;
    uint64_t v24 = 8 * v22;
    do
    {
      int v25 = *(void **)(*(void *)(a1 + 40) + v23 + 8);
      if (*((char *)v25 + 23) < 0)
      {
        int64_t v26 = v25[1];
        if (v26 > 127) {
          goto LABEL_47;
        }
      }
      else
      {
        int64_t v26 = *((unsigned __int8 *)v25 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v26)
      {
        *uint64_t v4 = 50;
        v4[1] = v26;
        if (*((char *)v25 + 23) < 0) {
          int v25 = (void *)*v25;
        }
        int v27 = v4 + 2;
        memcpy(v27, v25, v26);
        uint64_t v4 = &v27[v26];
        goto LABEL_45;
      }
LABEL_47:
      uint64_t v4 = (char *)sub_188A868(a3, 6, (uint64_t)v25, v4);
LABEL_45:
      v23 += 8;
    }
    while (v24 != v23);
  }
  uint64_t v28 = *(unsigned int *)(a1 + 56);
  if ((int)v28 >= 1)
  {
    uint64_t v29 = 0;
    uint64_t v30 = 8 * v28;
    do
    {
      int v31 = *(void **)(*(void *)(a1 + 64) + v29 + 8);
      if (*((char *)v31 + 23) < 0)
      {
        int64_t v32 = v31[1];
        if (v32 > 127) {
          goto LABEL_59;
        }
      }
      else
      {
        int64_t v32 = *((unsigned __int8 *)v31 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v32)
      {
        *uint64_t v4 = 58;
        v4[1] = v32;
        if (*((char *)v31 + 23) < 0) {
          int v31 = (void *)*v31;
        }
        uint64_t v33 = v4 + 2;
        memcpy(v33, v31, v32);
        uint64_t v4 = &v33[v32];
        goto LABEL_57;
      }
LABEL_59:
      uint64_t v4 = (char *)sub_188A868(a3, 7, (uint64_t)v31, v4);
LABEL_57:
      v29 += 8;
    }
    while (v30 != v29);
  }
  uint64_t v34 = *(unsigned int *)(a1 + 80);
  if ((int)v34 >= 1)
  {
    uint64_t v35 = 0;
    uint64_t v36 = 8 * v34;
    do
    {
      uint64_t v37 = *(void **)(*(void *)(a1 + 88) + v35 + 8);
      if (*((char *)v37 + 23) < 0)
      {
        int64_t v38 = v37[1];
        if (v38 > 127) {
          goto LABEL_71;
        }
      }
      else
      {
        int64_t v38 = *((unsigned __int8 *)v37 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v38)
      {
        *uint64_t v4 = 66;
        v4[1] = v38;
        if (*((char *)v37 + 23) < 0) {
          uint64_t v37 = (void *)*v37;
        }
        int v39 = v4 + 2;
        memcpy(v39, v37, v38);
        uint64_t v4 = &v39[v38];
        goto LABEL_69;
      }
LABEL_71:
      uint64_t v4 = (char *)sub_188A868(a3, 8, (uint64_t)v37, v4);
LABEL_69:
      v35 += 8;
    }
    while (v36 != v35);
  }
  uint64_t v40 = *(unsigned int *)(a1 + 104);
  if ((int)v40 >= 1)
  {
    uint64_t v41 = 0;
    uint64_t v42 = 8 * v40;
    do
    {
      uint64_t v43 = *(void **)(*(void *)(a1 + 112) + v41 + 8);
      if (*((char *)v43 + 23) < 0)
      {
        int64_t v44 = v43[1];
        if (v44 > 127) {
          goto LABEL_83;
        }
      }
      else
      {
        int64_t v44 = *((unsigned __int8 *)v43 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v44)
      {
        *uint64_t v4 = 74;
        v4[1] = v44;
        if (*((char *)v43 + 23) < 0) {
          uint64_t v43 = (void *)*v43;
        }
        uint64_t v45 = v4 + 2;
        memcpy(v45, v43, v44);
        uint64_t v4 = &v45[v44];
        goto LABEL_81;
      }
LABEL_83:
      uint64_t v4 = (char *)sub_188A868(a3, 9, (uint64_t)v43, v4);
LABEL_81:
      v41 += 8;
    }
    while (v42 != v41);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v46 = *(void *)(a1 + 144);
    *uint64_t v4 = 81;
    *(void *)(v4 + 1) = v46;
    v4 += 9;
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v47 = *(void *)(a1 + 152);
    *uint64_t v4 = 89;
    *(void *)(v4 + 1) = v47;
    v4 += 9;
  }
  uint64_t v48 = *(void *)(a1 + 8);
  if ((v48 & 1) == 0) {
    return v4;
  }
  unint64_t v50 = v48 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v50 + 31) < 0)
  {
    unsigned int v51 = *(void **)(v50 + 8);
    uint64_t v52 = *(void *)(v50 + 16);
  }
  else
  {
    unsigned int v51 = (void *)(v50 + 8);
    LODWORD(v52) = *(unsigned __int8 *)(v50 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v52)
  {
    uint64_t v53 = (int)v52;
    memcpy(v4, v51, (int)v52);
    v4 += v53;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v51, v52, v4);
}

uint64_t sub_1188160(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = sub_1259EA0(*(void *)(a1 + 120));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    int v2 = *(_DWORD *)(a1 + 16);
    if ((v2 & 2) == 0) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_9;
    }
  }
  int v5 = *(_DWORD *)(a1 + 128);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_9:
  if ((v2 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 132);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
    if ((v2 & 8) == 0)
    {
LABEL_11:
      if ((v2 & 0x10) == 0) {
        return result;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_11;
  }
  int v9 = *(_DWORD *)(a1 + 136);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v10;
  if ((v2 & 0x10) != 0)
  {
LABEL_21:
    int v11 = *(_DWORD *)(a1 + 140);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v12;
  }
  return result;
}

uint64_t sub_118829C(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 0x1F) != 0)
  {
    uint64_t v16 = sub_1188160(a1);
  }
  else
  {
    uint64_t v2 = sub_1259EA0(*(void *)(a1 + 120));
    uint64_t v3 = (9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6;
    uint64_t v4 = 10;
    int v5 = *(_DWORD *)(a1 + 128);
    int v6 = *(_DWORD *)(a1 + 132);
    uint64_t v7 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    if (v5 >= 0) {
      uint64_t v4 = v7;
    }
    uint64_t v8 = 10;
    uint64_t v9 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    if (v6 >= 0) {
      uint64_t v8 = v9;
    }
    uint64_t v10 = 10;
    int v11 = *(_DWORD *)(a1 + 136);
    int v12 = *(_DWORD *)(a1 + 140);
    uint64_t v13 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
    if (v11 >= 0) {
      uint64_t v10 = v13;
    }
    uint64_t v14 = 10;
    uint64_t v15 = (9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6;
    if (v12 >= 0) {
      uint64_t v14 = v15;
    }
    uint64_t v16 = v2 + v3 + v4 + v8 + v10 + v14 + 5;
  }
  uint64_t v17 = *(unsigned int *)(a1 + 32);
  uint64_t v18 = v16 + v17;
  if ((int)v17 >= 1)
  {
    unint64_t v19 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
      uint64_t v22 = *(void *)(v20 + 8);
      if ((v21 & 0x80u) == 0) {
        uint64_t v22 = v21;
      }
      v18 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      --v17;
    }
    while (v17);
  }
  uint64_t v23 = *(unsigned int *)(a1 + 56);
  uint64_t v24 = v18 + v23;
  if ((int)v23 >= 1)
  {
    int v25 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v26 = *v25++;
      uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
      uint64_t v28 = *(void *)(v26 + 8);
      if ((v27 & 0x80u) == 0) {
        uint64_t v28 = v27;
      }
      v24 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      --v23;
    }
    while (v23);
  }
  uint64_t v29 = *(unsigned int *)(a1 + 80);
  uint64_t v30 = v24 + v29;
  if ((int)v29 >= 1)
  {
    int v31 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v32 = *v31++;
      uint64_t v33 = *(unsigned __int8 *)(v32 + 23);
      uint64_t v34 = *(void *)(v32 + 8);
      if ((v33 & 0x80u) == 0) {
        uint64_t v34 = v33;
      }
      v30 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6);
      --v29;
    }
    while (v29);
  }
  uint64_t v35 = *(unsigned int *)(a1 + 104);
  uint64_t v36 = v30 + v35;
  if ((int)v35 >= 1)
  {
    uint64_t v37 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v38 = *v37++;
      uint64_t v39 = *(unsigned __int8 *)(v38 + 23);
      uint64_t v40 = *(void *)(v38 + 8);
      if ((v39 & 0x80u) == 0) {
        uint64_t v40 = v39;
      }
      v36 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6);
      --v35;
    }
    while (v35);
  }
  int v41 = *(_DWORD *)(a1 + 16);
  uint64_t v42 = v36 + 9;
  if ((v41 & 0x20) == 0) {
    uint64_t v42 = v36;
  }
  if ((v41 & 0x40) != 0) {
    v42 += 9;
  }
  if ((v41 & 0x60) != 0) {
    uint64_t result = v42;
  }
  else {
    uint64_t result = v36;
  }
  uint64_t v44 = *(void *)(a1 + 8);
  if (v44)
  {
    unint64_t v45 = v44 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v45 + 31) < 0) {
      uint64_t v46 = *(void *)(v45 + 16);
    }
    else {
      uint64_t v46 = *(unsigned __int8 *)(v45 + 31);
    }
    result += v46;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_118855C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (const std::string **)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_188FB98(a1 + 96, v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 16);
  if ((v24 & 0x7F) != 0)
  {
    if (v24)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v26 = *(void *)(a1 + 120);
      if (!v26)
      {
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v28 = (void *)*v28;
        }
        sub_125C19C((uint64_t)v28);
        *(void *)(a1 + 120) = v26;
      }
      if (*(void *)(a2 + 120)) {
        uint64_t v29 = *(uint64_t (****)())(a2 + 120);
      }
      else {
        uint64_t v29 = &off_252F1D8;
      }
      sub_125A3D4(v26, (uint64_t)v29);
      if ((v24 & 2) == 0)
      {
LABEL_16:
        if ((v24 & 4) == 0) {
          goto LABEL_17;
        }
        goto LABEL_36;
      }
    }
    else if ((v24 & 2) == 0)
    {
      goto LABEL_16;
    }
    *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
    if ((v24 & 4) == 0)
    {
LABEL_17:
      if ((v24 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_37;
    }
LABEL_36:
    *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
    if ((v24 & 8) == 0)
    {
LABEL_18:
      if ((v24 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_38;
    }
LABEL_37:
    *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
    if ((v24 & 0x10) == 0)
    {
LABEL_19:
      if ((v24 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_39;
    }
LABEL_38:
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    if ((v24 & 0x20) == 0)
    {
LABEL_20:
      if ((v24 & 0x40) == 0)
      {
LABEL_22:
        *(_DWORD *)(a1 + 16) |= v24;
        goto LABEL_23;
      }
LABEL_21:
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      goto LABEL_22;
    }
LABEL_39:
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    if ((v24 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_23:
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1188820(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((~v1 & 0x1F) != 0) {
    return 0;
  }
  if ((v1 & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_125A86C(*(void *)(a1 + 120));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1188860@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.LocationResponseSummary");
}

uint64_t sub_1188870(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_252BED8 && *(void *)(a1 + 24))
  {
    sub_125AB44();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1188928(uint64_t a1)
{
  sub_1188870(a1);

  operator delete();
}

uint64_t sub_1188960(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_125AB80(*(void *)(result + 24));
  }
  if ((v2 & 0x7E) != 0)
  {
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11889CC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v41 + 1;
    unsigned int v9 = *v41;
    if (*v41 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v41, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v41 + 2;
      }
    }
    int v41 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          sub_125C1FC((uint64_t)v13);
          uint64_t v12 = v14;
          *(void *)(a1 + 24) = v14;
          uint64_t v8 = v41;
        }
        uint64_t v15 = sub_1188D2C(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_47;
      case 2u:
        if (v9 != 16) {
          goto LABEL_40;
        }
        v5 |= 2u;
        int v17 = v8 + 1;
        LODWORD(v16) = *v8;
        if ((v16 & 0x80) == 0) {
          goto LABEL_19;
        }
        int v18 = *v17;
        uint64_t v16 = v16 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v8, v16);
          int v41 = v33;
          *(_DWORD *)(a1 + 32) = v34;
          if (!v33) {
            goto LABEL_61;
          }
        }
        else
        {
          int v17 = v8 + 2;
LABEL_19:
          int v41 = v17;
          *(_DWORD *)(a1 + 32) = v16;
        }
        goto LABEL_48;
      case 3u:
        if (v9 != 24) {
          goto LABEL_40;
        }
        v5 |= 4u;
        uint64_t v20 = v8 + 1;
        LODWORD(v19) = *v8;
        if ((v19 & 0x80) == 0) {
          goto LABEL_24;
        }
        int v21 = *v20;
        uint64_t v19 = v19 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v35 = (char *)sub_188C138((uint64_t)v8, v19);
          int v41 = v35;
          *(_DWORD *)(a1 + 36) = v36;
          if (!v35) {
            goto LABEL_61;
          }
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_24:
          int v41 = v20;
          *(_DWORD *)(a1 + 36) = v19;
        }
        goto LABEL_48;
      case 4u:
        if (v9 != 32) {
          goto LABEL_40;
        }
        v5 |= 8u;
        uint64_t v23 = v8 + 1;
        LODWORD(v22) = *v8;
        if ((v22 & 0x80) == 0) {
          goto LABEL_29;
        }
        int v24 = *v23;
        uint64_t v22 = v22 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v37 = (char *)sub_188C138((uint64_t)v8, v22);
          int v41 = v37;
          *(_DWORD *)(a1 + 40) = v38;
          if (!v37) {
            goto LABEL_61;
          }
        }
        else
        {
          uint64_t v23 = v8 + 2;
LABEL_29:
          int v41 = v23;
          *(_DWORD *)(a1 + 40) = v22;
        }
        goto LABEL_48;
      case 5u:
        if (v9 != 40) {
          goto LABEL_40;
        }
        v5 |= 0x10u;
        uint64_t v26 = v8 + 1;
        LODWORD(v25) = *v8;
        if ((v25 & 0x80) == 0) {
          goto LABEL_34;
        }
        int v27 = *v26;
        uint64_t v25 = v25 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v39 = (char *)sub_188C138((uint64_t)v8, v25);
          int v41 = v39;
          *(_DWORD *)(a1 + 44) = v40;
          if (!v39) {
            goto LABEL_61;
          }
        }
        else
        {
          uint64_t v26 = v8 + 2;
LABEL_34:
          int v41 = v26;
          *(_DWORD *)(a1 + 44) = v25;
        }
        goto LABEL_48;
      case 6u:
        if (v9 != 49) {
          goto LABEL_40;
        }
        uint64_t v29 = *(void *)v8;
        uint64_t v28 = v8 + 8;
        v5 |= 0x20u;
        *(void *)(a1 + 48) = v29;
        goto LABEL_39;
      case 7u:
        if (v9 != 57) {
          goto LABEL_40;
        }
        uint64_t v30 = *(void *)v8;
        uint64_t v28 = v8 + 8;
        v5 |= 0x40u;
        *(void *)(a1 + 56) = v30;
LABEL_39:
        int v41 = v28;
        goto LABEL_48;
      default:
LABEL_40:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v41;
          }
          uint64_t v15 = (char *)sub_1885AC0(v9, v32, v8, a3);
LABEL_47:
          int v41 = v15;
          if (!v15) {
            goto LABEL_61;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_61:
        }
          int v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v41;
    }
  }
}

char *sub_1188D2C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_125AC04(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1188DBC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_125B324(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 36);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 40);
    *char v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 44);
    *char v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 48);
    *char v4 = 49;
    *(void *)(v4 + 1) = v22;
    v4 += 9;
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v23 = *(void *)(a1 + 56);
    *char v4 = 57;
    *(void *)(v4 + 1) = v23;
    v4 += 9;
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    int v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    int v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_1189138(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = sub_125B8E4(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    int v2 = *(_DWORD *)(a1 + 16);
    if ((v2 & 2) == 0) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_9;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_9:
  if ((v2 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 36);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
    if ((v2 & 8) == 0)
    {
LABEL_11:
      if ((v2 & 0x10) == 0) {
        return result;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_11;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v10;
  if ((v2 & 0x10) != 0)
  {
LABEL_21:
    int v11 = *(_DWORD *)(a1 + 44);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v12;
  }
  return result;
}

uint64_t sub_1189274(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 0x1F) != 0)
  {
    uint64_t result = sub_1189138(a1);
  }
  else
  {
    uint64_t v2 = sub_125B8E4(*(void *)(a1 + 24));
    uint64_t v3 = (9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6;
    uint64_t v4 = 10;
    int v5 = *(_DWORD *)(a1 + 32);
    int v6 = *(_DWORD *)(a1 + 36);
    uint64_t v7 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    if (v5 >= 0) {
      uint64_t v4 = v7;
    }
    uint64_t v8 = 10;
    uint64_t v9 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    if (v6 >= 0) {
      uint64_t v8 = v9;
    }
    uint64_t v10 = 10;
    int v11 = *(_DWORD *)(a1 + 40);
    int v12 = *(_DWORD *)(a1 + 44);
    uint64_t v13 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
    if (v11 >= 0) {
      uint64_t v10 = v13;
    }
    uint64_t v14 = 10;
    uint64_t v15 = (9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6;
    if (v12 >= 0) {
      uint64_t v14 = v15;
    }
    uint64_t result = v2 + v3 + v4 + v8 + v10 + v14 + 5;
  }
  int v17 = *(_DWORD *)(a1 + 16);
  uint64_t v18 = result + 9;
  if ((v17 & 0x20) == 0) {
    uint64_t v18 = result;
  }
  if ((v17 & 0x40) != 0) {
    v18 += 9;
  }
  if ((v17 & 0x60) != 0) {
    uint64_t result = v18;
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v20 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    result += v21;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_11893D4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        sub_125C1FC((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_252F2D8;
      }
      uint64_t result = sub_125BB4C(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_25;
    }
LABEL_24:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
LABEL_25:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_27;
    }
LABEL_26:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
      goto LABEL_10;
    }
LABEL_27:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_11894FC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((~v1 & 0x1F) != 0) {
    return 0;
  }
  if ((v1 & 1) == 0) {
    return 1;
  }
  BOOL result = sub_125BCE0(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_118953C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.NearbyResponseSummary");
}

double sub_118954C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24973E0;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(void *)(v2 + 152) = 0;
  return result;
}

double sub_1189618(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_2497460;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

uint64_t sub_1189698(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1189738(uint64_t a1)
{
  sub_1189698(a1);

  operator delete();
}

uint64_t sub_1189770(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0xFE) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(_DWORD *)(a1 + 56) = 0;
    *(void *)(a1 + 48) = 0;
  }
  if ((v1 & 0x700) != 0)
  {
    *(_DWORD *)(a1 + 68) = 0;
    *(void *)(a1 + 60) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11897D8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v68 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v68, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v68 + 1);
    unsigned int v9 = **(unsigned char **)v68;
    if ((char)**(unsigned char **)v68 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v68, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v68 + 2);
      }
    }
    *(void *)int v68 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_63;
        }
        v5 |= 2u;
        int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          *(void *)int v68 = v12;
          *(_DWORD *)(a1 + 32) = v13;
          goto LABEL_71;
        }
        uint64_t v48 = sub_188C0D0((uint64_t)v8, v13);
        *(void *)int v68 = v48;
        *(_DWORD *)(a1 + 32) = v49;
        if (v48) {
          goto LABEL_71;
        }
        goto LABEL_96;
      case 2u:
        if (v9 != 16) {
          goto LABEL_63;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v50 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)int v68 = v50;
          *(_DWORD *)(a1 + 36) = v51;
          if (!v50) {
            goto LABEL_96;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          *(void *)int v68 = v15;
          *(_DWORD *)(a1 + 36) = v16;
        }
        goto LABEL_71;
      case 3u:
        if (v9 != 24) {
          goto LABEL_63;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v52 = sub_188C0D0((uint64_t)v8, v19);
          *(void *)int v68 = v52;
          *(_DWORD *)(a1 + 40) = v53;
          if (!v52) {
            goto LABEL_96;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          *(void *)int v68 = v18;
          *(_DWORD *)(a1 + 40) = v19;
        }
        goto LABEL_71;
      case 4u:
        if (v9 != 32) {
          goto LABEL_63;
        }
        v5 |= 0x10u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v54 = sub_188C0D0((uint64_t)v8, v22);
          *(void *)int v68 = v54;
          *(_DWORD *)(a1 + 44) = v55;
          if (!v54) {
            goto LABEL_96;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          *(void *)int v68 = v21;
          *(_DWORD *)(a1 + 44) = v22;
        }
        goto LABEL_71;
      case 5u:
        if (v9 != 40) {
          goto LABEL_63;
        }
        v5 |= 0x20u;
        uint64_t v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v56 = sub_188C0D0((uint64_t)v8, v25);
          *(void *)int v68 = v56;
          *(_DWORD *)(a1 + 48) = v57;
          if (!v56) {
            goto LABEL_96;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          *(void *)int v68 = v24;
          *(_DWORD *)(a1 + 48) = v25;
        }
        goto LABEL_71;
      case 6u:
        if (v9 != 48) {
          goto LABEL_63;
        }
        v5 |= 0x40u;
        int v27 = v8 + 1;
        int v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v58 = sub_188C0D0((uint64_t)v8, v28);
          *(void *)int v68 = v58;
          *(_DWORD *)(a1 + 52) = v59;
          if (!v58) {
            goto LABEL_96;
          }
        }
        else
        {
          int v27 = v8 + 2;
LABEL_38:
          *(void *)int v68 = v27;
          *(_DWORD *)(a1 + 52) = v28;
        }
        goto LABEL_71;
      case 7u:
        if (v9 != 56) {
          goto LABEL_63;
        }
        v5 |= 0x80u;
        uint64_t v30 = v8 + 1;
        int v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        int v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v60 = sub_188C0D0((uint64_t)v8, v31);
          *(void *)int v68 = v60;
          *(_DWORD *)(a1 + 56) = v61;
          if (!v60) {
            goto LABEL_96;
          }
        }
        else
        {
          uint64_t v30 = v8 + 2;
LABEL_43:
          *(void *)int v68 = v30;
          *(_DWORD *)(a1 + 56) = v31;
        }
        goto LABEL_71;
      case 8u:
        if (v9 != 64) {
          goto LABEL_63;
        }
        v5 |= 0x100u;
        uint64_t v33 = v8 + 1;
        int v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v62 = sub_188C0D0((uint64_t)v8, v34);
          *(void *)int v68 = v62;
          *(_DWORD *)(a1 + 60) = v63;
          if (!v62) {
            goto LABEL_96;
          }
        }
        else
        {
          uint64_t v33 = v8 + 2;
LABEL_48:
          *(void *)int v68 = v33;
          *(_DWORD *)(a1 + 60) = v34;
        }
        goto LABEL_71;
      case 9u:
        if (v9 != 72) {
          goto LABEL_63;
        }
        v5 |= 0x200u;
        int v36 = v8 + 1;
        int v37 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v38 = *v36;
        int v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v64 = sub_188C0D0((uint64_t)v8, v37);
          *(void *)int v68 = v64;
          *(_DWORD *)(a1 + 64) = v65;
          if (!v64) {
            goto LABEL_96;
          }
        }
        else
        {
          int v36 = v8 + 2;
LABEL_53:
          *(void *)int v68 = v36;
          *(_DWORD *)(a1 + 64) = v37;
        }
        goto LABEL_71;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_63;
        }
        v5 |= 0x400u;
        uint64_t v39 = v8 + 1;
        int v40 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v41 = *v39;
        int v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v66 = sub_188C0D0((uint64_t)v8, v40);
          *(void *)int v68 = v66;
          *(_DWORD *)(a1 + 68) = v67;
          if (!v66) {
            goto LABEL_96;
          }
        }
        else
        {
          uint64_t v39 = v8 + 2;
LABEL_58:
          *(void *)int v68 = v39;
          *(_DWORD *)(a1 + 68) = v40;
        }
        goto LABEL_71;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v42 = *(void *)(a1 + 8);
        uint64_t v43 = (uint64_t *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
        if (v42) {
          uint64_t v43 = (uint64_t *)*v43;
        }
        uint64_t v44 = (std::string *)sub_1880F84((void *)(a1 + 24), v43);
        unint64_t v45 = (void *)sub_188C244(v44, *(char **)v68, (uint64_t)a3);
        goto LABEL_70;
      default:
LABEL_63:
        if (v9) {
          BOOL v46 = (v9 & 7) == 4;
        }
        else {
          BOOL v46 = 1;
        }
        if (!v46)
        {
          if (*v7)
          {
            uint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v68;
          }
          unint64_t v45 = sub_1885AC0(v9, v47, v8, a3);
LABEL_70:
          *(void *)int v68 = v45;
          if (!v45) {
            goto LABEL_96;
          }
LABEL_71:
          if (sub_11947B8((uint64_t)a3, (char **)v68, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_96:
        }
          *(void *)int v68 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v68;
    }
  }
}

unsigned char *sub_1189D3C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 36);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 40);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 44);
    *char v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 48);
    *char v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 52);
    *char v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 56);
    *char v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 60);
    *char v4 = 64;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v31 = *(_DWORD *)(a1 + 64);
    *char v4 = 72;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unsigned int v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v34 = *(_DWORD *)(a1 + 68);
    *char v4 = 80;
    v4[1] = v34;
    if (v34 > 0x7F)
    {
      v4[1] = v34 | 0x80;
      unsigned int v35 = v34 >> 7;
      v4[2] = v34 >> 7;
      v4 += 3;
      if (v34 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v36 = v35 >> 14;
          v35 >>= 7;
          *v4++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    char v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    int v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    int v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v40, v41, v4);
}

uint64_t sub_118A2E0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_12:
      if ((v1 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_26;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_12;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_13:
    if ((v1 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_27;
  }
LABEL_26:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) == 0)
  {
LABEL_14:
    if ((v1 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_28;
  }
LABEL_27:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x40) == 0)
  {
LABEL_15:
    if ((v1 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_28:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x80) != 0) {
LABEL_16:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_17:
  if ((v1 & 0x700) == 0) {
    goto LABEL_22;
  }
  if ((v1 & 0x100) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 0x200) == 0)
    {
LABEL_20:
      if ((v1 & 0x400) == 0) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
  }
  else if ((v1 & 0x200) == 0)
  {
    goto LABEL_20;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x400) != 0) {
LABEL_21:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_22:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_118A534(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unsigned int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_26;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_27;
    }
LABEL_26:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_28;
    }
LABEL_27:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_29;
    }
LABEL_28:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_30;
    }
LABEL_29:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
      goto LABEL_11;
    }
LABEL_30:
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x700) == 0) {
    goto LABEL_18;
  }
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 0x200) == 0) {
      goto LABEL_15;
    }
LABEL_33:
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x200) != 0) {
    goto LABEL_33;
  }
LABEL_15:
  if ((v4 & 0x400) != 0) {
LABEL_16:
  }
    HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
LABEL_17:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
LABEL_18:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_118A698()
{
  return 1;
}

void *sub_118A6A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.RasterTileRequest");
}

void *sub_118A6B0(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_118A724(void *a1)
{
  sub_118A6B0(a1);

  operator delete();
}

uint64_t sub_118A75C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_118A780(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v25 + 2;
      }
    }
    unsigned int v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unsigned int v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unsigned int v15 = v8 + 2;
LABEL_25:
      unsigned int v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    unsigned int v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    unsigned int v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unsigned int v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      unsigned int v18 = v8 + 2;
LABEL_29:
      unsigned int v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    unsigned int v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    unsigned int v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unsigned int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v25;
    }
    unsigned int v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unsigned int v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_118A970(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_118AB14(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_118ABB8()
{
  return 1;
}

void *sub_118ABC0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.RasterTileResponse");
}

double sub_118ABD0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24974E0;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  return result;
}

void *sub_118AC60(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_2497560;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_118ACD8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_118AD6C((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8(a1 + 40);
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_118AD6C(uint64_t (***result)()))()
{
  if (result != &off_252BF80)
  {
    int v1 = result;
    if (result[7])
    {
      sub_1463FF8();
      operator delete();
    }
    if (result[8])
    {
      sub_146E3A8();
      operator delete();
    }
    if (result[9])
    {
      sub_131BF20();
      operator delete();
    }
    if (result[10])
    {
      sub_131D54C();
      operator delete();
    }
    if (result[11])
    {
      sub_1196488();
      operator delete();
    }
    if (result[12])
    {
      sub_1197140();
      operator delete();
    }
    if (result[13])
    {
      sub_11A01D4();
      operator delete();
    }
    if (result[14])
    {
      sub_11A0B7C();
      operator delete();
    }
    uint64_t v2 = result[15];
    if (v2)
    {
      sub_182B32C(v2);
      operator delete();
    }
    uint64_t v3 = v1[16];
    if (v3)
    {
      sub_182E7B8(v3);
      operator delete();
    }
    if (v1[17])
    {
      sub_119A62C();
      operator delete();
    }
    if (v1[18])
    {
      sub_119C768();
      operator delete();
    }
    if (v1[19])
    {
      sub_16669B4();
      operator delete();
    }
    double result = (uint64_t (***)())v1[20];
    if (result)
    {
      sub_1667D4C();
      operator delete();
    }
  }
  return result;
}

void sub_118AF78(uint64_t a1)
{
  sub_118ACD8(a1);

  operator delete();
}

uint64_t sub_118AFB0(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if (!(_BYTE)v2) {
    goto LABEL_11;
  }
  if (v2)
  {
    double result = sub_1464034(*(void *)(result + 56));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_25;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  double result = sub_13F04AC(*(void *)(v1 + 64));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = sub_131BF5C(*(void *)(v1 + 72));
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = sub_131D588(*(void *)(v1 + 80));
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_28:
    double result = sub_119717C(*(void *)(v1 + 96));
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_27:
  double result = sub_11964C4(*(void *)(v1 + 88));
  if ((v2 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_8:
  if ((v2 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_29:
  double result = sub_11A0210(*(void *)(v1 + 104));
  if ((v2 & 0x80) != 0) {
LABEL_10:
  }
    double result = (uint64_t)sub_11A0BB8(*(unsigned char **)(v1 + 112));
LABEL_11:
  if ((v2 & 0x3F00) == 0) {
    goto LABEL_19;
  }
  if ((v2 & 0x100) != 0)
  {
    double result = sub_182B368(*(void *)(v1 + 120));
    if ((v2 & 0x200) == 0)
    {
LABEL_14:
      if ((v2 & 0x400) == 0) {
        goto LABEL_15;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  double result = sub_182E7F4(*(void *)(v1 + 128));
  if ((v2 & 0x400) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  double result = sub_119A668(*(void *)(v1 + 136));
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  double result = sub_119C7A4(*(void *)(v1 + 144));
  if ((v2 & 0x1000) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_35:
  double result = sub_1665F38(*(void *)(v1 + 152));
  if ((v2 & 0x2000) != 0) {
LABEL_18:
  }
    double result = sub_1665FF4(*(void *)(v1 + 160));
LABEL_19:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_118B0F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v58 = a2;
  if ((sub_11947B8((uint64_t)a3, &v58, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v7 = v58 + 1;
      unsigned int v8 = *v58;
      if (*v58 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          unsigned int v7 = (char *)sub_188C180((uint64_t)v58, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unsigned int v7 = v58 + 2;
        }
      }
      uint64_t v58 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 10) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v11 = *(void *)(a1 + 56);
          if (!v11)
          {
            unsigned int v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              unsigned int v12 = (void *)*v12;
            }
            sub_1478F54((uint64_t)v12);
            uint64_t v11 = v13;
            *(void *)(a1 + 56) = v13;
            unsigned int v7 = v58;
          }
          unsigned int v14 = (char *)sub_11793D8(a3, v11, (unsigned __int8 *)v7);
          goto LABEL_132;
        case 2u:
          if (v8 != 18) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v15 = *(void *)(a1 + 64);
          if (!v15)
          {
            int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              int v16 = (void *)*v16;
            }
            sub_147937C((uint64_t)v16);
            uint64_t v15 = v17;
            *(void *)(a1 + 64) = v17;
            unsigned int v7 = v58;
          }
          unsigned int v14 = (char *)sub_1179468(a3, v15, (unsigned __int8 *)v7);
          goto LABEL_132;
        case 3u:
          if (v8 == 24)
          {
            uint64_t v18 = v7 - 1;
            while (1)
            {
              uint64_t v58 = v18 + 1;
              uint64_t v19 = v18[1];
              if (v18[1] < 0)
              {
                int v20 = v19 + (v18[2] << 7);
                uint64_t v19 = (v20 - 128);
                if (v18[2] < 0)
                {
                  uint64_t v18 = (char *)sub_188C138((uint64_t)(v18 + 1), (v20 - 128));
                  uint64_t v19 = v21;
                }
                else
                {
                  v18 += 3;
                }
              }
              else
              {
                v18 += 2;
              }
              uint64_t v58 = v18;
              uint64_t v22 = *(unsigned int *)(a1 + 24);
              if (v22 == *(_DWORD *)(a1 + 28))
              {
                int v23 = v22 + 1;
                sub_188CA54((unsigned int *)(a1 + 24), v22 + 1);
                *(void *)(*(void *)(a1 + 32) + 8 * v22) = v19;
                uint64_t v18 = v58;
              }
              else
              {
                *(void *)(*(void *)(a1 + 32) + 8 * v22) = v19;
                int v23 = v22 + 1;
              }
              *(_DWORD *)(a1 + 24) = v23;
              if (!v18) {
                return 0;
              }
              if (*(void *)a3 <= (unint64_t)v18 || *v18 != 24) {
                goto LABEL_133;
              }
            }
          }
          if (v8 == 26)
          {
            unsigned int v14 = (char *)sub_188C2DC((unsigned int *)(a1 + 24), (unsigned __int8 *)v7, (uint64_t)a3);
          }
          else
          {
LABEL_125:
            if (v8) {
              BOOL v56 = (v8 & 7) == 4;
            }
            else {
              BOOL v56 = 1;
            }
            if (v56)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                return v58;
              }
              return 0;
            }
            if (*v6)
            {
              int v57 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unsigned int v7 = v58;
            }
            unsigned int v14 = (char *)sub_1885AC0(v8, v57, v7, a3);
          }
LABEL_132:
          uint64_t v58 = v14;
          if (!v14) {
            return 0;
          }
LABEL_133:
          if (sub_11947B8((uint64_t)a3, &v58, a3[11].i32[1])) {
            return v58;
          }
          break;
        case 4u:
          if (v8 == 32)
          {
            int v24 = v7 - 1;
            while (1)
            {
              uint64_t v58 = v24 + 1;
              int v25 = v24[1];
              if (v24[1] < 0)
              {
                int v26 = v25 + (v24[2] << 7);
                int v25 = v26 - 128;
                if (v24[2] < 0)
                {
                  int v24 = (char *)sub_188C138((uint64_t)(v24 + 1), (v26 - 128));
                  int v25 = v27;
                }
                else
                {
                  v24 += 3;
                }
              }
              else
              {
                v24 += 2;
              }
              uint64_t v58 = v24;
              uint64_t v28 = *(unsigned int *)(a1 + 40);
              if (v28 == *(_DWORD *)(a1 + 44))
              {
                int v29 = v28 + 1;
                sub_188C80C((unsigned int *)(a1 + 40), v28 + 1);
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v28) = v25;
                int v24 = v58;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v28) = v25;
                int v29 = v28 + 1;
              }
              *(_DWORD *)(a1 + 40) = v29;
              if (!v24) {
                return 0;
              }
              if (*(void *)a3 <= (unint64_t)v24 || *v24 != 32) {
                goto LABEL_133;
              }
            }
          }
          if (v8 != 34) {
            goto LABEL_125;
          }
          unsigned int v14 = (char *)sub_188C2BC((unsigned int *)(a1 + 40), (unsigned __int8 *)v7, (uint64_t)a3);
          goto LABEL_132;
        case 5u:
          if (v8 != 42) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v30 = *(void *)(a1 + 72);
          if (!v30)
          {
            unsigned int v31 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              unsigned int v31 = (void *)*v31;
            }
            uint64_t v30 = sub_131ECE4((uint64_t)v31);
            *(void *)(a1 + 72) = v30;
            unsigned int v7 = v58;
          }
          unsigned int v14 = (char *)sub_118B8A0(a3, v30, (unsigned __int8 *)v7);
          goto LABEL_132;
        case 6u:
          if (v8 != 50) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v32 = *(void *)(a1 + 80);
          if (!v32)
          {
            unsigned int v33 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              unsigned int v33 = (void *)*v33;
            }
            uint64_t v32 = sub_131EE1C((uint64_t)v33);
            *(void *)(a1 + 80) = v32;
            unsigned int v7 = v58;
          }
          unsigned int v14 = (char *)sub_118B930(a3, v32, (unsigned __int8 *)v7);
          goto LABEL_132;
        case 7u:
          if (v8 != 58) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v34 = *(void *)(a1 + 88);
          if (!v34)
          {
            unsigned int v35 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              unsigned int v35 = (void *)*v35;
            }
            uint64_t v34 = sub_11979C8((uint64_t)v35);
            *(void *)(a1 + 88) = v34;
            unsigned int v7 = v58;
          }
          unsigned int v14 = sub_118B9C0(a3, v34, (unsigned __int8 *)v7);
          goto LABEL_132;
        case 8u:
          if (v8 != 66) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 16) |= 0x20u;
          uint64_t v36 = *(void *)(a1 + 96);
          if (!v36)
          {
            uint64_t v37 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              uint64_t v37 = (void *)*v37;
            }
            uint64_t v36 = sub_1197AEC((uint64_t)v37);
            *(void *)(a1 + 96) = v36;
            unsigned int v7 = v58;
          }
          unsigned int v14 = (char *)sub_118BA50(a3, v36, (unsigned __int8 *)v7);
          goto LABEL_132;
        case 9u:
          if (v8 != 74) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 16) |= 0x40u;
          uint64_t v38 = *(void *)(a1 + 104);
          if (!v38)
          {
            unint64_t v39 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              unint64_t v39 = (void *)*v39;
            }
            uint64_t v38 = sub_11A1458((uint64_t)v39);
            *(void *)(a1 + 104) = v38;
            unsigned int v7 = v58;
          }
          unsigned int v14 = sub_118BAE0(a3, v38, (unsigned __int8 *)v7);
          goto LABEL_132;
        case 0xAu:
          if (v8 != 82) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 16) |= 0x80u;
          uint64_t v40 = *(void *)(a1 + 112);
          if (!v40)
          {
            uint64_t v41 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              uint64_t v41 = (void *)*v41;
            }
            uint64_t v40 = sub_11A14FC((uint64_t)v41);
            *(void *)(a1 + 112) = v40;
            unsigned int v7 = v58;
          }
          unsigned int v14 = sub_118BB70(a3, v40, (unsigned __int8 *)v7);
          goto LABEL_132;
        case 0xBu:
          if (v8 != 90) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 16) |= 0x100u;
          uint64_t v42 = *(void *)(a1 + 120);
          if (!v42)
          {
            uint64_t v43 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              uint64_t v43 = (void *)*v43;
            }
            uint64_t v42 = sub_1836E54((uint64_t)v43);
            *(void *)(a1 + 120) = v42;
            unsigned int v7 = v58;
          }
          unsigned int v14 = (char *)sub_11798C8(a3, v42, (unsigned __int8 *)v7);
          goto LABEL_132;
        case 0xCu:
          if (v8 != 98) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 16) |= 0x200u;
          uint64_t v44 = *(void *)(a1 + 128);
          if (!v44)
          {
            unint64_t v45 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              unint64_t v45 = (void *)*v45;
            }
            uint64_t v44 = sub_1836F0C((uint64_t)v45);
            *(void *)(a1 + 128) = v44;
            unsigned int v7 = v58;
          }
          unsigned int v14 = (char *)sub_1179958(a3, v44, (unsigned __int8 *)v7);
          goto LABEL_132;
        case 0xDu:
          if (v8 != 106) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 16) |= 0x400u;
          uint64_t v46 = *(void *)(a1 + 136);
          if (!v46)
          {
            uint64_t v47 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              uint64_t v47 = (void *)*v47;
            }
            uint64_t v46 = sub_119DE70((uint64_t)v47);
            *(void *)(a1 + 136) = v46;
            unsigned int v7 = v58;
          }
          unsigned int v14 = sub_118BC00(a3, v46, (unsigned __int8 *)v7);
          goto LABEL_132;
        case 0xEu:
          if (v8 != 114) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 16) |= 0x800u;
          uint64_t v48 = *(void *)(a1 + 144);
          if (!v48)
          {
            int v49 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              int v49 = (void *)*v49;
            }
            uint64_t v48 = sub_119DFA4((uint64_t)v49);
            *(void *)(a1 + 144) = v48;
            unsigned int v7 = v58;
          }
          unsigned int v14 = sub_118BC90(a3, v48, (unsigned __int8 *)v7);
          goto LABEL_132;
        case 0xFu:
          if (v8 != 122) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 16) |= 0x1000u;
          uint64_t v50 = *(void *)(a1 + 152);
          if (!v50)
          {
            int v51 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              int v51 = (void *)*v51;
            }
            sub_16692EC((uint64_t)v51);
            uint64_t v50 = v52;
            *(void *)(a1 + 152) = v52;
            unsigned int v7 = v58;
          }
          unsigned int v14 = (char *)sub_118BD20(a3, v50, (unsigned __int8 *)v7);
          goto LABEL_132;
        case 0x10u:
          if (v8 != 130) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 16) |= 0x2000u;
          uint64_t v53 = *(void *)(a1 + 160);
          if (!v53)
          {
            uint64_t v54 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              uint64_t v54 = (void *)*v54;
            }
            sub_1669420((uint64_t)v54);
            uint64_t v53 = v55;
            *(void *)(a1 + 160) = v55;
            unsigned int v7 = v58;
          }
          unsigned int v14 = (char *)sub_118BDB0(a3, v53, (unsigned __int8 *)v7);
          goto LABEL_132;
        default:
          goto LABEL_125;
      }
    }
  }
  return v58;
}

uint64_t sub_118B8A0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_131C0B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_118B930(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_131D654(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_118B9C0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11964EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_118BA50(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1197250(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_118BAE0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A02B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_118BB70(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A0C3C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_118BC00(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_119A728(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_118BC90(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_119C838(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_118BD20(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16669F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_118BDB0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1667D88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_118BE40(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 28);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1466BF0(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 64);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    char v4 = sub_146ECEC(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(unsigned int *)(a1 + 24);
  if ((int)v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v15 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      *char v4 = 24;
      v4[1] = v15;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unint64_t v16 = v15 >> 7;
        v4[2] = v15 >> 7;
        v4 += 3;
        if (v15 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v18 = *(unsigned int *)(a1 + 40);
  if ((int)v18 >= 1)
  {
    for (uint64_t j = 0; j != v18; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v20 = *(int *)(*(void *)(a1 + 48) + 4 * j);
      *char v4 = 32;
      v4[1] = v20;
      if (v20 > 0x7F)
      {
        v4[1] = v20 | 0x80;
        unint64_t v21 = v20 >> 7;
        v4[2] = v20 >> 7;
        v4 += 3;
        if (v20 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v22 = v21 >> 14;
            v21 >>= 7;
            *v4++ = v21;
          }
          while (v22);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v23 = *(void *)(a1 + 72);
    *char v4 = 42;
    unsigned int v24 = *(_DWORD *)(v23 + 20);
    v4[1] = v24;
    if (v24 > 0x7F) {
      int v25 = sub_188A9CC(v24, v4 + 1);
    }
    else {
      int v25 = v4 + 2;
    }
    char v4 = sub_131C5C0(v23, (unint64_t)v25, a3);
    if ((v6 & 8) == 0)
    {
LABEL_35:
      if ((v6 & 0x10) == 0) {
        goto LABEL_36;
      }
      goto LABEL_58;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_35;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v26 = *(void *)(a1 + 80);
  *char v4 = 50;
  unsigned int v27 = *(_DWORD *)(v26 + 20);
  v4[1] = v27;
  if (v27 > 0x7F) {
    uint64_t v28 = sub_188A9CC(v27, v4 + 1);
  }
  else {
    uint64_t v28 = v4 + 2;
  }
  char v4 = sub_131DC70(v26, (unint64_t)v28, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_36:
    if ((v6 & 0x20) == 0) {
      goto LABEL_37;
    }
    goto LABEL_64;
  }
LABEL_58:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v29 = *(void *)(a1 + 88);
  *char v4 = 58;
  unsigned int v30 = *(_DWORD *)(v29 + 20);
  v4[1] = v30;
  if (v30 > 0x7F) {
    unsigned int v31 = sub_188A9CC(v30, v4 + 1);
  }
  else {
    unsigned int v31 = v4 + 2;
  }
  char v4 = sub_11966D4(v29, (unint64_t)v31, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_37:
    if ((v6 & 0x40) == 0) {
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_64:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v32 = *(void *)(a1 + 96);
  *char v4 = 66;
  unsigned int v33 = *(_DWORD *)(v32 + 20);
  v4[1] = v33;
  if (v33 > 0x7F) {
    uint64_t v34 = sub_188A9CC(v33, v4 + 1);
  }
  else {
    uint64_t v34 = v4 + 2;
  }
  char v4 = sub_119758C(v32, (unint64_t)v34, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_38:
    if ((v6 & 0x80) == 0) {
      goto LABEL_39;
    }
    goto LABEL_76;
  }
LABEL_70:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v35 = *(void *)(a1 + 104);
  *char v4 = 74;
  unsigned int v36 = *(_DWORD *)(v35 + 64);
  v4[1] = v36;
  if (v36 > 0x7F) {
    uint64_t v37 = sub_188A9CC(v36, v4 + 1);
  }
  else {
    uint64_t v37 = v4 + 2;
  }
  char v4 = sub_11A061C(v35, v37, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_39:
    if ((v6 & 0x100) == 0) {
      goto LABEL_40;
    }
    goto LABEL_82;
  }
LABEL_76:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v38 = *(void *)(a1 + 112);
  *char v4 = 82;
  unsigned int v39 = *(_DWORD *)(v38 + 20);
  v4[1] = v39;
  if (v39 > 0x7F) {
    uint64_t v40 = sub_188A9CC(v39, v4 + 1);
  }
  else {
    uint64_t v40 = v4 + 2;
  }
  char v4 = sub_11A0F28(v38, (unint64_t)v40, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_40:
    if ((v6 & 0x200) == 0) {
      goto LABEL_41;
    }
    goto LABEL_88;
  }
LABEL_82:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v41 = *(void *)(a1 + 120);
  *char v4 = 90;
  unsigned int v42 = *(_DWORD *)(v41 + 44);
  v4[1] = v42;
  if (v42 > 0x7F) {
    uint64_t v43 = sub_188A9CC(v42, v4 + 1);
  }
  else {
    uint64_t v43 = v4 + 2;
  }
  char v4 = sub_182BE50(v41, v43, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_41:
    if ((v6 & 0x400) == 0) {
      goto LABEL_42;
    }
    goto LABEL_94;
  }
LABEL_88:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v44 = *(void *)(a1 + 128);
  *char v4 = 98;
  unsigned int v45 = *(_DWORD *)(v44 + 44);
  v4[1] = v45;
  if (v45 > 0x7F) {
    uint64_t v46 = sub_188A9CC(v45, v4 + 1);
  }
  else {
    uint64_t v46 = v4 + 2;
  }
  char v4 = sub_182F28C(v44, v46, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_42:
    if ((v6 & 0x800) == 0) {
      goto LABEL_43;
    }
    goto LABEL_100;
  }
LABEL_94:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v47 = *(void *)(a1 + 136);
  *char v4 = 106;
  unsigned int v48 = *(_DWORD *)(v47 + 20);
  v4[1] = v48;
  if (v48 > 0x7F) {
    int v49 = sub_188A9CC(v48, v4 + 1);
  }
  else {
    int v49 = v4 + 2;
  }
  char v4 = sub_119ABC4(v47, (unint64_t)v49, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_43:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_106;
  }
LABEL_100:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v50 = *(void *)(a1 + 144);
  *char v4 = 114;
  unsigned int v51 = *(_DWORD *)(v50 + 20);
  v4[1] = v51;
  if (v51 > 0x7F) {
    uint64_t v52 = sub_188A9CC(v51, v4 + 1);
  }
  else {
    uint64_t v52 = v4 + 2;
  }
  char v4 = sub_119CC84(v50, (unint64_t)v52, a3);
  if ((v6 & 0x1000) == 0)
  {
LABEL_44:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_112;
  }
LABEL_106:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v53 = *(void *)(a1 + 152);
  *char v4 = 122;
  unsigned int v54 = *(_DWORD *)(v53 + 20);
  v4[1] = v54;
  if (v54 > 0x7F) {
    uint64_t v55 = sub_188A9CC(v54, v4 + 1);
  }
  else {
    uint64_t v55 = v4 + 2;
  }
  char v4 = sub_16670C8(v53, (unint64_t)v55, a3);
  if ((v6 & 0x2000) != 0)
  {
LABEL_112:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v56 = *(void *)(a1 + 160);
    *(_WORD *)char v4 = 386;
    unsigned int v57 = *(_DWORD *)(v56 + 20);
    v4[2] = v57;
    if (v57 > 0x7F) {
      uint64_t v58 = sub_188A9CC(v57, v4 + 2);
    }
    else {
      uint64_t v58 = v4 + 3;
    }
    char v4 = sub_1668760(v56, v58, a3);
  }
LABEL_118:
  uint64_t v59 = *(void *)(a1 + 8);
  if ((v59 & 1) == 0) {
    return v4;
  }
  unint64_t v61 = v59 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v61 + 31) < 0)
  {
    uint64_t v62 = *(void **)(v61 + 8);
    uint64_t v63 = *(void *)(v61 + 16);
  }
  else
  {
    uint64_t v62 = (void *)(v61 + 8);
    LODWORD(v63) = *(unsigned __int8 *)(v61 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v63)
  {
    uint64_t v64 = (int)v63;
    memcpy(v4, v62, (int)v63);
    v4 += v64;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v62, v63, v4);
}

uint64_t sub_118C5E4(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  uint64_t v4 = v2 + sub_188D498((unsigned int *)(a1 + 40)) + v3 + *(unsigned int *)(a1 + 40);
  int v5 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v5) {
    goto LABEL_11;
  }
  if (v5)
  {
    uint64_t v10 = sub_1468738(*(void *)(a1 + 56));
    v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v5 & 2) == 0)
    {
LABEL_4:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_23;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v11 = sub_146F320(*(void *)(a1 + 64));
  v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v12 = sub_131C8CC(*(void *)(a1 + 72));
  v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v13 = sub_131E090(*(void *)(a1 + 80));
  v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_26:
    uint64_t v15 = sub_1197730(*(void *)(a1 + 96));
    v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v5 & 0x40) == 0)
    {
LABEL_9:
      if ((v5 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t v14 = sub_1196834(*(void *)(a1 + 88));
  v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v5 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_8:
  if ((v5 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_27:
  uint64_t v16 = sub_11A07E4(*(void *)(a1 + 104));
  v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v5 & 0x80) != 0)
  {
LABEL_10:
    uint64_t v6 = sub_11A10EC(*(void *)(a1 + 112));
    v4 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  if ((v5 & 0x3F00) == 0) {
    goto LABEL_19;
  }
  if ((v5 & 0x100) != 0)
  {
    uint64_t v17 = sub_182C500(*(void *)(a1 + 120));
    v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v5 & 0x200) == 0)
    {
LABEL_14:
      if ((v5 & 0x400) == 0) {
        goto LABEL_15;
      }
      goto LABEL_31;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v18 = sub_182F8B4(*(void *)(a1 + 128));
  v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v5 & 0x400) == 0)
  {
LABEL_15:
    if ((v5 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v19 = sub_119AEB4(*(void *)(a1 + 136));
  v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v5 & 0x800) == 0)
  {
LABEL_16:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v20 = sub_119CF40(*(void *)(a1 + 144));
  v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v5 & 0x1000) == 0)
  {
LABEL_17:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_33:
  uint64_t v21 = sub_16675A4(*(void *)(a1 + 152));
  v4 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v5 & 0x2000) != 0)
  {
LABEL_18:
    uint64_t v7 = sub_1668EF4(*(void *)(a1 + 160));
    v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_19:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v22 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v4 += v23;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_118C954(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 40);
    sub_188C80C((unsigned int *)(a1 + 40), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v11) {
    goto LABEL_79;
  }
  if (v11)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v12 = *(void *)(a1 + 56);
    if (!v12)
    {
      uint64_t v13 = *(void *)(a1 + 8);
      uint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
      if (v13) {
        uint64_t v14 = (void *)*v14;
      }
      sub_1478F54((uint64_t)v14);
      *(void *)(a1 + 56) = v12;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v15 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v15 = &off_2539528;
    }
    sub_146945C(v12, (uint64_t)v15);
    if ((v11 & 2) == 0)
    {
LABEL_8:
      if ((v11 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_31;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_8;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v16 = *(void *)(a1 + 64);
  if (!v16)
  {
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (void *)*v18;
    }
    sub_147937C((uint64_t)v18);
    *(void *)(a1 + 64) = v16;
  }
  if (*(void *)(a2 + 64)) {
    uint64_t v19 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    uint64_t v19 = &off_25398D0;
  }
  sub_13F17EC(v16, (uint64_t)v19);
  if ((v11 & 4) == 0)
  {
LABEL_9:
    if ((v11 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_39;
  }
LABEL_31:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v20 = *(void *)(a1 + 72);
  if (!v20)
  {
    uint64_t v21 = *(void *)(a1 + 8);
    unint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      unint64_t v22 = (void *)*v22;
    }
    uint64_t v20 = sub_131ECE4((uint64_t)v22);
    *(void *)(a1 + 72) = v20;
  }
  if (*(void *)(a2 + 72)) {
    uint64_t v23 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    uint64_t v23 = &off_2532C90;
  }
  sub_131CB18(v20, (uint64_t)v23);
  if ((v11 & 8) == 0)
  {
LABEL_10:
    if ((v11 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_47;
  }
LABEL_39:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v24 = *(void *)(a1 + 80);
  if (!v24)
  {
    uint64_t v25 = *(void *)(a1 + 8);
    uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      uint64_t v26 = (void *)*v26;
    }
    uint64_t v24 = sub_131EE1C((uint64_t)v26);
    *(void *)(a1 + 80) = v24;
  }
  if (*(void *)(a2 + 80)) {
    unsigned int v27 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    unsigned int v27 = &off_2532D30;
  }
  sub_131E280(v24, (uint64_t)v27);
  if ((v11 & 0x10) == 0)
  {
LABEL_11:
    if ((v11 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_55:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v32 = *(std::string **)(a1 + 96);
    if (!v32)
    {
      uint64_t v33 = *(void *)(a1 + 8);
      uint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
      if (v33) {
        uint64_t v34 = (void *)*v34;
      }
      uint64_t v32 = (std::string *)sub_1197AEC((uint64_t)v34);
      *(void *)(a1 + 96) = v32;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v35 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v35 = &off_252C308;
    }
    sub_1197868(v32, (uint64_t)v35);
    if ((v11 & 0x40) == 0)
    {
LABEL_13:
      if ((v11 & 0x80) == 0) {
        goto LABEL_79;
      }
      goto LABEL_71;
    }
    goto LABEL_63;
  }
LABEL_47:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v28 = *(std::string **)(a1 + 88);
  if (!v28)
  {
    uint64_t v29 = *(void *)(a1 + 8);
    unsigned int v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
    if (v29) {
      unsigned int v30 = (void *)*v30;
    }
    uint64_t v28 = (std::string *)sub_11979C8((uint64_t)v30);
    *(void *)(a1 + 88) = v28;
  }
  if (*(void *)(a2 + 88)) {
    unsigned int v31 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    unsigned int v31 = &off_252C2A0;
  }
  sub_119689C(v28, (uint64_t)v31);
  if ((v11 & 0x20) != 0) {
    goto LABEL_55;
  }
LABEL_12:
  if ((v11 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_63:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v36 = *(void *)(a1 + 104);
  if (!v36)
  {
    uint64_t v37 = *(void *)(a1 + 8);
    uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
    if (v37) {
      uint64_t v38 = (void *)*v38;
    }
    uint64_t v36 = sub_11A1458((uint64_t)v38);
    *(void *)(a1 + 104) = v36;
  }
  if (*(void *)(a2 + 104)) {
    unsigned int v39 = *(uint64_t (****)())(a2 + 104);
  }
  else {
    unsigned int v39 = &off_252C640;
  }
  sub_11A08E4(v36, (uint64_t)v39);
  if ((v11 & 0x80) != 0)
  {
LABEL_71:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v40 = *(void *)(a1 + 112);
    if (!v40)
    {
      uint64_t v41 = *(void *)(a1 + 8);
      unsigned int v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
      if (v41) {
        unsigned int v42 = (void *)*v42;
      }
      uint64_t v40 = sub_11A14FC((uint64_t)v42);
      *(void *)(a1 + 112) = v40;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v43 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v43 = &off_252C688;
    }
    sub_11A11D4(v40, (uint64_t)v43);
  }
LABEL_79:
  if ((v11 & 0x3F00) == 0) {
    goto LABEL_135;
  }
  if ((v11 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v44 = *(void *)(a1 + 120);
    if (!v44)
    {
      uint64_t v45 = *(void *)(a1 + 8);
      uint64_t v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
      if (v45) {
        uint64_t v46 = (void *)*v46;
      }
      uint64_t v44 = sub_1836E54((uint64_t)v46);
      *(void *)(a1 + 120) = v44;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v47 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v47 = &off_254CA18;
    }
    sub_182C88C(v44, (uint64_t)v47);
    if ((v11 & 0x200) == 0)
    {
LABEL_82:
      if ((v11 & 0x400) == 0) {
        goto LABEL_83;
      }
      goto LABEL_103;
    }
  }
  else if ((v11 & 0x200) == 0)
  {
    goto LABEL_82;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v48 = *(void *)(a1 + 128);
  if (!v48)
  {
    uint64_t v49 = *(void *)(a1 + 8);
    uint64_t v50 = (void *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
    if (v49) {
      uint64_t v50 = (void *)*v50;
    }
    uint64_t v48 = sub_1836F0C((uint64_t)v50);
    *(void *)(a1 + 128) = v48;
  }
  if (*(void *)(a2 + 128)) {
    unsigned int v51 = *(uint64_t (****)())(a2 + 128);
  }
  else {
    unsigned int v51 = &off_254CB28;
  }
  sub_182FC60(v48, (uint64_t)v51);
  if ((v11 & 0x400) == 0)
  {
LABEL_83:
    if ((v11 & 0x800) == 0) {
      goto LABEL_84;
    }
    goto LABEL_111;
  }
LABEL_103:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v52 = *(void *)(a1 + 136);
  if (!v52)
  {
    uint64_t v53 = *(void *)(a1 + 8);
    unsigned int v54 = (void *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
    if (v53) {
      unsigned int v54 = (void *)*v54;
    }
    uint64_t v52 = sub_119DE70((uint64_t)v54);
    *(void *)(a1 + 136) = v52;
  }
  if (*(void *)(a2 + 136)) {
    uint64_t v55 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    uint64_t v55 = &off_252C430;
  }
  sub_119B044(v52, (uint64_t)v55);
  if ((v11 & 0x800) == 0)
  {
LABEL_84:
    if ((v11 & 0x1000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_119;
  }
LABEL_111:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v56 = *(void *)(a1 + 144);
  if (!v56)
  {
    uint64_t v57 = *(void *)(a1 + 8);
    uint64_t v58 = (void *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
    if (v57) {
      uint64_t v58 = (void *)*v58;
    }
    uint64_t v56 = sub_119DFA4((uint64_t)v58);
    *(void *)(a1 + 144) = v56;
  }
  if (*(void *)(a2 + 144)) {
    uint64_t v59 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    uint64_t v59 = &off_252C4D8;
  }
  sub_119D0A4(v56, (uint64_t)v59);
  if ((v11 & 0x1000) == 0)
  {
LABEL_85:
    if ((v11 & 0x2000) == 0) {
      goto LABEL_135;
    }
    goto LABEL_127;
  }
LABEL_119:
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  uint64_t v60 = *(void *)(a1 + 152);
  if (!v60)
  {
    uint64_t v61 = *(void *)(a1 + 8);
    uint64_t v62 = (void *)(v61 & 0xFFFFFFFFFFFFFFFCLL);
    if (v61) {
      uint64_t v62 = (void *)*v62;
    }
    sub_16692EC((uint64_t)v62);
    *(void *)(a1 + 152) = v60;
  }
  if (*(void *)(a2 + 152)) {
    uint64_t v63 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    uint64_t v63 = &off_2542B18;
  }
  sub_1666180(v60, (uint64_t)v63);
  if ((v11 & 0x2000) != 0)
  {
LABEL_127:
    *(_DWORD *)(a1 + 16) |= 0x2000u;
    uint64_t v64 = *(void *)(a1 + 160);
    if (!v64)
    {
      uint64_t v65 = *(void *)(a1 + 8);
      uint64_t v66 = (void *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
      if (v65) {
        uint64_t v66 = (void *)*v66;
      }
      sub_1669420((uint64_t)v66);
      *(void *)(a1 + 160) = v64;
    }
    if (*(void *)(a2 + 160)) {
      int v67 = *(uint64_t (****)())(a2 + 160);
    }
    else {
      int v67 = &off_2542B88;
    }
    sub_16663E4(v64, (uint64_t)v67);
  }
LABEL_135:
  uint64_t v68 = *(void *)(a2 + 8);
  if (v68)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v68 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_118CEB0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_146A1C8(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_13F1C1C(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_131CD60(*(void *)(a1 + 72));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_131E470(*(void *)(a1 + 80));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x40) != 0)
  {
    uint64_t result = sub_11A0A18(*(void *)(a1 + 104));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x80) != 0)
  {
    uint64_t result = sub_11A12C0(*(void *)(a1 + 112));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t result = sub_182D83C(*(void *)(a1 + 120));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x200) != 0)
  {
    uint64_t result = sub_18300B0(*(void *)(a1 + 128));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x400) != 0)
  {
    uint64_t result = sub_119B22C(*(void *)(a1 + 136));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x800) != 0)
  {
    uint64_t result = sub_119D1BC(*(void *)(a1 + 144));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x1000) != 0)
  {
    uint64_t result = sub_1666830(*(void *)(a1 + 152));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x2000) == 0) {
    return 1;
  }
  uint64_t result = sub_166687C(*(void *)(a1 + 160));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_118CFC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.RevGeoQuery");
}

double sub_118CFD4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24975E0;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  return result;
}

uint64_t sub_118D0A4(unsigned int a1)
{
  BOOL v1 = a1 - 101 < 9 || a1 - 201 < 3;
  return a1 < 0x11 || v1;
}

uint64_t sub_118D0CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = (uint64_t)sub_162819C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

BOOL sub_118D15C(unsigned int a1)
{
  return a1 < 5;
}

BOOL sub_118D168(unsigned int a1)
{
  return a1 < 3;
}

void *sub_118D174(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_118D1E8(void *a1)
{
  sub_118D174(a1);

  operator delete();
}

uint64_t sub_118D220(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x1F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_118D248(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v39 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v39 + 1;
    unsigned int v9 = *v39;
    if (*v39 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v39, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v39 + 2;
      }
    }
    unsigned int v39 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_34;
        }
        v5 |= 1u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          unsigned int v39 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_41;
        }
        uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v13);
        unsigned int v39 = v29;
        *(_DWORD *)(a1 + 24) = v30;
        if (v29) {
          goto LABEL_41;
        }
        goto LABEL_56;
      case 2u:
        if (v9 != 16) {
          goto LABEL_34;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          unsigned int v31 = (char *)sub_188C0D0((uint64_t)v8, v16);
          unsigned int v39 = v31;
          *(_DWORD *)(a1 + 28) = v32;
          if (!v31) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          unsigned int v39 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_41;
      case 3u:
        if (v9 != 24) {
          goto LABEL_34;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v33 = (char *)sub_188C0D0((uint64_t)v8, v19);
          unsigned int v39 = v33;
          *(_DWORD *)(a1 + 32) = v34;
          if (!v33) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          unsigned int v39 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 32) {
          goto LABEL_34;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v35 = (char *)sub_188C0D0((uint64_t)v8, v22);
          unsigned int v39 = v35;
          *(_DWORD *)(a1 + 36) = v36;
          if (!v35) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          unsigned int v39 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_41;
      case 5u:
        if (v9 != 40) {
          goto LABEL_34;
        }
        v5 |= 0x10u;
        uint64_t v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v37 = (char *)sub_188C0D0((uint64_t)v8, v25);
          unsigned int v39 = v37;
          *(_DWORD *)(a1 + 40) = v38;
          if (!v37) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          unsigned int v39 = v24;
          *(_DWORD *)(a1 + 40) = v25;
        }
        goto LABEL_41;
      default:
LABEL_34:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v39;
          }
          unsigned int v39 = (char *)sub_1885AC0(v9, v28, v8, a3);
          if (!v39) {
            goto LABEL_56;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_56:
        }
          unsigned int v39 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v39;
    }
  }
}

unsigned char *sub_118D580(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    *int v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 40);
    *int v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    int v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    int v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_118D898(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_10:
      if ((v1 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0) {
LABEL_11:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_12:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_118D9C0(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_13:
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
LABEL_8:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_9:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_118DA44()
{
  return 1;
}

void *sub_118DA4C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.TrafficTileRequest");
}

void *sub_118DA5C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_118DAD0(void *a1)
{
  sub_118DA5C(a1);

  operator delete();
}

uint64_t sub_118DB08(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_118DB30(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v23 + 2;
      }
    }
    int v23 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_21;
        }
        v5 |= 1u;
        unsigned int v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v13 = v8 + 2;
LABEL_13:
          int v23 = v13;
          *(_DWORD *)(a1 + 24) = v12;
          goto LABEL_28;
        }
        unsigned int v21 = (char *)sub_188C138((uint64_t)v8, v12);
        int v23 = v21;
        *(_DWORD *)(a1 + 24) = v22;
        if (v21) {
          goto LABEL_28;
        }
        goto LABEL_35;
      case 2u:
        if (v9 != 21) {
          goto LABEL_21;
        }
        int v16 = *(_DWORD *)v8;
        unsigned int v15 = v8 + 4;
        v5 |= 2u;
        *(_DWORD *)(a1 + 28) = v16;
        goto LABEL_20;
      case 3u:
        if (v9 != 25) {
          goto LABEL_21;
        }
        uint64_t v17 = *(void *)v8;
        unsigned int v15 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 32) = v17;
        goto LABEL_20;
      case 4u:
        if (v9 != 33) {
          goto LABEL_21;
        }
        uint64_t v18 = *(void *)v8;
        unsigned int v15 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 40) = v18;
LABEL_20:
        int v23 = v15;
        goto LABEL_28;
      default:
LABEL_21:
        if (v9) {
          BOOL v19 = (v9 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v7)
          {
            unsigned int v20 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v23;
          }
          int v23 = (char *)sub_1885AC0(v9, v20, v8, a3);
          if (!v23) {
            goto LABEL_35;
          }
LABEL_28:
          if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_35:
        }
          int v23 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v23;
    }
  }
}

unsigned char *sub_118DD48(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v10 = *(_DWORD *)(a1 + 28);
    *int v4 = 21;
    *(_DWORD *)(v4 + 1) = v10;
    v4 += 5;
    if ((v6 & 4) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 32);
  *int v4 = 25;
  *(void *)(v4 + 1) = v11;
  v4 += 9;
  if ((v6 & 8) != 0)
  {
LABEL_18:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v12 = *(void *)(a1 + 40);
    *int v4 = 33;
    *(void *)(v4 + 1) = v12;
    v4 += 9;
  }
LABEL_21:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_118DF24(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) != 0)
  {
    if (v1)
    {
      int v4 = *(_DWORD *)(a1 + 24);
      if (v4 < 0) {
        uint64_t v2 = 11;
      }
      else {
        uint64_t v2 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      uint64_t v3 = v2 + 9;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v3 += v8;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_118DFCC(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_12:
      result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
  if ((v2 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
LABEL_7:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_8:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_118E040()
{
  return 1;
}

void *sub_118E048@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.TrafficMapMatchRequest");
}

uint64_t sub_118E058(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_2497660;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_118E0D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24976E0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

uint64_t sub_118E154(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_118E1FC(uint64_t a1)
{
  sub_118E154(a1);

  operator delete();
}

uint64_t sub_118E234(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
  if ((v3 & 0xE) != 0)
  {
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_118E2C4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v9 = (char *)(*(void *)v41 + 1);
    unsigned int v10 = **(unsigned char **)v41;
    if ((char)**(unsigned char **)v41 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        unint64_t v9 = (char *)sub_188C180(*(uint64_t *)v41, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unint64_t v9 = (char *)(*(void *)v41 + 2);
      }
    }
    *(void *)uint64_t v41 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_40;
        }
        v5 |= 4u;
        uint64_t v13 = v9 + 1;
        int v14 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          uint64_t v13 = v9 + 2;
LABEL_13:
          *(void *)uint64_t v41 = v13;
          *(_DWORD *)(a1 + 64) = v14;
          goto LABEL_48;
        }
        uint64_t v35 = sub_188C0D0((uint64_t)v9, v14);
        *(void *)uint64_t v41 = v35;
        *(_DWORD *)(a1 + 64) = v36;
        if (v35) {
          goto LABEL_48;
        }
        goto LABEL_59;
      case 2u:
        if (v10 != 16) {
          goto LABEL_40;
        }
        v5 |= 2u;
        int v16 = v9 + 1;
        uint64_t v17 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v37 = sub_188C138((uint64_t)v9, v17);
          *(void *)uint64_t v41 = v37;
          *(void *)(a1 + 56) = v38;
          if (!v37) {
            goto LABEL_59;
          }
        }
        else
        {
          int v16 = v9 + 2;
LABEL_18:
          *(void *)uint64_t v41 = v16;
          *(void *)(a1 + 56) = v17;
        }
        goto LABEL_48;
      case 3u:
        if (v10 != 24) {
          goto LABEL_40;
        }
        v5 |= 8u;
        BOOL v19 = v9 + 1;
        int v20 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v39 = sub_188C0D0((uint64_t)v9, v20);
          *(void *)uint64_t v41 = v39;
          *(_DWORD *)(a1 + 68) = v40;
          if (!v39) {
            goto LABEL_59;
          }
        }
        else
        {
          BOOL v19 = v9 + 2;
LABEL_23:
          *(void *)uint64_t v41 = v19;
          *(_DWORD *)(a1 + 68) = v20;
        }
        goto LABEL_48;
      case 4u:
        if (v10 != 34) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 8);
        int v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          int v23 = (uint64_t *)*v23;
        }
        unint64_t v24 = (std::string *)sub_1880F84((void *)(a1 + 48), v23);
        int v25 = (void *)sub_188C244(v24, *(char **)v41, (uint64_t)a3);
        goto LABEL_47;
      case 5u:
        if (v10 != 42) {
          goto LABEL_40;
        }
        uint64_t v26 = v9 - 1;
        while (1)
        {
          uint64_t v27 = (char *)(v26 + 1);
          *(void *)uint64_t v41 = v26 + 1;
          uint64_t v28 = *(_DWORD **)(a1 + 40);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 32), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 32) = v29 + 1;
            int v30 = *(std::string **)&v28[2 * v29 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *int v32 = v31;
            v32[1] = sub_3A6EDC;
            *unsigned int v31 = 0;
            v31[1] = 0;
            v31[2] = 0;
            int v30 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v31);
            uint64_t v27 = *(char **)v41;
          }
          uint64_t v26 = sub_188C244(v30, v27, (uint64_t)a3);
          *(void *)uint64_t v41 = v26;
          if (!v26) {
            goto LABEL_59;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 42) {
            goto LABEL_48;
          }
        }
      default:
LABEL_40:
        if (v10) {
          BOOL v33 = (v10 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v8)
          {
            int v34 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v9 = *(char **)v41;
          }
          int v25 = sub_1885AC0(v10, v34, v9, a3);
LABEL_47:
          *(void *)uint64_t v41 = v25;
          if (!v25) {
            goto LABEL_59;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_59:
        }
          *(void *)uint64_t v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v41;
    }
  }
}

char *sub_118E670(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 64);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 56);
    *unint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 68);
    *unint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 32);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 8 * v16;
    do
    {
      BOOL v19 = *(void **)(*(void *)(a1 + 40) + v17 + 8);
      if (*((char *)v19 + 23) < 0)
      {
        int64_t v20 = v19[1];
        if (v20 > 127) {
          goto LABEL_35;
        }
      }
      else
      {
        int64_t v20 = *((unsigned __int8 *)v19 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v20)
      {
        *unint64_t v4 = 42;
        v4[1] = v20;
        if (*((char *)v19 + 23) < 0) {
          BOOL v19 = (void *)*v19;
        }
        int v21 = v4 + 2;
        memcpy(v21, v19, v20);
        unint64_t v4 = &v21[v20];
        goto LABEL_33;
      }
LABEL_35:
      unint64_t v4 = (char *)sub_188A868(a3, 5, (uint64_t)v19, v4);
LABEL_33:
      v17 += 8;
    }
    while (v18 != v17);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    int v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    int v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_118E970(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 0xF) == 0) {
    goto LABEL_14;
  }
  if ((v7 & 1) == 0)
  {
    if ((v7 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_19:
    v3 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v7 & 4) == 0)
    {
LABEL_12:
      if ((v7 & 8) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    goto LABEL_20;
  }
  unint64_t v10 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
  uint64_t v12 = *(void *)(v10 + 8);
  if ((v11 & 0x80u) == 0) {
    uint64_t v12 = v11;
  }
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 2) != 0) {
    goto LABEL_19;
  }
LABEL_11:
  if ((v7 & 4) == 0) {
    goto LABEL_12;
  }
LABEL_20:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 8) != 0) {
LABEL_13:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v13 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_118EADC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_19;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
      goto LABEL_10;
    }
LABEL_19:
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_118EC2C()
{
  return 1;
}

void *sub_118EC34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.ParsedVectorRequest.TileStoreKeyProto");
}

uint64_t sub_118EC44(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if ((uint64_t (***)())a1 != &off_252C0D0)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_118E154(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_118ED48(uint64_t a1)
{
  sub_118EC44(a1);

  operator delete();
}

uint64_t sub_118ED80(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_19:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_23;
    }
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_23:
  unint64_t v8 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v8 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v3 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t result = sub_118E234(*(void *)(a1 + 72));
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  if ((v3 & 8) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  if ((v3 & 0xF0) != 0)
  {
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
  }
  if ((v3 & 0xF00) != 0)
  {
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
    *(void *)(a1 + 112) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_118EEA8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v71 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v71, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  unint64_t v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    int v9 = (unsigned __int8 *)(*(void *)v71 + 1);
    unsigned int v10 = **(unsigned char **)v71;
    if ((char)**(unsigned char **)v71 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v71, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (unsigned __int8 *)(*(void *)v71 + 2);
      }
    }
    *(void *)uint64_t v71 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_80;
        }
        v5 |= 0x10u;
        unint64_t v13 = (char *)(v9 + 1);
        int v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          unint64_t v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)uint64_t v71 = v13;
          *(_DWORD *)(a1 + 80) = v14;
          goto LABEL_88;
        }
        uint64_t v55 = sub_188C0D0((uint64_t)v9, v14);
        *(void *)uint64_t v71 = v55;
        *(_DWORD *)(a1 + 80) = v56;
        if (v55) {
          goto LABEL_88;
        }
        goto LABEL_109;
      case 2u:
        if (v10 != 16) {
          goto LABEL_80;
        }
        v5 |= 0x20u;
        uint64_t v16 = (char *)(v9 + 1);
        int v17 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v57 = sub_188C0D0((uint64_t)v9, v17);
          *(void *)uint64_t v71 = v57;
          *(_DWORD *)(a1 + 84) = v58;
          if (!v57) {
            goto LABEL_109;
          }
        }
        else
        {
          uint64_t v16 = (char *)(v9 + 2);
LABEL_18:
          *(void *)uint64_t v71 = v16;
          *(_DWORD *)(a1 + 84) = v17;
        }
        goto LABEL_88;
      case 4u:
        if (v10 != 32) {
          goto LABEL_80;
        }
        v5 |= 0x40u;
        BOOL v19 = (char *)(v9 + 1);
        int v20 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v59 = sub_188C0D0((uint64_t)v9, v20);
          *(void *)uint64_t v71 = v59;
          *(_DWORD *)(a1 + 88) = v60;
          if (!v59) {
            goto LABEL_109;
          }
        }
        else
        {
          BOOL v19 = (char *)(v9 + 2);
LABEL_23:
          *(void *)uint64_t v71 = v19;
          *(_DWORD *)(a1 + 88) = v20;
        }
        goto LABEL_88;
      case 5u:
        if (v10 != 40) {
          goto LABEL_80;
        }
        v5 |= 0x80u;
        uint64_t v22 = (char *)(v9 + 1);
        int v23 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v61 = sub_188C0D0((uint64_t)v9, v23);
          *(void *)uint64_t v71 = v61;
          *(_DWORD *)(a1 + 92) = v62;
          if (!v61) {
            goto LABEL_109;
          }
        }
        else
        {
          uint64_t v22 = (char *)(v9 + 2);
LABEL_28:
          *(void *)uint64_t v71 = v22;
          *(_DWORD *)(a1 + 92) = v23;
        }
        goto LABEL_88;
      case 6u:
        if (v10 != 48) {
          goto LABEL_80;
        }
        v5 |= 0x100u;
        int v25 = (char *)(v9 + 1);
        int v26 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v27 = *v25;
        int v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v63 = sub_188C0D0((uint64_t)v9, v26);
          *(void *)uint64_t v71 = v63;
          *(_DWORD *)(a1 + 96) = v64;
          if (!v63) {
            goto LABEL_109;
          }
        }
        else
        {
          int v25 = (char *)(v9 + 2);
LABEL_33:
          *(void *)uint64_t v71 = v25;
          *(_DWORD *)(a1 + 96) = v26;
        }
        goto LABEL_88;
      case 7u:
        if (v10 != 56) {
          goto LABEL_80;
        }
        v5 |= 0x200u;
        uint64_t v28 = (char *)(v9 + 1);
        int v29 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v65 = sub_188C0D0((uint64_t)v9, v29);
          *(void *)uint64_t v71 = v65;
          *(_DWORD *)(a1 + 100) = v66;
          if (!v65) {
            goto LABEL_109;
          }
        }
        else
        {
          uint64_t v28 = (char *)(v9 + 2);
LABEL_38:
          *(void *)uint64_t v71 = v28;
          *(_DWORD *)(a1 + 100) = v29;
        }
        goto LABEL_88;
      case 9u:
        if (v10 != 72) {
          goto LABEL_80;
        }
        v5 |= 0x400u;
        unsigned int v31 = (char *)(v9 + 1);
        int v32 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v33 = *v31;
        int v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v67 = sub_188C0D0((uint64_t)v9, v32);
          *(void *)uint64_t v71 = v67;
          *(_DWORD *)(a1 + 104) = v68;
          if (!v67) {
            goto LABEL_109;
          }
        }
        else
        {
          unsigned int v31 = (char *)(v9 + 2);
LABEL_43:
          *(void *)uint64_t v71 = v31;
          *(_DWORD *)(a1 + 104) = v32;
        }
        goto LABEL_88;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v34 = *(void *)(a1 + 8);
        uint64_t v35 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
        if (v34) {
          uint64_t v35 = (uint64_t *)*v35;
        }
        int v36 = (void *)(a1 + 48);
        goto LABEL_68;
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_80;
        }
        uint64_t v37 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v38 = (char *)(v37 + 1);
          *(void *)uint64_t v71 = v37 + 1;
          uint64_t v39 = *(_DWORD **)(a1 + 40);
          if (v39 && (uint64_t v40 = *(int *)(a1 + 32), (int)v40 < *v39))
          {
            *(_DWORD *)(a1 + 32) = v40 + 1;
            uint64_t v41 = *(std::string **)&v39[2 * v40 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v43 = v42;
            v43[1] = sub_3A6EDC;
            void *v42 = 0;
            v42[1] = 0;
            int v42[2] = 0;
            uint64_t v41 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v42);
            uint64_t v38 = *(char **)v71;
          }
          uint64_t v37 = sub_188C244(v41, v38, (uint64_t)a3);
          *(void *)uint64_t v71 = v37;
          if (!v37) {
            goto LABEL_109;
          }
          if (*(void *)a3 <= (unint64_t)v37 || *v37 != 98) {
            goto LABEL_88;
          }
        }
      case 0xDu:
        if (v10 != 106) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v44 = *(void *)(a1 + 8);
        uint64_t v35 = (uint64_t *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
        if (v44) {
          uint64_t v35 = (uint64_t *)*v35;
        }
        int v36 = (void *)(a1 + 56);
        goto LABEL_68;
      case 0xEu:
        if (v10 != 114) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v45 = *(void *)(a1 + 8);
        uint64_t v35 = (uint64_t *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
        if (v45) {
          uint64_t v35 = (uint64_t *)*v35;
        }
        int v36 = (void *)(a1 + 64);
LABEL_68:
        uint64_t v46 = (std::string *)sub_1880F84(v36, v35);
        uint64_t v47 = (uint64_t)sub_188C244(v46, *(char **)v71, (uint64_t)a3);
        goto LABEL_87;
      case 0xFu:
        if (v10 != 120) {
          goto LABEL_80;
        }
        v5 |= 0x800u;
        uint64_t v48 = (char *)(v9 + 1);
        uint64_t v49 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_73;
        }
        int v50 = *v48;
        uint64_t v49 = v49 + (v50 << 7) - 128;
        if (v50 < 0)
        {
          uint64_t v69 = sub_188C138((uint64_t)v9, v49);
          *(void *)uint64_t v71 = v69;
          *(void *)(a1 + 112) = v70;
          if (!v69) {
            goto LABEL_109;
          }
        }
        else
        {
          uint64_t v48 = (char *)(v9 + 2);
LABEL_73:
          *(void *)uint64_t v71 = v48;
          *(void *)(a1 + 112) = v49;
        }
        goto LABEL_88;
      case 0x10u:
        if (v10 != 130) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        unsigned int v51 = *(void **)(a1 + 72);
        if (!v51)
        {
          uint64_t v52 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v52 = (void *)*v52;
          }
          unsigned int v51 = sub_1191088((uint64_t)v52);
          *(void *)(a1 + 72) = v51;
          int v9 = *(unsigned __int8 **)v71;
        }
        uint64_t v47 = sub_118F514(a3, (uint64_t)v51, v9);
        goto LABEL_87;
      default:
LABEL_80:
        if (v10) {
          BOOL v53 = (v10 & 7) == 4;
        }
        else {
          BOOL v53 = 1;
        }
        if (!v53)
        {
          if (*v7)
          {
            unsigned int v54 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v54 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(unsigned __int8 **)v71;
          }
          uint64_t v47 = (uint64_t)sub_1885AC0(v10, v54, (char *)v9, a3);
LABEL_87:
          *(void *)uint64_t v71 = v47;
          if (!v47) {
            goto LABEL_109;
          }
LABEL_88:
          if (sub_11947B8((uint64_t)a3, (char **)v71, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_109:
        }
          *(void *)uint64_t v71 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v71;
    }
  }
}

uint64_t sub_118F514(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_118E2C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_118F5A4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 80);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 84);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 88);
    *uint64_t v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 92);
    *uint64_t v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 96);
    *uint64_t v4 = 48;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 100);
    *uint64_t v4 = 56;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 104);
    *uint64_t v4 = 72;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v28 = *(unsigned int *)(a1 + 32);
  if ((int)v28 >= 1)
  {
    uint64_t v29 = 0;
    uint64_t v30 = 8 * v28;
    do
    {
      unsigned int v31 = *(void **)(*(void *)(a1 + 40) + v29 + 8);
      if (*((char *)v31 + 23) < 0)
      {
        int64_t v32 = v31[1];
        if (v32 > 127) {
          goto LABEL_63;
        }
      }
      else
      {
        int64_t v32 = *((unsigned __int8 *)v31 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v32)
      {
        *uint64_t v4 = 98;
        v4[1] = v32;
        if (*((char *)v31 + 23) < 0) {
          unsigned int v31 = (void *)*v31;
        }
        int v33 = v4 + 2;
        memcpy(v33, v31, v32);
        uint64_t v4 = &v33[v32];
        goto LABEL_61;
      }
LABEL_63:
      uint64_t v4 = (char *)sub_188A868(a3, 12, (uint64_t)v31, v4);
LABEL_61:
      v29 += 8;
    }
    while (v30 != v29);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_66:
      if ((v6 & 0x800) == 0) {
        goto LABEL_76;
      }
      goto LABEL_70;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_66;
  }
  uint64_t v4 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x800) == 0) {
    goto LABEL_76;
  }
LABEL_70:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v34 = *(void *)(a1 + 112);
  *uint64_t v4 = 120;
  v4[1] = v34;
  if (v34 > 0x7F)
  {
    v4[1] = v34 | 0x80;
    unint64_t v35 = v34 >> 7;
    v4[2] = v34 >> 7;
    v4 += 3;
    if (v34 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v36 = v35 >> 14;
        v35 >>= 7;
        *v4++ = v35;
      }
      while (v36);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_76:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v37 = *(void *)(a1 + 72);
    *(_WORD *)uint64_t v4 = 386;
    unsigned int v38 = *(_DWORD *)(v37 + 20);
    v4[2] = v38;
    if (v38 > 0x7F) {
      uint64_t v39 = sub_188A9CC(v38, v4 + 2);
    }
    else {
      uint64_t v39 = v4 + 3;
    }
    uint64_t v4 = sub_118E670(v37, (unint64_t)v39, a3);
  }
  uint64_t v40 = *(void *)(a1 + 8);
  if ((v40 & 1) == 0) {
    return v4;
  }
  unint64_t v42 = v40 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v42 + 31) < 0)
  {
    uint64_t v43 = *(void **)(v42 + 8);
    uint64_t v44 = *(void *)(v42 + 16);
  }
  else
  {
    uint64_t v43 = (void *)(v42 + 8);
    LODWORD(v44) = *(unsigned __int8 *)(v42 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v44)
  {
    uint64_t v45 = (int)v44;
    memcpy(v4, v43, (int)v44);
    v4 += v45;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v43, v44, v4);
}

uint64_t sub_118FBC0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_18;
  }
  if (v8)
  {
    unint64_t v11 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_11:
      if ((v8 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_32;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_11;
  }
  unint64_t v14 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_12:
    if ((v8 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_32:
  unint64_t v17 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_13:
    if ((v8 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v20 = sub_118E970(*(void *)(a1 + 72));
  v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v8 & 0x10) == 0)
  {
LABEL_14:
    if ((v8 & 0x20) == 0) {
      goto LABEL_15;
    }
LABEL_37:
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x40) == 0)
    {
LABEL_16:
      if ((v8 & 0x80) == 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_36:
  v4 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0) {
    goto LABEL_37;
  }
LABEL_15:
  if ((v8 & 0x40) == 0) {
    goto LABEL_16;
  }
LABEL_38:
  v4 += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x80) != 0) {
LABEL_17:
  }
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_18:
  if ((v8 & 0xF00) == 0) {
    goto LABEL_24;
  }
  if ((v8 & 0x100) != 0)
  {
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 96) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x200) == 0)
    {
LABEL_21:
      if ((v8 & 0x400) == 0) {
        goto LABEL_22;
      }
      goto LABEL_42;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  v4 += ((9 * (__clz(*(_DWORD *)(a1 + 100) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x400) == 0)
  {
LABEL_22:
    if ((v8 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
LABEL_42:
  v4 += ((9 * (__clz(*(_DWORD *)(a1 + 104) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x800) != 0) {
LABEL_23:
  }
    v4 += ((9 * (__clz(*(void *)(a1 + 112) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_24:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v21 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v4 += v22;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

std::string *sub_118FEF8(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_32;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    unint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_35;
    }
LABEL_32:
    unint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_43;
    }
LABEL_35:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    data = (std::string *)v3[3].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
      uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        uint64_t v22 = (void *)*v22;
      }
      data = (std::string *)sub_1191088((uint64_t)v22);
      v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 72)) {
      unsigned int v23 = *(uint64_t (****)(uint64_t))(a2 + 72);
    }
    else {
      unsigned int v23 = &off_252C088;
    }
    uint64_t result = sub_118EADC(data, (uint64_t)v23);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_44;
    }
LABEL_43:
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_45;
    }
LABEL_44:
    HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      HIDWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 92);
      goto LABEL_14;
    }
LABEL_45:
    LODWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0xF00) == 0) {
    goto LABEL_22;
  }
  if ((v9 & 0x100) != 0)
  {
    LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
    if ((v9 & 0x200) == 0)
    {
LABEL_18:
      if ((v9 & 0x400) == 0) {
        goto LABEL_19;
      }
LABEL_49:
      LODWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 104);
      if ((v9 & 0x800) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  HIDWORD(v3[4].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 100);
  if ((v9 & 0x400) != 0) {
    goto LABEL_49;
  }
LABEL_19:
  if ((v9 & 0x800) != 0) {
LABEL_20:
  }
    v3[4].__r_.__value_.__r.__words[2] = *(void *)(a2 + 112);
LABEL_21:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
LABEL_22:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_119016C()
{
  return 1;
}

void *sub_1190174@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.ParsedVectorRequest");
}

void *sub_1190184(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11901F8(void *a1)
{
  sub_1190184(a1);

  operator delete();
}

uint64_t sub_1190230(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1190254(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v25 + 2;
      }
    }
    unsigned int v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    std::string::size_type v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      std::string::size_type v15 = v8 + 2;
LABEL_25:
      unsigned int v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    std::string::size_type v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    unsigned int v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    std::string::size_type v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      std::string::size_type v18 = v8 + 2;
LABEL_29:
      unsigned int v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    unsigned int v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    unsigned int v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v25;
    }
    unsigned int v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unsigned int v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1190444(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_11905E8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_119068C()
{
  return 1;
}

void *sub_1190694@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.VectorResponse");
}

uint64_t sub_11906A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  unint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1190778(uint64_t a1)
{
  sub_11906A4(a1);

  operator delete();
}

uint64_t sub_11907B0(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 7) != 0)
  {
    if ((v3 & 1) == 0)
    {
      if ((v3 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v3 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v3 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v6 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
LABEL_17:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_11908A8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v28 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    return *(void *)v28;
  }
  unint64_t v6 = (void *)(a1 + 8);
  uint64_t v7 = (uint64_t **)(a1 + 24);
  while (2)
  {
    char v8 = (char *)(*(void *)v28 + 1);
    unsigned int v9 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v28 + 2);
      }
    }
    *(void *)uint64_t v28 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 48);
        goto LABEL_33;
      case 2u:
        if (v9 != 18) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 56);
        goto LABEL_33;
      case 3u:
        if (v9 != 26) {
          goto LABEL_34;
        }
        int v16 = v8 - 1;
        while (1)
        {
          uint64_t v17 = (char *)(v16 + 1);
          *(void *)uint64_t v28 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            int v20 = *(std::string **)&v18[2 * v19 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v22 = v21;
            v22[1] = sub_3A6EDC;
            void *v21 = 0;
            v21[1] = 0;
            v21[2] = 0;
            int v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
            uint64_t v17 = *(char **)v28;
          }
          int v16 = sub_188C244(v20, v17, (uint64_t)a3);
          *(void *)uint64_t v28 = v16;
          if (!v16) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_42;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 64);
LABEL_33:
        int v24 = (std::string *)sub_1880F84(v14, v13);
        unsigned int v25 = (void *)sub_188C244(v24, *(char **)v28, (uint64_t)a3);
        goto LABEL_41;
      default:
LABEL_34:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v6)
          {
            unsigned int v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(char **)v28;
          }
          unsigned int v25 = sub_1885AC0(v9, v27, v8, a3);
LABEL_41:
          *(void *)uint64_t v28 = v25;
          if (!v25) {
            return 0;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
            return *(void *)v28;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v28;
    }
  }
}

char *sub_1190BA4(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 32);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      unsigned int v10 = *(void **)(*(void *)(a1 + 40) + v8 + 8);
      if (*((char *)v10 + 23) < 0)
      {
        int64_t v11 = v10[1];
        if (v11 > 127) {
          goto LABEL_16;
        }
      }
      else
      {
        int64_t v11 = *((unsigned __int8 *)v10 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v11)
      {
        *unint64_t v4 = 26;
        v4[1] = v11;
        if (*((char *)v10 + 23) < 0) {
          unsigned int v10 = (void *)*v10;
        }
        uint64_t v12 = v4 + 2;
        memcpy(v12, v10, v11);
        unint64_t v4 = &v12[v11];
        goto LABEL_14;
      }
LABEL_16:
      unint64_t v4 = (char *)sub_188A868(a3, 3, (uint64_t)v10, v4);
LABEL_14:
      v8 += 8;
    }
    while (v9 != v8);
  }
  if ((v6 & 4) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1190D70(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 7) != 0)
  {
    if (v7)
    {
      unint64_t v13 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v7 & 2) == 0)
      {
LABEL_11:
        if ((v7 & 4) == 0) {
          goto LABEL_15;
        }
        goto LABEL_12;
      }
    }
    else if ((v7 & 2) == 0)
    {
      goto LABEL_11;
    }
    unint64_t v16 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
    uint64_t v18 = *(void *)(v16 + 8);
    if ((v17 & 0x80u) == 0) {
      uint64_t v18 = v17;
    }
    v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 4) != 0)
    {
LABEL_12:
      unint64_t v8 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_15:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v19 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v3 += v20;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1190EEC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_15;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    unint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v13, v15);
    if ((v9 & 4) != 0)
    {
LABEL_15:
      unint64_t v16 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
      std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v16, v18);
    }
  }
LABEL_18:
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1191070()
{
  return 1;
}

void *sub_1191078@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.RawVectorRequest");
}

void *sub_1191088(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_2497760;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[7] = 0;
  result[8] = 0;
  result[6] = &qword_2550250;
  return result;
}

double sub_1191130(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24977E0;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = &qword_2550250;
  *(void *)(v2 + 56) = &qword_2550250;
  *(void *)(v2 + 64) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  return result;
}

void *sub_11911E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_2497860;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_1191260(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_24978E0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = &qword_2550250;
  return result;
}

void *sub_1191308(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1191398((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1195110(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1191398(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t v2 = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  double result = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252C1B0)
  {
    if (*(void *)(a1 + 104))
    {
      sub_14985FC();
      operator delete();
    }
    if (*(void *)(a1 + 112))
    {
      sub_149CEF4();
      operator delete();
    }
    if (*(void *)(a1 + 120))
    {
      sub_149724C();
      operator delete();
    }
    if (*(void *)(a1 + 128))
    {
      sub_1495E9C();
      operator delete();
    }
    if (*(void *)(a1 + 136))
    {
      sub_13059CC();
      operator delete();
    }
    if (*(void *)(a1 + 144))
    {
      sub_149A81C();
      operator delete();
    }
    double result = *(void ****)(a1 + 152);
    if (result)
    {
      sub_1494B40();
      operator delete();
    }
  }
  return result;
}

void sub_1191554(void *a1)
{
  sub_1191308(a1);

  operator delete();
}

uint64_t sub_119158C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_1495118(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (!(_BYTE)v5) {
    goto LABEL_15;
  }
  if (v5)
  {
    unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_39;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_39;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_43:
    unint64_t v10 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_47;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_47;
      }
    }
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_51:
    unint64_t v12 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v5 & 0x20) != 0) {
        goto LABEL_55;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v5 & 0x20) != 0) {
        goto LABEL_55;
      }
    }
LABEL_12:
    if ((v5 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_59;
  }
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_39:
  unint64_t v9 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v5 & 4) != 0) {
      goto LABEL_43;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v5 & 4) != 0) {
      goto LABEL_43;
    }
  }
LABEL_9:
  if ((v5 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_47:
  unint64_t v11 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v11 + 23) < 0)
  {
    **(unsigned char **)unint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
    if ((v5 & 0x10) != 0) {
      goto LABEL_51;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v5 & 0x10) != 0) {
      goto LABEL_51;
    }
  }
LABEL_11:
  if ((v5 & 0x20) == 0) {
    goto LABEL_12;
  }
LABEL_55:
  unint64_t v13 = *(void *)(v1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v13 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v13 = 0;
    *(unsigned char *)(v13 + 23) = 0;
    if ((v5 & 0x40) != 0) {
      goto LABEL_59;
    }
LABEL_13:
    if ((v5 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  **(unsigned char **)unint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  if ((v5 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_59:
  unint64_t v14 = *(void *)(v1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v14 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v14 = 0;
    *(unsigned char *)(v14 + 23) = 0;
    if ((v5 & 0x80) == 0) {
      goto LABEL_15;
    }
LABEL_14:
    double result = sub_1498638(*(void *)(v1 + 104));
    goto LABEL_15;
  }
  **(unsigned char **)unint64_t v14 = 0;
  *(void *)(v14 + 8) = 0;
  if ((v5 & 0x80) != 0) {
    goto LABEL_14;
  }
LABEL_15:
  if ((v5 & 0x3F00) == 0) {
    goto LABEL_23;
  }
  if ((v5 & 0x100) != 0)
  {
    double result = sub_149CF30(*(void *)(v1 + 112));
    if ((v5 & 0x200) == 0)
    {
LABEL_18:
      if ((v5 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_34;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  double result = sub_1497288(*(void *)(v1 + 120));
  if ((v5 & 0x400) == 0)
  {
LABEL_19:
    if ((v5 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }
LABEL_34:
  double result = sub_1495118(*(void *)(v1 + 128));
  if ((v5 & 0x800) == 0)
  {
LABEL_20:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_36;
  }
LABEL_35:
  double result = (uint64_t)sub_1305A08(*(void *)(v1 + 136));
  if ((v5 & 0x1000) == 0)
  {
LABEL_21:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_36:
  double result = sub_149A858(*(void *)(v1 + 144));
  if ((v5 & 0x2000) != 0) {
LABEL_22:
  }
    double result = sub_1494B7C(*(void *)(v1 + 152));
LABEL_23:
  if ((v5 & 0xC000) != 0)
  {
    *(void *)(v1 + 160) = 0;
    *(void *)(v1 + 168) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(unsigned char *)(v6 + 168) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_119180C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v61 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v61, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v61 + 1);
    unsigned int v9 = **(unsigned char **)v61;
    if ((char)**(unsigned char **)v61 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v61, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v61 + 2);
      }
    }
    *(void *)uint64_t v61 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_108;
        }
        v5 |= 0x4000u;
        unint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v61 = v12;
          *(void *)(a1 + 160) = v13;
          goto LABEL_106;
        }
        uint64_t v55 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v61 = v55;
        *(void *)(a1 + 160) = v56;
        if (v55) {
          goto LABEL_106;
        }
        goto LABEL_124;
      case 2u:
        if (v9 != 16) {
          goto LABEL_108;
        }
        v5 |= 0x8000u;
        uint64_t v15 = (char *)(v8 + 1);
        uint64_t v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v57 = sub_188C138((uint64_t)v8, v16);
          *(void *)uint64_t v61 = v57;
          *(void *)(a1 + 168) = v58;
          if (!v57) {
            goto LABEL_124;
          }
        }
        else
        {
          uint64_t v15 = (char *)(v8 + 2);
LABEL_18:
          *(void *)uint64_t v61 = v15;
          *(void *)(a1 + 168) = v16;
        }
        goto LABEL_106;
      case 3u:
        if (v9 != 26) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v18 = *(void *)(a1 + 104);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_1498C74((uint64_t)v19);
          *(void *)(a1 + 104) = v18;
          unint64_t v8 = *(unsigned __int8 **)v61;
        }
        uint64_t v20 = sub_1191F48(a3, v18, v8);
        goto LABEL_105;
      case 4u:
        if (v9 != 34) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        std::string::size_type v21 = *(void **)(a1 + 112);
        if (!v21)
        {
          int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v22 = (void *)*v22;
          }
          std::string::size_type v21 = sub_149D7A8((uint64_t)v22);
          *(void *)(a1 + 112) = v21;
          unint64_t v8 = *(unsigned __int8 **)v61;
        }
        uint64_t v20 = (uint64_t)sub_1191FD8(a3, (uint64_t)v21, v8);
        goto LABEL_105;
      case 7u:
        if (v9 != 58) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v23 = *(void *)(a1 + 8);
        int v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          int v24 = (uint64_t *)*v24;
        }
        unsigned int v25 = (void *)(a1 + 48);
        goto LABEL_104;
      case 8u:
        if (v9 != 66) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v26 = *(void *)(a1 + 8);
        int v24 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          int v24 = (uint64_t *)*v24;
        }
        unsigned int v25 = (void *)(a1 + 56);
        goto LABEL_104;
      case 9u:
        if (v9 != 74) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v27 = *(void *)(a1 + 8);
        int v24 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          int v24 = (uint64_t *)*v24;
        }
        unsigned int v25 = (void *)(a1 + 64);
        goto LABEL_104;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v28 = *(void *)(a1 + 8);
        int v24 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          int v24 = (uint64_t *)*v24;
        }
        unsigned int v25 = (void *)(a1 + 72);
        goto LABEL_104;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v29 = *(void *)(a1 + 120);
        if (!v29)
        {
          uint64_t v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v30 = (void *)*v30;
          }
          uint64_t v29 = sub_14983FC((uint64_t)v30);
          *(void *)(a1 + 120) = v29;
          unint64_t v8 = *(unsigned __int8 **)v61;
        }
        uint64_t v20 = sub_1192068(a3, v29, v8);
        goto LABEL_105;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v31 = *(void *)(a1 + 128);
        if (!v31)
        {
          int64_t v32 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int64_t v32 = (void *)*v32;
          }
          uint64_t v31 = sub_1497018((uint64_t)v32);
          *(void *)(a1 + 128) = v31;
          unint64_t v8 = *(unsigned __int8 **)v61;
        }
        uint64_t v20 = sub_11920F8(a3, v31, v8);
        goto LABEL_105;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        int v33 = *(void **)(a1 + 136);
        if (!v33)
        {
          unint64_t v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v34 = (void *)*v34;
          }
          int v33 = sub_130645C((uint64_t)v34);
          *(void *)(a1 + 136) = v33;
          unint64_t v8 = *(unsigned __int8 **)v61;
        }
        uint64_t v20 = (uint64_t)sub_1192188(a3, (uint64_t)v33, v8);
        goto LABEL_105;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v35 = *(void *)(a1 + 8);
        int v24 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          int v24 = (uint64_t *)*v24;
        }
        unsigned int v25 = (void *)(a1 + 80);
        goto LABEL_104;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v36 = *(void *)(a1 + 8);
        int v24 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          int v24 = (uint64_t *)*v24;
        }
        unsigned int v25 = (void *)(a1 + 88);
        goto LABEL_104;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v37 = *(void **)(a1 + 144);
        if (!v37)
        {
          unsigned int v38 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v38 = (void *)*v38;
          }
          uint64_t v37 = sub_149B17C((uint64_t)v38);
          *(void *)(a1 + 144) = v37;
          unint64_t v8 = *(unsigned __int8 **)v61;
        }
        uint64_t v20 = sub_1192218(a3, (uint64_t)v37, v8);
        goto LABEL_105;
      case 0x11u:
        if (v9 != 136) {
          goto LABEL_108;
        }
        v5 |= 0x10000u;
        uint64_t v39 = (char *)(v8 + 1);
        uint64_t v40 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_83;
        }
        int v41 = *v39;
        uint64_t v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v59 = sub_188C138((uint64_t)v8, v40);
          *(void *)uint64_t v61 = v59;
          *(unsigned char *)(a1 + 176) = v60 != 0;
          if (!v59) {
            goto LABEL_124;
          }
        }
        else
        {
          uint64_t v39 = (char *)(v8 + 2);
LABEL_83:
          *(void *)uint64_t v61 = v39;
          *(unsigned char *)(a1 + 176) = v40 != 0;
        }
        goto LABEL_106;
      case 0x12u:
        if (v9 != 146) {
          goto LABEL_108;
        }
        unint64_t v42 = v8 - 2;
        while (1)
        {
          uint64_t v43 = v42 + 2;
          *(void *)uint64_t v61 = v42 + 2;
          uint64_t v44 = *(_DWORD **)(a1 + 40);
          if (v44 && (uint64_t v45 = *(int *)(a1 + 32), (int)v45 < *v44))
          {
            *(_DWORD *)(a1 + 32) = v45 + 1;
            uint64_t v46 = *(void *)&v44[2 * v45 + 2];
          }
          else
          {
            uint64_t v47 = sub_1497018(*(void *)(a1 + 24));
            uint64_t v46 = sub_188CDC8(a1 + 24, v47);
            uint64_t v43 = *(unsigned __int8 **)v61;
          }
          unint64_t v42 = (unsigned __int8 *)sub_11920F8(a3, v46, v43);
          *(void *)uint64_t v61 = v42;
          if (!v42) {
            goto LABEL_124;
          }
          if (*(void *)a3 <= (unint64_t)v42 || *(_WORD *)v42 != 402) {
            goto LABEL_106;
          }
        }
      case 0x13u:
        if (v9 != 154) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        uint64_t v48 = *(void *)(a1 + 152);
        if (!v48)
        {
          uint64_t v49 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v49 = (void *)*v49;
          }
          sub_1495098((uint64_t)v49);
          uint64_t v48 = v50;
          *(void *)(a1 + 152) = v50;
          unint64_t v8 = *(unsigned __int8 **)v61;
        }
        uint64_t v20 = (uint64_t)sub_11922A8(a3, v48, v8);
        goto LABEL_105;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v51 = *(void *)(a1 + 8);
        int v24 = (uint64_t *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
        if (v51) {
          int v24 = (uint64_t *)*v24;
        }
        unsigned int v25 = (void *)(a1 + 96);
LABEL_104:
        uint64_t v52 = (std::string *)sub_1880F84(v25, v24);
        uint64_t v20 = (uint64_t)sub_188C244(v52, *(char **)v61, (uint64_t)a3);
        goto LABEL_105;
      default:
LABEL_108:
        if (v9) {
          BOOL v53 = (v9 & 7) == 4;
        }
        else {
          BOOL v53 = 1;
        }
        if (!v53)
        {
          if (*v7)
          {
            unsigned int v54 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v54 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v61;
          }
          uint64_t v20 = (uint64_t)sub_1885AC0(v9, v54, (char *)v8, a3);
LABEL_105:
          *(void *)uint64_t v61 = v20;
          if (!v20) {
            goto LABEL_124;
          }
LABEL_106:
          if (sub_11947B8((uint64_t)a3, (char **)v61, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_124:
        }
          *(void *)uint64_t v61 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v61;
    }
  }
}

uint64_t sub_1191F48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14986F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1191FD8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_149CFA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1192068(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1497418(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11920F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1495ED8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1192188(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1305A6C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1192218(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_149A8A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11922A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1494BA4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1192338(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 160);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 168);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 104);
    *uint64_t v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_1498978(v13, (unint64_t)v15, a3);
    if ((v6 & 0x100) == 0)
    {
LABEL_17:
      if ((v6 & 1) == 0) {
        goto LABEL_18;
      }
      goto LABEL_41;
    }
  }
  else if ((v6 & 0x100) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 112);
  *uint64_t v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_149D1F0(v16, (unint64_t)v18, a3);
  if ((v6 & 1) == 0)
  {
LABEL_18:
    if ((v6 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_19:
    if ((v6 & 4) == 0) {
      goto LABEL_20;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_20:
    if ((v6 & 8) == 0) {
      goto LABEL_21;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_21:
    if ((v6 & 0x200) == 0) {
      goto LABEL_22;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0)
  {
LABEL_22:
    if ((v6 & 0x400) == 0) {
      goto LABEL_23;
    }
    goto LABEL_51;
  }
LABEL_45:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 120);
  *uint64_t v4 = 90;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    std::string::size_type v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    std::string::size_type v21 = v4 + 2;
  }
  uint64_t v4 = sub_1497858(v19, v21, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_23:
    if ((v6 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_57;
  }
LABEL_51:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 128);
  *uint64_t v4 = 98;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    int v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    int v24 = v4 + 2;
  }
  uint64_t v4 = sub_1496514(v22, v24, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_24:
    if ((v6 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_63;
  }
LABEL_57:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 136);
  *uint64_t v4 = 106;
  unsigned int v26 = *(_DWORD *)(v25 + 44);
  v4[1] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    uint64_t v27 = v4 + 2;
  }
  uint64_t v4 = sub_1305C9C(v25, v27, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_25:
    if ((v6 & 0x20) == 0) {
      goto LABEL_26;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t v4 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_26:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x1000) == 0)
  {
LABEL_27:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_71;
  }
LABEL_65:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 144);
  *(_WORD *)uint64_t v4 = 386;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[2] = v29;
  if (v29 > 0x7F) {
    uint64_t v30 = sub_188A9CC(v29, v4 + 2);
  }
  else {
    uint64_t v30 = v4 + 3;
  }
  uint64_t v4 = sub_149AC44(v28, v30, a3);
  if ((v6 & 0x10000) != 0)
  {
LABEL_71:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v31 = *(unsigned char *)(a1 + 176);
    *(_WORD *)uint64_t v4 = 392;
    v4[2] = v31;
    v4 += 3;
  }
LABEL_74:
  int v32 = *(_DWORD *)(a1 + 32);
  if (v32)
  {
    for (int i = 0; i != v32; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v34 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 402;
      unsigned int v35 = *(_DWORD *)(v34 + 20);
      v4[2] = v35;
      if (v35 > 0x7F) {
        uint64_t v36 = sub_188A9CC(v35, v4 + 2);
      }
      else {
        uint64_t v36 = v4 + 3;
      }
      uint64_t v4 = sub_1496514(v34, v36, a3);
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v37 = *(void *)(a1 + 152);
    *(_WORD *)uint64_t v4 = 410;
    unsigned int v38 = *(_DWORD *)(v37 + 20);
    v4[2] = v38;
    if (v38 > 0x7F) {
      uint64_t v39 = sub_188A9CC(v38, v4 + 2);
    }
    else {
      uint64_t v39 = v4 + 3;
    }
    uint64_t v4 = sub_1494E1C(v37, (unint64_t)v39, a3);
  }
  if ((v6 & 0x40) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 20, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v40 = *(void *)(a1 + 8);
  if ((v40 & 1) == 0) {
    return v4;
  }
  unint64_t v42 = v40 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v42 + 31) < 0)
  {
    uint64_t v43 = *(void **)(v42 + 8);
    uint64_t v44 = *(void *)(v42 + 16);
  }
  else
  {
    uint64_t v43 = (void *)(v42 + 8);
    LODWORD(v44) = *(unsigned __int8 *)(v42 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v44)
  {
    uint64_t v45 = (int)v44;
    memcpy(v4, v43, (int)v44);
    v4 += v45;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v43, v44, v4);
}

unint64_t sub_1192980(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x4000) != 0) {
    unint64_t v3 = ((9 * (__clz(*(void *)(a1 + 160) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  uint64_t v4 = *(int *)(a1 + 32);
  unint64_t v5 = v3 + 2 * v4;
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6) {
    unint64_t v7 = (uint64_t *)(v6 + 8);
  }
  else {
    unint64_t v7 = 0;
  }
  if (v4)
  {
    uint64_t v8 = 8 * v4;
    do
    {
      uint64_t v9 = *v7++;
      uint64_t v10 = sub_1496860(v9);
      v5 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      v8 -= 8;
    }
    while (v8);
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if (!(_BYTE)v2) {
    goto LABEL_21;
  }
  if (v2)
  {
    unint64_t v15 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v5 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0)
    {
LABEL_14:
      if ((v2 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_42;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v18 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v5 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 4) == 0)
  {
LABEL_15:
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_45;
  }
LABEL_42:
  unint64_t v21 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  uint64_t v23 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = v22;
  }
  v5 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) == 0)
  {
LABEL_16:
    if ((v2 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_48;
  }
LABEL_45:
  unint64_t v24 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
  uint64_t v26 = *(void *)(v24 + 8);
  if ((v25 & 0x80u) == 0) {
    uint64_t v26 = v25;
  }
  v5 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_51:
    unint64_t v30 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
    uint64_t v32 = *(void *)(v30 + 8);
    if ((v31 & 0x80u) == 0) {
      uint64_t v32 = v31;
    }
    v5 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x40) == 0)
    {
LABEL_19:
      if ((v2 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_54;
  }
LABEL_48:
  unint64_t v27 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
  uint64_t v29 = *(void *)(v27 + 8);
  if ((v28 & 0x80u) == 0) {
    uint64_t v29 = v28;
  }
  v5 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0) {
    goto LABEL_51;
  }
LABEL_18:
  if ((v2 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_54:
  unint64_t v33 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v34 = *(unsigned __int8 *)(v33 + 23);
  uint64_t v35 = *(void *)(v33 + 8);
  if ((v34 & 0x80u) == 0) {
    uint64_t v35 = v34;
  }
  v5 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x80) != 0)
  {
LABEL_20:
    uint64_t v11 = sub_1498B0C(*(void *)(a1 + 104));
    v5 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_21:
  if ((v2 & 0x3F00) == 0) {
    goto LABEL_29;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v36 = sub_149D370(*(void *)(a1 + 112));
    v5 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_24:
      if ((v2 & 0x400) == 0) {
        goto LABEL_25;
      }
      goto LABEL_60;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v37 = sub_1497A88(*(void *)(a1 + 120));
  v5 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x400) == 0)
  {
LABEL_25:
    if ((v2 & 0x800) == 0) {
      goto LABEL_26;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t v38 = sub_1496860(*(void *)(a1 + 128));
  v5 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x800) == 0)
  {
LABEL_26:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t v39 = sub_1305E64(*(void *)(a1 + 136));
  v5 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x1000) == 0)
  {
LABEL_27:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
LABEL_62:
  uint64_t v40 = sub_149AF00(*(void *)(a1 + 144));
  v5 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x2000) != 0)
  {
LABEL_28:
    uint64_t v12 = sub_1494FC0(*(void *)(a1 + 152));
    v5 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_29:
  if ((v2 & 0x8000) != 0) {
    v5 += ((9 * (__clz(*(void *)(a1 + 168) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if ((v2 & 0x10000) != 0) {
    unint64_t result = v5 + 3;
  }
  else {
    unint64_t result = v5;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v41 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v41 + 31) < 0) {
      uint64_t v42 = *(void *)(v41 + 16);
    }
    else {
      uint64_t v42 = *(unsigned __int8 *)(v41 + 31);
    }
    result += v42;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1192E00(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    unint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1195190((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v9) {
    goto LABEL_43;
  }
  if (v9)
  {
    uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), v10, v12);
    if ((v9 & 2) == 0)
    {
LABEL_7:
      if ((v9 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v14 = *(void *)(a1 + 8);
  unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
  if (v14) {
    unint64_t v15 = (uint64_t *)*v15;
  }
  sub_1881DF4((std::string **)(a1 + 56), v13, v15);
  if ((v9 & 4) == 0)
  {
LABEL_8:
    if ((v9 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v16 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v17 = *(void *)(a1 + 8);
  unint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
  if (v17) {
    unint64_t v18 = (uint64_t *)*v18;
  }
  sub_1881DF4((std::string **)(a1 + 64), v16, v18);
  if ((v9 & 8) == 0)
  {
LABEL_9:
    if ((v9 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v19 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v20 = *(void *)(a1 + 8);
  unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
  if (v20) {
    unint64_t v21 = (uint64_t *)*v21;
  }
  sub_1881DF4((std::string **)(a1 + 72), v19, v21);
  if ((v9 & 0x10) == 0)
  {
LABEL_10:
    if ((v9 & 0x20) == 0) {
      goto LABEL_11;
    }
LABEL_29:
    uint64_t v25 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v26 = *(void *)(a1 + 8);
    unint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      unint64_t v27 = (uint64_t *)*v27;
    }
    sub_1881DF4((std::string **)(a1 + 88), v25, v27);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0) {
        goto LABEL_43;
      }
      goto LABEL_35;
    }
    goto LABEL_32;
  }
LABEL_26:
  uint64_t v22 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v23 = *(void *)(a1 + 8);
  unint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
  if (v23) {
    unint64_t v24 = (uint64_t *)*v24;
  }
  sub_1881DF4((std::string **)(a1 + 80), v22, v24);
  if ((v9 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_11:
  if ((v9 & 0x40) == 0) {
    goto LABEL_12;
  }
LABEL_32:
  uint64_t v28 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v29 = *(void *)(a1 + 8);
  unint64_t v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
  if (v29) {
    unint64_t v30 = (uint64_t *)*v30;
  }
  sub_1881DF4((std::string **)(a1 + 96), v28, v30);
  if ((v9 & 0x80) != 0)
  {
LABEL_35:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v31 = *(std::string **)(a1 + 104);
    if (!v31)
    {
      uint64_t v32 = *(void *)(a1 + 8);
      unint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        unint64_t v33 = (void *)*v33;
      }
      uint64_t v31 = (std::string *)sub_1498C74((uint64_t)v33);
      *(void *)(a1 + 104) = v31;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v34 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v34 = &off_253A138;
    }
    sub_12C8C1C(v31, (uint64_t)v34);
  }
LABEL_43:
  if ((v9 & 0xFF00) == 0) {
    goto LABEL_54;
  }
  if ((v9 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v37 = *(std::string **)(a1 + 112);
    if (!v37)
    {
      uint64_t v38 = *(void *)(a1 + 8);
      uint64_t v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
      if (v38) {
        uint64_t v39 = (void *)*v39;
      }
      uint64_t v37 = (std::string *)sub_149D7A8((uint64_t)v39);
      *(void *)(a1 + 112) = v37;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v40 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v40 = &off_253A2C8;
    }
    sub_149D448(v37, (uint64_t)v40);
    if ((v9 & 0x200) == 0)
    {
LABEL_46:
      if ((v9 & 0x400) == 0) {
        goto LABEL_47;
      }
      goto LABEL_76;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_46;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  unint64_t v41 = *(std::string **)(a1 + 120);
  if (!v41)
  {
    uint64_t v42 = *(void *)(a1 + 8);
    uint64_t v43 = (void *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
    if (v42) {
      uint64_t v43 = (void *)*v43;
    }
    unint64_t v41 = (std::string *)sub_14983FC((uint64_t)v43);
    *(void *)(a1 + 120) = v41;
  }
  if (*(void *)(a2 + 120)) {
    uint64_t v44 = *(uint64_t (****)())(a2 + 120);
  }
  else {
    uint64_t v44 = &off_253A0D8;
  }
  sub_1497CB8(v41, (uint64_t)v44);
  if ((v9 & 0x400) == 0)
  {
LABEL_47:
    if ((v9 & 0x800) == 0) {
      goto LABEL_48;
    }
    goto LABEL_84;
  }
LABEL_76:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v45 = *(std::string **)(a1 + 128);
  if (!v45)
  {
    uint64_t v46 = *(void *)(a1 + 8);
    uint64_t v47 = (void *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
    if (v46) {
      uint64_t v47 = (void *)*v47;
    }
    uint64_t v45 = (std::string *)sub_1497018((uint64_t)v47);
    *(void *)(a1 + 128) = v45;
  }
  if (*(void *)(a2 + 128)) {
    uint64_t v48 = *(uint64_t (****)())(a2 + 128);
  }
  else {
    uint64_t v48 = &off_253A070;
  }
  sub_1495A3C(v45, (uint64_t)v48);
  if ((v9 & 0x800) == 0)
  {
LABEL_48:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_92;
  }
LABEL_84:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v49 = *(void **)(a1 + 136);
  if (!v49)
  {
    uint64_t v50 = *(void *)(a1 + 8);
    uint64_t v51 = (void *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
    if (v50) {
      uint64_t v51 = (void *)*v51;
    }
    uint64_t v49 = sub_130645C((uint64_t)v51);
    *(void *)(a1 + 136) = v49;
  }
  if (*(void *)(a2 + 136)) {
    uint64_t v52 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    uint64_t v52 = &off_2532480;
  }
  sub_1305F18((uint64_t)v49, (uint64_t)v52);
  if ((v9 & 0x1000) == 0)
  {
LABEL_49:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_100;
  }
LABEL_92:
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  BOOL v53 = *(std::string **)(a1 + 144);
  if (!v53)
  {
    uint64_t v54 = *(void *)(a1 + 8);
    uint64_t v55 = (void *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
    if (v54) {
      uint64_t v55 = (void *)*v55;
    }
    BOOL v53 = (std::string *)sub_149B17C((uint64_t)v55);
    *(void *)(a1 + 144) = v53;
  }
  if (*(void *)(a2 + 144)) {
    uint64_t v56 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    uint64_t v56 = &off_253A200;
  }
  sub_149B074(v53, (uint64_t)v56);
  if ((v9 & 0x2000) == 0)
  {
LABEL_50:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_51;
    }
LABEL_108:
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    if ((v9 & 0x8000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_52;
  }
LABEL_100:
  *(_DWORD *)(a1 + 16) |= 0x2000u;
  uint64_t v57 = *(std::string **)(a1 + 152);
  if (!v57)
  {
    uint64_t v58 = *(void *)(a1 + 8);
    uint64_t v59 = (void *)(v58 & 0xFFFFFFFFFFFFFFFCLL);
    if (v58) {
      uint64_t v59 = (void *)*v59;
    }
    sub_1495098((uint64_t)v59);
    *(void *)(a1 + 152) = v57;
  }
  if (*(void *)(a2 + 152)) {
    uint64_t v60 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    uint64_t v60 = &off_253A018;
  }
  sub_117EF04(v57, (uint64_t)v60);
  if ((v9 & 0x4000) != 0) {
    goto LABEL_108;
  }
LABEL_51:
  if ((v9 & 0x8000) != 0) {
LABEL_52:
  }
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
LABEL_53:
  *(_DWORD *)(a1 + 16) |= v9;
LABEL_54:
  if ((v9 & 0x10000) != 0)
  {
    char v35 = *(unsigned char *)(a2 + 176);
    *(_DWORD *)(a1 + 16) |= 0x10000u;
    *(unsigned char *)(a1 + 176) = v35;
  }
  uint64_t v36 = *(void *)(a2 + 8);
  if (v36)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v36 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11932E0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x4000) == 0) {
    return 0;
  }
  if ((v1 & 0x100) != 0)
  {
    uint64_t result = sub_149D54C(*(void *)(a1 + 112));
    if (!result) {
      return result;
    }
    int v1 = *(_DWORD *)(a1 + 16);
  }
  if ((v1 & 0x800) == 0) {
    return 1;
  }
  uint64_t result = sub_1305FA8(*(void *)(a1 + 136));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1193338@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.RequestLogMetaData");
}

void *sub_1193348(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = &off_24979E0;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  return a1;
}

void sub_11933AC(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_11933DC(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252C268)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_1191308(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_119349C(uint64_t a1)
{
  sub_11933DC(a1);

  operator delete();
}

uint64_t sub_11934D4(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_119158C(*(void *)(a1 + 48));
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1193538(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
    return v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v17 + 1;
    unsigned int v7 = *v17;
    if (*v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v17 + 2;
      }
    }
    uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v12 = *(void *)(a1 + 48);
    if (!v12)
    {
      uint64_t v13 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v13 = (void *)*v13;
      }
      sub_1193A40((uint64_t)v13);
      uint64_t v12 = v14;
      *(void *)(a1 + 48) = v14;
      uint64_t v6 = v17;
    }
    uint64_t v11 = (char *)sub_11936CC(a3, v12, (unsigned __int8 *)v6);
LABEL_22:
    uint64_t v17 = v11;
    if (!v11) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
      return v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (v7 >> 7 < 0x271)
    {
      if (*v5)
      {
        unint64_t v15 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = v17;
      }
      uint64_t v11 = (char *)sub_1885AC0(v7, v15, v6, a3);
    }
    else
    {
      uint64_t v11 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_252C268, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_22;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v17;
  }
  return 0;
}

uint64_t sub_11936CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_119180C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_119375C(uint64_t a1, char *a2, unint64_t *a3)
{
  char v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    *char v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    char v4 = sub_1192338(v6, (unint64_t)v8, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 10000, 0x20000000, v4, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1193890(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v3 = sub_1192980(*(void *)(a1 + 48));
    v2 += v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v2 += v7;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_1193924(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = *(void *)(a1 + 48);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      sub_1193A40((uint64_t)v7);
      *(void *)(a1 + 48) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 48);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_252C1B0;
    }
    sub_1192E00(v5, (uint64_t)v8);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11939D8(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16) || (*(unsigned char *)(a1 + 40) & 1) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 48);

  return sub_11932E0(v3);
}

void *sub_1193A30@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.RequestLogRecord");
}

double sub_1193A40(uint64_t a1)
{
  if (!a1)
  {
    sub_119521C();
  }
  *(void *)uint64_t v3 = &off_2497960;
  *(void *)(v3 + 8) = a1;
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = &qword_2550250;
  *(void *)(v3 + 56) = &qword_2550250;
  *(void *)(v3 + 64) = &qword_2550250;
  *(void *)(v3 + 72) = &qword_2550250;
  *(void *)(v3 + 80) = &qword_2550250;
  *(void *)(v3 + 88) = &qword_2550250;
  *(void *)(v3 + 96) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_OWORD *)(v3 + 136) = 0u;
  *(_OWORD *)(v3 + 152) = 0u;
  *(_OWORD *)(v3 + 161) = 0u;
  return result;
}

void *sub_1193AD8(uint64_t a1)
{
  if (!a1)
  {
    sub_1195298();
  }

  return sub_1193348(v3, a1, 0);
}

void sub_1193B34()
{
}

double sub_1193BB0(uint64_t a1, uint64_t a2)
{
  return sub_1193A40(a2);
}

uint64_t sub_1193BB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1193BC0()
{
}

void sub_1193C08()
{
}

void *sub_1193C2C(uint64_t a1, uint64_t a2)
{
  return sub_1193AD8(a2);
}

uint64_t sub_1193C34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1193C3C()
{
}

double sub_1193CBC(uint64_t a1, uint64_t a2)
{
  return sub_1184344(a2);
}

uint64_t sub_1193CC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1193CCC()
{
}

uint64_t sub_1193D30(uint64_t a1, uint64_t a2)
{
  return sub_1184428(a2);
}

uint64_t sub_1193D38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1193D40()
{
}

uint64_t sub_1193DA0(uint64_t a1, uint64_t a2)
{
  return sub_11844E4(a2);
}

uint64_t sub_1193DA8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1193DB0()
{
}

uint64_t sub_1193E14(uint64_t a1, uint64_t a2)
{
  return sub_118459C(a2);
}

uint64_t sub_1193E1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1193E24()
{
}

uint64_t sub_1193E80(uint64_t a1, uint64_t a2)
{
  return sub_1184648(a2);
}

uint64_t sub_1193E88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1193E90()
{
}

double sub_1193EEC(uint64_t a1, uint64_t a2)
{
  return sub_11846D0(a2);
}

uint64_t sub_1193EF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1193EFC()
{
}

void *sub_1193F48(uint64_t a1, uint64_t a2)
{
  return sub_1184758(a2);
}

uint64_t sub_1193F50(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1193F58()
{
}

uint64_t sub_1193FA8(uint64_t a1, uint64_t a2)
{
  return sub_11847D0(a2);
}

uint64_t sub_1193FB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1193FB8()
{
}

double sub_1194014(uint64_t a1, uint64_t a2)
{
  return sub_118484C(a2);
}

uint64_t sub_119401C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1194024()
{
}

uint64_t sub_1194080(uint64_t a1, uint64_t a2)
{
  return sub_11848D4(a2);
}

uint64_t sub_1194088(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1194090()
{
}

uint64_t sub_1194100(uint64_t a1, uint64_t a2)
{
  return sub_118495C(a2);
}

uint64_t sub_1194108(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1194110()
{
}

double sub_1194168(uint64_t a1, uint64_t a2)
{
  return sub_1184A1C(a2);
}

uint64_t sub_1194170(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1194178()
{
}

uint64_t sub_11941CC(uint64_t a1, uint64_t a2)
{
  return sub_1187034(a2);
}

uint64_t sub_11941D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_11941DC()
{
}

void *sub_119424C(uint64_t a1, uint64_t a2)
{
  return sub_11870D4(a2);
}

uint64_t sub_1194254(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_119425C()
{
}

void *sub_11942B8(uint64_t a1, uint64_t a2)
{
  return sub_11871AC(a2);
}

uint64_t sub_11942C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11942C8()
{
}

double sub_1194328(uint64_t a1, uint64_t a2)
{
  return sub_118954C(a2);
}

uint64_t sub_1194330(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1194338()
{
}

double sub_119438C(uint64_t a1, uint64_t a2)
{
  return sub_1189618(a2);
}

uint64_t sub_1194394(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_119439C()
{
}

double sub_1194400(uint64_t a1, uint64_t a2)
{
  return sub_118ABD0(a2);
}

uint64_t sub_1194408(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1194410()
{
}

void *sub_119445C(uint64_t a1, uint64_t a2)
{
  return sub_118AC60(a2);
}

uint64_t sub_1194464(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_119446C()
{
}

double sub_11944D0(uint64_t a1, uint64_t a2)
{
  return sub_118CFD4(a2);
}

uint64_t sub_11944D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11944E0()
{
}

uint64_t sub_1194534(uint64_t a1, uint64_t a2)
{
  return sub_118E058(a2);
}

uint64_t sub_119453C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1194544()
{
}

double sub_1194594(uint64_t a1, uint64_t a2)
{
  return sub_118E0D8(a2);
}

uint64_t sub_119459C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11945A4()
{
}

void *sub_1194604(uint64_t a1, uint64_t a2)
{
  return sub_1191088(a2);
}

uint64_t sub_119460C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1194614()
{
}

double sub_1194680(uint64_t a1, uint64_t a2)
{
  return sub_1191130(a2);
}

uint64_t sub_1194688(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1194690()
{
}

void *sub_11946DC(uint64_t a1, uint64_t a2)
{
  return sub_11911E8(a2);
}

uint64_t sub_11946E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11946EC()
{
}

void *sub_119474C(uint64_t a1, uint64_t a2)
{
  return sub_1191260(a2);
}

uint64_t sub_1194754(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t *sub_119475C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((*a1 & 2) != 0)
  {
    uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
    if (v2)
    {
      if (*v3)
      {
LABEL_4:
        sub_1881618();
        operator delete();
      }
    }
    else if (v3)
    {
      goto LABEL_4;
    }
  }
  return a1;
}

uint64_t sub_11947B8(uint64_t a1, char **a2, int a3)
{
  if ((unint64_t)*a2 < *(void *)a1) {
    return 0;
  }
  int v5 = *a2 - *(_DWORD *)(a1 + 8);
  if (*(_DWORD *)(a1 + 28) == v5)
  {
    if (v5 >= 1 && !*(void *)(a1 + 16)) {
      *a2 = 0;
    }
    return 1;
  }
  else
  {
    *a2 = sub_188BB90(a1, v5, a3);
    return v6 & 1;
  }
}

void sub_119482C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1181FF4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11948AC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11818F0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_119492C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_117B1D0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11949AC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_117BE04(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1194A2C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_117D470(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1194AAC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_117C884(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_1194B2C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    BOOL v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_118495C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_1194BA8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1194BA8(uint64_t a1, std::string *a2)
{
  return sub_1182CB4(a2, a1);
}

uint64_t *sub_1194BB8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    BOOL v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_11848D4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_1194C34(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1194C34(uint64_t a1, std::string *a2)
{
  return sub_1181F0C(a2, a1);
}

uint64_t *sub_1194C44(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    BOOL v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_1184428(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_1194CC0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1194CC0(uint64_t a1, std::string *a2)
{
  return sub_117BC58(a2, a1);
}

uint64_t *sub_1194CD0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    BOOL v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_11844E4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_1194D4C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1194D4C(uint64_t a1, std::string *a2)
{
  return sub_117C728(a2, a1);
}

uint64_t *sub_1194D5C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    BOOL v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_1184648(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_1194DD8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1194DD8(uint64_t a1, std::string *a2)
{
  return sub_117DA78(a2, a1);
}

uint64_t *sub_1194DE8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    BOOL v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_118459C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_1194E64(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1194E64(uint64_t a1, std::string *a2)
{
  return sub_117D2C0(a2, a1);
}

void sub_1194E74(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11850E0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1194EF4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1186910(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_1194F74(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    BOOL v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_11870D4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_1194FF0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1194FF0(uint64_t a1, std::string *a2)
{
  return sub_11865A4(a2, a1);
}

std::string *sub_1195000(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    BOOL v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_11871AC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_119507C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_119507C(uint64_t a1, std::string *a2)
{
  return sub_1186F14(a2, a1);
}

__n128 sub_119508C(void *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v9;
  uint64_t v10 = a1[8];
  uint64_t v11 = a1[9];
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  *(void *)(a2 + 64) = v10;
  *(void *)(a2 + 72) = v11;
  uint64_t v12 = a1[10];
  uint64_t v13 = a1[11];
  *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = v13;
  uint64_t v14 = a1[12];
  uint64_t v15 = a1[13];
  *((_OWORD *)a1 + 6) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v14;
  *(void *)(a2 + 104) = v15;
  uint64_t v16 = a1[14];
  uint64_t v17 = a1[15];
  __n128 result = *(__n128 *)(a2 + 112);
  *((__n128 *)a1 + 7) = result;
  *(void *)(a2 + 112) = v16;
  *(void *)(a2 + 120) = v17;
  return result;
}

void sub_1195110(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1495E9C();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_1195190(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_1497018(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_119520C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_119520C(uint64_t a1, std::string *a2)
{
  return sub_1495A3C(a2, a1);
}

void sub_119521C()
{
}

void sub_1195298()
{
}

void sub_11952E0()
{
}

void sub_1195304()
{
  dword_254E550 = 18601;
  qword_254E558 = (uint64_t)&off_254CA18;
  sub_1882AC4((unint64_t)&off_252C268, 18601, 11, 0, 0, (uint64_t)&off_254CA18);
  dword_254E560 = 18602;
  qword_254E568 = (uint64_t)&off_254CB28;
  sub_1882AC4((unint64_t)&off_252C268, 18602, 11, 0, 0, (uint64_t)&off_254CB28);
  dword_254E570 = 18603;
  qword_254E578 = (uint64_t)&off_253D7B0;
  sub_1882AC4((unint64_t)&off_252C268, 18603, 11, 1, 0, (uint64_t)&off_253D7B0);
  dword_254E580 = 18001;
  qword_254E588 = (uint64_t)&off_254CA18;
  sub_1882AC4((unint64_t)&off_252C268, 18001, 11, 0, 0, (uint64_t)&off_254CA18);
  dword_254E590 = 18002;
  qword_254E598 = (uint64_t)&off_254CB28;
  sub_1882AC4((unint64_t)&off_252C268, 18002, 11, 0, 0, (uint64_t)&off_254CB28);
  dword_254E5A0 = 18003;
  qword_254E5A8 = (uint64_t)&off_2536FB0;
  sub_1882AC4((unint64_t)&off_252C268, 18003, 11, 0, 0, (uint64_t)&off_2536FB0);
  dword_254E5B0 = 18004;
  qword_254E5B8 = (uint64_t)&off_2537290;
  sub_1882AC4((unint64_t)&off_252C268, 18004, 11, 0, 0, (uint64_t)&off_2537290);
  dword_254E5C0 = 18005;
  qword_254E5C8 = (uint64_t)&off_2541B28;
  sub_1882AC4((unint64_t)&off_252C268, 18005, 11, 0, 0, (uint64_t)&off_2541B28);
  dword_254E5D0 = 18006;
  qword_254E5D8 = (uint64_t)&off_2541D38;
  sub_1882AC4((unint64_t)&off_252C268, 18006, 11, 0, 0, (uint64_t)&off_2541D38);
  dword_254E5E0 = 18007;
  qword_254E5E8 = (uint64_t)&off_2536D08;
  sub_1882AC4((unint64_t)&off_252C268, 18007, 11, 0, 0, (uint64_t)&off_2536D08);
  dword_254E5F0 = 18008;
  qword_254E5F8 = (uint64_t)&off_2536EB0;
  sub_1882AC4((unint64_t)&off_252C268, 18008, 11, 0, 0, (uint64_t)&off_2536EB0);
  dword_254E600 = 18009;
  qword_254E608 = (uint64_t)&off_2534020;
  sub_1882AC4((unint64_t)&off_252C268, 18009, 11, 0, 0, (uint64_t)&off_2534020);
  dword_254E610 = 18010;
  qword_254E618 = (uint64_t)&off_25340E0;
  sub_1882AC4((unint64_t)&off_252C268, 18010, 11, 0, 0, (uint64_t)&off_25340E0);
  dword_254E620 = 14001;
  qword_254E628 = (uint64_t)&off_252BBA0;
  sub_1882AC4((unint64_t)&off_252C268, 14001, 11, 1, 0, (uint64_t)&off_252BBA0);
  dword_254E630 = 18301;
  qword_254E638 = (uint64_t)&off_253F530;
  sub_1882AC4((unint64_t)&off_252C268, 18301, 11, 0, 0, (uint64_t)&off_253F530);
  dword_254E640 = 18302;
  qword_254E648 = (uint64_t)&off_2539528;
  sub_1882AC4((unint64_t)&off_252C268, 18302, 11, 0, 0, (uint64_t)&off_2539528);
  dword_254E650 = 18305;
  qword_254E658 = (uint64_t)&off_254CA18;
  sub_1882AC4((unint64_t)&off_252C268, 18305, 11, 0, 0, (uint64_t)&off_254CA18);
  dword_254E660 = 18303;
  qword_254E668 = (uint64_t)&off_25398D0;
  sub_1882AC4((unint64_t)&off_252C268, 18303, 11, 0, 0, (uint64_t)&off_25398D0);
  dword_254E670 = 18306;
  qword_254E678 = (uint64_t)&off_254CB28;
  sub_1882AC4((unint64_t)&off_252C268, 18306, 11, 0, 0, (uint64_t)&off_254CB28);
  dword_254E680 = 18304;
  qword_254E688 = (uint64_t)&off_252BE08;
  sub_1882AC4((unint64_t)&off_252C268, 18304, 11, 0, 0, (uint64_t)&off_252BE08);
  dword_254E690 = 18307;
  qword_254E698 = (uint64_t)&off_253A350;
  sub_1882AC4((unint64_t)&off_252C268, 18307, 11, 0, 0, (uint64_t)&off_253A350);
  dword_254E6A0 = 18308;
  qword_254E6A8 = (uint64_t)&off_253A2F0;
  sub_1882AC4((unint64_t)&off_252C268, 18308, 11, 0, 0, (uint64_t)&off_253A2F0);
  dword_254E6B0 = 16001;
  qword_254E6B8 = (uint64_t)&off_252BE38;
  sub_1882AC4((unint64_t)&off_252C268, 16001, 11, 0, 0, (uint64_t)&off_252BE38);
  dword_254E6C0 = 16002;
  qword_254E6C8 = (uint64_t)&off_252BED8;
  sub_1882AC4((unint64_t)&off_252C268, 16002, 11, 0, 0, (uint64_t)&off_252BED8);
  dword_254E6D0 = 13100;
  qword_254E6D8 = (uint64_t)&off_254CA18;
  sub_1882AC4((unint64_t)&off_252C268, 13100, 11, 0, 0, (uint64_t)&off_254CA18);
  dword_254E6E0 = 13101;
  qword_254E6E8 = (uint64_t)&off_254CB28;
  sub_1882AC4((unint64_t)&off_252C268, 13101, 11, 0, 0, (uint64_t)&off_254CB28);
  dword_254E6F0 = 18101;
  qword_254E6F8 = (uint64_t)&off_254CA18;
  sub_1882AC4((unint64_t)&off_252C268, 18101, 11, 0, 0, (uint64_t)&off_254CA18);
  dword_254E700 = 18102;
  qword_254E708 = (uint64_t)&off_254CB28;
  sub_1882AC4((unint64_t)&off_252C268, 18102, 11, 0, 0, (uint64_t)&off_254CB28);
  dword_254E710 = 12001;
  qword_254E718 = (uint64_t)&off_252BF18;
  sub_1882AC4((unint64_t)&off_252C268, 12001, 11, 0, 0, (uint64_t)&off_252BF18);
  dword_254E720 = 12002;
  qword_254E728 = (uint64_t)&off_252BF60;
  sub_1882AC4((unint64_t)&off_252C268, 12002, 11, 0, 0, (uint64_t)&off_252BF60);
  dword_254E730 = 10001;
  qword_254E738 = (uint64_t)&off_252BF80;
  sub_1882AC4((unint64_t)&off_252C268, 10001, 11, 1, 0, (uint64_t)&off_252BF80);
  dword_254E740 = 11001;
  qword_254E748 = (uint64_t)&off_2541B28;
  sub_1882AC4((unint64_t)&off_252C268, 11001, 11, 0, 0, (uint64_t)&off_2541B28);
  dword_254E750 = 11002;
  qword_254E758 = (uint64_t)&off_2541D38;
  sub_1882AC4((unint64_t)&off_252C268, 11002, 11, 0, 0, (uint64_t)&off_2541D38);
  dword_254E760 = 11003;
  qword_254E768 = (uint64_t)&unk_21361A8;
  sub_1882224((unint64_t)&off_252C268, 11003, 9, 0, 0);
  qword_254E770 = 11004;
  sub_18829C0((unint64_t)&off_252C268, 11004, 14, 0, 0, (uint64_t)sub_118D0A4);
  dword_254E778 = 11031;
  qword_254E780 = (uint64_t)&off_2536FB0;
  sub_1882AC4((unint64_t)&off_252C268, 11031, 11, 0, 0, (uint64_t)&off_2536FB0);
  dword_254E788 = 11032;
  qword_254E790 = (uint64_t)&off_2537290;
  sub_1882AC4((unint64_t)&off_252C268, 11032, 11, 0, 0, (uint64_t)&off_2537290);
  dword_254E798 = 11033;
  qword_254E7A0 = (uint64_t)&unk_21361C0;
  sub_1882224((unint64_t)&off_252C268, 11033, 9, 0, 0);
  qword_254E7A8 = 11034;
  sub_18829C0((unint64_t)&off_252C268, 11034, 14, 0, 0, (uint64_t)sub_118D0A4);
  dword_254E7B0 = 11021;
  qword_254E7B8 = (uint64_t)&off_2536D08;
  sub_1882AC4((unint64_t)&off_252C268, 11021, 11, 0, 0, (uint64_t)&off_2536D08);
  dword_254E7C0 = 11022;
  qword_254E7C8 = (uint64_t)&off_2536EB0;
  sub_1882AC4((unint64_t)&off_252C268, 11022, 11, 0, 0, (uint64_t)&off_2536EB0);
  dword_254E7D0 = 11023;
  qword_254E7D8 = (uint64_t)&unk_21361D8;
  sub_1882224((unint64_t)&off_252C268, 11023, 9, 0, 0);
  qword_254E7E0 = 11024;
  sub_18829C0((unint64_t)&off_252C268, 11024, 14, 0, 0, (uint64_t)sub_118D0A4);
  dword_254E7E8 = 11041;
  qword_254E7F0 = (uint64_t)&off_2534020;
  sub_1882AC4((unint64_t)&off_252C268, 11041, 11, 0, 0, (uint64_t)&off_2534020);
  dword_254E7F8 = 11042;
  qword_254E800 = (uint64_t)&off_25340E0;
  sub_1882AC4((unint64_t)&off_252C268, 11042, 11, 0, 0, (uint64_t)&off_25340E0);
  dword_254E808 = 11051;
  qword_254E810 = (uint64_t)&off_252D508;
  sub_1882AC4((unint64_t)&off_252C268, 11051, 11, 0, 0, (uint64_t)&off_252D508);
  dword_254E818 = 11052;
  qword_254E820 = (uint64_t)&off_252D5C8;
  sub_1882AC4((unint64_t)&off_252C268, 11052, 11, 0, 0, (uint64_t)&off_252D5C8);
  dword_254E828 = 15001;
  qword_254E830 = (uint64_t)&off_253F530;
  sub_1882AC4((unint64_t)&off_252C268, 15001, 11, 0, 0, (uint64_t)&off_253F530);
  dword_254E838 = 15002;
  qword_254E840 = (uint64_t)&off_2539528;
  sub_1882AC4((unint64_t)&off_252C268, 15002, 11, 0, 0, (uint64_t)&off_2539528);
  dword_254E848 = 15003;
  qword_254E850 = (uint64_t)&off_2537338;
  sub_1882AC4((unint64_t)&off_252C268, 15003, 11, 0, 0, (uint64_t)&off_2537338);
  dword_254E858 = 15005;
  qword_254E860 = (uint64_t)&off_254CA18;
  sub_1882AC4((unint64_t)&off_252C268, 15005, 11, 0, 0, (uint64_t)&off_254CA18);
  dword_254E868 = 15004;
  qword_254E870 = (uint64_t)&off_25398D0;
  sub_1882AC4((unint64_t)&off_252C268, 15004, 11, 0, 0, (uint64_t)&off_25398D0);
  dword_254E878 = 15006;
  qword_254E880 = (uint64_t)&off_254CB28;
  sub_1882AC4((unint64_t)&off_252C268, 15006, 11, 0, 0, (uint64_t)&off_254CB28);
  dword_254E888 = 15100;
  qword_254E890 = (uint64_t)&off_253BE50;
  sub_1882AC4((unint64_t)&off_252C268, 15100, 11, 0, 0, (uint64_t)&off_253BE50);
  dword_254E898 = 15101;
  qword_254E8A0 = (uint64_t)&off_252E660;
  sub_1882AC4((unint64_t)&off_252C268, 15101, 11, 0, 0, (uint64_t)&off_252E660);
  dword_254E8A8 = 15102;
  qword_254E8B0 = (uint64_t)&off_253A320;
  sub_1882AC4((unint64_t)&off_252C268, 15102, 11, 0, 0, (uint64_t)&off_253A320);
  dword_254E8B8 = 15103;
  qword_254E8C0 = (uint64_t)&off_253A2F0;
  sub_1882AC4((unint64_t)&off_252C268, 15103, 11, 0, 0, (uint64_t)&off_253A2F0);
  dword_254E8C8 = 18200;
  qword_254E8D0 = (uint64_t)&off_254CA18;
  sub_1882AC4((unint64_t)&off_252C268, 18200, 11, 0, 0, (uint64_t)&off_254CA18);
  dword_254E8D8 = 18201;
  qword_254E8E0 = (uint64_t)&off_254CB28;
  sub_1882AC4((unint64_t)&off_252C268, 18201, 11, 0, 0, (uint64_t)&off_254CB28);
  qword_254E8E8 = 18202;
  sub_18829C0((unint64_t)&off_252C268, 18202, 14, 0, 0, (uint64_t)sub_118D15C);
  qword_254E8F0 = 18203;
  sub_18829C0((unint64_t)&off_252C268, 18203, 14, 0, 0, (uint64_t)sub_118D168);
  dword_254E8F8 = 18204;
  byte_254E8FC = 0;
  sub_1882224((unint64_t)&off_252C268, 18204, 8, 0, 0);
  dword_254E900 = 18205;
  qword_254E908 = 0;
  sub_1882224((unint64_t)&off_252C268, 18205, 4, 0, 0);
  dword_254E910 = 18206;
  qword_254E918 = (uint64_t)&unk_21361F0;
  sub_1882224((unint64_t)&off_252C268, 18206, 9, 0, 0);
  dword_254E920 = 18207;
  qword_254E928 = (uint64_t)&off_253A2F0;
  sub_1882AC4((unint64_t)&off_252C268, 18207, 11, 0, 0, (uint64_t)&off_253A2F0);
  dword_254E930 = 13001;
  qword_254E938 = (uint64_t)&off_252C028;
  sub_1882AC4((unint64_t)&off_252C268, 13001, 11, 0, 0, (uint64_t)&off_252C028);
  dword_254E940 = 13002;
  qword_254E948 = (uint64_t)&off_252C058;
  sub_1882AC4((unint64_t)&off_252C268, 13002, 11, 1, 0, (uint64_t)&off_252C058);
  dword_254E950 = 18501;
  qword_254E958 = (uint64_t)&off_252C0D0;
  sub_1882AC4((unint64_t)&off_252C268, 18501, 11, 0, 0, (uint64_t)&off_252C0D0);
  dword_254E960 = 18502;
  qword_254E968 = (uint64_t)&off_252C148;
  sub_1882AC4((unint64_t)&off_252C268, 18502, 11, 0, 0, (uint64_t)&off_252C148);
  dword_254E970 = 18503;
  qword_254E978 = (uint64_t)&off_252C168;

  sub_1882AC4((unint64_t)&off_252C268, 18503, 11, 0, 0, (uint64_t)&off_252C168);
}

uint64_t sub_1196150()
{
  qword_25FE628 = (uint64_t)"ERR_DECODER_FAILEDERR_ENGINE_FAILEDERR_ENGINE_NO_RESULTERR_ETA_INV_REROUTE_FAILEDERR_ETA_MULT"
                           "CONNERR_GEOHASH_FAILEDERR_INTERNAL_ERRORERR_INVALID_ATTRIBUTESERR_INVALID_ETA_ATTRIBUTESERR_L"
                           "ONG_WALKING_ROUTESERR_OTHER_DIR_FAILUREERR_OTHER_ETA_FAILUREERR_OUT_OF_TRANSIT_COVERAGEERR_OU"
                           "T_OF_TRANSIT_DATA_VALIDITY_PERIODERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_"
                           "FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO"
                           "_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VA"
                           "LIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE630 = 18;
  dword_25FE638 = 6;
  qword_25FE640 = (uint64_t)"ERR_ENGINE_FAILEDERR_ENGINE_NO_RESULTERR_ETA_INV_REROUTE_FAILEDERR_ETA_MULTCONNERR_GEOHASH_FAILEDERR_INTERNAL_ERRORERR_INVALID_ATTRIBUTESERR_INVALID_ETA_ATTRIBUTESERR_LONG_WALKING_ROUTESERR_OTHER_DIR_FAILUREERR_OTHER_ETA_FAILUREERR_OUT_OF_TRANSIT_COVERAGEERR_OUT_OF_TRANSIT_DATA_VALIDITY_PERIODERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE648 = 17;
  dword_25FE650 = 5;
  qword_25FE658 = (uint64_t)"ERR_ENGINE_NO_RESULTERR_ETA_INV_REROUTE_FAILEDERR_ETA_MULTCONNERR_GEOHASH_FAILEDERR_INTERNAL_ERRORERR_INVALID_ATTRIBUTESERR_INVALID_ETA_ATTRIBUTESERR_LONG_WALKING_ROUTESERR_OTHER_DIR_FAILUREERR_OTHER_ETA_FAILUREERR_OUT_OF_TRANSIT_COVERAGEERR_OUT_OF_TRANSIT_DATA_VALIDITY_PERIODERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE660 = 20;
  dword_25FE668 = 103;
  qword_25FE670 = (uint64_t)"ERR_ETA_INV_REROUTE_FAILEDERR_ETA_MULTCONNERR_GEOHASH_FAILEDERR_INTERNAL_ERRORERR_INVALID_ATTRIBUTESERR_INVALID_ETA_ATTRIBUTESERR_LONG_WALKING_ROUTESERR_OTHER_DIR_FAILUREERR_OTHER_ETA_FAILUREERR_OUT_OF_TRANSIT_COVERAGEERR_OUT_OF_TRANSIT_DATA_VALIDITY_PERIODERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE678 = 26;
  dword_25FE680 = 11;
  qword_25FE688 = (uint64_t)"ERR_ETA_MULTCONNERR_GEOHASH_FAILEDERR_INTERNAL_ERRORERR_INVALID_ATTRIBUTESERR_INVALID_ETA_ATTRIBUTESERR_LONG_WALKING_ROUTESERR_OTHER_DIR_FAILUREERR_OTHER_ETA_FAILUREERR_OUT_OF_TRANSIT_COVERAGEERR_OUT_OF_TRANSIT_DATA_VALIDITY_PERIODERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE690 = 16;
  dword_25FE698 = 12;
  qword_25FE6A0 = (uint64_t)"ERR_GEOHASH_FAILEDERR_INTERNAL_ERRORERR_INVALID_ATTRIBUTESERR_INVALID_ETA_ATTRIBUTESERR_LONG_WALKING_ROUTESERR_OTHER_DIR_FAILUREERR_OTHER_ETA_FAILUREERR_OUT_OF_TRANSIT_COVERAGEERR_OUT_OF_TRANSIT_DATA_VALIDITY_PERIODERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE6A8 = 18;
  dword_25FE6B0 = 7;
  qword_25FE6B8 = (uint64_t)"ERR_INTERNAL_ERRORERR_INVALID_ATTRIBUTESERR_INVALID_ETA_ATTRIBUTESERR_LONG_WALKING_ROUTESERR_OTHER_DIR_FAILUREERR_OTHER_ETA_FAILUREERR_OUT_OF_TRANSIT_COVERAGEERR_OUT_OF_TRANSIT_DATA_VALIDITY_PERIODERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE6C0 = 18;
  dword_25FE6C8 = 10;
  qword_25FE6D0 = (uint64_t)"ERR_INVALID_ATTRIBUTESERR_INVALID_ETA_ATTRIBUTESERR_LONG_WALKING_ROUTESERR_OTHER_DIR_FAILUREERR_OTHER_ETA_FAILUREERR_OUT_OF_TRANSIT_COVERAGEERR_OUT_OF_TRANSIT_DATA_VALIDITY_PERIODERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE6D8 = 22;
  dword_25FE6E0 = 202;
  qword_25FE6E8 = (uint64_t)"ERR_INVALID_ETA_ATTRIBUTESERR_LONG_WALKING_ROUTESERR_OTHER_DIR_FAILUREERR_OTHER_ETA_FAILUREERR_OUT_OF_TRANSIT_COVERAGEERR_OUT_OF_TRANSIT_DATA_VALIDITY_PERIODERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE6F0 = 26;
  dword_25FE6F8 = 201;
  qword_25FE700 = (uint64_t)"ERR_LONG_WALKING_ROUTESERR_OTHER_DIR_FAILUREERR_OTHER_ETA_FAILUREERR_OUT_OF_TRANSIT_COVERAGEERR_OUT_OF_TRANSIT_DATA_VALIDITY_PERIODERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE708 = 23;
  dword_25FE710 = 104;
  qword_25FE718 = (uint64_t)"ERR_OTHER_DIR_FAILUREERR_OTHER_ETA_FAILUREERR_OUT_OF_TRANSIT_COVERAGEERR_OUT_OF_TRANSIT_DATA_VALIDITY_PERIODERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE720 = 21;
  dword_25FE728 = 8;
  qword_25FE730 = (uint64_t)"ERR_OTHER_ETA_FAILUREERR_OUT_OF_TRANSIT_COVERAGEERR_OUT_OF_TRANSIT_DATA_VALIDITY_PERIODERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE738 = 21;
  dword_25FE740 = 9;
  qword_25FE748 = (uint64_t)"ERR_OUT_OF_TRANSIT_COVERAGEERR_OUT_OF_TRANSIT_DATA_VALIDITY_PERIODERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE750 = 27;
  dword_25FE758 = 107;
  qword_25FE760 = (uint64_t)"ERR_OUT_OF_TRANSIT_DATA_VALIDITY_PERIODERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE768 = 39;
  dword_25FE770 = 108;
  qword_25FE778 = (uint64_t)"ERR_PARSING_FAILUREERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE780 = 19;
  dword_25FE788 = 203;
  qword_25FE790 = (uint64_t)"ERR_PARTITIONING_NO_RESULTERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE798 = 26;
  dword_25FE7A0 = 102;
  qword_25FE7A8 = (uint64_t)"ERR_PROCESSING_FAILEDERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE7B0 = 21;
  dword_25FE7B8 = 14;
  qword_25FE7C0 = (uint64_t)"ERR_QUEUE_TO_WORKERS_FULLERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE7C8 = 25;
  dword_25FE7D0 = 16;
  qword_25FE7D8 = (uint64_t)"ERR_ROUTE_USES_HARD_BLOCKED_ROADERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE7E0 = 32;
  dword_25FE7E8 = 106;
  qword_25FE7F0 = (uint64_t)"ERR_SEARCH_FAILEDERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE7F8 = 17;
  uint64_t result = 2;
  dword_25FE800 = 2;
  qword_25FE808 = (uint64_t)"ERR_SEARCH_NO_RESULTERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE810 = 20;
  dword_25FE818 = 101;
  qword_25FE820 = (uint64_t)"ERR_SNAP_NO_RESULTERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  unk_25FE828 = 18;
  dword_25FE830 = 105;
  qword_25FE838 = (uint64_t)"ERR_STALE_REQUESTERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  qword_25FE840 = 17;
  dword_25FE848 = 1;
  qword_25FE850 = (uint64_t)"ERR_STALE_REQUEST_IN_WORKERERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  qword_25FE858 = 27;
  dword_25FE860 = 15;
  qword_25FE868 = (uint64_t)"ERR_TRAFFIC_NO_LONGER_VALIDERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  qword_25FE870 = 27;
  dword_25FE878 = 109;
  qword_25FE880 = (uint64_t)"ERR_UNKNOWNERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  qword_25FE888 = 11;
  dword_25FE890 = 0;
  qword_25FE898 = (uint64_t)"ERR_WORKERS_UNAVAILERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  qword_25FE8A0 = 19;
  dword_25FE8A8 = 13;
  qword_25FE8B0 = (uint64_t)"ERR_WORKER_CRASHERR_ZILCH_DECODING_FAILED";
  qword_25FE8B8 = 16;
  dword_25FE8C0 = 3;
  qword_25FE8C8 = (uint64_t)"ERR_ZILCH_DECODING_FAILED";
  qword_25FE8D0 = 25;
  dword_25FE8D8 = 4;
  qword_25FE8E0 = (uint64_t)"GENERIC_ERRSOME_ERR";
  *(void *)algn_25FE8E8 = 11;
  dword_25FE8F0 = 1;
  qword_25FE8F8 = (uint64_t)"SOME_ERR";
  unk_25FE900 = 8;
  dword_25FE908 = 2;
  qword_25FE910 = (uint64_t)"BRAND_CANNOT_DISAMBIGUATEDISAMBIGUATE_HORIZONTAL_ACCURACYDISAMBIGUATE_THRESHOLDMISSING_METADA"
                           "TAMISSING_TRANSACTION_LOCATION";
  *(void *)algn_25FE918 = 25;
  dword_25FE920 = 3;
  qword_25FE928 = (uint64_t)"DISAMBIGUATE_HORIZONTAL_ACCURACYDISAMBIGUATE_THRESHOLDMISSING_METADATAMISSING_TRANSACTION_LOCATION";
  unk_25FE930 = 32;
  dword_25FE938 = 2;
  qword_25FE940 = (uint64_t)"DISAMBIGUATE_THRESHOLDMISSING_METADATAMISSING_TRANSACTION_LOCATION";
  unk_25FE948 = 22;
  dword_25FE950 = 1;
  qword_25FE958 = (uint64_t)"MISSING_METADATAMISSING_TRANSACTION_LOCATION";
  unk_25FE960 = 16;
  dword_25FE968 = 0;
  qword_25FE970 = (uint64_t)"MISSING_TRANSACTION_LOCATION";
  unk_25FE978 = 28;
  dword_25FE980 = 4;
  qword_25FE988 = (uint64_t)"BRAND_MUIDMERCHANT_MUIDNONE";
  unk_25FE990 = 10;
  dword_25FE998 = 1;
  qword_25FE9A0 = (uint64_t)"MERCHANT_MUIDNONE";
  unk_25FE9A8 = 13;
  dword_25FE9B0 = 0;
  qword_25FE9B8 = (uint64_t)"NONE";
  unk_25FE9C0 = 4;
  dword_25FE9C8 = 2;
  return result;
}

void *sub_1196418(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_119648C(void *a1)
{
  sub_1196418(a1);

  operator delete();
}

uint64_t sub_11964C4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(unsigned char *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11964EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v24 + 2;
      }
    }
    unint64_t v24 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 4u;
    uint64_t v16 = v8 + 1;
    uint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_26;
    }
    int v18 = *v16;
    uint64_t v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_26:
      unint64_t v24 = v16;
      *(unsigned char *)(a1 + 40) = v17 != 0;
      goto LABEL_31;
    }
    uint64_t v22 = (char *)sub_188C138((uint64_t)v8, v17);
    unint64_t v24 = v22;
    *(unsigned char *)(a1 + 40) = v23 != 0;
    if (!v22) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 == 17)
    {
      uint64_t v20 = *(void *)v8;
      uint64_t v19 = v8 + 8;
      v5 |= 2u;
      *(void *)(a1 + 32) = v20;
LABEL_30:
      unint64_t v24 = v19;
      goto LABEL_31;
    }
  }
  else if (v12 == 1 && v9 == 9)
  {
    uint64_t v21 = *(void *)v8;
    uint64_t v19 = v8 + 8;
    v5 |= 1u;
    *(void *)(a1 + 24) = v21;
    goto LABEL_30;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v24;
    }
    unint64_t v24 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v24) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  unint64_t v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

_OWORD *sub_11966D4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *(unsigned char *)uint64_t v4 = 17;
  *(void *)((char *)v4 + 1) = v8;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 4) != 0)
  {
LABEL_11:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v9 = *(unsigned char *)(a1 + 40);
    *(unsigned char *)uint64_t v4 = 24;
    *((unsigned char *)v4 + 1) = v9;
    uint64_t v4 = (_OWORD *)((char *)v4 + 2);
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    return (_OWORD *)((char *)v4 + v15);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1196834(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 7) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_119689C(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    result[1].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 40);
LABEL_6:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_7:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1196900()
{
  return 1;
}

void *sub_1196908@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ReverseGeocodeRequest");
}

uint64_t sub_1196918(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  int v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11969C0(uint64_t a1)
{
  sub_1196918(a1);

  operator delete();
}

uint64_t sub_11969F8(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1196A7C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  unint64_t v6 = (void *)(a1 + 8);
  uint64_t v7 = (uint64_t **)(a1 + 24);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 8);
    uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      uint64_t v17 = (uint64_t *)*v17;
    }
    int v18 = (std::string *)sub_1880F84((void *)(a1 + 48), v17);
    uint64_t v15 = (void *)sub_188C244(v18, *(char **)v26, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v26 = v15;
    if (!v15) {
      goto LABEL_41;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    uint64_t v19 = v8 - 1;
    while (1)
    {
      uint64_t v20 = (char *)(v19 + 1);
      *(void *)uint64_t v26 = v19 + 1;
      uint64_t v21 = *(_DWORD **)(a1 + 40);
      if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
      {
        *(_DWORD *)(a1 + 32) = v22 + 1;
        uint64_t v23 = *(std::string **)&v21[2 * v22 + 2];
      }
      else
      {
        if (!*v7) {
          operator new();
        }
        *uint64_t v25 = v24;
        v25[1] = sub_3A6EDC;
        *unint64_t v24 = 0;
        v24[1] = 0;
        v24[2] = 0;
        uint64_t v23 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v24);
        uint64_t v20 = *(char **)v26;
      }
      uint64_t v19 = sub_188C244(v23, v20, (uint64_t)a3);
      *(void *)uint64_t v26 = v19;
      if (!v19) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v19 || *v19 != 10) {
        goto LABEL_25;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v26;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_24;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_41:
  *(void *)uint64_t v26 = 0;
  return *(void *)v26;
}

char *sub_1196CD0(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  if (*(unsigned char *)(a1 + 16)) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return __dst;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(__dst, v15, (int)v16);
    __dst += v17;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, __dst);
}

uint64_t sub_1196E5C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1196F3C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    unsigned int v11 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      unsigned int v11 = (uint64_t *)*v11;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1197044()
{
  return 1;
}

void *sub_119704C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ReverseGeocodeAddress");
}

uint64_t sub_119705C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_252C308)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_1196918(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1197144(uint64_t a1)
{
  sub_119705C(a1);

  operator delete();
}

uint64_t sub_119717C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v5 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_11969F8(*(void *)(result + 40));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1197250(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)unint64_t v27 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v12 = *(void **)(a1 + 40);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_1197A48((uint64_t)v13);
          *(void *)(a1 + 40) = v12;
          uint64_t v8 = *(unsigned __int8 **)v27;
        }
        uint64_t v14 = sub_11974FC(a3, (uint64_t)v12, v8);
        goto LABEL_36;
      case 2u:
        if (v9 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_28;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 8u;
        int v18 = (char *)(v8 + 1);
        uint64_t v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v25 = sub_188C138((uint64_t)v8, v19);
          *(void *)unint64_t v27 = v25;
          *(unsigned char *)(a1 + 48) = v26 != 0;
          if (!v25) {
            goto LABEL_44;
          }
        }
        else
        {
          int v18 = (char *)(v8 + 2);
LABEL_23:
          *(void *)unint64_t v27 = v18;
          *(unsigned char *)(a1 + 48) = v19 != 0;
        }
        goto LABEL_37;
      case 4u:
        if (v9 != 34) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
LABEL_28:
        uint64_t v22 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v14 = (uint64_t)sub_188C244(v22, *(char **)v27, (uint64_t)a3);
        goto LABEL_36;
      default:
LABEL_29:
        if (v9) {
          BOOL v23 = (v9 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v7)
          {
            unint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v27;
          }
          uint64_t v14 = (uint64_t)sub_1885AC0(v9, v24, (char *)v8, a3);
LABEL_36:
          *(void *)unint64_t v27 = v14;
          if (!v14) {
            goto LABEL_44;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_44:
        }
          *(void *)unint64_t v27 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v27;
    }
  }
}

uint64_t sub_11974FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1196A7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_119758C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v9 = *(void *)(a1 + 40);
    *char v4 = 10;
    unsigned int v10 = *(_DWORD *)(v9 + 20);
    v4[1] = v10;
    if (v10 > 0x7F) {
      unsigned int v11 = sub_188A9CC(v10, v4 + 1);
    }
    else {
      unsigned int v11 = v4 + 2;
    }
    char v4 = sub_1196CD0(v9, v11, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_15:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 48);
  *char v4 = 24;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 2) != 0) {
LABEL_5:
  }
    char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_1197730(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v8 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = sub_1196E5C(*(void *)(a1 + 40));
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_17:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1197868(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_18:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    unint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v13)
    {
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      unint64_t v13 = (std::string *)sub_1197A48((uint64_t)v15);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_252C2D0;
    }
    uint64_t result = sub_1196F3C(v13, (uint64_t)v16);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11979B0()
{
  return 1;
}

void *sub_11979B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ReverseGeocodeResponse");
}

uint64_t sub_11979C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2497D00;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

void *sub_1197A48(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_2497D80;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_1197AEC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2497E00;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 48) = 0;
  return result;
}

void *sub_1197B74(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1197BE8(void *a1)
{
  sub_1197B74(a1);

  operator delete();
}

uint64_t sub_1197C20(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1197C48(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_33;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    int v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_12;
    }
    v5 |= 2u;
    std::string::size_type v14 = v7 + 1;
    int v15 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v16 = *v14;
    int v15 = v15 + (v16 << 7) - 128;
    if ((v16 & 0x80000000) == 0)
    {
      std::string::size_type v14 = v7 + 2;
LABEL_24:
      int v20 = v14;
      *(_DWORD *)(a1 + 32) = v15;
      goto LABEL_26;
    }
    uint64_t v17 = (char *)sub_188C0D0((uint64_t)v7, v15);
    int v20 = v17;
    *(_DWORD *)(a1 + 32) = v18;
    if (!v17) {
      goto LABEL_34;
    }
LABEL_26:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_33;
    }
  }
  if (v8 >> 3 == 1 && v8 == 9)
  {
    v5 |= 1u;
    *(void *)(a1 + 24) = *(void *)v7;
    int v20 = v7 + 8;
    goto LABEL_26;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v20;
    }
    int v20 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v20) {
      goto LABEL_34;
    }
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_33;
  }
LABEL_34:
  int v20 = 0;
LABEL_33:
  *(_DWORD *)(a1 + 16) |= v5;
  return v20;
}

_OWORD *sub_1197DF8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)int v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v8 = *(_DWORD *)(a1 + 32);
    *(unsigned char *)int v4 = 16;
    *((unsigned char *)v4 + 1) = v8;
    if (v8 > 0x7F)
    {
      *((unsigned char *)v4 + 1) = v8 | 0x80;
      unsigned int v9 = v8 >> 7;
      *((unsigned char *)v4 + 2) = v8 >> 7;
      int v4 = (_OWORD *)((char *)v4 + 3);
      if (v8 >= 0x4000)
      {
        do
        {
          *((unsigned char *)v4 - 1) |= 0x80u;
          unsigned int v10 = v9 >> 14;
          v9 >>= 7;
          *(unsigned char *)int v4 = v9;
          int v4 = (_OWORD *)((char *)v4 + 1);
        }
        while (v10);
      }
    }
    else
    {
      int v4 = (_OWORD *)((char *)v4 + 2);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    std::string::size_type v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    std::string::size_type v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    return (_OWORD *)((char *)v4 + v16);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_1197F58(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1197FD8(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    }
    if ((v2 & 2) != 0) {
      LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1198024()
{
  return 1;
}

void *sub_119802C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "revgeo.InterpolationParameters");
}

uint64_t sub_119803C(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  sub_188CC00(a1 + 48);
  uint64_t result = sub_188CC00(a1 + 72);
  uint64_t v3 = *(unsigned int *)(a1 + 104);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_119E218(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 104) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      unint64_t v7 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v6 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
    if ((v6 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v8 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
LABEL_15:
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

void *sub_119813C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_11981E8((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_11DAC90(a1 + 11);
  sub_11DAC10(a1 + 8);
  sub_1889DE8(a1 + 5);
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_11981E8(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 112);
  uint64_t result = (void ***)(a1 + 112);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252C368)
  {
    if (*(void *)(a1 + 120))
    {
      sub_15B8F7C();
      operator delete();
    }
    if (*(void *)(a1 + 128))
    {
      sub_15B0994();
      operator delete();
    }
    int v4 = *(void **)(a1 + 136);
    if (v4)
    {
      sub_119D224(v4);
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 144);
    if (v5)
    {
      sub_119D828(v5);
      operator delete();
    }
    int v6 = *(void **)(a1 + 152);
    if (v6)
    {
      sub_1197B74(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 160);
    if (result)
    {
      sub_119E714((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_119830C(void *a1)
{
  sub_119813C(a1);

  operator delete();
}

uint64_t sub_1198344(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t result = sub_188CC00(a1 + 40);
  uint64_t v3 = *(unsigned int *)(a1 + 72);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_11984AC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 72) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 96);
  if ((int)v6 >= 1)
  {
    unint64_t v7 = (uint64_t *)(*(void *)(a1 + 104) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_11984D0(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 96) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 16);
  if ((v9 & 0x7F) == 0) {
    goto LABEL_18;
  }
  if (v9)
  {
    unint64_t v12 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_28;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_28;
      }
    }
LABEL_12:
    if ((v9 & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
  if ((v9 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_28:
  uint64_t result = sub_15B8FB8(*(void *)(a1 + 120));
  if ((v9 & 4) == 0)
  {
LABEL_13:
    if ((v9 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 128));
  if ((v9 & 8) == 0)
  {
LABEL_14:
    if ((v9 & 0x10) == 0) {
      goto LABEL_15;
    }
LABEL_31:
    uint64_t result = sub_11984D0(*(void *)(a1 + 144));
    if ((v9 & 0x20) == 0)
    {
LABEL_16:
      if ((v9 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
    goto LABEL_32;
  }
LABEL_30:
  uint64_t result = sub_11984AC(*(void *)(a1 + 136));
  if ((v9 & 0x10) != 0) {
    goto LABEL_31;
  }
LABEL_15:
  if ((v9 & 0x20) == 0) {
    goto LABEL_16;
  }
LABEL_32:
  uint64_t result = sub_1197C20(*(void *)(a1 + 152));
  if ((v9 & 0x40) != 0) {
LABEL_17:
  }
    uint64_t result = sub_119803C(*(void *)(a1 + 160));
LABEL_18:
  *(void *)(a1 + 168) = 0;
  if ((v9 & 0x3F00) != 0)
  {
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
    *(_DWORD *)(a1 + 192) = 0;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_11984AC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11984D0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11984F4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v91 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v91, a3[11].i32[1]) & 1) == 0)
  {
    int v90 = (uint64_t *)(a1 + 8);
    unint64_t v7 = (uint64_t **)(a1 + 40);
    while (1)
    {
      uint64_t v8 = (unsigned __int8 *)(*(void *)v91 + 1);
      unsigned int v9 = **(unsigned char **)v91;
      if ((char)**(unsigned char **)v91 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if ((char)*v8 < 0)
        {
          uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v91, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = (unsigned __int8 *)(*(void *)v91 + 2);
        }
      }
      *(void *)v91 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_146;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v12 = *(void *)(a1 + 120);
          if (!v12)
          {
            unint64_t v13 = (void *)(*v90 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v90) {
              unint64_t v13 = (void *)*v13;
            }
            uint64_t v12 = sub_15C1EF4((uint64_t)v13);
            *(void *)(a1 + 120) = v12;
            uint64_t v8 = *(unsigned __int8 **)v91;
          }
          uint64_t v14 = sub_1198E84(a3, v12, v8);
          goto LABEL_153;
        case 2u:
          if (v9 != 16) {
            goto LABEL_146;
          }
          v5 |= 0x80u;
          uint64_t v15 = (char *)(v8 + 1);
          uint64_t v16 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          uint64_t v16 = v16 + (v17 << 7) - 128;
          if (v17 < 0)
          {
            uint64_t v74 = sub_188C138((uint64_t)v8, v16);
            *(void *)v91 = v74;
            *(void *)(a1 + 168) = v75;
            if (!v74) {
              goto LABEL_159;
            }
          }
          else
          {
            uint64_t v15 = (char *)(v8 + 2);
LABEL_19:
            *(void *)v91 = v15;
            *(void *)(a1 + 168) = v16;
          }
          goto LABEL_154;
        case 3u:
          if (v9 != 26) {
            goto LABEL_146;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v18 = *(void *)(a1 + 128);
          if (!v18)
          {
            uint64_t v19 = (void *)(*v90 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v90) {
              uint64_t v19 = (void *)*v19;
            }
            uint64_t v18 = sub_15C1918((uint64_t)v19);
            *(void *)(a1 + 128) = v18;
            uint64_t v8 = *(unsigned __int8 **)v91;
          }
          uint64_t v14 = (uint64_t)sub_1198F14(a3, v18, v8);
          goto LABEL_153;
        case 4u:
          if (v9 == 32)
          {
            int v20 = v8 - 1;
            while (1)
            {
              *(void *)v91 = v20 + 1;
              uint64_t v21 = v20[1];
              if ((char)v20[1] < 0)
              {
                int v22 = v21 + (v20[2] << 7);
                uint64_t v21 = (v22 - 128);
                if ((char)v20[2] < 0)
                {
                  int v20 = (unsigned __int8 *)sub_188C138((uint64_t)(v20 + 1), (v22 - 128));
                  uint64_t v21 = v23;
                }
                else
                {
                  v20 += 3;
                }
              }
              else
              {
                v20 += 2;
              }
              *(void *)v91 = v20;
              uint64_t v24 = *(unsigned int *)(a1 + 24);
              if (v24 == *(_DWORD *)(a1 + 28))
              {
                int v25 = v24 + 1;
                sub_188CA54((unsigned int *)(a1 + 24), v24 + 1);
                *(void *)(*(void *)(a1 + 32) + 8 * v24) = v21;
                int v20 = *(unsigned __int8 **)v91;
              }
              else
              {
                *(void *)(*(void *)(a1 + 32) + 8 * v24) = v21;
                int v25 = v24 + 1;
              }
              *(_DWORD *)(a1 + 24) = v25;
              if (!v20) {
                goto LABEL_159;
              }
              if (*(void *)a3 <= (unint64_t)v20 || *v20 != 32) {
                goto LABEL_154;
              }
            }
          }
          if (v9 == 34)
          {
            uint64_t v14 = (uint64_t)sub_188C2EC((unsigned int *)(a1 + 24), v8, (uint64_t)a3);
          }
          else
          {
LABEL_146:
            if (v9) {
              BOOL v88 = (v9 & 7) == 4;
            }
            else {
              BOOL v88 = 1;
            }
            if (v88)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_159:
              *(void *)v91 = 0;
              goto LABEL_2;
            }
            if (*v90)
            {
              uint64_t v89 = (std::string *)((*v90 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v89 = (std::string *)sub_188DBD8(v90);
              uint64_t v8 = *(unsigned __int8 **)v91;
            }
            uint64_t v14 = (uint64_t)sub_1885AC0(v9, v89, (char *)v8, a3);
          }
LABEL_153:
          *(void *)v91 = v14;
          if (!v14) {
            goto LABEL_159;
          }
LABEL_154:
          if (sub_11947B8((uint64_t)a3, (char **)v91, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 5u:
          if (v9 != 40) {
            goto LABEL_146;
          }
          v5 |= 0x400u;
          uint64_t v26 = (char *)(v8 + 1);
          uint64_t v27 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_44;
          }
          int v28 = *v26;
          uint64_t v27 = v27 + (v28 << 7) - 128;
          if (v28 < 0)
          {
            uint64_t v76 = sub_188C138((uint64_t)v8, v27);
            *(void *)v91 = v76;
            *(unsigned char *)(a1 + 192) = v77 != 0;
            if (!v76) {
              goto LABEL_159;
            }
          }
          else
          {
            uint64_t v26 = (char *)(v8 + 2);
LABEL_44:
            *(void *)v91 = v26;
            *(unsigned char *)(a1 + 192) = v27 != 0;
          }
          goto LABEL_154;
        case 6u:
          if (v9 != 48) {
            goto LABEL_146;
          }
          v5 |= 0x800u;
          uint64_t v29 = (char *)(v8 + 1);
          uint64_t v30 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_49;
          }
          int v31 = *v29;
          uint64_t v30 = v30 + (v31 << 7) - 128;
          if (v31 < 0)
          {
            uint64_t v78 = sub_188C138((uint64_t)v8, v30);
            *(void *)v91 = v78;
            *(unsigned char *)(a1 + 193) = v79 != 0;
            if (!v78) {
              goto LABEL_159;
            }
          }
          else
          {
            uint64_t v29 = (char *)(v8 + 2);
LABEL_49:
            *(void *)v91 = v29;
            *(unsigned char *)(a1 + 193) = v30 != 0;
          }
          goto LABEL_154;
        case 7u:
          if (v9 != 56) {
            goto LABEL_146;
          }
          v5 |= 0x1000u;
          uint64_t v32 = (char *)(v8 + 1);
          uint64_t v33 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_54;
          }
          int v34 = *v32;
          uint64_t v33 = v33 + (v34 << 7) - 128;
          if (v34 < 0)
          {
            uint64_t v80 = sub_188C138((uint64_t)v8, v33);
            *(void *)v91 = v80;
            *(unsigned char *)(a1 + 194) = v81 != 0;
            if (!v80) {
              goto LABEL_159;
            }
          }
          else
          {
            uint64_t v32 = (char *)(v8 + 2);
LABEL_54:
            *(void *)v91 = v32;
            *(unsigned char *)(a1 + 194) = v33 != 0;
          }
          goto LABEL_154;
        case 8u:
          if (v9 != 66) {
            goto LABEL_146;
          }
          char v35 = (const std::string::value_type *)(v8 - 1);
          while (1)
          {
            uint64_t v36 = (char *)(v35 + 1);
            *(void *)v91 = v35 + 1;
            uint64_t v37 = *(_DWORD **)(a1 + 56);
            if (v37 && (uint64_t v38 = *(int *)(a1 + 48), (int)v38 < *v37))
            {
              *(_DWORD *)(a1 + 48) = v38 + 1;
              uint64_t v39 = *(std::string **)&v37[2 * v38 + 2];
            }
            else
            {
              if (!*v7) {
                operator new();
              }
              void *v41 = v40;
              v41[1] = sub_3A6EDC;
              void *v40 = 0;
              v40[1] = 0;
              v40[2] = 0;
              uint64_t v39 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v40);
              uint64_t v36 = *(char **)v91;
            }
            char v35 = sub_188C244(v39, v36, (uint64_t)a3);
            *(void *)v91 = v35;
            if (!v35) {
              goto LABEL_159;
            }
            if (*(void *)a3 <= (unint64_t)v35 || *v35 != 66) {
              goto LABEL_154;
            }
          }
        case 9u:
          if (v9 != 74) {
            goto LABEL_146;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v42 = *(void **)(a1 + 136);
          if (!v42)
          {
            uint64_t v43 = (void *)(*v90 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v90) {
              uint64_t v43 = (void *)*v43;
            }
            uint64_t v42 = sub_119E048((uint64_t)v43);
            *(void *)(a1 + 136) = v42;
            uint64_t v8 = *(unsigned __int8 **)v91;
          }
          uint64_t v14 = (uint64_t)sub_1198FA4(a3, (uint64_t)v42, v8);
          goto LABEL_153;
        case 0xAu:
          if (v9 != 82) {
            goto LABEL_146;
          }
          uint64_t v44 = (char *)(v8 - 1);
          while (1)
          {
            uint64_t v45 = (unsigned __int8 *)(v44 + 1);
            *(void *)v91 = v44 + 1;
            uint64_t v46 = *(_DWORD **)(a1 + 80);
            if (v46 && (uint64_t v47 = *(int *)(a1 + 72), (int)v47 < *v46))
            {
              *(_DWORD *)(a1 + 72) = v47 + 1;
              uint64_t v48 = *(void *)&v46[2 * v47 + 2];
            }
            else
            {
              uint64_t v49 = sub_119E048(*(void *)(a1 + 64));
              uint64_t v48 = sub_188CDC8(a1 + 64, (uint64_t)v49);
              uint64_t v45 = *(unsigned __int8 **)v91;
            }
            uint64_t v44 = sub_1198FA4(a3, v48, v45);
            *(void *)v91 = v44;
            if (!v44) {
              goto LABEL_159;
            }
            if (*(void *)a3 <= (unint64_t)v44 || *v44 != 82) {
              goto LABEL_154;
            }
          }
        case 0xBu:
          if (v9 != 90) {
            goto LABEL_146;
          }
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v50 = *(void **)(a1 + 144);
          if (!v50)
          {
            uint64_t v51 = (void *)(*v90 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v90) {
              uint64_t v51 = (void *)*v51;
            }
            uint64_t v50 = sub_119E0C4((uint64_t)v51);
            *(void *)(a1 + 144) = v50;
            uint64_t v8 = *(unsigned __int8 **)v91;
          }
          uint64_t v14 = (uint64_t)sub_1199034(a3, (uint64_t)v50, v8);
          goto LABEL_153;
        case 0xCu:
          if (v9 != 98) {
            goto LABEL_146;
          }
          uint64_t v52 = (char *)(v8 - 1);
          while (1)
          {
            BOOL v53 = (unsigned __int8 *)(v52 + 1);
            *(void *)v91 = v52 + 1;
            uint64_t v54 = *(_DWORD **)(a1 + 104);
            if (v54 && (uint64_t v55 = *(int *)(a1 + 96), (int)v55 < *v54))
            {
              *(_DWORD *)(a1 + 96) = v55 + 1;
              uint64_t v56 = *(void *)&v54[2 * v55 + 2];
            }
            else
            {
              uint64_t v57 = sub_119E0C4(*(void *)(a1 + 88));
              uint64_t v56 = sub_188CDC8(a1 + 88, (uint64_t)v57);
              BOOL v53 = *(unsigned __int8 **)v91;
            }
            uint64_t v52 = sub_1199034(a3, v56, v53);
            *(void *)v91 = v52;
            if (!v52) {
              goto LABEL_159;
            }
            if (*(void *)a3 <= (unint64_t)v52 || *v52 != 98) {
              goto LABEL_154;
            }
          }
        case 0xDu:
          if (v9 != 104) {
            goto LABEL_146;
          }
          v5 |= 0x100u;
          uint64_t v58 = (char *)(v8 + 1);
          uint64_t v59 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_103;
          }
          int v60 = *v58;
          uint64_t v59 = v59 + (v60 << 7) - 128;
          if (v60 < 0)
          {
            uint64_t v82 = sub_188C138((uint64_t)v8, v59);
            *(void *)v91 = v82;
            *(void *)(a1 + 176) = v83;
            if (!v82) {
              goto LABEL_159;
            }
          }
          else
          {
            uint64_t v58 = (char *)(v8 + 2);
LABEL_103:
            *(void *)v91 = v58;
            *(void *)(a1 + 176) = v59;
          }
          goto LABEL_154;
        case 0xEu:
          if (v9 != 112) {
            goto LABEL_146;
          }
          v5 |= 0x200u;
          uint64_t v61 = (char *)(v8 + 1);
          uint64_t v62 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_108;
          }
          int v63 = *v61;
          uint64_t v62 = v62 + (v63 << 7) - 128;
          if (v63 < 0)
          {
            uint64_t v84 = sub_188C138((uint64_t)v8, v62);
            *(void *)v91 = v84;
            *(void *)(a1 + 184) = v85;
            if (!v84) {
              goto LABEL_159;
            }
          }
          else
          {
            uint64_t v61 = (char *)(v8 + 2);
LABEL_108:
            *(void *)v91 = v61;
            *(void *)(a1 + 184) = v62;
          }
          goto LABEL_154;
        case 0xFu:
          if (v9 != 122) {
            goto LABEL_146;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v64 = *(void *)(a1 + 8);
          uint64_t v65 = (uint64_t *)(v64 & 0xFFFFFFFFFFFFFFFCLL);
          if (v64) {
            uint64_t v65 = (uint64_t *)*v65;
          }
          int v66 = (std::string *)sub_1880F84((void *)(a1 + 112), v65);
          uint64_t v14 = (uint64_t)sub_188C244(v66, *(char **)v91, (uint64_t)a3);
          goto LABEL_153;
        case 0x10u:
          if (v9 != 128) {
            goto LABEL_146;
          }
          v5 |= 0x2000u;
          uint64_t v67 = (char *)(v8 + 1);
          uint64_t v68 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_117;
          }
          int v69 = *v67;
          uint64_t v68 = v68 + (v69 << 7) - 128;
          if (v69 < 0)
          {
            uint64_t v86 = sub_188C138((uint64_t)v8, v68);
            *(void *)v91 = v86;
            *(unsigned char *)(a1 + 195) = v87 != 0;
            if (!v86) {
              goto LABEL_159;
            }
          }
          else
          {
            uint64_t v67 = (char *)(v8 + 2);
LABEL_117:
            *(void *)v91 = v67;
            *(unsigned char *)(a1 + 195) = v68 != 0;
          }
          goto LABEL_154;
        case 0x11u:
          if (v9 != 138) {
            goto LABEL_146;
          }
          *(_DWORD *)(a1 + 16) |= 0x20u;
          uint64_t v70 = *(void *)(a1 + 152);
          if (!v70)
          {
            uint64_t v71 = (void *)(*v90 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v90) {
              uint64_t v71 = (void *)*v71;
            }
            uint64_t v70 = sub_119DD20((uint64_t)v71);
            *(void *)(a1 + 152) = v70;
            uint64_t v8 = *(unsigned __int8 **)v91;
          }
          uint64_t v14 = (uint64_t)sub_11990C4(a3, v70, v8);
          goto LABEL_153;
        case 0x12u:
          if (v9 != 146) {
            goto LABEL_146;
          }
          *(_DWORD *)(a1 + 16) |= 0x40u;
          int v72 = *(void **)(a1 + 160);
          if (!v72)
          {
            unsigned int v73 = (void *)(*v90 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v90) {
              unsigned int v73 = (void *)*v73;
            }
            int v72 = sub_119F434((uint64_t)v73);
            *(void *)(a1 + 160) = v72;
            uint64_t v8 = *(unsigned __int8 **)v91;
          }
          uint64_t v14 = sub_1199154(a3, (uint64_t)v72, v8);
          goto LABEL_153;
        default:
          goto LABEL_146;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v91;
}

uint64_t sub_1198E84(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15B9020(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1198F14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15B0A38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1198FA4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_119D2D0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1199034(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_119D8D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11990C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1197C48(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1199154(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_119E828(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11991E4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 120);
    *int v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_15B9320(v7, v9, a3);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 168);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 128);
    *int v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    int v4 = sub_15B0C0C(v13, v15, a3);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 24);
  if ((int)v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v18 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      *int v4 = 32;
      v4[1] = v18;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        v4[2] = v18 >> 7;
        v4 += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v21 = *(unsigned char *)(a1 + 192);
    *int v4 = 40;
    v4[1] = v21;
    v4 += 2;
    if ((v6 & 0x800) == 0)
    {
LABEL_33:
      if ((v6 & 0x1000) == 0) {
        goto LABEL_44;
      }
      goto LABEL_41;
    }
  }
  else if ((v6 & 0x800) == 0)
  {
    goto LABEL_33;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v22 = *(unsigned char *)(a1 + 193);
  *int v4 = 48;
  v4[1] = v22;
  v4 += 2;
  if ((v6 & 0x1000) != 0)
  {
LABEL_41:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v23 = *(unsigned char *)(a1 + 194);
    *int v4 = 56;
    v4[1] = v23;
    v4 += 2;
  }
LABEL_44:
  uint64_t v24 = *(unsigned int *)(a1 + 48);
  if ((int)v24 >= 1)
  {
    uint64_t v25 = 0;
    uint64_t v26 = 8 * v24;
    do
    {
      uint64_t v27 = *(void **)(*(void *)(a1 + 56) + v25 + 8);
      if (*((char *)v27 + 23) < 0)
      {
        int64_t v28 = v27[1];
        if (v28 > 127) {
          goto LABEL_55;
        }
      }
      else
      {
        int64_t v28 = *((unsigned __int8 *)v27 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v28)
      {
        *int v4 = 66;
        v4[1] = v28;
        if (*((char *)v27 + 23) < 0) {
          uint64_t v27 = (void *)*v27;
        }
        uint64_t v29 = v4 + 2;
        memcpy(v29, v27, v28);
        int v4 = &v29[v28];
        goto LABEL_53;
      }
LABEL_55:
      int v4 = (char *)sub_188A868(a3, 8, (uint64_t)v27, v4);
LABEL_53:
      v25 += 8;
    }
    while (v26 != v25);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v30 = *(void *)(a1 + 136);
    *int v4 = 74;
    unsigned int v31 = *(_DWORD *)(v30 + 20);
    v4[1] = v31;
    if (v31 > 0x7F) {
      uint64_t v32 = sub_188A9CC(v31, v4 + 1);
    }
    else {
      uint64_t v32 = v4 + 2;
    }
    int v4 = sub_119D524(v30, (unint64_t)v32, a3);
  }
  int v33 = *(_DWORD *)(a1 + 72);
  if (v33)
  {
    for (int j = 0; j != v33; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 80) + 8 * j + 8);
      *int v4 = 82;
      unsigned int v36 = *(_DWORD *)(v35 + 20);
      v4[1] = v36;
      if (v36 > 0x7F) {
        uint64_t v37 = sub_188A9CC(v36, v4 + 1);
      }
      else {
        uint64_t v37 = v4 + 2;
      }
      int v4 = sub_119D524(v35, (unint64_t)v37, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v38 = *(void *)(a1 + 144);
    *int v4 = 90;
    unsigned int v39 = *(_DWORD *)(v38 + 20);
    v4[1] = v39;
    if (v39 > 0x7F) {
      uint64_t v40 = sub_188A9CC(v39, v4 + 1);
    }
    else {
      uint64_t v40 = v4 + 2;
    }
    int v4 = sub_119DAC4(v38, (unint64_t)v40, a3);
  }
  int v41 = *(_DWORD *)(a1 + 96);
  if (v41)
  {
    for (int k = 0; k != v41; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v43 = *(void *)(*(void *)(a1 + 104) + 8 * k + 8);
      *int v4 = 98;
      unsigned int v44 = *(_DWORD *)(v43 + 20);
      v4[1] = v44;
      if (v44 > 0x7F) {
        uint64_t v45 = sub_188A9CC(v44, v4 + 1);
      }
      else {
        uint64_t v45 = v4 + 2;
      }
      int v4 = sub_119DAC4(v43, (unint64_t)v45, a3);
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v46 = *(void *)(a1 + 176);
    *int v4 = 104;
    v4[1] = v46;
    if (v46 > 0x7F)
    {
      v4[1] = v46 | 0x80;
      unint64_t v47 = v46 >> 7;
      v4[2] = v46 >> 7;
      v4 += 3;
      if (v46 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v48 = v47 >> 14;
          v47 >>= 7;
          *v4++ = v47;
        }
        while (v48);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v49 = *(void *)(a1 + 184);
    *int v4 = 112;
    v4[1] = v49;
    if (v49 > 0x7F)
    {
      v4[1] = v49 | 0x80;
      unint64_t v50 = v49 >> 7;
      v4[2] = v49 >> 7;
      v4 += 3;
      if (v49 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v51 = v50 >> 14;
          v50 >>= 7;
          *v4++ = v50;
        }
        while (v51);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x2000) == 0)
    {
LABEL_102:
      if ((v6 & 0x20) == 0) {
        goto LABEL_103;
      }
      goto LABEL_109;
    }
  }
  else if ((v6 & 0x2000) == 0)
  {
    goto LABEL_102;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v52 = *(unsigned char *)(a1 + 195);
  *(_WORD *)int v4 = 384;
  v4[2] = v52;
  v4 += 3;
  if ((v6 & 0x20) == 0)
  {
LABEL_103:
    if ((v6 & 0x40) == 0) {
      goto LABEL_121;
    }
    goto LABEL_115;
  }
LABEL_109:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v53 = *(void *)(a1 + 152);
  *(_WORD *)int v4 = 394;
  unsigned int v54 = *(_DWORD *)(v53 + 20);
  v4[2] = v54;
  if (v54 > 0x7F) {
    uint64_t v55 = sub_188A9CC(v54, v4 + 2);
  }
  else {
    uint64_t v55 = v4 + 3;
  }
  int v4 = (char *)sub_1197DF8(v53, (unint64_t)v55, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_115:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v56 = *(void *)(a1 + 160);
    *(_WORD *)int v4 = 402;
    unsigned int v57 = *(_DWORD *)(v56 + 20);
    v4[2] = v57;
    if (v57 > 0x7F) {
      uint64_t v58 = sub_188A9CC(v57, v4 + 2);
    }
    else {
      uint64_t v58 = v4 + 3;
    }
    int v4 = sub_119EDC4(v56, v58, a3);
  }
LABEL_121:
  uint64_t v59 = *(void *)(a1 + 8);
  if ((v59 & 1) == 0) {
    return v4;
  }
  unint64_t v61 = v59 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v61 + 31) < 0)
  {
    uint64_t v62 = *(void **)(v61 + 8);
    uint64_t v63 = *(void *)(v61 + 16);
  }
  else
  {
    uint64_t v62 = (void *)(v61 + 8);
    LODWORD(v63) = *(unsigned __int8 *)(v61 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v63)
  {
    uint64_t v64 = (int)v63;
    memcpy(v4, v62, (int)v63);
    v4 += v64;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v62, v63, v4);
}

uint64_t sub_11999DC(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  uint64_t v4 = v2 + *(unsigned int *)(a1 + 24) + v3;
  if ((int)v3 >= 1)
  {
    int v5 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  uint64_t v9 = *(int *)(a1 + 72);
  uint64_t v10 = v4 + v9;
  uint64_t v11 = *(void *)(a1 + 80);
  if (v11) {
    unint64_t v12 = (uint64_t *)(v11 + 8);
  }
  else {
    unint64_t v12 = 0;
  }
  if (v9)
  {
    uint64_t v13 = 8 * v9;
    do
    {
      uint64_t v14 = *v12++;
      unint64_t v15 = sub_119D744(v14);
      v10 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      v13 -= 8;
    }
    while (v13);
  }
  uint64_t v16 = *(int *)(a1 + 96);
  uint64_t v17 = v10 + v16;
  uint64_t v18 = *(void *)(a1 + 104);
  if (v18) {
    unint64_t v19 = (uint64_t *)(v18 + 8);
  }
  else {
    unint64_t v19 = 0;
  }
  if (v16)
  {
    uint64_t v20 = 8 * v16;
    do
    {
      uint64_t v21 = *v19++;
      unint64_t v22 = sub_119DC68(v21);
      v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      v20 -= 8;
    }
    while (v20);
  }
  int v23 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v23) {
    goto LABEL_28;
  }
  if (v23)
  {
    unint64_t v27 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
    uint64_t v29 = *(void *)(v27 + 8);
    if ((v28 & 0x80u) == 0) {
      uint64_t v29 = v28;
    }
    v17 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 2) == 0)
    {
LABEL_21:
      if ((v23 & 4) == 0) {
        goto LABEL_22;
      }
      goto LABEL_48;
    }
  }
  else if ((v23 & 2) == 0)
  {
    goto LABEL_21;
  }
  uint64_t v30 = sub_15B956C(*(void *)(a1 + 120));
  v17 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v23 & 4) == 0)
  {
LABEL_22:
    if ((v23 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t v31 = sub_15B0D90(*(void *)(a1 + 128));
  v17 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v23 & 8) == 0)
  {
LABEL_23:
    if ((v23 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_50;
  }
LABEL_49:
  unint64_t v32 = sub_119D744(*(void *)(a1 + 136));
  v17 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v23 & 0x10) == 0)
  {
LABEL_24:
    if ((v23 & 0x20) == 0) {
      goto LABEL_25;
    }
LABEL_51:
    uint64_t v34 = sub_1197F58(*(void *)(a1 + 152));
    v17 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v23 & 0x40) == 0)
    {
LABEL_26:
      if ((v23 & 0x80) == 0) {
        goto LABEL_28;
      }
      goto LABEL_27;
    }
    goto LABEL_52;
  }
LABEL_50:
  unint64_t v33 = sub_119DC68(*(void *)(a1 + 144));
  v17 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v23 & 0x20) != 0) {
    goto LABEL_51;
  }
LABEL_25:
  if ((v23 & 0x40) == 0) {
    goto LABEL_26;
  }
LABEL_52:
  uint64_t v35 = sub_119F144(*(void *)(a1 + 160));
  v17 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v23 & 0x80) != 0) {
LABEL_27:
  }
    v17 += ((9 * (__clz(*(void *)(a1 + 168) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_28:
  if ((v23 & 0x3F00) != 0)
  {
    if ((v23 & 0x100) != 0) {
      v17 += ((9 * (__clz(*(void *)(a1 + 176) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v23 & 0x200) != 0) {
      v17 += ((9 * (__clz(*(void *)(a1 + 184) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    uint64_t v24 = v17 + 2;
    if ((v23 & 0x400) == 0) {
      uint64_t v24 = v17;
    }
    if ((v23 & 0x800) != 0) {
      v24 += 2;
    }
    if ((v23 & 0x1000) != 0) {
      v24 += 2;
    }
    if ((v23 & 0x2000) != 0) {
      uint64_t v17 = v24 + 3;
    }
    else {
      uint64_t v17 = v24;
    }
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if (v25)
  {
    unint64_t v36 = v25 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v36 + 31) < 0) {
      uint64_t v37 = *(void *)(v36 + 16);
    }
    else {
      uint64_t v37 = *(unsigned __int8 *)(v36 + 31);
    }
    v17 += v37;
  }
  *(_DWORD *)(a1 + 20) = v17;
  return v17;
}

void sub_1199D74(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (const std::string **)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_188FB98(a1 + 40, v10, v9, v8, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v11 = *(_DWORD *)(a1 + 48) + v8;
    *(_DWORD *)(a1 + 48) = v11;
    unint64_t v12 = *(int **)(a1 + 56);
    if (*v12 < v11) {
      int *v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 72);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    unint64_t v15 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_11DAE10((std::string *)(a1 + 64), v15, v14, v13, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v16 = *(_DWORD *)(a1 + 72) + v13;
    *(_DWORD *)(a1 + 72) = v16;
    uint64_t v17 = *(int **)(a1 + 80);
    if (*v17 < v16) {
      *uint64_t v17 = v16;
    }
  }
  int v18 = *(_DWORD *)(a2 + 96);
  if (v18)
  {
    unint64_t v19 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    uint64_t v20 = (std::string **)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_11DAE9C((std::string *)(a1 + 88), v20, v19, v18, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v21 = *(_DWORD *)(a1 + 96) + v18;
    *(_DWORD *)(a1 + 96) = v21;
    unint64_t v22 = *(int **)(a1 + 104);
    if (*v22 < v21) {
      int *v22 = v21;
    }
  }
  int v23 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v23)
  {
    if (v23)
    {
      uint64_t v25 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v26 = *(void *)(a1 + 8);
      unint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        unint64_t v27 = (uint64_t *)*v27;
      }
      sub_1881DF4((std::string **)(a1 + 112), v25, v27);
      if ((v23 & 2) == 0)
      {
LABEL_15:
        if ((v23 & 4) == 0) {
          goto LABEL_16;
        }
        goto LABEL_47;
      }
    }
    else if ((v23 & 2) == 0)
    {
      goto LABEL_15;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v28 = *(std::string **)(a1 + 120);
    if (!v28)
    {
      uint64_t v29 = *(void *)(a1 + 8);
      uint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        uint64_t v30 = (void *)*v30;
      }
      uint64_t v28 = (std::string *)sub_15C1EF4((uint64_t)v30);
      *(void *)(a1 + 120) = v28;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v31 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v31 = &off_253F4C8;
    }
    sub_15B9698(v28, (uint64_t)v31);
    if ((v23 & 4) == 0)
    {
LABEL_16:
      if ((v23 & 8) == 0) {
        goto LABEL_17;
      }
      goto LABEL_55;
    }
LABEL_47:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v32 = *(void *)(a1 + 128);
    if (!v32)
    {
      uint64_t v33 = *(void *)(a1 + 8);
      uint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
      if (v33) {
        uint64_t v34 = (void *)*v34;
      }
      uint64_t v32 = sub_15C1918((uint64_t)v34);
      *(void *)(a1 + 128) = v32;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v35 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v35 = &off_253F1A0;
    }
    sub_15B0E24(v32, (uint64_t)v35);
    if ((v23 & 8) == 0)
    {
LABEL_17:
      if ((v23 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_63;
    }
LABEL_55:
    *(_DWORD *)(a1 + 16) |= 8u;
    unint64_t v36 = *(std::string **)(a1 + 136);
    if (!v36)
    {
      uint64_t v37 = *(void *)(a1 + 8);
      uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        uint64_t v38 = (void *)*v38;
      }
      unint64_t v36 = (std::string *)sub_119E048((uint64_t)v38);
      *(void *)(a1 + 136) = v36;
    }
    if (*(void *)(a2 + 136)) {
      unsigned int v39 = *(uint64_t (****)())(a2 + 136);
    }
    else {
      unsigned int v39 = &off_252C518;
    }
    sub_119A204(v36, (uint64_t)v39);
    if ((v23 & 0x10) == 0)
    {
LABEL_18:
      if ((v23 & 0x20) == 0) {
        goto LABEL_19;
      }
      goto LABEL_71;
    }
LABEL_63:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v40 = *(std::string **)(a1 + 144);
    if (!v40)
    {
      uint64_t v41 = *(void *)(a1 + 8);
      uint64_t v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
      if (v41) {
        uint64_t v42 = (void *)*v42;
      }
      uint64_t v40 = (std::string *)sub_119E0C4((uint64_t)v42);
      *(void *)(a1 + 144) = v40;
    }
    if (*(void *)(a2 + 144)) {
      uint64_t v43 = *(uint64_t (****)())(a2 + 144);
    }
    else {
      uint64_t v43 = &off_252C540;
    }
    sub_1113E40(v40, (uint64_t)v43);
    if ((v23 & 0x20) == 0)
    {
LABEL_19:
      if ((v23 & 0x40) == 0) {
        goto LABEL_20;
      }
      goto LABEL_79;
    }
LABEL_71:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    unsigned int v44 = *(std::string **)(a1 + 152);
    if (!v44)
    {
      uint64_t v45 = *(void *)(a1 + 8);
      unint64_t v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
      if (v45) {
        unint64_t v46 = (void *)*v46;
      }
      unsigned int v44 = (std::string *)sub_119DD20((uint64_t)v46);
      *(void *)(a1 + 152) = v44;
    }
    if (*(void *)(a2 + 152)) {
      unint64_t v47 = *(uint64_t (****)())(a2 + 152);
    }
    else {
      unint64_t v47 = &off_252C340;
    }
    sub_1197FD8(v44, (uint64_t)v47);
    if ((v23 & 0x40) == 0)
    {
LABEL_20:
      if ((v23 & 0x80) == 0)
      {
LABEL_22:
        *(_DWORD *)(a1 + 16) |= v23;
        goto LABEL_23;
      }
LABEL_21:
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      goto LABEL_22;
    }
LABEL_79:
    *(_DWORD *)(a1 + 16) |= 0x40u;
    unint64_t v48 = *(std::string **)(a1 + 160);
    if (!v48)
    {
      uint64_t v49 = *(void *)(a1 + 8);
      unint64_t v50 = (void *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
      if (v49) {
        unint64_t v50 = (void *)*v50;
      }
      unint64_t v48 = (std::string *)sub_119F434((uint64_t)v50);
      *(void *)(a1 + 160) = v48;
    }
    if (*(void *)(a2 + 160)) {
      unint64_t v51 = *(uint64_t (****)())(a2 + 160);
    }
    else {
      unint64_t v51 = &off_252C568;
    }
    sub_119A268(v48, (uint64_t)v51);
    if ((v23 & 0x80) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_23:
  if ((v23 & 0x3F00) == 0) {
    goto LABEL_32;
  }
  if ((v23 & 0x100) != 0)
  {
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    if ((v23 & 0x200) == 0)
    {
LABEL_26:
      if ((v23 & 0x400) == 0) {
        goto LABEL_27;
      }
      goto LABEL_90;
    }
  }
  else if ((v23 & 0x200) == 0)
  {
    goto LABEL_26;
  }
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  if ((v23 & 0x400) == 0)
  {
LABEL_27:
    if ((v23 & 0x800) == 0) {
      goto LABEL_28;
    }
    goto LABEL_91;
  }
LABEL_90:
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  if ((v23 & 0x800) == 0)
  {
LABEL_28:
    if ((v23 & 0x1000) == 0) {
      goto LABEL_29;
    }
LABEL_92:
    *(unsigned char *)(a1 + 194) = *(unsigned char *)(a2 + 194);
    if ((v23 & 0x2000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_91:
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  if ((v23 & 0x1000) != 0) {
    goto LABEL_92;
  }
LABEL_29:
  if ((v23 & 0x2000) != 0) {
LABEL_30:
  }
    *(unsigned char *)(a1 + 195) = *(unsigned char *)(a2 + 195);
LABEL_31:
  *(_DWORD *)(a1 + 16) |= v23;
LABEL_32:
  uint64_t v24 = *(void *)(a2 + 8);
  if (v24)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v24 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_119A204(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
LABEL_6:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_7:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_119A268(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    int v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *int v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    unint64_t v15 = (const std::string **)(*(void *)(a2 + 88) + 8);
    int v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[3], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2]- LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    int v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      *int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    int v21 = (std::string **)sub_188CCE4((uint64_t)&v3[4], *(_DWORD *)(a2 + 104));
    uint64_t result = (std::string *)sub_11DB0B0((uint64_t *)&v3[4], v21, v20, v19, *(_DWORD *)v3[4].__r_.__value_.__r.__words[2]- LODWORD(v3[4].__r_.__value_.__r.__words[1]));
    int v22 = LODWORD(v3[4].__r_.__value_.__r.__words[1]) + v19;
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = v22;
    int v23 = (int *)v3[4].__r_.__value_.__r.__words[2];
    if (*v23 < v22) {
      *int v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 16);
  if ((v24 & 3) != 0)
  {
    if (v24)
    {
      uint64_t v25 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v27 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v27 = (uint64_t *)*v27;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[5], v25, v27);
    }
    if ((v24 & 2) != 0)
    {
      uint64_t v28 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v29 = v3->__r_.__value_.__l.__size_;
      uint64_t v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        uint64_t v30 = (uint64_t *)*v30;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[5].__r_.__value_.__l.__size_, v28, v30);
    }
  }
  uint64_t v31 = *(void *)(a2 + 8);
  if (v31)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v31 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_119A4D8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_15B9824(*(void *)(a1 + 120));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 128));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_119A524@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "revgeo.ClientizeParameters");
}

uint64_t sub_119A534(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_252C430)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_182B32C(v5);
      operator delete();
    }
    if (*(void *)(a1 + 56))
    {
      sub_1463FF8();
      operator delete();
    }
    if (*(void *)(a1 + 64))
    {
      sub_11E0F4C();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_11DAD10((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_119A630(uint64_t a1)
{
  sub_119A534(a1);

  operator delete();
}

uint64_t sub_119A668(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1198344(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if (v5)
    {
      uint64_t result = sub_182B368(*(void *)(v1 + 48));
      if ((v5 & 2) == 0)
      {
LABEL_8:
        if ((v5 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_8;
    }
    uint64_t result = sub_1464034(*(void *)(v1 + 56));
    if ((v5 & 4) != 0) {
LABEL_9:
    }
      uint64_t result = sub_11E0F88(*(void *)(v1 + 64));
  }
LABEL_10:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 64) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_119A728(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    return v33;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v33 + 1;
    unsigned int v8 = *v33;
    if (*v33 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v33, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v33 + 2;
      }
    }
    uint64_t v33 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_44;
        }
        int v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v33) {
            return 0;
          }
          unint64_t v12 = v31;
        }
        else
        {
          int v11 = v7 + 2;
LABEL_13:
          uint64_t v33 = v11;
        }
        if (v12 > 3)
        {
          if (*v6) {
            uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 72) = v12;
        }
        goto LABEL_52;
      case 2u:
        if (v8 != 18) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 48);
        if (!v15)
        {
          int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v16 = (void *)*v16;
          }
          uint64_t v15 = sub_1836E54((uint64_t)v16);
          *(void *)(a1 + 48) = v15;
          char v7 = v33;
        }
        int v17 = (char *)sub_11798C8(a3, v15, (unsigned __int8 *)v7);
        goto LABEL_51;
      case 3u:
        if (v8 != 26) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 56);
        if (!v18)
        {
          int v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v19 = (void *)*v19;
          }
          sub_1478F54((uint64_t)v19);
          uint64_t v18 = v20;
          *(void *)(a1 + 56) = v20;
          char v7 = v33;
        }
        int v17 = (char *)sub_11793D8(a3, v18, (unsigned __int8 *)v7);
        goto LABEL_51;
      case 4u:
        if (v8 != 34) {
          goto LABEL_44;
        }
        int v21 = v7 - 1;
        while (1)
        {
          int v22 = (unsigned __int8 *)(v21 + 1);
          uint64_t v33 = v21 + 1;
          int v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            sub_119DD9C(*(void *)(a1 + 24));
            uint64_t v25 = sub_188CDC8(a1 + 24, v26);
            int v22 = (unsigned __int8 *)v33;
          }
          int v21 = (char *)sub_119AAA4(a3, v25, v22);
          uint64_t v33 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 34) {
            goto LABEL_52;
          }
        }
      case 5u:
        if (v8 != 42) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v27 = *(void *)(a1 + 64);
        if (!v27)
        {
          uint64_t v28 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v28 = (void *)*v28;
          }
          uint64_t v27 = sub_11E7CE4((uint64_t)v28);
          *(void *)(a1 + 64) = v27;
          char v7 = v33;
        }
        int v17 = (char *)sub_119AB34(a3, v27, (unsigned __int8 *)v7);
        goto LABEL_51;
      default:
LABEL_44:
        if (v8) {
          BOOL v29 = (v8 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v6)
          {
            uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = v33;
          }
          int v17 = (char *)sub_1885AC0(v8, v30, v7, a3);
LABEL_51:
          uint64_t v33 = v17;
          if (!v17) {
            return 0;
          }
LABEL_52:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            return v33;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v33;
    }
  }
}

uint64_t sub_119AAA4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11984F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_119AB34(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11E10D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_119ABC4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_182BE50(v10, v12, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 56);
    *uint64_t v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 28);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_1466BF0(v13, v15, a3);
  }
  int v16 = *(_DWORD *)(a1 + 32);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      uint64_t v4 = sub_11991E4(v18, (unint64_t)v20, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 64);
    *uint64_t v4 = 42;
    unsigned int v22 = *(_DWORD *)(v21 + 44);
    v4[1] = v22;
    if (v22 > 0x7F) {
      int v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      int v23 = v4 + 2;
    }
    uint64_t v4 = sub_11E1CF0(v21, v23, a3);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_119AEB4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11999DC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_22;
  }
  if (v8)
  {
    uint64_t v9 = sub_182C500(*(void *)(a1 + 48));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v10 = sub_1468738(*(void *)(a1 + 56));
  v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v11 = sub_11E238C(*(void *)(a1 + 64));
  v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0) {
    goto LABEL_22;
  }
LABEL_18:
  int v12 = *(_DWORD *)(a1 + 72);
  if (v12 < 0) {
    uint64_t v13 = 11;
  }
  else {
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v13;
LABEL_22:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v2 += v17;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_119B044(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DAF18((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 48);
      if (!v11)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v11 = sub_1836E54((uint64_t)v13);
        *(void *)(a1 + 48) = v11;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v14 = &off_254CA18;
      }
      sub_182C88C(v11, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_31;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 56);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      sub_1478F54((uint64_t)v17);
      *(void *)(a1 + 56) = v15;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v18 = &off_2539528;
    }
    sub_146945C(v15, (uint64_t)v18);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_31:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v19 = *(void *)(a1 + 64);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v19 = sub_11E7CE4((uint64_t)v21);
      *(void *)(a1 + 64) = v19;
    }
    if (*(void *)(a2 + 64)) {
      unsigned int v22 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unsigned int v22 = &off_252D7A8;
    }
    sub_11E26C0(v19, (uint64_t)v22);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_119B22C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_119A4D8(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t result = sub_182D83C(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t result = sub_146A1C8(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_11E2A70(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_119B2B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "revgeo.ClientizeRequest");
}

void *sub_119B2C8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_119B34C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_119B34C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t result = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252C480)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (v4)
    {
      sub_182E7B8(v4);
      operator delete();
    }
    if (*(void *)(a1 + 40))
    {
      sub_146E3A8();
      operator delete();
    }
    if (*(void *)(a1 + 48))
    {
      sub_16C8084();
      operator delete();
    }
    if (*(void *)(a1 + 56))
    {
      sub_11E4680();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 64);
    if (result)
    {
      sub_16BE0FC();
      operator delete();
    }
  }
  return result;
}

void sub_119B450(void *a1)
{
  sub_119B2C8(a1);

  operator delete();
}

uint64_t sub_119B488(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_21;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_21;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_21:
  uint64_t result = sub_182E7F4(*(void *)(result + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_23:
    uint64_t result = (uint64_t)sub_16C80C0(*(void *)(v1 + 48));
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_22:
  uint64_t result = sub_13F04AC(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
    goto LABEL_23;
  }
LABEL_6:
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_24:
  uint64_t result = sub_11E46BC(*(void *)(v1 + 56));
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    uint64_t result = sub_16BE138(*(void *)(v1 + 64));
LABEL_9:
  if ((v2 & 0xC0) != 0)
  {
    *(unsigned char *)(v1 + 76) = 0;
    *(_DWORD *)(v1 + 72) = 0;
  }
  if ((v2 & 0x300) != 0) {
    *(void *)(v1 + 80) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_119B580(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v49 + 1);
    unsigned int v9 = **(unsigned char **)v49;
    if ((char)**(unsigned char **)v49 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v49, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v49 + 2);
      }
    }
    *(void *)uint64_t v49 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_69;
        }
        uint64_t v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)uint64_t v49 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v49) {
            goto LABEL_103;
          }
          unint64_t v13 = v42;
        }
        else
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v49 = v12;
        }
        if (sub_13E78E4(v13))
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 72) = v13;
          goto LABEL_77;
        }
        if (*v7) {
          unint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v48 = 1;
        goto LABEL_96;
      case 2u:
        if (v9 != 18) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void *)(a1 + 32);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_1836F0C((uint64_t)v17);
          *(void *)(a1 + 32) = v16;
          int v8 = *(unsigned __int8 **)v49;
        }
        uint64_t v18 = sub_1179958(a3, v16, v8);
        goto LABEL_76;
      case 3u:
        if (v9 != 26) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 40);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          sub_147937C((uint64_t)v20);
          uint64_t v19 = v21;
          *(void *)(a1 + 40) = v21;
          int v8 = *(unsigned __int8 **)v49;
        }
        uint64_t v18 = sub_1179468(a3, v19, v8);
        goto LABEL_76;
      case 4u:
        if (v9 != 32) {
          goto LABEL_69;
        }
        v5 |= 0x80u;
        unsigned int v22 = (char *)(v8 + 1);
        uint64_t v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v43 = sub_188C138((uint64_t)v8, v23);
          *(void *)uint64_t v49 = v43;
          *(unsigned char *)(a1 + 76) = v44 != 0;
          if (!v43) {
            goto LABEL_103;
          }
        }
        else
        {
          unsigned int v22 = (char *)(v8 + 2);
LABEL_32:
          *(void *)uint64_t v49 = v22;
          *(unsigned char *)(a1 + 76) = v23 != 0;
        }
        goto LABEL_77;
      case 5u:
        if (v9 != 42) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v25 = *(void **)(a1 + 48);
        if (!v25)
        {
          unint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_1786B58((uint64_t)v26);
          *(void *)(a1 + 48) = v25;
          int v8 = *(unsigned __int8 **)v49;
        }
        uint64_t v18 = sub_119BB18(a3, (uint64_t)v25, v8);
        goto LABEL_76;
      case 6u:
        if (v9 != 48) {
          goto LABEL_69;
        }
        uint64_t v27 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v28 = *v27;
        int v29 = v13 + (v28 << 7);
        unint64_t v13 = (v29 - 128);
        if (v28 < 0)
        {
          *(void *)uint64_t v49 = sub_188C138((uint64_t)v8, (v29 - 128));
          if (!*(void *)v49) {
            goto LABEL_103;
          }
          unint64_t v13 = v45;
        }
        else
        {
          uint64_t v27 = (char *)(v8 + 2);
LABEL_43:
          *(void *)uint64_t v49 = v27;
        }
        if (v13 <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 80) = v13;
          goto LABEL_77;
        }
        if (*v7) {
          unint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v48 = 6;
        goto LABEL_96;
      case 7u:
        if (v9 != 58) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v30 = *(void *)(a1 + 56);
        if (!v30)
        {
          unint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_11E7F70((uint64_t)v31);
          *(void *)(a1 + 56) = v30;
          int v8 = *(unsigned __int8 **)v49;
        }
        uint64_t v18 = sub_119BBB4(a3, v30, v8);
        goto LABEL_76;
      case 8u:
        if (v9 != 66) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v32 = *(void **)(a1 + 64);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v33 = (void *)*v33;
          }
          uint64_t v32 = sub_1786400((uint64_t)v33);
          *(void *)(a1 + 64) = v32;
          int v8 = *(unsigned __int8 **)v49;
        }
        uint64_t v18 = sub_119BC44(a3, (uint64_t)v32, v8);
        goto LABEL_76;
      case 9u:
        if (v9 != 74) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v34 = *(void *)(a1 + 8);
        uint64_t v35 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
        if (v34) {
          uint64_t v35 = (uint64_t *)*v35;
        }
        unint64_t v36 = (std::string *)sub_1880F84((void *)(a1 + 24), v35);
        uint64_t v18 = (uint64_t)sub_188C244(v36, *(char **)v49, (uint64_t)a3);
        goto LABEL_76;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_69;
        }
        uint64_t v37 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_66;
        }
        int v38 = *v37;
        int v39 = v13 + (v38 << 7);
        unint64_t v13 = (v39 - 128);
        if (v38 < 0)
        {
          *(void *)uint64_t v49 = sub_188C138((uint64_t)v8, (v39 - 128));
          if (!*(void *)v49) {
            goto LABEL_103;
          }
          unint64_t v13 = v46;
        }
        else
        {
          uint64_t v37 = (char *)(v8 + 2);
LABEL_66:
          *(void *)uint64_t v49 = v37;
        }
        if (v13 > 6)
        {
          if (*v7) {
            unint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v48 = 10;
LABEL_96:
          sub_188C020(v48, v13, v47);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x200u;
          *(_DWORD *)(a1 + 84) = v13;
        }
        goto LABEL_77;
      default:
LABEL_69:
        if (v9) {
          BOOL v40 = (v9 & 7) == 4;
        }
        else {
          BOOL v40 = 1;
        }
        if (!v40)
        {
          if (*v7)
          {
            uint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v49;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v9, v41, (char *)v8, a3);
LABEL_76:
          *(void *)uint64_t v49 = v18;
          if (!v18) {
            goto LABEL_103;
          }
LABEL_77:
          if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_103:
        }
          *(void *)uint64_t v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v49;
    }
  }
}

uint64_t sub_119BB18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C8144(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

BOOL sub_119BBA8(unsigned int a1)
{
  return a1 < 3;
}

uint64_t sub_119BBB4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11E4828(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_119BC44(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16BE17C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_119BCD4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_182F28C(v10, v12, a3);
    if ((v6 & 4) == 0)
    {
LABEL_10:
      if ((v6 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  *char v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  char v4 = sub_146ECEC(v13, (unint64_t)v15, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v16 = *(unsigned char *)(a1 + 76);
  *char v4 = 32;
  v4[1] = v16;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x100) == 0) {
      goto LABEL_41;
    }
    goto LABEL_35;
  }
LABEL_29:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v17 = *(void *)(a1 + 48);
  *char v4 = 42;
  unsigned int v18 = *(_DWORD *)(v17 + 44);
  v4[1] = v18;
  if (v18 > 0x7F) {
    uint64_t v19 = sub_188A9CC(v18, v4 + 1);
  }
  else {
    uint64_t v19 = v4 + 2;
  }
  char v4 = sub_16C82D8(v17, v19, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_35:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v20 = *(int *)(a1 + 80);
    *char v4 = 48;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_41:
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v23 = *(void *)(a1 + 56);
    *char v4 = 58;
    unsigned int v24 = *(_DWORD *)(v23 + 44);
    v4[1] = v24;
    if (v24 > 0x7F) {
      uint64_t v25 = sub_188A9CC(v24, v4 + 1);
    }
    else {
      uint64_t v25 = v4 + 2;
    }
    char v4 = sub_11E5704(v23, v25, a3);
    if ((v6 & 0x20) == 0)
    {
LABEL_43:
      if ((v6 & 1) == 0) {
        goto LABEL_44;
      }
      goto LABEL_58;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_43;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v26 = *(void *)(a1 + 64);
  *char v4 = 66;
  unsigned int v27 = *(_DWORD *)(v26 + 20);
  v4[1] = v27;
  if (v27 > 0x7F) {
    int v28 = sub_188A9CC(v27, v4 + 1);
  }
  else {
    int v28 = v4 + 2;
  }
  char v4 = sub_16BE2D4(v26, v28, a3);
  if ((v6 & 1) == 0)
  {
LABEL_44:
    if ((v6 & 0x200) == 0) {
      goto LABEL_65;
    }
    goto LABEL_59;
  }
LABEL_58:
  char v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0) {
    goto LABEL_65;
  }
LABEL_59:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v29 = *(int *)(a1 + 84);
  *char v4 = 80;
  v4[1] = v29;
  if (v29 > 0x7F)
  {
    v4[1] = v29 | 0x80;
    unint64_t v30 = v29 >> 7;
    v4[2] = v29 >> 7;
    v4 += 3;
    if (v29 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v31 = v30 >> 14;
        v30 >>= 7;
        *v4++ = v30;
      }
      while (v31);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_65:
  uint64_t v32 = *(void *)(a1 + 8);
  if ((v32 & 1) == 0) {
    return v4;
  }
  unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v34 + 31) < 0)
  {
    uint64_t v35 = *(void **)(v34 + 8);
    uint64_t v36 = *(void *)(v34 + 16);
  }
  else
  {
    uint64_t v35 = (void *)(v34 + 8);
    LODWORD(v36) = *(unsigned __int8 *)(v34 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v36)
  {
    uint64_t v37 = (int)v36;
    memcpy(v4, v35, (int)v36);
    v4 += v37;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v35, v36, v4);
}

uint64_t sub_119C170(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_27;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v8 = sub_182F8B4(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = sub_146F320(*(void *)(a1 + 40));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v10 = sub_16C83C8(*(void *)(a1 + 48));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_19:
    uint64_t v12 = sub_16BE3A0(*(void *)(a1 + 64));
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x40) == 0) {
      goto LABEL_24;
    }
LABEL_20:
    int v13 = *(_DWORD *)(a1 + 72);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v14;
    goto LABEL_24;
  }
LABEL_18:
  uint64_t v11 = sub_11E5FB4(*(void *)(a1 + 56));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0) {
    goto LABEL_19;
  }
LABEL_14:
  if ((v2 & 0x40) != 0) {
    goto LABEL_20;
  }
LABEL_24:
  if ((v2 & 0x80) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_27:
  if ((v2 & 0x300) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      int v15 = *(_DWORD *)(a1 + 80);
      if (v15 < 0) {
        uint64_t v16 = 11;
      }
      else {
        uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v16;
    }
    if ((v2 & 0x200) != 0)
    {
      int v17 = *(_DWORD *)(a1 + 84);
      if (v17 < 0) {
        uint64_t v18 = 11;
      }
      else {
        uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v18;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v20 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    result += v21;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_119C3DC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_33;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_1836F0C((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      int v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      int v13 = &off_254CB28;
    }
    sub_182FC60(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_41;
    }
LABEL_33:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      sub_147937C((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      int v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      int v17 = &off_25398D0;
    }
    sub_13F17EC(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_49;
    }
LABEL_41:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v18 = *(void **)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = sub_1786B58((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v21 = &off_2544B60;
    }
    sub_16C1200((uint64_t)v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_57;
    }
LABEL_49:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v22 = *(void *)(a1 + 56);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      unsigned int v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unsigned int v24 = (void *)*v24;
      }
      uint64_t v22 = sub_11E7F70((uint64_t)v24);
      *(void *)(a1 + 56) = v22;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v25 = &off_252D860;
    }
    sub_11E63D4(v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_65;
    }
LABEL_57:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v26 = *(std::string **)(a1 + 64);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      int v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        int v28 = (void *)*v28;
      }
      uint64_t v26 = (std::string *)sub_1786400((uint64_t)v28);
      *(void *)(a1 + 64) = v26;
    }
    if (*(void *)(a2 + 64)) {
      unint64_t v29 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unint64_t v29 = &off_25446E8;
    }
    sub_12329D0(v26, (uint64_t)v29);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
      goto LABEL_11;
    }
LABEL_65:
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x300) != 0)
  {
    if ((v4 & 0x100) != 0) {
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    }
    if ((v4 & 0x200) != 0) {
      *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_119C668(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_18300B0(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_13F1C1C(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_16C8468(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_11E6878(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_119C6DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "revgeo.ClientizeResult");
}

void *sub_119C6EC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DAD90(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_119C76C(void *a1)
{
  sub_119C6EC(a1);

  operator delete();
}

uint64_t sub_119C7A4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_119B488(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 7) != 0)
  {
    *(_DWORD *)(v1 + 56) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_119C838(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v34 = a2;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    return v34;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v34 + 1;
    unsigned int v8 = *v34;
    if (*v34 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v34, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v34 + 2;
      }
    }
    unint64_t v34 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_40;
        }
        uint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          unint64_t v34 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v34) {
            return 0;
          }
          unint64_t v12 = v29;
        }
        else
        {
          uint64_t v11 = v7 + 2;
LABEL_13:
          unint64_t v34 = v11;
        }
        if (sub_13E78E4(v12))
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          *(_DWORD *)(a1 + 48) = v12;
          goto LABEL_47;
        }
        if (*v6) {
          uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v33 = 1;
        goto LABEL_64;
      case 2u:
        if (v8 != 16) {
          goto LABEL_40;
        }
        uint64_t v15 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v16 = *v15;
        int v17 = v12 + (v16 << 7);
        unint64_t v12 = (v17 - 128);
        if (v16 < 0)
        {
          unint64_t v34 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
          if (!v34) {
            return 0;
          }
          unint64_t v12 = v30;
        }
        else
        {
          uint64_t v15 = v7 + 2;
LABEL_20:
          unint64_t v34 = v15;
        }
        if (v12 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 52) = v12;
          goto LABEL_47;
        }
        if (*v6) {
          uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v33 = 2;
        goto LABEL_64;
      case 3u:
        if (v8 != 26) {
          goto LABEL_40;
        }
        uint64_t v18 = v7 - 1;
        while (1)
        {
          uint64_t v19 = (unsigned __int8 *)(v18 + 1);
          unint64_t v34 = v18 + 1;
          unint64_t v20 = *(_DWORD **)(a1 + 40);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 32) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            sub_119DF10(*(void *)(a1 + 24));
            uint64_t v22 = sub_188CDC8(a1 + 24, v23);
            uint64_t v19 = (unsigned __int8 *)v34;
          }
          uint64_t v18 = (char *)sub_119CBF4(a3, v22, v19);
          unint64_t v34 = v18;
          if (!v18) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
            goto LABEL_47;
          }
        }
      case 4u:
        if (v8 != 32) {
          goto LABEL_40;
        }
        unsigned int v24 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v25 = *v24;
        int v26 = v12 + (v25 << 7);
        unint64_t v12 = (v26 - 128);
        if (v25 < 0)
        {
          unint64_t v34 = (char *)sub_188C138((uint64_t)v7, (v26 - 128));
          if (!v34) {
            return 0;
          }
          unint64_t v12 = v31;
        }
        else
        {
          unsigned int v24 = v7 + 2;
LABEL_37:
          unint64_t v34 = v24;
        }
        if (v12 > 4)
        {
          if (*v6) {
            uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v33 = 4;
LABEL_64:
          sub_188C020(v33, v12, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 56) = v12;
        }
        goto LABEL_47;
      default:
LABEL_40:
        if (v8) {
          BOOL v27 = (v8 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v6)
          {
            int v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v34;
          }
          unint64_t v34 = (char *)sub_1885AC0(v8, v28, v7, a3);
          if (!v34) {
            return 0;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            return v34;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v34;
    }
  }
}

uint64_t sub_119CBF4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_119B580(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_119CC84(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 52);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        int v17 = v4 + 2;
      }
      uint64_t v4 = sub_119BCD4(v15, (unint64_t)v17, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(int *)(a1 + 56);
    *uint64_t v4 = 32;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    unsigned int v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    unsigned int v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_119CF40(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_119C170(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) == 0) {
    goto LABEL_26;
  }
  if (v8)
  {
    int v9 = *(_DWORD *)(a1 + 48);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_26;
      }
      goto LABEL_22;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  int v11 = *(_DWORD *)(a1 + 52);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v12;
  if ((v8 & 4) != 0)
  {
LABEL_22:
    int v13 = *(_DWORD *)(a1 + 56);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v14;
  }
LABEL_26:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_119D0A4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DAFA4((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 16) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_119D1BC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_119C668(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_119D214@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "revgeo.ClientizeResponse");
}

void *sub_119D224(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_119D298(void *a1)
{
  sub_119D224(a1);

  operator delete();
}

char *sub_119D2D0(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v31 + 2;
      }
    }
    unint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unsigned int v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unsigned int v16 = v8 + 2;
LABEL_26:
        unint64_t v31 = v16;
        *(_DWORD *)(a1 + 36) = v17;
        goto LABEL_36;
      }
      uint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v17);
      unint64_t v31 = v25;
      *(_DWORD *)(a1 + 36) = v26;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 1u;
    unint64_t v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v19 = v8 + 2;
LABEL_31:
      unint64_t v31 = v19;
      *(void *)(a1 + 24) = v20;
      goto LABEL_36;
    }
    BOOL v27 = (char *)sub_188C138((uint64_t)v8, v20);
    unint64_t v31 = v27;
    *(void *)(a1 + 24) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 2u;
    uint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      unint64_t v31 = v22;
      *(_DWORD *)(a1 + 32) = v23;
      goto LABEL_36;
    }
    unint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    unint64_t v31 = v29;
    *(_DWORD *)(a1 + 32) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v31;
    }
    unint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  unint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_119D524(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 24);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 36);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

unint64_t sub_119D744(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_10;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_119D810()
{
  return 1;
}

void *sub_119D818@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "revgeo.OfflineGeoId");
}

void *sub_119D828(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_119D89C(void *a1)
{
  sub_119D828(a1);

  operator delete();
}

char *sub_119D8D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unsigned int v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unsigned int v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(void *)(a1 + 32) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      unint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    int v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unsigned int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}