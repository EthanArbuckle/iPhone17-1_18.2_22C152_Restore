void sub_1312BB4()
{
  operator delete();
}

uint64_t sub_1312C18(uint64_t a1)
{
  v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25329A8 && *(void *)(a1 + 56))
  {
    sub_145FE08();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_122D1B4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1312CF0(uint64_t a1)
{
  sub_1312C18(a1);

  operator delete();
}

uint64_t sub_1312D28(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      result = sub_12B3388(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v5 & 2) != 0) {
LABEL_10:
    }
      result = sub_1369BB4(*(void *)(v1 + 56));
  }
LABEL_11:
  if ((v5 & 0x1C) != 0)
  {
    *(_WORD *)(v1 + 68) = 0;
    *(_DWORD *)(v1 + 64) = 0;
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1312E00(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v42 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v42 + 1);
    unsigned int v9 = **(unsigned char **)v42;
    if ((char)**(unsigned char **)v42 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v42, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v42 + 2);
      }
    }
    *(void *)v42 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          v13 = (uint64_t *)*v13;
        }
        v14 = (std::string *)sub_1880F84((void *)(a1 + 48), v13);
        v15 = (void *)sub_188C244(v14, *(char **)v42, (uint64_t)a3);
        goto LABEL_53;
      case 2u:
        if (v9 != 16) {
          goto LABEL_46;
        }
        v16 = (char *)(v8 + 1);
        unint64_t v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)v42 = sub_188C138((uint64_t)v8, (v19 - 128));
          if (!*(void *)v42) {
            goto LABEL_69;
          }
          unint64_t v17 = v36;
        }
        else
        {
          v16 = (char *)(v8 + 2);
LABEL_17:
          *(void *)v42 = v16;
        }
        if (v17 > 1)
        {
          if (*v7) {
            v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v17, v41);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 64) = v17;
        }
        goto LABEL_54;
      case 3u:
        if (v9 != 24) {
          goto LABEL_46;
        }
        v5 |= 8u;
        v20 = (char *)(v8 + 1);
        uint64_t v21 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v37 = sub_188C138((uint64_t)v8, v21);
          *(void *)v42 = v37;
          *(unsigned char *)(a1 + 68) = v38 != 0;
          if (!v37) {
            goto LABEL_69;
          }
        }
        else
        {
          v20 = (char *)(v8 + 2);
LABEL_24:
          *(void *)v42 = v20;
          *(unsigned char *)(a1 + 68) = v21 != 0;
        }
        goto LABEL_54;
      case 4u:
        if (v9 != 34) {
          goto LABEL_46;
        }
        v23 = (char *)(v8 - 1);
        while (1)
        {
          v24 = (unsigned __int8 *)(v23 + 1);
          *(void *)v42 = v23 + 1;
          v25 = *(_DWORD **)(a1 + 40);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 32), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 32) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            sub_12BCA98(*(void *)(a1 + 24));
            uint64_t v27 = sub_188CDC8(a1 + 24, v28);
            v24 = *(unsigned __int8 **)v42;
          }
          v23 = sub_120D444(a3, v27, v24);
          *(void *)v42 = v23;
          if (!v23) {
            goto LABEL_69;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 34) {
            goto LABEL_54;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        v29 = *(void **)(a1 + 56);
        if (!v29)
        {
          v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v30 = (void *)*v30;
          }
          v29 = sub_1478C60((uint64_t)v30);
          *(void *)(a1 + 56) = v29;
          char v8 = *(unsigned __int8 **)v42;
        }
        v15 = sub_129760C(a3, (uint64_t)v29, v8);
        goto LABEL_53;
      case 6u:
        if (v9 != 48) {
          goto LABEL_46;
        }
        v5 |= 0x10u;
        v31 = (char *)(v8 + 1);
        uint64_t v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v39 = sub_188C138((uint64_t)v8, v32);
          *(void *)v42 = v39;
          *(unsigned char *)(a1 + 69) = v40 != 0;
          if (!v39) {
            goto LABEL_69;
          }
        }
        else
        {
          v31 = (char *)(v8 + 2);
LABEL_45:
          *(void *)v42 = v31;
          *(unsigned char *)(a1 + 69) = v32 != 0;
        }
        goto LABEL_54;
      default:
LABEL_46:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v7)
          {
            v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(unsigned __int8 **)v42;
          }
          v15 = sub_1885AC0(v9, v35, (char *)v8, a3);
LABEL_53:
          *(void *)v42 = v15;
          if (!v15) {
            goto LABEL_69;
          }
LABEL_54:
          if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_69:
        }
          *(void *)v42 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v42;
    }
  }
}

unsigned char *sub_1313218(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 68);
    unsigned char *v4 = 24;
    v4[1] = v10;
    v4 += 2;
  }
  int v11 = *(_DWORD *)(a1 + 32);
  if (v11)
  {
    for (int i = 0; i != v11; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      v4[1] = v14;
      if (v14 > 0x7F) {
        v15 = sub_188A9CC(v14, v4 + 1);
      }
      else {
        v15 = v4 + 2;
      }
      uint64_t v4 = sub_12B3AF0(v13, (unint64_t)v15, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 56);
    unsigned char *v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 44);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    uint64_t v4 = sub_1460138(v16, v18, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v19 = *(unsigned char *)(a1 + 69);
    unsigned char *v4 = 48;
    v4[1] = v19;
    v4 += 2;
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_13134D0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12B3E94(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x1F) == 0) {
    goto LABEL_27;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_22;
      }
LABEL_18:
      int v13 = *(_DWORD *)(a1 + 64);
      if (v13 < 0) {
        uint64_t v14 = 11;
      }
      else {
        uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v14;
      goto LABEL_22;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v12 = sub_1460320(*(void *)(a1 + 56));
  v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) != 0) {
    goto LABEL_18;
  }
LABEL_22:
  uint64_t v15 = v2 + 2;
  if ((v8 & 8) == 0) {
    uint64_t v15 = v2;
  }
  if ((v8 & 0x10) != 0) {
    uint64_t v2 = v15 + 2;
  }
  else {
    uint64_t v2 = v15;
  }
LABEL_27:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v2 += v19;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1313658(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122D3C0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x1F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        int v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_27;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void **)(a1 + 56);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_1478C60((uint64_t)v16);
      *(void *)(a1 + 56) = v14;
    }
    if (*(void *)(a2 + 56)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unsigned int v17 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v14, (uint64_t)v17);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
LABEL_27:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_12;
      }
LABEL_10:
      *(unsigned char *)(a1 + 69) = *(unsigned char *)(a2 + 69);
      goto LABEL_11;
    }
LABEL_28:
    *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
    if ((v9 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13137F8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_12B4328(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_136AEA0(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_131385C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntry.AutocompleteEntryQuery");
}

uint64_t sub_131386C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24A8FC0;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 88) = 0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_13138E0(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1313910(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24A8FC0;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  int v6 = *(_DWORD *)(a2 + 40);
  if (v6) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  long long v7 = *(_OWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v7;
  return a1;
}

void sub_1313A60()
{
}

uint64_t sub_1313AE4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_25329F0)
  {
    if (*(void *)(a1 + 48))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 56))
    {
      sub_1762C7C();
      operator delete();
    }
    if (*(void *)(a1 + 64))
    {
      sub_184B078();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1313BDC(uint64_t a1)
{
  sub_1313AE4(a1);

  operator delete();
}

uint64_t sub_1313C14(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 48));
      if ((v3 & 2) == 0)
      {
LABEL_4:
        if ((v3 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v3 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = sub_175FE78(*(void *)(a1 + 56));
    if ((v3 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = (uint64_t)sub_16CD894(*(void *)(a1 + 64));
  }
LABEL_6:
  if ((v3 & 0x38) != 0)
  {
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 80) = 0;
    *(_DWORD *)(a1 + 88) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_1313CB4(uint64_t a1, char *a2, int32x2_t *a3)
{
  v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  long long v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v31 + 2;
      }
    }
    v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 48);
        if (!v12)
        {
          int v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v13 = (void *)*v13;
          }
          uint64_t v12 = sub_15C1918((uint64_t)v13);
          *(void *)(a1 + 48) = v12;
          int v8 = v31;
        }
        uint64_t v14 = sub_1198F14(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_48;
      case 2u:
        if (v9 != 16) {
          goto LABEL_39;
        }
        v5 |= 8u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v16);
          v31 = v27;
          *(void *)(a1 + 72) = v28;
          if (!v27) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_19:
          v31 = v15;
          *(void *)(a1 + 72) = v16;
        }
        goto LABEL_49;
      case 3u:
        if (v9 != 24) {
          goto LABEL_39;
        }
        v5 |= 0x20u;
        uint64_t v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_24;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          v29 = (char *)sub_188C138((uint64_t)v8, v18);
          v31 = v29;
          *(_DWORD *)(a1 + 88) = v30;
          if (!v29) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_24:
          v31 = v19;
          *(_DWORD *)(a1 + 88) = v18;
        }
        goto LABEL_49;
      case 4u:
        if (v9 != 34) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v21 = *(void *)(a1 + 56);
        if (!v21)
        {
          unint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_178CDA8((uint64_t)v22);
          *(void *)(a1 + 56) = v21;
          int v8 = v31;
        }
        uint64_t v14 = (char *)sub_1265F8C(a3, v21, (unsigned __int8 *)v8);
        goto LABEL_48;
      case 5u:
        if (v9 != 41) {
          goto LABEL_39;
        }
        v5 |= 0x10u;
        *(void *)(a1 + 80) = *(void *)v8;
        v31 = v8 + 8;
        goto LABEL_49;
      case 6u:
        if (v9 != 50) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v23 = *(void *)(a1 + 64);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_185089C((uint64_t)v24);
          *(void *)(a1 + 64) = v23;
          int v8 = v31;
        }
        uint64_t v14 = sub_12688D0(a3, v23, (unsigned __int8 *)v8);
        goto LABEL_48;
      default:
LABEL_39:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (v9 - 80000 > 0x13887)
          {
            if (*v7)
            {
              uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v8 = v31;
            }
            uint64_t v14 = (char *)sub_1885AC0(v9, v26, v8, a3);
          }
          else
          {
            uint64_t v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25329F0, (uint64_t *)(a1 + 8), a3);
          }
LABEL_48:
          v31 = v14;
          if (!v14) {
            goto LABEL_58;
          }
LABEL_49:
          if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_58:
        }
          v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v31;
    }
  }
}

char *sub_131403C(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 72);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 88);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 56);
    char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 44);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_1763540(v16, v18, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_24:
      if ((v6 & 4) == 0) {
        goto LABEL_41;
      }
      goto LABEL_35;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_24;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 80);
  char *v4 = 41;
  *(void *)(v4 + 1) = v19;
  v4 += 9;
  if ((v6 & 4) != 0)
  {
LABEL_35:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v20 = *(void *)(a1 + 64);
    char *v4 = 50;
    unsigned int v21 = *(_DWORD *)(v20 + 44);
    v4[1] = v21;
    if (v21 > 0x7F) {
      unint64_t v22 = sub_188A9CC(v21, v4 + 1);
    }
    else {
      unint64_t v22 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v20, v22, a3);
  }
LABEL_41:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 10000, 20001, v4, a3);
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_1314380(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x3F) == 0) {
    goto LABEL_18;
  }
  if (v3)
  {
    uint64_t v6 = sub_15B0D90(*(void *)(a1 + 48));
    v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_14:
      uint64_t v8 = sub_184B568(*(void *)(a1 + 64));
      v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v3 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v7 = sub_1763C40(*(void *)(a1 + 56));
  v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_5:
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 72) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_7:
  if ((v3 & 0x10) != 0) {
    v2 += 9;
  }
  if ((v3 & 0x20) != 0)
  {
    int v4 = *(_DWORD *)(a1 + 88);
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v5;
  }
LABEL_18:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_13144F8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = *(void *)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C1918((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v9 = &off_253F1A0;
      }
      sub_15B0E24(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_30;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v10 = *(void *)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_178CDA8((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unint64_t v13 = &off_25486C0;
    }
    sub_1760D4C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_38;
    }
LABEL_30:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v14 = *(void *)(a1 + 64);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_185089C((uint64_t)v16);
      *(void *)(a1 + 64) = v14;
    }
    if (*(void *)(a2 + 64)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unsigned int v17 = &off_254D2B0;
    }
    sub_16CE3CC(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_39;
    }
LABEL_38:
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
      goto LABEL_9;
    }
LABEL_39:
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_131469C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 48));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_17612D4(*(void *)(a1 + 56));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_16CE508(*(void *)(a1 + 64));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1314708@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntry.AutocompleteEntryBusiness");
}

uint64_t sub_1314718(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24A9040;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 85) = 0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_131478C(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13147BC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24A9040;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  int v6 = *(_DWORD *)(a2 + 40);
  if (v6) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 77) = *(_OWORD *)(a2 + 77);
  *(_OWORD *)(a1 + 64) = v7;
  return a1;
}

void sub_13148D4()
{
}

uint64_t sub_1314944(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2532A50)
  {
    if (*(void *)(a1 + 48))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 56))
    {
      sub_184B078();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1314A1C(uint64_t a1)
{
  sub_1314944(a1);

  operator delete();
}

unsigned char *sub_1314A54(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3) {
      uint64_t result = sub_15B09D0(*(void *)(a1 + 48));
    }
    if ((v3 & 2) != 0) {
      uint64_t result = sub_16CD894(*(void *)(a1 + 56));
    }
  }
  if ((v3 & 0x7C) != 0)
  {
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 85) = 0;
    *(void *)(a1 + 80) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_1314AE0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  long long v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v38 + 1;
    unsigned int v9 = *v38;
    if (*v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v38 + 2;
      }
    }
    uint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 48);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_15C1918((uint64_t)v13);
          *(void *)(a1 + 48) = v12;
          uint64_t v8 = v38;
        }
        uint64_t v14 = sub_1198F14(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_52;
      case 2u:
        if (v9 != 16) {
          goto LABEL_43;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v32 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v38 = v32;
          *(void *)(a1 + 64) = v33;
          if (!v32) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_19:
          uint64_t v38 = v15;
          *(void *)(a1 + 64) = v16;
        }
        goto LABEL_53;
      case 3u:
        if (v9 != 25) {
          goto LABEL_43;
        }
        uint64_t v19 = *(void *)v8;
        uint64_t v18 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 72) = v19;
        goto LABEL_31;
      case 4u:
        if (v9 != 32) {
          goto LABEL_43;
        }
        uint64_t v20 = v8 + 1;
        unint64_t v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v22 = *v20;
        int v23 = v21 + (v22 << 7);
        unint64_t v21 = (v23 - 128);
        if (v22 < 0)
        {
          uint64_t v38 = (char *)sub_188C138((uint64_t)v8, (v23 - 128));
          if (!v38) {
            goto LABEL_68;
          }
          unint64_t v21 = v34;
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_26:
          uint64_t v38 = v20;
        }
        if (sub_16BAF04(v21))
        {
          *(_DWORD *)(a1 + 40) |= 0x20u;
          *(_DWORD *)(a1 + 88) = v21;
        }
        else
        {
          if (*v7) {
            uint64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v21, v37);
        }
        goto LABEL_53;
      case 5u:
        if (v9 != 41) {
          goto LABEL_43;
        }
        uint64_t v24 = *(void *)v8;
        uint64_t v18 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 80) = v24;
LABEL_31:
        uint64_t v38 = v18;
        goto LABEL_53;
      case 6u:
        if (v9 != 50) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v25 = *(void *)(a1 + 56);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_185089C((uint64_t)v26);
          *(void *)(a1 + 56) = v25;
          uint64_t v8 = v38;
        }
        uint64_t v14 = sub_12688D0(a3, v25, (unsigned __int8 *)v8);
        goto LABEL_52;
      case 7u:
        if (v9 != 56) {
          goto LABEL_43;
        }
        v5 |= 0x40u;
        uint64_t v27 = v8 + 1;
        uint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          v35 = (char *)sub_188C138((uint64_t)v8, v28);
          uint64_t v38 = v35;
          *(unsigned char *)(a1 + 92) = v36 != 0;
          if (!v35) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_42:
          uint64_t v38 = v27;
          *(unsigned char *)(a1 + 92) = v28 != 0;
        }
        goto LABEL_53;
      default:
LABEL_43:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (v9 - 80000 > 0x13887)
          {
            if (*v7)
            {
              v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v38;
            }
            uint64_t v14 = (char *)sub_1885AC0(v9, v31, v8, a3);
          }
          else
          {
            uint64_t v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2532A50, (uint64_t *)(a1 + 8), a3);
          }
LABEL_52:
          uint64_t v38 = v14;
          if (!v14) {
            goto LABEL_68;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_68:
        }
          uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v38;
    }
  }
}

char *sub_1314EF0(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 64);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 72);
    char *v4 = 25;
    *(void *)(v4 + 1) = v13;
    v4 += 9;
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(int *)(a1 + 88);
    char *v4 = 32;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v17 = *(void *)(a1 + 80);
    char *v4 = 41;
    *(void *)(v4 + 1) = v17;
    v4 += 9;
    if ((v6 & 2) == 0)
    {
LABEL_28:
      if ((v6 & 0x40) == 0) {
        goto LABEL_42;
      }
      goto LABEL_39;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_28;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v18 = *(void *)(a1 + 56);
  char *v4 = 50;
  unsigned int v19 = *(_DWORD *)(v18 + 44);
  v4[1] = v19;
  if (v19 > 0x7F) {
    uint64_t v20 = sub_188A9CC(v19, v4 + 1);
  }
  else {
    uint64_t v20 = v4 + 2;
  }
  uint64_t v4 = sub_184B3AC(v18, v20, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_39:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v21 = *(unsigned char *)(a1 + 92);
    char *v4 = 56;
    v4[1] = v21;
    v4 += 2;
  }
LABEL_42:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 10000, 20001, v4, a3);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_1315240(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x7F) == 0) {
    goto LABEL_18;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_21:
    uint64_t v11 = sub_184B568(*(void *)(a1 + 56));
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v10 = sub_15B0D90(*(void *)(a1 + 48));
  v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 2) != 0) {
    goto LABEL_21;
  }
LABEL_4:
  if ((v3 & 4) != 0) {
LABEL_5:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_6:
  uint64_t v4 = v2 + 9;
  if ((v3 & 8) == 0) {
    uint64_t v4 = v2;
  }
  if ((v3 & 0x10) != 0) {
    v4 += 9;
  }
  if ((v3 & 0x20) != 0)
  {
    int v5 = *(_DWORD *)(a1 + 88);
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v5 >= 0) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 11;
    }
    v4 += v7;
  }
  if ((v3 & 0x40) != 0) {
    uint64_t v2 = v4 + 2;
  }
  else {
    uint64_t v2 = v4;
  }
LABEL_18:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v12 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_131539C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = *(void *)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C1918((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        unsigned int v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unsigned int v9 = &off_253F1A0;
      }
      sub_15B0E24(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_31;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v10 = *(void *)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_185089C((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v13 = &off_254D2B0;
    }
    sub_16CE3CC(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_32;
    }
LABEL_31:
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_33;
    }
LABEL_32:
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_34;
    }
LABEL_33:
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
      goto LABEL_10;
    }
LABEL_34:
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1315510(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 48));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_16CE508(*(void *)(a1 + 56));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1315568@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntry.AutocompleteEntryAddress");
}

uint64_t sub_1315578(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24A90C0;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_13155E4(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1315614(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24A90C0;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  uint64_t v6 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v6;
  return a1;
}

void sub_13156F4()
{
}

uint64_t sub_1315750(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2532AB0 && *(void *)(a1 + 48))
  {
    sub_184B078();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1315810(uint64_t a1)
{
  sub_1315750(a1);

  operator delete();
}

unsigned char *sub_1315848(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3) {
    uint64_t result = sub_16CD894(*(void *)(a1 + 48));
  }
  if ((v3 & 6) != 0)
  {
    *(unsigned char *)(a1 + 64) = 0;
    *(void *)(a1 + 56) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_13158BC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v29 + 2;
      }
    }
    int v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v18 = v8 + 1;
      uint64_t v19 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_30;
      }
      int v20 = *v18;
      uint64_t v19 = v19 + (v20 << 7) - 128;
      if ((v20 & 0x80000000) == 0)
      {
        uint64_t v18 = v8 + 2;
LABEL_30:
        int v29 = v18;
        *(unsigned char *)(a1 + 64) = v19 != 0;
        goto LABEL_39;
      }
      uint64_t v25 = (char *)sub_188C138((uint64_t)v8, v19);
      int v29 = v25;
      *(unsigned char *)(a1 + 64) = v26 != 0;
      if (!v25) {
        goto LABEL_48;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 2u;
      char v21 = v8 + 1;
      uint64_t v22 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v23 = *v21;
      uint64_t v22 = v22 + (v23 << 7) - 128;
      if ((v23 & 0x80000000) == 0)
      {
        char v21 = v8 + 2;
LABEL_34:
        int v29 = v21;
        *(void *)(a1 + 56) = v22;
        goto LABEL_39;
      }
      uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v22);
      int v29 = v27;
      *(void *)(a1 + 56) = v28;
      if (!v27) {
        goto LABEL_48;
      }
    }
LABEL_39:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v16 = *(void *)(a1 + 48);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v16 = sub_185089C((uint64_t)v17);
      *(void *)(a1 + 48) = v16;
      uint64_t v8 = v29;
    }
    unint64_t v15 = sub_12688D0(a3, v16, (unsigned __int8 *)v8);
LABEL_38:
    int v29 = v15;
    if (!v15) {
      goto LABEL_48;
    }
    goto LABEL_39;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (v9 - 80000 > 0x13887)
    {
      if (*v7)
      {
        unint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = v29;
      }
      unint64_t v15 = (char *)sub_1885AC0(v9, v24, v8, a3);
    }
    else
    {
      unint64_t v15 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2532AB0, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_48:
  int v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v29;
}

char *sub_1315B68(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 64);
    char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 48);
    char *v4 = 26;
    unsigned int v12 = *(_DWORD *)(v11 + 44);
    v4[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, v4 + 1);
    }
    else {
      uint64_t v13 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v11, v13, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 10000, 20001, v4, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1315D50(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      uint64_t v4 = sub_184B568(*(void *)(a1 + 48));
      v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0) {
      v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v3 & 4) != 0) {
      v2 += 2;
    }
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_1315E24(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = *(void *)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_185089C((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v9 = &off_254D2B0;
      }
      sub_16CE3CC(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 40) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1315F18(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_16CE508(*(void *)(a1 + 48));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1315F5C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntry.AutocompleteEntryOfflineArea");
}

uint64_t sub_1315F6C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A9140;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_13160C0()
{
}

uint64_t sub_1316140(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2532AF8)
  {
    if (*(void *)(a1 + 32))
    {
      sub_15B2C44();
      operator delete();
    }
    if (*(void *)(a1 + 40))
    {
      sub_145FE08();
      operator delete();
    }
    if (*(void *)(a1 + 48))
    {
      sub_1362774();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_131624C(uint64_t a1)
{
  sub_1316140(a1);

  operator delete();
}

uint64_t sub_1316284(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_15:
    uint64_t result = sub_15B2C80(*(void *)(result + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_16;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_15;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_16:
  uint64_t result = sub_1369BB4(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = (uint64_t)sub_13627B0(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1316340(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 2);
      }
    }
    *(void *)int v23 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void **)(a1 + 32);
        if (!v11)
        {
          unsigned int v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v12 = (void *)*v12;
          }
          uint64_t v11 = sub_15C1B30((uint64_t)v12);
          *(void *)(a1 + 32) = v11;
          uint64_t v7 = *(unsigned __int8 **)v23;
        }
        uint64_t v13 = sub_125CF74(a3, (uint64_t)v11, v7);
        goto LABEL_38;
      case 2u:
        if (v8 != 18) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v14 = *(void **)(a1 + 40);
        if (!v14)
        {
          unint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_1478C60((uint64_t)v15);
          *(void *)(a1 + 40) = v14;
          uint64_t v7 = *(unsigned __int8 **)v23;
        }
        uint64_t v13 = (uint64_t)sub_129760C(a3, (uint64_t)v14, v7);
        goto LABEL_38;
      case 3u:
        if (v8 != 26) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 24), v17);
        uint64_t v13 = (uint64_t)sub_188C244(v18, *(char **)v23, (uint64_t)a3);
        goto LABEL_38;
      case 4u:
        if (v8 != 34) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v19 = *(void *)(a1 + 48);
        if (!v19)
        {
          int v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v20 = (void *)*v20;
          }
          uint64_t v19 = sub_1363A48((uint64_t)v20);
          *(void *)(a1 + 48) = v19;
          uint64_t v7 = *(unsigned __int8 **)v23;
        }
        uint64_t v13 = (uint64_t)sub_129424C(a3, v19, v7);
        goto LABEL_38;
      default:
LABEL_31:
        if (v8) {
          BOOL v21 = (v8 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v6)
          {
            uint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v23;
          }
          uint64_t v13 = (uint64_t)sub_1885AC0(v8, v22, (char *)v7, a3);
LABEL_38:
          *(void *)int v23 = v13;
          if (!v13) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
            return *(void *)v23;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v23;
    }
  }
}

char *sub_13165D0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B2EA4(v7, v9, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 40);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  char v4 = sub_1460138(v10, v12, a3);
  if ((v6 & 1) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_25;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 48);
  char *v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 44);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unint64_t v15 = v4 + 2;
  }
  char v4 = sub_1362F44(v13, v15, a3);
LABEL_25:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_13167E4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_15B2F90(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v11 = sub_1460320(*(void *)(a1 + 40));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_12:
    uint64_t v8 = sub_136363C(*(void *)(a1 + 48));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_13:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v12 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1316938(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) == 0) {
    goto LABEL_34;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(std::string **)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = (std::string *)sub_15C1B30((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    unint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    unint64_t v12 = &off_253F2A0;
  }
  sub_11EC100(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_34;
    }
    goto LABEL_26;
  }
LABEL_18:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void **)(a1 + 40);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = sub_1478C60((uint64_t)v15);
    *(void *)(a1 + 40) = v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v16 = &off_2539400;
  }
  sub_136AC4C((uint64_t)v13, (uint64_t)v16);
  if ((v4 & 8) != 0)
  {
LABEL_26:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v17 = *(void *)(a1 + 48);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = sub_1363A48((uint64_t)v19);
      *(void *)(a1 + 48) = v17;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v20 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v20 = &off_25343A8;
    }
    sub_1363878(v17, (uint64_t)v20);
  }
LABEL_34:
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1316ACC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_136AEA0(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_1363A30(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1316B18@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntry.AutocompleteEntryCategory");
}

uint64_t sub_1316B28(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24A91C0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  return a1;
}

void sub_1316BD4(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1316C04(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1316CA4(uint64_t a1)
{
  sub_1316C04(a1);

  operator delete();
}

uint64_t sub_1316CDC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1316D20(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    unint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    unint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)uint64_t v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = *(char **)v17;
    }
    unint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)uint64_t v17 = 0;
  return *(void *)v17;
}

char *sub_1316E78(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_1316F44(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1316FC8()
{
  return 1;
}

void *sub_1316FD0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntry.AutocompleteEntryBrandProfile");
}

uint64_t sub_1316FE0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A9240;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_131705C(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_131708C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1317100(void *a1)
{
  sub_131708C(a1);

  operator delete();
}

uint64_t sub_1317138(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1317150(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    uint64_t v19 = v6;
    if (v7 == 8)
    {
      unint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        unint64_t v12 = v6 + 2;
      }
      uint64_t v19 = v12;
LABEL_20:
      if (sub_1764FEC(v13))
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      else
      {
        if (*v5) {
          uint64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_13172FC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1317424(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1317498()
{
  return 1;
}

void *sub_13174A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntry.AutocompleteEntryClientResolved");
}

uint64_t sub_13174B0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A92C0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  return a1;
}

void sub_131755C()
{
}

uint64_t sub_13175AC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2532B70 && *(void *)(a1 + 24))
  {
    sub_1764400();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1317664(uint64_t a1)
{
  sub_13175AC(a1);

  operator delete();
}

uint64_t sub_131769C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_176443C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_13176F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  unint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    unint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_178CE04((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    unint64_t v12 = sub_1317850(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    unint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    unint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_1317850(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1764500(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13178E0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_1764760(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_13179F0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1764968(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1317A78(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unsigned int v7 = (void *)*v7;
      }
      data = (std::string *)sub_178CE04((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2548768;
    }
    uint64_t result = sub_1764A74(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1317B20()
{
  return 1;
}

void *sub_1317B28@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntry.AutocompleteEntryDirectionIntent");
}

uint64_t sub_1317B38(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24A9340;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 34) = *(_OWORD *)(a2 + 34);
  *(_OWORD *)(a1 + 24) = v5;
  return a1;
}

void sub_1317BBC(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1317BEC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1317C60(void *a1)
{
  sub_1317BEC(a1);

  operator delete();
}

uint64_t sub_1317C98(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x1F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_WORD *)(a1 + 48) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1317CC4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v28 + 1;
    unsigned int v9 = *v28;
    if (*v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v28 + 2;
      }
    }
    uint64_t v28 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_26;
        }
        uint64_t v13 = *(void *)v8;
        unint64_t v12 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 24) = v13;
        goto LABEL_15;
      case 2u:
        if (v9 != 17) {
          goto LABEL_26;
        }
        uint64_t v14 = *(void *)v8;
        unint64_t v12 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v14;
        goto LABEL_15;
      case 3u:
        if (v9 != 25) {
          goto LABEL_26;
        }
        uint64_t v15 = *(void *)v8;
        unint64_t v12 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v15;
LABEL_15:
        uint64_t v28 = v12;
        goto LABEL_33;
      case 4u:
        if (v9 != 32) {
          goto LABEL_26;
        }
        v5 |= 8u;
        unint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          unint64_t v24 = (char *)sub_188C138((uint64_t)v8, v17);
          uint64_t v28 = v24;
          *(unsigned char *)(a1 + 48) = v25 != 0;
          if (!v24) {
            goto LABEL_42;
          }
        }
        else
        {
          unint64_t v16 = v8 + 2;
LABEL_20:
          uint64_t v28 = v16;
          *(unsigned char *)(a1 + 48) = v17 != 0;
        }
        goto LABEL_33;
      case 5u:
        if (v9 != 40) {
          goto LABEL_26;
        }
        v5 |= 0x10u;
        uint64_t v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v26 = (char *)sub_188C138((uint64_t)v8, v20);
          uint64_t v28 = v26;
          *(unsigned char *)(a1 + 49) = v27 != 0;
          if (!v26) {
            goto LABEL_42;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_25:
          uint64_t v28 = v19;
          *(unsigned char *)(a1 + 49) = v20 != 0;
        }
        goto LABEL_33;
      default:
LABEL_26:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            int v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v28;
          }
          uint64_t v28 = (char *)sub_1885AC0(v9, v23, v8, a3);
          if (!v28) {
            goto LABEL_42;
          }
LABEL_33:
          if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_42:
        }
          uint64_t v28 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v28;
    }
  }
}

_OWORD *sub_1317F60(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *(unsigned char *)uint64_t v4 = 17;
  *(void *)((char *)v4 + 1) = v8;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_13:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 40);
  *(unsigned char *)uint64_t v4 = 25;
  *(void *)((char *)v4 + 1) = v9;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
LABEL_16:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)uint64_t v4 = 32;
  *((unsigned char *)v4 + 1) = v10;
  uint64_t v4 = (_OWORD *)((char *)v4 + 2);
  if ((v6 & 0x10) != 0)
  {
LABEL_19:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v11 = *(unsigned char *)(a1 + 49);
    *(unsigned char *)uint64_t v4 = 40;
    *((unsigned char *)v4 + 1) = v11;
    uint64_t v4 = (_OWORD *)((char *)v4 + 2);
  }
LABEL_22:
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    return (_OWORD *)((char *)v4 + v17);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_1318138(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_13181C0()
{
  return 1;
}

void *sub_13181C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntry.ParsecRankingFeatures");
}

uint64_t sub_13181D8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24A93C0;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 180) = 0u;
  return a1;
}

void sub_1318270(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13182A0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24A93C0;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  if ((v7 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v7 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v7 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v7 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v7 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  if ((v7 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v7 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  if ((v7 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 112) = 0;
  if ((v7 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 120) = 0;
  if ((v7 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 128) = 0;
  if ((v7 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 136) = 0;
  if ((v7 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 144) = 0;
  if ((v7 & 0x2000) != 0) {
    operator new();
  }
  *(void *)(a1 + 152) = 0;
  if ((v7 & 0x4000) != 0) {
    operator new();
  }
  *(void *)(a1 + 160) = 0;
  if ((v7 & 0x8000) != 0) {
    operator new();
  }
  *(void *)(a1 + 168) = 0;
  long long v9 = *(_OWORD *)(a2 + 176);
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = v9;
  return a1;
}

void sub_13186C8()
{
}

void *sub_1318808(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1318894((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1318894(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t result = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2532BC8)
  {
    uint64_t v4 = *(void *)(a1 + 56);
    if (v4)
    {
      sub_1311714(v4);
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 64);
    if (v5)
    {
      sub_1311714(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_1312C18(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 80);
    if (v7)
    {
      sub_1313AE4(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 88);
    if (v8)
    {
      sub_1314944(v8);
      operator delete();
    }
    uint64_t v9 = *(void *)(a1 + 96);
    if (v9)
    {
      sub_1316140(v9);
      operator delete();
    }
    uint64_t v10 = *(void *)(a1 + 104);
    if (v10)
    {
      sub_1316C04(v10);
      operator delete();
    }
    uint64_t v11 = *(void *)(a1 + 112);
    if (v11)
    {
      sub_1315750(v11);
      operator delete();
    }
    uint64_t v12 = *(void **)(a1 + 120);
    if (v12)
    {
      sub_131708C(v12);
      operator delete();
    }
    uint64_t v13 = *(void *)(a1 + 128);
    if (v13)
    {
      sub_13175AC(v13);
      operator delete();
    }
    if (*(void *)(a1 + 136))
    {
      sub_12A0FF0();
      operator delete();
    }
    unint64_t v14 = *(void **)(a1 + 144);
    if (v14)
    {
      sub_1317BEC(v14);
      operator delete();
    }
    uint64_t v15 = *(void **)(a1 + 152);
    if (v15)
    {
      sub_1310D44(v15);
      operator delete();
    }
    uint64_t v16 = *(void *)(a1 + 160);
    if (v16)
    {
      sub_1311FB4(v16);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 168);
    if (result)
    {
      sub_13125D0((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_1318AD8(void *a1)
{
  sub_1318808(a1);

  operator delete();
}

uint64_t sub_1318B10(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3) {
    goto LABEL_11;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_41;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_41;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_42;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_41:
  uint64_t result = sub_13117F8(*(void *)(a1 + 56));
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = sub_13117F8(*(void *)(a1 + 64));
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = sub_1312D28(*(void *)(a1 + 72));
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_45:
    uint64_t result = (uint64_t)sub_1314A54(*(void *)(a1 + 88));
    if ((v3 & 0x40) == 0)
    {
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_46;
  }
LABEL_44:
  uint64_t result = sub_1313C14(*(void *)(a1 + 80));
  if ((v3 & 0x20) != 0) {
    goto LABEL_45;
  }
LABEL_8:
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_46:
  uint64_t result = sub_1316284(*(void *)(a1 + 96));
  if ((v3 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t result = sub_1316CDC(*(void *)(a1 + 104));
LABEL_11:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_34;
  }
  if ((v3 & 0x100) != 0) {
    uint64_t result = (uint64_t)sub_1315848(*(void *)(a1 + 112));
  }
  if ((v3 & 0x200) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 120);
    char v5 = *(unsigned char *)(v4 + 8);
    uint64_t result = v4 + 8;
    *(_DWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v5) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  if ((v3 & 0x400) != 0)
  {
    uint64_t result = sub_131769C(*(void *)(a1 + 128));
    if ((v3 & 0x800) == 0)
    {
LABEL_19:
      if ((v3 & 0x1000) == 0) {
        goto LABEL_20;
      }
      goto LABEL_27;
    }
  }
  else if ((v3 & 0x800) == 0)
  {
    goto LABEL_19;
  }
  uint64_t result = sub_12A102C(*(void *)(a1 + 136));
  if ((v3 & 0x1000) == 0)
  {
LABEL_20:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_30;
    }
LABEL_28:
    uint64_t v7 = *(void *)(a1 + 152);
    char v8 = *(unsigned char *)(v7 + 8);
    uint64_t result = v7 + 8;
    *(_DWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v8) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
    goto LABEL_30;
  }
LABEL_27:
  uint64_t result = sub_1317C98(*(void *)(a1 + 144));
  if ((v3 & 0x2000) != 0) {
    goto LABEL_28;
  }
LABEL_30:
  if ((v3 & 0x4000) != 0) {
    uint64_t result = (uint64_t)sub_13120A4(*(unsigned char **)(a1 + 160));
  }
  if ((v3 & 0x8000) != 0) {
    uint64_t result = (uint64_t)sub_13126C0(*(unsigned char **)(a1 + 168));
  }
LABEL_34:
  if ((v3 & 0x1F0000) != 0)
  {
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
    *(_DWORD *)(a1 + 192) = 0;
  }
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(_DWORD *)(v9 + 32) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_1318CBC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v74 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v74, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v74 + 1);
    unsigned int v9 = **(unsigned char **)v74;
    if ((char)**(unsigned char **)v74 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v74, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v74 + 2);
      }
    }
    *(void *)v74 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v12 = *(void **)(a1 + 56);
        if (v12) {
          goto LABEL_20;
        }
        uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v12 = sub_131B80C((uint64_t)v13);
        *(void *)(a1 + 56) = v12;
        goto LABEL_19;
      case 2u:
        if (v9 != 18) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v12 = *(void **)(a1 + 64);
        if (!v12)
        {
          unint64_t v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v14 = (void *)*v14;
          }
          uint64_t v12 = sub_131B80C((uint64_t)v14);
          *(void *)(a1 + 64) = v12;
LABEL_19:
          char v8 = *(unsigned __int8 **)v74;
        }
LABEL_20:
        uint64_t v15 = sub_1319608(a3, (uint64_t)v12, v8);
        goto LABEL_142;
      case 3u:
        if (v9 != 24) {
          goto LABEL_132;
        }
        uint64_t v16 = (char *)(v8 + 1);
        unint64_t v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)v74 = sub_188C138((uint64_t)v8, (v19 - 128));
          if (!*(void *)v74) {
            goto LABEL_167;
          }
          unint64_t v17 = v64;
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_25:
          *(void *)v74 = v16;
        }
        if (v17 <= 9)
        {
          *(_DWORD *)(a1 + 40) |= 0x10000u;
          *(_DWORD *)(a1 + 176) = v17;
          goto LABEL_143;
        }
        if (*v7) {
          v72 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v72 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v73 = 3;
        goto LABEL_161;
      case 4u:
        if (v9 != 34) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v20 = *(void **)(a1 + 72);
        if (!v20)
        {
          int v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v21 = (void *)*v21;
          }
          uint64_t v20 = sub_131B9A0((uint64_t)v21);
          *(void *)(a1 + 72) = v20;
          char v8 = *(unsigned __int8 **)v74;
        }
        uint64_t v15 = sub_1319698(a3, (uint64_t)v20, v8);
        goto LABEL_142;
      case 5u:
        if (v9 != 42) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v22 = *(void *)(a1 + 80);
        if (!v22)
        {
          int v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v23 = (void *)*v23;
          }
          uint64_t v22 = sub_131BA48((uint64_t)v23);
          *(void *)(a1 + 80) = v22;
          char v8 = *(unsigned __int8 **)v74;
        }
        uint64_t v15 = (uint64_t)sub_1319728(a3, v22, v8);
        goto LABEL_142;
      case 6u:
        if (v9 != 50) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v24 = *(void *)(a1 + 88);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_131BAA4((uint64_t)v25);
          *(void *)(a1 + 88) = v24;
          char v8 = *(unsigned __int8 **)v74;
        }
        uint64_t v15 = (uint64_t)sub_13197B8(a3, v24, v8);
        goto LABEL_142;
      case 7u:
        if (v9 != 58) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v26 = *(void **)(a1 + 96);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_131BB5C((uint64_t)v27);
          *(void *)(a1 + 96) = v26;
          char v8 = *(unsigned __int8 **)v74;
        }
        uint64_t v15 = sub_1319848(a3, (uint64_t)v26, v8);
        goto LABEL_142;
      case 8u:
        if (v9 != 66) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v28 = *(void **)(a1 + 104);
        if (!v28)
        {
          int v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v29 = (void *)*v29;
          }
          uint64_t v28 = sub_131BBE4((uint64_t)v29);
          *(void *)(a1 + 104) = v28;
          char v8 = *(unsigned __int8 **)v74;
        }
        uint64_t v15 = sub_13198D8(a3, (uint64_t)v28, v8);
        goto LABEL_142;
      case 9u:
        if (v9 != 74) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v30 = *(void *)(a1 + 112);
        if (!v30)
        {
          v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v31 = (void *)*v31;
          }
          uint64_t v30 = sub_131BB00((uint64_t)v31);
          *(void *)(a1 + 112) = v30;
          char v8 = *(unsigned __int8 **)v74;
        }
        uint64_t v15 = (uint64_t)sub_1319968(a3, v30, v8);
        goto LABEL_142;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v32 = *(void *)(a1 + 120);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v33 = (void *)*v33;
          }
          uint64_t v32 = sub_131BC68((uint64_t)v33);
          *(void *)(a1 + 120) = v32;
          char v8 = *(unsigned __int8 **)v74;
        }
        uint64_t v15 = (uint64_t)sub_13199F8(a3, v32, v8);
        goto LABEL_142;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        unint64_t v34 = *(void **)(a1 + 128);
        if (!v34)
        {
          v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v35 = (void *)*v35;
          }
          unint64_t v34 = sub_131BCE4((uint64_t)v35);
          *(void *)(a1 + 128) = v34;
          char v8 = *(unsigned __int8 **)v74;
        }
        uint64_t v15 = (uint64_t)sub_1319A88(a3, (uint64_t)v34, v8);
        goto LABEL_142;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v36 = *(void *)(a1 + 136);
        if (!v36)
        {
          uint64_t v37 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v37 = (void *)*v37;
          }
          uint64_t v36 = sub_12BBB40((uint64_t)v37);
          *(void *)(a1 + 136) = v36;
          char v8 = *(unsigned __int8 **)v74;
        }
        uint64_t v15 = sub_120AA94(a3, v36, v8);
        goto LABEL_142;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        uint64_t v38 = *(void *)(a1 + 144);
        if (!v38)
        {
          uint64_t v39 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v39 = (void *)*v39;
          }
          sub_131BD5C((uint64_t)v39);
          uint64_t v38 = v40;
          *(void *)(a1 + 144) = v40;
          char v8 = *(unsigned __int8 **)v74;
        }
        uint64_t v15 = (uint64_t)sub_1319B18(a3, v38, v8);
        goto LABEL_142;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_132;
        }
        v5 |= 0x20000u;
        v42 = (char *)(v8 + 1);
        LODWORD(v41) = *v8;
        if ((v41 & 0x80) == 0) {
          goto LABEL_92;
        }
        int v43 = *v42;
        uint64_t v41 = v41 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t v65 = sub_188C138((uint64_t)v8, v41);
          *(void *)v74 = v65;
          *(_DWORD *)(a1 + 180) = v66;
          if (!v65) {
            goto LABEL_167;
          }
        }
        else
        {
          v42 = (char *)(v8 + 2);
LABEL_92:
          *(void *)v74 = v42;
          *(_DWORD *)(a1 + 180) = v41;
        }
        goto LABEL_143;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_132;
        }
        v44 = (char *)(v8 + 1);
        unint64_t v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_97;
        }
        int v45 = *v44;
        int v46 = v17 + (v45 << 7);
        unint64_t v17 = (v46 - 128);
        if (v45 < 0)
        {
          *(void *)v74 = sub_188C138((uint64_t)v8, (v46 - 128));
          if (!*(void *)v74) {
            goto LABEL_167;
          }
          unint64_t v17 = v67;
        }
        else
        {
          v44 = (char *)(v8 + 2);
LABEL_97:
          *(void *)v74 = v44;
        }
        if (sub_17F8328(v17))
        {
          *(_DWORD *)(a1 + 40) |= 0x40000u;
          *(_DWORD *)(a1 + 184) = v17;
        }
        else
        {
          if (*v7) {
            v72 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v72 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v73 = 15;
LABEL_161:
          sub_188C020(v73, v17, v72);
        }
        goto LABEL_143;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000u;
        uint64_t v47 = *(void *)(a1 + 152);
        if (!v47)
        {
          v48 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v48 = (void *)*v48;
          }
          uint64_t v47 = sub_131B718((uint64_t)v48);
          *(void *)(a1 + 152) = v47;
          char v8 = *(unsigned __int8 **)v74;
        }
        uint64_t v15 = (uint64_t)sub_1319BA8(a3, v47, v8);
        goto LABEL_142;
      case 0x11u:
        if (v9 != 136) {
          goto LABEL_132;
        }
        v5 |= 0x80000u;
        v49 = (char *)(v8 + 1);
        uint64_t v50 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_110;
        }
        int v51 = *v49;
        uint64_t v50 = v50 + (v51 << 7) - 128;
        if (v51 < 0)
        {
          uint64_t v68 = sub_188C138((uint64_t)v8, v50);
          *(void *)v74 = v68;
          *(unsigned char *)(a1 + 188) = v69 != 0;
          if (!v68) {
            goto LABEL_167;
          }
        }
        else
        {
          v49 = (char *)(v8 + 2);
LABEL_110:
          *(void *)v74 = v49;
          *(unsigned char *)(a1 + 188) = v50 != 0;
        }
        goto LABEL_143;
      case 0x12u:
        if (v9 != 146) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v52 = *(void *)(a1 + 8);
        v53 = (uint64_t *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
        if (v52) {
          v53 = (uint64_t *)*v53;
        }
        v54 = (std::string *)sub_1880F84((void *)(a1 + 48), v53);
        uint64_t v15 = (uint64_t)sub_188C244(v54, *(char **)v74, (uint64_t)a3);
        goto LABEL_142;
      case 0x13u:
        if (v9 != 154) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000u;
        v55 = *(void **)(a1 + 160);
        if (!v55)
        {
          v56 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v56 = (void *)*v56;
          }
          v55 = sub_131B8B0((uint64_t)v56);
          *(void *)(a1 + 160) = v55;
          char v8 = *(unsigned __int8 **)v74;
        }
        uint64_t v15 = (uint64_t)sub_1319C38(a3, (uint64_t)v55, v8);
        goto LABEL_142;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000u;
        v57 = *(void **)(a1 + 168);
        if (!v57)
        {
          v58 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v58 = (void *)*v58;
          }
          v57 = sub_131B928((uint64_t)v58);
          *(void *)(a1 + 168) = v57;
          char v8 = *(unsigned __int8 **)v74;
        }
        uint64_t v15 = (uint64_t)sub_1319CC8(a3, (uint64_t)v57, v8);
        goto LABEL_142;
      case 0x15u:
        if (v9 != 168) {
          goto LABEL_132;
        }
        v5 |= 0x100000u;
        v59 = (char *)(v8 + 1);
        int v60 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_131;
        }
        int v61 = *v59;
        int v60 = v60 + (v61 << 7) - 128;
        if (v61 < 0)
        {
          uint64_t v70 = sub_188C0D0((uint64_t)v8, v60);
          *(void *)v74 = v70;
          *(_DWORD *)(a1 + 192) = v71;
          if (!v70) {
            goto LABEL_167;
          }
        }
        else
        {
          v59 = (char *)(v8 + 2);
LABEL_131:
          *(void *)v74 = v59;
          *(_DWORD *)(a1 + 192) = v60;
        }
        goto LABEL_143;
      default:
LABEL_132:
        if (v9) {
          BOOL v62 = (v9 & 7) == 4;
        }
        else {
          BOOL v62 = 1;
        }
        if (!v62)
        {
          if (v9 - 800 < 0x320 || v9 - 80000 <= 0x31F)
          {
            uint64_t v15 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2532BC8, (uint64_t *)(a1 + 8), a3);
          }
          else
          {
            if (*v7)
            {
              v63 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v63 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v8 = *(unsigned __int8 **)v74;
            }
            uint64_t v15 = (uint64_t)sub_1885AC0(v9, v63, (char *)v8, a3);
          }
LABEL_142:
          *(void *)v74 = v15;
          if (!v15) {
            goto LABEL_167;
          }
LABEL_143:
          if (sub_11947B8((uint64_t)a3, (char **)v74, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_167:
        }
          *(void *)v74 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v74;
    }
  }
}

uint64_t sub_1319608(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13118A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1319698(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1312E00(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1319728(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1313CB4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13197B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1314AE0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1319848(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1316340(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_13198D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1316D20(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1319968(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13158BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13199F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1317150(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1319A88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13176F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1319B18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1317CC4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1319BA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1310E08(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1319C38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1312100(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1319CC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_131271C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1319D58(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1311B38(v7, v9, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 0x10000) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 64);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_1311B38(v10, v12, a3);
  if ((v6 & 0x10000) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 176);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 72);
    char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    uint64_t v4 = sub_1313218(v16, v18, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_25:
      if ((v6 & 0x20) == 0) {
        goto LABEL_26;
      }
      goto LABEL_47;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_25;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 80);
  char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 44);
  v4[1] = v20;
  if (v20 > 0x7F) {
    int v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    int v21 = v4 + 2;
  }
  uint64_t v4 = sub_131403C(v19, v21, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_26:
    if ((v6 & 0x40) == 0) {
      goto LABEL_27;
    }
    goto LABEL_53;
  }
LABEL_47:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 88);
  char *v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 44);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  uint64_t v4 = sub_1314EF0(v22, v24, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_27:
    if ((v6 & 0x80) == 0) {
      goto LABEL_28;
    }
    goto LABEL_59;
  }
LABEL_53:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 96);
  char *v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    uint64_t v27 = v4 + 2;
  }
  uint64_t v4 = sub_13165D0(v25, (unint64_t)v27, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_28:
    if ((v6 & 0x100) == 0) {
      goto LABEL_29;
    }
    goto LABEL_65;
  }
LABEL_59:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 104);
  char *v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    uint64_t v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    uint64_t v30 = v4 + 2;
  }
  uint64_t v4 = sub_1316E78(v28, v30, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_29:
    if ((v6 & 0x200) == 0) {
      goto LABEL_30;
    }
    goto LABEL_71;
  }
LABEL_65:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 112);
  char *v4 = 74;
  unsigned int v32 = *(_DWORD *)(v31 + 44);
  v4[1] = v32;
  if (v32 > 0x7F) {
    uint64_t v33 = sub_188A9CC(v32, v4 + 1);
  }
  else {
    uint64_t v33 = v4 + 2;
  }
  uint64_t v4 = sub_1315B68(v31, v33, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_30:
    if ((v6 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_77;
  }
LABEL_71:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v34 = *(void *)(a1 + 120);
  char *v4 = 82;
  unsigned int v35 = *(_DWORD *)(v34 + 20);
  v4[1] = v35;
  if (v35 > 0x7F) {
    uint64_t v36 = sub_188A9CC(v35, v4 + 1);
  }
  else {
    uint64_t v36 = v4 + 2;
  }
  uint64_t v4 = sub_13172FC(v34, (unint64_t)v36, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_31:
    if ((v6 & 0x800) == 0) {
      goto LABEL_32;
    }
    goto LABEL_83;
  }
LABEL_77:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v37 = *(void *)(a1 + 128);
  char *v4 = 90;
  unsigned int v38 = *(_DWORD *)(v37 + 20);
  v4[1] = v38;
  if (v38 > 0x7F) {
    uint64_t v39 = sub_188A9CC(v38, v4 + 1);
  }
  else {
    uint64_t v39 = v4 + 2;
  }
  uint64_t v4 = sub_13178E0(v37, (unint64_t)v39, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_32:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_89;
  }
LABEL_83:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v40 = *(void *)(a1 + 136);
  char *v4 = 98;
  unsigned int v41 = *(_DWORD *)(v40 + 20);
  v4[1] = v41;
  if (v41 > 0x7F) {
    v42 = sub_188A9CC(v41, v4 + 1);
  }
  else {
    v42 = v4 + 2;
  }
  uint64_t v4 = sub_12A12FC(v40, v42, a3);
  if ((v6 & 0x1000) == 0)
  {
LABEL_33:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_95;
  }
LABEL_89:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v43 = *(void *)(a1 + 144);
  char *v4 = 106;
  unsigned int v44 = *(_DWORD *)(v43 + 20);
  v4[1] = v44;
  if (v44 > 0x7F) {
    int v45 = sub_188A9CC(v44, v4 + 1);
  }
  else {
    int v45 = v4 + 2;
  }
  uint64_t v4 = (char *)sub_1317F60(v43, (unint64_t)v45, a3);
  if ((v6 & 0x20000) != 0)
  {
LABEL_95:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v46 = *(int *)(a1 + 180);
    char *v4 = 112;
    v4[1] = v46;
    if (v46 > 0x7F)
    {
      v4[1] = v46 | 0x80;
      unint64_t v47 = v46 >> 7;
      v4[2] = v46 >> 7;
      v4 += 3;
      if (v46 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v48 = v47 >> 14;
          v47 >>= 7;
          *v4++ = v47;
        }
        while (v48);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_101:
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v49 = *(int *)(a1 + 184);
    char *v4 = 120;
    v4[1] = v49;
    if (v49 > 0x7F)
    {
      v4[1] = v49 | 0x80;
      unint64_t v50 = v49 >> 7;
      v4[2] = v49 >> 7;
      v4 += 3;
      if (v49 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v51 = v50 >> 14;
          v50 >>= 7;
          *v4++ = v50;
        }
        while (v51);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v52 = *(void *)(a1 + 152);
    *(_WORD *)uint64_t v4 = 386;
    unsigned int v53 = *(_DWORD *)(v52 + 20);
    v4[2] = v53;
    if (v53 > 0x7F) {
      v54 = sub_188A9CC(v53, v4 + 2);
    }
    else {
      v54 = v4 + 3;
    }
    uint64_t v4 = (char *)sub_1310F48(v52, (unint64_t)v54, a3);
    if ((v6 & 0x80000) == 0)
    {
LABEL_110:
      if ((v6 & 1) == 0) {
        goto LABEL_111;
      }
      goto LABEL_124;
    }
  }
  else if ((v6 & 0x80000) == 0)
  {
    goto LABEL_110;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v55 = *(unsigned char *)(a1 + 188);
  *(_WORD *)uint64_t v4 = 392;
  v4[2] = v55;
  v4 += 3;
  if ((v6 & 1) == 0)
  {
LABEL_111:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_112;
    }
    goto LABEL_125;
  }
LABEL_124:
  uint64_t v4 = sub_117A0AC(a3, 18, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x4000) == 0)
  {
LABEL_112:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_113;
    }
    goto LABEL_131;
  }
LABEL_125:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v56 = *(void *)(a1 + 160);
  *(_WORD *)uint64_t v4 = 410;
  unsigned int v57 = *(_DWORD *)(v56 + 20);
  v4[2] = v57;
  if (v57 > 0x7F) {
    v58 = sub_188A9CC(v57, v4 + 2);
  }
  else {
    v58 = v4 + 3;
  }
  uint64_t v4 = sub_1312258(v56, (unint64_t)v58, a3);
  if ((v6 & 0x8000) == 0)
  {
LABEL_113:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_143;
    }
    goto LABEL_137;
  }
LABEL_131:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v59 = *(void *)(a1 + 168);
  *(_WORD *)uint64_t v4 = 418;
  unsigned int v60 = *(_DWORD *)(v59 + 20);
  v4[2] = v60;
  if (v60 > 0x7F) {
    int v61 = sub_188A9CC(v60, v4 + 2);
  }
  else {
    int v61 = v4 + 3;
  }
  uint64_t v4 = sub_1312874(v59, (unint64_t)v61, a3);
  if ((v6 & 0x100000) != 0)
  {
LABEL_137:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v62 = *(_DWORD *)(a1 + 192);
    *(_WORD *)uint64_t v4 = 424;
    v4[2] = v62;
    if (v62 > 0x7F)
    {
      v4[2] = v62 | 0x80;
      unsigned int v63 = v62 >> 7;
      v4[3] = v62 >> 7;
      v4 += 4;
      if (v62 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v64 = v63 >> 14;
          v63 >>= 7;
          *v4++ = v63;
        }
        while (v64);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_143:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 100, 10100, v4, a3);
  }
  uint64_t v65 = *(void *)(a1 + 8);
  if ((v65 & 1) == 0) {
    return v4;
  }
  unint64_t v67 = v65 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v67 + 31) < 0)
  {
    uint64_t v68 = *(void **)(v67 + 8);
    uint64_t v69 = *(void *)(v67 + 16);
  }
  else
  {
    uint64_t v68 = (void *)(v67 + 8);
    LODWORD(v69) = *(unsigned __int8 *)(v67 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v69)
  {
    uint64_t v70 = (int)v69;
    memcpy(v4, v68, (int)v69);
    v4 += v70;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v68, v69, v4);
}

uint64_t sub_131A6A8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v4) {
    goto LABEL_11;
  }
  if (v4)
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    uint64_t v3 = v2 + v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_30;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v10 = sub_1311CA0(*(void *)(a1 + 56));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v11 = sub_1311CA0(*(void *)(a1 + 64));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v12 = sub_13134D0(*(void *)(a1 + 72));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_33:
    uint64_t v14 = sub_1315240(*(void *)(a1 + 88));
    v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_32:
  uint64_t v13 = sub_1314380(*(void *)(a1 + 80));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x20) != 0) {
    goto LABEL_33;
  }
LABEL_8:
  if ((v4 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_34:
  uint64_t v15 = sub_13167E4(*(void *)(a1 + 96));
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x80) != 0)
  {
LABEL_10:
    uint64_t v5 = sub_1316F44(*(void *)(a1 + 104));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_21;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v16 = sub_1315D50(*(void *)(a1 + 112));
    v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 0x200) == 0)
    {
LABEL_14:
      if ((v4 & 0x400) == 0) {
        goto LABEL_15;
      }
      goto LABEL_38;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v17 = sub_1317424(*(void *)(a1 + 120));
  v3 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x400) == 0)
  {
LABEL_15:
    if ((v4 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v18 = sub_13179F0(*(void *)(a1 + 128));
  v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x800) == 0)
  {
LABEL_16:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v19 = sub_12A1464(*(void *)(a1 + 136));
  v3 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x1000) == 0)
  {
LABEL_17:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v20 = sub_1318138(*(void *)(a1 + 144));
  v3 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x2000) == 0)
  {
LABEL_18:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_45;
  }
LABEL_41:
  uint64_t v21 = *(void *)(a1 + 152);
  uint64_t v22 = 5;
  if ((*(unsigned char *)(v21 + 16) & 1) == 0) {
    uint64_t v22 = 0;
  }
  uint64_t v23 = *(void *)(v21 + 8);
  if (v23)
  {
    unint64_t v35 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v35 + 31) < 0) {
      uint64_t v36 = *(void *)(v35 + 16);
    }
    else {
      uint64_t v36 = *(unsigned __int8 *)(v35 + 31);
    }
    v22 += v36;
  }
  *(_DWORD *)(v21 + 20) = v22;
  v3 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v4 & 0x4000) == 0)
  {
LABEL_19:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_45:
  uint64_t v24 = sub_1312368(*(void *)(a1 + 160));
  v3 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v4 & 0x8000) != 0)
  {
LABEL_20:
    uint64_t v6 = sub_1312984(*(void *)(a1 + 168));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_21:
  if ((v4 & 0x1F0000) == 0) {
    goto LABEL_63;
  }
  if ((v4 & 0x10000) == 0)
  {
    if ((v4 & 0x20000) == 0) {
      goto LABEL_24;
    }
LABEL_51:
    int v27 = *(_DWORD *)(a1 + 180);
    if (v27 < 0) {
      uint64_t v28 = 11;
    }
    else {
      uint64_t v28 = ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v28;
    if ((v4 & 0x40000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_55;
  }
  int v25 = *(_DWORD *)(a1 + 176);
  if (v25 < 0) {
    uint64_t v26 = 11;
  }
  else {
    uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v26;
  if ((v4 & 0x20000) != 0) {
    goto LABEL_51;
  }
LABEL_24:
  if ((v4 & 0x40000) != 0)
  {
LABEL_55:
    int v29 = *(_DWORD *)(a1 + 184);
    if (v29 < 0) {
      uint64_t v30 = 11;
    }
    else {
      uint64_t v30 = ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v30;
  }
LABEL_59:
  if ((v4 & 0x80000) != 0) {
    v3 += 3;
  }
  if ((v4 & 0x100000) != 0) {
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 192) | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_63:
  uint64_t v31 = *(void *)(a1 + 8);
  if (v31)
  {
    unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v33 + 31) < 0) {
      uint64_t v34 = *(void *)(v33 + 16);
    }
    else {
      uint64_t v34 = *(unsigned __int8 *)(v33 + 31);
    }
    v3 += v34;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_131AB94(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v4) {
    goto LABEL_70;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v9 = *(std::string **)(a1 + 56);
    if (!v9)
    {
      uint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        uint64_t v11 = (void *)*v11;
      }
      uint64_t v9 = (std::string *)sub_131B80C((uint64_t)v11);
      *(void *)(a1 + 56) = v9;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v12 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v12 = &off_2532930;
    }
    sub_1311D98(v9, (uint64_t)v12);
    if ((v4 & 4) == 0)
    {
LABEL_8:
      if ((v4 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_30;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_8;
  }
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v13 = *(std::string **)(a1 + 64);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = (std::string *)sub_131B80C((uint64_t)v15);
    *(void *)(a1 + 64) = v13;
  }
  if (*(void *)(a2 + 64)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    uint64_t v16 = &off_2532930;
  }
  sub_1311D98(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_38;
  }
LABEL_30:
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v17 = *(void **)(a1 + 72);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    uint64_t v17 = sub_131B9A0((uint64_t)v19);
    *(void *)(a1 + 72) = v17;
  }
  if (*(void *)(a2 + 72)) {
    uint64_t v20 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    uint64_t v20 = &off_25329A8;
  }
  sub_1313658((uint64_t)v17, (uint64_t)v20);
  if ((v4 & 0x10) == 0)
  {
LABEL_10:
    if ((v4 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_46;
  }
LABEL_38:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v21 = *(void *)(a1 + 80);
  if (!v21)
  {
    uint64_t v22 = *(void *)(a1 + 8);
    uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (void *)*v23;
    }
    uint64_t v21 = sub_131BA48((uint64_t)v23);
    *(void *)(a1 + 80) = v21;
  }
  if (*(void *)(a2 + 80)) {
    uint64_t v24 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    uint64_t v24 = &off_25329F0;
  }
  sub_13144F8(v21, (uint64_t)v24);
  if ((v4 & 0x20) == 0)
  {
LABEL_11:
    if ((v4 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_54;
  }
LABEL_46:
  *(_DWORD *)(a1 + 40) |= 0x20u;
  uint64_t v25 = *(void *)(a1 + 88);
  if (!v25)
  {
    uint64_t v26 = *(void *)(a1 + 8);
    int v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      int v27 = (void *)*v27;
    }
    uint64_t v25 = sub_131BAA4((uint64_t)v27);
    *(void *)(a1 + 88) = v25;
  }
  if (*(void *)(a2 + 88)) {
    uint64_t v28 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    uint64_t v28 = &off_2532A50;
  }
  sub_131539C(v25, (uint64_t)v28);
  if ((v4 & 0x40) == 0)
  {
LABEL_12:
    if ((v4 & 0x80) == 0) {
      goto LABEL_70;
    }
    goto LABEL_62;
  }
LABEL_54:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  int v29 = *(void **)(a1 + 96);
  if (!v29)
  {
    uint64_t v30 = *(void *)(a1 + 8);
    uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
    if (v30) {
      uint64_t v31 = (void *)*v31;
    }
    int v29 = sub_131BB5C((uint64_t)v31);
    *(void *)(a1 + 96) = v29;
  }
  if (*(void *)(a2 + 96)) {
    unsigned int v32 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    unsigned int v32 = &off_2532AF8;
  }
  sub_1316938((uint64_t)v29, (uint64_t)v32);
  if ((v4 & 0x80) != 0)
  {
LABEL_62:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    unint64_t v33 = *(std::string **)(a1 + 104);
    if (!v33)
    {
      uint64_t v34 = *(void *)(a1 + 8);
      unint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        unint64_t v35 = (void *)*v35;
      }
      unint64_t v33 = (std::string *)sub_131BBE4((uint64_t)v35);
      *(void *)(a1 + 104) = v33;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v36 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v36 = &off_2532B30;
    }
    sub_12329D0(v33, (uint64_t)v36);
  }
LABEL_70:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_144;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v37 = *(void *)(a1 + 112);
    if (!v37)
    {
      uint64_t v38 = *(void *)(a1 + 8);
      uint64_t v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
      if (v38) {
        uint64_t v39 = (void *)*v39;
      }
      uint64_t v37 = sub_131BB00((uint64_t)v39);
      *(void *)(a1 + 112) = v37;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v40 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v40 = &off_2532AB0;
    }
    sub_1315E24(v37, (uint64_t)v40);
    if ((v4 & 0x200) == 0)
    {
LABEL_73:
      if ((v4 & 0x400) == 0) {
        goto LABEL_74;
      }
      goto LABEL_96;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_73;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  unsigned int v41 = *(std::string **)(a1 + 120);
  if (!v41)
  {
    uint64_t v42 = *(void *)(a1 + 8);
    uint64_t v43 = (void *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
    if (v42) {
      uint64_t v43 = (void *)*v43;
    }
    unsigned int v41 = (std::string *)sub_131BC68((uint64_t)v43);
    *(void *)(a1 + 120) = v41;
  }
  if (*(void *)(a2 + 120)) {
    unsigned int v44 = *(uint64_t (****)())(a2 + 120);
  }
  else {
    unsigned int v44 = &off_2532B50;
  }
  sub_11A7934(v41, (uint64_t)v44);
  if ((v4 & 0x400) == 0)
  {
LABEL_74:
    if ((v4 & 0x800) == 0) {
      goto LABEL_75;
    }
    goto LABEL_104;
  }
LABEL_96:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  int v45 = *(std::string **)(a1 + 128);
  if (!v45)
  {
    uint64_t v46 = *(void *)(a1 + 8);
    unint64_t v47 = (void *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
    if (v46) {
      unint64_t v47 = (void *)*v47;
    }
    int v45 = (std::string *)sub_131BCE4((uint64_t)v47);
    *(void *)(a1 + 128) = v45;
  }
  if (*(void *)(a2 + 128)) {
    unint64_t v48 = *(uint64_t (****)())(a2 + 128);
  }
  else {
    unint64_t v48 = &off_2532B70;
  }
  sub_1317A78(v45, (uint64_t)v48);
  if ((v4 & 0x800) == 0)
  {
LABEL_75:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_112;
  }
LABEL_104:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  unint64_t v49 = *(std::string **)(a1 + 136);
  if (!v49)
  {
    uint64_t v50 = *(void *)(a1 + 8);
    unint64_t v51 = (void *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
    if (v50) {
      unint64_t v51 = (void *)*v51;
    }
    unint64_t v49 = (std::string *)sub_12BBB40((uint64_t)v51);
    *(void *)(a1 + 136) = v49;
  }
  if (*(void *)(a2 + 136)) {
    uint64_t v52 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    uint64_t v52 = &off_2530888;
  }
  sub_117DA78(v49, (uint64_t)v52);
  if ((v4 & 0x1000) == 0)
  {
LABEL_76:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_120;
  }
LABEL_112:
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  unsigned int v53 = *(std::string **)(a1 + 144);
  if (!v53)
  {
    uint64_t v54 = *(void *)(a1 + 8);
    char v55 = (void *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
    if (v54) {
      char v55 = (void *)*v55;
    }
    sub_131BD5C((uint64_t)v55);
    *(void *)(a1 + 144) = v53;
  }
  if (*(void *)(a2 + 144)) {
    uint64_t v56 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    uint64_t v56 = &off_2532B90;
  }
  sub_1238AD8(v53, (uint64_t)v56);
  if ((v4 & 0x2000) == 0)
  {
LABEL_77:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_128;
  }
LABEL_120:
  *(_DWORD *)(a1 + 40) |= 0x2000u;
  unsigned int v57 = *(std::string **)(a1 + 152);
  if (!v57)
  {
    uint64_t v58 = *(void *)(a1 + 8);
    uint64_t v59 = (void *)(v58 & 0xFFFFFFFFFFFFFFFCLL);
    if (v58) {
      uint64_t v59 = (void *)*v59;
    }
    unsigned int v57 = (std::string *)sub_131B718((uint64_t)v59);
    *(void *)(a1 + 152) = v57;
  }
  if (*(void *)(a2 + 152)) {
    unsigned int v60 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    unsigned int v60 = &off_2532910;
  }
  sub_11C4738(v57, (uint64_t)v60);
  if ((v4 & 0x4000) == 0)
  {
LABEL_78:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_144;
    }
    goto LABEL_136;
  }
LABEL_128:
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  int v61 = *(void **)(a1 + 160);
  if (!v61)
  {
    uint64_t v62 = *(void *)(a1 + 8);
    unsigned int v63 = (void *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
    if (v62) {
      unsigned int v63 = (void *)*v63;
    }
    int v61 = sub_131B8B0((uint64_t)v63);
    *(void *)(a1 + 160) = v61;
  }
  if (*(void *)(a2 + 160)) {
    unsigned int v64 = *(uint64_t (****)())(a2 + 160);
  }
  else {
    unsigned int v64 = &off_2532968;
  }
  sub_13123F0((uint64_t)v61, (uint64_t)v64);
  if ((v4 & 0x8000) != 0)
  {
LABEL_136:
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    uint64_t v65 = *(void **)(a1 + 168);
    if (!v65)
    {
      uint64_t v66 = *(void *)(a1 + 8);
      unint64_t v67 = (void *)(v66 & 0xFFFFFFFFFFFFFFFCLL);
      if (v66) {
        unint64_t v67 = (void *)*v67;
      }
      uint64_t v65 = sub_131B928((uint64_t)v67);
      *(void *)(a1 + 168) = v65;
    }
    if (*(void *)(a2 + 168)) {
      uint64_t v68 = *(uint64_t (****)())(a2 + 168);
    }
    else {
      uint64_t v68 = &off_2532988;
    }
    sub_13123F0((uint64_t)v65, (uint64_t)v68);
  }
LABEL_144:
  if ((v4 & 0x1F0000) == 0) {
    goto LABEL_152;
  }
  if ((v4 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
    if ((v4 & 0x20000) == 0)
    {
LABEL_147:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_148;
      }
      goto LABEL_158;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_147;
  }
  *(_DWORD *)(a1 + 180) = *(_DWORD *)(a2 + 180);
  if ((v4 & 0x40000) == 0)
  {
LABEL_148:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_149;
    }
LABEL_159:
    *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
    if ((v4 & 0x100000) == 0) {
      goto LABEL_151;
    }
    goto LABEL_150;
  }
LABEL_158:
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  if ((v4 & 0x80000) != 0) {
    goto LABEL_159;
  }
LABEL_149:
  if ((v4 & 0x100000) != 0) {
LABEL_150:
  }
    *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
LABEL_151:
  *(_DWORD *)(a1 + 40) |= v4;
LABEL_152:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v69 = *(void *)(a2 + 8);
  if (v69)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v69 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_131B154(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 8) != 0)
    {
      uint64_t result = sub_13137F8(*(void *)(a1 + 72));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t result = sub_131469C(*(void *)(a1 + 80));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x20) != 0)
    {
      uint64_t result = sub_1315510(*(void *)(a1 + 88));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40) != 0)
    {
      uint64_t result = sub_1316ACC(*(void *)(a1 + 96));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x100) != 0)
    {
      uint64_t result = sub_1315F18(*(void *)(a1 + 112));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x4000) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 160);
      if (*(unsigned char *)(v4 + 16))
      {
        uint64_t result = sub_16CE508(*(void *)(v4 + 24));
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v3 & 0x8000) == 0) {
      return 1;
    }
    uint64_t v5 = *(void *)(a1 + 168);
    if ((*(unsigned char *)(v5 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_16CE508(*(void *)(v5 + 24));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_131B228@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntry");
}

void *sub_131B238(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A87C0;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_131B2B4(uint64_t a1)
{
  if (!a1)
  {
    sub_13206EC();
  }

  return sub_130C780(v3, a1, 0);
}

void *sub_131B310(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A88C0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_131B388(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A8940;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

double sub_131B404(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A89C0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

uint64_t sub_131B484(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A8A40;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_131B500(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A8AC0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_131B59C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A8B40;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_131B618(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A8BC0;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_131B694(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A8C40;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  return result;
}

uint64_t sub_131B718(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A8CC0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void *sub_131B794(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A8D40;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_131B80C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24A8DC0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_131B8B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A8E40;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_131B928(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A8EC0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_131B9A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24A8F40;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  *(void *)((char *)result + 62) = 0;
  return result;
}

uint64_t sub_131BA48(uint64_t a1)
{
  if (!a1)
  {
    sub_1320758();
  }

  return sub_131386C(v3, a1, 0);
}

uint64_t sub_131BAA4(uint64_t a1)
{
  if (!a1)
  {
    sub_13207C4();
  }

  return sub_1314718(v3, a1, 0);
}

uint64_t sub_131BB00(uint64_t a1)
{
  if (!a1)
  {
    sub_1320830();
  }

  return sub_1315578(v3, a1, 0);
}

void *sub_131BB5C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A9140;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_131BBE4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A91C0;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_131BC68(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A9240;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void *sub_131BCE4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A92C0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_131BD5C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24A9340;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_WORD *)(v2 + 48) = 0;
  return result;
}

uint64_t sub_131BDDC(uint64_t a1)
{
  if (!a1)
  {
    sub_132089C();
  }

  return sub_13181D8(v3, a1, 0);
}

uint64_t sub_131BE38(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 88);
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 96));
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_11DB1BC((void *)(a1 + 64));
  sub_1889DA8(a1 + 48);
  sub_12C5234((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_131BF24(uint64_t a1)
{
  sub_131BE38(a1);

  operator delete();
}

uint64_t sub_131BF5C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_15B043C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  *(_DWORD *)(v1 + 48) = 0;
  uint64_t v5 = *(unsigned int *)(v1 + 72);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 80) + 8);
    do
    {
      uint64_t v7 = *v6++;
      double result = sub_15BAAF0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 72) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 7) != 0)
  {
    if ((v8 & 1) == 0)
    {
      if ((v8 & 2) == 0) {
        goto LABEL_12;
      }
LABEL_18:
      unint64_t v10 = *(void *)(v1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)unint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
        if ((v8 & 4) == 0) {
          goto LABEL_25;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
        if ((v8 & 4) == 0) {
          goto LABEL_25;
        }
      }
      goto LABEL_22;
    }
    unint64_t v9 = *(void *)(v1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v8 & 2) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v8 & 2) != 0) {
        goto LABEL_18;
      }
    }
LABEL_12:
    if ((v8 & 4) == 0) {
      goto LABEL_25;
    }
LABEL_22:
    unint64_t v11 = *(void *)(v1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
    }
  }
LABEL_25:
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(unsigned char *)(v12 + 104) = 0;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_131C0B0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v48 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v48, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v47 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v48 + 1);
    unsigned int v8 = **(unsigned char **)v48;
    if ((char)**(unsigned char **)v48 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v48, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v48 + 2);
      }
    }
    *(void *)unint64_t v48 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_72;
        }
        v5 |= 8u;
        uint64_t v12 = v7 + 1;
        uint64_t v13 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v7 + 2;
LABEL_13:
          *(void *)unint64_t v48 = v12;
          *(unsigned char *)(a1 + 112) = v13 != 0;
          goto LABEL_80;
        }
        uint64_t v43 = sub_188C138((uint64_t)v7, v13);
        *(void *)unint64_t v48 = v43;
        *(unsigned char *)(a1 + 112) = v44 != 0;
        if (v43) {
          goto LABEL_80;
        }
        goto LABEL_85;
      case 2u:
        if (v8 != 18) {
          goto LABEL_72;
        }
        uint64_t v21 = v7 - 1;
        while (1)
        {
          uint64_t v22 = (unsigned __int8 *)(v21 + 1);
          *(void *)unint64_t v48 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            uint64_t v26 = sub_15C1CB4(*(void *)(a1 + 24));
            uint64_t v25 = sub_188CDC8(a1 + 24, v26);
            uint64_t v22 = *(unsigned __int8 **)v48;
          }
          uint64_t v21 = sub_11B3E48(a3, v25, v22);
          *(void *)unint64_t v48 = v21;
          if (!v21) {
            goto LABEL_85;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 18) {
            goto LABEL_80;
          }
        }
      case 3u:
        if (v8 == 24)
        {
          uint64_t v27 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)unint64_t v48 = v27 + 1;
            unint64_t v28 = *(unsigned __int8 *)(v27 + 1);
            int v29 = (char *)(v27 + 2);
            if (*(char *)(v27 + 1) < 0)
            {
              int v30 = *v29;
              int v31 = v28 + (v30 << 7);
              unint64_t v28 = (v31 - 128);
              if (v30 < 0)
              {
                *(void *)unint64_t v48 = sub_188C138(v27 + 1, (v31 - 128));
                if (!*(void *)v48) {
                  goto LABEL_85;
                }
                unint64_t v28 = v34;
                goto LABEL_41;
              }
              int v29 = (char *)(v27 + 3);
            }
            *(void *)unint64_t v48 = v29;
LABEL_41:
            if (sub_140B640(v28))
            {
              uint64_t v32 = *(unsigned int *)(a1 + 48);
              if (v32 == *(_DWORD *)(a1 + 52))
              {
                int v33 = v32 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v32 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v32) = v28;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v32) = v28;
                int v33 = v32 + 1;
              }
              *(_DWORD *)(a1 + 48) = v33;
            }
            else
            {
              if (*v47) {
                unint64_t v35 = (std::string *)((*v47 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                unint64_t v35 = (std::string *)sub_188DBD8(v47);
              }
              sub_188C020(3, v28, v35);
            }
            uint64_t v27 = *(void *)v48;
            if (*(void *)a3 <= *(void *)v48 || **(unsigned char **)v48 != 24) {
              goto LABEL_80;
            }
          }
        }
        if (v8 == 26)
        {
          *(void *)&long long v49 = a1 + 48;
          *((void *)&v49 + 1) = sub_140B640;
          uint64_t v50 = a1 + 8;
          int v51 = 3;
          uint64_t v42 = sub_1112E88((uint64_t)a3, v7, &v49);
LABEL_79:
          *(void *)unint64_t v48 = v42;
          if (!v42) {
            goto LABEL_85;
          }
LABEL_80:
          if (sub_11947B8((uint64_t)a3, (char **)v48, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_72:
        if (v8) {
          BOOL v45 = (v8 & 7) == 4;
        }
        else {
          BOOL v45 = 1;
        }
        if (!v45)
        {
          if (*v47)
          {
            uint64_t v46 = (std::string *)((*v47 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v46 = (std::string *)sub_188DBD8(v47);
            uint64_t v7 = *(char **)v48;
          }
          uint64_t v42 = sub_1885AC0(v8, v46, v7, a3);
          goto LABEL_79;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_85:
        }
          *(void *)unint64_t v48 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v48;
      case 4u:
        if (v8 != 34) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v36 = *(void *)(a1 + 8);
        uint64_t v37 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          uint64_t v37 = (uint64_t *)*v37;
        }
        uint64_t v38 = (void *)(a1 + 88);
        goto LABEL_67;
      case 5u:
        if (v8 != 42) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v39 = *(void *)(a1 + 8);
        uint64_t v37 = (uint64_t *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
        if (v39) {
          uint64_t v37 = (uint64_t *)*v37;
        }
        uint64_t v38 = (void *)(a1 + 96);
        goto LABEL_67;
      case 6u:
        if (v8 != 50) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v40 = *(void *)(a1 + 8);
        uint64_t v37 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
        if (v40) {
          uint64_t v37 = (uint64_t *)*v37;
        }
        uint64_t v38 = (void *)(a1 + 104);
LABEL_67:
        unsigned int v41 = (std::string *)sub_1880F84(v38, v37);
        uint64_t v42 = (void *)sub_188C244(v41, *(char **)v48, (uint64_t)a3);
        goto LABEL_79;
      default:
        if (v8 >> 3 != 100 || v8 != 34) {
          goto LABEL_72;
        }
        uint64_t v15 = v7 - 2;
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 2);
          *(void *)unint64_t v48 = v15 + 2;
          uint64_t v17 = *(_DWORD **)(a1 + 80);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 72), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 72) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_15C2114(*(void *)(a1 + 64));
            uint64_t v19 = sub_188CDC8(a1 + 64, v20);
            uint64_t v16 = *(unsigned __int8 **)v48;
          }
          uint64_t v15 = (char *)sub_11A058C(a3, v19, v16);
          *(void *)unint64_t v48 = v15;
          if (!v15) {
            goto LABEL_85;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *(_WORD *)v15 != 1698) {
            goto LABEL_80;
          }
        }
    }
  }
}

unsigned char *sub_131C5C0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 112);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  int v8 = *(_DWORD *)(a1 + 32);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v11 = *(_DWORD *)(v10 + 44);
      v4[1] = v11;
      if (v11 > 0x7F) {
        uint64_t v12 = sub_188A9CC(v11, v4 + 1);
      }
      else {
        uint64_t v12 = v4 + 2;
      }
      uint64_t v4 = sub_15B43E4(v10, v12, a3);
    }
  }
  uint64_t v13 = *(unsigned int *)(a1 + 48);
  if ((int)v13 >= 1)
  {
    for (uint64_t j = 0; j != v13; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v15 = *(int *)(*(void *)(a1 + 56) + 4 * j);
      unsigned char *v4 = 24;
      v4[1] = v15;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unint64_t v16 = v15 >> 7;
        v4[2] = v15 >> 7;
        v4 += 3;
        if (v15 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_24:
      if ((v6 & 4) == 0) {
        goto LABEL_26;
      }
      goto LABEL_25;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_25:
  }
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_26:
  int v18 = *(_DWORD *)(a1 + 72);
  if (v18)
  {
    for (int k = 0; k != v18; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      *(_WORD *)uint64_t v4 = 1698;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[2] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, v4 + 2);
      }
      else {
        uint64_t v22 = v4 + 3;
      }
      uint64_t v4 = sub_15BAD4C(v20, (unint64_t)v22, a3);
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_131C8CC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B4924(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 48);
  if (v8)
  {
    uint64_t v9 = 0;
    int v10 = 0;
    do
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * v10);
      if (v11 < 0) {
        uint64_t v12 = 10;
      }
      else {
        uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
      }
      v9 += v12;
      ++v10;
    }
    while (v8 != v10);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v13 = *(int *)(a1 + 72);
  uint64_t v14 = v2 + v8 + v9 + 2 * v13;
  uint64_t v15 = *(void *)(a1 + 80);
  if (v15) {
    unint64_t v16 = (uint64_t *)(v15 + 8);
  }
  else {
    unint64_t v16 = 0;
  }
  if (v13)
  {
    uint64_t v17 = 8 * v13;
    do
    {
      uint64_t v18 = *v16++;
      uint64_t v19 = sub_15BAE94(v18);
      v14 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      v17 -= 8;
    }
    while (v17);
  }
  int v20 = *(_DWORD *)(a1 + 16);
  if ((v20 & 0xF) != 0)
  {
    if (v20)
    {
      unint64_t v26 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
      uint64_t v28 = *(void *)(v26 + 8);
      if ((v27 & 0x80u) == 0) {
        uint64_t v28 = v27;
      }
      v14 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v20 & 2) == 0)
      {
LABEL_26:
        if ((v20 & 4) == 0)
        {
LABEL_30:
          if ((v20 & 8) != 0) {
            v14 += 2;
          }
          goto LABEL_32;
        }
LABEL_27:
        unint64_t v21 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
        uint64_t v23 = *(void *)(v21 + 8);
        if ((v22 & 0x80u) == 0) {
          uint64_t v23 = v22;
        }
        v14 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
        goto LABEL_30;
      }
    }
    else if ((v20 & 2) == 0)
    {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
    uint64_t v31 = *(void *)(v29 + 8);
    if ((v30 & 0x80u) == 0) {
      uint64_t v31 = v30;
    }
    v14 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v20 & 4) == 0) {
      goto LABEL_30;
    }
    goto LABEL_27;
  }
LABEL_32:
  uint64_t v24 = *(void *)(a1 + 8);
  if (v24)
  {
    unint64_t v32 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v32 + 31) < 0) {
      uint64_t v33 = *(void *)(v32 + 16);
    }
    else {
      uint64_t v33 = *(unsigned __int8 *)(v32 + 31);
    }
    v14 += v33;
  }
  *(_DWORD *)(a1 + 20) = v14;
  return v14;
}

void sub_131CB18(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C5340((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 72);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v14 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_11DB348((uint64_t *)(a1 + 64), v14, v13, v12, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v15 = *(_DWORD *)(a1 + 72) + v12;
    *(_DWORD *)(a1 + 72) = v15;
    unint64_t v16 = *(int **)(a1 + 80);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  int v17 = *(_DWORD *)(a2 + 16);
  if ((v17 & 0xF) != 0)
  {
    if (v17)
    {
      uint64_t v19 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        unint64_t v21 = (uint64_t *)*v21;
      }
      sub_1881DF4((std::string **)(a1 + 88), v19, v21);
      if ((v17 & 2) == 0)
      {
LABEL_12:
        if ((v17 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_26;
      }
    }
    else if ((v17 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t v22 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    sub_1881DF4((std::string **)(a1 + 96), v22, v24);
    if ((v17 & 4) == 0)
    {
LABEL_13:
      if ((v17 & 8) == 0)
      {
LABEL_15:
        *(_DWORD *)(a1 + 16) |= v17;
        goto LABEL_16;
      }
LABEL_14:
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      goto LABEL_15;
    }
LABEL_26:
    unint64_t v25 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v26 = *(void *)(a1 + 8);
    uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (uint64_t *)*v27;
    }
    sub_1881DF4((std::string **)(a1 + 104), v25, v27);
    if ((v17 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_131CD60(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_15B06D8(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v6 = *(unsigned int *)(a1 + 72);
  do
  {
    BOOL v5 = (int)v6 < 1;
    if ((int)v6 < 1) {
      break;
    }
    uint64_t v7 = v6 - 1;
    char v8 = sub_15BAF9C(*(void *)(*(void *)(a1 + 80) + 8 * v6));
    uint64_t v6 = v7;
  }
  while ((v8 & 1) != 0);
  return v5;
}

void *sub_131CDE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.BatchRevGeocodeRequest");
}

uint64_t sub_131CDF0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2532D08 && *(void *)(a1 + 24))
  {
    sub_146C908();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_131CEA8(uint64_t a1)
{
  sub_131CDF0(a1);

  operator delete();
}

uint64_t sub_131CEE0(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    double result = sub_140CD94(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_131CF40(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v24 + 2;
      }
    }
    uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 24);
    if (!v15)
    {
      unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v16 = (void *)*v16;
      }
      sub_1479294((uint64_t)v16);
      uint64_t v15 = v17;
      *(void *)(a1 + 24) = v17;
      uint64_t v7 = v24;
    }
    uint64_t v14 = (char *)sub_12C8D4C(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v24 = v14;
    if (!v14) {
      return 0;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v19 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      uint64_t v24 = (char *)sub_188C138((uint64_t)v7, (v21 - 128));
      if (!v24) {
        return 0;
      }
      unint64_t v19 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_31:
      uint64_t v24 = v18;
    }
    if (sub_13E78E4(v19))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v19;
    }
    else
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v23);
    }
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v24;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

unsigned char *sub_131D154(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_146D340(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_131D2E0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_146DAD4(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_131D3B0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        sub_1479294((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_25397E0;
      }
      sub_140DA10(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_131D480(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_140DEF4(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_131D4AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.BatchPlaceResult");
}

void *sub_131D4BC(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 9);
  sub_1320988(a1 + 6);
  sub_1320908(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_131D550(void *a1)
{
  sub_131D4BC(a1);

  operator delete();
}

uint64_t sub_131D588(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    char v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_131E6A4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_131CEE0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 72);
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
    *(_DWORD *)(a1 + 112) = 15768000;
  }
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_131D654(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v50 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v50, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 72);
  unint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v9 = (char *)(*(void *)v50 + 1);
    unsigned int v10 = **(unsigned char **)v50;
    if ((char)**(unsigned char **)v50 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        uint64_t v9 = (char *)sub_188C180(*(uint64_t *)v50, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (char *)(*(void *)v50 + 2);
      }
    }
    *(void *)uint64_t v50 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_60;
        }
        uint64_t v13 = v9 + 1;
        unint64_t v14 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)uint64_t v50 = sub_188C138((uint64_t)v9, (v16 - 128));
          if (!*(void *)v50) {
            goto LABEL_82;
          }
          unint64_t v14 = v44;
        }
        else
        {
          uint64_t v13 = v9 + 2;
LABEL_13:
          *(void *)uint64_t v50 = v13;
        }
        if (sub_13E78E4(v14))
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          *(_DWORD *)(a1 + 96) = v14;
        }
        else
        {
          if (*v8) {
            long long v49 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            long long v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v14, v49);
        }
        goto LABEL_67;
      case 2u:
        if (v10 != 18) {
          goto LABEL_60;
        }
        uint64_t v17 = v9 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          *(void *)uint64_t v50 = v17 + 1;
          unint64_t v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            unint64_t v22 = sub_131EED4(*(void *)(a1 + 24));
            uint64_t v21 = sub_188CDC8(a1 + 24, (uint64_t)v22);
            uint64_t v18 = *(unsigned __int8 **)v50;
          }
          uint64_t v17 = sub_131DB50(a3, v21, v18);
          *(void *)uint64_t v50 = v17;
          if (!v17) {
            goto LABEL_82;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_67;
          }
        }
      case 3u:
        if (v10 != 26) {
          goto LABEL_60;
        }
        uint64_t v23 = v9 - 1;
        while (1)
        {
          uint64_t v24 = (unsigned __int8 *)(v23 + 1);
          *(void *)uint64_t v50 = v23 + 1;
          unint64_t v25 = *(_DWORD **)(a1 + 64);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 56), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 56) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            uint64_t v28 = sub_131EDA0(*(void *)(a1 + 48));
            uint64_t v27 = sub_188CDC8(a1 + 48, v28);
            uint64_t v24 = *(unsigned __int8 **)v50;
          }
          uint64_t v23 = sub_131DBE0(a3, v27, v24);
          *(void *)uint64_t v50 = v23;
          if (!v23) {
            goto LABEL_82;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 26) {
            goto LABEL_67;
          }
        }
      case 4u:
        if (v10 != 32) {
          goto LABEL_60;
        }
        v5 |= 8u;
        unint64_t v29 = v9 + 1;
        int v30 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v31 = *v29;
        int v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v45 = sub_188C0D0((uint64_t)v9, v30);
          *(void *)uint64_t v50 = v45;
          *(_DWORD *)(a1 + 112) = v46;
          if (!v45) {
            goto LABEL_82;
          }
        }
        else
        {
          unint64_t v29 = v9 + 2;
LABEL_40:
          *(void *)uint64_t v50 = v29;
          *(_DWORD *)(a1 + 112) = v30;
        }
        goto LABEL_67;
      case 5u:
        if (v10 != 42) {
          goto LABEL_60;
        }
        unint64_t v32 = v9 - 1;
        while (1)
        {
          uint64_t v33 = (char *)(v32 + 1);
          *(void *)uint64_t v50 = v32 + 1;
          unint64_t v34 = *(_DWORD **)(a1 + 88);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 80), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 80) = v35 + 1;
            uint64_t v36 = *(std::string **)&v34[2 * v35 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v38 = v37;
            v38[1] = sub_3A6EDC;
            *uint64_t v37 = 0;
            v37[1] = 0;
            v37[2] = 0;
            uint64_t v36 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v37);
            uint64_t v33 = *(char **)v50;
          }
          unint64_t v32 = sub_188C244(v36, v33, (uint64_t)a3);
          *(void *)uint64_t v50 = v32;
          if (!v32) {
            goto LABEL_82;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 42) {
            goto LABEL_67;
          }
        }
      case 6u:
        if (v10 != 48) {
          goto LABEL_60;
        }
        v5 |= 2u;
        uint64_t v39 = v9 + 1;
        int v40 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v41 = *v39;
        int v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v47 = sub_188C0D0((uint64_t)v9, v40);
          *(void *)uint64_t v50 = v47;
          *(_DWORD *)(a1 + 100) = v48;
          if (!v47) {
            goto LABEL_82;
          }
        }
        else
        {
          uint64_t v39 = v9 + 2;
LABEL_57:
          *(void *)uint64_t v50 = v39;
          *(_DWORD *)(a1 + 100) = v40;
        }
        goto LABEL_67;
      case 7u:
        if (v10 != 57) {
          goto LABEL_60;
        }
        v5 |= 4u;
        *(void *)(a1 + 104) = *(void *)v9;
        *(void *)uint64_t v50 = v9 + 8;
        goto LABEL_67;
      default:
LABEL_60:
        if (v10) {
          BOOL v42 = (v10 & 7) == 4;
        }
        else {
          BOOL v42 = 1;
        }
        if (!v42)
        {
          if (*v8)
          {
            uint64_t v43 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(char **)v50;
          }
          *(void *)uint64_t v50 = sub_1885AC0(v10, v43, v9, a3);
          if (!*(void *)v50) {
            goto LABEL_82;
          }
LABEL_67:
          if (sub_11947B8((uint64_t)a3, (char **)v50, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_82:
        }
          *(void *)uint64_t v50 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v50;
    }
  }
}

char *sub_131DB50(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_131E704(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_131DBE0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_131CF40(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_131DC70(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 96);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        unint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        unint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_131E960(v12, (unint64_t)v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        unint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        unint64_t v19 = v4 + 2;
      }
      uint64_t v4 = sub_131D154(v17, (unint64_t)v19, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v20 = *(_DWORD *)(a1 + 112);
    char *v4 = 32;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unsigned int v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v23 = *(unsigned int *)(a1 + 80);
  if ((int)v23 >= 1)
  {
    uint64_t v24 = 0;
    uint64_t v25 = 8 * v23;
    do
    {
      uint64_t v26 = *(void **)(*(void *)(a1 + 88) + v24 + 8);
      if (*((char *)v26 + 23) < 0)
      {
        int64_t v27 = v26[1];
        if (v27 > 127) {
          goto LABEL_42;
        }
      }
      else
      {
        int64_t v27 = *((unsigned __int8 *)v26 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v27)
      {
        char *v4 = 42;
        v4[1] = v27;
        if (*((char *)v26 + 23) < 0) {
          uint64_t v26 = (void *)*v26;
        }
        uint64_t v28 = v4 + 2;
        memcpy(v28, v26, v27);
        uint64_t v4 = &v28[v27];
        goto LABEL_40;
      }
LABEL_42:
      uint64_t v4 = (char *)sub_188A868(a3, 5, (uint64_t)v26, v4);
LABEL_40:
      v24 += 8;
    }
    while (v25 != v24);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v29 = *(_DWORD *)(a1 + 100);
    char *v4 = 48;
    v4[1] = v29;
    if (v29 > 0x7F)
    {
      v4[1] = v29 | 0x80;
      unsigned int v30 = v29 >> 7;
      v4[2] = v29 >> 7;
      v4 += 3;
      if (v29 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v31 = v30 >> 14;
          v30 >>= 7;
          *v4++ = v30;
        }
        while (v31);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v32 = *(void *)(a1 + 104);
    char *v4 = 57;
    *(void *)(v4 + 1) = v32;
    v4 += 9;
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if ((v33 & 1) == 0) {
    return v4;
  }
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v35 + 31) < 0)
  {
    uint64_t v36 = *(void **)(v35 + 8);
    uint64_t v37 = *(void *)(v35 + 16);
  }
  else
  {
    uint64_t v36 = (void *)(v35 + 8);
    LODWORD(v37) = *(unsigned __int8 *)(v35 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v37)
  {
    uint64_t v38 = (int)v37;
    memcpy(v4, v36, (int)v37);
    v4 += v38;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v36, v37, v4);
}

uint64_t sub_131E090(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_131EB18(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_131D2E0(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 80);
  uint64_t result = v9 + v15;
  if ((int)v15 >= 1)
  {
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v18 = *v17++;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      result += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      --v15;
    }
    while (v15);
  }
  int v21 = *(_DWORD *)(a1 + 16);
  if ((v21 & 0xF) != 0)
  {
    if (v21)
    {
      int v22 = *(_DWORD *)(a1 + 96);
      uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v22 >= 0) {
        uint64_t v24 = v23;
      }
      else {
        uint64_t v24 = 11;
      }
      result += v24;
    }
    if ((v21 & 2) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 100) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v21 & 4) != 0) {
      result += 9;
    }
    if ((v21 & 8) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 112) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if (v25)
  {
    unint64_t v26 = v25 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v26 + 31) < 0) {
      uint64_t v27 = *(void *)(v26 + 16);
    }
    else {
      uint64_t v27 = *(unsigned __int8 *)(v26 + 31);
    }
    result += v27;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_131E280(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1320A08((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1320A94((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 88) + 8);
    int v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 0xF) != 0)
  {
    if (v19)
    {
      *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_23;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0)
      {
LABEL_16:
        *(_DWORD *)(a1 + 16) |= v19;
        goto LABEL_17;
      }
LABEL_15:
      *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
      goto LABEL_16;
    }
LABEL_23:
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    if ((v19 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_131E470(uint64_t a1)
{
  uint64_t result = sub_131E4BC(a1 + 24);
  if (result)
  {
    return sub_131E52C(a1 + 48);
  }
  return result;
}

uint64_t sub_131E4BC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_140DEF4(*(void *)(v5 + 40));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_131E52C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_140DEF4(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_131E59C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.BatchRevGeocodeResponse");
}

uint64_t sub_131E5AC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2532DA8 && *(void *)(a1 + 40))
  {
    sub_146C908();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_131E66C(uint64_t a1)
{
  sub_131E5AC(a1);

  operator delete();
}

uint64_t sub_131E6A4(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_140CD94(*(void *)(result + 40));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_131E704(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v24 + 2;
      }
    }
    uint64_t v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 40);
    if (!v21)
    {
      int v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v22 = (void *)*v22;
      }
      sub_1479294((uint64_t)v22);
      uint64_t v21 = v23;
      *(void *)(a1 + 40) = v23;
      int v7 = v24;
    }
    int v14 = (char *)sub_12C8D4C(a3, v21, (unsigned __int8 *)v7);
LABEL_39:
    uint64_t v24 = v14;
    if (!v14) {
      return 0;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 == 16)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v24 = v15 + 1;
      int v16 = v15[1];
      if (v15[1] < 0)
      {
        int v17 = v16 + (v15[2] << 7);
        int v16 = v17 - 128;
        if (v15[2] < 0)
        {
          uint64_t v15 = (char *)sub_188C138((uint64_t)(v15 + 1), (v17 - 128));
          int v16 = v18;
        }
        else
        {
          v15 += 3;
        }
      }
      else
      {
        v15 += 2;
      }
      uint64_t v24 = v15;
      uint64_t v19 = *(unsigned int *)(a1 + 24);
      if (v19 == *(_DWORD *)(a1 + 28))
      {
        int v20 = v19 + 1;
        sub_188C80C((unsigned int *)(a1 + 24), v19 + 1);
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v19) = v16;
        uint64_t v15 = v24;
      }
      else
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v19) = v16;
        int v20 = v19 + 1;
      }
      *(_DWORD *)(a1 + 24) = v20;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 16) {
        goto LABEL_40;
      }
    }
  }
  if (v8 == 18)
  {
    int v14 = (char *)sub_188C2BC((unsigned int *)(a1 + 24), (unsigned __int8 *)v7, (uint64_t)a3);
    goto LABEL_39;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v24;
    }
    int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_39;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

unsigned char *sub_131E960(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 40);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = sub_146D340(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(unsigned int *)(a1 + 24);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v11 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 16;
      v4[1] = v11;
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unint64_t v12 = v11 >> 7;
        v4[2] = v11 >> 7;
        v4 += 3;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_131EB18(uint64_t a1)
{
  uint64_t v2 = sub_188D498((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_146DAD4(*(void *)(a1 + 40));
    v2 += v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v2 += v7;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_131EBB0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 16))
  {
    unsigned int v8 = *(uint64_t (****)())(a2 + 40);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v9 = *(void *)(a1 + 40);
    if (!v9)
    {
      uint64_t v10 = *(void *)(a1 + 8);
      unint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        unint64_t v11 = (void *)*v11;
      }
      sub_1479294((uint64_t)v11);
      *(void *)(a1 + 40) = v9;
      unsigned int v8 = *(uint64_t (****)())(a2 + 40);
    }
    if (v8) {
      unint64_t v12 = v8;
    }
    else {
      unint64_t v12 = &off_25397E0;
    }
    sub_140DA10(v9, (uint64_t)v12);
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_131ECA8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_140DEF4(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_131ECD4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Cluster");
}

uint64_t sub_131ECE4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A9440;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(void *)(result + 64) = a1;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = &qword_2550250;
  *(void *)(result + 96) = &qword_2550250;
  *(void *)(result + 104) = &qword_2550250;
  *(unsigned char *)(result + 112) = 0;
  return result;
}

uint64_t sub_131EDA0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A94C0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_131EE1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24A9540;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_DWORD *)(result + 112) = 15768000;
  return result;
}

void *sub_131EED4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24A95C0;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  return result;
}

void sub_131EF6C()
{
}

void sub_131EFB4()
{
}

void *sub_131EFD8(uint64_t a1, uint64_t a2)
{
  return sub_130645C(a2);
}

uint64_t sub_131EFE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_131EFE8()
{
}

uint64_t sub_131F038(uint64_t a1, uint64_t a2)
{
  return sub_13064B8(a2);
}

uint64_t sub_131F040(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F048()
{
}

void *sub_131F098(uint64_t a1, uint64_t a2)
{
  return sub_131B238(a2);
}

uint64_t sub_131F0A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F0A8()
{
}

void sub_131F0F0()
{
}

uint64_t sub_131F114(uint64_t a1, uint64_t a2)
{
  return sub_131B2B4(a2);
}

uint64_t sub_131F11C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_131F124()
{
}

void *sub_131F170(uint64_t a1, uint64_t a2)
{
  return sub_131B310(a2);
}

uint64_t sub_131F178(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F180()
{
}

uint64_t sub_131F1D0(uint64_t a1, uint64_t a2)
{
  return sub_131B388(a2);
}

uint64_t sub_131F1D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F1E0()
{
}

double sub_131F234(uint64_t a1, uint64_t a2)
{
  return sub_131B404(a2);
}

uint64_t sub_131F23C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F244()
{
}

uint64_t sub_131F294(uint64_t a1, uint64_t a2)
{
  return sub_131B484(a2);
}

uint64_t sub_131F29C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F2A4()
{
}

uint64_t sub_131F2F8(uint64_t a1, uint64_t a2)
{
  return sub_131B500(a2);
}

uint64_t sub_131F300(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F308()
{
}

uint64_t sub_131F358(uint64_t a1, uint64_t a2)
{
  return sub_131B59C(a2);
}

uint64_t sub_131F360(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F368()
{
}

void *sub_131F3B8(uint64_t a1, uint64_t a2)
{
  return sub_131B618(a2);
}

uint64_t sub_131F3C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F3C8()
{
}

double sub_131F420(uint64_t a1, uint64_t a2)
{
  return sub_131B694(a2);
}

uint64_t sub_131F428(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F430()
{
}

uint64_t sub_131F480(uint64_t a1, uint64_t a2)
{
  return sub_131B718(a2);
}

uint64_t sub_131F488(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F490()
{
}

void *sub_131F4DC(uint64_t a1, uint64_t a2)
{
  return sub_131B794(a2);
}

uint64_t sub_131F4E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F4EC()
{
}

void *sub_131F548(uint64_t a1, uint64_t a2)
{
  return sub_131B80C(a2);
}

uint64_t sub_131F550(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F558()
{
}

void *sub_131F5A4(uint64_t a1, uint64_t a2)
{
  return sub_131B8B0(a2);
}

uint64_t sub_131F5AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F5B4()
{
}

void *sub_131F600(uint64_t a1, uint64_t a2)
{
  return sub_131B928(a2);
}

uint64_t sub_131F608(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F610()
{
}

void *sub_131F670(uint64_t a1, uint64_t a2)
{
  return sub_131B9A0(a2);
}

uint64_t sub_131F678(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F680()
{
}

void sub_131F6C8()
{
}

uint64_t sub_131F6EC(uint64_t a1, uint64_t a2)
{
  return sub_131BA48(a2);
}

uint64_t sub_131F6F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_131F6FC()
{
}

void sub_131F744()
{
}

uint64_t sub_131F768(uint64_t a1, uint64_t a2)
{
  return sub_131BAA4(a2);
}

uint64_t sub_131F770(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_131F778()
{
}

void sub_131F7C0()
{
}

uint64_t sub_131F7E4(uint64_t a1, uint64_t a2)
{
  return sub_131BB00(a2);
}

uint64_t sub_131F7EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_131F7F4()
{
}

void *sub_131F850(uint64_t a1, uint64_t a2)
{
  return sub_131BB5C(a2);
}

uint64_t sub_131F858(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F860()
{
}

void *sub_131F8B8(uint64_t a1, uint64_t a2)
{
  return sub_131BBE4(a2);
}

uint64_t sub_131F8C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F8C8()
{
}

uint64_t sub_131F918(uint64_t a1, uint64_t a2)
{
  return sub_131BC68(a2);
}

uint64_t sub_131F920(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F928()
{
}

void *sub_131F974(uint64_t a1, uint64_t a2)
{
  return sub_131BCE4(a2);
}

uint64_t sub_131F97C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F984()
{
}

double sub_131F9D8(uint64_t a1, uint64_t a2)
{
  return sub_131BD5C(a2);
}

uint64_t sub_131F9E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131F9E8()
{
}

void sub_131FA30()
{
}

uint64_t sub_131FA54(uint64_t a1, uint64_t a2)
{
  return sub_131BDDC(a2);
}

uint64_t sub_131FA5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_131FA64()
{
}

void *sub_131FAB8(uint64_t a1, uint64_t a2)
{
  return sub_130BD74(a2);
}

uint64_t sub_131FAC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131FAC8()
{
}

void sub_131FB10()
{
}

uint64_t sub_131FB34(uint64_t a1, uint64_t a2)
{
  return sub_130BE18(a2);
}

uint64_t sub_131FB3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_131FB44()
{
}

void *sub_131FBA4(uint64_t a1, uint64_t a2)
{
  return sub_130BE74(a2);
}

uint64_t sub_131FBAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131FBB4()
{
}

void *sub_131FC08(uint64_t a1, uint64_t a2)
{
  return sub_130BF24(a2);
}

uint64_t sub_131FC10(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131FC18()
{
}

void *sub_131FC74(uint64_t a1, uint64_t a2)
{
  return sub_130BFC0(a2);
}

uint64_t sub_131FC7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131FC84()
{
}

void *sub_131FCE0(uint64_t a1, uint64_t a2)
{
  return sub_130C048(a2);
}

uint64_t sub_131FCE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131FCF0()
{
}

uint64_t sub_131FD4C(uint64_t a1, uint64_t a2)
{
  return sub_130C0D0(a2);
}

uint64_t sub_131FD54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131FD5C()
{
}

uint64_t sub_131FDB8(uint64_t a1, uint64_t a2)
{
  return sub_130C158(a2);
}

uint64_t sub_131FDC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131FDC8()
{
}

void *sub_131FE20(uint64_t a1, uint64_t a2)
{
  return sub_130C1E0(a2);
}

uint64_t sub_131FE28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131FE30()
{
}

uint64_t sub_131FE98(uint64_t a1, uint64_t a2)
{
  return sub_131ECE4(a2);
}

uint64_t sub_131FEA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131FEA8()
{
}

uint64_t sub_131FEF8(uint64_t a1, uint64_t a2)
{
  return sub_131EDA0(a2);
}

uint64_t sub_131FF00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131FF08()
{
}

uint64_t sub_131FF6C(uint64_t a1, uint64_t a2)
{
  return sub_131EE1C(a2);
}

uint64_t sub_131FF74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131FF7C()
{
}

void *sub_131FFCC(uint64_t a1, uint64_t a2)
{
  return sub_131EED4(a2);
}

uint64_t sub_131FFD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_131FFDC()
{
}

void sub_1320024()
{
}

void sub_1320048(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1309790(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_13200C8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13086B8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1320148(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_130AFF8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_13201C8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1308EB4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_1320248(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_130BFC0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_13202C4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_13202C4(uint64_t a1, std::string *a2)
{
  return sub_130A0F8(a2, a1);
}

std::string *sub_13202D4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_130BE74(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1320350(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1320350(uint64_t a1, std::string *a2)
{
  return sub_130847C(a2, a1);
}

uint64_t *sub_1320360(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_130C158(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_13203DC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_13203DC(uint64_t a1, std::string *a2)
{
  return sub_130B758(a2, a1);
}

std::string *sub_13203EC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_130BF24(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1320468(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1320468(uint64_t a1, std::string *a2)
{
  return sub_1309654(a2, a1);
}

void sub_1320478()
{
}

void sub_13204C0()
{
}

void sub_13204E4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_130E684(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1320564(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_131108C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_13205E4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_131B484(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1320660(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1320660(uint64_t a1, std::string *a2)
{
  return sub_130ECA4(a2, a1);
}

std::string *sub_1320670(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_131B794(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_13206EC()
{
}

void sub_1320734()
{
}

void sub_1320758()
{
}

void sub_13207A0()
{
}

void sub_13207C4()
{
}

void sub_132080C()
{
}

void sub_1320830()
{
}

void sub_1320878()
{
}

void sub_132089C()
{
}

void sub_13208E4()
{
}

void sub_1320908(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_131E5AC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1320988(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_131CDF0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1320A08(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_131EED4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1320A84(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1320A84(uint64_t a1, uint64_t a2)
{
}

void sub_1320A94(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_131EDA0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1320B10(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1320B10(uint64_t a1, uint64_t a2)
{
}

void sub_1320B20()
{
  dword_254F0C8 = 100;
  qword_254F0D0 = (uint64_t)&off_25324D8;
  sub_1882AC4((unint64_t)&off_254D3B0, 100, 11, 0, 0, (uint64_t)&off_25324D8);
  dword_254F0D8 = 101;
  qword_254F0E0 = (uint64_t)&off_2532718;

  sub_1882AC4((unint64_t)&off_254D3B0, 101, 11, 0, 0, (uint64_t)&off_2532718);
}

uint64_t sub_1320BB8()
{
  qword_2605820 = (uint64_t)"AB_REQUEST_TYPE_GET_ALL_POSSIBLE_ASSIGNMENTSAB_REQUEST_TYPE_GET_ASSIGNMENTS_FOR_USERAB_REQUEST_TYPE_UNKNOWN";
  *(void *)algn_2605828 = 44;
  dword_2605830 = 2;
  qword_2605838 = (uint64_t)"AB_REQUEST_TYPE_GET_ASSIGNMENTS_FOR_USERAB_REQUEST_TYPE_UNKNOWN";
  unk_2605840 = 40;
  dword_2605848 = 1;
  qword_2605850 = (uint64_t)"AB_REQUEST_TYPE_UNKNOWN";
  unk_2605858 = 23;
  dword_2605860 = 0;
  qword_2605868 = (uint64_t)"SERVICE_TYPE_DISPATCHERSERVICE_TYPE_ROUTINGSERVICE_TYPE_TILESSERVICE_TYPE_UNKNOWN";
  unk_2605870 = 23;
  dword_2605878 = 1;
  qword_2605880 = (uint64_t)"SERVICE_TYPE_ROUTINGSERVICE_TYPE_TILESSERVICE_TYPE_UNKNOWN";
  unk_2605888 = 20;
  dword_2605890 = 2;
  qword_2605898 = (uint64_t)"SERVICE_TYPE_TILESSERVICE_TYPE_UNKNOWN";
  unk_26058A0 = 18;
  uint64_t result = 3;
  dword_26058A8 = 3;
  qword_26058B0 = (uint64_t)"SERVICE_TYPE_UNKNOWN";
  unk_26058B8 = 20;
  dword_26058C0 = 0;
  qword_26058C8 = (uint64_t)"ABVAL_BOOLABVAL_DOUBLEABVAL_SINT64ABVAL_STRINGABVAL_UNKNOWN";
  unk_26058D0 = 10;
  dword_26058D8 = 4;
  qword_26058E0 = (uint64_t)"ABVAL_DOUBLEABVAL_SINT64ABVAL_STRINGABVAL_UNKNOWN";
  unk_26058E8 = 12;
  dword_26058F0 = 2;
  qword_26058F8 = (uint64_t)"ABVAL_SINT64ABVAL_STRINGABVAL_UNKNOWN";
  unk_2605900 = 12;
  dword_2605908 = 1;
  qword_2605910 = (uint64_t)"ABVAL_STRINGABVAL_UNKNOWN";
  unk_2605918 = 12;
  dword_2605920 = 3;
  qword_2605928 = (uint64_t)"ABVAL_UNKNOWN";
  unk_2605930 = 13;
  dword_2605938 = 0;
  qword_2605940 = (uint64_t)"ADDRESS_LOCATION_EXACT_MATCHADDRESS_LOCATION_FAR_AWAYADDRESS_LOCATION_NEARBY";
  *(void *)algn_2605948 = 28;
  dword_2605950 = 0;
  qword_2605958 = (uint64_t)"ADDRESS_LOCATION_FAR_AWAYADDRESS_LOCATION_NEARBY";
  unk_2605960 = 25;
  dword_2605968 = 2;
  qword_2605970 = (uint64_t)"ADDRESS_LOCATION_NEARBY";
  unk_2605978 = 23;
  dword_2605980 = 1;
  qword_2605988 = (uint64_t)"ANNOUNCEMENT_APPLICATIONANNOUNCEMENT_LOCK_SCREEN";
  unk_2605990 = 24;
  dword_2605998 = 2;
  qword_26059A0 = (uint64_t)"ANNOUNCEMENT_LOCK_SCREEN";
  unk_26059A8 = 24;
  dword_26059B0 = 1;
  qword_26059B8 = (uint64_t)"PHASE_BETAPHASE_INTERNALPHASE_PRODUCTION";
  unk_26059C0 = 10;
  dword_26059C8 = 3;
  qword_26059D0 = (uint64_t)"PHASE_INTERNALPHASE_PRODUCTION";
  unk_26059D8 = 14;
  dword_26059E0 = 2;
  qword_26059E8 = (uint64_t)"PHASE_PRODUCTION";
  unk_26059F0 = 16;
  dword_26059F8 = 1;
  qword_2605A00 = (uint64_t)"ANNOUNCEMENT_TYPE_ENHANCED_DETAILANNOUNCEMENT_TYPE_FLYOVERANNOUNCEMENT_TYPE_GENERALANNOUNCEME"
                           "NT_TYPE_LANE_GUIDANCEANNOUNCEMENT_TYPE_LOOK_AROUNDANNOUNCEMENT_TYPE_TRANSITANNOUNCEMENT_TYPE_"
                           "UNKNOWNANNOUNCEMENT_TYPE_VENUES";
  *(void *)algn_2605A08 = 33;
  dword_2605A10 = 5;
  qword_2605A18 = (uint64_t)"ANNOUNCEMENT_TYPE_FLYOVERANNOUNCEMENT_TYPE_GENERALANNOUNCEMENT_TYPE_LANE_GUIDANCEANNOUNCEMENT_TYPE_LOOK_AROUNDANNOUNCEMENT_TYPE_TRANSITANNOUNCEMENT_TYPE_UNKNOWNANNOUNCEMENT_TYPE_VENUES";
  unk_2605A20 = 25;
  dword_2605A28 = 2;
  qword_2605A30 = (uint64_t)"ANNOUNCEMENT_TYPE_GENERALANNOUNCEMENT_TYPE_LANE_GUIDANCEANNOUNCEMENT_TYPE_LOOK_AROUNDANNOUNCEMENT_TYPE_TRANSITANNOUNCEMENT_TYPE_UNKNOWNANNOUNCEMENT_TYPE_VENUES";
  unk_2605A38 = 25;
  dword_2605A40 = 1;
  qword_2605A48 = (uint64_t)"ANNOUNCEMENT_TYPE_LANE_GUIDANCEANNOUNCEMENT_TYPE_LOOK_AROUNDANNOUNCEMENT_TYPE_TRANSITANNOUNCEMENT_TYPE_UNKNOWNANNOUNCEMENT_TYPE_VENUES";
  unk_2605A50 = 31;
  dword_2605A58 = 6;
  qword_2605A60 = (uint64_t)"ANNOUNCEMENT_TYPE_LOOK_AROUNDANNOUNCEMENT_TYPE_TRANSITANNOUNCEMENT_TYPE_UNKNOWNANNOUNCEMENT_TYPE_VENUES";
  unk_2605A68 = 29;
  dword_2605A70 = 7;
  qword_2605A78 = (uint64_t)"ANNOUNCEMENT_TYPE_TRANSITANNOUNCEMENT_TYPE_UNKNOWNANNOUNCEMENT_TYPE_VENUES";
  unk_2605A80 = 25;
  dword_2605A88 = 3;
  qword_2605A90 = (uint64_t)"ANNOUNCEMENT_TYPE_UNKNOWNANNOUNCEMENT_TYPE_VENUES";
  unk_2605A98 = 25;
  dword_2605AA0 = 0;
  qword_2605AA8 = (uint64_t)"ANNOUNCEMENT_TYPE_VENUES";
  unk_2605AB0 = 24;
  dword_2605AB8 = 4;
  qword_2605AC0 = (uint64_t)"EXTENSION_SUPPORT_ALLOW_APPEXTENSION_SUPPORT_BLACKLIST_APPEXTENSION_SUPPORT_OFFER_APP";
  *(void *)algn_2605AC8 = 27;
  dword_2605AD0 = 1;
  qword_2605AD8 = (uint64_t)"EXTENSION_SUPPORT_BLACKLIST_APPEXTENSION_SUPPORT_OFFER_APP";
  unk_2605AE0 = 31;
  dword_2605AE8 = 3;
  qword_2605AF0 = (uint64_t)"EXTENSION_SUPPORT_OFFER_APP";
  unk_2605AF8 = 27;
  dword_2605B00 = 2;
  qword_2605B08 = (uint64_t)"CALLOUTINFOLISTPHOTOSREVIEWSSNIPPET";
  unk_2605B10 = 7;
  dword_2605B18 = 5;
  qword_2605B20 = (uint64_t)"INFOLISTPHOTOSREVIEWSSNIPPET";
  unk_2605B28 = 4;
  dword_2605B30 = 1;
  qword_2605B38 = (uint64_t)"LISTPHOTOSREVIEWSSNIPPET";
  unk_2605B40 = 4;
  dword_2605B48 = 4;
  qword_2605B50 = (uint64_t)"PHOTOSREVIEWSSNIPPET";
  unk_2605B58 = 6;
  dword_2605B60 = 3;
  qword_2605B68 = (uint64_t)"REVIEWSSNIPPET";
  unk_2605B70 = 7;
  dword_2605B78 = 2;
  qword_2605B80 = (uint64_t)"SNIPPET";
  unk_2605B88 = 7;
  dword_2605B90 = 6;
  qword_2605B98 = (uint64_t)"ACTION_COMPONENT_ALLACTION_COMPONENT_DEALACTION_COMPONENT_PHOTOACTION_COMPONENT_REVIEW";
  unk_2605BA0 = 20;
  dword_2605BA8 = 0;
  qword_2605BB0 = (uint64_t)"ACTION_COMPONENT_DEALACTION_COMPONENT_PHOTOACTION_COMPONENT_REVIEW";
  unk_2605BB8 = 21;
  dword_2605BC0 = 3;
  qword_2605BC8 = (uint64_t)"ACTION_COMPONENT_PHOTOACTION_COMPONENT_REVIEW";
  unk_2605BD0 = 22;
  dword_2605BD8 = 1;
  qword_2605BE0 = (uint64_t)"ACTION_COMPONENT_REVIEW";
  unk_2605BE8 = 23;
  dword_2605BF0 = 2;
  qword_2605BF8 = (uint64_t)"ACTION_CHECKINACTION_CREATEACTION_EDITACTION_UNKNOWNACTION_VIEW";
  unk_2605C00 = 14;
  dword_2605C08 = 4;
  qword_2605C10 = (uint64_t)"ACTION_CREATEACTION_EDITACTION_UNKNOWNACTION_VIEW";
  unk_2605C18 = 13;
  dword_2605C20 = 3;
  qword_2605C28 = (uint64_t)"ACTION_EDITACTION_UNKNOWNACTION_VIEW";
  unk_2605C30 = 11;
  dword_2605C38 = 2;
  qword_2605C40 = (uint64_t)"ACTION_UNKNOWNACTION_VIEW";
  unk_2605C48 = 14;
  dword_2605C50 = 0;
  qword_2605C58 = (uint64_t)"ACTION_VIEW";
  unk_2605C60 = 11;
  dword_2605C68 = 1;
  qword_2605C70 = (uint64_t)"FEATURE_TYPE_COMPOSITEFEATURE_TYPE_RESULTFEATURE_TYPE_SOURCEFEATURE_TYPE_UNKNOWN";
  *(void *)algn_2605C78 = 22;
  dword_2605C80 = 3;
  qword_2605C88 = (uint64_t)"FEATURE_TYPE_RESULTFEATURE_TYPE_SOURCEFEATURE_TYPE_UNKNOWN";
  unk_2605C90 = 19;
  dword_2605C98 = 2;
  qword_2605CA0 = (uint64_t)"FEATURE_TYPE_SOURCEFEATURE_TYPE_UNKNOWN";
  unk_2605CA8 = 19;
  dword_2605CB0 = 1;
  qword_2605CB8 = (uint64_t)"FEATURE_TYPE_UNKNOWN";
  unk_2605CC0 = 20;
  dword_2605CC8 = 0;
  qword_2605CD0 = (uint64_t)"FUNCTION_TYPE_DISCRETEFUNCTION_TYPE_LINEARFUNCTION_TYPE_UNKNOWN";
  *(void *)algn_2605CD8 = 22;
  dword_2605CE0 = 2;
  qword_2605CE8 = (uint64_t)"FUNCTION_TYPE_LINEARFUNCTION_TYPE_UNKNOWN";
  unk_2605CF0 = 20;
  dword_2605CF8 = 1;
  qword_2605D00 = (uint64_t)"FUNCTION_TYPE_UNKNOWN";
  unk_2605D08 = 21;
  dword_2605D10 = 0;
  qword_2605D30 = (uint64_t)"SUGGESTION_CHAINSUGGESTION_CLIENT_RESOLVEDSUGGESTION_COLLECTIONSUGGESTION_DIRECTION_INTENTSUGGESTION_MISCSUGGESTION_MIXED_INTENTSUGGESTION_PUBLISHERSUGGESTION_TRANSITSUGGESTION_UNKNOWN";
  qword_2605D48 = (uint64_t)"SUGGESTION_CLIENT_RESOLVEDSUGGESTION_COLLECTIONSUGGESTION_DIRECTION_INTENTSUGGESTION_MISCSUGGESTION_MIXED_INTENTSUGGESTION_PUBLISHERSUGGESTION_TRANSITSUGGESTION_UNKNOWN";
  qword_2605D60 = (uint64_t)"SUGGESTION_COLLECTIONSUGGESTION_DIRECTION_INTENTSUGGESTION_MISCSUGGESTION_MIXED_INTENTSUGGESTION_PUBLISHERSUGGESTION_TRANSITSUGGESTION_UNKNOWN";
  qword_2605D78 = (uint64_t)"SUGGESTION_DIRECTION_INTENTSUGGESTION_MISCSUGGESTION_MIXED_INTENTSUGGESTION_PUBLISHERSUGGESTION_TRANSITSUGGESTION_UNKNOWN";
  qword_2605D90 = (uint64_t)"SUGGESTION_MISCSUGGESTION_MIXED_INTENTSUGGESTION_PUBLISHERSUGGESTION_TRANSITSUGGESTION_UNKNOWN";
  qword_2605DA8 = (uint64_t)"SUGGESTION_MIXED_INTENTSUGGESTION_PUBLISHERSUGGESTION_TRANSITSUGGESTION_UNKNOWN";
  qword_2605DC0 = (uint64_t)"SUGGESTION_PUBLISHERSUGGESTION_TRANSITSUGGESTION_UNKNOWN";
  qword_2605DD8 = (uint64_t)"SUGGESTION_TRANSITSUGGESTION_UNKNOWN";
  qword_2605DF0 = (uint64_t)"SUGGESTION_UNKNOWN";
  qword_2605D18 = (uint64_t)"SUGGESTION_CATEGORYSUGGESTION_CHAINSUGGESTION_CLIENT_RESOLVEDSUGGESTION_COLLECTIONSUGGESTION_"
                           "DIRECTION_INTENTSUGGESTION_MISCSUGGESTION_MIXED_INTENTSUGGESTION_PUBLISHERSUGGESTION_TRANSITS"
                           "UGGESTION_UNKNOWN";
  unk_2605D20 = 19;
  dword_2605D28 = 1;
  qword_2605D38 = 16;
  dword_2605D40 = 3;
  qword_2605D50 = 26;
  dword_2605D58 = 6;
  qword_2605D68 = 21;
  dword_2605D70 = 8;
  qword_2605D80 = 27;
  dword_2605D88 = 7;
  qword_2605D98 = 15;
  dword_2605DA0 = 5;
  qword_2605DB0 = 23;
  dword_2605DB8 = 4;
  qword_2605DC8 = 20;
  dword_2605DD0 = 9;
  qword_2605DE0 = 18;
  dword_2605DE8 = 2;
  qword_2605DF8 = 18;
  dword_2605E00 = 0;
  qword_2605E20 = (uint64_t)"BRAND_PROFILEBUSINESSCATEGORYCLIENT_RESOLVEDCOLLECTIONDIRECTION_INTENTOFFLINE_AREAPUBLISHERQUERY";
  unk_2605E28 = 13;
  qword_2605E38 = (uint64_t)"BUSINESSCATEGORYCLIENT_RESOLVEDCOLLECTIONDIRECTION_INTENTOFFLINE_AREAPUBLISHERQUERY";
  unk_2605E40 = 8;
  qword_2605E50 = (uint64_t)"CATEGORYCLIENT_RESOLVEDCOLLECTIONDIRECTION_INTENTOFFLINE_AREAPUBLISHERQUERY";
  unk_2605E58 = 8;
  qword_2605E68 = (uint64_t)"CLIENT_RESOLVEDCOLLECTIONDIRECTION_INTENTOFFLINE_AREAPUBLISHERQUERY";
  unk_2605E70 = 15;
  qword_2605E80 = (uint64_t)"COLLECTIONDIRECTION_INTENTOFFLINE_AREAPUBLISHERQUERY";
  qword_2605E98 = (uint64_t)"DIRECTION_INTENTOFFLINE_AREAPUBLISHERQUERY";
  unk_2605EA0 = 16;
  qword_2605EB0 = (uint64_t)"OFFLINE_AREAPUBLISHERQUERY";
  qword_2605EC8 = (uint64_t)"PUBLISHERQUERY";
  unk_2605ED0 = 9;
  qword_2605EE0 = (uint64_t)"QUERY";
  unk_2605EE8 = 5;
  qword_2605E08 = (uint64_t)"ADDRESSBRAND_PROFILEBUSINESSCATEGORYCLIENT_RESOLVEDCOLLECTIONDIRECTION_INTENTOFFLINE_AREAPUBLISHERQUERY";
  unk_2605E10 = 7;
  dword_2605E18 = 2;
  dword_2605E30 = 4;
  dword_2605E48 = 1;
  dword_2605E60 = 3;
  dword_2605E78 = 6;
  qword_2605E88 = 10;
  dword_2605E90 = 8;
  dword_2605EA8 = 7;
  qword_2605EB8 = 12;
  dword_2605EC0 = 5;
  dword_2605ED8 = 9;
  dword_2605EF0 = 0;
  qword_2605F10 = (uint64_t)"SHOW_RESULTS_ON_MAP";
  unk_2605F18 = 19;
  qword_2605EF8 = (uint64_t)"SHOW_RESULTS_IN_LIST_VIEWSHOW_RESULTS_ON_MAP";
  unk_2605F00 = 25;
  dword_2605F08 = 1;
  dword_2605F20 = 0;
  qword_2605F58 = (uint64_t)"CONTACT_WITH_HOME_LOCATIONCONTACT_WITH_LIVE_LOCATIONCONTACT_WITH_NO_LOCATIONCONTACT_WITH_OTHER_LOCATIONCONTACT_WITH_SCHOOL_LOCATIONCONTACT_WITH_WORK_LOCATIONDISTANCE_TO_SUGGESTIONDISTANCE_TO_SUGGESTION_FROM_VIEWPORT_CENTERFRACTION_OF_MATCHIS_CONTAINED_IN_VIEWPORTIS_FAVORITEMAPS_SUGGEST_CONTACT_RELEVANCE_SCOREMAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2605F88 = (uint64_t)"CONTACT_WITH_NO_LOCATIONCONTACT_WITH_OTHER_LOCATIONCONTACT_WITH_SCHOOL_LOCATIONCONTACT_WITH_WORK_LOCATIONDISTANCE_TO_SUGGESTIONDISTANCE_TO_SUGGESTION_FROM_VIEWPORT_CENTERFRACTION_OF_MATCHIS_CONTAINED_IN_VIEWPORTIS_FAVORITEMAPS_SUGGEST_CONTACT_RELEVANCE_SCOREMAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2605FD0 = (uint64_t)"CONTACT_WITH_WORK_LOCATIONDISTANCE_TO_SUGGESTIONDISTANCE_TO_SUGGESTION_FROM_VIEWPORT_CENTERFRACTION_OF_MATCHIS_CONTAINED_IN_VIEWPORTIS_FAVORITEMAPS_SUGGEST_CONTACT_RELEVANCE_SCOREMAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  dword_2605FE0 = 25;
  qword_2606018 = (uint64_t)"FRACTION_OF_MATCHIS_CONTAINED_IN_VIEWPORTIS_FAVORITEMAPS_SUGGEST_CONTACT_RELEVANCE_SCOREMAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2606060 = (uint64_t)"MAPS_SUGGEST_CONTACT_RELEVANCE_SCOREMAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2606078 = (uint64_t)"MAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_26060A8 = (uint64_t)"MAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  dword_26060B8 = 20;
  qword_2606108 = (uint64_t)"MATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2606138 = (uint64_t)"PEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2606150 = (uint64_t)"POI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2606168 = (uint64_t)"POI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2606180 = (uint64_t)"POI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2606198 = (uint64_t)"POI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_26061B0 = (uint64_t)"PREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_26061C8 = (uint64_t)"PREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2606158 = 31;
  dword_26061D8 = 31;
  qword_26061E0 = (uint64_t)"PREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_26061F8 = (uint64_t)"PREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_26061A0 = 33;
  dword_2606208 = 33;
  qword_2606210 = (uint64_t)"PREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2606228 = (uint64_t)"PREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2606240 = (uint64_t)"PREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  dword_2606250 = 34;
  qword_2606140 = 21;
  dword_2606148 = 10;
  qword_2606258 = (uint64_t)"PREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2606120 = (uint64_t)"MATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  unk_2606128 = 26;
  dword_2606118 = 5;
  dword_2606130 = 6;
  qword_2606260 = 44;
  qword_26060F0 = (uint64_t)"MATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  unk_26060F8 = 19;
  dword_2606100 = 8;
  qword_2606110 = 18;
  qword_2606270 = (uint64_t)"PREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_26060D8 = (uint64_t)"MATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  unk_26060E0 = 24;
  dword_26060E8 = 9;
  qword_2606288 = (uint64_t)"PREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_26060C0 = (uint64_t)"MATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  unk_26060C8 = 21;
  dword_26060D0 = 7;
  qword_2606090 = (uint64_t)"MAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  unk_2606098 = 32;
  dword_26060A0 = 18;
  qword_26060B0 = 39;
  qword_2606068 = 36;
  dword_2606070 = 17;
  qword_2606080 = 29;
  dword_2606088 = 19;
  qword_2606230 = 41;
  dword_2606298 = 41;
  qword_2606048 = (uint64_t)"IS_FAVORITEMAPS_SUGGEST_CONTACT_RELEVANCE_SCOREMAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  unk_2606050 = 11;
  dword_2606058 = 12;
  qword_26062A0 = (uint64_t)"PREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2606030 = (uint64_t)"IS_CONTAINED_IN_VIEWPORTIS_FAVORITEMAPS_SUGGEST_CONTACT_RELEVANCE_SCOREMAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  unk_2606038 = 24;
  dword_2606028 = 2;
  dword_2606040 = 22;
  qword_2606000 = (uint64_t)"DISTANCE_TO_SUGGESTION_FROM_VIEWPORT_CENTERFRACTION_OF_MATCHIS_CONTAINED_IN_VIEWPORTIS_FAVORITEMAPS_SUGGEST_CONTACT_RELEVANCE_SCOREMAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  unk_2606008 = 43;
  dword_2606010 = 21;
  qword_2606020 = 17;
  qword_2605FE8 = (uint64_t)"DISTANCE_TO_SUGGESTIONDISTANCE_TO_SUGGESTION_FROM_VIEWPORT_CENTERFRACTION_OF_MATCHIS_CONTAINED_IN_VIEWPORTIS_FAVORITEMAPS_SUGGEST_CONTACT_RELEVANCE_SCOREMAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  unk_2605FF0 = 22;
  dword_2605FF8 = 3;
  qword_2606278 = 45;
  qword_26062A8 = 45;
  qword_2605FB8 = (uint64_t)"CONTACT_WITH_SCHOOL_LOCATIONCONTACT_WITH_WORK_LOCATIONDISTANCE_TO_SUGGESTIONDISTANCE_TO_SUGGESTION_FROM_VIEWPORT_CENTERFRACTION_OF_MATCHIS_CONTAINED_IN_VIEWPORTIS_FAVORITEMAPS_SUGGEST_CONTACT_RELEVANCE_SCOREMAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  unk_2605FC0 = 28;
  dword_2605FC8 = 26;
  qword_2605FD8 = 26;
  qword_2605FA0 = (uint64_t)"CONTACT_WITH_OTHER_LOCATIONCONTACT_WITH_SCHOOL_LOCATIONCONTACT_WITH_WORK_LOCATIONDISTANCE_TO_SUGGESTIONDISTANCE_TO_SUGGESTION_FROM_VIEWPORT_CENTERFRACTION_OF_MATCHIS_CONTAINED_IN_VIEWPORTIS_FAVORITEMAPS_SUGGEST_CONTACT_RELEVANCE_SCOREMAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  unk_2605FA8 = 27;
  dword_2605F98 = 29;
  dword_2605FB0 = 27;
  dword_26062B0 = 35;
  qword_2605F70 = (uint64_t)"CONTACT_WITH_LIVE_LOCATIONCONTACT_WITH_NO_LOCATIONCONTACT_WITH_OTHER_LOCATIONCONTACT_WITH_SCHOOL_LOCATIONCONTACT_WITH_WORK_LOCATIONDISTANCE_TO_SUGGESTIONDISTANCE_TO_SUGGESTION_FROM_VIEWPORT_CENTERFRACTION_OF_MATCHIS_CONTAINED_IN_VIEWPORTIS_FAVORITEMAPS_SUGGEST_CONTACT_RELEVANCE_SCOREMAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  unk_2605F78 = 26;
  dword_2605F80 = 28;
  qword_2605F90 = 24;
  qword_2605F40 = (uint64_t)"CONTACT_RELEVANCE_SCORECONTACT_WITH_HOME_LOCATIONCONTACT_WITH_LIVE_LOCATIONCONTACT_WITH_NO_LOCATIONCONTACT_WITH_OTHER_LOCATIONCONTACT_WITH_SCHOOL_LOCATIONCONTACT_WITH_WORK_LOCATIONDISTANCE_TO_SUGGESTIONDISTANCE_TO_SUGGESTION_FROM_VIEWPORT_CENTERFRACTION_OF_MATCHIS_CONTAINED_IN_VIEWPORTIS_FAVORITEMAPS_SUGGEST_CONTACT_RELEVANCE_SCOREMAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SUGGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGESTER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_MATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_IS_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  unk_2605F48 = 23;
  dword_2605F50 = 4;
  qword_2605F60 = 26;
  dword_2605F68 = 24;
  qword_26062B8 = (uint64_t)"PREFIX_TOKEN_MATCH_POSITION_SECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_2605F28 = (uint64_t)"AGECONTACT_RELEVANCE_SCORECONTACT_WITH_HOME_LOCATIONCONTACT_WITH_LIVE_LOCATIONCONTACT_WITH_NO"
                           "_LOCATIONCONTACT_WITH_OTHER_LOCATIONCONTACT_WITH_SCHOOL_LOCATIONCONTACT_WITH_WORK_LOCATIONDIS"
                           "TANCE_TO_SUGGESTIONDISTANCE_TO_SUGGESTION_FROM_VIEWPORT_CENTERFRACTION_OF_MATCHIS_CONTAINED_I"
                           "N_VIEWPORTIS_FAVORITEMAPS_SUGGEST_CONTACT_RELEVANCE_SCOREMAPS_SUGGEST_IS_TOURIST_SCOREMAPS_SU"
                           "GGEST_POI_RELEVANCE_SCOREMAPS_SUGGEST_TIME_SINCE_LAST_INTERACTEDMATCHED_USING_ADDRESSMATCHED_"
                           "USING_EVENT_NAMEMATCHED_USING_LABELMATCHED_USING_NAMEMATCHED_USING_ORGANIZATIONPEOPLE_SUGGEST"
                           "ER_RANKPOI_OPEN_STATE_CURRENTLY_CLOSEDPOI_OPEN_STATE_IS_CLOSING_SOONPOI_OPEN_STATE_IS_OPENING"
                           "_SOONPOI_OPEN_STATE_PERMANENTLY_CLOSEDPREFIX_LAST_TOKEN_MATCH_COVERPREFIX_MATCH_COVERPREFIX_M"
                           "ATCH_POSITIONPREFIX_MATCH_WORD_BOUNDARYPREFIX_TOKEN_IS_NUMBER_FIRST_QUERY_TOKENPREFIX_TOKEN_I"
                           "S_NUMBER_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LENGTH_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LENG"
                           "TH_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_LOCATION"
                           "_SECOND_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_FIRST_QUERY_TOKENPREFIX_TOKEN_MATCH_POSITION_S"
                           "ECOND_QUERY_TOKENSHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  unk_2605F30 = 3;
  dword_2605F38 = 11;
  qword_26062D0 = (uint64_t)"SHOWN_TO_USERTIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  qword_26062E8 = (uint64_t)"TIME_SINCE_MAP_VIEWPORT_CHANGED_SECONDSUNKNOWN_RESULT_FEATURE";
  dword_26062C8 = 39;
  qword_26062F0 = 39;
  qword_2606300 = (uint64_t)"UNKNOWN_RESULT_FEATURE";
  qword_2606308 = 22;
  dword_2606160 = 13;
  qword_2606170 = 30;
  dword_2606178 = 16;
  qword_2606188 = 30;
  dword_2606190 = 15;
  dword_26061A8 = 14;
  qword_26061B8 = 29;
  dword_26061C0 = 30;
  qword_26061D0 = 18;
  qword_26061E8 = 21;
  dword_26061F0 = 32;
  qword_2606200 = 26;
  qword_2606218 = 40;
  dword_2606220 = 36;
  dword_2606238 = 40;
  qword_2606248 = 43;
  dword_2606268 = 38;
  dword_2606280 = 37;
  qword_2606290 = 46;
  qword_26062C0 = 46;
  qword_26062D8 = 13;
  dword_26062E0 = 1;
  dword_26062F8 = 23;
  dword_2606310 = 0;
  qword_2606330 = (uint64_t)"POI_LABELUNKNOWN_LABEL";
  unk_2606338 = 9;
  qword_2606348 = (uint64_t)"UNKNOWN_LABEL";
  unk_2606350 = 13;
  qword_2606318 = (uint64_t)"AOI_LABELPOI_LABELUNKNOWN_LABEL";
  unk_2606320 = 9;
  dword_2606328 = 2;
  dword_2606340 = 1;
  dword_2606358 = 0;
  qword_2606378 = (uint64_t)"RBES_BOOKEDRBES_ERRORRBES_PUNCHED_OUTRBES_SUSPENDEDRBES_UNKNOWN";
  unk_2606380 = 11;
  qword_2606390 = (uint64_t)"RBES_ERRORRBES_PUNCHED_OUTRBES_SUSPENDEDRBES_UNKNOWN";
  unk_2606398 = 10;
  qword_26063A8 = (uint64_t)"RBES_PUNCHED_OUTRBES_SUSPENDEDRBES_UNKNOWN";
  unk_26063B0 = 16;
  qword_26063C0 = (uint64_t)"RBES_SUSPENDEDRBES_UNKNOWN";
  qword_26063D8 = (uint64_t)"RBES_UNKNOWN";
  qword_2606360 = (uint64_t)"RBES_ABANDONEDRBES_BOOKEDRBES_ERRORRBES_PUNCHED_OUTRBES_SUSPENDEDRBES_UNKNOWN";
  *(void *)algn_2606368 = 14;
  dword_2606370 = 2;
  dword_2606388 = 1;
  dword_26063A0 = 5;
  dword_26063B8 = 4;
  qword_26063C8 = 14;
  dword_26063D0 = 3;
  qword_26063E0 = 12;
  dword_26063E8 = 0;
  qword_2606408 = (uint64_t)"RBV_CONFIRMATION_REQUESTINGRBV_DETAILS_PICKINGRBV_NOT_SETRBV_RIDE_OPTIONS";
  unk_2606410 = 27;
  qword_2606420 = (uint64_t)"RBV_DETAILS_PICKINGRBV_NOT_SETRBV_RIDE_OPTIONS";
  unk_2606428 = 19;
  qword_2606438 = (uint64_t)"RBV_NOT_SETRBV_RIDE_OPTIONS";
  unk_2606440 = 11;
  qword_2606450 = (uint64_t)"RBV_RIDE_OPTIONS";
  unk_2606458 = 16;
  qword_26063F0 = (uint64_t)"RBV_CONFIRMATION_CONFIRMEDRBV_CONFIRMATION_REQUESTINGRBV_DETAILS_PICKINGRBV_NOT_SETRBV_RIDE_OPTIONS";
  *(void *)algn_26063F8 = 26;
  dword_2606400 = 4;
  dword_2606418 = 3;
  dword_2606430 = 2;
  dword_2606448 = 0;
  dword_2606460 = 1;
  qword_2606480 = (uint64_t)"RBSI_MISSING_RIDE_IDENTIFIERRBSI_MISSING_RIDE_OPTION_NAMERBSI_NOT_SET";
  qword_2606498 = (uint64_t)"RBSI_MISSING_RIDE_OPTION_NAMERBSI_NOT_SET";
  unk_26064A0 = 29;
  qword_26064B0 = (uint64_t)"RBSI_NOT_SET";
  unk_26064B8 = 12;
  qword_2606468 = (uint64_t)"RBSI_MISSING_RIDE_ETARBSI_MISSING_RIDE_IDENTIFIERRBSI_MISSING_RIDE_OPTION_NAMERBSI_NOT_SET";
  unk_2606470 = 21;
  dword_2606478 = 3;
  qword_2606488 = 28;
  dword_2606490 = 2;
  dword_26064A8 = 1;
  dword_26064C0 = 0;
  dword_2606520 = 9;
  qword_2606540 = (uint64_t)"RBRF_RESPONSE_CODE_REQUIRES_FEEDBACKRBRF_RESPONSE_CODE_REQUIRES_VERIFY_CREDENTIALSRBRF_RESPONSE_CODE_SERVICE_TEMPORARILY_UNAVAILABLERBRF_RESPONSE_CODE_UNSPECIFIEDRBRF_RESPONSE_NILRBRF_RESPONSE_RIDE_MISSING_IDENTIFIERRBRF_RESPONSE_RIDE_OPTIONS_NOT_AVAILABLERBRF_RESPONSE_RIDE_OPTION_MISSING_ETARBRF_RESPONSE_RIDE_OPTION_MISSING_NAMERBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_2606548 = 36;
  qword_2606558 = (uint64_t)"RBRF_RESPONSE_CODE_REQUIRES_VERIFY_CREDENTIALSRBRF_RESPONSE_CODE_SERVICE_TEMPORARILY_UNAVAILABLERBRF_RESPONSE_CODE_UNSPECIFIEDRBRF_RESPONSE_NILRBRF_RESPONSE_RIDE_MISSING_IDENTIFIERRBRF_RESPONSE_RIDE_OPTIONS_NOT_AVAILABLERBRF_RESPONSE_RIDE_OPTION_MISSING_ETARBRF_RESPONSE_RIDE_OPTION_MISSING_NAMERBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_2606560 = 46;
  qword_2606570 = (uint64_t)"RBRF_RESPONSE_CODE_SERVICE_TEMPORARILY_UNAVAILABLERBRF_RESPONSE_CODE_UNSPECIFIEDRBRF_RESPONSE_NILRBRF_RESPONSE_RIDE_MISSING_IDENTIFIERRBRF_RESPONSE_RIDE_OPTIONS_NOT_AVAILABLERBRF_RESPONSE_RIDE_OPTION_MISSING_ETARBRF_RESPONSE_RIDE_OPTION_MISSING_NAMERBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_2606578 = 50;
  dword_2606580 = 8;
  qword_2606588 = (uint64_t)"RBRF_RESPONSE_CODE_UNSPECIFIEDRBRF_RESPONSE_NILRBRF_RESPONSE_RIDE_MISSING_IDENTIFIERRBRF_RESPONSE_RIDE_OPTIONS_NOT_AVAILABLERBRF_RESPONSE_RIDE_OPTION_MISSING_ETARBRF_RESPONSE_RIDE_OPTION_MISSING_NAMERBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_2606590 = 30;
  qword_26065A0 = (uint64_t)"RBRF_RESPONSE_NILRBRF_RESPONSE_RIDE_MISSING_IDENTIFIERRBRF_RESPONSE_RIDE_OPTIONS_NOT_AVAILABLERBRF_RESPONSE_RIDE_OPTION_MISSING_ETARBRF_RESPONSE_RIDE_OPTION_MISSING_NAMERBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  qword_26065B8 = (uint64_t)"RBRF_RESPONSE_RIDE_MISSING_IDENTIFIERRBRF_RESPONSE_RIDE_OPTIONS_NOT_AVAILABLERBRF_RESPONSE_RIDE_OPTION_MISSING_ETARBRF_RESPONSE_RIDE_OPTION_MISSING_NAMERBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_26065C0 = 37;
  qword_26065D0 = (uint64_t)"RBRF_RESPONSE_RIDE_OPTIONS_NOT_AVAILABLERBRF_RESPONSE_RIDE_OPTION_MISSING_ETARBRF_RESPONSE_RIDE_OPTION_MISSING_NAMERBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  qword_26065D8 = 40;
  qword_26065E8 = (uint64_t)"RBRF_RESPONSE_RIDE_OPTION_MISSING_ETARBRF_RESPONSE_RIDE_OPTION_MISSING_NAMERBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_26065F0 = 37;
  qword_26064F8 = (uint64_t)"RBRF_RESPONSE_CODE_NO_SERVICE_IN_AREARBRF_RESPONSE_CODE_REQUIRES_APP_COMPLETIONRBRF_RESPONSE_CODE_REQUIRES_APP_LAUNCHRBRF_RESPONSE_CODE_REQUIRES_FEEDBACKRBRF_RESPONSE_CODE_REQUIRES_VERIFY_CREDENTIALSRBRF_RESPONSE_CODE_SERVICE_TEMPORARILY_UNAVAILABLERBRF_RESPONSE_CODE_UNSPECIFIEDRBRF_RESPONSE_NILRBRF_RESPONSE_RIDE_MISSING_IDENTIFIERRBRF_RESPONSE_RIDE_OPTIONS_NOT_AVAILABLERBRF_RESPONSE_RIDE_OPTION_MISSING_ETARBRF_RESPONSE_RIDE_OPTION_MISSING_NAMERBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_2606500 = 37;
  qword_2606600 = (uint64_t)"RBRF_RESPONSE_RIDE_OPTION_MISSING_NAMERBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_2606608 = 38;
  qword_2606528 = (uint64_t)"RBRF_RESPONSE_CODE_REQUIRES_APP_LAUNCHRBRF_RESPONSE_CODE_REQUIRES_FEEDBACKRBRF_RESPONSE_CODE_REQUIRES_VERIFY_CREDENTIALSRBRF_RESPONSE_CODE_SERVICE_TEMPORARILY_UNAVAILABLERBRF_RESPONSE_CODE_UNSPECIFIEDRBRF_RESPONSE_NILRBRF_RESPONSE_RIDE_MISSING_IDENTIFIERRBRF_RESPONSE_RIDE_OPTIONS_NOT_AVAILABLERBRF_RESPONSE_RIDE_OPTION_MISSING_ETARBRF_RESPONSE_RIDE_OPTION_MISSING_NAMERBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_2606530 = 38;
  qword_2606618 = (uint64_t)"RBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_2606620 = 32;
  qword_26064E0 = (uint64_t)"RBRF_RESPONSE_CODE_GENERIC_ERRORRBRF_RESPONSE_CODE_NO_SERVICE_IN_AREARBRF_RESPONSE_CODE_REQUIRES_APP_COMPLETIONRBRF_RESPONSE_CODE_REQUIRES_APP_LAUNCHRBRF_RESPONSE_CODE_REQUIRES_FEEDBACKRBRF_RESPONSE_CODE_REQUIRES_VERIFY_CREDENTIALSRBRF_RESPONSE_CODE_SERVICE_TEMPORARILY_UNAVAILABLERBRF_RESPONSE_CODE_UNSPECIFIEDRBRF_RESPONSE_NILRBRF_RESPONSE_RIDE_MISSING_IDENTIFIERRBRF_RESPONSE_RIDE_OPTIONS_NOT_AVAILABLERBRF_RESPONSE_RIDE_OPTION_MISSING_ETARBRF_RESPONSE_RIDE_OPTION_MISSING_NAMERBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_26064E8 = 32;
  qword_2606630 = (uint64_t)"RBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_2606638 = 42;
  qword_2606510 = (uint64_t)"RBRF_RESPONSE_CODE_REQUIRES_APP_COMPLETIONRBRF_RESPONSE_CODE_REQUIRES_APP_LAUNCHRBRF_RESPONSE_CODE_REQUIRES_FEEDBACKRBRF_RESPONSE_CODE_REQUIRES_VERIFY_CREDENTIALSRBRF_RESPONSE_CODE_SERVICE_TEMPORARILY_UNAVAILABLERBRF_RESPONSE_CODE_UNSPECIFIEDRBRF_RESPONSE_NILRBRF_RESPONSE_RIDE_MISSING_IDENTIFIERRBRF_RESPONSE_RIDE_OPTIONS_NOT_AVAILABLERBRF_RESPONSE_RIDE_OPTION_MISSING_ETARBRF_RESPONSE_RIDE_OPTION_MISSING_NAMERBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_2606518 = 42;
  qword_2606648 = (uint64_t)"RBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_2606650 = 43;
  qword_26064C8 = (uint64_t)"RBRF_NOT_SETRBRF_RESPONSE_CODE_GENERIC_ERRORRBRF_RESPONSE_CODE_NO_SERVICE_IN_AREARBRF_RESPONS"
                           "E_CODE_REQUIRES_APP_COMPLETIONRBRF_RESPONSE_CODE_REQUIRES_APP_LAUNCHRBRF_RESPONSE_CODE_REQUIR"
                           "ES_FEEDBACKRBRF_RESPONSE_CODE_REQUIRES_VERIFY_CREDENTIALSRBRF_RESPONSE_CODE_SERVICE_TEMPORARI"
                           "LY_UNAVAILABLERBRF_RESPONSE_CODE_UNSPECIFIEDRBRF_RESPONSE_NILRBRF_RESPONSE_RIDE_MISSING_IDENT"
                           "IFIERRBRF_RESPONSE_RIDE_OPTIONS_NOT_AVAILABLERBRF_RESPONSE_RIDE_OPTION_MISSING_ETARBRF_RESPON"
                           "SE_RIDE_OPTION_MISSING_NAMERBRF_RESPONSE_RIDE_PHASE_UNKNOWNRBRF_RESPONSE_RIDE_PICKUP_LOCATION"
                           "_INVALIDRBRF_RESPONSE_RIDE_VEHICLE_LOCATION_INVALIDRBRF_RESPONSE_TIMEOUT";
  unk_26064D0 = 12;
  dword_26064D8 = 0;
  dword_26064F0 = 4;
  dword_2606508 = 7;
  dword_2606538 = 5;
  dword_2606550 = 10;
  dword_2606568 = 6;
  dword_2606598 = 3;
  qword_26065A8 = 17;
  dword_26065B0 = 2;
  dword_26065C8 = 13;
  dword_26065E0 = 15;
  dword_26065F8 = 12;
  dword_2606610 = 11;
  dword_2606628 = 14;
  dword_2606640 = 16;
  dword_2606658 = 17;
  qword_2606660 = (uint64_t)"RBRF_RESPONSE_TIMEOUT";
  unk_2606668 = 21;
  dword_2606670 = 1;
  qword_2606690 = (uint64_t)"RBI_CONFIRM_REQUEST_RIDERBI_HANDLE_CANCELRBI_HANDLE_GET_RIDE_STATUSRBI_HANDLE_LIST_RIDE_OPTIONSRBI_HANDLE_REQUEST_RIDERBI_HANDLE_SEND_FEEDBACKRBI_UNKNOWN";
  qword_26066A8 = (uint64_t)"RBI_HANDLE_CANCELRBI_HANDLE_GET_RIDE_STATUSRBI_HANDLE_LIST_RIDE_OPTIONSRBI_HANDLE_REQUEST_RIDERBI_HANDLE_SEND_FEEDBACKRBI_UNKNOWN";
  unk_26066B0 = 17;
  qword_26066C0 = (uint64_t)"RBI_HANDLE_GET_RIDE_STATUSRBI_HANDLE_LIST_RIDE_OPTIONSRBI_HANDLE_REQUEST_RIDERBI_HANDLE_SEND_FEEDBACKRBI_UNKNOWN";
  unk_26066C8 = 26;
  qword_26066D8 = (uint64_t)"RBI_HANDLE_LIST_RIDE_OPTIONSRBI_HANDLE_REQUEST_RIDERBI_HANDLE_SEND_FEEDBACKRBI_UNKNOWN";
  unk_26066E0 = 28;
  qword_26066F0 = (uint64_t)"RBI_HANDLE_REQUEST_RIDERBI_HANDLE_SEND_FEEDBACKRBI_UNKNOWN";
  qword_26066F8 = 23;
  qword_2606708 = (uint64_t)"RBI_HANDLE_SEND_FEEDBACKRBI_UNKNOWN";
  qword_2606678 = (uint64_t)"RBI_CONFIRM_CANCELRBI_CONFIRM_REQUEST_RIDERBI_HANDLE_CANCELRBI_HANDLE_GET_RIDE_STATUSRBI_HAND"
                           "LE_LIST_RIDE_OPTIONSRBI_HANDLE_REQUEST_RIDERBI_HANDLE_SEND_FEEDBACKRBI_UNKNOWN";
  unk_2606680 = 18;
  dword_2606688 = 5;
  qword_2606698 = 24;
  dword_26066A0 = 2;
  dword_26066B8 = 6;
  dword_26066D0 = 4;
  dword_26066E8 = 1;
  dword_2606700 = 3;
  qword_2606710 = 24;
  dword_2606718 = 7;
  qword_2606720 = (uint64_t)"RBI_UNKNOWN";
  unk_2606728 = 11;
  dword_2606730 = 0;
  qword_2606750 = (uint64_t)"BTES_BOOKEDBTES_ERRORBTES_PUNCHED_OUTBTES_SUSPENDEDBTES_UNKNOWN";
  unk_2606758 = 11;
  qword_2606768 = (uint64_t)"BTES_ERRORBTES_PUNCHED_OUTBTES_SUSPENDEDBTES_UNKNOWN";
  unk_2606770 = 10;
  qword_2606780 = (uint64_t)"BTES_PUNCHED_OUTBTES_SUSPENDEDBTES_UNKNOWN";
  qword_2606798 = (uint64_t)"BTES_SUSPENDEDBTES_UNKNOWN";
  unk_26067A0 = 14;
  qword_2606738 = (uint64_t)"BTES_ABANDONEDBTES_BOOKEDBTES_ERRORBTES_PUNCHED_OUTBTES_SUSPENDEDBTES_UNKNOWN";
  unk_2606740 = 14;
  dword_2606748 = 2;
  dword_2606760 = 1;
  dword_2606778 = 5;
  qword_2606788 = 16;
  dword_2606790 = 4;
  dword_26067A8 = 3;
  qword_26067B0 = (uint64_t)"BTES_UNKNOWN";
  unk_26067B8 = 12;
  dword_26067C0 = 0;
  qword_26067C8 = (uint64_t)"BTV_INSTALL_NEEDEDBTV_NOT_SETBTV_PICK_DETAILSBTV_PICK_TIMEBTV_PRE_ENABLEBTV_PRE_RESERVEBTV_RE"
                           "SERVEDBTV_RESERVING";
  unk_26067D0 = 18;
  qword_26067F8 = (uint64_t)"BTV_PICK_DETAILSBTV_PICK_TIMEBTV_PRE_ENABLEBTV_PRE_RESERVEBTV_RESERVEDBTV_RESERVING";
  unk_2606800 = 16;
  qword_2606810 = (uint64_t)"BTV_PICK_TIMEBTV_PRE_ENABLEBTV_PRE_RESERVEBTV_RESERVEDBTV_RESERVING";
  qword_2606828 = (uint64_t)"BTV_PRE_ENABLEBTV_PRE_RESERVEBTV_RESERVEDBTV_RESERVING";
  unk_2606830 = 14;
  qword_2606840 = (uint64_t)"BTV_PRE_RESERVEBTV_RESERVEDBTV_RESERVING";
  unk_2606848 = 15;
  qword_2606858 = (uint64_t)"BTV_RESERVEDBTV_RESERVING";
  unk_2606860 = 12;
  qword_26067E0 = (uint64_t)"BTV_NOT_SETBTV_PICK_DETAILSBTV_PICK_TIMEBTV_PRE_ENABLEBTV_PRE_RESERVEBTV_RESERVEDBTV_RESERVING";
  unk_26067E8 = 11;
  dword_26067D8 = 1;
  dword_26067F0 = 0;
  dword_2606808 = 4;
  qword_2606818 = 13;
  dword_2606820 = 3;
  dword_2606838 = 2;
  dword_2606850 = 5;
  qword_2606870 = (uint64_t)"BTV_RESERVING";
  unk_2606878 = 13;
  dword_2606868 = 7;
  dword_2606880 = 6;
  qword_26068B8 = (uint64_t)"LTESCDMAUMTSUNKNOWN";
  unk_26068C0 = 3;
  qword_26068A0 = (uint64_t)"GSMLTESCDMAUMTSUNKNOWN";
  unk_26068A8 = 3;
  dword_26068B0 = 3;
  qword_26068D0 = (uint64_t)"SCDMAUMTSUNKNOWN";
  unk_26068D8 = 5;
  dword_2606898 = 5;
  qword_26068E8 = (uint64_t)"UMTSUNKNOWN";
  unk_26068F0 = 4;
  qword_2606888 = (uint64_t)"CDMAGSMLTESCDMAUMTSUNKNOWN";
  unk_2606890 = 4;
  dword_26068E0 = 4;
  qword_2606900 = (uint64_t)"UNKNOWN";
  unk_2606908 = 7;
  dword_26068C8 = 1;
  dword_26068F8 = 2;
  dword_2606910 = 0;
  dword_2606928 = 1;
  qword_2606930 = (uint64_t)"RAT_TYPE_NRRAT_TYPE_UNKNOWN";
  unk_2606938 = 11;
  dword_2606940 = 2;
  qword_2606918 = (uint64_t)"RAT_TYPE_LTERAT_TYPE_NRRAT_TYPE_UNKNOWN";
  unk_2606920 = 12;
  qword_2606948 = (uint64_t)"RAT_TYPE_UNKNOWN";
  unk_2606950 = 16;
  dword_2606958 = 0;
  return result;
}

BOOL sub_1321808(unsigned int a1)
{
  return a1 < 0x12;
}

BOOL sub_1321814(unsigned int a1)
{
  return a1 < 0xB;
}

BOOL sub_1321820(unsigned int a1)
{
  return a1 < 5;
}

uint64_t sub_132182C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13218E4(uint64_t a1)
{
  sub_132182C(a1);

  operator delete();
}

uint64_t sub_132191C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_132199C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = (char *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 4)
    {
      if (v9 != 34) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t v19 = (void *)(a1 + 32);
LABEL_29:
      uint64_t v21 = (std::string *)sub_1880F84(v19, v18);
      unint64_t v16 = (void *)sub_188C244(v21, *(char **)v27, (uint64_t)a3);
LABEL_30:
      *(void *)uint64_t v27 = v16;
      if (!v16) {
        goto LABEL_43;
      }
      goto LABEL_36;
    }
    if (v12 == 3) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 4u;
    int v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      int v22 = v8 + 2;
LABEL_35:
      *(void *)uint64_t v27 = v22;
      *(_DWORD *)(a1 + 40) = v23;
      goto LABEL_36;
    }
    uint64_t v25 = sub_188C0D0((uint64_t)v8, v23);
    *(void *)uint64_t v27 = v25;
    *(_DWORD *)(a1 + 40) = v26;
    if (!v25) {
      goto LABEL_43;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (void *)(a1 + 24);
    goto LABEL_29;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = *(char **)v27;
    }
    unint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_43:
  *(void *)uint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v27;
}

unsigned char *sub_1321BC0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1321D28(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1321E2C()
{
  return 1;
}

void *sub_1321E34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.ZoomRangeString");
}

void *sub_1321E44(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1321EB8(void *a1)
{
  sub_1321E44(a1);

  operator delete();
}

uint64_t sub_1321EF0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1321F08(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(unsigned char *)(a1 + 24) = v14 != 0;
      int v5 = 1;
      goto LABEL_20;
    }
    unint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(unsigned char *)(a1 + 24) = v17 != 0;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_1322098(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v6 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_132217C(uint64_t a1)
{
  uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

std::string *sub_13221BC(std::string *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    std::string::value_type v2 = *(unsigned char *)(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    result[1].__r_.__value_.__s.__data_[0] = v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13221F4()
{
  return 1;
}

void *sub_13221FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.LineDisplayHints");
}

void *sub_132220C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1322280(void *a1)
{
  sub_132220C(a1);

  operator delete();
}

uint64_t sub_13222B8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13222DC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    int v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      int v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    int v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_13224CC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1322670(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1322714()
{
  return 1;
}

void *sub_132271C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.TimeRange");
}

uint64_t sub_132272C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24A9B80;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = &qword_2550250;
  *(void *)(a1 + 80) = &qword_2550250;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  return a1;
}

void sub_13227C0(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13227F0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1322888((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1365B7C(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1322888(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 72);
  uint64_t v2 = (void ***)(a1 + 72);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 80);
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2532DF8)
  {
    if (*(void *)(a1 + 88))
    {
      sub_13D2884();
      operator delete();
    }
    if (*(void *)(a1 + 96))
    {
      sub_13D2884();
      operator delete();
    }
    if (*(void *)(a1 + 104))
    {
      sub_145FE08();
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 112);
    if (v5)
    {
      sub_1321E44(v5);
      operator delete();
    }
    if (*(void *)(a1 + 120))
    {
      sub_13D2884();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 128);
    if (result)
    {
      sub_13D2884();
      operator delete();
    }
  }
  return result;
}

void sub_13229C0(void *a1)
{
  sub_13227F0(a1);

  operator delete();
}

uint64_t sub_13229F8(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    unint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_13222B8(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_17:
      unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_21;
        }
      }
LABEL_9:
      if ((v6 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
    unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_21:
    uint64_t result = sub_1369F48(*(void *)(a1 + 88));
    if ((v6 & 8) == 0)
    {
LABEL_10:
      if ((v6 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_23;
    }
LABEL_22:
    uint64_t result = sub_1369F48(*(void *)(a1 + 96));
    if ((v6 & 0x10) == 0)
    {
LABEL_11:
      if ((v6 & 0x20) == 0) {
        goto LABEL_26;
      }
      goto LABEL_24;
    }
LABEL_23:
    uint64_t result = sub_1369BB4(*(void *)(a1 + 104));
    if ((v6 & 0x20) == 0)
    {
LABEL_26:
      if ((v6 & 0x40) != 0) {
        uint64_t result = sub_1369F48(*(void *)(a1 + 120));
      }
      if ((v6 & 0x80) != 0) {
        uint64_t result = sub_1369F48(*(void *)(a1 + 128));
      }
      goto LABEL_30;
    }
LABEL_24:
    uint64_t v9 = *(void *)(a1 + 112);
    char v10 = *(unsigned char *)(v9 + 8);
    uint64_t result = v9 + 8;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v10) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
    goto LABEL_26;
  }
LABEL_30:
  if ((v6 & 0x7F00) != 0)
  {
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
  }
  char v12 = *(unsigned char *)(a1 + 8);
  uint64_t v11 = a1 + 8;
  *(_DWORD *)(v11 + 32) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

uint64_t sub_1322B70(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v70 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v70, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v70 + 1);
    unsigned int v9 = **(unsigned char **)v70;
    if ((char)**(unsigned char **)v70 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v70, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v70 + 2);
      }
    }
    *(void *)uint64_t v70 = v8;
    switch(v9 >> 3)
    {
      case 3u:
        if (v9 != 26) {
          goto LABEL_107;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v12 = *(void *)(a1 + 88);
        if (v12) {
          goto LABEL_103;
        }
        uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v12 = sub_13DAB08((uint64_t)v13);
        *(void *)(a1 + 88) = v12;
        goto LABEL_102;
      case 4u:
        if (v9 != 34) {
          goto LABEL_107;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v12 = *(void *)(a1 + 96);
        if (v12) {
          goto LABEL_103;
        }
        uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v12 = sub_13DAB08((uint64_t)v17);
        *(void *)(a1 + 96) = v12;
        goto LABEL_102;
      case 5u:
      case 6u:
      case 8u:
      case 9u:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0x11u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
        goto LABEL_107;
      case 7u:
        if (v9 != 56) {
          goto LABEL_107;
        }
        v5 |= 0x100u;
        uint64_t v18 = (char *)(v8 + 1);
        uint64_t v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v57 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v70 = v57;
          *(void *)(a1 + 136) = v58;
          if (!v57) {
            goto LABEL_146;
          }
        }
        else
        {
          uint64_t v18 = (char *)(v8 + 2);
LABEL_29:
          *(void *)uint64_t v70 = v18;
          *(void *)(a1 + 136) = v19;
        }
        goto LABEL_105;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_107;
        }
        uint64_t v21 = (char *)(v8 + 1);
        unint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          *(void *)uint64_t v70 = sub_188C138((uint64_t)v8, (v24 - 128));
          if (!*(void *)v70) {
            goto LABEL_146;
          }
          unint64_t v22 = v59;
        }
        else
        {
          uint64_t v21 = (char *)(v8 + 2);
LABEL_34:
          *(void *)uint64_t v70 = v21;
        }
        if (v22 <= 2)
        {
          *(_DWORD *)(a1 + 40) |= 0x200u;
          *(_DWORD *)(a1 + 144) = v22;
          goto LABEL_105;
        }
        if (*v7) {
          uint64_t v68 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v68 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v69 = 10;
        goto LABEL_139;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_107;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v25 = *(void *)(a1 + 8);
        int v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          int v26 = (uint64_t *)*v26;
        }
        uint64_t v27 = (void *)(a1 + 72);
        goto LABEL_84;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_107;
        }
        v5 |= 0x400u;
        uint64_t v28 = (char *)(v8 + 1);
        int v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v60 = sub_188C0D0((uint64_t)v8, v29);
          *(void *)uint64_t v70 = v60;
          *(_DWORD *)(a1 + 148) = v61;
          if (!v60) {
            goto LABEL_146;
          }
        }
        else
        {
          uint64_t v28 = (char *)(v8 + 2);
LABEL_45:
          *(void *)uint64_t v70 = v28;
          *(_DWORD *)(a1 + 148) = v29;
        }
        goto LABEL_105;
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_107;
        }
        v5 |= 0x800u;
        uint64_t v32 = (char *)(v8 + 1);
        LODWORD(v31) = *v8;
        if ((v31 & 0x80) == 0) {
          goto LABEL_50;
        }
        int v33 = *v32;
        uint64_t v31 = v31 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v62 = sub_188C138((uint64_t)v8, v31);
          *(void *)uint64_t v70 = v62;
          *(_DWORD *)(a1 + 152) = v63;
          if (!v62) {
            goto LABEL_146;
          }
        }
        else
        {
          uint64_t v32 = (char *)(v8 + 2);
LABEL_50:
          *(void *)uint64_t v70 = v32;
          *(_DWORD *)(a1 + 152) = v31;
        }
        goto LABEL_105;
      case 0x12u:
        if (v9 != 144) {
          goto LABEL_107;
        }
        unint64_t v34 = (char *)(v8 + 1);
        unint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        int v35 = *v34;
        int v36 = v22 + (v35 << 7);
        unint64_t v22 = (v36 - 128);
        if (v35 < 0)
        {
          *(void *)uint64_t v70 = sub_188C138((uint64_t)v8, (v36 - 128));
          if (!*(void *)v70) {
            goto LABEL_146;
          }
          unint64_t v22 = v64;
        }
        else
        {
          unint64_t v34 = (char *)(v8 + 2);
LABEL_55:
          *(void *)uint64_t v70 = v34;
        }
        if (v22 <= 4)
        {
          *(_DWORD *)(a1 + 40) |= 0x1000u;
          *(_DWORD *)(a1 + 156) = v22;
          goto LABEL_105;
        }
        if (*v7) {
          uint64_t v68 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v68 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v69 = 18;
        goto LABEL_139;
      case 0x19u:
        if (v9 != 202) {
          goto LABEL_107;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v37 = *(void **)(a1 + 104);
        if (!v37)
        {
          uint64_t v38 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v38 = (void *)*v38;
          }
          uint64_t v37 = sub_1478C60((uint64_t)v38);
          *(void *)(a1 + 104) = v37;
          unint64_t v8 = *(unsigned __int8 **)v70;
        }
        uint64_t v39 = (uint64_t)sub_129760C(a3, (uint64_t)v37, v8);
        goto LABEL_104;
      case 0x1Au:
        if (v9 != 210) {
          goto LABEL_107;
        }
        int v40 = (char *)(v8 - 2);
        while (1)
        {
          int v41 = (unsigned __int8 *)(v40 + 2);
          *(void *)uint64_t v70 = v40 + 2;
          BOOL v42 = *(_DWORD **)(a1 + 64);
          if (v42 && (uint64_t v43 = *(int *)(a1 + 56), (int)v43 < *v42))
          {
            *(_DWORD *)(a1 + 56) = v43 + 1;
            uint64_t v44 = *(void *)&v42[2 * v43 + 2];
          }
          else
          {
            uint64_t v45 = sub_1332154(*(void *)(a1 + 48));
            uint64_t v44 = sub_188CDC8(a1 + 48, (uint64_t)v45);
            int v41 = *(unsigned __int8 **)v70;
          }
          int v40 = sub_1323420(a3, v44, v41);
          *(void *)uint64_t v70 = v40;
          if (!v40) {
            goto LABEL_146;
          }
          if (*(void *)a3 <= (unint64_t)v40 || *(_WORD *)v40 != 466) {
            goto LABEL_105;
          }
        }
      case 0x1Bu:
        if (v9 != 218) {
          goto LABEL_107;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v46 = *(void *)(a1 + 112);
        if (!v46)
        {
          uint64_t v47 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v47 = (void *)*v47;
          }
          uint64_t v46 = sub_13320D8((uint64_t)v47);
          *(void *)(a1 + 112) = v46;
          unint64_t v8 = *(unsigned __int8 **)v70;
        }
        uint64_t v39 = (uint64_t)sub_13234B0(a3, v46, v8);
        goto LABEL_104;
      case 0x1Cu:
        if (v9 != 226) {
          goto LABEL_107;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v48 = *(void *)(a1 + 8);
        int v26 = (uint64_t *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
        if (v48) {
          int v26 = (uint64_t *)*v26;
        }
        uint64_t v27 = (void *)(a1 + 80);
LABEL_84:
        long long v49 = (std::string *)sub_1880F84(v27, v26);
        uint64_t v39 = (uint64_t)sub_188C244(v49, *(char **)v70, (uint64_t)a3);
        goto LABEL_104;
      case 0x1Du:
        if (v9 != 232) {
          goto LABEL_107;
        }
        uint64_t v50 = (char *)(v8 + 1);
        unint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_89;
        }
        int v51 = *v50;
        int v52 = v22 + (v51 << 7);
        unint64_t v22 = (v52 - 128);
        if (v51 < 0)
        {
          *(void *)uint64_t v70 = sub_188C138((uint64_t)v8, (v52 - 128));
          if (!*(void *)v70) {
            goto LABEL_146;
          }
          unint64_t v22 = v65;
        }
        else
        {
          uint64_t v50 = (char *)(v8 + 2);
LABEL_89:
          *(void *)uint64_t v70 = v50;
        }
        if (v22 > 2)
        {
          if (*v7) {
            uint64_t v68 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v68 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v69 = 29;
LABEL_139:
          sub_188C020(v69, v22, v68);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x2000u;
          *(_DWORD *)(a1 + 160) = v22;
        }
        goto LABEL_105;
      case 0x1Eu:
        if (v9 != 242) {
          goto LABEL_107;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v12 = *(void *)(a1 + 120);
        if (v12) {
          goto LABEL_103;
        }
        unsigned int v53 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v53 = (void *)*v53;
        }
        uint64_t v12 = sub_13DAB08((uint64_t)v53);
        *(void *)(a1 + 120) = v12;
        goto LABEL_102;
      case 0x1Fu:
        if (v9 != 250) {
          goto LABEL_107;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v12 = *(void *)(a1 + 128);
        if (v12) {
          goto LABEL_103;
        }
        uint64_t v54 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v54 = (void *)*v54;
        }
        uint64_t v12 = sub_13DAB08((uint64_t)v54);
        *(void *)(a1 + 128) = v12;
LABEL_102:
        unint64_t v8 = *(unsigned __int8 **)v70;
LABEL_103:
        uint64_t v39 = sub_1323390(a3, v12, v8);
        goto LABEL_104;
      default:
        if (v9 >> 3 == 2047 && v9 == 248)
        {
          v5 |= 0x4000u;
          uint64_t v14 = (char *)(v8 + 1);
          int v15 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v16 = *v14;
          int v15 = v15 + (v16 << 7) - 128;
          if ((v16 & 0x80000000) == 0)
          {
            uint64_t v14 = (char *)(v8 + 2);
LABEL_19:
            *(void *)uint64_t v70 = v14;
            *(_DWORD *)(a1 + 164) = v15;
            goto LABEL_105;
          }
          uint64_t v66 = sub_188C0D0((uint64_t)v8, v15);
          *(void *)uint64_t v70 = v66;
          *(_DWORD *)(a1 + 164) = v67;
          if (!v66) {
            goto LABEL_146;
          }
LABEL_105:
          if (sub_11947B8((uint64_t)a3, (char **)v70, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_107:
        if (v9) {
          BOOL v55 = (v9 & 7) == 4;
        }
        else {
          BOOL v55 = 1;
        }
        if (!v55)
        {
          if (v9 - 8000 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v56 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v56 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = *(unsigned __int8 **)v70;
            }
            uint64_t v39 = (uint64_t)sub_1885AC0(v9, v56, (char *)v8, a3);
          }
          else
          {
            uint64_t v39 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2532DF8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_104:
          *(void *)uint64_t v70 = v39;
          if (!v39) {
            goto LABEL_146;
          }
          goto LABEL_105;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_146:
        }
          *(void *)uint64_t v70 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v70;
    }
  }
}

uint64_t sub_1323390(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13D29F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1323420(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13222DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13234B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1321F08(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1323540(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 88);
    char *v4 = 26;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    unint64_t v4 = sub_13D2F58(v7, v9, a3);
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 0x100) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 96);
  char *v4 = 34;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  unint64_t v4 = sub_13D2F58(v10, v12, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 136);
    char *v4 = 56;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 144);
    char *v4 = 80;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 148);
    char *v4 = 120;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 152);
    *(_WORD *)unint64_t v4 = 384;
    v4[2] = v22;
    if (v22 > 0x7F)
    {
      v4[2] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[3] = v22 >> 7;
      v4 += 4;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 156);
    *(_WORD *)unint64_t v4 = 400;
    v4[2] = v25;
    if (v25 > 0x7F)
    {
      v4[2] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[3] = v25 >> 7;
      v4 += 4;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v28 = *(void *)(a1 + 104);
    *(_WORD *)unint64_t v4 = 458;
    unsigned int v29 = *(_DWORD *)(v28 + 44);
    v4[2] = v29;
    if (v29 > 0x7F) {
      int v30 = sub_188A9CC(v29, v4 + 2);
    }
    else {
      int v30 = v4 + 3;
    }
    unint64_t v4 = sub_1460138(v28, v30, a3);
  }
  int v31 = *(_DWORD *)(a1 + 56);
  if (v31)
  {
    for (int i = 0; i != v31; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *(_WORD *)unint64_t v4 = 466;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      v4[2] = v34;
      if (v34 > 0x7F) {
        int v35 = sub_188A9CC(v34, v4 + 2);
      }
      else {
        int v35 = v4 + 3;
      }
      unint64_t v4 = sub_13224CC(v33, (unint64_t)v35, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v36 = *(void *)(a1 + 112);
    *(_WORD *)unint64_t v4 = 474;
    unsigned int v37 = *(_DWORD *)(v36 + 20);
    v4[2] = v37;
    if (v37 > 0x7F) {
      uint64_t v38 = sub_188A9CC(v37, v4 + 2);
    }
    else {
      uint64_t v38 = v4 + 3;
    }
    unint64_t v4 = sub_1322098(v36, (unint64_t)v38, a3);
    if ((v6 & 2) == 0)
    {
LABEL_70:
      if ((v6 & 0x2000) == 0) {
        goto LABEL_85;
      }
      goto LABEL_79;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_70;
  }
  unint64_t v4 = sub_117A0AC(a3, 28, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x2000) == 0) {
    goto LABEL_85;
  }
LABEL_79:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v39 = *(int *)(a1 + 160);
  *(_WORD *)unint64_t v4 = 488;
  v4[2] = v39;
  if (v39 > 0x7F)
  {
    v4[2] = v39 | 0x80;
    unint64_t v40 = v39 >> 7;
    v4[3] = v39 >> 7;
    v4 += 4;
    if (v39 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v41 = v40 >> 14;
        v40 >>= 7;
        *v4++ = v40;
      }
      while (v41);
    }
  }
  else
  {
    v4 += 3;
  }
LABEL_85:
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v42 = *(void *)(a1 + 120);
    *(_WORD *)unint64_t v4 = 498;
    unsigned int v43 = *(_DWORD *)(v42 + 44);
    v4[2] = v43;
    if (v43 > 0x7F) {
      uint64_t v44 = sub_188A9CC(v43, v4 + 2);
    }
    else {
      uint64_t v44 = v4 + 3;
    }
    unint64_t v4 = sub_13D2F58(v42, v44, a3);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v45 = *(void *)(a1 + 128);
    *(_WORD *)unint64_t v4 = 506;
    unsigned int v46 = *(_DWORD *)(v45 + 44);
    v4[2] = v46;
    if (v46 > 0x7F) {
      uint64_t v47 = sub_188A9CC(v46, v4 + 2);
    }
    else {
      uint64_t v47 = v4 + 3;
    }
    unint64_t v4 = sub_13D2F58(v45, v47, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v48 = *(_DWORD *)(a1 + 164);
    *(_WORD *)unint64_t v4 = 32760;
    v4[2] = v48;
    if (v48 > 0x7F)
    {
      v4[2] = v48 | 0x80;
      unsigned int v49 = v48 >> 7;
      v4[3] = v48 >> 7;
      v4 += 4;
      if (v48 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v50 = v49 >> 14;
          v49 >>= 7;
          *v4++ = v49;
        }
        while (v50);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v51 = *(void *)(a1 + 8);
  if ((v51 & 1) == 0) {
    return v4;
  }
  unint64_t v53 = v51 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v53 + 31) < 0)
  {
    uint64_t v54 = *(void **)(v53 + 8);
    uint64_t v55 = *(void *)(v53 + 16);
  }
  else
  {
    uint64_t v54 = (void *)(v53 + 8);
    LODWORD(v55) = *(unsigned __int8 *)(v53 + 31);
  }
  if (*a3 - (void)v4 >= (int)v55)
  {
    uint64_t v56 = (int)v55;
    memcpy(v4, v54, (int)v55);
    v4 += v56;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v54, v55, v4);
}

uint64_t sub_1323CC0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + 2 * v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1322670(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v10) {
    goto LABEL_17;
  }
  if (v10)
  {
    unint64_t v14 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 2) == 0)
    {
LABEL_10:
      if ((v10 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_34;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_10;
  }
  unint64_t v17 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v10 & 4) == 0)
  {
LABEL_11:
    if ((v10 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v20 = sub_13D3304(*(void *)(a1 + 88));
  v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 8) == 0)
  {
LABEL_12:
    if ((v10 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v21 = sub_13D3304(*(void *)(a1 + 96));
  v4 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x10) == 0)
  {
LABEL_13:
    if ((v10 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_37:
    uint64_t v23 = *(void *)(a1 + 112);
    uint64_t v24 = 2 * (*(_DWORD *)(v23 + 16) & 1);
    uint64_t v25 = *(void *)(v23 + 8);
    if (v25)
    {
      unint64_t v37 = v25 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v37 + 31) < 0) {
        uint64_t v38 = *(void *)(v37 + 16);
      }
      else {
        uint64_t v38 = *(unsigned __int8 *)(v37 + 31);
      }
      v24 += v38;
    }
    *(_DWORD *)(v23 + 20) = v24;
    v4 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v10 & 0x40) == 0)
    {
LABEL_15:
      if ((v10 & 0x80) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_36:
  uint64_t v22 = sub_1460320(*(void *)(a1 + 104));
  v4 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v10 & 0x20) != 0) {
    goto LABEL_37;
  }
LABEL_14:
  if ((v10 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_39:
  uint64_t v26 = sub_13D3304(*(void *)(a1 + 120));
  v4 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v10 & 0x80) != 0)
  {
LABEL_16:
    uint64_t v11 = sub_13D3304(*(void *)(a1 + 128));
    v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_17:
  if ((v10 & 0x7F00) == 0) {
    goto LABEL_26;
  }
  if ((v10 & 0x100) != 0)
  {
    v4 += ((9 * (__clz(*(void *)(a1 + 136) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v10 & 0x200) == 0)
    {
LABEL_20:
      if ((v10 & 0x400) == 0) {
        goto LABEL_21;
      }
      goto LABEL_46;
    }
  }
  else if ((v10 & 0x200) == 0)
  {
    goto LABEL_20;
  }
  int v27 = *(_DWORD *)(a1 + 144);
  if (v27 < 0) {
    uint64_t v28 = 11;
  }
  else {
    uint64_t v28 = ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v4 += v28;
  if ((v10 & 0x400) == 0)
  {
LABEL_21:
    if ((v10 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_47;
  }
LABEL_46:
  v4 += ((9 * (__clz(*(_DWORD *)(a1 + 148) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x800) == 0)
  {
LABEL_22:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_51;
  }
LABEL_47:
  int v29 = *(_DWORD *)(a1 + 152);
  if (v29 < 0) {
    uint64_t v30 = 12;
  }
  else {
    uint64_t v30 = ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  v4 += v30;
  if ((v10 & 0x1000) == 0)
  {
LABEL_23:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_55;
  }
LABEL_51:
  int v31 = *(_DWORD *)(a1 + 156);
  if (v31 < 0) {
    uint64_t v32 = 12;
  }
  else {
    uint64_t v32 = ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  v4 += v32;
  if ((v10 & 0x2000) == 0)
  {
LABEL_24:
    if ((v10 & 0x4000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_55:
  int v33 = *(_DWORD *)(a1 + 160);
  if (v33 < 0) {
    uint64_t v34 = 12;
  }
  else {
    uint64_t v34 = ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  v4 += v34;
  if ((v10 & 0x4000) != 0) {
LABEL_25:
  }
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 164) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_26:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v35 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v35 + 31) < 0) {
      uint64_t v36 = *(void *)(v35 + 16);
    }
    else {
      uint64_t v36 = *(unsigned __int8 *)(v35 + 31);
    }
    v4 += v36;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_13240E0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1365DFC((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v9) {
    goto LABEL_68;
  }
  if (v9)
  {
    int v10 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 72), v10, v12);
  }
  if ((v9 & 2) != 0)
  {
    unint64_t v13 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 80), v13, v15);
  }
  if ((v9 & 4) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v16 = *(void *)(a1 + 88);
    if (!v16)
    {
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v16 = sub_13DAB08((uint64_t)v18);
      *(void *)(a1 + 88) = v16;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v19 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v19 = &off_2536850;
    }
    sub_136AA7C(v16, (uint64_t)v19);
    if ((v9 & 8) == 0)
    {
LABEL_15:
      if ((v9 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_36;
    }
  }
  else if ((v9 & 8) == 0)
  {
    goto LABEL_15;
  }
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v20 = *(void *)(a1 + 96);
  if (!v20)
  {
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (void *)*v22;
    }
    uint64_t v20 = sub_13DAB08((uint64_t)v22);
    *(void *)(a1 + 96) = v20;
  }
  if (*(void *)(a2 + 96)) {
    uint64_t v23 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    uint64_t v23 = &off_2536850;
  }
  sub_136AA7C(v20, (uint64_t)v23);
  if ((v9 & 0x10) == 0)
  {
LABEL_16:
    if ((v9 & 0x20) == 0) {
      goto LABEL_17;
    }
LABEL_44:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v28 = *(std::string **)(a1 + 112);
    if (!v28)
    {
      uint64_t v29 = *(void *)(a1 + 8);
      uint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        uint64_t v30 = (void *)*v30;
      }
      uint64_t v28 = (std::string *)sub_13320D8((uint64_t)v30);
      *(void *)(a1 + 112) = v28;
    }
    if (*(void *)(a2 + 112)) {
      int v31 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      int v31 = &off_2532DD8;
    }
    sub_13221BC(v28, (uint64_t)v31);
    if ((v9 & 0x40) == 0)
    {
LABEL_18:
      if ((v9 & 0x80) == 0) {
        goto LABEL_68;
      }
      goto LABEL_60;
    }
    goto LABEL_52;
  }
LABEL_36:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v24 = *(void **)(a1 + 104);
  if (!v24)
  {
    uint64_t v25 = *(void *)(a1 + 8);
    uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      uint64_t v26 = (void *)*v26;
    }
    uint64_t v24 = sub_1478C60((uint64_t)v26);
    *(void *)(a1 + 104) = v24;
  }
  if (*(void *)(a2 + 104)) {
    int v27 = *(uint64_t (****)())(a2 + 104);
  }
  else {
    int v27 = &off_2539400;
  }
  sub_136AC4C((uint64_t)v24, (uint64_t)v27);
  if ((v9 & 0x20) != 0) {
    goto LABEL_44;
  }
LABEL_17:
  if ((v9 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_52:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v32 = *(void *)(a1 + 120);
  if (!v32)
  {
    uint64_t v33 = *(void *)(a1 + 8);
    uint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
    if (v33) {
      uint64_t v34 = (void *)*v34;
    }
    uint64_t v32 = sub_13DAB08((uint64_t)v34);
    *(void *)(a1 + 120) = v32;
  }
  if (*(void *)(a2 + 120)) {
    unint64_t v35 = *(uint64_t (****)())(a2 + 120);
  }
  else {
    unint64_t v35 = &off_2536850;
  }
  sub_136AA7C(v32, (uint64_t)v35);
  if ((v9 & 0x80) != 0)
  {
LABEL_60:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v36 = *(void *)(a1 + 128);
    if (!v36)
    {
      uint64_t v37 = *(void *)(a1 + 8);
      uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        uint64_t v38 = (void *)*v38;
      }
      uint64_t v36 = sub_13DAB08((uint64_t)v38);
      *(void *)(a1 + 128) = v36;
    }
    if (*(void *)(a2 + 128)) {
      unint64_t v39 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      unint64_t v39 = &off_2536850;
    }
    sub_136AA7C(v36, (uint64_t)v39);
  }
LABEL_68:
  if ((v9 & 0x7F00) == 0) {
    goto LABEL_78;
  }
  if ((v9 & 0x100) != 0)
  {
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    if ((v9 & 0x200) == 0)
    {
LABEL_71:
      if ((v9 & 0x400) == 0) {
        goto LABEL_72;
      }
      goto LABEL_84;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_71;
  }
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  if ((v9 & 0x400) == 0)
  {
LABEL_72:
    if ((v9 & 0x800) == 0) {
      goto LABEL_73;
    }
    goto LABEL_85;
  }
LABEL_84:
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  if ((v9 & 0x800) == 0)
  {
LABEL_73:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_86;
  }
LABEL_85:
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  if ((v9 & 0x1000) == 0)
  {
LABEL_74:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_75;
    }
LABEL_87:
    *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
    if ((v9 & 0x4000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_76;
  }
LABEL_86:
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  if ((v9 & 0x2000) != 0) {
    goto LABEL_87;
  }
LABEL_75:
  if ((v9 & 0x4000) != 0) {
LABEL_76:
  }
    *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
LABEL_77:
  *(_DWORD *)(a1 + 40) |= v9;
LABEL_78:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v40 = *(void *)(a2 + 8);
  if (v40)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v40 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_132447C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 4) != 0)
    {
      uint64_t result = sub_136AE2C(*(void *)(a1 + 88));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) != 0)
    {
      uint64_t result = sub_136AE2C(*(void *)(a1 + 96));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t result = sub_136AEA0(*(void *)(a1 + 104));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40) != 0)
    {
      uint64_t result = sub_136AE2C(*(void *)(a1 + 120));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x80) == 0) {
      return 1;
    }
    uint64_t result = sub_136AE2C(*(void *)(a1 + 128));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1324510@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.Line");
}

void *sub_1324520(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24A9C00;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = &qword_2550250;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = 0xFFFFFFFF00000000;
  return a1;
}

void sub_13245A4(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13245D4(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2532EA0 && *(void *)(a1 + 80))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1365BFC((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13246B4(uint64_t a1)
{
  sub_13245D4(a1);

  operator delete();
}

uint64_t sub_13246EC(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_132191C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 3) != 0)
  {
    if ((v6 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v7 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
LABEL_9:
      if ((v6 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v6 & 2) != 0) {
LABEL_10:
    }
      uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 80));
  }
LABEL_11:
  if ((v6 & 0x1C) != 0)
  {
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 96) = 0xFFFFFFFF00000000;
  }
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = a1 + 8;
  *(_DWORD *)(v8 + 32) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_13247CC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v42 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v42 + 1);
    unsigned int v9 = **(unsigned char **)v42;
    if ((char)**(unsigned char **)v42 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v42, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v42 + 2);
      }
    }
    *(void *)uint64_t v42 = v8;
    switch(v9 >> 3)
    {
      case 3u:
        if (v9 != 24) {
          goto LABEL_47;
        }
        v5 |= 4u;
        uint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v42 = v12;
          *(void *)(a1 + 88) = v13;
          goto LABEL_57;
        }
        uint64_t v37 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v42 = v37;
        *(void *)(a1 + 88) = v38;
        if (!v37) {
          goto LABEL_72;
        }
        goto LABEL_57;
      case 4u:
        if (v9 != 34) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v18 = *(void *)(a1 + 80);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_15C1918((uint64_t)v19);
          *(void *)(a1 + 80) = v18;
          uint64_t v8 = *(unsigned __int8 **)v42;
        }
        uint64_t v20 = sub_1198F14(a3, v18, v8);
        goto LABEL_56;
      case 5u:
      case 6u:
      case 7u:
      case 9u:
      case 0xAu:
      case 0xBu:
        goto LABEL_47;
      case 8u:
        if (v9 != 64) {
          goto LABEL_47;
        }
        uint64_t v21 = (char *)(v8 + 1);
        unint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          *(void *)uint64_t v42 = sub_188C138((uint64_t)v8, (v24 - 128));
          if (!*(void *)v42) {
            goto LABEL_72;
          }
          unint64_t v22 = v39;
        }
        else
        {
          uint64_t v21 = (char *)(v8 + 2);
LABEL_30:
          *(void *)uint64_t v42 = v21;
        }
        if ((v22 + 1) > 5)
        {
          if (*v7) {
            uint64_t v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(8, v22, v36);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x10u;
          *(_DWORD *)(a1 + 100) = v22;
        }
        goto LABEL_57;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_47;
        }
        uint64_t v25 = v8 - 1;
        while (1)
        {
          uint64_t v26 = v25 + 1;
          *(void *)uint64_t v42 = v25 + 1;
          int v27 = *(_DWORD **)(a1 + 64);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 56), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 56) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            uint64_t v30 = sub_1332050(*(void *)(a1 + 48));
            uint64_t v29 = sub_188CDC8(a1 + 48, v30);
            uint64_t v26 = *(unsigned __int8 **)v42;
          }
          uint64_t v25 = (unsigned __int8 *)sub_1324C24(a3, v29, v26);
          *(void *)uint64_t v42 = v25;
          if (!v25) {
            goto LABEL_72;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 98) {
            goto LABEL_57;
          }
        }
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v31 = *(void *)(a1 + 8);
        uint64_t v32 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          uint64_t v32 = (uint64_t *)*v32;
        }
        uint64_t v33 = (std::string *)sub_1880F84((void *)(a1 + 72), v32);
        uint64_t v20 = (void *)sub_188C244(v33, *(char **)v42, (uint64_t)a3);
        goto LABEL_56;
      default:
        if (v9 >> 3 == 2047 && v9 == 248)
        {
          v5 |= 8u;
          uint64_t v15 = (char *)(v8 + 1);
          int v16 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          int v16 = v16 + (v17 << 7) - 128;
          if ((v17 & 0x80000000) == 0)
          {
            uint64_t v15 = (char *)(v8 + 2);
LABEL_19:
            *(void *)uint64_t v42 = v15;
            *(_DWORD *)(a1 + 96) = v16;
            goto LABEL_57;
          }
          uint64_t v40 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)uint64_t v42 = v40;
          *(_DWORD *)(a1 + 96) = v41;
          if (!v40) {
            goto LABEL_72;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_47:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (v9 - 8000 > 0xF9F)
          {
            if (*v7)
            {
              unint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v42;
            }
            uint64_t v20 = sub_1885AC0(v9, v35, (char *)v8, a3);
          }
          else
          {
            uint64_t v20 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2532EA0, (uint64_t *)(a1 + 8), a3);
          }
LABEL_56:
          *(void *)uint64_t v42 = v20;
          if (!v20) {
            goto LABEL_72;
          }
          goto LABEL_57;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_72:
        }
          *(void *)uint64_t v42 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v42;
    }
  }
}

uint64_t sub_1324C24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_132199C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1324CB4(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 88);
    char *v4 = 24;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 80);
    char *v4 = 34;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    int v4 = sub_15B0C0C(v10, v12, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 100);
    char *v4 = 64;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 98;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      int v4 = sub_1321BC0(v18, (unint64_t)v20, a3);
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v21 = *(_DWORD *)(a1 + 96);
    *(_WORD *)int v4 = 32760;
    v4[2] = v21;
    if (v21 > 0x7F)
    {
      v4[2] = v21 | 0x80;
      unsigned int v22 = v21 >> 7;
      v4[3] = v21 >> 7;
      v4 += 4;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    int v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    int v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_1325018(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1321D28(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 0x1F) != 0)
  {
    if (v10)
    {
      unint64_t v11 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v10 & 2) == 0)
      {
LABEL_10:
        if ((v10 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_18;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v14 = sub_15B0D90(*(void *)(a1 + 80));
    v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 4) == 0)
    {
LABEL_11:
      if ((v10 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_19;
    }
LABEL_18:
    v4 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v10 & 8) == 0)
    {
LABEL_12:
      if ((v10 & 0x10) == 0) {
        goto LABEL_24;
      }
      goto LABEL_20;
    }
LABEL_19:
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 96) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v10 & 0x10) == 0) {
      goto LABEL_24;
    }
LABEL_20:
    int v15 = *(_DWORD *)(a1 + 100);
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v16;
  }
LABEL_24:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v4 += v20;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_13251E0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1365E78((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0x1F) != 0)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_27;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v14 = *(void *)(a1 + 80);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_15C1918((uint64_t)v16);
      *(void *)(a1 + 80) = v14;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v17 = &off_253F1A0;
    }
    sub_15B0E24(v14, (uint64_t)v17);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
LABEL_27:
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_12;
      }
LABEL_10:
      *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
      goto LABEL_11;
    }
LABEL_28:
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v9 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_132538C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_15B0F18(*(void *)(a1 + 80));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_13253D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.Station");
}

uint64_t sub_13253E0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24A9C80;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_1325454(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1325484(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2532F08 && *(void *)(a1 + 56))
  {
    sub_145FE08();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1325558(uint64_t a1)
{
  sub_1325484(a1);

  operator delete();
}

uint64_t sub_1325590(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v4 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
LABEL_5:
      if ((v3 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v3 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1369BB4(*(void *)(a1 + 56));
  }
LABEL_7:
  if ((v3 & 0xC) != 0)
  {
    *(_DWORD *)(a1 + 72) = 0;
    *(void *)(a1 + 64) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_132563C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 > 9) {
      break;
    }
    if (v12 != 4)
    {
      if (v12 == 9 && v9 == 74)
      {
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v13 = *(void **)(a1 + 56);
        if (!v13)
        {
          uint64_t v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v14 = (void *)*v14;
          }
          uint64_t v13 = sub_1478C60((uint64_t)v14);
          *(void *)(a1 + 56) = v13;
          uint64_t v8 = *(unsigned __int8 **)v31;
        }
        uint64_t v15 = sub_129760C(a3, (uint64_t)v13, v8);
        goto LABEL_42;
      }
      goto LABEL_33;
    }
    if (v9 != 32) {
      goto LABEL_33;
    }
    v5 |= 4u;
    unint64_t v19 = (char *)(v8 + 1);
    uint64_t v20 = *v8;
    if (((char)*v8 & 0x80000000) == 0) {
      goto LABEL_28;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v19 = (char *)(v8 + 2);
LABEL_28:
      *(void *)uint64_t v31 = v19;
      *(void *)(a1 + 64) = v20;
      goto LABEL_43;
    }
    uint64_t v29 = sub_188C138((uint64_t)v8, v20);
    *(void *)uint64_t v31 = v29;
    *(void *)(a1 + 64) = v30;
    if (!v29) {
      goto LABEL_52;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 != 10)
  {
    if (v12 != 2047 || v9 != 248) {
      goto LABEL_33;
    }
    v5 |= 8u;
    uint64_t v16 = (char *)(v8 + 1);
    int v17 = *v8;
    if (((char)*v8 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    int v18 = *v16;
    int v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = (char *)(v8 + 2);
LABEL_23:
      *(void *)uint64_t v31 = v16;
      *(_DWORD *)(a1 + 72) = v17;
      goto LABEL_43;
    }
    uint64_t v27 = sub_188C0D0((uint64_t)v8, v17);
    *(void *)uint64_t v31 = v27;
    *(_DWORD *)(a1 + 72) = v28;
    if (!v27) {
      goto LABEL_52;
    }
    goto LABEL_43;
  }
  if (v9 == 82)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v22 = *(void *)(a1 + 8);
    unsigned int v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      unsigned int v23 = (uint64_t *)*v23;
    }
    uint64_t v24 = (std::string *)sub_1880F84((void *)(a1 + 48), v23);
    uint64_t v15 = (void *)sub_188C244(v24, *(char **)v31, (uint64_t)a3);
LABEL_42:
    *(void *)uint64_t v31 = v15;
    if (!v15) {
      goto LABEL_52;
    }
    goto LABEL_43;
  }
LABEL_33:
  if (v9) {
    BOOL v25 = (v9 & 7) == 4;
  }
  else {
    BOOL v25 = 1;
  }
  if (!v25)
  {
    if (v9 - 8000 > 0xF9F)
    {
      if (*v7)
      {
        unint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = *(unsigned __int8 **)v31;
      }
      uint64_t v15 = sub_1885AC0(v9, v26, (char *)v8, a3);
    }
    else
    {
      uint64_t v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2532F08, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_42;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_52:
  *(void *)uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v31;
}

char *sub_1325928(uint64_t a1, char *a2, _DWORD *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 64);
    char *v4 = 32;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 56);
    char *v4 = 74;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    unint64_t v4 = sub_1460138(v10, v12, a3);
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 72);
    *(_WORD *)unint64_t v4 = 32760;
    v4[2] = v13;
    if (v13 > 0x7F)
    {
      v4[2] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[3] = v13 >> 7;
      v4 += 4;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1325B80(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v4 & 1) == 0)
  {
    if ((v4 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_12:
    uint64_t v10 = sub_1460320(*(void *)(a1 + 56));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
  uint64_t v9 = *(void *)(v7 + 8);
  if ((v8 & 0x80u) == 0) {
    uint64_t v9 = v8;
  }
  uint64_t v3 = v2 + v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v4 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_13:
  v3 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v4 & 8) != 0) {
LABEL_6:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_7:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_1325CC4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      int v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v10 = *(void **)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_1478C60((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      unsigned int v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unsigned int v13 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_7;
    }
LABEL_23:
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1325DF0(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_136AEA0(*(void *)(a1 + 56));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1325E34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.Brand");
}

uint64_t sub_1325E44(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24A9D00;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = &qword_2550250;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  return a1;
}

void sub_1325EBC(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1325EEC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_2532F58)
  {
    if (*(void *)(a1 + 64))
    {
      sub_145FE08();
      operator delete();
    }
    if (*(void *)(a1 + 72))
    {
      sub_13D2884();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1325FFC(uint64_t a1)
{
  sub_1325EEC(a1);

  operator delete();
}

uint64_t sub_1326034(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_17:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_21;
    }
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  *(unsigned char *)unint64_t v7 = 0;
  *(unsigned char *)(v7 + 23) = 0;
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_21:
  uint64_t result = sub_1369BB4(*(void *)(a1 + 64));
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_1369F48(*(void *)(a1 + 72));
LABEL_7:
  if ((v3 & 0x70) != 0)
  {
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1326128(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v41 + 1);
    unsigned int v9 = **(unsigned char **)v41;
    if ((char)**(unsigned char **)v41 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v41, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v41 + 2);
      }
    }
    *(void *)int v41 = v8;
    unsigned int v12 = v9 >> 3;
    switch(v9 >> 3)
    {
      case 5u:
        if (v9 != 42) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        unsigned int v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          unsigned int v14 = (uint64_t *)*v14;
        }
        unsigned int v15 = (void *)(a1 + 48);
        goto LABEL_45;
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
        goto LABEL_18;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        unint64_t v19 = *(void **)(a1 + 64);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          unint64_t v19 = sub_1478C60((uint64_t)v20);
          *(void *)(a1 + 64) = v19;
          uint64_t v8 = *(unsigned __int8 **)v41;
        }
        uint64_t v18 = (uint64_t)sub_129760C(a3, (uint64_t)v19, v8);
        goto LABEL_58;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_18;
        }
        v5 |= 0x20u;
        uint64_t v21 = (char *)(v8 + 1);
        int v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v35 = sub_188C0D0((uint64_t)v8, v22);
          *(void *)int v41 = v35;
          *(_DWORD *)(a1 + 88) = v36;
          if (!v35) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v21 = (char *)(v8 + 2);
LABEL_34:
          *(void *)int v41 = v21;
          *(_DWORD *)(a1 + 88) = v22;
        }
        goto LABEL_59;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v24 = *(void *)(a1 + 72);
        if (!v24)
        {
          BOOL v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            BOOL v25 = (void *)*v25;
          }
          uint64_t v24 = sub_13DAB08((uint64_t)v25);
          *(void *)(a1 + 72) = v24;
          uint64_t v8 = *(unsigned __int8 **)v41;
        }
        uint64_t v18 = sub_1323390(a3, v24, v8);
        goto LABEL_58;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v26 = *(void *)(a1 + 8);
        unsigned int v14 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          unsigned int v14 = (uint64_t *)*v14;
        }
        unsigned int v15 = (void *)(a1 + 56);
LABEL_45:
        uint64_t v27 = (std::string *)sub_1880F84(v15, v14);
        uint64_t v18 = (uint64_t)sub_188C244(v27, *(char **)v41, (uint64_t)a3);
        goto LABEL_58;
      default:
        if (v12 == 2047)
        {
          if (v9 != 248) {
            goto LABEL_18;
          }
          v5 |= 0x40u;
          int v28 = (char *)(v8 + 1);
          int v29 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_50;
          }
          int v30 = *v28;
          int v29 = v29 + (v30 << 7) - 128;
          if ((v30 & 0x80000000) == 0)
          {
            int v28 = (char *)(v8 + 2);
LABEL_50:
            *(void *)int v41 = v28;
            *(_DWORD *)(a1 + 92) = v29;
            goto LABEL_59;
          }
          uint64_t v37 = sub_188C0D0((uint64_t)v8, v29);
          *(void *)int v41 = v37;
          *(_DWORD *)(a1 + 92) = v38;
          if (!v37) {
            goto LABEL_70;
          }
LABEL_59:
          if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v12 == 1 && v9 == 8)
        {
          v5 |= 0x10u;
          uint64_t v31 = (char *)(v8 + 1);
          uint64_t v32 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_54;
          }
          int v33 = *v31;
          uint64_t v32 = v32 + (v33 << 7) - 128;
          if ((v33 & 0x80000000) == 0)
          {
            uint64_t v31 = (char *)(v8 + 2);
LABEL_54:
            *(void *)int v41 = v31;
            *(void *)(a1 + 80) = v32;
            goto LABEL_59;
          }
          uint64_t v39 = sub_188C138((uint64_t)v8, v32);
          *(void *)int v41 = v39;
          *(void *)(a1 + 80) = v40;
          if (!v39) {
            goto LABEL_70;
          }
          goto LABEL_59;
        }
LABEL_18:
        if (v9) {
          BOOL v17 = (v9 & 7) == 4;
        }
        else {
          BOOL v17 = 1;
        }
        if (!v17)
        {
          if (v9 - 8000 > 0xF9F)
          {
            if (*v7)
            {
              BOOL v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              BOOL v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v41;
            }
            uint64_t v18 = (uint64_t)sub_1885AC0(v9, v34, (char *)v8, a3);
          }
          else
          {
            uint64_t v18 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2532F58, (uint64_t *)(a1 + 8), a3);
          }
LABEL_58:
          *(void *)int v41 = v18;
          if (!v18) {
            goto LABEL_70;
          }
          goto LABEL_59;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_70:
        }
          *(void *)int v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v41;
    }
  }
}

char *sub_1326538(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 80);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_10:
      if ((v6 & 0x20) == 0) {
        goto LABEL_25;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 64);
  char *v4 = 106;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  uint64_t v4 = sub_1460138(v10, v12, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_19:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 88);
    char *v4 = 112;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_25:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 72);
    char *v4 = 122;
    unsigned int v17 = *(_DWORD *)(v16 + 44);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_13D2F58(v16, v18, a3);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 16, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 92);
    *(_WORD *)uint64_t v4 = 32760;
    v4[2] = v19;
    if (v19 > 0x7F)
    {
      v4[2] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[3] = v19 >> 7;
      v4 += 4;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    BOOL v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    BOOL v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*a3 - (void)v4 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_132689C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0x7F) == 0) {
    goto LABEL_10;
  }
  if (v4)
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    uint64_t v3 = v2 + v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v10 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
  uint64_t v12 = *(void *)(v10 + 8);
  if ((v11 & 0x80u) == 0) {
    uint64_t v12 = v11;
  }
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v13 = sub_1460320(*(void *)(a1 + 64));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_20:
    v3 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t v14 = sub_13D3304(*(void *)(a1 + 72));
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x10) != 0) {
    goto LABEL_20;
  }
LABEL_7:
  if ((v4 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_21:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x40) != 0) {
LABEL_9:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_10:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v15 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_1326A88(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      int v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 56), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_29;
    }
LABEL_21:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v13 = *(void **)(a1 + 64);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        unint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_1478C60((uint64_t)v15);
      *(void *)(a1 + 64) = v13;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v16 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v13, (uint64_t)v16);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_37;
    }
LABEL_29:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v17 = *(void *)(a1 + 72);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      unsigned int v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unsigned int v19 = (void *)*v19;
      }
      uint64_t v17 = sub_13DAB08((uint64_t)v19);
      *(void *)(a1 + 72) = v17;
    }
    if (*(void *)(a2 + 72)) {
      unsigned int v20 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      unsigned int v20 = &off_2536850;
    }
    sub_136AA7C(v17, (uint64_t)v20);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_38;
    }
LABEL_37:
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
      goto LABEL_10;
    }
LABEL_38:
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1326C4C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 4) != 0)
    {
      uint64_t result = sub_136AEA0(*(void *)(a1 + 64));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) == 0) {
      return 1;
    }
    uint64_t result = sub_136AE2C(*(void *)(a1 + 72));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1326CA4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.System");
}

void *sub_1326CB4(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24A9D80;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = a2;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = &qword_2550250;
  a1[13] = &qword_2550250;
  a1[15] = 0;
  a1[16] = 0;
  a1[14] = 0;
  return a1;
}

void sub_1326D3C(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1326D6C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if ((uint64_t (***)())a1 != &off_2532FB8 && *(void *)(a1 + 112))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1365BFC((void *)(a1 + 72));
  sub_1365BFC((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1326E74(uint64_t a1)
{
  sub_1326D6C(a1);

  operator delete();
}

uint64_t sub_1326EAC(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_132191C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    unint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_132191C(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 7) == 0) {
    goto LABEL_14;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v12 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v9 & 2) != 0) {
      goto LABEL_24;
    }
LABEL_12:
    if ((v9 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  **(unsigned char **)unint64_t v12 = 0;
  *(void *)(v12 + 8) = 0;
  if ((v9 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_24:
  unint64_t v13 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v13 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v13 = 0;
    *(unsigned char *)(v13 + 23) = 0;
    if ((v9 & 4) == 0) {
      goto LABEL_14;
    }
LABEL_13:
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 112));
    goto LABEL_14;
  }
  **(unsigned char **)unint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  if ((v9 & 4) != 0) {
    goto LABEL_13;
  }
LABEL_14:
  if ((v9 & 0x38) != 0)
  {
    *(void *)(a1 + 120) = 0;
    *(void *)(a1 + 128) = 0;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 32) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_1326FEC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v49 + 1);
    unsigned int v9 = **(unsigned char **)v49;
    if ((char)**(unsigned char **)v49 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v49, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v49 + 2);
      }
    }
    *(void *)unsigned int v49 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_60;
        }
        v5 |= 8u;
        unint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)unsigned int v49 = v12;
          *(void *)(a1 + 120) = v13;
          goto LABEL_70;
        }
        uint64_t v43 = sub_188C138((uint64_t)v8, v13);
        *(void *)unsigned int v49 = v43;
        *(void *)(a1 + 120) = v44;
        if (!v43) {
          goto LABEL_81;
        }
        goto LABEL_70;
      case 2u:
      case 3u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
        goto LABEL_60;
      case 4u:
        if (v9 != 34) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v18 = *(void *)(a1 + 112);
        if (!v18)
        {
          unsigned int v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v19 = (void *)*v19;
          }
          uint64_t v18 = sub_15C1918((uint64_t)v19);
          *(void *)(a1 + 112) = v18;
          uint64_t v8 = *(unsigned __int8 **)v49;
        }
        unsigned int v20 = sub_1198F14(a3, v18, v8);
        goto LABEL_69;
      case 5u:
        if (v9 != 40) {
          goto LABEL_60;
        }
        v5 |= 0x10u;
        unsigned int v21 = (char *)(v8 + 1);
        int v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v45 = sub_188C0D0((uint64_t)v8, v22);
          *(void *)unsigned int v49 = v45;
          *(_DWORD *)(a1 + 128) = v46;
          if (!v45) {
            goto LABEL_81;
          }
        }
        else
        {
          unsigned int v21 = (char *)(v8 + 2);
LABEL_30:
          *(void *)unsigned int v49 = v21;
          *(_DWORD *)(a1 + 128) = v22;
        }
        goto LABEL_70;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_60;
        }
        unint64_t v24 = v8 - 1;
        while (1)
        {
          BOOL v25 = v24 + 1;
          *(void *)unsigned int v49 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 64);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 56), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 56) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_1332050(*(void *)(a1 + 48));
            uint64_t v28 = sub_188CDC8(a1 + 48, v29);
            BOOL v25 = *(unsigned __int8 **)v49;
          }
          unint64_t v24 = (unsigned __int8 *)sub_1324C24(a3, v28, v25);
          *(void *)unsigned int v49 = v24;
          if (!v24) {
            goto LABEL_81;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 106) {
            goto LABEL_70;
          }
        }
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_60;
        }
        int v30 = v8 - 1;
        while (1)
        {
          uint64_t v31 = v30 + 1;
          *(void *)unsigned int v49 = v30 + 1;
          uint64_t v32 = *(_DWORD **)(a1 + 88);
          if (v32 && (uint64_t v33 = *(int *)(a1 + 80), (int)v33 < *v32))
          {
            *(_DWORD *)(a1 + 80) = v33 + 1;
            uint64_t v34 = *(void *)&v32[2 * v33 + 2];
          }
          else
          {
            uint64_t v35 = sub_1332050(*(void *)(a1 + 72));
            uint64_t v34 = sub_188CDC8(a1 + 72, v35);
            uint64_t v31 = *(unsigned __int8 **)v49;
          }
          int v30 = (unsigned __int8 *)sub_1324C24(a3, v34, v31);
          *(void *)unsigned int v49 = v30;
          if (!v30) {
            goto LABEL_81;
          }
          if (*(void *)a3 <= (unint64_t)v30 || *v30 != 114) {
            goto LABEL_70;
          }
        }
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v36 = *(void *)(a1 + 8);
        uint64_t v37 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          uint64_t v37 = (uint64_t *)*v37;
        }
        int v38 = (void *)(a1 + 96);
        goto LABEL_59;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v39 = *(void *)(a1 + 8);
        uint64_t v37 = (uint64_t *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
        if (v39) {
          uint64_t v37 = (uint64_t *)*v37;
        }
        int v38 = (void *)(a1 + 104);
LABEL_59:
        uint64_t v40 = (std::string *)sub_1880F84(v38, v37);
        unsigned int v20 = (void *)sub_188C244(v40, *(char **)v49, (uint64_t)a3);
        goto LABEL_69;
      default:
        if (v9 >> 3 == 2047 && v9 == 248)
        {
          v5 |= 0x20u;
          unint64_t v15 = (char *)(v8 + 1);
          int v16 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          int v16 = v16 + (v17 << 7) - 128;
          if ((v17 & 0x80000000) == 0)
          {
            unint64_t v15 = (char *)(v8 + 2);
LABEL_19:
            *(void *)unsigned int v49 = v15;
            *(_DWORD *)(a1 + 132) = v16;
            goto LABEL_70;
          }
          uint64_t v47 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)unsigned int v49 = v47;
          *(_DWORD *)(a1 + 132) = v48;
          if (!v47) {
            goto LABEL_81;
          }
LABEL_70:
          if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_60:
        if (v9) {
          BOOL v41 = (v9 & 7) == 4;
        }
        else {
          BOOL v41 = 1;
        }
        if (!v41)
        {
          if (v9 - 8000 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v49;
            }
            unsigned int v20 = sub_1885AC0(v9, v42, (char *)v8, a3);
          }
          else
          {
            unsigned int v20 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2532FB8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_69:
          *(void *)unsigned int v49 = v20;
          if (!v20) {
            goto LABEL_81;
          }
          goto LABEL_70;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_81:
        }
          *(void *)unsigned int v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v49;
    }
  }
}

char *sub_13274D4(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 120);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 112);
    char *v4 = 34;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    int v4 = sub_15B0C0C(v10, v12, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 128);
    char *v4 = 40;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 106;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        unsigned int v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        unsigned int v20 = v4 + 2;
      }
      int v4 = sub_1321BC0(v18, (unint64_t)v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 80);
  if (v21)
  {
    for (int j = 0; j != v21; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 114;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      v4[1] = v24;
      if (v24 > 0x7F) {
        BOOL v25 = sub_188A9CC(v24, v4 + 1);
      }
      else {
        BOOL v25 = v4 + 2;
      }
      int v4 = sub_1321BC0(v23, (unint64_t)v25, a3);
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 16, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v26 = *(_DWORD *)(a1 + 132);
    *(_WORD *)int v4 = 32760;
    v4[2] = v26;
    if (v26 > 0x7F)
    {
      v4[2] = v26 | 0x80;
      unsigned int v27 = v26 >> 7;
      v4[3] = v26 >> 7;
      v4 += 4;
      if (v26 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v28 = v27 >> 14;
          v27 >>= 7;
          *v4++ = v27;
        }
        while (v28);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    uint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    uint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_13278DC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1321D28(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1321D28(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if ((v17 & 0x3F) == 0) {
    goto LABEL_21;
  }
  if (v17)
  {
    unint64_t v20 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
    uint64_t v22 = *(void *)(v20 + 8);
    if ((v21 & 0x80u) == 0) {
      uint64_t v22 = v21;
    }
    v11 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 2) == 0)
    {
LABEL_16:
      if ((v17 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
  }
  else if ((v17 & 2) == 0)
  {
    goto LABEL_16;
  }
  unint64_t v23 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
  uint64_t v25 = *(void *)(v23 + 8);
  if ((v24 & 0x80u) == 0) {
    uint64_t v25 = v24;
  }
  v11 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v17 & 4) == 0)
  {
LABEL_17:
    if ((v17 & 8) == 0) {
      goto LABEL_18;
    }
LABEL_30:
    v11 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v17 & 0x10) == 0)
    {
LABEL_19:
      if ((v17 & 0x20) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_31;
  }
LABEL_29:
  uint64_t v26 = sub_15B0D90(*(void *)(a1 + 112));
  v11 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 8) != 0) {
    goto LABEL_30;
  }
LABEL_18:
  if ((v17 & 0x10) == 0) {
    goto LABEL_19;
  }
LABEL_31:
  v11 += ((9 * (__clz(*(_DWORD *)(a1 + 128) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 0x20) != 0) {
LABEL_20:
  }
    v11 += ((9 * (__clz(*(_DWORD *)(a1 + 132) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_21:
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v27 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v27 + 31) < 0) {
      uint64_t v28 = *(void *)(v27 + 16);
    }
    else {
      uint64_t v28 = *(unsigned __int8 *)(v27 + 31);
    }
    v11 += v28;
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void sub_1327B30(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1365E78((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1365E78((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unsigned int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 40);
  if ((v14 & 0x3F) != 0)
  {
    if (v14)
    {
      uint64_t v16 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      sub_1881DF4((std::string **)(a1 + 96), v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_26;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    unsigned int v19 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 104), v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_34;
    }
LABEL_26:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v22 = *(void *)(a1 + 112);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = sub_15C1918((uint64_t)v24);
      *(void *)(a1 + 112) = v22;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v25 = &off_253F1A0;
    }
    sub_15B0E24(v22, (uint64_t)v25);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_35;
    }
LABEL_34:
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0)
      {
LABEL_15:
        *(_DWORD *)(a1 + 40) |= v14;
        goto LABEL_16;
      }
LABEL_14:
      *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
      goto LABEL_15;
    }
LABEL_35:
    *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
    if ((v14 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1327D78(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_15B0F18(*(void *)(a1 + 112));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1327DBC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.AccessPoint");
}

uint64_t sub_1327DCC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24A9E00;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = &qword_2550250;
  *(void *)(a1 + 80) = &qword_2550250;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  return a1;
}

void sub_1327E54(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1327E84(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if ((uint64_t (***)())a1 != &off_2533040)
  {
    if (*(void *)(a1 + 88))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 96))
    {
      sub_145FE08();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1365BFC((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1327FA0(uint64_t a1)
{
  sub_1327E84(a1);

  operator delete();
}

uint64_t sub_1327FD8(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_132191C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0xF) == 0) {
    goto LABEL_11;
  }
  if (v6)
  {
    unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_21;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_21;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_21:
  unint64_t v10 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v10 + 23) < 0)
  {
    **(unsigned char **)unint64_t v10 = 0;
    *(void *)(v10 + 8) = 0;
    if ((v6 & 4) != 0) {
      goto LABEL_25;
    }
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  *(unsigned char *)unint64_t v10 = 0;
  *(unsigned char *)(v10 + 23) = 0;
  if ((v6 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_25:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 88));
  if ((v6 & 8) != 0) {
LABEL_10:
  }
    uint64_t result = sub_1369BB4(*(void *)(a1 + 96));
LABEL_11:
  if ((v6 & 0x70) != 0)
  {
    *(void *)(a1 + 104) = 0;
    *(void *)(a1 + 112) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1328100(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v45 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v45, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v45 + 1);
    unsigned int v9 = **(unsigned char **)v45;
    if ((char)**(unsigned char **)v45 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v45, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v45 + 2);
      }
    }
    *(void *)uint64_t v45 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_56;
        }
        v5 |= 0x10u;
        int v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v45 = v12;
          *(void *)(a1 + 104) = v13;
          goto LABEL_66;
        }
        uint64_t v39 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v45 = v39;
        *(void *)(a1 + 104) = v40;
        if (!v39) {
          goto LABEL_77;
        }
        goto LABEL_66;
      case 2u:
      case 3u:
      case 5u:
      case 6u:
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
      case 0xDu:
        goto LABEL_56;
      case 4u:
        if (v9 != 34) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v18 = *(void *)(a1 + 88);
        if (!v18)
        {
          unsigned int v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v19 = (void *)*v19;
          }
          uint64_t v18 = sub_15C1918((uint64_t)v19);
          *(void *)(a1 + 88) = v18;
          char v8 = *(unsigned __int8 **)v45;
        }
        uint64_t v20 = sub_1198F14(a3, v18, v8);
        goto LABEL_65;
      case 7u:
        if (v9 != 58) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v22 = (uint64_t *)*v22;
        }
        uint64_t v23 = (void *)(a1 + 72);
        goto LABEL_55;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v24 = *(void **)(a1 + 96);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_1478C60((uint64_t)v25);
          *(void *)(a1 + 96) = v24;
          char v8 = *(unsigned __int8 **)v45;
        }
        uint64_t v20 = sub_129760C(a3, (uint64_t)v24, v8);
        goto LABEL_65;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_56;
        }
        v5 |= 0x20u;
        uint64_t v26 = (char *)(v8 + 1);
        int v27 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v28 = *v26;
        int v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v41 = sub_188C0D0((uint64_t)v8, v27);
          *(void *)uint64_t v45 = v41;
          *(_DWORD *)(a1 + 112) = v42;
          if (!v41) {
            goto LABEL_77;
          }
        }
        else
        {
          uint64_t v26 = (char *)(v8 + 2);
LABEL_40:
          *(void *)uint64_t v45 = v26;
          *(_DWORD *)(a1 + 112) = v27;
        }
        goto LABEL_66;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_56;
        }
        uint64_t v29 = v8 - 2;
        while (1)
        {
          int v30 = v29 + 2;
          *(void *)uint64_t v45 = v29 + 2;
          unint64_t v31 = *(_DWORD **)(a1 + 64);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 56), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 56) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_1332050(*(void *)(a1 + 48));
            uint64_t v33 = sub_188CDC8(a1 + 48, v34);
            int v30 = *(unsigned __int8 **)v45;
          }
          uint64_t v29 = (unsigned __int8 *)sub_1324C24(a3, v33, v30);
          *(void *)uint64_t v45 = v29;
          if (!v29) {
            goto LABEL_77;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *(_WORD *)v29 != 386) {
            goto LABEL_66;
          }
        }
      case 0x11u:
        if (v9 != 138) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v35 = *(void *)(a1 + 8);
        uint64_t v22 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          uint64_t v22 = (uint64_t *)*v22;
        }
        uint64_t v23 = (void *)(a1 + 80);
LABEL_55:
        uint64_t v36 = (std::string *)sub_1880F84(v23, v22);
        uint64_t v20 = (void *)sub_188C244(v36, *(char **)v45, (uint64_t)a3);
        goto LABEL_65;
      default:
        if (v9 >> 3 == 2047 && v9 == 248)
        {
          v5 |= 0x40u;
          uint64_t v15 = (char *)(v8 + 1);
          int v16 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          int v16 = v16 + (v17 << 7) - 128;
          if ((v17 & 0x80000000) == 0)
          {
            uint64_t v15 = (char *)(v8 + 2);
LABEL_19:
            *(void *)uint64_t v45 = v15;
            *(_DWORD *)(a1 + 116) = v16;
            goto LABEL_66;
          }
          uint64_t v43 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)uint64_t v45 = v43;
          *(_DWORD *)(a1 + 116) = v44;
          if (!v43) {
            goto LABEL_77;
          }
LABEL_66:
          if (sub_11947B8((uint64_t)a3, (char **)v45, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_56:
        if (v9) {
          BOOL v37 = (v9 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (v9 - 8000 > 0xF9F)
          {
            if (*v7)
            {
              int v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v8 = *(unsigned __int8 **)v45;
            }
            uint64_t v20 = sub_1885AC0(v9, v38, (char *)v8, a3);
          }
          else
          {
            uint64_t v20 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2533040, (uint64_t *)(a1 + 8), a3);
          }
LABEL_65:
          *(void *)uint64_t v45 = v20;
          if (!v20) {
            goto LABEL_77;
          }
          goto LABEL_66;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_77:
        }
          *(void *)uint64_t v45 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v45;
    }
  }
}

char *sub_13285AC(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 104);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 88);
    char *v4 = 34;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    int v4 = sub_15B0C0C(v10, v12, a3);
    if ((v6 & 1) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_10;
  }
  int v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_11:
    if ((v6 & 0x20) == 0) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }
LABEL_20:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 96);
  char *v4 = 114;
  unsigned int v14 = *(_DWORD *)(v13 + 44);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  int v4 = sub_1460138(v13, v15, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_26:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 112);
    char *v4 = 120;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_32:
  int v19 = *(_DWORD *)(a1 + 56);
  if (v19)
  {
    for (int i = 0; i != v19; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *(_WORD *)int v4 = 386;
      unsigned int v22 = *(_DWORD *)(v21 + 20);
      v4[2] = v22;
      if (v22 > 0x7F) {
        uint64_t v23 = sub_188A9CC(v22, v4 + 2);
      }
      else {
        uint64_t v23 = v4 + 3;
      }
      int v4 = sub_1321BC0(v21, (unint64_t)v23, a3);
    }
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 17, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v24 = *(_DWORD *)(a1 + 116);
    *(_WORD *)int v4 = 32760;
    v4[2] = v24;
    if (v24 > 0x7F)
    {
      v4[2] = v24 | 0x80;
      unsigned int v25 = v24 >> 7;
      v4[3] = v24 >> 7;
      v4 += 4;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    int v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    int v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v32;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_13289A4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + 2 * v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1321D28(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 0x7F) == 0) {
    goto LABEL_16;
  }
  if (v10)
  {
    unint64_t v13 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 2) == 0)
    {
LABEL_10:
      if ((v10 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_24;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_10;
  }
  unint64_t v16 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v10 & 4) == 0)
  {
LABEL_11:
    if ((v10 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v19 = sub_15B0D90(*(void *)(a1 + 88));
  v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 8) == 0)
  {
LABEL_12:
    if ((v10 & 0x10) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    v4 += ((9 * (__clz(*(void *)(a1 + 104) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v10 & 0x20) == 0)
    {
LABEL_14:
      if ((v10 & 0x40) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t v20 = sub_1460320(*(void *)(a1 + 96));
  v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x10) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v10 & 0x20) == 0) {
    goto LABEL_14;
  }
LABEL_27:
  v4 += ((9 * (__clz(*(_DWORD *)(a1 + 112) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x40) != 0) {
LABEL_15:
  }
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 116) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_16:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v4 += v22;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_1328BDC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1365E78((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0x7F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        unint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_24;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 80), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_32;
    }
LABEL_24:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v17 = *(void *)(a1 + 88);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = sub_15C1918((uint64_t)v19);
      *(void *)(a1 + 88) = v17;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v20 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v20 = &off_253F1A0;
    }
    sub_15B0E24(v17, (uint64_t)v20);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_40;
    }
LABEL_32:
    *(_DWORD *)(a1 + 40) |= 8u;
    unint64_t v21 = *(void **)(a1 + 96);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      unint64_t v21 = sub_1478C60((uint64_t)v23);
      *(void *)(a1 + 96) = v21;
    }
    if (*(void *)(a2 + 96)) {
      unsigned int v24 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      unsigned int v24 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v21, (uint64_t)v24);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_41;
    }
LABEL_40:
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0)
      {
LABEL_13:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_14;
      }
LABEL_12:
      *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
      goto LABEL_13;
    }
LABEL_41:
    *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
    if ((v9 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1328E10(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 4) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 88));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) == 0) {
      return 1;
    }
    uint64_t result = sub_136AEA0(*(void *)(a1 + 96));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1328E68@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.Stop");
}

uint64_t sub_1328E78(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24A9E80;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = &qword_2550250;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  return a1;
}

void sub_1328EF8(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1328F28(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25330B8)
  {
    if (*(void *)(a1 + 80))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 88))
    {
      sub_145FE08();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1365BFC((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1329028(uint64_t a1)
{
  sub_1328F28(a1);

  operator delete();
}

uint64_t sub_1329060(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_132191C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 7) == 0) {
    goto LABEL_10;
  }
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
  unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_20;
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  *(unsigned char *)unint64_t v9 = 0;
  *(unsigned char *)(v9 + 23) = 0;
  if ((v6 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_20:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 80));
  if ((v6 & 4) != 0) {
LABEL_9:
  }
    uint64_t result = sub_1369BB4(*(void *)(a1 + 88));
LABEL_10:
  if ((v6 & 0x38) != 0)
  {
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1329154(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v43 + 1);
    unsigned int v9 = **(unsigned char **)v43;
    if ((char)**(unsigned char **)v43 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v43, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v43 + 2);
      }
    }
    *(void *)uint64_t v43 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_51;
        }
        v5 |= 8u;
        uint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v43 = v12;
          *(void *)(a1 + 96) = v13;
          goto LABEL_61;
        }
        uint64_t v37 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v43 = v37;
        *(void *)(a1 + 96) = v38;
        if (!v37) {
          goto LABEL_72;
        }
        goto LABEL_61;
      case 2u:
        if (v9 != 16) {
          goto LABEL_51;
        }
        v5 |= 0x10u;
        uint64_t v18 = (char *)(v8 + 1);
        int v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v39 = sub_188C0D0((uint64_t)v8, v19);
          *(void *)uint64_t v43 = v39;
          *(_DWORD *)(a1 + 104) = v40;
          if (!v39) {
            goto LABEL_72;
          }
        }
        else
        {
          uint64_t v18 = (char *)(v8 + 2);
LABEL_24:
          *(void *)uint64_t v43 = v18;
          *(_DWORD *)(a1 + 104) = v19;
        }
        goto LABEL_61;
      case 3u:
        if (v9 != 26) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v21 = *(void *)(a1 + 80);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_15C1918((uint64_t)v22);
          *(void *)(a1 + 80) = v21;
          char v8 = *(unsigned __int8 **)v43;
        }
        uint64_t v23 = sub_1198F14(a3, v21, v8);
        goto LABEL_60;
      case 4u:
      case 5u:
        goto LABEL_51;
      case 6u:
        if (v9 != 50) {
          goto LABEL_51;
        }
        unsigned int v24 = v8 - 1;
        while (1)
        {
          unsigned int v25 = v24 + 1;
          *(void *)uint64_t v43 = v24 + 1;
          unsigned int v26 = *(_DWORD **)(a1 + 64);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 56), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 56) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_1332050(*(void *)(a1 + 48));
            uint64_t v28 = sub_188CDC8(a1 + 48, v29);
            unsigned int v25 = *(unsigned __int8 **)v43;
          }
          unsigned int v24 = (unsigned __int8 *)sub_1324C24(a3, v28, v25);
          *(void *)uint64_t v43 = v24;
          if (!v24) {
            goto LABEL_72;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 50) {
            goto LABEL_61;
          }
        }
      case 7u:
        if (v9 != 58) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        int v30 = *(void **)(a1 + 88);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v31 = (void *)*v31;
          }
          int v30 = sub_1478C60((uint64_t)v31);
          *(void *)(a1 + 88) = v30;
          char v8 = *(unsigned __int8 **)v43;
        }
        uint64_t v23 = sub_129760C(a3, (uint64_t)v30, v8);
        goto LABEL_60;
      case 8u:
        if (v9 != 66) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v32 = *(void *)(a1 + 8);
        uint64_t v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
        if (v32) {
          uint64_t v33 = (uint64_t *)*v33;
        }
        uint64_t v34 = (std::string *)sub_1880F84((void *)(a1 + 72), v33);
        uint64_t v23 = (void *)sub_188C244(v34, *(char **)v43, (uint64_t)a3);
        goto LABEL_60;
      default:
        if (v9 >> 3 == 2047 && v9 == 248)
        {
          v5 |= 0x20u;
          uint64_t v15 = (char *)(v8 + 1);
          int v16 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          int v16 = v16 + (v17 << 7) - 128;
          if ((v17 & 0x80000000) == 0)
          {
            uint64_t v15 = (char *)(v8 + 2);
LABEL_19:
            *(void *)uint64_t v43 = v15;
            *(_DWORD *)(a1 + 108) = v16;
            goto LABEL_61;
          }
          uint64_t v41 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)uint64_t v43 = v41;
          *(_DWORD *)(a1 + 108) = v42;
          if (!v41) {
            goto LABEL_72;
          }
LABEL_61:
          if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_51:
        if (v9) {
          BOOL v35 = (v9 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (v9 - 8000 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v8 = *(unsigned __int8 **)v43;
            }
            uint64_t v23 = sub_1885AC0(v9, v36, (char *)v8, a3);
          }
          else
          {
            uint64_t v23 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_25330B8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_60:
          *(void *)uint64_t v43 = v23;
          if (!v23) {
            goto LABEL_72;
          }
          goto LABEL_61;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_72:
        }
          *(void *)uint64_t v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v43;
    }
  }
}

char *sub_13295A8(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 96);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 104);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 80);
    char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    int v4 = sub_15B0C0C(v13, v15, a3);
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 50;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        int v20 = v4 + 2;
      }
      int v4 = sub_1321BC0(v18, (unint64_t)v20, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 88);
    char *v4 = 58;
    unsigned int v22 = *(_DWORD *)(v21 + 44);
    v4[1] = v22;
    if (v22 > 0x7F) {
      uint64_t v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      uint64_t v23 = v4 + 2;
    }
    int v4 = sub_1460138(v21, v23, a3);
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v24 = *(_DWORD *)(a1 + 108);
    *(_WORD *)int v4 = 32760;
    v4[2] = v24;
    if (v24 > 0x7F)
    {
      v4[2] = v24 | 0x80;
      unsigned int v25 = v24 >> 7;
      v4[3] = v24 >> 7;
      v4 += 4;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    int v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    int v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v32;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_1329970(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1321D28(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 0x3F) == 0) {
    goto LABEL_15;
  }
  if (v10)
  {
    unint64_t v13 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 2) == 0)
    {
LABEL_10:
      if ((v10 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_21;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v16 = sub_15B0D90(*(void *)(a1 + 80));
  v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 4) == 0)
  {
LABEL_11:
    if ((v10 & 8) == 0) {
      goto LABEL_12;
    }
LABEL_22:
    v4 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v10 & 0x10) == 0)
    {
LABEL_13:
      if ((v10 & 0x20) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t v17 = sub_1460320(*(void *)(a1 + 88));
  v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 8) != 0) {
    goto LABEL_22;
  }
LABEL_12:
  if ((v10 & 0x10) == 0) {
    goto LABEL_13;
  }
LABEL_23:
  v4 += ((9 * (__clz(*(_DWORD *)(a1 + 104) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x20) != 0) {
LABEL_14:
  }
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 108) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_15:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v18 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v4 += v19;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_1329B60(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1365E78((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        unint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_28;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v14 = *(void *)(a1 + 80);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_15C1918((uint64_t)v16);
      *(void *)(a1 + 80) = v14;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v17 = &off_253F1A0;
    }
    sub_15B0E24(v14, (uint64_t)v17);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_36;
    }
LABEL_28:
    *(_DWORD *)(a1 + 40) |= 4u;
    unint64_t v18 = *(void **)(a1 + 88);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        int v20 = (void *)*v20;
      }
      unint64_t v18 = sub_1478C60((uint64_t)v20);
      *(void *)(a1 + 88) = v18;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v21 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v18, (uint64_t)v21);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_37;
    }
LABEL_36:
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
      goto LABEL_12;
    }
LABEL_37:
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1329D5C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 80));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_136AEA0(*(void *)(a1 + 88));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1329DB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.Hall");
}

uint64_t sub_1329DC4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24A9F00;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = &qword_2550250;
  *(_DWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_1329E3C(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1329E6C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24A9F00;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  *(void *)(a1 + 52) = 0;
  int v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_188C80C((unsigned int *)(a1 + 48), v6);
    int v7 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v7, *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8) {
    sub_188B4F8(v4, (v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 64) = &qword_2550250;
  if (*(unsigned char *)(a2 + 40))
  {
    int v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v9);
  }
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

void sub_1329F88(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1329FD8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 64);
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DA8(a1 + 48);
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_132A088(uint64_t a1)
{
  sub_1329FD8(a1);

  operator delete();
}

unsigned char *sub_132A0C0(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v3 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 64) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_132A14C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 2047) {
      break;
    }
    if (v9 != 248) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v16 = (char *)(v8 + 1);
    int v17 = *v8;
    if (((char)*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    int v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = (char *)(v8 + 2);
LABEL_24:
      *(void *)uint64_t v31 = v16;
      *(_DWORD *)(a1 + 72) = v17;
      goto LABEL_46;
    }
    uint64_t v29 = sub_188C0D0((uint64_t)v8, v17);
    *(void *)uint64_t v31 = v29;
    *(_DWORD *)(a1 + 72) = v30;
    if (!v29) {
      goto LABEL_55;
    }
LABEL_46:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 == 16)
    {
      uint64_t v19 = v8 - 1;
      while (1)
      {
        *(void *)uint64_t v31 = v19 + 1;
        int v20 = v19[1];
        if ((char)v19[1] < 0)
        {
          int v21 = v20 + (v19[2] << 7);
          int v20 = v21 - 128;
          if ((char)v19[2] < 0)
          {
            uint64_t v19 = (unsigned __int8 *)sub_188C0D0((uint64_t)(v19 + 1), v21 - 128);
            int v20 = v22;
          }
          else
          {
            v19 += 3;
          }
        }
        else
        {
          v19 += 2;
        }
        *(void *)uint64_t v31 = v19;
        uint64_t v23 = *(unsigned int *)(a1 + 48);
        if (v23 == *(_DWORD *)(a1 + 52))
        {
          int v24 = v23 + 1;
          sub_188C80C((unsigned int *)(a1 + 48), v23 + 1);
          *(_DWORD *)(*(void *)(a1 + 56) + 4 * v23) = v20;
          uint64_t v19 = *(unsigned __int8 **)v31;
        }
        else
        {
          *(_DWORD *)(*(void *)(a1 + 56) + 4 * v23) = v20;
          int v24 = v23 + 1;
        }
        *(_DWORD *)(a1 + 48) = v24;
        if (!v19) {
          goto LABEL_55;
        }
        if (*(void *)a3 <= (unint64_t)v19 || *v19 != 16) {
          goto LABEL_46;
        }
      }
    }
    if (v9 == 18)
    {
      uint64_t v15 = sub_188C2CC((unsigned int *)(a1 + 48), v8, (uint64_t)a3);
      goto LABEL_45;
    }
  }
  else if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v25 = *(void *)(a1 + 8);
    unsigned int v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      unsigned int v26 = (uint64_t *)*v26;
    }
    uint64_t v27 = (std::string *)sub_1880F84((void *)(a1 + 64), v26);
    uint64_t v15 = (void *)sub_188C244(v27, *(char **)v31, (uint64_t)a3);
LABEL_45:
    *(void *)uint64_t v31 = v15;
    if (!v15) {
      goto LABEL_55;
    }
    goto LABEL_46;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (v9 - 8000 > 0xF9F)
    {
      if (*v7)
      {
        uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = *(unsigned __int8 **)v31;
      }
      uint64_t v15 = sub_1885AC0(v9, v28, (char *)v8, a3);
    }
    else
    {
      uint64_t v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2533128, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_45;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_55:
  *(void *)uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v31;
}

char *sub_132A450(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 48);
  if ((int)v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v9 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * i);
      char *v4 = 16;
      v4[1] = v9;
      if (v9 > 0x7F)
      {
        v4[1] = v9 | 0x80;
        unsigned int v10 = v9 >> 7;
        v4[2] = v9 >> 7;
        v4 += 3;
        if (v9 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v11 = v10 >> 14;
            v10 >>= 7;
            *v4++ = v10;
          }
          while (v11);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 72);
    *(_WORD *)uint64_t v4 = 32760;
    v4[2] = v12;
    if (v12 > 0x7F)
    {
      v4[2] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      v4[3] = v12 >> 7;
      v4 += 4;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    int v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    int v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_132A670(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t result = sub_188D4F0((unsigned int *)(a1 + 48)) + v2 + *(unsigned int *)(a1 + 48);
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      unint64_t v5 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      result += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v4 & 2) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    result += v10;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_132A758(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    unint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(void *)(a1 + 8);
      unsigned int v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        unsigned int v11 = (uint64_t *)*v11;
      }
      sub_1881DF4((std::string **)(a1 + 64), v9, v11);
    }
    if ((v8 & 2) != 0) {
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    }
    *(_DWORD *)(a1 + 40) |= v8;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_132A860(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_132A868@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.RoutingIncidentMessage");
}

uint64_t sub_132A878(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24A9F80;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = &qword_2550250;
  *(void *)(a1 + 80) = &qword_2550250;
  *(void *)(a1 + 88) = &qword_2550250;
  *(void *)(a1 + 96) = &qword_2550250;
  *(void *)(a1 + 104) = &qword_2550250;
  *(void *)(a1 + 112) = &qword_2550250;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 148) = 0u;
  return a1;
}

void sub_132A90C(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_132A93C(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_132A9D4((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1365C7C(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_132A9D4(uint64_t a1)
{
  unint64_t v3 = *(uint64_t **)(a1 + 72);
  uint64_t v2 = (void ***)(a1 + 72);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 96));
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  uint64_t result = (void ***)(a1 + 112);
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2533178)
  {
    uint64_t result = *(void ****)(a1 + 120);
    if (result)
    {
      sub_13D2884();
      operator delete();
    }
  }
  return result;
}

void sub_132AABC(void *a1)
{
  sub_132A93C(a1);

  operator delete();
}

uint64_t sub_132AAF4(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_132C98C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x7F) == 0) {
    goto LABEL_14;
  }
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_24:
    unint64_t v10 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v6 & 4) != 0) {
        goto LABEL_28;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v6 & 4) != 0) {
        goto LABEL_28;
      }
    }
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_10;
    }
LABEL_32:
    unint64_t v12 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v6 & 0x10) != 0) {
        goto LABEL_36;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v6 & 0x10) != 0) {
        goto LABEL_36;
      }
    }
LABEL_11:
    if ((v6 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_40;
  }
  unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_24;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_24;
    }
  }
LABEL_8:
  if ((v6 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_28:
  unint64_t v11 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v11 + 23) < 0)
  {
    **(unsigned char **)unint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
    if ((v6 & 8) != 0) {
      goto LABEL_32;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v6 & 8) != 0) {
      goto LABEL_32;
    }
  }
LABEL_10:
  if ((v6 & 0x10) == 0) {
    goto LABEL_11;
  }
LABEL_36:
  unint64_t v13 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v13 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v13 = 0;
    *(unsigned char *)(v13 + 23) = 0;
    if ((v6 & 0x20) != 0) {
      goto LABEL_40;
    }
LABEL_12:
    if ((v6 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  **(unsigned char **)unint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  if ((v6 & 0x20) == 0) {
    goto LABEL_12;
  }
LABEL_40:
  unint64_t v14 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v14 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v14 = 0;
    *(unsigned char *)(v14 + 23) = 0;
    if ((v6 & 0x40) == 0) {
      goto LABEL_14;
    }
LABEL_13:
    uint64_t result = sub_1369F48(*(void *)(a1 + 120));
    goto LABEL_14;
  }
  **(unsigned char **)unint64_t v14 = 0;
  *(void *)(v14 + 8) = 0;
  if ((v6 & 0x40) != 0) {
    goto LABEL_13;
  }
LABEL_14:
  *(void *)(a1 + 128) = 0;
  if ((v6 & 0x7F00) != 0)
  {
    *(void *)(a1 + 136) = 0;
    *(void *)(a1 + 144) = 0;
    *(_DWORD *)(a1 + 160) = 0;
    *(void *)(a1 + 152) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_132ACE8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v73 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v73, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v73 + 1);
    unsigned int v9 = **(unsigned char **)v73;
    if ((char)**(unsigned char **)v73 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v73, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v73 + 2);
      }
    }
    *(void *)int v73 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_96;
        }
        v5 |= 0x80u;
        unint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)int v73 = v12;
          *(void *)(a1 + 128) = v13;
          goto LABEL_88;
        }
        uint64_t v57 = sub_188C138((uint64_t)v8, v13);
        *(void *)int v73 = v57;
        *(void *)(a1 + 128) = v58;
        if (!v57) {
          goto LABEL_128;
        }
        goto LABEL_88;
      case 2u:
      case 3u:
      case 4u:
        goto LABEL_96;
      case 5u:
        if (v9 != 40) {
          goto LABEL_96;
        }
        int v18 = (char *)(v8 + 1);
        unint64_t v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          *(void *)int v73 = sub_188C138((uint64_t)v8, (v21 - 128));
          if (!*(void *)v73) {
            goto LABEL_128;
          }
          unint64_t v19 = v59;
        }
        else
        {
          int v18 = (char *)(v8 + 2);
LABEL_24:
          *(void *)int v73 = v18;
        }
        if (v19 > 1)
        {
          if (*v7) {
            v72 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v72 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(5, v19, v72);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x100u;
          *(_DWORD *)(a1 + 136) = v19;
        }
        goto LABEL_88;
      case 6u:
        if (v9 != 48) {
          goto LABEL_96;
        }
        v5 |= 0x200u;
        int v22 = (char *)(v8 + 1);
        int v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v60 = sub_188C0D0((uint64_t)v8, v23);
          *(void *)int v73 = v60;
          *(_DWORD *)(a1 + 140) = v61;
          if (!v60) {
            goto LABEL_128;
          }
        }
        else
        {
          int v22 = (char *)(v8 + 2);
LABEL_31:
          *(void *)int v73 = v22;
          *(_DWORD *)(a1 + 140) = v23;
        }
        goto LABEL_88;
      case 7u:
        if (v9 != 56) {
          goto LABEL_96;
        }
        v5 |= 0x400u;
        uint64_t v25 = (char *)(v8 + 1);
        int v26 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v27 = *v25;
        int v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v62 = sub_188C0D0((uint64_t)v8, v26);
          *(void *)int v73 = v62;
          *(_DWORD *)(a1 + 144) = v63;
          if (!v62) {
            goto LABEL_128;
          }
        }
        else
        {
          uint64_t v25 = (char *)(v8 + 2);
LABEL_36:
          *(void *)int v73 = v25;
          *(_DWORD *)(a1 + 144) = v26;
        }
        goto LABEL_88;
      case 8u:
        if (v9 != 64) {
          goto LABEL_96;
        }
        v5 |= 0x800u;
        uint64_t v28 = (char *)(v8 + 1);
        int v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v64 = sub_188C0D0((uint64_t)v8, v29);
          *(void *)int v73 = v64;
          *(_DWORD *)(a1 + 148) = v65;
          if (!v64) {
            goto LABEL_128;
          }
        }
        else
        {
          uint64_t v28 = (char *)(v8 + 2);
LABEL_41:
          *(void *)int v73 = v28;
          *(_DWORD *)(a1 + 148) = v29;
        }
        goto LABEL_88;
      case 9u:
        if (v9 != 72) {
          goto LABEL_96;
        }
        v5 |= 0x1000u;
        uint64_t v31 = (char *)(v8 + 1);
        int v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        int v33 = *v31;
        int v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v66 = sub_188C0D0((uint64_t)v8, v32);
          *(void *)int v73 = v66;
          *(_DWORD *)(a1 + 152) = v67;
          if (!v66) {
            goto LABEL_128;
          }
        }
        else
        {
          uint64_t v31 = (char *)(v8 + 2);
LABEL_46:
          *(void *)int v73 = v31;
          *(_DWORD *)(a1 + 152) = v32;
        }
        goto LABEL_88;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_96;
        }
        uint64_t v34 = (char *)(v8 - 1);
        while (1)
        {
          BOOL v35 = (unsigned __int8 *)(v34 + 1);
          *(void *)int v73 = v34 + 1;
          uint64_t v36 = *(_DWORD **)(a1 + 64);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 56), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 56) = v37 + 1;
            uint64_t v38 = *(void *)&v36[2 * v37 + 2];
          }
          else
          {
            uint64_t v39 = sub_133259C(*(void *)(a1 + 48));
            uint64_t v38 = sub_188CDC8(a1 + 48, (uint64_t)v39);
            BOOL v35 = *(unsigned __int8 **)v73;
          }
          uint64_t v34 = sub_132B450(a3, v38, v35);
          *(void *)int v73 = v34;
          if (!v34) {
            goto LABEL_128;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 82) {
            goto LABEL_88;
          }
        }
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_96;
        }
        v5 |= 0x2000u;
        int v40 = (char *)(v8 + 1);
        uint64_t v41 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_61;
        }
        int v42 = *v40;
        uint64_t v41 = v41 + (v42 << 7) - 128;
        if (v42 < 0)
        {
          uint64_t v68 = sub_188C138((uint64_t)v8, v41);
          *(void *)int v73 = v68;
          *(unsigned char *)(a1 + 156) = v69 != 0;
          if (!v68) {
            goto LABEL_128;
          }
        }
        else
        {
          int v40 = (char *)(v8 + 2);
LABEL_61:
          *(void *)int v73 = v40;
          *(unsigned char *)(a1 + 156) = v41 != 0;
        }
        goto LABEL_88;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_96;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v43 = *(void *)(a1 + 8);
        int v44 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
        if (v43) {
          int v44 = (uint64_t *)*v44;
        }
        uint64_t v45 = (void *)(a1 + 72);
        goto LABEL_86;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_96;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v46 = *(void *)(a1 + 8);
        int v44 = (uint64_t *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
        if (v46) {
          int v44 = (uint64_t *)*v44;
        }
        uint64_t v45 = (void *)(a1 + 80);
        goto LABEL_86;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_96;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v47 = *(void *)(a1 + 8);
        int v44 = (uint64_t *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
        if (v47) {
          int v44 = (uint64_t *)*v44;
        }
        uint64_t v45 = (void *)(a1 + 88);
        goto LABEL_86;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_96;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v48 = *(void *)(a1 + 8);
        int v44 = (uint64_t *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
        if (v48) {
          int v44 = (uint64_t *)*v44;
        }
        uint64_t v45 = (void *)(a1 + 96);
        goto LABEL_86;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_96;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v49 = *(void *)(a1 + 8);
        int v44 = (uint64_t *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
        if (v49) {
          int v44 = (uint64_t *)*v44;
        }
        uint64_t v45 = (void *)(a1 + 104);
        goto LABEL_86;
      case 0x11u:
        if (v9 != 138) {
          goto LABEL_96;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v50 = *(void *)(a1 + 8);
        int v44 = (uint64_t *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
        if (v50) {
          int v44 = (uint64_t *)*v44;
        }
        uint64_t v45 = (void *)(a1 + 112);
LABEL_86:
        uint64_t v51 = (std::string *)sub_1880F84(v45, v44);
        uint64_t v52 = (uint64_t)sub_188C244(v51, *(char **)v73, (uint64_t)a3);
        goto LABEL_87;
      case 0x12u:
        if (v9 != 146) {
          goto LABEL_96;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v53 = *(void *)(a1 + 120);
        if (!v53)
        {
          uint64_t v54 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v54 = (void *)*v54;
          }
          uint64_t v53 = sub_13DAB08((uint64_t)v54);
          *(void *)(a1 + 120) = v53;
          char v8 = *(unsigned __int8 **)v73;
        }
        uint64_t v52 = sub_1323390(a3, v53, v8);
        goto LABEL_87;
      default:
        if (v9 >> 3 == 2047 && v9 == 248)
        {
          v5 |= 0x4000u;
          uint64_t v15 = (char *)(v8 + 1);
          int v16 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          int v16 = v16 + (v17 << 7) - 128;
          if ((v17 & 0x80000000) == 0)
          {
            uint64_t v15 = (char *)(v8 + 2);
LABEL_19:
            *(void *)int v73 = v15;
            *(_DWORD *)(a1 + 160) = v16;
            goto LABEL_88;
          }
          uint64_t v70 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)int v73 = v70;
          *(_DWORD *)(a1 + 160) = v71;
          if (!v70) {
            goto LABEL_128;
          }
LABEL_88:
          if (sub_11947B8((uint64_t)a3, (char **)v73, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_96:
        if (v9) {
          BOOL v55 = (v9 & 7) == 4;
        }
        else {
          BOOL v55 = 1;
        }
        if (!v55)
        {
          if (v9 - 8000 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v56 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v56 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v8 = *(unsigned __int8 **)v73;
            }
            uint64_t v52 = (uint64_t)sub_1885AC0(v9, v56, (char *)v8, a3);
          }
          else
          {
            uint64_t v52 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2533178, (uint64_t *)(a1 + 8), a3);
          }
LABEL_87:
          *(void *)int v73 = v52;
          if (!v52) {
            goto LABEL_128;
          }
          goto LABEL_88;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_128:
        }
          *(void *)int v73 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v73;
    }
  }
}

char *sub_132B450(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_132CA00(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_132B4E0(uint64_t a1, char *a2, _DWORD *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 128);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 136);
    char *v4 = 40;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 140);
    char *v4 = 48;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 144);
    char *v4 = 56;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 148);
    char *v4 = 64;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 152);
    char *v4 = 72;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v25 = *(_DWORD *)(a1 + 56);
  if (v25)
  {
    for (int i = 0; i != v25; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 82;
      unsigned int v28 = *(_DWORD *)(v27 + 44);
      v4[1] = v28;
      if (v28 > 0x7F) {
        int v29 = sub_188A9CC(v28, v4 + 1);
      }
      else {
        int v29 = v4 + 2;
      }
      int v4 = sub_132CCB4(v27, v29, a3);
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v30 = *(unsigned char *)(a1 + 156);
    char *v4 = 88;
    v4[1] = v30;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_53:
      if ((v6 & 2) == 0) {
        goto LABEL_54;
      }
      goto LABEL_64;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_53;
  }
  int v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_54:
    if ((v6 & 4) == 0) {
      goto LABEL_55;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v4 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_55:
    if ((v6 & 8) == 0) {
      goto LABEL_56;
    }
    goto LABEL_66;
  }
LABEL_65:
  int v4 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_56:
    if ((v6 & 0x10) == 0) {
      goto LABEL_57;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_57:
    if ((v6 & 0x20) == 0) {
      goto LABEL_58;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v4 = sub_117A0AC(a3, 16, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_58:
    if ((v6 & 0x40) == 0) {
      goto LABEL_75;
    }
    goto LABEL_69;
  }
LABEL_68:
  int v4 = sub_117A0AC(a3, 17, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0) {
    goto LABEL_75;
  }
LABEL_69:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 120);
  *(_WORD *)int v4 = 402;
  unsigned int v32 = *(_DWORD *)(v31 + 44);
  v4[2] = v32;
  if (v32 > 0x7F) {
    int v33 = sub_188A9CC(v32, v4 + 2);
  }
  else {
    int v33 = v4 + 3;
  }
  int v4 = sub_13D2F58(v31, v33, a3);
LABEL_75:
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v34 = *(_DWORD *)(a1 + 160);
    *(_WORD *)int v4 = 32760;
    v4[2] = v34;
    if (v34 > 0x7F)
    {
      v4[2] = v34 | 0x80;
      unsigned int v35 = v34 >> 7;
      v4[3] = v34 >> 7;
      v4 += 4;
      if (v34 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v36 = v35 >> 14;
          v35 >>= 7;
          *v4++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    int v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    int v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v40, v41, v4);
}

uint64_t sub_132BB2C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_132CE64(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v10) {
    goto LABEL_17;
  }
  if (v10)
  {
    unint64_t v13 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 2) == 0)
    {
LABEL_10:
      if ((v10 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_36;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_10;
  }
  unint64_t v16 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 4) == 0)
  {
LABEL_11:
    if ((v10 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_36:
  unint64_t v19 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
  uint64_t v21 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    uint64_t v21 = v20;
  }
  v4 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 8) == 0)
  {
LABEL_12:
    if ((v10 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }
LABEL_39:
  unint64_t v22 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v4 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x10) == 0)
  {
LABEL_13:
    if ((v10 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_45:
    unint64_t v28 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
    uint64_t v30 = *(void *)(v28 + 8);
    if ((v29 & 0x80u) == 0) {
      uint64_t v30 = v29;
    }
    v4 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v10 & 0x40) == 0)
    {
LABEL_15:
      if ((v10 & 0x80) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    goto LABEL_48;
  }
LABEL_42:
  unint64_t v25 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
  uint64_t v27 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    uint64_t v27 = v26;
  }
  v4 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v10 & 0x20) != 0) {
    goto LABEL_45;
  }
LABEL_14:
  if ((v10 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_48:
  uint64_t v31 = sub_13D3304(*(void *)(a1 + 120));
  v4 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v10 & 0x80) != 0) {
LABEL_16:
  }
    v4 += ((9 * (__clz(*(void *)(a1 + 128) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_17:
  if ((v10 & 0x7F00) == 0) {
    goto LABEL_28;
  }
  if ((v10 & 0x100) != 0)
  {
    int v32 = *(_DWORD *)(a1 + 136);
    if (v32 < 0) {
      uint64_t v33 = 11;
    }
    else {
      uint64_t v33 = ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v33;
    if ((v10 & 0x200) == 0)
    {
LABEL_20:
      if ((v10 & 0x400) == 0) {
        goto LABEL_21;
      }
      goto LABEL_55;
    }
  }
  else if ((v10 & 0x200) == 0)
  {
    goto LABEL_20;
  }
  v4 += ((9 * (__clz(*(_DWORD *)(a1 + 140) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x400) == 0)
  {
LABEL_21:
    if ((v10 & 0x800) == 0) {
      goto LABEL_22;
    }
LABEL_56:
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 148) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 0x1000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
LABEL_55:
  v4 += ((9 * (__clz(*(_DWORD *)(a1 + 144) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x800) != 0) {
    goto LABEL_56;
  }
LABEL_22:
  if ((v10 & 0x1000) != 0) {
LABEL_23:
  }
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 152) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_24:
  if ((v10 & 0x2000) != 0) {
    v4 += 2;
  }
  if ((v10 & 0x4000) != 0) {
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 160) | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_28:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v34 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v34 + 31) < 0) {
      uint64_t v35 = *(void *)(v34 + 16);
    }
    else {
      uint64_t v35 = *(unsigned __int8 *)(v34 + 31);
    }
    v4 += v35;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_132BF1C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1365EF4((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        unint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_35;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 80), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_38;
    }
LABEL_35:
    uint64_t v17 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v18 = *(void *)(a1 + 8);
    unint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      unint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 88), v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_41;
    }
LABEL_38:
    uint64_t v20 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v21 = *(void *)(a1 + 8);
    unint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      unint64_t v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 96), v20, v22);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_44;
    }
LABEL_41:
    uint64_t v23 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v24 = *(void *)(a1 + 8);
    unint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      unint64_t v25 = (uint64_t *)*v25;
    }
    sub_1881DF4((std::string **)(a1 + 104), v23, v25);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_47;
    }
LABEL_44:
    uint64_t v26 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v27 = *(void *)(a1 + 8);
    unint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
    if (v27) {
      unint64_t v28 = (uint64_t *)*v28;
    }
    sub_1881DF4((std::string **)(a1 + 112), v26, v28);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      goto LABEL_14;
    }
LABEL_47:
    *(_DWORD *)(a1 + 40) |= 0x40u;
    uint64_t v29 = *(void *)(a1 + 120);
    if (!v29)
    {
      uint64_t v30 = *(void *)(a1 + 8);
      uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
      if (v30) {
        uint64_t v31 = (void *)*v31;
      }
      uint64_t v29 = sub_13DAB08((uint64_t)v31);
      *(void *)(a1 + 120) = v29;
    }
    if (*(void *)(a2 + 120)) {
      int v32 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      int v32 = &off_2536850;
    }
    sub_136AA7C(v29, (uint64_t)v32);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0x7F00) == 0) {
    goto LABEL_25;
  }
  if ((v9 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
    if ((v9 & 0x200) == 0)
    {
LABEL_18:
      if ((v9 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_58;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  if ((v9 & 0x400) == 0)
  {
LABEL_19:
    if ((v9 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_59;
  }
LABEL_58:
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  if ((v9 & 0x800) == 0)
  {
LABEL_20:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_60;
  }
LABEL_59:
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  if ((v9 & 0x1000) == 0)
  {
LABEL_21:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_22;
    }
LABEL_61:
    *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
    if ((v9 & 0x4000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
LABEL_60:
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  if ((v9 & 0x2000) != 0) {
    goto LABEL_61;
  }
LABEL_22:
  if ((v9 & 0x4000) != 0) {
LABEL_23:
  }
    *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
LABEL_24:
  *(_DWORD *)(a1 + 40) |= v9;
LABEL_25:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_132C244(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 64) + 8 * v3) + 16);
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 40) & 0x40) == 0) {
      return 1;
    }
    uint64_t result = sub_136AE2C(*(void *)(a1 + 120));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_132C2B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.Incident");
}

void *sub_132C2C8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_132C344(void *a1)
{
  sub_132C2C8(a1);

  operator delete();
}

uint64_t sub_132C37C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_132C390(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  char v5 = (void *)(a1 + 8);
  while (1)
  {
    int v6 = v20 + 1;
    unsigned int v7 = *v20;
    if (*v20 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        int v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        int v6 = v20 + 2;
      }
    }
    uint64_t v20 = v6;
    if ((v7 & 0xFFFFFFF8) == 8)
    {
      if (v7 == 8)
      {
        uint64_t v10 = v6 - 1;
        while (1)
        {
          uint64_t v20 = v10 + 1;
          uint64_t v11 = v10[1];
          if (v10[1] < 0)
          {
            int v12 = v11 + (v10[2] << 7);
            uint64_t v11 = (v12 - 128);
            if (v10[2] < 0)
            {
              uint64_t v10 = (char *)sub_188C138((uint64_t)(v10 + 1), (v12 - 128));
              uint64_t v11 = v13;
            }
            else
            {
              v10 += 3;
            }
          }
          else
          {
            v10 += 2;
          }
          uint64_t v20 = v10;
          uint64_t v14 = *(unsigned int *)(a1 + 16);
          if (v14 == *(_DWORD *)(a1 + 20))
          {
            int v15 = v14 + 1;
            sub_188CA54((unsigned int *)(a1 + 16), v14 + 1);
            *(void *)(*(void *)(a1 + 24) + 8 * v14) = v11;
            uint64_t v10 = v20;
          }
          else
          {
            *(void *)(*(void *)(a1 + 24) + 8 * v14) = v11;
            int v15 = v14 + 1;
          }
          *(_DWORD *)(a1 + 16) = v15;
          if (!v10) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v10 || *v10 != 8) {
            goto LABEL_32;
          }
        }
      }
      if (v7 == 10)
      {
        unint64_t v16 = sub_188C2EC((unsigned int *)(a1 + 16), (unsigned __int8 *)v6, (uint64_t)a3);
        goto LABEL_31;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      uint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v6 = v20;
    }
    unint64_t v16 = sub_1885AC0(v7, v18, v6, a3);
LABEL_31:
    uint64_t v20 = (char *)v16;
    if (!v16) {
      return 0;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v20;
  }
  return 0;
}

char *sub_132C590(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_132C6E0(uint64_t a1)
{
  uint64_t result = sub_188D5A8((unsigned int *)(a1 + 16)) + *(unsigned int *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

std::string *sub_132C740(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = &result->__r_.__value_.__r.__words[2];
    uint64_t v6 = SLODWORD(result->__r_.__value_.__r.__words[2]);
    sub_188CA54((unsigned int *)&result->__r_.__value_.__r.__words[2], v6 + v4);
    std::string::pointer data = v3[1].__r_.__value_.__l.__data_;
    *(_DWORD *)v5 += *(_DWORD *)(a2 + 16);
    uint64_t result = (std::string *)memcpy(&data[8 * v6], *(const void **)(a2 + 24), 8 * *(int *)(a2 + 16));
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_132C7E4()
{
  return 1;
}

void *sub_132C7EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.IncidentEntityFilter");
}

void *sub_132C7FC(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24AA080;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = 0;
  return a1;
}

void sub_132C864(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_132C894(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2533248)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_132C2C8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_132C954(uint64_t a1)
{
  sub_132C894(a1);

  operator delete();
}

uint64_t sub_132C98C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v3 = *(void *)(a1 + 48);
    char v4 = *(unsigned char *)(v3 + 8);
    uint64_t result = v3 + 8;
    *(_DWORD *)(result + 8) = 0;
    if (v4) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(void *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_132CA00(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v23 + 2;
      }
    }
    uint64_t v23 = v8;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v17 = v8 + 1;
    uint64_t v18 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_28;
    }
    int v19 = *v17;
    uint64_t v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      uint64_t v17 = v8 + 2;
LABEL_28:
      uint64_t v23 = v17;
      *(void *)(a1 + 56) = v18;
      goto LABEL_33;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v18);
    uint64_t v23 = v21;
    *(void *)(a1 + 56) = v22;
    if (!v21) {
      goto LABEL_40;
    }
LABEL_33:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v15 = *(void *)(a1 + 48);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_1332508((uint64_t)v16);
      *(void *)(a1 + 48) = v15;
      uint64_t v8 = v23;
    }
    uint64_t v14 = sub_132CC24(a3, v15, (unsigned __int8 *)v8);
LABEL_32:
    uint64_t v23 = v14;
    if (!v14) {
      goto LABEL_40;
    }
    goto LABEL_33;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (v9 - 8000 > 0xF9F)
    {
      if (*v7)
      {
        uint64_t v20 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = v23;
      }
      uint64_t v14 = (char *)sub_1885AC0(v9, v20, v8, a3);
    }
    else
    {
      uint64_t v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2533248, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_40:
  uint64_t v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v23;
}

char *sub_132CC24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_132C390(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_132CCB4(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    char *v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 32);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    char v4 = sub_132C590(v10, v12, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_132CE64(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      uint64_t v4 = sub_132C6E0(*(void *)(a1 + 48));
      v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0) {
      v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_132CF2C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v5 = *(std::string **)(a1 + 48);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        unint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          unint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = (std::string *)sub_1332508((uint64_t)v7);
        *(void *)(a1 + 48) = v5;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v8 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v8 = &off_2533220;
      }
      sub_132C740(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 40) |= v4;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_132D008(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_132D010@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.IncidentEntity");
}

uint64_t sub_132D020(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24AA100;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v6 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v6 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v6 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  long long v10 = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = v10;
  return a1;
}

void sub_132D21C()
{
}

void *sub_132D2AC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_132D330((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_132D330(uint64_t a1)
{
  int v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  uint64_t result = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2533288)
  {
    if (*(void *)(a1 + 48))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 56))
    {
      sub_13D3A00();
      operator delete();
    }
    if (*(void *)(a1 + 64))
    {
      sub_145FE08();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 72);
    if (result)
    {
      sub_13D2884();
      operator delete();
    }
  }
  return result;
}

void sub_132D43C(void *a1)
{
  sub_132D2AC(a1);

  operator delete();
}

uint64_t sub_132D474(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x7F) == 0) {
    goto LABEL_10;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_20;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_24:
    unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_28;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_28;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_29:
    uint64_t result = (uint64_t)sub_13D28C0(*(void *)(v1 + 56));
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
    goto LABEL_30;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_20:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_24;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_24;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_28:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(result + 48));
  if ((v2 & 0x10) != 0) {
    goto LABEL_29;
  }
LABEL_7:
  if ((v2 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_30:
  uint64_t result = sub_1369BB4(*(void *)(v1 + 64));
  if ((v2 & 0x40) != 0) {
LABEL_9:
  }
    uint64_t result = sub_1369F48(*(void *)(v1 + 72));
LABEL_10:
  *(void *)(v1 + 80) = 0;
  if ((v2 & 0x700) != 0)
  {
    *(void *)(v1 + 88) = 0;
    *(void *)(v1 + 96) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_132D5B8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v42 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v42 + 1);
    unsigned int v9 = **(unsigned char **)v42;
    if ((char)**(unsigned char **)v42 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v42, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v42 + 2);
      }
    }
    *(void *)uint64_t v42 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_61;
        }
        v5 |= 0x80u;
        int v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v42 = v12;
          *(void *)(a1 + 80) = v13;
          goto LABEL_69;
        }
        uint64_t v38 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v42 = v38;
        *(void *)(a1 + 80) = v39;
        if (v38) {
          goto LABEL_69;
        }
        goto LABEL_78;
      case 2u:
        if (v9 != 18) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v15 = *(void *)(a1 + 48);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_15C1918((uint64_t)v16);
          *(void *)(a1 + 48) = v15;
          uint64_t v8 = *(unsigned __int8 **)v42;
        }
        uint64_t v17 = (uint64_t)sub_1198F14(a3, v15, v8);
        goto LABEL_68;
      case 3u:
        if (v9 != 24) {
          goto LABEL_61;
        }
        v5 |= 0x100u;
        uint64_t v18 = (char *)(v8 + 1);
        uint64_t v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v40 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v42 = v40;
          *(void *)(a1 + 88) = v41;
          if (!v40) {
            goto LABEL_78;
          }
        }
        else
        {
          uint64_t v18 = (char *)(v8 + 2);
LABEL_24:
          *(void *)uint64_t v42 = v18;
          *(void *)(a1 + 88) = v19;
        }
        goto LABEL_69;
      case 4u:
        if (v9 != 37) {
          goto LABEL_61;
        }
        int v22 = *(_DWORD *)v8;
        uint64_t v21 = v8 + 4;
        v5 |= 0x200u;
        *(_DWORD *)(a1 + 96) = v22;
        goto LABEL_29;
      case 5u:
        if (v9 != 45) {
          goto LABEL_61;
        }
        int v23 = *(_DWORD *)v8;
        uint64_t v21 = v8 + 4;
        v5 |= 0x400u;
        *(_DWORD *)(a1 + 100) = v23;
LABEL_29:
        *(void *)uint64_t v42 = v21;
        goto LABEL_69;
      case 6u:
        if (v9 != 50) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v24 = *(void *)(a1 + 8);
        unint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          unint64_t v25 = (uint64_t *)*v25;
        }
        uint64_t v26 = (void *)(a1 + 24);
        goto LABEL_48;
      case 7u:
        if (v9 != 58) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v27 = *(void *)(a1 + 8);
        unint64_t v25 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          unint64_t v25 = (uint64_t *)*v25;
        }
        uint64_t v26 = (void *)(a1 + 32);
        goto LABEL_48;
      case 8u:
        if (v9 != 66) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v28 = *(void *)(a1 + 56);
        if (!v28)
        {
          uint64_t v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v29 = (void *)*v29;
          }
          uint64_t v28 = sub_13DAB64((uint64_t)v29);
          *(void *)(a1 + 56) = v28;
          uint64_t v8 = *(unsigned __int8 **)v42;
        }
        uint64_t v17 = sub_132DA30(a3, v28, v8);
        goto LABEL_68;
      case 9u:
        if (v9 != 74) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v30 = *(void *)(a1 + 8);
        unint64_t v25 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          unint64_t v25 = (uint64_t *)*v25;
        }
        uint64_t v26 = (void *)(a1 + 40);
LABEL_48:
        uint64_t v31 = (std::string *)sub_1880F84(v26, v25);
        uint64_t v17 = (uint64_t)sub_188C244(v31, *(char **)v42, (uint64_t)a3);
        goto LABEL_68;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        int v32 = *(void **)(a1 + 64);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v33 = (void *)*v33;
          }
          int v32 = sub_1478C60((uint64_t)v33);
          *(void *)(a1 + 64) = v32;
          uint64_t v8 = *(unsigned __int8 **)v42;
        }
        uint64_t v17 = (uint64_t)sub_129760C(a3, (uint64_t)v32, v8);
        goto LABEL_68;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v34 = *(void *)(a1 + 72);
        if (!v34)
        {
          uint64_t v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v35 = (void *)*v35;
          }
          uint64_t v34 = sub_13DAB08((uint64_t)v35);
          *(void *)(a1 + 72) = v34;
          uint64_t v8 = *(unsigned __int8 **)v42;
        }
        uint64_t v17 = sub_1323390(a3, v34, v8);
        goto LABEL_68;
      default:
LABEL_61:
        if (v9) {
          BOOL v36 = (v9 & 7) == 4;
        }
        else {
          BOOL v36 = 1;
        }
        if (!v36)
        {
          if (*v7)
          {
            uint64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v42;
          }
          uint64_t v17 = (uint64_t)sub_1885AC0(v9, v37, (char *)v8, a3);
LABEL_68:
          *(void *)uint64_t v42 = v17;
          if (!v17) {
            goto LABEL_78;
          }
LABEL_69:
          if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_78:
        }
          *(void *)uint64_t v42 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v42;
    }
  }
}

uint64_t sub_132DA30(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13D3A3C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_132DAC0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 80);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v10, v12, a3);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 88);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v16 = *(_DWORD *)(a1 + 96);
    unsigned char *v4 = 37;
    *(_DWORD *)(v4 + 1) = v16;
    v4 += 5;
    if ((v6 & 0x400) == 0)
    {
LABEL_24:
      if ((v6 & 1) == 0) {
        goto LABEL_25;
      }
      goto LABEL_37;
    }
  }
  else if ((v6 & 0x400) == 0)
  {
    goto LABEL_24;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v17 = *(_DWORD *)(a1 + 100);
  unsigned char *v4 = 45;
  *(_DWORD *)(v4 + 1) = v17;
  v4 += 5;
  if ((v6 & 1) == 0)
  {
LABEL_25:
    if ((v6 & 2) == 0) {
      goto LABEL_26;
    }
    goto LABEL_38;
  }
LABEL_37:
  char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_26:
    if ((v6 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_39;
  }
LABEL_38:
  char v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_27:
    if ((v6 & 4) == 0) {
      goto LABEL_28;
    }
    goto LABEL_45;
  }
LABEL_39:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v18 = *(void *)(a1 + 56);
  unsigned char *v4 = 66;
  unsigned int v19 = *(_DWORD *)(v18 + 44);
  v4[1] = v19;
  if (v19 > 0x7F) {
    int v20 = sub_188A9CC(v19, v4 + 1);
  }
  else {
    int v20 = v4 + 2;
  }
  char v4 = sub_13D3CA0(v18, v20, a3);
  if ((v6 & 4) == 0)
  {
LABEL_28:
    if ((v6 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_46;
  }
LABEL_45:
  char v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_29:
    if ((v6 & 0x40) == 0) {
      goto LABEL_58;
    }
    goto LABEL_52;
  }
LABEL_46:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 64);
  unsigned char *v4 = 82;
  unsigned int v22 = *(_DWORD *)(v21 + 44);
  v4[1] = v22;
  if (v22 > 0x7F) {
    int v23 = sub_188A9CC(v22, v4 + 1);
  }
  else {
    int v23 = v4 + 2;
  }
  char v4 = sub_1460138(v21, v23, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_52:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v24 = *(void *)(a1 + 72);
    unsigned char *v4 = 90;
    unsigned int v25 = *(_DWORD *)(v24 + 44);
    v4[1] = v25;
    if (v25 > 0x7F) {
      uint64_t v26 = sub_188A9CC(v25, v4 + 1);
    }
    else {
      uint64_t v26 = v4 + 2;
    }
    char v4 = sub_13D2F58(v24, v26, a3);
  }
LABEL_58:
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    uint64_t v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    uint64_t v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v32;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_132DEF0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_19;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v13 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v16 = sub_15B0D90(*(void *)(a1 + 48));
  v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v17 = sub_13D3E2C(*(void *)(a1 + 56));
  v3 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v18 = sub_1460320(*(void *)(a1 + 64));
  v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_35:
  uint64_t v19 = sub_13D3304(*(void *)(a1 + 72));
  v3 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0) {
LABEL_18:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_19:
  if ((v2 & 0x700) != 0)
  {
    if ((v2 & 0x100) != 0) {
      v3 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    uint64_t v10 = v3 + 5;
    if ((v2 & 0x200) == 0) {
      uint64_t v10 = v3;
    }
    if ((v2 & 0x400) != 0) {
      uint64_t v3 = v10 + 5;
    }
    else {
      uint64_t v3 = v10;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v20 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v3 += v21;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_132E174(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 32), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_31;
    }
LABEL_28:
    unint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 40), v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_39;
    }
LABEL_31:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v16 = *(void *)(a1 + 48);
    if (!v16)
    {
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v16 = sub_15C1918((uint64_t)v18);
      *(void *)(a1 + 48) = v16;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v19 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v19 = &off_253F1A0;
    }
    sub_15B0E24(v16, (uint64_t)v19);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_47;
    }
LABEL_39:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v20 = *(void *)(a1 + 56);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      unsigned int v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        unsigned int v22 = (void *)*v22;
      }
      uint64_t v20 = sub_13DAB64((uint64_t)v22);
      *(void *)(a1 + 56) = v20;
    }
    if (*(void *)(a2 + 56)) {
      int v23 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      int v23 = &off_25368B0;
    }
    sub_13D3504(v20, (uint64_t)v23);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_55;
    }
LABEL_47:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v24 = *(void **)(a1 + 64);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      uint64_t v24 = sub_1478C60((uint64_t)v26);
      *(void *)(a1 + 64) = v24;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v27 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v27 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v24, (uint64_t)v27);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_55:
    *(_DWORD *)(a1 + 16) |= 0x40u;
    uint64_t v28 = *(void *)(a1 + 72);
    if (!v28)
    {
      uint64_t v29 = *(void *)(a1 + 8);
      uint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        uint64_t v30 = (void *)*v30;
      }
      uint64_t v28 = sub_13DAB08((uint64_t)v30);
      *(void *)(a1 + 72) = v28;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v31 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v31 = &off_2536850;
    }
    sub_136AA7C(v28, (uint64_t)v31);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x700) == 0) {
    goto LABEL_18;
  }
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 0x200) == 0) {
      goto LABEL_15;
    }
LABEL_65:
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v4 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  if ((v4 & 0x200) != 0) {
    goto LABEL_65;
  }
LABEL_15:
  if ((v4 & 0x400) != 0) {
LABEL_16:
  }
    *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
LABEL_17:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_18:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_132E428(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t result = sub_13D36FC(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) != 0)
  {
    uint64_t result = sub_136AEA0(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x40) == 0) {
    return 1;
  }
  uint64_t result = sub_136AE2C(*(void *)(a1 + 72));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_132E49C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.VehiclePosition");
}

uint64_t sub_132E4AC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24AA180;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(_WORD *)(a1 + 80) = 0;
  return a1;
}

void sub_132E524(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_132E554(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24AA180;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 40))
  {
    unint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v7);
  }
  long long v8 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 66) = *(_OWORD *)(a2 + 66);
  *(_OWORD *)(a1 + 56) = v8;
  return a1;
}

void sub_132E634(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_132E674(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_132E71C(uint64_t a1)
{
  sub_132E674(a1);

  operator delete();
}

unsigned char *sub_132E754(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
  if ((v3 & 0x3E) != 0)
  {
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
    *(_WORD *)(a1 + 80) = 0;
    *(void *)(a1 + 72) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_132E7EC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    long long v8 = (char *)(*(void *)v43 + 1);
    unsigned int v9 = **(unsigned char **)v43;
    if ((char)**(unsigned char **)v43 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        long long v8 = (char *)sub_188C180(*(uint64_t *)v43, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        long long v8 = (char *)(*(void *)v43 + 2);
      }
    }
    *(void *)uint64_t v43 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_38;
        }
        v5 |= 2u;
        int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v43 = v12;
          *(void *)(a1 + 56) = v13;
          goto LABEL_48;
        }
        uint64_t v33 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v43 = v33;
        *(void *)(a1 + 56) = v34;
        if (v33) {
          goto LABEL_48;
        }
        goto LABEL_63;
      case 2u:
        if (v9 != 16) {
          goto LABEL_38;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v35 = sub_188C138((uint64_t)v8, v16);
          *(void *)uint64_t v43 = v35;
          *(void *)(a1 + 64) = v36;
          if (!v35) {
            goto LABEL_63;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          *(void *)uint64_t v43 = v15;
          *(void *)(a1 + 64) = v16;
        }
        goto LABEL_48;
      case 3u:
        if (v9 != 24) {
          goto LABEL_38;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v37 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v43 = v37;
          *(void *)(a1 + 72) = v38;
          if (!v37) {
            goto LABEL_63;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          *(void *)uint64_t v43 = v18;
          *(void *)(a1 + 72) = v19;
        }
        goto LABEL_48;
      case 4u:
        if (v9 != 34) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v21 = *(void *)(a1 + 8);
        unsigned int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          unsigned int v22 = (uint64_t *)*v22;
        }
        int v23 = (std::string *)sub_1880F84((void *)(a1 + 48), v22);
        uint64_t v24 = (void *)sub_188C244(v23, *(char **)v43, (uint64_t)a3);
        goto LABEL_47;
      case 5u:
        if (v9 != 40) {
          goto LABEL_38;
        }
        v5 |= 0x10u;
        uint64_t v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v39 = sub_188C138((uint64_t)v8, v26);
          *(void *)uint64_t v43 = v39;
          *(unsigned char *)(a1 + 80) = v40 != 0;
          if (!v39) {
            goto LABEL_63;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_32:
          *(void *)uint64_t v43 = v25;
          *(unsigned char *)(a1 + 80) = v26 != 0;
        }
        goto LABEL_48;
      case 6u:
        if (v9 != 48) {
          goto LABEL_38;
        }
        v5 |= 0x20u;
        uint64_t v28 = v8 + 1;
        uint64_t v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v41 = sub_188C138((uint64_t)v8, v29);
          *(void *)uint64_t v43 = v41;
          *(unsigned char *)(a1 + 81) = v42 != 0;
          if (!v41) {
            goto LABEL_63;
          }
        }
        else
        {
          uint64_t v28 = v8 + 2;
LABEL_37:
          *(void *)uint64_t v43 = v28;
          *(unsigned char *)(a1 + 81) = v29 != 0;
        }
        goto LABEL_48;
      default:
LABEL_38:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (v9 - 8000 > 0xFA7)
          {
            if (*v7)
            {
              uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              long long v8 = *(char **)v43;
            }
            uint64_t v24 = sub_1885AC0(v9, v32, v8, a3);
          }
          else
          {
            uint64_t v24 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25332F0, (uint64_t *)(a1 + 8), a3);
          }
LABEL_47:
          *(void *)uint64_t v43 = v24;
          if (!v24) {
            goto LABEL_63;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_63:
        }
          *(void *)uint64_t v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v43;
    }
  }
}

char *sub_132EBD8(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 64);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 72);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x10) == 0)
    {
LABEL_24:
      if ((v6 & 0x20) == 0) {
        goto LABEL_33;
      }
      goto LABEL_30;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_24;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v16 = *(unsigned char *)(a1 + 80);
  char *v4 = 40;
  v4[1] = v16;
  v4 += 2;
  if ((v6 & 0x20) != 0)
  {
LABEL_30:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v17 = *(unsigned char *)(a1 + 81);
    char *v4 = 48;
    v4[1] = v17;
    v4 += 2;
  }
LABEL_33:
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 1501, v4, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_132EEB8(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x3F) == 0) {
    goto LABEL_12;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    result += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_18:
      result += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
      if ((v3 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  result += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v3 & 4) != 0) {
    goto LABEL_18;
  }
LABEL_5:
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    result += ((9 * (__clz(*(void *)(a1 + 72) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_7:
  uint64_t v4 = result + 2;
  if ((v3 & 0x10) == 0) {
    uint64_t v4 = result;
  }
  if ((v3 & 0x20) != 0) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
LABEL_12:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v9 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    result += v10;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_132EFF4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      unint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_19;
    }
LABEL_18:
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_20;
    }
LABEL_19:
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
      goto LABEL_9;
    }
LABEL_20:
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_132F100(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_132F108@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.ScheduleLookupParameters");
}

uint64_t sub_132F118(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2533348 && *(void *)(a1 + 24))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_132F1D0(uint64_t a1)
{
  sub_132F118(a1);

  operator delete();
}

unsigned char *sub_132F208(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if (v2) {
    uint64_t result = sub_15B09D0(*((void *)result + 3));
  }
  if ((v2 & 0xE) != 0)
  {
    *((_DWORD *)v1 + 10) = 0;
    *((void *)v1 + 4) = 0;
  }
  char v4 = v1[8];
  int v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_132F274(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v33 + 2;
      }
    }
    uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_15C1918((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          uint64_t v8 = v33;
        }
        unint64_t v14 = sub_1198F14(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_41;
      case 2u:
        if (v9 != 16) {
          goto LABEL_34;
        }
        unint64_t v15 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v33) {
            goto LABEL_62;
          }
          unint64_t v16 = v27;
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_19:
          uint64_t v33 = v15;
        }
        if (v16 <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 32) = v16;
          goto LABEL_42;
        }
        if (*v7) {
          BOOL v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          BOOL v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v32 = 2;
        goto LABEL_56;
      case 3u:
        if (v9 != 24) {
          goto LABEL_34;
        }
        uint64_t v19 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v20 = *v19;
        int v21 = v16 + (v20 << 7);
        unint64_t v16 = (v21 - 128);
        if (v20 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
          if (!v33) {
            goto LABEL_62;
          }
          unint64_t v16 = v28;
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_26:
          uint64_t v33 = v19;
        }
        if (v16 > 2)
        {
          if (*v7) {
            BOOL v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            BOOL v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v32 = 3;
LABEL_56:
          sub_188C020(v32, v16, v31);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 36) = v16;
        }
        goto LABEL_42;
      case 4u:
        if (v9 != 32) {
          goto LABEL_34;
        }
        v5 |= 8u;
        uint64_t v22 = v8 + 1;
        int v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
          uint64_t v33 = v29;
          *(_DWORD *)(a1 + 40) = v30;
          if (!v29) {
            goto LABEL_62;
          }
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_33:
          uint64_t v33 = v22;
          *(_DWORD *)(a1 + 40) = v23;
        }
        goto LABEL_42;
      default:
LABEL_34:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v33;
          }
          unint64_t v14 = (char *)sub_1885AC0(v9, v26, v8, a3);
LABEL_41:
          uint64_t v33 = v14;
          if (!v14) {
            goto LABEL_62;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_62:
        }
          uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v33;
    }
  }
}

char *sub_132F5C0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 36);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 40);
    char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_132F850(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_14;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  int v8 = *(_DWORD *)(a1 + 36);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v9;
  if ((v2 & 8) != 0) {
LABEL_13:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_132F984(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        int v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          int v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C1918((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253F1A0;
      }
      sub_15B0E24(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
      goto LABEL_7;
    }
LABEL_21:
    *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_132FA7C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_132FAA8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.TriggerRegion");
}

uint64_t sub_132FAB8(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2533378)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_13314D0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_132FB78(uint64_t a1)
{
  sub_132FAB8(a1);

  operator delete();
}

uint64_t sub_132FBB0(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_132FC1C(*(void *)(result + 40));
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_132FC1C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1369E6C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1477D08(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t result = sub_1369E6C(*(void *)(v1 + 72));
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t result = sub_1369E6C(*(void *)(v1 + 80));
    if ((v8 & 4) != 0) {
LABEL_13:
    }
      uint64_t result = sub_1369E6C(*(void *)(v1 + 88));
  }
LABEL_14:
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(void *)(v9 + 88) = 0;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

char *sub_132FD04(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v34 = a2;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    return v34;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v34 + 1;
    unsigned int v8 = *v34;
    if (*v34 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v34, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v34 + 2;
      }
    }
    uint64_t v34 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8)
        {
          if (v8 != 10) {
            goto LABEL_49;
          }
          int v20 = (char *)sub_188C2CC((unsigned int *)(a1 + 24), (unsigned __int8 *)v7, (uint64_t)a3);
          goto LABEL_56;
        }
        uint64_t v11 = v7 - 1;
        while (1)
        {
          uint64_t v34 = v11 + 1;
          int v12 = v11[1];
          if (v11[1] < 0)
          {
            int v13 = v12 + (v11[2] << 7);
            int v12 = v13 - 128;
            if (v11[2] < 0)
            {
              uint64_t v11 = (char *)sub_188C0D0((uint64_t)(v11 + 1), v13 - 128);
              int v12 = v14;
            }
            else
            {
              v11 += 3;
            }
          }
          else
          {
            v11 += 2;
          }
          uint64_t v34 = v11;
          uint64_t v15 = *(unsigned int *)(a1 + 24);
          if (v15 == *(_DWORD *)(a1 + 28))
          {
            int v16 = v15 + 1;
            sub_188C80C((unsigned int *)(a1 + 24), v15 + 1);
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v15) = v12;
            uint64_t v11 = v34;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v15) = v12;
            int v16 = v15 + 1;
          }
          *(_DWORD *)(a1 + 24) = v16;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 8) {
            goto LABEL_57;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v17 = *(void *)(a1 + 40);
        if (!v17)
        {
          unsigned int v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v18 = (void *)*v18;
          }
          sub_1332868((uint64_t)v18);
          uint64_t v17 = v19;
          *(void *)(a1 + 40) = v19;
          uint64_t v7 = v34;
        }
        int v20 = sub_13300C8(a3, v17, (unsigned __int8 *)v7);
        goto LABEL_56;
      case 3u:
        if (v8 != 24) {
          goto LABEL_49;
        }
        unint64_t v21 = v7 + 1;
        unint64_t v22 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          uint64_t v34 = (char *)sub_188C138((uint64_t)v7, (v24 - 128));
          if (!v34) {
            return 0;
          }
          unint64_t v22 = v28;
        }
        else
        {
          unint64_t v21 = v7 + 2;
LABEL_33:
          uint64_t v34 = v21;
        }
        if (v22 <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 48) = v22;
          goto LABEL_57;
        }
        if (*v6) {
          int v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v33 = 3;
        goto LABEL_65;
      case 4u:
        if (v8 != 32) {
          goto LABEL_49;
        }
        BOOL v25 = v7 + 1;
        unint64_t v22 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v26 = *v25;
        int v27 = v22 + (v26 << 7);
        unint64_t v22 = (v27 - 128);
        if (v26 < 0)
        {
          uint64_t v34 = (char *)sub_188C138((uint64_t)v7, (v27 - 128));
          if (!v34) {
            return 0;
          }
          unint64_t v22 = v29;
        }
        else
        {
          BOOL v25 = v7 + 2;
LABEL_40:
          uint64_t v34 = v25;
        }
        if (v22 > 4)
        {
          if (*v6) {
            int v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v33 = 4;
LABEL_65:
          sub_188C020(v33, v22, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 52) = v22;
        }
        goto LABEL_57;
      default:
LABEL_49:
        if (v8) {
          BOOL v30 = (v8 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v6)
          {
            BOOL v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v34;
          }
          int v20 = (char *)sub_1885AC0(v8, v31, v7, a3);
LABEL_56:
          uint64_t v34 = v20;
          if (!v20) {
            return 0;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            return v34;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v34;
    }
  }
}

char *sub_13300C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1331610(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1330158(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v8 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unsigned int v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v12 = *(void *)(a1 + 40);
    *__dst = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    __dst[1] = v13;
    if (v13 > 0x7F) {
      int v14 = sub_188A9CC(v13, __dst + 1);
    }
    else {
      int v14 = __dst + 2;
    }
    __dst = sub_1331AFC(v12, (unint64_t)v14, a3);
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v15 = *(int *)(a1 + 48);
    *__dst = 24;
    __dst[1] = v15;
    if (v15 > 0x7F)
    {
      __dst[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      __dst[2] = v15 >> 7;
      __dst += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *__dst++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v18 = *(int *)(a1 + 52);
    *__dst = 32;
    __dst[1] = v18;
    if (v18 > 0x7F)
    {
      __dst[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      __dst[2] = v18 >> 7;
      __dst += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *__dst++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return __dst;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    int v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    int v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(__dst, v24, (int)v25);
    __dst += v26;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, __dst);
}

uint64_t sub_1330408(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 7) == 0) {
    goto LABEL_15;
  }
  if (v3)
  {
    uint64_t v4 = sub_1331E70(*(void *)(a1 + 40));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_11;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  int v5 = *(_DWORD *)(a1 + 48);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v6;
  if ((v3 & 4) != 0)
  {
LABEL_11:
    int v7 = *(_DWORD *)(a1 + 52);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v8;
  }
LABEL_15:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1330524(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 40);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        sub_1332868((uint64_t)v12);
        *(void *)(a1 + 40) = v10;
      }
      if (*(void *)(a2 + 40)) {
        unsigned int v13 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        unsigned int v13 = &off_2533400;
      }
      sub_1330650(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0)
        {
LABEL_8:
          *(_DWORD *)(a1 + 16) |= v8;
          goto LABEL_9;
        }
LABEL_7:
        *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
        goto LABEL_8;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    if ((v8 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1330650(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1365F80((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_136600C((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    unsigned int v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0xF) != 0)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(void *)(a1 + 72);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        unint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          unint64_t v18 = (void *)*v18;
        }
        sub_13D6A1C((uint64_t)v18);
        *(void *)(a1 + 72) = v16;
      }
      if (*(void *)(a2 + 72)) {
        unint64_t v19 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        unint64_t v19 = &off_2534750;
      }
      sub_136A7DC(v16, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_34;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v20 = *(void *)(a1 + 80);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      unint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        unint64_t v22 = (void *)*v22;
      }
      sub_13D6A1C((uint64_t)v22);
      *(void *)(a1 + 80) = v20;
    }
    if (*(void *)(a2 + 80)) {
      unint64_t v23 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      unint64_t v23 = &off_2534750;
    }
    sub_136A7DC(v20, (uint64_t)v23);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0)
      {
LABEL_13:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_14;
      }
LABEL_12:
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      goto LABEL_13;
    }
LABEL_34:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v24 = *(void *)(a1 + 88);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      sub_13D6A1C((uint64_t)v26);
      *(void *)(a1 + 88) = v24;
    }
    if (*(void *)(a2 + 88)) {
      int v27 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      int v27 = &off_2534750;
    }
    sub_136A7DC(v24, (uint64_t)v27);
    if ((v14 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_133088C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_13308B8(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_13308B8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_136ADBC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 72));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 80));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 88));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1330944@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.PaymentMethodSuggestion");
}

void *sub_1330954(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24AA300;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = &qword_2550250;
  a1[8] = 0;
  a1[9] = 0;
  return a1;
}

void sub_13309C8(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13309F8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  int v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1330AB8(uint64_t a1)
{
  sub_13309F8(a1);

  operator delete();
}

unsigned char *sub_1330AF0(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  if ((v3 & 0x1C) != 0)
  {
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1330BB8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v36 + 1);
    unsigned int v9 = **(unsigned char **)v36;
    if ((char)**(unsigned char **)v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v36 + 2);
      }
    }
    *(void *)uint64_t v36 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unsigned int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unsigned int v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 48);
        goto LABEL_36;
      case 2u:
        if (v9 != 16) {
          goto LABEL_40;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v30 = sub_188C138((uint64_t)v8, v16);
          *(void *)uint64_t v36 = v30;
          *(void *)(a1 + 64) = v31;
          if (!v30) {
            goto LABEL_67;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_17:
          *(void *)uint64_t v36 = v15;
          *(void *)(a1 + 64) = v16;
        }
        goto LABEL_38;
      case 3u:
        if (v9 != 24) {
          goto LABEL_40;
        }
        unint64_t v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          *(void *)uint64_t v36 = sub_188C138((uint64_t)v8, (v21 - 128));
          if (!*(void *)v36) {
            goto LABEL_67;
          }
          unint64_t v19 = v32;
        }
        else
        {
          unint64_t v18 = v8 + 2;
LABEL_22:
          *(void *)uint64_t v36 = v18;
        }
        if (v19 <= 4)
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 72) = v19;
          goto LABEL_38;
        }
        if (*v7) {
          uint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v35 = 3;
        goto LABEL_61;
      case 4u:
        if (v9 != 32) {
          goto LABEL_40;
        }
        unint64_t v22 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v23 = *v22;
        int v24 = v19 + (v23 << 7);
        unint64_t v19 = (v24 - 128);
        if (v23 < 0)
        {
          *(void *)uint64_t v36 = sub_188C138((uint64_t)v8, (v24 - 128));
          if (!*(void *)v36) {
            goto LABEL_67;
          }
          unint64_t v19 = v33;
        }
        else
        {
          unint64_t v22 = v8 + 2;
LABEL_29:
          *(void *)uint64_t v36 = v22;
        }
        if (sub_125D180(v19))
        {
          *(_DWORD *)(a1 + 40) |= 0x10u;
          *(_DWORD *)(a1 + 76) = v19;
        }
        else
        {
          if (*v7) {
            uint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v35 = 4;
LABEL_61:
          sub_188C020(v35, v19, v34);
        }
        goto LABEL_38;
      case 5u:
        if (v9 != 42) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v25 = *(void *)(a1 + 8);
        unsigned int v13 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          unsigned int v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 56);
LABEL_36:
        uint64_t v26 = (std::string *)sub_1880F84(v14, v13);
        int v27 = (void *)sub_188C244(v26, *(char **)v36, (uint64_t)a3);
        goto LABEL_37;
      default:
LABEL_40:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (v9 - 7600 > 0x18F)
          {
            if (*v7)
            {
              unint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v8 = *(char **)v36;
            }
            int v27 = sub_1885AC0(v9, v29, v8, a3);
          }
          else
          {
            int v27 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25333B0, (uint64_t *)(a1 + 8), a3);
          }
LABEL_37:
          *(void *)uint64_t v36 = v27;
          if (!v27) {
            goto LABEL_67;
          }
LABEL_38:
          if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_67:
        }
          *(void *)uint64_t v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v36;
    }
  }
}

char *sub_1330F84(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(void *)(a1 + 64);
    char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 72);
    char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 76);
    char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1331208(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_23;
  }
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_14;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
  uint64_t v9 = *(void *)(v7 + 8);
  if ((v8 & 0x80u) == 0) {
    uint64_t v9 = v8;
  }
  result += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  result += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_19;
  }
LABEL_15:
  int v10 = *(_DWORD *)(a1 + 72);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v11;
  if ((v3 & 0x10) != 0)
  {
LABEL_19:
    int v12 = *(_DWORD *)(a1 + 76);
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v13;
  }
LABEL_23:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v15 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    result += v16;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_1331394(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    int v10 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 56), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_20;
    }
LABEL_19:
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
      goto LABEL_8;
    }
LABEL_20:
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13314B8(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_13314C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.PaymentMethod");
}

uint64_t sub_13314D0(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2533400)
  {
    if (*(void *)(a1 + 72))
    {
      sub_1374318();
      operator delete();
    }
    if (*(void *)(a1 + 80))
    {
      sub_1374318();
      operator delete();
    }
    if (*(void *)(a1 + 88))
    {
      sub_1374318();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1365D7C((void *)(a1 + 48));
  sub_1365CFC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13315D8(uint64_t a1)
{
  sub_13314D0(a1);

  operator delete();
}

char *sub_1331610(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v39 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v39 + 1;
    unsigned int v9 = *v39;
    if (*v39 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v39, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v39 + 2;
      }
    }
    uint64_t v39 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_51;
        }
        v5 |= 8u;
        int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          uint64_t v39 = v12;
          *(void *)(a1 + 96) = v13;
          goto LABEL_59;
        }
        uint64_t v37 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v39 = v37;
        *(void *)(a1 + 96) = v38;
        if (v37) {
          goto LABEL_59;
        }
        goto LABEL_66;
      case 2u:
        if (v9 != 18) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 72);
        if (v15) {
          goto LABEL_40;
        }
        uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v16 = (void *)*v16;
        }
        sub_13D6A1C((uint64_t)v16);
        uint64_t v15 = v17;
        *(void *)(a1 + 72) = v17;
        goto LABEL_39;
      case 3u:
        if (v9 != 26) {
          goto LABEL_51;
        }
        unint64_t v18 = v8 - 1;
        while (1)
        {
          unint64_t v19 = (unsigned __int8 *)(v18 + 1);
          uint64_t v39 = v18 + 1;
          uint64_t v20 = *(_DWORD **)(a1 + 40);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 32) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 24));
            uint64_t v22 = sub_188CDC8(a1 + 24, v23);
            unint64_t v19 = (unsigned __int8 *)v39;
          }
          unint64_t v18 = (char *)sub_13319DC(a3, v22, v19);
          uint64_t v39 = v18;
          if (!v18) {
            goto LABEL_66;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
            goto LABEL_59;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 80);
        if (v15) {
          goto LABEL_40;
        }
        int v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v24 = (void *)*v24;
        }
        sub_13D6A1C((uint64_t)v24);
        uint64_t v15 = v25;
        *(void *)(a1 + 80) = v25;
        goto LABEL_39;
      case 5u:
        if (v9 != 42) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 88);
        if (v15) {
          goto LABEL_40;
        }
        uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v26 = (void *)*v26;
        }
        sub_13D6A1C((uint64_t)v26);
        uint64_t v15 = v27;
        *(void *)(a1 + 88) = v27;
LABEL_39:
        uint64_t v8 = v39;
LABEL_40:
        BOOL v28 = (char *)sub_13319DC(a3, v15, (unsigned __int8 *)v8);
        goto LABEL_58;
      case 6u:
        if (v9 != 50) {
          goto LABEL_51;
        }
        unint64_t v29 = v8 - 1;
        while (1)
        {
          uint64_t v30 = (unsigned __int8 *)(v29 + 1);
          uint64_t v39 = v29 + 1;
          uint64_t v31 = *(_DWORD **)(a1 + 64);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 56), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 56) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_1479A1C(*(void *)(a1 + 48));
            uint64_t v33 = sub_188CDC8(a1 + 48, v34);
            uint64_t v30 = (unsigned __int8 *)v39;
          }
          unint64_t v29 = (char *)sub_1331A6C(a3, v33, v30);
          uint64_t v39 = v29;
          if (!v29) {
            goto LABEL_66;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 50) {
            goto LABEL_59;
          }
        }
      default:
LABEL_51:
        if (v9) {
          BOOL v35 = (v9 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v7)
          {
            uint64_t v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v39;
          }
          BOOL v28 = (char *)sub_1885AC0(v9, v36, v8, a3);
LABEL_58:
          uint64_t v39 = v28;
          if (!v28) {
            goto LABEL_66;
          }
LABEL_59:
          if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_66:
        }
          uint64_t v39 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v39;
    }
  }
}

uint64_t sub_13319DC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13743E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1331A6C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1477D50(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1331AFC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 96);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 72);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    int v4 = sub_1374B08(v10, v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      int v4 = sub_1374B08(v15, v17, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 80);
    char *v4 = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    v4[1] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      uint64_t v20 = v4 + 2;
    }
    int v4 = sub_1374B08(v18, v20, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 88);
    char *v4 = 42;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    v4[1] = v22;
    if (v22 > 0x7F) {
      uint64_t v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      uint64_t v23 = v4 + 2;
    }
    int v4 = sub_1374B08(v21, v23, a3);
  }
  int v24 = *(_DWORD *)(a1 + 56);
  if (v24)
  {
    for (int j = 0; j != v24; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 50;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      v4[1] = v27;
      if (v27 > 0x7F) {
        BOOL v28 = sub_188A9CC(v27, v4 + 1);
      }
      else {
        BOOL v28 = v4 + 2;
      }
      int v4 = sub_1477F60(v26, v28, a3);
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    uint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    uint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_1331E70(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1374EEC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14780A8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0xF) == 0) {
    goto LABEL_21;
  }
  if ((v15 & 1) == 0)
  {
    if ((v15 & 2) == 0) {
      goto LABEL_18;
    }
LABEL_24:
    uint64_t v19 = sub_1374EEC(*(void *)(a1 + 80));
    v9 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0)
    {
LABEL_19:
      if ((v15 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_25;
  }
  uint64_t v18 = sub_1374EEC(*(void *)(a1 + 72));
  v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 2) != 0) {
    goto LABEL_24;
  }
LABEL_18:
  if ((v15 & 4) == 0) {
    goto LABEL_19;
  }
LABEL_25:
  uint64_t v20 = sub_1374EEC(*(void *)(a1 + 88));
  v9 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 8) != 0) {
LABEL_20:
  }
    v9 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_21:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v21 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v9 += v22;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void *sub_1332040@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.PaymentMethodSuggestionDetails");
}

uint64_t sub_1332050(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A9A00;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_13320D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24A9A80;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

void *sub_1332154(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24A9B00;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_13321CC(uint64_t a1)
{
  if (!a1)
  {
    sub_1366088();
  }

  return sub_132272C(v3, a1, 0);
}

void *sub_1332228(uint64_t a1)
{
  if (!a1)
  {
    sub_13660F4();
  }

  return sub_1324520(v3, a1, 0);
}

uint64_t sub_1332284(uint64_t a1)
{
  if (!a1)
  {
    sub_1366160();
  }

  return sub_13253E0(v3, a1, 0);
}

uint64_t sub_13322E0(uint64_t a1)
{
  if (!a1)
  {
    sub_13661CC();
  }

  return sub_1325E44(v3, a1, 0);
}

void *sub_133233C(uint64_t a1)
{
  if (!a1)
  {
    sub_1366238();
  }

  return sub_1326CB4(v3, a1, 0);
}

uint64_t sub_1332398(uint64_t a1)
{
  if (!a1)
  {
    sub_13662A4();
  }

  return sub_1327DCC(v3, a1, 0);
}

uint64_t sub_13323F4(uint64_t a1)
{
  if (!a1)
  {
    sub_1366310();
  }

  return sub_1328E78(v3, a1, 0);
}

uint64_t sub_1332450(uint64_t a1)
{
  if (!a1)
  {
    sub_136637C();
  }

  return sub_1329DC4(v3, a1, 0);
}

uint64_t sub_13324AC(uint64_t a1)
{
  if (!a1)
  {
    sub_13663E8();
  }

  return sub_132A878(v3, a1, 0);
}

uint64_t sub_1332508(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AA000;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_133259C(uint64_t a1)
{
  if (!a1)
  {
    sub_1366454();
  }

  return sub_132C7FC(v3, a1, 0);
}

double sub_13325F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AA100;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  *(void *)(v2 + 40) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(void *)(v2 + 96) = 0;
  return result;
}

uint64_t sub_1332690(uint64_t a1)
{
  if (!a1)
  {
    sub_13664C0();
  }

  return sub_132E4AC(v3, a1, 0);
}

uint64_t sub_13326EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AA200;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_133276C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24AA280;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[5] = 0;
  result[6] = 0;
  result[4] = a1;
  return result;
}

void *sub_133280C(uint64_t a1)
{
  if (!a1)
  {
    sub_136652C();
  }

  return sub_1330954(v3, a1, 0);
}

double sub_1332868(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24AA380;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  return result;
}

BOOL sub_1332920(unsigned int a1)
{
  return a1 < 5;
}

uint64_t sub_133292C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24AA400;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_1332998(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13329C8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2533468 && *(void *)(a1 + 48))
  {
    sub_1374318();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1332A88(uint64_t a1)
{
  sub_13329C8(a1);

  operator delete();
}

uint64_t sub_1332AC0(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3) {
    uint64_t result = sub_1369E6C(*(void *)(a1 + 48));
  }
  if ((v3 & 0xE) != 0)
  {
    *(_DWORD *)(a1 + 64) = 0;
    *(void *)(a1 + 56) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_1332B34(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v33 + 2;
      }
    }
    uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_30;
        }
        v5 |= 2u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v33 = v12;
          *(_DWORD *)(a1 + 56) = v13;
          goto LABEL_40;
        }
        unsigned int v27 = (char *)sub_188C0D0((uint64_t)v8, v13);
        uint64_t v33 = v27;
        *(_DWORD *)(a1 + 56) = v28;
        if (v27) {
          goto LABEL_40;
        }
        goto LABEL_51;
      case 2u:
        if (v9 != 16) {
          goto LABEL_30;
        }
        v5 |= 4u;
        int v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v16);
          uint64_t v33 = v29;
          *(_DWORD *)(a1 + 60) = v30;
          if (!v29) {
            goto LABEL_51;
          }
        }
        else
        {
          int v15 = v8 + 2;
LABEL_18:
          uint64_t v33 = v15;
          *(_DWORD *)(a1 + 60) = v16;
        }
        goto LABEL_40;
      case 3u:
        if (v9 != 24) {
          goto LABEL_30;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          unint64_t v31 = (char *)sub_188C0D0((uint64_t)v8, v19);
          uint64_t v33 = v31;
          *(_DWORD *)(a1 + 64) = v32;
          if (!v31) {
            goto LABEL_51;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v33 = v18;
          *(_DWORD *)(a1 + 64) = v19;
        }
        goto LABEL_40;
      case 4u:
        if (v9 != 34) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v21 = *(void *)(a1 + 48);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          sub_13D6A1C((uint64_t)v22);
          uint64_t v21 = v23;
          *(void *)(a1 + 48) = v23;
          uint64_t v8 = v33;
        }
        int v24 = (char *)sub_13319DC(a3, v21, (unsigned __int8 *)v8);
        goto LABEL_39;
      default:
LABEL_30:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (v9 - 7600 > 0x18F)
          {
            if (*v7)
            {
              uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v33;
            }
            int v24 = (char *)sub_1885AC0(v9, v26, v8, a3);
          }
          else
          {
            int v24 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2533468, (uint64_t *)(a1 + 8), a3);
          }
LABEL_39:
          uint64_t v33 = v24;
          if (!v24) {
            goto LABEL_51;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_51:
        }
          uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v33;
    }
  }
}

char *sub_1332E40(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 56);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 60);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 64);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v16, v18, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_13330E8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 4) == 0)
    {
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  uint64_t v6 = sub_1374EEC(*(void *)(a1 + 48));
  v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_11:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_7:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v7 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_1333214(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = *(void *)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        sub_13D6A1C((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        unsigned int v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unsigned int v9 = &off_2534750;
      }
      sub_136A7DC(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      goto LABEL_7;
    }
LABEL_21:
    *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1333318(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_136ADBC(*(void *)(a1 + 48));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_133335C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.ServiceGap");
}

uint64_t sub_133336C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_25334B0 && *(void *)(a1 + 24))
  {
    sub_1374318();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1333424(uint64_t a1)
{
  sub_133336C(a1);

  operator delete();
}

uint64_t sub_133345C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1369E6C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_13334B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v17 = a2;
  if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
    return v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v17 + 1;
    unsigned int v7 = *v17;
    if (*v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v17 + 2;
      }
    }
    unsigned int v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      unsigned int v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        unsigned int v14 = (void *)*v14;
      }
      sub_13D6A1C((uint64_t)v14);
      uint64_t v13 = v15;
      *(void *)(a1 + 24) = v15;
      uint64_t v6 = v17;
    }
    unsigned int v12 = (char *)sub_13319DC(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    unsigned int v17 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
      return v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v17;
    }
    unsigned int v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v17;
  }
  return 0;
}

char *sub_1333610(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = sub_1374B08(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1333720(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_13337A8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      sub_13D6A1C((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2534750;
    }
    sub_136A7DC(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1333850(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_133387C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.RouteDisplayStrings.Advisory");
}

void *sub_133388C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_133391C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1366598(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_133391C(uint64_t result)
{
  if ((uint64_t (***)())result != &off_25334D0)
  {
    if (*(void *)(result + 48))
    {
      sub_1374318();
      operator delete();
    }
    if (*(void *)(result + 56))
    {
      sub_1374318();
      operator delete();
    }
    if (*(void *)(result + 64))
    {
      sub_1374318();
      operator delete();
    }
    if (*(void *)(result + 72))
    {
      sub_1374318();
      operator delete();
    }
    if (*(void *)(result + 80))
    {
      sub_1374318();
      operator delete();
    }
    if (*(void *)(result + 88))
    {
      sub_1374318();
      operator delete();
    }
    uint64_t result = *(void *)(result + 96);
    if (result)
    {
      sub_1374318();
      operator delete();
    }
  }
  return result;
}

void sub_1333A48(void *a1)
{
  sub_133388C(a1);

  operator delete();
}

uint64_t sub_1333A80(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_133345C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0x7F) == 0) {
    goto LABEL_14;
  }
  if (v5)
  {
    uint64_t result = sub_1369E6C(*(void *)(v1 + 48));
    if ((v5 & 2) == 0)
    {
LABEL_8:
      if ((v5 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = sub_1369E6C(*(void *)(v1 + 56));
  if ((v5 & 4) == 0)
  {
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = sub_1369E6C(*(void *)(v1 + 64));
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = sub_1369E6C(*(void *)(v1 + 80));
    if ((v5 & 0x20) == 0)
    {
LABEL_12:
      if ((v5 & 0x40) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = sub_1369E6C(*(void *)(v1 + 72));
  if ((v5 & 0x10) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v5 & 0x20) == 0) {
    goto LABEL_12;
  }
LABEL_23:
  uint64_t result = sub_1369E6C(*(void *)(v1 + 88));
  if ((v5 & 0x40) != 0) {
LABEL_13:
  }
    uint64_t result = sub_1369E6C(*(void *)(v1 + 96));
LABEL_14:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_1333B7C(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v35 = a2;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    return v35;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v35 + 1;
    unsigned int v8 = *v35;
    if (*v35 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v35, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v35 + 2;
      }
    }
    BOOL v35 = v7;
    switch(v8 >> 3)
    {
      case 7u:
        if (v8 != 58) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 48);
        if (v11) {
          goto LABEL_55;
        }
        unsigned int v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unsigned int v12 = (void *)*v12;
        }
        sub_13D6A1C((uint64_t)v12);
        uint64_t v11 = v13;
        *(void *)(a1 + 48) = v13;
        goto LABEL_54;
      case 8u:
        if (v8 != 66) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 56);
        if (v11) {
          goto LABEL_55;
        }
        uint64_t v14 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v14 = (void *)*v14;
        }
        sub_13D6A1C((uint64_t)v14);
        uint64_t v11 = v15;
        *(void *)(a1 + 56) = v15;
        goto LABEL_54;
      case 9u:
        if (v8 != 74) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v11 = *(void *)(a1 + 64);
        if (v11) {
          goto LABEL_55;
        }
        uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v16 = (void *)*v16;
        }
        sub_13D6A1C((uint64_t)v16);
        uint64_t v11 = v17;
        *(void *)(a1 + 64) = v17;
        goto LABEL_54;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v11 = *(void *)(a1 + 72);
        if (v11) {
          goto LABEL_55;
        }
        uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v18 = (void *)*v18;
        }
        sub_13D6A1C((uint64_t)v18);
        uint64_t v11 = v19;
        *(void *)(a1 + 72) = v19;
        goto LABEL_54;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v11 = *(void *)(a1 + 80);
        if (v11) {
          goto LABEL_55;
        }
        int v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v20 = (void *)*v20;
        }
        sub_13D6A1C((uint64_t)v20);
        uint64_t v11 = v21;
        *(void *)(a1 + 80) = v21;
        goto LABEL_54;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v11 = *(void *)(a1 + 88);
        if (v11) {
          goto LABEL_55;
        }
        uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v22 = (void *)*v22;
        }
        sub_13D6A1C((uint64_t)v22);
        uint64_t v11 = v23;
        *(void *)(a1 + 88) = v23;
        goto LABEL_54;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_59;
        }
        uint64_t v24 = v7 - 1;
        while (1)
        {
          BOOL v25 = (unsigned __int8 *)(v24 + 1);
          BOOL v35 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_134DD78(*(void *)(a1 + 24));
            uint64_t v28 = sub_188CDC8(a1 + 24, (uint64_t)v29);
            BOOL v25 = (unsigned __int8 *)v35;
          }
          uint64_t v24 = sub_1333F60(a3, v28, v25);
          BOOL v35 = v24;
          if (!v24) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 114) {
            goto LABEL_57;
          }
        }
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v11 = *(void *)(a1 + 96);
        if (v11) {
          goto LABEL_55;
        }
        int v30 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v30 = (void *)*v30;
        }
        sub_13D6A1C((uint64_t)v30);
        uint64_t v11 = v31;
        *(void *)(a1 + 96) = v31;
LABEL_54:
        char v7 = v35;
LABEL_55:
        int v32 = (char *)sub_13319DC(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_56;
      default:
LABEL_59:
        if (v8) {
          BOOL v33 = (v8 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v6)
          {
            uint64_t v34 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = v35;
          }
          int v32 = (char *)sub_1885AC0(v8, v34, v7, a3);
LABEL_56:
          BOOL v35 = v32;
          if (!v32) {
            return 0;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
            return v35;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v35;
    }
  }
}

char *sub_1333F60(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13334B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1333FF0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 58;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  char *v4 = 66;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  uint64_t v4 = sub_1374B08(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_20:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 64);
  char *v4 = 74;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_1374B08(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 72);
  char *v4 = 82;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_1374B08(v16, v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 80);
  char *v4 = 90;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  uint64_t v4 = sub_1374B08(v19, v21, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_38:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 88);
    char *v4 = 106;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      uint64_t v24 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v22, v24, a3);
  }
LABEL_44:
  int v25 = *(_DWORD *)(a1 + 32);
  if (v25)
  {
    for (int i = 0; i != v25; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 114;
      unsigned int v28 = *(_DWORD *)(v27 + 20);
      v4[1] = v28;
      if (v28 > 0x7F) {
        uint64_t v29 = sub_188A9CC(v28, v4 + 1);
      }
      else {
        uint64_t v29 = v4 + 2;
      }
      uint64_t v4 = sub_1333610(v27, (unint64_t)v29, a3);
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v30 = *(void *)(a1 + 96);
    char *v4 = 122;
    unsigned int v31 = *(_DWORD *)(v30 + 20);
    v4[1] = v31;
    if (v31 > 0x7F) {
      int v32 = sub_188A9CC(v31, v4 + 1);
    }
    else {
      int v32 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v30, v32, a3);
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if ((v33 & 1) == 0) {
    return v4;
  }
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v35 + 31) < 0)
  {
    uint64_t v36 = *(void **)(v35 + 8);
    uint64_t v37 = *(void *)(v35 + 16);
  }
  else
  {
    uint64_t v36 = (void *)(v35 + 8);
    LODWORD(v37) = *(unsigned __int8 *)(v35 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v37)
  {
    uint64_t v38 = (int)v37;
    memcpy(v4, v36, (int)v37);
    v4 += v38;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v36, v37, v4);
}

uint64_t sub_133440C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1333720(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x7F) == 0) {
    goto LABEL_18;
  }
  if (v8)
  {
    uint64_t v12 = sub_1374EEC(*(void *)(a1 + 48));
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_22;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v13 = sub_1374EEC(*(void *)(a1 + 56));
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v14 = sub_1374EEC(*(void *)(a1 + 64));
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
LABEL_24:
    uint64_t v16 = sub_1374EEC(*(void *)(a1 + 80));
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x20) == 0)
    {
LABEL_16:
      if ((v8 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t v15 = sub_1374EEC(*(void *)(a1 + 72));
  v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) != 0) {
    goto LABEL_24;
  }
LABEL_15:
  if ((v8 & 0x20) == 0) {
    goto LABEL_16;
  }
LABEL_25:
  uint64_t v17 = sub_1374EEC(*(void *)(a1 + 88));
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x40) != 0)
  {
LABEL_17:
    uint64_t v9 = sub_1374EEC(*(void *)(a1 + 96));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_18:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v18 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v2 += v19;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1334634(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1367518((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x7F) == 0) {
    goto LABEL_69;
  }
  if (v9)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      sub_13D6A1C((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v13 = &off_2534750;
    }
    sub_136A7DC(v10, (uint64_t)v13);
    if ((v9 & 2) == 0)
    {
LABEL_7:
      if ((v9 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_29;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_7;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v14 = *(void *)(a1 + 56);
  if (!v14)
  {
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (void *)*v16;
    }
    sub_13D6A1C((uint64_t)v16);
    *(void *)(a1 + 56) = v14;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v17 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v17 = &off_2534750;
  }
  sub_136A7DC(v14, (uint64_t)v17);
  if ((v9 & 4) == 0)
  {
LABEL_8:
    if ((v9 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_37;
  }
LABEL_29:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v18 = *(void *)(a1 + 64);
  if (!v18)
  {
    uint64_t v19 = *(void *)(a1 + 8);
    unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      unsigned int v20 = (void *)*v20;
    }
    sub_13D6A1C((uint64_t)v20);
    *(void *)(a1 + 64) = v18;
  }
  if (*(void *)(a2 + 64)) {
    uint64_t v21 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    uint64_t v21 = &off_2534750;
  }
  sub_136A7DC(v18, (uint64_t)v21);
  if ((v9 & 8) == 0)
  {
LABEL_9:
    if ((v9 & 0x10) == 0) {
      goto LABEL_10;
    }
LABEL_45:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v26 = *(void *)(a1 + 80);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      unsigned int v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        unsigned int v28 = (void *)*v28;
      }
      sub_13D6A1C((uint64_t)v28);
      *(void *)(a1 + 80) = v26;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v29 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v29 = &off_2534750;
    }
    sub_136A7DC(v26, (uint64_t)v29);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_69;
      }
      goto LABEL_61;
    }
    goto LABEL_53;
  }
LABEL_37:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v22 = *(void *)(a1 + 72);
  if (!v22)
  {
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (void *)*v24;
    }
    sub_13D6A1C((uint64_t)v24);
    *(void *)(a1 + 72) = v22;
  }
  if (*(void *)(a2 + 72)) {
    int v25 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    int v25 = &off_2534750;
  }
  sub_136A7DC(v22, (uint64_t)v25);
  if ((v9 & 0x10) != 0) {
    goto LABEL_45;
  }
LABEL_10:
  if ((v9 & 0x20) == 0) {
    goto LABEL_11;
  }
LABEL_53:
  *(_DWORD *)(a1 + 16) |= 0x20u;
  uint64_t v30 = *(void *)(a1 + 88);
  if (!v30)
  {
    uint64_t v31 = *(void *)(a1 + 8);
    int v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
    if (v31) {
      int v32 = (void *)*v32;
    }
    sub_13D6A1C((uint64_t)v32);
    *(void *)(a1 + 88) = v30;
  }
  if (*(void *)(a2 + 88)) {
    uint64_t v33 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    uint64_t v33 = &off_2534750;
  }
  sub_136A7DC(v30, (uint64_t)v33);
  if ((v9 & 0x40) != 0)
  {
LABEL_61:
    *(_DWORD *)(a1 + 16) |= 0x40u;
    uint64_t v34 = *(void *)(a1 + 96);
    if (!v34)
    {
      uint64_t v35 = *(void *)(a1 + 8);
      uint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
      if (v35) {
        uint64_t v36 = (void *)*v36;
      }
      sub_13D6A1C((uint64_t)v36);
      *(void *)(a1 + 96) = v34;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v37 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v37 = &off_2534750;
    }
    sub_136A7DC(v34, (uint64_t)v37);
  }
LABEL_69:
  uint64_t v38 = *(void *)(a2 + 8);
  if (v38)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v38 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1334910(uint64_t a1)
{
  uint64_t result = sub_13349CC(a1 + 24);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 16);
    if (v3)
    {
      uint64_t result = sub_136ADBC(*(void *)(a1 + 48));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 16);
    }
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_136ADBC(*(void *)(a1 + 56));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 16);
    }
    if ((v3 & 4) != 0)
    {
      uint64_t result = sub_136ADBC(*(void *)(a1 + 64));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 16);
    }
    if ((v3 & 8) != 0)
    {
      uint64_t result = sub_136ADBC(*(void *)(a1 + 72));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 16);
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t result = sub_136ADBC(*(void *)(a1 + 80));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 16);
    }
    if ((v3 & 0x20) != 0)
    {
      uint64_t result = sub_136ADBC(*(void *)(a1 + 88));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 16);
    }
    if ((v3 & 0x40) == 0) {
      return 1;
    }
    uint64_t result = sub_136ADBC(*(void *)(a1 + 96));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_13349CC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_136ADBC(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_1334A3C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.RouteDisplayStrings");
}

uint64_t sub_1334A4C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2533538 && *(void *)(a1 + 24))
  {
    sub_1374318();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1334B04(uint64_t a1)
{
  sub_1334A4C(a1);

  operator delete();
}

uint64_t sub_1334B3C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1369E6C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1334B9C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v24 + 2;
      }
    }
    uint64_t v24 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      uint64_t v24 = v19;
      *(_DWORD *)(a1 + 32) = v20;
      goto LABEL_32;
    }
    uint64_t v22 = (char *)sub_188C0D0((uint64_t)v8, v20);
    uint64_t v24 = v22;
    *(_DWORD *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_39;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 24);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v17 = (void *)*v17;
      }
      sub_13D6A1C((uint64_t)v17);
      uint64_t v16 = v18;
      *(void *)(a1 + 24) = v18;
      int v8 = v24;
    }
    uint64_t v15 = (char *)sub_13319DC(a3, v16, (unsigned __int8 *)v8);
LABEL_26:
    uint64_t v24 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v24;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_26;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

char *sub_1334D80(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    int v4 = sub_1374B08(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1334F0C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1334FD0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        sub_13D6A1C((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v8 = &off_2534750;
      }
      sub_136A7DC(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13350A0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13350CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.SuggestedRoute.SegmentArtworkSet.ClusterArtworkItem");
}

void *sub_13350DC(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1366618(a1 + 4);
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1335164(void *a1)
{
  sub_13350DC(a1);

  operator delete();
}

uint64_t sub_133519C(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 16) = 0;
  uint64_t v2 = *(unsigned int *)(result + 40);
  if ((int)v2 >= 1)
  {
    char v3 = (uint64_t *)(*(void *)(result + 48) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1334B3C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 40) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_133521C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v17 = v7 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          uint64_t v26 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 48);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 40), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 40) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_134DE94(*(void *)(a1 + 32));
            uint64_t v21 = sub_188CDC8(a1 + 32, v22);
            uint64_t v18 = (unsigned __int8 *)v26;
          }
          uint64_t v17 = sub_13354BC(a3, v21, v18);
          uint64_t v26 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_44;
          }
        }
      }
    }
    else if (v8 >> 3 == 1)
    {
      if (v8 == 8)
      {
        unsigned int v11 = v7 - 1;
        while (1)
        {
          uint64_t v26 = v11 + 1;
          int v12 = v11[1];
          if (v11[1] < 0)
          {
            int v13 = v12 + (v11[2] << 7);
            int v12 = v13 - 128;
            if (v11[2] < 0)
            {
              unsigned int v11 = (char *)sub_188C0D0((uint64_t)(v11 + 1), v13 - 128);
              int v12 = v14;
            }
            else
            {
              v11 += 3;
            }
          }
          else
          {
            v11 += 2;
          }
          uint64_t v26 = v11;
          uint64_t v15 = *(unsigned int *)(a1 + 16);
          if (v15 == *(_DWORD *)(a1 + 20))
          {
            int v16 = v15 + 1;
            sub_188C80C((unsigned int *)(a1 + 16), v15 + 1);
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v15) = v12;
            unsigned int v11 = v26;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v15) = v12;
            int v16 = v15 + 1;
          }
          *(_DWORD *)(a1 + 16) = v16;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 8) {
            goto LABEL_44;
          }
        }
      }
      if (v8 == 10)
      {
        int v23 = sub_188C2CC((unsigned int *)(a1 + 16), (unsigned __int8 *)v7, (uint64_t)a3);
        goto LABEL_43;
      }
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v26;
    }
    int v23 = sub_1885AC0(v8, v25, v7, a3);
LABEL_43:
    uint64_t v26 = (char *)v23;
    if (!v23) {
      return 0;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_13354BC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1334B9C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_133554C(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v8 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unsigned int v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_1334D80(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_133572C(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 16));
  uint64_t v3 = *(int *)(a1 + 40);
  uint64_t v4 = v2 + *(unsigned int *)(a1 + 16) + v3;
  uint64_t v5 = *(void *)(a1 + 48);
  if (v5) {
    uint64_t v6 = (uint64_t *)(v5 + 8);
  }
  else {
    uint64_t v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1334F0C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 56) = v4;
  return v4;
}

void sub_13357E8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 16);
    uint64_t v6 = *(int *)(a1 + 16);
    sub_188C80C((unsigned int *)(a1 + 16), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 24);
    *v5 += *(_DWORD *)(a2 + 16);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 16));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 48) + 8);
    uint64_t v10 = (uint64_t *)sub_188CCE4(a1 + 32, *(_DWORD *)(a2 + 40));
    sub_13675A4((uint64_t *)(a1 + 32), v10, v9, v8, **(_DWORD **)(a1 + 48) - *(_DWORD *)(a1 + 40));
    int v11 = *(_DWORD *)(a1 + 40) + v8;
    *(_DWORD *)(a1 + 40) = v11;
    unint64_t v12 = *(int **)(a1 + 48);
    if (*v12 < v11) {
      *unint64_t v12 = v11;
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13358FC(uint64_t a1)
{
  return sub_13349CC(a1 + 32);
}

void *sub_1335904@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.SuggestedRoute.SegmentArtworkSet.ClusterArtworkSet");
}

void *sub_1335914(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1366698(a1 + 4);
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_133599C(void *a1)
{
  sub_1335914(a1);

  operator delete();
}

uint64_t sub_13359D4(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 16) = 0;
  uint64_t v2 = *(unsigned int *)(result + 40);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 48) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_133519C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 40) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_1335A54(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v17 = v7 - 1;
        while (1)
        {
          unint64_t v18 = (unsigned __int8 *)(v17 + 1);
          uint64_t v26 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 48);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 40), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 40) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_134DF10(*(void *)(a1 + 32));
            uint64_t v21 = sub_188CDC8(a1 + 32, v22);
            unint64_t v18 = (unsigned __int8 *)v26;
          }
          uint64_t v17 = sub_1335CF4(a3, v21, v18);
          uint64_t v26 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_44;
          }
        }
      }
    }
    else if (v8 >> 3 == 1)
    {
      if (v8 == 8)
      {
        int v11 = v7 - 1;
        while (1)
        {
          uint64_t v26 = v11 + 1;
          int v12 = v11[1];
          if (v11[1] < 0)
          {
            int v13 = v12 + (v11[2] << 7);
            int v12 = v13 - 128;
            if (v11[2] < 0)
            {
              int v11 = (char *)sub_188C0D0((uint64_t)(v11 + 1), v13 - 128);
              int v12 = v14;
            }
            else
            {
              v11 += 3;
            }
          }
          else
          {
            v11 += 2;
          }
          uint64_t v26 = v11;
          uint64_t v15 = *(unsigned int *)(a1 + 16);
          if (v15 == *(_DWORD *)(a1 + 20))
          {
            int v16 = v15 + 1;
            sub_188C80C((unsigned int *)(a1 + 16), v15 + 1);
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v15) = v12;
            int v11 = v26;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v15) = v12;
            int v16 = v15 + 1;
          }
          *(_DWORD *)(a1 + 16) = v16;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 8) {
            goto LABEL_44;
          }
        }
      }
      if (v8 == 10)
      {
        int v23 = sub_188C2CC((unsigned int *)(a1 + 16), (unsigned __int8 *)v7, (uint64_t)a3);
        goto LABEL_43;
      }
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v26;
    }
    int v23 = sub_1885AC0(v8, v25, v7, a3);
LABEL_43:
    uint64_t v26 = (char *)v23;
    if (!v23) {
      return 0;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_1335CF4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_133521C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1335D84(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v8 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unsigned int v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 56);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_133554C(v13, v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_1335F64(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 16));
  uint64_t v3 = *(int *)(a1 + 40);
  uint64_t v4 = v2 + *(unsigned int *)(a1 + 16) + v3;
  uint64_t v5 = *(void *)(a1 + 48);
  if (v5) {
    uint64_t v6 = (uint64_t *)(v5 + 8);
  }
  else {
    uint64_t v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_133572C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 56) = v4;
  return v4;
}

void sub_1336020(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 16);
    uint64_t v6 = *(int *)(a1 + 16);
    sub_188C80C((unsigned int *)(a1 + 16), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 24);
    *v5 += *(_DWORD *)(a2 + 16);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 16));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 48) + 8);
    uint64_t v10 = (uint64_t *)sub_188CCE4(a1 + 32, *(_DWORD *)(a2 + 40));
    sub_1367630((uint64_t *)(a1 + 32), v10, v9, v8, **(_DWORD **)(a1 + 48) - *(_DWORD *)(a1 + 40));
    int v11 = *(_DWORD *)(a1 + 40) + v8;
    *(_DWORD *)(a1 + 40) = v11;
    unint64_t v12 = *(int **)(a1 + 48);
    if (*v12 < v11) {
      *unint64_t v12 = v11;
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1336134(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 40);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_13349CC(*(void *)(*(void *)(a1 + 48) + 8 * v2) + 32);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1336190@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.SuggestedRoute.SegmentArtworkSet");
}

void *sub_13361A0(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24AA700;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = a2;
  a1[8] = 0;
  return a1;
}

void sub_133620C(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_133623C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13362C0(void *a1)
{
  sub_133623C(a1);

  operator delete();
}

unsigned char *sub_13362F8(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 60) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1336354(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v21 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v21 + 1;
    unsigned int v9 = *v21;
    if (*v21 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v21, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v21 + 2;
      }
    }
    uint64_t v21 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_22;
    }
    uint64_t v13 = v8 + 1;
    int v14 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_16;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v8 + 2;
LABEL_16:
      uint64_t v21 = v13;
      *(_DWORD *)(a1 + 68) = v14;
      int v5 = 1;
      goto LABEL_32;
    }
    uint64_t v16 = (char *)sub_188C0D0((uint64_t)v8, v14);
    uint64_t v21 = v16;
    *(_DWORD *)(a1 + 68) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_37;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1)
  {
    if (v9 == 10)
    {
      unint64_t v12 = sub_188C2CC((unsigned int *)(a1 + 48), (unsigned __int8 *)v8, (uint64_t)a3);
      goto LABEL_31;
    }
    if (v9 == 8)
    {
      int v18 = sub_110DAD8((uint64_t *)&v21);
      sub_1182598(a1, v18);
      if (!v21) {
        goto LABEL_37;
      }
      goto LABEL_32;
    }
  }
LABEL_22:
  if (v9) {
    BOOL v19 = (v9 & 7) == 4;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19)
  {
    if (v9 - 7600 > 0x18F)
    {
      if (*v7)
      {
        uint64_t v20 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v8 = v21;
      }
      unint64_t v12 = sub_1885AC0(v9, v20, v8, a3);
    }
    else
    {
      unint64_t v12 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2533560, (uint64_t *)(a1 + 8), a3);
    }
LABEL_31:
    uint64_t v21 = (char *)v12;
    if (!v12) {
      goto LABEL_37;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_37:
  uint64_t v21 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v21;
}

char *sub_1336584(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  unsigned int v6 = *(_DWORD *)(a1 + 64);
  if ((int)v6 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char *v4 = 10;
    uint64_t v7 = v4 + 1;
    if (v6 >= 0x80)
    {
      do
      {
        *v7++ = v6 | 0x80;
        unsigned int v22 = v6 >> 14;
        v6 >>= 7;
      }
      while (v22);
      char v4 = v7 - 1;
    }
    v4 += 2;
    *uint64_t v7 = v6;
    int v8 = *(unsigned int **)(a1 + 56);
    unsigned int v9 = &v8[*(int *)(a1 + 48)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v11 = *v8++;
      unsigned int v10 = v11;
      char *v4 = v11;
      if (v11 > 0x7F)
      {
        char *v4 = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        v4[1] = v10 >> 7;
        v4 += 2;
        if (v10 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v8 < v9);
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v14 = *(_DWORD *)(a1 + 68);
    char *v4 = 16;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unsigned int v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v21)
  {
    uint64_t v23 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_13367C8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = sub_188D4F0((unsigned int *)(a1 + 48));
  if (v3)
  {
    int v4 = v3;
    if ((v3 & 0x80000000) != 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v5;
  }
  else
  {
    int v4 = 0;
  }
  *(_DWORD *)(a1 + 64) = v4;
  uint64_t result = v2 + v3;
  if (*(unsigned char *)(a1 + 40)) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_133689C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  if (*(unsigned char *)(a2 + 40))
  {
    int v8 = *(_DWORD *)(a2 + 68);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(_DWORD *)(a1 + 68) = v8;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1336968(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_1336970@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.SuggestedRoute.SectionOption");
}

uint64_t sub_1336980(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AA780;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(_DWORD *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = &qword_2550250;
  *(unsigned char *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 156) = -1;
  return a1;
}

void sub_1336A28(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1336A58(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 144);
  if (*(uint64_t **)(a1 + 144) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1366718((void *)(a1 + 120));
  sub_1889DA8(a1 + 96);
  sub_1889DA8(a1 + 72);
  sub_1889DA8(a1 + 48);
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1336B24(uint64_t a1)
{
  sub_1336A58(a1);

  operator delete();
}

uint64_t sub_1336B5C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 96) = 0;
  uint64_t v3 = *(unsigned int *)(a1 + 128);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_133AFDC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 128) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    unint64_t v7 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
  if ((v6 & 6) != 0)
  {
    *(unsigned char *)(a1 + 152) = 0;
    *(_DWORD *)(a1 + 156) = -1;
  }
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = a1 + 8;
  *(_DWORD *)(v8 + 32) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_1336C34(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v38 + 1);
    unsigned int v9 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v38 + 2);
      }
    }
    *(void *)uint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 == 10)
        {
          unsigned int v12 = (unsigned int *)(a1 + 48);
          goto LABEL_35;
        }
        if (v9 != 8) {
          goto LABEL_56;
        }
        int v33 = sub_110DAD8((uint64_t *)v38);
        sub_1182598(a1, v33);
        goto LABEL_54;
      case 2u:
        if (v9 != 16) {
          goto LABEL_56;
        }
        v5 |= 4u;
        uint64_t v20 = (char *)(v8 + 1);
        LODWORD(v19) = *v8;
        if ((v19 & 0x80) == 0) {
          goto LABEL_26;
        }
        int v21 = *v20;
        uint64_t v19 = v19 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v29 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v38 = v29;
          *(_DWORD *)(a1 + 156) = v30;
          if (!v29) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v20 = (char *)(v8 + 2);
LABEL_26:
          *(void *)uint64_t v38 = v20;
          *(_DWORD *)(a1 + 156) = v19;
        }
        goto LABEL_37;
      case 3u:
        if (v9 != 26) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v23 = (uint64_t *)*v23;
        }
        uint64_t v24 = (std::string *)sub_1880F84((void *)(a1 + 144), v23);
        int v25 = (void *)sub_188C244(v24, *(char **)v38, (uint64_t)a3);
        goto LABEL_36;
      case 4u:
        if (v9 == 34)
        {
          unsigned int v12 = (unsigned int *)(a1 + 72);
LABEL_35:
          int v25 = sub_188C2CC(v12, v8, (uint64_t)a3);
          goto LABEL_36;
        }
        if (v9 != 32) {
          goto LABEL_56;
        }
        int v34 = sub_110DAD8((uint64_t *)v38);
        sub_133704C(a1, v34);
        goto LABEL_54;
      case 5u:
        if (v9 == 42)
        {
          unsigned int v12 = (unsigned int *)(a1 + 96);
          goto LABEL_35;
        }
        if (v9 == 40)
        {
          int v35 = sub_110DAD8((uint64_t *)v38);
          sub_13370BC(a1, v35);
LABEL_54:
          if (!*(void *)v38) {
            goto LABEL_68;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_56:
        if (v9) {
          BOOL v36 = (v9 & 7) == 4;
        }
        else {
          BOOL v36 = 1;
        }
        if (!v36)
        {
          if (v9 - 7600 > 0x18F)
          {
            if (*v7)
            {
              uint64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v38;
            }
            int v25 = sub_1885AC0(v9, v37, (char *)v8, a3);
          }
          else
          {
            int v25 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_25335A8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_36:
          *(void *)uint64_t v38 = v25;
          if (!v25) {
            goto LABEL_68;
          }
          goto LABEL_37;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_68:
        }
          *(void *)uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v38;
      case 6u:
        if (v9 != 48) {
          goto LABEL_56;
        }
        v5 |= 2u;
        uint64_t v26 = (char *)(v8 + 1);
        uint64_t v27 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v27);
          *(void *)uint64_t v38 = v31;
          *(unsigned char *)(a1 + 152) = v32 != 0;
          if (!v31) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v26 = (char *)(v8 + 2);
LABEL_43:
          *(void *)uint64_t v38 = v26;
          *(unsigned char *)(a1 + 152) = v27 != 0;
        }
        goto LABEL_37;
      default:
        if (v9 >> 3 != 22 || v9 != 178) {
          goto LABEL_56;
        }
        unsigned int v13 = v8 - 2;
        while (1)
        {
          unsigned int v14 = v13 + 2;
          *(void *)uint64_t v38 = v13 + 2;
          unsigned int v15 = *(_DWORD **)(a1 + 136);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 128), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 128) = v16 + 1;
            uint64_t v17 = *(void *)&v15[2 * v16 + 2];
          }
          else
          {
            int v18 = sub_134E320(*(void *)(a1 + 120));
            uint64_t v17 = sub_188CDC8(a1 + 120, (uint64_t)v18);
            unsigned int v14 = *(unsigned __int8 **)v38;
          }
          unsigned int v13 = (unsigned __int8 *)sub_133712C(a3, v17, v14);
          *(void *)uint64_t v38 = v13;
          if (!v13) {
            goto LABEL_68;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *(_WORD *)v13 != 434) {
            goto LABEL_37;
          }
        }
    }
  }
}

void sub_133704C(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 72);
  int v4 = (_DWORD *)(a1 + 72);
  if (v5 == *(_DWORD *)(a1 + 76))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 72), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 80) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 80) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_13370BC(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 96);
  int v4 = (_DWORD *)(a1 + 96);
  if (v5 == *(_DWORD *)(a1 + 100))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 96), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 104) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 104) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

uint64_t sub_133712C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_133B0C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13371BC(uint64_t a1, char *a2, void *a3)
{
  int v4 = a2;
  unsigned int v6 = *(_DWORD *)(a1 + 64);
  if ((int)v6 >= 1)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char *v4 = 10;
    int v7 = v4 + 1;
    if (v6 >= 0x80)
    {
      do
      {
        *v7++ = v6 | 0x80;
        unsigned int v45 = v6 >> 14;
        v6 >>= 7;
      }
      while (v45);
      int v4 = v7 - 1;
    }
    v4 += 2;
    *int v7 = v6;
    uint64_t v8 = *(unsigned int **)(a1 + 56);
    unsigned int v9 = &v8[*(int *)(a1 + 48)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v11 = *v8++;
      unsigned int v10 = v11;
      char *v4 = v11;
      if (v11 > 0x7F)
      {
        char *v4 = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        v4[1] = v10 >> 7;
        v4 += 2;
        if (v10 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v8 < v9);
  }
  int v14 = *(_DWORD *)(a1 + 40);
  if ((v14 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 156);
    char *v4 = 16;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v14) {
    int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  unsigned int v18 = *(_DWORD *)(a1 + 88);
  if ((int)v18 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char *v4 = 34;
    uint64_t v19 = v4 + 1;
    if (v18 >= 0x80)
    {
      do
      {
        *v19++ = v18 | 0x80;
        unsigned int v46 = v18 >> 14;
        v18 >>= 7;
      }
      while (v46);
      int v4 = v19 - 1;
    }
    v4 += 2;
    *uint64_t v19 = v18;
    uint64_t v20 = *(unsigned int **)(a1 + 80);
    int v21 = &v20[*(int *)(a1 + 72)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v23 = *v20++;
      unsigned int v22 = v23;
      char *v4 = v23;
      if (v23 > 0x7F)
      {
        char *v4 = v22 | 0x80;
        unsigned int v24 = v22 >> 7;
        v4[1] = v22 >> 7;
        v4 += 2;
        if (v22 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v25 = v24 >> 14;
            v24 >>= 7;
            *v4++ = v24;
          }
          while (v25);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v20 < v21);
  }
  unsigned int v26 = *(_DWORD *)(a1 + 112);
  if ((int)v26 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char *v4 = 42;
    uint64_t v27 = v4 + 1;
    if (v26 >= 0x80)
    {
      do
      {
        *v27++ = v26 | 0x80;
        unsigned int v47 = v26 >> 14;
        v26 >>= 7;
      }
      while (v47);
      int v4 = v27 - 1;
    }
    v4 += 2;
    *uint64_t v27 = v26;
    int v28 = *(unsigned int **)(a1 + 104);
    uint64_t v29 = &v28[*(int *)(a1 + 96)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v31 = *v28++;
      unsigned int v30 = v31;
      char *v4 = v31;
      if (v31 > 0x7F)
      {
        char *v4 = v30 | 0x80;
        unsigned int v32 = v30 >> 7;
        v4[1] = v30 >> 7;
        v4 += 2;
        if (v30 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v33 = v32 >> 14;
            v32 >>= 7;
            *v4++ = v32;
          }
          while (v33);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v28 < v29);
  }
  if ((v14 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v34 = *(unsigned char *)(a1 + 152);
    char *v4 = 48;
    v4[1] = v34;
    v4 += 2;
  }
  int v35 = *(_DWORD *)(a1 + 128);
  if (v35)
  {
    for (int i = 0; i != v35; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v37 = *(void *)(*(void *)(a1 + 136) + 8 * i + 8);
      *(_WORD *)int v4 = 434;
      unsigned int v38 = *(_DWORD *)(v37 + 20);
      v4[2] = v38;
      if (v38 > 0x7F) {
        uint64_t v39 = sub_188A9CC(v38, v4 + 2);
      }
      else {
        uint64_t v39 = v4 + 3;
      }
      int v4 = sub_133B39C(v37, v39, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v40 = *(void *)(a1 + 8);
  if ((v40 & 1) == 0) {
    return v4;
  }
  unint64_t v42 = v40 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v42 + 31) < 0)
  {
    uint64_t v43 = *(void **)(v42 + 8);
    uint64_t v44 = *(void *)(v42 + 16);
  }
  else
  {
    uint64_t v43 = (void *)(v42 + 8);
    LODWORD(v44) = *(unsigned __int8 *)(v42 + 31);
  }
  if (*a3 - (void)v4 >= (int)v44)
  {
    uint64_t v48 = (int)v44;
    memcpy(v4, v43, (int)v44);
    v4 += v48;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v43, v44, v4);
}

uint64_t sub_13376C0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = sub_188D4F0((unsigned int *)(a1 + 48));
  if (v3)
  {
    int v4 = v3;
    if ((v3 & 0x80000000) != 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v5;
  }
  else
  {
    int v4 = 0;
  }
  *(_DWORD *)(a1 + 64) = v4;
  uint64_t v6 = v2 + v3;
  uint64_t v7 = sub_188D4F0((unsigned int *)(a1 + 72));
  if (v7)
  {
    int v8 = v7;
    if ((v7 & 0x80000000) != 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v6 += v9;
  }
  else
  {
    int v8 = 0;
  }
  *(_DWORD *)(a1 + 88) = v8;
  uint64_t v10 = v6 + v7;
  uint64_t v11 = sub_188D4F0((unsigned int *)(a1 + 96));
  if (v11)
  {
    int v12 = v11;
    if ((v11 & 0x80000000) != 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v10 += v13;
  }
  else
  {
    int v12 = 0;
  }
  *(_DWORD *)(a1 + 112) = v12;
  uint64_t v14 = *(int *)(a1 + 128);
  uint64_t v15 = v10 + v11 + 2 * v14;
  uint64_t v16 = *(void *)(a1 + 136);
  if (v16) {
    unint64_t v17 = (uint64_t *)(v16 + 8);
  }
  else {
    unint64_t v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = sub_133B524(v19);
      v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      v18 -= 8;
    }
    while (v18);
  }
  int v21 = *(_DWORD *)(a1 + 40);
  if ((v21 & 7) != 0)
  {
    if (v21)
    {
      unint64_t v22 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
      uint64_t v24 = *(void *)(v22 + 8);
      if ((v23 & 0x80u) == 0) {
        uint64_t v24 = v23;
      }
      v15 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v21 & 2) != 0) {
      v15 += 2;
    }
    if ((v21 & 4) != 0)
    {
      int v25 = *(_DWORD *)(a1 + 156);
      uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v25 >= 0) {
        uint64_t v27 = v26;
      }
      else {
        uint64_t v27 = 11;
      }
      v15 += v27;
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if (v28)
  {
    unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v30 + 31) < 0) {
      uint64_t v31 = *(void *)(v30 + 16);
    }
    else {
      uint64_t v31 = *(unsigned __int8 *)(v30 + 31);
    }
    v15 += v31;
  }
  *(_DWORD *)(a1 + 44) = v15;
  return v15;
}

void sub_13378EC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 72);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 72);
    sub_188C80C((unsigned int *)(a1 + 72), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  int v11 = *(_DWORD *)(a2 + 96);
  if (v11)
  {
    uint64_t v12 = *(int *)(a1 + 96);
    sub_188C80C((unsigned int *)(a1 + 96), v12 + v11);
    uint64_t v13 = *(void *)(a1 + 104);
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
    memcpy((void *)(v13 + 4 * v12), *(const void **)(a2 + 104), 4 * *(int *)(a2 + 96));
  }
  int v14 = *(_DWORD *)(a2 + 128);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_13676BC((std::string *)(a1 + 120), v16, v15, v14, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v17 = *(_DWORD *)(a1 + 128) + v14;
    *(_DWORD *)(a1 + 128) = v17;
    uint64_t v18 = *(int **)(a1 + 136);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 40);
  if ((v19 & 7) != 0)
  {
    if (v19)
    {
      int v21 = (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      sub_1881DF4((std::string **)(a1 + 144), v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0)
        {
LABEL_15:
          *(_DWORD *)(a1 + 40) |= v19;
          goto LABEL_16;
        }
LABEL_14:
        *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
        goto LABEL_15;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    if ((v19 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1337B04(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_1337B0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.SuggestedRoute.Section");
}

void *sub_1337B1C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1337B90(void *a1)
{
  sub_1337B1C(a1);

  operator delete();
}

uint64_t sub_1337BC8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1337BE0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v14 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
    goto LABEL_22;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v14 + 1;
    unsigned int v8 = *v14;
    if (*v14 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v14, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v14 + 2;
      }
    }
    int v14 = v7;
    if (v8 == 9)
    {
      *(void *)(a1 + 24) = *(void *)v7;
      int v14 = v7 + 8;
      int v5 = 1;
      goto LABEL_17;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v14;
    }
    int v14 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v14) {
      goto LABEL_23;
    }
LABEL_17:
    if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
      goto LABEL_22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_22;
  }
LABEL_23:
  int v14 = 0;
LABEL_22:
  *(_DWORD *)(a1 + 16) |= v5;
  return v14;
}

_OWORD *sub_1337D20(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *(unsigned char *)int v4 = 9;
    *(void *)((char *)v4 + 1) = v6;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    return (_OWORD *)((char *)v4 + v12);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1337E04(uint64_t a1)
{
  uint64_t v1 = 9;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1337E4C()
{
  return 1;
}

void *sub_1337E54@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.SuggestedRoute.EngineDebugData");
}

uint64_t sub_1337E64(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AA880;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = a2;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = a2;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = &qword_2550250;
  *(void *)(a1 + 213) = 0;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  return a1;
}

void sub_1337F08(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1337F38(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1337FFC((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1366918(a1 + 17);
  sub_1366898(a1 + 14);
  sub_1889DA8((uint64_t)(a1 + 12));
  sub_1366818(a1 + 9);
  sub_1366798(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1337FFC(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 160);
  uint64_t result = (void ***)(a1 + 160);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2533668)
  {
    uint64_t v4 = *(void *)(a1 + 168);
    if (v4)
    {
      sub_1329FD8(v4);
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 176);
    if (v5)
    {
      sub_133388C(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 184);
    if (v6)
    {
      sub_1337B1C(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 192);
    if (result)
    {
      sub_139E068();
      operator delete();
    }
  }
  return result;
}

void sub_13380E0(void *a1)
{
  sub_1337F38(a1);

  operator delete();
}

uint64_t sub_1338118(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1345E0C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_13359D4(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  *(_DWORD *)(a1 + 96) = 0;
  uint64_t v9 = *(unsigned int *)(a1 + 120);
  if ((int)v9 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 128) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = (uint64_t)sub_13362F8(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 120) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 144);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 152) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_1336B5C(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 144) = 0;
  }
  int v15 = *(_DWORD *)(a1 + 40);
  if ((v15 & 0x1F) != 0)
  {
    if ((v15 & 1) == 0)
    {
      if ((v15 & 2) == 0) {
        goto LABEL_20;
      }
LABEL_27:
      uint64_t result = (uint64_t)sub_132A0C0(*(void *)(a1 + 168));
      if ((v15 & 4) == 0)
      {
LABEL_21:
        if ((v15 & 8) == 0)
        {
LABEL_31:
          if ((v15 & 0x10) != 0) {
            uint64_t result = sub_139E0A4(*(void *)(a1 + 192));
          }
          goto LABEL_33;
        }
LABEL_29:
        uint64_t v17 = *(void *)(a1 + 184);
        char v18 = *(unsigned char *)(v17 + 8);
        uint64_t result = v17 + 8;
        *(void *)(result + 16) = 0;
        *(_DWORD *)(result + 8) = 0;
        if (v18) {
          uint64_t result = sub_188B4AC((uint64_t *)result);
        }
        goto LABEL_31;
      }
LABEL_28:
      uint64_t result = sub_1333A80(*(void *)(a1 + 176));
      if ((v15 & 8) == 0) {
        goto LABEL_31;
      }
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v16 + 23) < 0)
    {
      **(unsigned char **)unint64_t v16 = 0;
      *(void *)(v16 + 8) = 0;
      if ((v15 & 2) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v16 = 0;
      *(unsigned char *)(v16 + 23) = 0;
      if ((v15 & 2) != 0) {
        goto LABEL_27;
      }
    }
LABEL_20:
    if ((v15 & 4) == 0) {
      goto LABEL_21;
    }
    goto LABEL_28;
  }
LABEL_33:
  if ((v15 & 0xE0) != 0)
  {
    *(_DWORD *)(a1 + 208) = 0;
    *(void *)(a1 + 200) = 0;
  }
  if ((v15 & 0x700) != 0)
  {
    *(unsigned char *)(a1 + 220) = 0;
    *(void *)(a1 + 212) = 0;
  }
  char v20 = *(unsigned char *)(a1 + 8);
  uint64_t v19 = a1 + 8;
  *(_DWORD *)(v19 + 32) = 0;
  if (v20)
  {
    return sub_188B4AC((uint64_t *)v19);
  }
  return result;
}

uint64_t sub_13382C8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v90 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v90, a3[11].i32[1]))
  {
    int v89 = 0;
    goto LABEL_3;
  }
  int v89 = 0;
  v88 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v6 = (unsigned __int8 *)(*(void *)v90 + 1);
    unsigned int v7 = **(unsigned char **)v90;
    if ((char)**(unsigned char **)v90 < 0)
    {
      int v8 = (char)*v6;
      unsigned int v9 = v7 + (v8 << 7);
      unsigned int v7 = v9 - 128;
      if (v8 < 0)
      {
        uint64_t v6 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v90, v9 - 128);
        unsigned int v7 = v10;
      }
      else
      {
        uint64_t v6 = (unsigned __int8 *)(*(void *)v90 + 2);
      }
    }
    *(void *)v90 = v6;
    switch(v7 >> 3)
    {
      case 2u:
        if (v7 != 16) {
          goto LABEL_142;
        }
        v89 |= 0x20u;
        uint64_t v11 = (char *)(v6 + 1);
        int v12 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_14;
        }
        int v13 = *v11;
        int v12 = v12 + (v13 << 7) - 128;
        if ((v13 & 0x80000000) == 0)
        {
          uint64_t v11 = (char *)(v6 + 2);
LABEL_14:
          *(void *)v90 = v11;
          *(_DWORD *)(a1 + 200) = v12;
          goto LABEL_152;
        }
        uint64_t v74 = sub_188C0D0((uint64_t)v6, v12);
        *(void *)v90 = v74;
        *(_DWORD *)(a1 + 200) = v75;
        if (!v74) {
          goto LABEL_157;
        }
        goto LABEL_152;
      case 3u:
        if (v7 != 24) {
          goto LABEL_142;
        }
        v89 |= 0x40u;
        uint64_t v14 = (char *)(v6 + 1);
        int v15 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v16 = *v14;
        int v15 = v15 + (v16 << 7) - 128;
        if (v16 < 0)
        {
          uint64_t v76 = sub_188C0D0((uint64_t)v6, v15);
          *(void *)v90 = v76;
          *(_DWORD *)(a1 + 204) = v77;
          if (!v76) {
            goto LABEL_157;
          }
        }
        else
        {
          uint64_t v14 = (char *)(v6 + 2);
LABEL_19:
          *(void *)v90 = v14;
          *(_DWORD *)(a1 + 204) = v15;
        }
        goto LABEL_152;
      case 7u:
        if (v7 != 58) {
          goto LABEL_142;
        }
        uint64_t v17 = v6 - 1;
        while (1)
        {
          char v18 = v17 + 1;
          *(void *)v90 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 64);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 56) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_134EBF4(*(void *)(a1 + 48));
            uint64_t v21 = sub_188CDC8(a1 + 48, v22);
            char v18 = *(unsigned __int8 **)v90;
          }
          uint64_t v17 = (unsigned __int8 *)sub_1338C5C(a3, v21, v18);
          *(void *)v90 = v17;
          if (!v17) {
            goto LABEL_157;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 58) {
            goto LABEL_152;
          }
        }
      case 8u:
        if (v7 != 66) {
          goto LABEL_142;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v24 = (uint64_t *)*v24;
        }
        int v25 = (std::string *)sub_1880F84((void *)(a1 + 160), v24);
        uint64_t v26 = (uint64_t)sub_188C244(v25, *(char **)v90, (uint64_t)a3);
        goto LABEL_151;
      case 0xAu:
        if (v7 != 80) {
          goto LABEL_142;
        }
        v89 |= 0x80u;
        uint64_t v27 = (char *)(v6 + 1);
        int v28 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v78 = sub_188C0D0((uint64_t)v6, v28);
          *(void *)v90 = v78;
          *(_DWORD *)(a1 + 208) = v79;
          if (!v78) {
            goto LABEL_157;
          }
        }
        else
        {
          uint64_t v27 = (char *)(v6 + 2);
LABEL_38:
          *(void *)v90 = v27;
          *(_DWORD *)(a1 + 208) = v28;
        }
        goto LABEL_152;
      case 0xBu:
        if (v7 != 90) {
          goto LABEL_142;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v30 = *(void *)(a1 + 168);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v88 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v88) {
            uint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_1332450((uint64_t)v31);
          *(void *)(a1 + 168) = v30;
          uint64_t v6 = *(unsigned __int8 **)v90;
        }
        uint64_t v26 = sub_1338CEC(a3, v30, v6);
        goto LABEL_151;
      case 0xDu:
        if (v7 != 106) {
          goto LABEL_142;
        }
        unsigned int v32 = (char *)(v6 - 1);
        while (1)
        {
          unsigned int v33 = (unsigned __int8 *)(v32 + 1);
          *(void *)v90 = v32 + 1;
          char v34 = *(_DWORD **)(a1 + 88);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 80), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 80) = v35 + 1;
            uint64_t v36 = *(void *)&v34[2 * v35 + 2];
          }
          else
          {
            uint64_t v37 = sub_134DFB4(*(void *)(a1 + 72));
            uint64_t v36 = sub_188CDC8(a1 + 72, v37);
            unsigned int v33 = *(unsigned __int8 **)v90;
          }
          unsigned int v32 = sub_1338D7C(a3, v36, v33);
          *(void *)v90 = v32;
          if (!v32) {
            goto LABEL_157;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 106) {
            goto LABEL_152;
          }
        }
      case 0xEu:
        if (v7 != 114) {
          goto LABEL_142;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v38 = *(void *)(a1 + 176);
        if (!v38)
        {
          uint64_t v39 = (void *)(*v88 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v88) {
            uint64_t v39 = (void *)*v39;
          }
          uint64_t v38 = sub_134DDF0((uint64_t)v39);
          *(void *)(a1 + 176) = v38;
          uint64_t v6 = *(unsigned __int8 **)v90;
        }
        uint64_t v26 = (uint64_t)sub_1338E0C(a3, v38, v6);
        goto LABEL_151;
      case 0xFu:
        if (v7 == 120)
        {
          uint64_t v40 = (uint64_t)(v6 - 1);
          while (1)
          {
            *(void *)v90 = v40 + 1;
            unint64_t v41 = *(unsigned __int8 *)(v40 + 1);
            unint64_t v42 = (char *)(v40 + 2);
            if (*(char *)(v40 + 1) < 0)
            {
              int v43 = *v42;
              int v44 = v41 + (v43 << 7);
              unint64_t v41 = (v44 - 128);
              if (v43 < 0)
              {
                *(void *)v90 = sub_188C138(v40 + 1, (v44 - 128));
                if (!*(void *)v90) {
                  goto LABEL_157;
                }
                unint64_t v41 = v47;
                goto LABEL_67;
              }
              unint64_t v42 = (char *)(v40 + 3);
            }
            *(void *)v90 = v42;
LABEL_67:
            if (v41 > 4)
            {
              if (*v88) {
                uint64_t v48 = (std::string *)((*v88 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v48 = (std::string *)sub_188DBD8(v88);
              }
              sub_188C020(15, v41, v48);
            }
            else
            {
              uint64_t v45 = *(unsigned int *)(a1 + 96);
              if (v45 == *(_DWORD *)(a1 + 100))
              {
                int v46 = v45 + 1;
                sub_188C80C((unsigned int *)(a1 + 96), v45 + 1);
                *(_DWORD *)(*(void *)(a1 + 104) + 4 * v45) = v41;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 104) + 4 * v45) = v41;
                int v46 = v45 + 1;
              }
              *(_DWORD *)(a1 + 96) = v46;
            }
            uint64_t v40 = *(void *)v90;
            if (*(void *)a3 <= *(void *)v90 || **(unsigned char **)v90 != 120) {
              goto LABEL_152;
            }
          }
        }
        if (v7 == 122)
        {
          *(void *)&long long v91 = a1 + 96;
          *((void *)&v91 + 1) = sub_1332920;
          uint64_t v92 = a1 + 8;
          int v93 = 15;
          uint64_t v26 = (uint64_t)sub_1112E88((uint64_t)a3, (char *)v6, &v91);
LABEL_151:
          *(void *)v90 = v26;
          if (!v26) {
            goto LABEL_157;
          }
LABEL_152:
          if (sub_11947B8((uint64_t)a3, (char **)v90, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
LABEL_142:
        if (v7) {
          BOOL v86 = (v7 & 7) == 4;
        }
        else {
          BOOL v86 = 1;
        }
        if (!v86)
        {
          if (v7 - 7600 > 0x18F)
          {
            if (*v88)
            {
              v87 = (std::string *)((*v88 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v87 = (std::string *)sub_188DBD8(v88);
              uint64_t v6 = *(unsigned __int8 **)v90;
            }
            uint64_t v26 = (uint64_t)sub_1885AC0(v7, v87, (char *)v6, a3);
          }
          else
          {
            uint64_t v26 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v7, (char *)v6, (uint64_t)&off_2533668, v88, a3);
          }
          goto LABEL_151;
        }
        if (v6) {
          a3[10].i32[0] = v7 - 1;
        }
        else {
LABEL_157:
        }
          *(void *)v90 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v89;
        return *(void *)v90;
      case 0x12u:
        if (v7 != 146) {
          goto LABEL_142;
        }
        uint64_t v49 = (char *)(v6 - 2);
        while (1)
        {
          uint64_t v50 = (unsigned __int8 *)(v49 + 2);
          *(void *)v90 = v49 + 2;
          uint64_t v51 = *(_DWORD **)(a1 + 128);
          if (v51 && (uint64_t v52 = *(int *)(a1 + 120), (int)v52 < *v51))
          {
            *(_DWORD *)(a1 + 120) = v52 + 1;
            uint64_t v53 = *(void *)&v51[2 * v52 + 2];
          }
          else
          {
            uint64_t v54 = sub_134E058(*(void *)(a1 + 112));
            uint64_t v53 = sub_188CDC8(a1 + 112, (uint64_t)v54);
            uint64_t v50 = *(unsigned __int8 **)v90;
          }
          uint64_t v49 = sub_1338E9C(a3, v53, v50);
          *(void *)v90 = v49;
          if (!v49) {
            goto LABEL_157;
          }
          if (*(void *)a3 <= (unint64_t)v49 || *(_WORD *)v49 != 402) {
            goto LABEL_152;
          }
        }
      case 0x13u:
        if (v7 != 154) {
          goto LABEL_142;
        }
        BOOL v55 = v6 - 2;
        while (1)
        {
          uint64_t v56 = v55 + 2;
          *(void *)v90 = v55 + 2;
          uint64_t v57 = *(_DWORD **)(a1 + 152);
          if (v57 && (uint64_t v58 = *(int *)(a1 + 144), (int)v58 < *v57))
          {
            *(_DWORD *)(a1 + 144) = v58 + 1;
            uint64_t v59 = *(void *)&v57[2 * v58 + 2];
          }
          else
          {
            uint64_t v60 = sub_134E0B4(*(void *)(a1 + 136));
            uint64_t v59 = sub_188CDC8(a1 + 136, v60);
            uint64_t v56 = *(unsigned __int8 **)v90;
          }
          BOOL v55 = (unsigned __int8 *)sub_1338F2C(a3, v59, v56);
          *(void *)v90 = v55;
          if (!v55) {
            goto LABEL_157;
          }
          if (*(void *)a3 <= (unint64_t)v55 || *(_WORD *)v55 != 410) {
            goto LABEL_152;
          }
        }
      case 0x14u:
        if (v7 != 160) {
          goto LABEL_142;
        }
        v89 |= 0x100u;
        int v61 = (char *)(v6 + 1);
        int v62 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_105;
        }
        int v63 = *v61;
        int v62 = v62 + (v63 << 7) - 128;
        if (v63 < 0)
        {
          uint64_t v80 = sub_188C0D0((uint64_t)v6, v62);
          *(void *)v90 = v80;
          *(_DWORD *)(a1 + 212) = v81;
          if (!v80) {
            goto LABEL_157;
          }
        }
        else
        {
          int v61 = (char *)(v6 + 2);
LABEL_105:
          *(void *)v90 = v61;
          *(_DWORD *)(a1 + 212) = v62;
        }
        goto LABEL_152;
      case 0x15u:
        if (v7 != 168) {
          goto LABEL_142;
        }
        v89 |= 0x200u;
        uint64_t v64 = (char *)(v6 + 1);
        int v65 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_110;
        }
        int v66 = *v64;
        int v65 = v65 + (v66 << 7) - 128;
        if (v66 < 0)
        {
          uint64_t v82 = sub_188C0D0((uint64_t)v6, v65);
          *(void *)v90 = v82;
          *(_DWORD *)(a1 + 216) = v83;
          if (!v82) {
            goto LABEL_157;
          }
        }
        else
        {
          uint64_t v64 = (char *)(v6 + 2);
LABEL_110:
          *(void *)v90 = v64;
          *(_DWORD *)(a1 + 216) = v65;
        }
        goto LABEL_152;
      case 0x16u:
        if (v7 != 178) {
          goto LABEL_142;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        int v67 = *(void **)(a1 + 184);
        if (!v67)
        {
          uint64_t v68 = (void *)(*v88 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v88) {
            uint64_t v68 = (void *)*v68;
          }
          int v67 = sub_134E110((uint64_t)v68);
          *(void *)(a1 + 184) = v67;
          uint64_t v6 = *(unsigned __int8 **)v90;
        }
        uint64_t v26 = (uint64_t)sub_1338FBC(a3, (uint64_t)v67, v6);
        goto LABEL_151;
      case 0x17u:
        if (v7 != 184) {
          goto LABEL_142;
        }
        v89 |= 0x400u;
        uint64_t v69 = (char *)(v6 + 1);
        uint64_t v70 = *v6;
        if (((char)*v6 & 0x80000000) == 0) {
          goto LABEL_121;
        }
        int v71 = *v69;
        uint64_t v70 = v70 + (v71 << 7) - 128;
        if (v71 < 0)
        {
          uint64_t v84 = sub_188C138((uint64_t)v6, v70);
          *(void *)v90 = v84;
          *(unsigned char *)(a1 + 220) = v85 != 0;
          if (!v84) {
            goto LABEL_157;
          }
        }
        else
        {
          uint64_t v69 = (char *)(v6 + 2);
LABEL_121:
          *(void *)v90 = v69;
          *(unsigned char *)(a1 + 220) = v70 != 0;
        }
        goto LABEL_152;
      case 0x18u:
        if (v7 != 194) {
          goto LABEL_142;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v72 = *(void *)(a1 + 192);
        if (!v72)
        {
          int v73 = (void *)(*v88 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v88) {
            int v73 = (void *)*v73;
          }
          uint64_t v72 = sub_13D8978((uint64_t)v73);
          *(void *)(a1 + 192) = v72;
          uint64_t v6 = *(unsigned __int8 **)v90;
        }
        uint64_t v26 = (uint64_t)sub_133904C(a3, v72, v6);
        goto LABEL_151;
      default:
        goto LABEL_142;
    }
  }
}

uint64_t sub_1338C5C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1346038(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1338CEC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_132A14C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1338D7C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1335A54(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1338E0C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1333B7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1338E9C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1336354(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1338F2C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1336C34(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1338FBC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1337BE0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_133904C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_139E210(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13390DC(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 200);
    char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 204);
    char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 58;
      unsigned int v16 = *(_DWORD *)(v15 + 44);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_1347700(v15, v17, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v18 = *(_DWORD *)(a1 + 208);
    char *v4 = 80;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unsigned int v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 168);
    char *v4 = 90;
    unsigned int v22 = *(_DWORD *)(v21 + 44);
    v4[1] = v22;
    if (v22 > 0x7F) {
      uint64_t v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      uint64_t v23 = v4 + 2;
    }
    uint64_t v4 = sub_132A450(v21, v23, a3);
  }
  int v24 = *(_DWORD *)(a1 + 80);
  if (v24)
  {
    for (int j = 0; j != v24; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 106;
      unsigned int v27 = *(_DWORD *)(v26 + 56);
      v4[1] = v27;
      if (v27 > 0x7F) {
        int v28 = sub_188A9CC(v27, v4 + 1);
      }
      else {
        int v28 = v4 + 2;
      }
      uint64_t v4 = sub_1335D84(v26, v28, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v29 = *(void *)(a1 + 176);
    char *v4 = 114;
    unsigned int v30 = *(_DWORD *)(v29 + 20);
    v4[1] = v30;
    if (v30 > 0x7F) {
      uint64_t v31 = sub_188A9CC(v30, v4 + 1);
    }
    else {
      uint64_t v31 = v4 + 2;
    }
    uint64_t v4 = sub_1333FF0(v29, (unint64_t)v31, a3);
  }
  uint64_t v32 = *(unsigned int *)(a1 + 96);
  if ((int)v32 >= 1)
  {
    for (uint64_t k = 0; k != v32; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v34 = *(int *)(*(void *)(a1 + 104) + 4 * k);
      char *v4 = 120;
      v4[1] = v34;
      if (v34 > 0x7F)
      {
        v4[1] = v34 | 0x80;
        unint64_t v35 = v34 >> 7;
        v4[2] = v34 >> 7;
        v4 += 3;
        if (v34 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v36 = v35 >> 14;
            v35 >>= 7;
            *v4++ = v35;
          }
          while (v36);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  int v37 = *(_DWORD *)(a1 + 120);
  if (v37)
  {
    for (int m = 0; m != v37; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v39 = *(void *)(*(void *)(a1 + 128) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 402;
      unsigned int v40 = *(_DWORD *)(v39 + 44);
      v4[2] = v40;
      if (v40 > 0x7F) {
        unint64_t v41 = sub_188A9CC(v40, v4 + 2);
      }
      else {
        unint64_t v41 = v4 + 3;
      }
      uint64_t v4 = sub_1336584(v39, v41, a3);
    }
  }
  int v42 = *(_DWORD *)(a1 + 144);
  if (v42)
  {
    for (int n = 0; n != v42; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v44 = *(void *)(*(void *)(a1 + 152) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 410;
      unsigned int v45 = *(_DWORD *)(v44 + 44);
      v4[2] = v45;
      if (v45 > 0x7F) {
        int v46 = sub_188A9CC(v45, v4 + 2);
      }
      else {
        int v46 = v4 + 3;
      }
      uint64_t v4 = sub_13371BC(v44, v46, a3);
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v47 = *(_DWORD *)(a1 + 212);
    *(_WORD *)uint64_t v4 = 416;
    v4[2] = v47;
    if (v47 > 0x7F)
    {
      v4[2] = v47 | 0x80;
      unsigned int v48 = v47 >> 7;
      v4[3] = v47 >> 7;
      v4 += 4;
      if (v47 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v49 = v48 >> 14;
          v48 >>= 7;
          *v4++ = v48;
        }
        while (v49);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v50 = *(_DWORD *)(a1 + 216);
    *(_WORD *)uint64_t v4 = 424;
    v4[2] = v50;
    if (v50 > 0x7F)
    {
      v4[2] = v50 | 0x80;
      unsigned int v51 = v50 >> 7;
      v4[3] = v50 >> 7;
      v4 += 4;
      if (v50 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v52 = v51 >> 14;
          v51 >>= 7;
          *v4++ = v51;
        }
        while (v52);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v53 = *(void *)(a1 + 184);
    *(_WORD *)uint64_t v4 = 434;
    unsigned int v54 = *(_DWORD *)(v53 + 20);
    v4[2] = v54;
    if (v54 > 0x7F) {
      BOOL v55 = sub_188A9CC(v54, v4 + 2);
    }
    else {
      BOOL v55 = v4 + 3;
    }
    uint64_t v4 = (char *)sub_1337D20(v53, (unint64_t)v55, a3);
    if ((v6 & 0x400) == 0)
    {
LABEL_95:
      if ((v6 & 0x10) == 0) {
        goto LABEL_112;
      }
      goto LABEL_106;
    }
  }
  else if ((v6 & 0x400) == 0)
  {
    goto LABEL_95;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v56 = *(unsigned char *)(a1 + 220);
  *(_WORD *)uint64_t v4 = 440;
  v4[2] = v56;
  v4 += 3;
  if ((v6 & 0x10) != 0)
  {
LABEL_106:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v57 = *(void *)(a1 + 192);
    *(_WORD *)uint64_t v4 = 450;
    unsigned int v58 = *(_DWORD *)(v57 + 20);
    v4[2] = v58;
    if (v58 > 0x7F) {
      uint64_t v59 = sub_188A9CC(v58, v4 + 2);
    }
    else {
      uint64_t v59 = v4 + 3;
    }
    uint64_t v4 = sub_139E72C(v57, v59, a3);
  }
LABEL_112:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v60 = *(void *)(a1 + 8);
  if ((v60 & 1) == 0) {
    return v4;
  }
  unint64_t v62 = v60 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v62 + 31) < 0)
  {
    int v63 = *(void **)(v62 + 8);
    uint64_t v64 = *(void *)(v62 + 16);
  }
  else
  {
    int v63 = (void *)(v62 + 8);
    LODWORD(v64) = *(unsigned __int8 *)(v62 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v64)
  {
    uint64_t v65 = (int)v64;
    memcpy(v4, v63, (int)v64);
    v4 += v65;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v63, v64, v4);
}

uint64_t sub_13398D0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_134867C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1335F64(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(unsigned int *)(a1 + 96);
  if (v17)
  {
    uint64_t v18 = 0;
    int v19 = 0;
    do
    {
      int v20 = *(_DWORD *)(*(void *)(a1 + 104) + 4 * v19);
      if (v20 < 0) {
        uint64_t v21 = 10;
      }
      else {
        uint64_t v21 = (9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6;
      }
      v18 += v21;
      ++v19;
    }
    while (v17 != v19);
  }
  else
  {
    uint64_t v18 = 0;
  }
  uint64_t v22 = *(int *)(a1 + 120);
  uint64_t v23 = v11 + v17 + v18 + 2 * v22;
  uint64_t v24 = *(void *)(a1 + 128);
  if (v24) {
    int v25 = (uint64_t *)(v24 + 8);
  }
  else {
    int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_13367C8(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 144);
  uint64_t v30 = v23 + 2 * v29;
  uint64_t v31 = *(void *)(a1 + 152);
  if (v31) {
    uint64_t v32 = (uint64_t *)(v31 + 8);
  }
  else {
    uint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_13376C0(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  int v36 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v36) {
    goto LABEL_43;
  }
  if (v36)
  {
    unint64_t v39 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v40 = *(unsigned __int8 *)(v39 + 23);
    uint64_t v41 = *(void *)(v39 + 8);
    if ((v40 & 0x80u) == 0) {
      uint64_t v41 = v40;
    }
    v30 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v36 & 2) == 0)
    {
LABEL_36:
      if ((v36 & 4) == 0) {
        goto LABEL_37;
      }
      goto LABEL_56;
    }
  }
  else if ((v36 & 2) == 0)
  {
    goto LABEL_36;
  }
  uint64_t v42 = sub_132A670(*(void *)(a1 + 168));
  v30 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v36 & 4) == 0)
  {
LABEL_37:
    if ((v36 & 8) == 0) {
      goto LABEL_38;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t v43 = sub_133440C(*(void *)(a1 + 176));
  v30 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v36 & 8) == 0)
  {
LABEL_38:
    if ((v36 & 0x10) == 0) {
      goto LABEL_39;
    }
    goto LABEL_61;
  }
LABEL_57:
  uint64_t v44 = *(void *)(a1 + 184);
  uint64_t v45 = 9;
  if ((*(unsigned char *)(v44 + 16) & 1) == 0) {
    uint64_t v45 = 0;
  }
  uint64_t v46 = *(void *)(v44 + 8);
  if (v46)
  {
    unint64_t v50 = v46 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v50 + 31) < 0) {
      uint64_t v51 = *(void *)(v50 + 16);
    }
    else {
      uint64_t v51 = *(unsigned __int8 *)(v50 + 31);
    }
    v45 += v51;
  }
  *(_DWORD *)(v44 + 20) = v45;
  v30 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v36 & 0x10) == 0)
  {
LABEL_39:
    if ((v36 & 0x20) == 0) {
      goto LABEL_40;
    }
LABEL_62:
    v30 += ((9 * (__clz(*(_DWORD *)(a1 + 200) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v36 & 0x40) == 0)
    {
LABEL_41:
      if ((v36 & 0x80) == 0) {
        goto LABEL_43;
      }
      goto LABEL_42;
    }
    goto LABEL_63;
  }
LABEL_61:
  uint64_t v47 = sub_139EAB4(*(void *)(a1 + 192));
  v30 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v36 & 0x20) != 0) {
    goto LABEL_62;
  }
LABEL_40:
  if ((v36 & 0x40) == 0) {
    goto LABEL_41;
  }
LABEL_63:
  v30 += ((9 * (__clz(*(_DWORD *)(a1 + 204) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v36 & 0x80) != 0) {
LABEL_42:
  }
    v30 += ((9 * (__clz(*(_DWORD *)(a1 + 208) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_43:
  if ((v36 & 0x700) != 0)
  {
    if ((v36 & 0x100) != 0) {
      v30 += ((9 * (__clz(*(_DWORD *)(a1 + 212) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v36 & 0x200) != 0) {
      v30 += ((9 * (__clz(*(_DWORD *)(a1 + 216) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v36 & 0x400) != 0) {
      v30 += 3;
    }
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if (v37)
  {
    unint64_t v48 = v37 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v48 + 31) < 0) {
      uint64_t v49 = *(void *)(v48 + 16);
    }
    else {
      uint64_t v49 = *(unsigned __int8 *)(v48 + 31);
    }
    v30 += v49;
  }
  *(_DWORD *)(a1 + 44) = v30;
  return v30;
}

void sub_1339D14(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1367748((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_13677D4((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 96);
  if (v14)
  {
    uint64_t v15 = *(int *)(a1 + 96);
    sub_188C80C((unsigned int *)(a1 + 96), v15 + v14);
    uint64_t v16 = *(void *)(a1 + 104);
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
    memcpy((void *)(v16 + 4 * v15), *(const void **)(a2 + 104), 4 * *(int *)(a2 + 96));
  }
  int v17 = *(_DWORD *)(a2 + 120);
  if (v17)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a2 + 128) + 8);
    int v19 = (uint64_t *)sub_188CCE4(a1 + 112, *(_DWORD *)(a2 + 120));
    sub_1367860((uint64_t *)(a1 + 112), v19, v18, v17, **(_DWORD **)(a1 + 128) - *(_DWORD *)(a1 + 120));
    int v20 = *(_DWORD *)(a1 + 120) + v17;
    *(_DWORD *)(a1 + 120) = v20;
    uint64_t v21 = *(int **)(a1 + 128);
    if (*v21 < v20) {
      *uint64_t v21 = v20;
    }
  }
  int v22 = *(_DWORD *)(a2 + 144);
  if (v22)
  {
    uint64_t v23 = (uint64_t *)(*(void *)(a2 + 152) + 8);
    uint64_t v24 = (uint64_t *)sub_188CCE4(a1 + 136, *(_DWORD *)(a2 + 144));
    sub_13678EC((uint64_t *)(a1 + 136), v24, v23, v22, **(_DWORD **)(a1 + 152) - *(_DWORD *)(a1 + 144));
    int v25 = *(_DWORD *)(a1 + 144) + v22;
    *(_DWORD *)(a1 + 144) = v25;
    uint64_t v26 = *(int **)(a1 + 152);
    if (*v26 < v25) {
      *uint64_t v26 = v25;
    }
  }
  int v27 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v27)
  {
    if (v27)
    {
      uint64_t v29 = (long long *)(*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v30 = *(void *)(a1 + 8);
      uint64_t v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
      if (v30) {
        uint64_t v31 = (uint64_t *)*v31;
      }
      sub_1881DF4((std::string **)(a1 + 160), v29, v31);
      if ((v27 & 2) == 0)
      {
LABEL_18:
        if ((v27 & 4) == 0) {
          goto LABEL_19;
        }
        goto LABEL_47;
      }
    }
    else if ((v27 & 2) == 0)
    {
      goto LABEL_18;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v32 = *(void *)(a1 + 168);
    if (!v32)
    {
      uint64_t v33 = *(void *)(a1 + 8);
      uint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
      if (v33) {
        uint64_t v34 = (void *)*v34;
      }
      uint64_t v32 = sub_1332450((uint64_t)v34);
      *(void *)(a1 + 168) = v32;
    }
    if (*(void *)(a2 + 168)) {
      uint64_t v35 = *(uint64_t (****)())(a2 + 168);
    }
    else {
      uint64_t v35 = &off_2533128;
    }
    sub_132A758(v32, (uint64_t)v35);
    if ((v27 & 4) == 0)
    {
LABEL_19:
      if ((v27 & 8) == 0) {
        goto LABEL_20;
      }
      goto LABEL_55;
    }
LABEL_47:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v36 = *(void *)(a1 + 176);
    if (!v36)
    {
      uint64_t v37 = *(void *)(a1 + 8);
      uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        uint64_t v38 = (void *)*v38;
      }
      uint64_t v36 = sub_134DDF0((uint64_t)v38);
      *(void *)(a1 + 176) = v36;
    }
    if (*(void *)(a2 + 176)) {
      unint64_t v39 = *(uint64_t (****)())(a2 + 176);
    }
    else {
      unint64_t v39 = &off_25334D0;
    }
    sub_1334634(v36, (uint64_t)v39);
    if ((v27 & 8) == 0)
    {
LABEL_20:
      if ((v27 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_63;
    }
LABEL_55:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v40 = *(std::string **)(a1 + 184);
    if (!v40)
    {
      uint64_t v41 = *(void *)(a1 + 8);
      uint64_t v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
      if (v41) {
        uint64_t v42 = (void *)*v42;
      }
      uint64_t v40 = (std::string *)sub_134E110((uint64_t)v42);
      *(void *)(a1 + 184) = v40;
    }
    if (*(void *)(a2 + 184)) {
      uint64_t v43 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      uint64_t v43 = &off_2533648;
    }
    sub_123DB18(v40, (uint64_t)v43);
    if ((v27 & 0x10) == 0)
    {
LABEL_21:
      if ((v27 & 0x20) == 0) {
        goto LABEL_22;
      }
      goto LABEL_71;
    }
LABEL_63:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v44 = *(void *)(a1 + 192);
    if (!v44)
    {
      uint64_t v45 = *(void *)(a1 + 8);
      uint64_t v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
      if (v45) {
        uint64_t v46 = (void *)*v46;
      }
      uint64_t v44 = sub_13D8978((uint64_t)v46);
      *(void *)(a1 + 192) = v44;
    }
    if (*(void *)(a2 + 192)) {
      uint64_t v47 = *(uint64_t (****)())(a2 + 192);
    }
    else {
      uint64_t v47 = &off_2535580;
    }
    sub_139ECAC(v44, (uint64_t)v47);
    if ((v27 & 0x20) == 0)
    {
LABEL_22:
      if ((v27 & 0x40) == 0) {
        goto LABEL_23;
      }
      goto LABEL_72;
    }
LABEL_71:
    *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
    if ((v27 & 0x40) == 0)
    {
LABEL_23:
      if ((v27 & 0x80) == 0)
      {
LABEL_25:
        *(_DWORD *)(a1 + 40) |= v27;
        goto LABEL_26;
      }
LABEL_24:
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      goto LABEL_25;
    }
LABEL_72:
    *(_DWORD *)(a1 + 204) = *(_DWORD *)(a2 + 204);
    if ((v27 & 0x80) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_26:
  if ((v27 & 0x700) == 0) {
    goto LABEL_32;
  }
  if ((v27 & 0x100) == 0)
  {
    if ((v27 & 0x200) == 0) {
      goto LABEL_29;
    }
LABEL_75:
    *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
    if ((v27 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
  if ((v27 & 0x200) != 0) {
    goto LABEL_75;
  }
LABEL_29:
  if ((v27 & 0x400) != 0) {
LABEL_30:
  }
    *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
LABEL_31:
  *(_DWORD *)(a1 + 40) |= v27;
LABEL_32:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v28 = *(void *)(a2 + 8);
  if (v28)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v28 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_133A164(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_13494C8(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t result = sub_133A264(a1 + 72);
    if (!result) {
      return result;
    }
    uint64_t v6 = *(unsigned int *)(a1 + 120);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_18856CC(*(void *)(*(void *)(a1 + 128) + 8 * v6) + 16);
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 144);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_18856CC(*(void *)(*(void *)(a1 + 152) + 8 * v9) + 16);
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    int v12 = *(_DWORD *)(a1 + 40);
    if ((v12 & 2) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 168) + 16);
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 4) != 0)
    {
      uint64_t result = sub_1334910(*(void *)(a1 + 176));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x10) == 0) {
      return 1;
    }
    uint64_t result = sub_139F024(*(void *)(a1 + 192));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_133A264(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 40);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_13349CC(*(void *)(*(void *)(v4 + 48) + 8 * v5) + 32);
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_133A2F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.SuggestedRoute");
}

void *sub_133A304(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_133A380(void *a1)
{
  sub_133A304(a1);

  operator delete();
}

uint64_t sub_133A3B8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_133A3D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    char v8 = v27 + 1;
    unsigned int v9 = *v27;
    if (*v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = v27 + 2;
      }
    }
    int v27 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    uint64_t v23 = v8 + 1;
    LODWORD(v22) = *v8;
    if ((v22 & 0x80) == 0) {
      goto LABEL_39;
    }
    int v24 = *v23;
    uint64_t v22 = v22 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v23 = v8 + 2;
LABEL_39:
      int v27 = v23;
      *(_DWORD *)(a1 + 40) = v22;
      int v5 = 1;
      goto LABEL_40;
    }
    int v25 = (char *)sub_188C138((uint64_t)v8, v22);
    int v27 = v25;
    *(_DWORD *)(a1 + 40) = v26;
    int v5 = 1;
    if (!v25) {
      goto LABEL_49;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      int v27 = v16 + 1;
      int v17 = v16[1];
      if (v16[1] < 0)
      {
        int v18 = v17 + (v16[2] << 7);
        int v17 = v18 - 128;
        if (v16[2] < 0)
        {
          uint64_t v16 = (char *)sub_188C138((uint64_t)(v16 + 1), (v18 - 128));
          int v17 = v19;
        }
        else
        {
          v16 += 3;
        }
      }
      else
      {
        v16 += 2;
      }
      int v27 = v16;
      uint64_t v20 = *(unsigned int *)(a1 + 24);
      if (v20 == *(_DWORD *)(a1 + 28))
      {
        int v21 = v20 + 1;
        sub_188C80C((unsigned int *)(a1 + 24), v20 + 1);
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v20) = v17;
        uint64_t v16 = v27;
      }
      else
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v20) = v17;
        int v21 = v20 + 1;
      }
      *(_DWORD *)(a1 + 24) = v21;
      if (!v16) {
        goto LABEL_49;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 16) {
        goto LABEL_40;
      }
    }
  }
  if (v9 == 18)
  {
    uint64_t v15 = sub_188C2BC((unsigned int *)(a1 + 24), (unsigned __int8 *)v8, (uint64_t)a3);
    goto LABEL_20;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v8 = v27;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
LABEL_20:
    int v27 = (char *)v15;
    if (!v15) {
      goto LABEL_49;
    }
    goto LABEL_40;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_49:
  int v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v27;
}

unsigned char *sub_133A64C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(unsigned int *)(a1 + 24);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v11 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 16;
      v4[1] = v11;
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unint64_t v12 = v11 >> 7;
        v4[2] = v11 >> 7;
        v4 += 3;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_133A81C(uint64_t a1)
{
  uint64_t result = sub_188D498((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3 < 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v4;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_133A8B4()
{
  return 1;
}

void *sub_133A8BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.TicketingSegment.Path.Leg");
}

void *sub_133A8CC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1366998(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_133A94C(void *a1)
{
  sub_133A8CC(a1);

  operator delete();
}

uint64_t sub_133A984(uint64_t a1)
{
  uint64_t result = sub_122AAFC(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 8);
  int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return sub_188B4AC(v3);
  }
  return result;
}

char *sub_133A9D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          unint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          unint64_t v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_134E1E4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = sub_133AB74(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unint64_t v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_133AB74(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_133A3D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_133AC04(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_133A64C(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_133AD48(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_133A81C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_133ADF8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_1367978((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_133AEC8()
{
  return 1;
}

void *sub_133AED0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.TicketingSegment.Path");
}

uint64_t sub_133AEE0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1366A18((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_133AFA4(uint64_t a1)
{
  sub_133AEE0(a1);

  operator delete();
}

uint64_t sub_133AFDC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_133A984(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v5 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_15:
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_133B0C4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)int v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        uint64_t v16 = v7 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)int v27 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_134E280(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, v21);
            uint64_t v17 = *(unsigned __int8 **)v27;
          }
          uint64_t v16 = sub_133B30C(a3, v20, v17);
          *(void *)int v27 = v16;
          if (!v16) {
            goto LABEL_45;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_40;
          }
        }
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v23 = (uint64_t *)*v23;
        }
        int v24 = (void *)(a1 + 56);
        goto LABEL_38;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v23 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      int v24 = (void *)(a1 + 48);
LABEL_38:
      int v26 = (std::string *)sub_1880F84(v24, v23);
      uint64_t v15 = (void *)sub_188C244(v26, *(char **)v27, (uint64_t)a3);
      goto LABEL_39;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v27;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_39:
    *(void *)int v27 = v15;
    if (!v15) {
      goto LABEL_45;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_45:
  *(void *)int v27 = 0;
  return *(void *)v27;
}

char *sub_133B30C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_133A9D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_133B39C(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v10 = *(_DWORD *)(v9 + 40);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_133AC04(v9, v11, a3);
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_133B524(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_133AD48(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_133B668(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_13679F4((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      uint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (uint64_t *)*v15;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v13, v15);
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_133B7AC()
{
  return 1;
}

void *sub_133B7B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.TicketingSegment");
}

void *sub_133B7C4(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24AAA80;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  *(void *)((char *)a1 + 54) = 0;
  return a1;
}

void sub_133B82C(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_133B85C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_133B8D8(void *a1)
{
  sub_133B85C(a1);

  operator delete();
}

unsigned char *sub_133B910(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 40) & 0x1F) != 0)
  {
    *(void *)(a1 + 54) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_133B978(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v40 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v40 + 1;
    unsigned int v9 = *v40;
    if (*v40 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v40, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v40 + 2;
      }
    }
    uint64_t v40 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_34;
        }
        v5 |= 1u;
        unint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v40 = v12;
          *(_DWORD *)(a1 + 48) = v13;
          goto LABEL_44;
        }
        uint64_t v30 = (char *)sub_188C0D0((uint64_t)v8, v13);
        uint64_t v40 = v30;
        *(_DWORD *)(a1 + 48) = v31;
        if (v30) {
          goto LABEL_44;
        }
        goto LABEL_59;
      case 2u:
        if (v9 != 16) {
          goto LABEL_34;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v32 = (char *)sub_188C0D0((uint64_t)v8, v16);
          uint64_t v40 = v32;
          *(_DWORD *)(a1 + 52) = v33;
          if (!v32) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v40 = v15;
          *(_DWORD *)(a1 + 52) = v16;
        }
        goto LABEL_44;
      case 3u:
        if (v9 != 24) {
          goto LABEL_34;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v34 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v40 = v34;
          *(unsigned char *)(a1 + 60) = v35 != 0;
          if (!v34) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v40 = v18;
          *(unsigned char *)(a1 + 60) = v19 != 0;
        }
        goto LABEL_44;
      case 5u:
        if (v9 != 40) {
          goto LABEL_34;
        }
        v5 |= 4u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v36 = (char *)sub_188C0D0((uint64_t)v8, v22);
          uint64_t v40 = v36;
          *(_DWORD *)(a1 + 56) = v37;
          if (!v36) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v40 = v21;
          *(_DWORD *)(a1 + 56) = v22;
        }
        goto LABEL_44;
      case 7u:
        if (v9 != 56) {
          goto LABEL_34;
        }
        v5 |= 0x10u;
        int v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v38 = (char *)sub_188C138((uint64_t)v8, v25);
          uint64_t v40 = v38;
          *(unsigned char *)(a1 + 61) = v39 != 0;
          if (!v38) {
            goto LABEL_59;
          }
        }
        else
        {
          int v24 = v8 + 2;
LABEL_33:
          uint64_t v40 = v24;
          *(unsigned char *)(a1 + 61) = v25 != 0;
        }
        goto LABEL_44;
      default:
LABEL_34:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (v9 - 7600 > 0x18F)
          {
            if (*v7)
            {
              uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v8 = v40;
            }
            uint64_t v28 = sub_1885AC0(v9, v29, v8, a3);
          }
          else
          {
            uint64_t v28 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2533748, (uint64_t *)(a1 + 8), a3);
          }
          uint64_t v40 = (char *)v28;
          if (!v28) {
            goto LABEL_59;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_59:
        }
          uint64_t v40 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v40;
    }
  }
}

char *sub_133BD18(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 52);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 60);
    char *v4 = 24;
    v4[1] = v13;
    v4 += 2;
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v14 = *(_DWORD *)(a1 + 56);
    char *v4 = 40;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unsigned int v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v17 = *(unsigned char *)(a1 + 61);
    char *v4 = 56;
    v4[1] = v17;
    v4 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_133BFCC(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_11;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_14:
    result += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  result += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v3 & 4) != 0) {
LABEL_5:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_6:
  uint64_t v4 = result + 2;
  if ((v3 & 8) == 0) {
    uint64_t v4 = result;
  }
  if ((v3 & 0x10) != 0) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_133C0CC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_15;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
LABEL_15:
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(unsigned char *)(a1 + 61) = *(unsigned char *)(a2 + 61);
      goto LABEL_8;
    }
LABEL_16:
    *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_133C194(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_133C19C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.EnterExitInfo");
}

void *sub_133C1AC(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24AAB00;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = 0;
  return a1;
}

void sub_133C214(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_133C244(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_133C2C0(void *a1)
{
  sub_133C244(a1);

  operator delete();
}

unsigned char *sub_133C2F8(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 40) & 3) != 0)
  {
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_133C35C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 6) {
      break;
    }
    if (v9 != 48) {
      goto LABEL_20;
    }
    v5 |= 2u;
    unsigned int v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unsigned int v15 = v8 + 2;
LABEL_19:
      uint64_t v25 = v15;
      *(void *)(a1 + 56) = v16;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v25 = v23;
    *(void *)(a1 + 56) = v24;
    if (!v23) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 4 && v9 == 32)
  {
    v5 |= 1u;
    unsigned int v12 = v8 + 1;
    int v13 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_14;
    }
    int v14 = *v12;
    int v13 = v13 + (v14 << 7) - 128;
    if ((v14 & 0x80000000) == 0)
    {
      unsigned int v12 = v8 + 2;
LABEL_14:
      uint64_t v25 = v12;
      *(_DWORD *)(a1 + 48) = v13;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v13);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 48) = v22;
    if (!v21) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_20:
  if (v9) {
    BOOL v18 = (v9 & 7) == 4;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18)
  {
    if (v9 - 7600 > 0x18F)
    {
      if (*v7)
      {
        unint64_t v20 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unsigned int v8 = v25;
      }
      uint64_t v19 = sub_1885AC0(v9, v20, v8, a3);
    }
    else
    {
      uint64_t v19 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2533788, (uint64_t *)(a1 + 8), a3);
    }
    uint64_t v25 = (char *)v19;
    if (!v19) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v25;
}

char *sub_133C590(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    char *v4 = 32;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 56);
    char *v4 = 48;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_133C758(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0) {
      result += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_133C808(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4) {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    }
    if ((v4 & 2) != 0) {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 40) |= v4;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_133C898(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_133C8A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.TransferInfo");
}

void *sub_133C8B0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_133C924(void *a1)
{
  sub_133C8B0(a1);

  operator delete();
}

uint64_t sub_133C95C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_133C974(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    uint64_t v19 = v6;
    if (v7 == 8)
    {
      unint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        unint64_t v12 = v6 + 2;
      }
      uint64_t v19 = v12;
LABEL_20:
      if (v13 > 2)
      {
        if (*v5) {
          uint64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_133CB1C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_133CC44(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_133CCB8()
{
  return 1;
}

void *sub_133CCC0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.ArrivalInfo");
}

uint64_t sub_133CCD0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24AAC00;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  return a1;
}

void sub_133CD38(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_133CD68(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_133CDE4(void *a1)
{
  sub_133CD68(a1);

  operator delete();
}

unsigned char *sub_133CE1C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_133CE74(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v20 + 2;
      }
    }
    unint64_t v20 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_17;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_17:
      unint64_t v20 = v13;
      *(_DWORD *)(a1 + 48) = v14;
      int v5 = 1;
      goto LABEL_22;
    }
    uint64_t v17 = (char *)sub_188C0D0((uint64_t)v7, v14);
    unint64_t v20 = v17;
    *(_DWORD *)(a1 + 48) = v18;
    int v5 = 1;
    if (!v17) {
      goto LABEL_30;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (v8 - 7600 > 0x18F)
    {
      if (*v6)
      {
        unint64_t v16 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unint64_t v7 = v20;
      }
      unint64_t v12 = sub_1885AC0(v8, v16, v7, a3);
    }
    else
    {
      unint64_t v12 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_25337E8, (uint64_t *)(a1 + 8), a3);
    }
    unint64_t v20 = (char *)v12;
    if (!v12) {
      goto LABEL_30;
    }
    goto LABEL_22;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  unint64_t v20 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 40) |= v5;
  return v20;
}

char *sub_133D034(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_133D180(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40)) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_133D204(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 40))
  {
    int v4 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(_DWORD *)(a1 + 48) = v4;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_133D280(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_133D288@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.VehicleTime");
}

uint64_t sub_133D298(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AAC80;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = &qword_2550250;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  return a1;
}

void sub_133D320(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_133D350(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2533820)
  {
    unsigned int v6 = *(void **)(a1 + 80);
    if (v6)
    {
      sub_133CD68(v6);
      operator delete();
    }
    unsigned int v7 = *(void **)(a1 + 88);
    if (v7)
    {
      sub_133CD68(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1889DA8(a1 + 48);
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_133D44C(uint64_t a1)
{
  sub_133D350(a1);

  operator delete();
}

unsigned char *sub_133D484(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  unint64_t v6 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_16;
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v6 = 0;
  *(unsigned char *)(v6 + 23) = 0;
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  uint64_t result = sub_133CE1C(*(void *)(a1 + 80));
  if ((v3 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_133CE1C(*(void *)(a1 + 88));
LABEL_6:
  if ((v3 & 0xF8) != 0)
  {
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
    *(_DWORD *)(a1 + 112) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(void *)(v4 + 112) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_133D550(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v53 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = (unsigned __int8 *)(*(void *)v53 + 1);
    unsigned int v9 = **(unsigned char **)v53;
    if ((char)**(unsigned char **)v53 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unsigned int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v53, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = (unsigned __int8 *)(*(void *)v53 + 2);
      }
    }
    *(void *)uint64_t v53 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v12 = *(void *)(a1 + 80);
        if (v12) {
          goto LABEL_20;
        }
        uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v12 = sub_134E4F8((uint64_t)v13);
        *(void *)(a1 + 80) = v12;
        goto LABEL_19;
      case 2u:
        if (v9 != 18) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v12 = *(void *)(a1 + 88);
        if (!v12)
        {
          uint64_t v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v14 = (void *)*v14;
          }
          uint64_t v12 = sub_134E4F8((uint64_t)v14);
          *(void *)(a1 + 88) = v12;
LABEL_19:
          unsigned int v8 = *(unsigned __int8 **)v53;
        }
LABEL_20:
        int v15 = sub_133DAC4(a3, v12, v8);
        goto LABEL_87;
      case 3u:
        if (v9 != 24) {
          goto LABEL_78;
        }
        v5 |= 8u;
        unint64_t v16 = (char *)(v8 + 1);
        int v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v39 = sub_188C0D0((uint64_t)v8, v17);
          *(void *)uint64_t v53 = v39;
          *(_DWORD *)(a1 + 96) = v40;
          if (!v39) {
            goto LABEL_94;
          }
        }
        else
        {
          unint64_t v16 = (char *)(v8 + 2);
LABEL_25:
          *(void *)uint64_t v53 = v16;
          *(_DWORD *)(a1 + 96) = v17;
        }
        goto LABEL_88;
      case 4u:
        if (v9 != 32) {
          goto LABEL_78;
        }
        v5 |= 0x10u;
        uint64_t v19 = (char *)(v8 + 1);
        int v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v41 = sub_188C0D0((uint64_t)v8, v20);
          *(void *)uint64_t v53 = v41;
          *(_DWORD *)(a1 + 100) = v42;
          if (!v41) {
            goto LABEL_94;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_30:
          *(void *)uint64_t v53 = v19;
          *(_DWORD *)(a1 + 100) = v20;
        }
        goto LABEL_88;
      case 5u:
        if (v9 != 40) {
          goto LABEL_78;
        }
        v5 |= 0x20u;
        int v22 = (char *)(v8 + 1);
        int v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v43 = sub_188C0D0((uint64_t)v8, v23);
          *(void *)uint64_t v53 = v43;
          *(_DWORD *)(a1 + 104) = v44;
          if (!v43) {
            goto LABEL_94;
          }
        }
        else
        {
          int v22 = (char *)(v8 + 2);
LABEL_35:
          *(void *)uint64_t v53 = v22;
          *(_DWORD *)(a1 + 104) = v23;
        }
        goto LABEL_88;
      case 6u:
        if (v9 == 50)
        {
          int v15 = sub_188C2CC((unsigned int *)(a1 + 48), v8, (uint64_t)a3);
          goto LABEL_87;
        }
        if (v9 == 48)
        {
          int v50 = sub_110DAD8((uint64_t *)v53);
          sub_1182598(a1, v50);
          if (!*(void *)v53) {
            goto LABEL_94;
          }
LABEL_88:
          if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_78:
        if (v9) {
          BOOL v51 = (v9 & 7) == 4;
        }
        else {
          BOOL v51 = 1;
        }
        if (!v51)
        {
          if (v9 - 7600 > 0x18F)
          {
            if (*v7)
            {
              unsigned int v52 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unsigned int v52 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unsigned int v8 = *(unsigned __int8 **)v53;
            }
            int v15 = sub_1885AC0(v9, v52, (char *)v8, a3);
          }
          else
          {
            int v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2533820, (uint64_t *)(a1 + 8), a3);
          }
LABEL_87:
          *(void *)uint64_t v53 = v15;
          if (!v15) {
            goto LABEL_94;
          }
          goto LABEL_88;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_94:
        }
          *(void *)uint64_t v53 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v53;
      case 7u:
        if (v9 != 56) {
          goto LABEL_78;
        }
        uint64_t v25 = (char *)(v8 + 1);
        unint64_t v26 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v27 = *v25;
        int v28 = v26 + (v27 << 7);
        unint64_t v26 = (v28 - 128);
        if (v27 < 0)
        {
          *(void *)uint64_t v53 = sub_188C138((uint64_t)v8, (v28 - 128));
          if (!*(void *)v53) {
            goto LABEL_94;
          }
          unint64_t v26 = v45;
        }
        else
        {
          uint64_t v25 = (char *)(v8 + 2);
LABEL_42:
          *(void *)uint64_t v53 = v25;
        }
        if (v26 < 4 || v26 == 100)
        {
          *(_DWORD *)(a1 + 40) |= 0x40u;
          *(_DWORD *)(a1 + 108) = v26;
        }
        else
        {
          if (*v7) {
            uint64_t v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(7, v26, v38);
        }
        goto LABEL_88;
      case 8u:
        if (v9 != 64) {
          goto LABEL_78;
        }
        v5 |= 0x80u;
        uint64_t v29 = (char *)(v8 + 1);
        int v30 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_50;
        }
        int v31 = *v29;
        int v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v46 = sub_188C0D0((uint64_t)v8, v30);
          *(void *)uint64_t v53 = v46;
          *(_DWORD *)(a1 + 112) = v47;
          if (!v46) {
            goto LABEL_94;
          }
        }
        else
        {
          uint64_t v29 = (char *)(v8 + 2);
LABEL_50:
          *(void *)uint64_t v53 = v29;
          *(_DWORD *)(a1 + 112) = v30;
        }
        goto LABEL_88;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_78;
        }
        v5 |= 0x100u;
        uint64_t v32 = (char *)(v8 + 1);
        uint64_t v33 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v48 = sub_188C138((uint64_t)v8, v33);
          *(void *)uint64_t v53 = v48;
          *(void *)(a1 + 120) = v49;
          if (!v48) {
            goto LABEL_94;
          }
        }
        else
        {
          uint64_t v32 = (char *)(v8 + 2);
LABEL_55:
          *(void *)uint64_t v53 = v32;
          *(void *)(a1 + 120) = v33;
        }
        goto LABEL_88;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v35 = *(void *)(a1 + 8);
        uint64_t v36 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          uint64_t v36 = (uint64_t *)*v36;
        }
        int v37 = (std::string *)sub_1880F84((void *)(a1 + 72), v36);
        int v15 = (void *)sub_188C244(v37, *(char **)v53, (uint64_t)a3);
        goto LABEL_87;
      default:
        goto LABEL_78;
    }
  }
}

char *sub_133DAC4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_133CE74(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_133DB54(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 80);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_133D034(v7, v9, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 88);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_133D034(v10, v12, a3);
  if ((v6 & 8) != 0)
  {
LABEL_17:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 96);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 100);
    char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 104);
    char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  unsigned int v22 = *(_DWORD *)(a1 + 64);
  if ((int)v22 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char *v4 = 50;
    int v23 = v4 + 1;
    if (v22 >= 0x80)
    {
      do
      {
        *v23++ = v22 | 0x80;
        unsigned int v44 = v22 >> 14;
        v22 >>= 7;
      }
      while (v44);
      uint64_t v4 = v23 - 1;
    }
    v4 += 2;
    unsigned char *v23 = v22;
    int v24 = *(unsigned int **)(a1 + 56);
    uint64_t v25 = &v24[*(int *)(a1 + 48)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v27 = *v24++;
      unsigned int v26 = v27;
      char *v4 = v27;
      if (v27 > 0x7F)
      {
        char *v4 = v26 | 0x80;
        unsigned int v28 = v26 >> 7;
        v4[1] = v26 >> 7;
        v4 += 2;
        if (v26 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v29 = v28 >> 14;
            v28 >>= 7;
            *v4++ = v28;
          }
          while (v29);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v24 < v25);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v30 = *(int *)(a1 + 108);
    char *v4 = 56;
    v4[1] = v30;
    if (v30 > 0x7F)
    {
      v4[1] = v30 | 0x80;
      unint64_t v31 = v30 >> 7;
      v4[2] = v30 >> 7;
      v4 += 3;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v33 = *(_DWORD *)(a1 + 112);
    char *v4 = 64;
    v4[1] = v33;
    if (v33 > 0x7F)
    {
      v4[1] = v33 | 0x80;
      unsigned int v34 = v33 >> 7;
      v4[2] = v33 >> 7;
      v4 += 3;
      if (v33 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v35 = v34 >> 14;
          v34 >>= 7;
          *v4++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v36 = *(void *)(a1 + 120);
    char *v4 = 96;
    v4[1] = v36;
    if (v36 > 0x7F)
    {
      v4[1] = v36 | 0x80;
      unint64_t v37 = v36 >> 7;
      v4[2] = v36 >> 7;
      v4 += 3;
      if (v36 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v38 = v37 >> 14;
          v37 >>= 7;
          *v4++ = v37;
        }
        while (v38);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v39 = *(void *)(a1 + 8);
  if ((v39 & 1) == 0) {
    return v4;
  }
  unint64_t v41 = v39 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v41 + 31) < 0)
  {
    int v42 = *(void **)(v41 + 8);
    uint64_t v43 = *(void *)(v41 + 16);
  }
  else
  {
    int v42 = (void *)(v41 + 8);
    LODWORD(v43) = *(unsigned __int8 *)(v41 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v43)
  {
    uint64_t v45 = (int)v43;
    memcpy(v4, v42, (int)v43);
    v4 += v45;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v42, v43, v4);
}

uint64_t sub_133E0F8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = sub_188D4F0((unsigned int *)(a1 + 48));
  if (v3)
  {
    int v4 = v3;
    if ((v3 & 0x80000000) != 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v5;
  }
  else
  {
    int v4 = 0;
  }
  *(_DWORD *)(a1 + 64) = v4;
  uint64_t v6 = v2 + v3;
  int v7 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v7) {
    goto LABEL_17;
  }
  if (v7)
  {
    unint64_t v10 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v6 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 2) == 0)
    {
LABEL_10:
      if ((v7 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_25;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v13 = sub_133D180(*(void *)(a1 + 80));
  v6 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 4) == 0)
  {
LABEL_11:
    if ((v7 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v14 = sub_133D180(*(void *)(a1 + 88));
  v6 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 8) == 0)
  {
LABEL_12:
    if ((v7 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  v6 += ((9 * (__clz(*(_DWORD *)(a1 + 96) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 0x10) == 0)
  {
LABEL_13:
    if ((v7 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    v6 += ((9 * (__clz(*(_DWORD *)(a1 + 104) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 0x40) == 0)
    {
LABEL_15:
      if ((v7 & 0x80) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    goto LABEL_29;
  }
LABEL_27:
  v6 += ((9 * (__clz(*(_DWORD *)(a1 + 100) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v7 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_29:
  int v15 = *(_DWORD *)(a1 + 108);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v6 += v16;
  if ((v7 & 0x80) != 0) {
LABEL_16:
  }
    v6 += ((9 * (__clz(*(_DWORD *)(a1 + 112) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_17:
  if ((v7 & 0x100) != 0) {
    v6 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v17 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v6 += v18;
  }
  *(_DWORD *)(a1 + 44) = v6;
  return v6;
}

void sub_133E374(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v8)
  {
    if (v8)
    {
      unsigned int v9 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        uint64_t v11 = (uint64_t *)*v11;
      }
      sub_1881DF4((std::string **)(a1 + 72), v9, v11);
    }
    if ((v8 & 2) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v14 = *(void *)(a1 + 80);
      if (!v14)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v14 = sub_134E4F8((uint64_t)v16);
        *(void *)(a1 + 80) = v14;
      }
      if (*(void *)(a2 + 80)) {
        unint64_t v17 = *(uint64_t (****)())(a2 + 80);
      }
      else {
        unint64_t v17 = &off_25337E8;
      }
      sub_133D204(v14, (uint64_t)v17);
      if ((v8 & 4) == 0)
      {
LABEL_10:
        if ((v8 & 8) == 0) {
          goto LABEL_11;
        }
        goto LABEL_39;
      }
    }
    else if ((v8 & 4) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v18 = *(void *)(a1 + 88);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      uint64_t v18 = sub_134E4F8((uint64_t)v20);
      *(void *)(a1 + 88) = v18;
    }
    if (*(void *)(a2 + 88)) {
      unsigned int v21 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      unsigned int v21 = &off_25337E8;
    }
    sub_133D204(v18, (uint64_t)v21);
    if ((v8 & 8) == 0)
    {
LABEL_11:
      if ((v8 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_40;
    }
LABEL_39:
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v8 & 0x10) == 0)
    {
LABEL_12:
      if ((v8 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_41;
    }
LABEL_40:
    *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
    if ((v8 & 0x20) == 0)
    {
LABEL_13:
      if ((v8 & 0x40) == 0) {
        goto LABEL_14;
      }
      goto LABEL_42;
    }
LABEL_41:
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    if ((v8 & 0x40) == 0)
    {
LABEL_14:
      if ((v8 & 0x80) == 0)
      {
LABEL_16:
        *(_DWORD *)(a1 + 40) |= v8;
        goto LABEL_17;
      }
LABEL_15:
      *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
      goto LABEL_16;
    }
LABEL_42:
    *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
    if ((v8 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  if ((v8 & 0x100) != 0)
  {
    uint64_t v12 = *(void *)(a2 + 120);
    *(_DWORD *)(a1 + 40) |= 0x100u;
    *(void *)(a1 + 120) = v12;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_133E570(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 80) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 88) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_133E5D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.VehicleInfo");
}

void *sub_133E5E0(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24AAD00;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = 0x6400000000;
  return a1;
}

void sub_133E658(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_133E688(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_133E730(uint64_t a1)
{
  sub_133E688(a1);

  operator delete();
}

unsigned char *sub_133E768(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
  if ((v3 & 6) != 0) {
    *(void *)(a1 + 56) = 0x6400000000;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_133E800(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = (char *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)unint64_t v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_24;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v16 = v8 + 2;
LABEL_24:
        *(void *)unint64_t v30 = v16;
        *(_DWORD *)(a1 + 60) = v17;
        goto LABEL_37;
      }
      uint64_t v26 = sub_188C0D0((uint64_t)v8, v17);
      *(void *)unint64_t v30 = v26;
      *(_DWORD *)(a1 + 60) = v27;
      if (!v26) {
        goto LABEL_46;
      }
      goto LABEL_37;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 2u;
    int v23 = v8 + 1;
    LODWORD(v22) = *v8;
    if ((v22 & 0x80) == 0) {
      goto LABEL_32;
    }
    int v24 = *v23;
    uint64_t v22 = v22 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      int v23 = v8 + 2;
LABEL_32:
      *(void *)unint64_t v30 = v23;
      *(_DWORD *)(a1 + 56) = v22;
      goto LABEL_37;
    }
    uint64_t v28 = sub_188C138((uint64_t)v8, v22);
    *(void *)unint64_t v30 = v28;
    *(_DWORD *)(a1 + 56) = v29;
    if (!v28) {
      goto LABEL_46;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v19 = *(void *)(a1 + 8);
    unsigned int v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      unsigned int v20 = (uint64_t *)*v20;
    }
    unsigned int v21 = (std::string *)sub_1880F84((void *)(a1 + 48), v20);
    uint64_t v15 = (void *)sub_188C244(v21, *(char **)v30, (uint64_t)a3);
LABEL_36:
    *(void *)unint64_t v30 = v15;
    if (!v15) {
      goto LABEL_46;
    }
    goto LABEL_37;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (v9 - 7600 > 0x18F)
    {
      if (*v7)
      {
        uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v8 = *(char **)v30;
      }
      uint64_t v15 = sub_1885AC0(v9, v25, v8, a3);
    }
    else
    {
      uint64_t v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25338A0, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_46:
  *(void *)unint64_t v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v30;
}

char *sub_133EA84(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 60);
    char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_133EC6C(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      result += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v3 & 2) == 0)
      {
LABEL_4:
        if ((v3 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v3 & 2) == 0)
    {
      goto LABEL_4;
    }
    int v8 = *(_DWORD *)(a1 + 56);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v9;
    if ((v3 & 4) != 0) {
LABEL_5:
    }
      result += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_6:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v10 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

uint64_t sub_133ED7C(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_133ED84@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.Price");
}

uint64_t sub_133ED94(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AAD80;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 93) = 0;
  *(_DWORD *)(a1 + 104) = 1;
  return a1;
}

void sub_133EE14(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_133EE44(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25338E0)
  {
    uint64_t v6 = *(void *)(a1 + 88);
    if (v6)
    {
      sub_133E688(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 72);
  sub_1366A98((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_133EF18(uint64_t a1)
{
  sub_133EE44(a1);

  operator delete();
}

unsigned char *sub_133EF50(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1330AF0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  *(_DWORD *)(a1 + 72) = 0;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    uint64_t result = sub_133E768(*(void *)(a1 + 88));
  }
  if ((v6 & 0xE) != 0)
  {
    *(unsigned char *)(a1 + 100) = 0;
    *(_DWORD *)(a1 + 96) = 0;
    *(_DWORD *)(a1 + 104) = 1;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

char *sub_133F004(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v45 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v45, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      char v8 = v45 + 1;
      unsigned int v9 = *v45;
      if (*v45 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          char v8 = (char *)sub_188C180((uint64_t)v45, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          char v8 = v45 + 2;
        }
      }
      uint64_t v45 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_64;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          unsigned int v12 = *(void **)(a1 + 88);
          if (!v12)
          {
            uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v13 = (void *)*v13;
            }
            unsigned int v12 = sub_134E5B0((uint64_t)v13);
            *(void *)(a1 + 88) = v12;
            char v8 = v45;
          }
          BOOL v14 = (char *)sub_133F4E0(a3, (uint64_t)v12, (unsigned __int8 *)v8);
          goto LABEL_73;
        case 2u:
          if (v9 != 16) {
            goto LABEL_64;
          }
          unint64_t v15 = v8 + 1;
          unint64_t v16 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          int v18 = v16 + (v17 << 7);
          unint64_t v16 = (v18 - 128);
          if (v17 < 0)
          {
            uint64_t v45 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
            if (!v45) {
              goto LABEL_83;
            }
            unint64_t v16 = v37;
          }
          else
          {
            unint64_t v15 = v8 + 2;
LABEL_19:
            uint64_t v45 = v15;
          }
          if (sub_1369B44(v16))
          {
            *(_DWORD *)(a1 + 40) |= 2u;
            *(_DWORD *)(a1 + 96) = v16;
          }
          else
          {
            if (*v7) {
              unsigned int v44 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              unsigned int v44 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(2, v16, v44);
          }
          goto LABEL_74;
        case 3u:
          if (v9 != 24) {
            goto LABEL_64;
          }
          v5 |= 8u;
          uint64_t v19 = v8 + 1;
          int v20 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_26;
          }
          int v21 = *v19;
          int v20 = v20 + (v21 << 7) - 128;
          if (v21 < 0)
          {
            unint64_t v38 = (char *)sub_188C0D0((uint64_t)v8, v20);
            uint64_t v45 = v38;
            *(_DWORD *)(a1 + 104) = v39;
            if (!v38) {
              goto LABEL_83;
            }
          }
          else
          {
            uint64_t v19 = v8 + 2;
LABEL_26:
            uint64_t v45 = v19;
            *(_DWORD *)(a1 + 104) = v20;
          }
          goto LABEL_74;
        case 4u:
          if (v9 != 34) {
            goto LABEL_64;
          }
          uint64_t v22 = v8 - 1;
          while (1)
          {
            int v23 = (unsigned __int8 *)(v22 + 1);
            uint64_t v45 = v22 + 1;
            int v24 = *(_DWORD **)(a1 + 64);
            if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
            {
              *(_DWORD *)(a1 + 56) = v25 + 1;
              uint64_t v26 = *(void *)&v24[2 * v25 + 2];
            }
            else
            {
              int v27 = sub_133280C(*(void *)(a1 + 48));
              uint64_t v26 = sub_188CDC8(a1 + 48, (uint64_t)v27);
              int v23 = (unsigned __int8 *)v45;
            }
            uint64_t v22 = (char *)sub_133F570(a3, v26, v23);
            uint64_t v45 = v22;
            if (!v22) {
              goto LABEL_83;
            }
            if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
              goto LABEL_74;
            }
          }
        case 5u:
          if (v9 != 40) {
            goto LABEL_64;
          }
          v5 |= 4u;
          uint64_t v28 = v8 + 1;
          uint64_t v29 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_41;
          }
          int v30 = *v28;
          uint64_t v29 = v29 + (v30 << 7) - 128;
          if (v30 < 0)
          {
            int v40 = (char *)sub_188C138((uint64_t)v8, v29);
            uint64_t v45 = v40;
            *(unsigned char *)(a1 + 100) = v41 != 0;
            if (!v40) {
              goto LABEL_83;
            }
          }
          else
          {
            uint64_t v28 = v8 + 2;
LABEL_41:
            uint64_t v45 = v28;
            *(unsigned char *)(a1 + 100) = v29 != 0;
          }
          goto LABEL_74;
        case 6u:
          if (v9 == 48)
          {
            unint64_t v31 = v8 - 1;
            while (1)
            {
              uint64_t v45 = v31 + 1;
              int v32 = v31[1];
              if (v31[1] < 0)
              {
                int v33 = v32 + (v31[2] << 7);
                int v32 = v33 - 128;
                if (v31[2] < 0)
                {
                  unint64_t v31 = (char *)sub_188C0D0((uint64_t)(v31 + 1), v33 - 128);
                  int v32 = v34;
                }
                else
                {
                  v31 += 3;
                }
              }
              else
              {
                v31 += 2;
              }
              uint64_t v45 = v31;
              uint64_t v35 = *(unsigned int *)(a1 + 72);
              if (v35 == *(_DWORD *)(a1 + 76))
              {
                int v36 = v35 + 1;
                sub_188C80C((unsigned int *)(a1 + 72), v35 + 1);
                *(_DWORD *)(*(void *)(a1 + 80) + 4 * v35) = v32;
                unint64_t v31 = v45;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 80) + 4 * v35) = v32;
                int v36 = v35 + 1;
              }
              *(_DWORD *)(a1 + 72) = v36;
              if (!v31) {
                goto LABEL_83;
              }
              if (*(void *)a3 <= (unint64_t)v31 || *v31 != 48) {
                goto LABEL_74;
              }
            }
          }
          if (v9 == 50)
          {
            BOOL v14 = (char *)sub_188C2CC((unsigned int *)(a1 + 72), (unsigned __int8 *)v8, (uint64_t)a3);
          }
          else
          {
LABEL_64:
            if (v9) {
              BOOL v42 = (v9 & 7) == 4;
            }
            else {
              BOOL v42 = 1;
            }
            if (v42)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_83:
              uint64_t v45 = 0;
              goto LABEL_2;
            }
            if (v9 - 7600 > 0x18F)
            {
              if (*v7)
              {
                uint64_t v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                uint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                char v8 = v45;
              }
              BOOL v14 = (char *)sub_1885AC0(v9, v43, v8, a3);
            }
            else
            {
              BOOL v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25338E0, (uint64_t *)(a1 + 8), a3);
            }
          }
LABEL_73:
          uint64_t v45 = v14;
          if (!v14) {
            goto LABEL_83;
          }
LABEL_74:
          if (sub_11947B8((uint64_t)a3, &v45, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        default:
          goto LABEL_64;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v45;
}

uint64_t sub_133F4E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_133E800(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_133F570(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1330BB8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_133F600(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 88);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_133EA84(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 96);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 104);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      v4[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        int v20 = v4 + 2;
      }
      uint64_t v4 = sub_1330F84(v18, v20, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v21 = *(unsigned char *)(a1 + 100);
    char *v4 = 40;
    v4[1] = v21;
    v4 += 2;
  }
  uint64_t v22 = *(unsigned int *)(a1 + 72);
  if ((int)v22 >= 1)
  {
    for (uint64_t j = 0; j != v22; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v24 = *(_DWORD *)(*(void *)(a1 + 80) + 4 * j);
      char *v4 = 48;
      v4[1] = v24;
      if (v24 > 0x7F)
      {
        v4[1] = v24 | 0x80;
        unsigned int v25 = v24 >> 7;
        v4[2] = v24 >> 7;
        v4 += 3;
        if (v24 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v26 = v25 >> 14;
            v25 >>= 7;
            *v4++ = v25;
          }
          while (v26);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    int v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    int v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if (*a3 - (void)v4 >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v32;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_133F99C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1331208(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = sub_188D4F0((unsigned int *)(a1 + 72)) + v4 + *(unsigned int *)(a1 + 72);
  int v11 = *(_DWORD *)(a1 + 40);
  if ((v11 & 0xF) != 0)
  {
    if (v11)
    {
      uint64_t v12 = sub_133EC6C(*(void *)(a1 + 88));
      v10 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v11 & 2) != 0)
    {
      int v13 = *(_DWORD *)(a1 + 96);
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v13 >= 0) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = 11;
      }
      v10 += v15;
    }
    if ((v11 & 4) != 0) {
      v10 += 2;
    }
    if ((v11 & 8) != 0) {
      v10 += ((9 * (__clz(*(_DWORD *)(a1 + 104) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v10 += v19;
  }
  *(_DWORD *)(a1 + 44) = v10;
  return v10;
}

void sub_133FB08(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1367A80((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 72);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 72);
    sub_188C80C((unsigned int *)(a1 + 72), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  int v12 = *(_DWORD *)(a2 + 40);
  if ((v12 & 0xF) != 0)
  {
    if (v12)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v14 = *(void **)(a1 + 88);
      if (!v14)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v14 = sub_134E5B0((uint64_t)v16);
        *(void *)(a1 + 88) = v14;
      }
      if (*(void *)(a2 + 88)) {
        int v17 = *(uint64_t (****)())(a2 + 88);
      }
      else {
        int v17 = &off_25338A0;
      }
      sub_12BE4EC((uint64_t)v14, (uint64_t)v17);
      if ((v12 & 2) == 0)
      {
LABEL_9:
        if ((v12 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_26;
      }
    }
    else if ((v12 & 2) == 0)
    {
      goto LABEL_9;
    }
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v12 & 4) == 0)
    {
LABEL_10:
      if ((v12 & 8) == 0)
      {
LABEL_12:
        *(_DWORD *)(a1 + 40) |= v12;
        goto LABEL_13;
      }
LABEL_11:
      *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
      goto LABEL_12;
    }
LABEL_26:
    *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
    if ((v12 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_133FCC0(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 64) + 8 * v3) + 16);
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 88) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_133FD38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.BaseFare");
}

void *sub_133FD48(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24AAE00;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  return a1;
}

void sub_133FDAC(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_133FDDC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2533950)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_133E688(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_133FE9C(uint64_t a1)
{
  sub_133FDDC(a1);

  operator delete();
}

unsigned char *sub_133FED4(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_133E768(*(void *)(a1 + 48));
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_133FF38(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    int v12 = *(void **)(a1 + 48);
    if (!v12)
    {
      uint64_t v13 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v13 = (void *)*v13;
      }
      int v12 = sub_134E5B0((uint64_t)v13);
      *(void *)(a1 + 48) = v12;
      uint64_t v6 = v16;
    }
    uint64_t v11 = (char *)sub_133F4E0(a3, (uint64_t)v12, (unsigned __int8 *)v6);
LABEL_22:
    uint64_t v16 = v11;
    if (!v11) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (v7 - 7600 > 0x18F)
    {
      if (*v5)
      {
        uint64_t v14 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = v16;
      }
      uint64_t v11 = (char *)sub_1885AC0(v7, v14, v6, a3);
    }
    else
    {
      uint64_t v11 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2533950, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_22;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_13400D8(uint64_t a1, char *a2, void *a3)
{
  char v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    char v4 = sub_133EA84(v6, v8, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_134020C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v3 = sub_133EC6C(*(void *)(a1 + 48));
    v2 += v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v2 += v7;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_13402A0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = *(void **)(a1 + 48);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      uint64_t v5 = sub_134E5B0((uint64_t)v7);
      *(void *)(a1 + 48) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 48);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_25338A0;
    }
    sub_12BE4EC((uint64_t)v5, (uint64_t)v8);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1340354(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 48) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_134039C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.Surcharge.SurchargeUnit");
}

void *sub_13403AC(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24AAE80;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = 0x100000000;
  return a1;
}

void sub_1340420(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1340450(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1366B18(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13404D8(void *a1)
{
  sub_1340450(a1);

  operator delete();
}

unsigned char *sub_1340510(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_133FED4(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if ((*(unsigned char *)(a1 + 40) & 3) != 0) {
    *(void *)(a1 + 72) = 0x100000000;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_13405B0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v34 + 2;
      }
    }
    int v34 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    int v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    int v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_24:
      int v34 = v16;
      *(_DWORD *)(a1 + 76) = v17;
      goto LABEL_45;
    }
    int v30 = (char *)sub_188C0D0((uint64_t)v8, v17);
    int v34 = v30;
    *(_DWORD *)(a1 + 76) = v31;
    if (!v30) {
      goto LABEL_58;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 != 16) {
      goto LABEL_14;
    }
    uint64_t v19 = v8 + 1;
    unint64_t v20 = *v8;
    if (*v8 < 0)
    {
      int v21 = *v19;
      int v22 = v20 + (v21 << 7);
      unint64_t v20 = (v22 - 128);
      if (v21 < 0)
      {
        int v34 = (char *)sub_188C138((uint64_t)v8, (v22 - 128));
        if (!v34) {
          goto LABEL_58;
        }
        unint64_t v20 = v32;
        goto LABEL_30;
      }
      uint64_t v19 = v8 + 2;
    }
    int v34 = v19;
LABEL_30:
    if (sub_1369B44(v20))
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      *(_DWORD *)(a1 + 72) = v20;
    }
    else
    {
      if (*v7) {
        int v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v20, v33);
    }
    goto LABEL_45;
  }
  if (v12 == 1 && v9 == 10)
  {
    int v23 = v8 - 1;
    while (1)
    {
      unsigned int v24 = (unsigned __int8 *)(v23 + 1);
      int v34 = v23 + 1;
      unsigned int v25 = *(_DWORD **)(a1 + 64);
      if (v25 && (uint64_t v26 = *(int *)(a1 + 56), (int)v26 < *v25))
      {
        *(_DWORD *)(a1 + 56) = v26 + 1;
        uint64_t v27 = *(void *)&v25[2 * v26 + 2];
      }
      else
      {
        uint64_t v28 = sub_134E668(*(void *)(a1 + 48));
        uint64_t v27 = sub_188CDC8(a1 + 48, (uint64_t)v28);
        unsigned int v24 = (unsigned __int8 *)v34;
      }
      int v23 = sub_13408C8(a3, v27, v24);
      int v34 = v23;
      if (!v23) {
        goto LABEL_58;
      }
      if (*(void *)a3 <= (unint64_t)v23 || *v23 != 10) {
        goto LABEL_45;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (v9 - 7600 > 0x18F)
    {
      if (*v7)
      {
        unint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unsigned int v8 = v34;
      }
      uint64_t v15 = sub_1885AC0(v9, v29, v8, a3);
    }
    else
    {
      uint64_t v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2533988, (uint64_t *)(a1 + 8), a3);
    }
    int v34 = (char *)v15;
    if (!v15) {
      goto LABEL_58;
    }
    goto LABEL_45;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_58:
  int v34 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v34;
}

char *sub_13408C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_133FF38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1340958(uint64_t a1, char *a2, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_13400D8(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v12 = *(int *)(a1 + 72);
    *a2 = 16;
    a2[1] = v12;
    if (v12 > 0x7F)
    {
      a2[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      a2[2] = v12 >> 7;
      a2 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *a2++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 76);
    *a2 = 24;
    a2[1] = v15;
    if (v15 > 0x7F)
    {
      a2[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      a2[2] = v15 >> 7;
      a2 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *a2++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 950, 1000, a2, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return a2;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*a3 - (void)a2 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(a2, v21, (int)v22);
    a2 += v23;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, a2);
}

uint64_t sub_1340BBC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_134020C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 3) != 0)
  {
    if (v10)
    {
      int v11 = *(_DWORD *)(a1 + 72);
      if (v11 < 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v4 += v12;
    }
    if ((v10 & 2) != 0) {
      v4 += ((9 * (__clz(*(_DWORD *)(a1 + 76) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v4 += v16;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_1340CD8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1367B0C((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    }
    if ((v9 & 2) != 0) {
      *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
    }
    *(_DWORD *)(a1 + 40) |= v9;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1340DE4(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_1340354(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_1340E4C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.Surcharge");
}

void *sub_1340E5C(void *a1)
{
  BOOL v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1340ED0(void *a1)
{
  sub_1340E5C(a1);

  operator delete();
}

uint64_t sub_1340F08(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1340F30(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    unsigned int v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      unsigned int v25 = v15;
      *(_DWORD *)(a1 + 32) = v16;
      goto LABEL_30;
    }
    int v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    unsigned int v25 = v21;
    *(_DWORD *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      unsigned int v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    unsigned int v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    unsigned int v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unsigned int v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1341120(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_13412C4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1341368()
{
  return 1;
}

void *sub_1341370@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.VehiclePositionInfo.DepartureEntry");
}

void *sub_1341380(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1366B98(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1341400(void *a1)
{
  sub_1341380(a1);

  operator delete();
}

uint64_t sub_1341438(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1340F08(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  unint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_13414B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        unsigned int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_134E720(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unsigned int v12 = sub_1341654(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1341654(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1340F30(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13416E4(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1341120(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1341828(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      unint64_t v7 = sub_13412C4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_13418D8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_1367B98((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13419A8()
{
  return 1;
}

void *sub_13419B0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.VehiclePositionInfo");
}

uint64_t sub_13419C0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1341A60(uint64_t a1)
{
  sub_13419C0(a1);

  operator delete();
}

uint64_t sub_1341A98(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0x1E) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1341AEC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v38 + 1);
    unsigned int v9 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v38 + 2);
      }
    }
    *(void *)unint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_33;
        }
        v5 |= 2u;
        unsigned int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          *(void *)unint64_t v38 = v12;
          *(void *)(a1 + 32) = v13;
          goto LABEL_41;
        }
        uint64_t v30 = sub_188C138((uint64_t)v8, v13);
        *(void *)unint64_t v38 = v30;
        *(void *)(a1 + 32) = v31;
        if (v30) {
          goto LABEL_41;
        }
        goto LABEL_54;
      case 2u:
        if (v9 != 16) {
          goto LABEL_33;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v32 = sub_188C138((uint64_t)v8, v16);
          *(void *)unint64_t v38 = v32;
          *(void *)(a1 + 40) = v33;
          if (!v32) {
            goto LABEL_54;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          *(void *)unint64_t v38 = v15;
          *(void *)(a1 + 40) = v16;
        }
        goto LABEL_41;
      case 3u:
        if (v9 != 24) {
          goto LABEL_33;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v34 = sub_188C0D0((uint64_t)v8, v19);
          *(void *)unint64_t v38 = v34;
          *(_DWORD *)(a1 + 48) = v35;
          if (!v34) {
            goto LABEL_54;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          *(void *)unint64_t v38 = v18;
          *(_DWORD *)(a1 + 48) = v19;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 32) {
          goto LABEL_33;
        }
        v5 |= 0x10u;
        int v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v36 = sub_188C0D0((uint64_t)v8, v22);
          *(void *)unint64_t v38 = v36;
          *(_DWORD *)(a1 + 52) = v37;
          if (!v36) {
            goto LABEL_54;
          }
        }
        else
        {
          int v21 = v8 + 2;
LABEL_28:
          *(void *)unint64_t v38 = v21;
          *(_DWORD *)(a1 + 52) = v22;
        }
        goto LABEL_41;
      case 5u:
        if (v9 != 42) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v24 = *(void *)(a1 + 8);
        unsigned int v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          unsigned int v25 = (uint64_t *)*v25;
        }
        uint64_t v26 = (std::string *)sub_1880F84((void *)(a1 + 24), v25);
        uint64_t v27 = (void *)sub_188C244(v26, *(char **)v38, (uint64_t)a3);
        goto LABEL_40;
      default:
LABEL_33:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            unint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v38;
          }
          uint64_t v27 = sub_1885AC0(v9, v29, v8, a3);
LABEL_40:
          *(void *)unint64_t v38 = v27;
          if (!v27) {
            goto LABEL_54;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_54:
        }
          *(void *)unint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v38;
    }
  }
}

unsigned char *sub_1341E10(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 40);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 52);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_13420CC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_12:
      if ((v1 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_12;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0) {
LABEL_13:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1342208(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_17;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_18;
    }
LABEL_17:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
      goto LABEL_8;
    }
LABEL_18:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13422F8()
{
  return 1;
}

void *sub_1342300@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.ScheduleInfo.Entry");
}

uint64_t sub_1342310(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2533A40)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_13419C0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13423C8(uint64_t a1)
{
  sub_1342310(a1);

  operator delete();
}

uint64_t sub_1342400(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1341A98(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_134245C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    unsigned int v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    unsigned int v13 = *(void **)(a1 + 24);
    if (!v13)
    {
      unsigned int v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        unsigned int v14 = (void *)*v14;
      }
      unsigned int v13 = sub_134E83C((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    unint64_t v12 = (char *)sub_13425B4(a3, (uint64_t)v13, (unsigned __int8 *)v6);
LABEL_20:
    unsigned int v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    unint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

uint64_t sub_13425B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1341AEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1342644(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = sub_1341E10(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1342754(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_13420CC(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_13427DC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unsigned int v7 = (void *)*v7;
      }
      std::string::pointer data = (std::string *)sub_134E83C((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2533A08;
    }
    uint64_t result = sub_1342208(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1342884()
{
  return 1;
}

void *sub_134288C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.ScheduleInfo");
}

void *sub_134289C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1342910(void *a1)
{
  sub_134289C(a1);

  operator delete();
}

uint64_t sub_1342948(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1342960(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  unint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    uint64_t v19 = v6;
    if (v7 == 8)
    {
      unint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        unint64_t v12 = v6 + 2;
      }
      uint64_t v19 = v12;
LABEL_20:
      if (v13 > 4)
      {
        if (*v5) {
          unsigned int v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unsigned int v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_1342B08(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1342C30(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_1342CA4()
{
  return 1;
}

void *sub_1342CAC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.OccupancyInfo");
}

uint64_t sub_1342CBC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2533A80 && *(void *)(a1 + 40))
  {
    sub_1374318();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1342D7C(uint64_t a1)
{
  sub_1342CBC(a1);

  operator delete();
}

uint64_t sub_1342DB4(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1369E6C(*(void *)(result + 40));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 40) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1342E18(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v17 = *(void *)(a1 + 40);
      if (!v17)
      {
        unsigned int v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v18 = (void *)*v18;
        }
        sub_13D6A1C((uint64_t)v18);
        uint64_t v17 = v19;
        *(void *)(a1 + 40) = v19;
        unint64_t v8 = v31;
      }
      unint64_t v16 = (char *)sub_13319DC(a3, v17, (unsigned __int8 *)v8);
LABEL_27:
      uint64_t v31 = v16;
      if (!v16) {
        goto LABEL_56;
      }
      goto LABEL_47;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v26 = v8 + 1;
    int v27 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_46;
    }
    int v28 = *v26;
    int v27 = v27 + (v28 << 7) - 128;
    if ((v28 & 0x80000000) == 0)
    {
      uint64_t v26 = v8 + 2;
LABEL_46:
      uint64_t v31 = v26;
      *(_DWORD *)(a1 + 48) = v27;
      goto LABEL_47;
    }
    unint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v27);
    uint64_t v31 = v29;
    *(_DWORD *)(a1 + 48) = v30;
    if (!v29) {
      goto LABEL_56;
    }
LABEL_47:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    int v20 = v8 - 1;
    while (1)
    {
      uint64_t v31 = v20 + 1;
      int v21 = v20[1];
      if (v20[1] < 0)
      {
        int v22 = v21 + (v20[2] << 7);
        int v21 = v22 - 128;
        if (v20[2] < 0)
        {
          int v20 = (char *)sub_188C0D0((uint64_t)(v20 + 1), v22 - 128);
          int v21 = v23;
        }
        else
        {
          v20 += 3;
        }
      }
      else
      {
        v20 += 2;
      }
      uint64_t v31 = v20;
      uint64_t v24 = *(unsigned int *)(a1 + 24);
      if (v24 == *(_DWORD *)(a1 + 28))
      {
        int v25 = v24 + 1;
        sub_188C80C((unsigned int *)(a1 + 24), v24 + 1);
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v24) = v21;
        int v20 = v31;
      }
      else
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v24) = v21;
        int v25 = v24 + 1;
      }
      *(_DWORD *)(a1 + 24) = v25;
      if (!v20) {
        goto LABEL_56;
      }
      if (*(void *)a3 <= (unint64_t)v20 || *v20 != 16) {
        goto LABEL_47;
      }
    }
  }
  if (v9 == 18)
  {
    unint64_t v16 = (char *)sub_188C2CC((unsigned int *)(a1 + 24), (unsigned __int8 *)v8, (uint64_t)a3);
    goto LABEL_27;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v31;
    }
    unint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_27;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_56:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

char *sub_13430E8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 24);
  if ((int)v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v12 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * i);
      char *v4 = 16;
      v4[1] = v12;
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unsigned int v13 = v12 >> 7;
        v4[2] = v12 >> 7;
        v4 += 3;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v14 = v13 >> 14;
            v13 >>= 7;
            *v4++ = v13;
          }
          while (v14);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 40);
    char *v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v15, v17, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1343328(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      uint64_t v4 = sub_1374EEC(*(void *)(a1 + 40));
      v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_13433F8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v9 = *(void *)(a1 + 40);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        sub_13D6A1C((uint64_t)v11);
        *(void *)(a1 + 40) = v9;
      }
      if (*(void *)(a2 + 40)) {
        unsigned int v12 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        unsigned int v12 = &off_2534750;
      }
      sub_136A7DC(v9, (uint64_t)v12);
    }
    if ((v8 & 2) != 0) {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    }
    *(_DWORD *)(a1 + 16) |= v8;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_134350C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1343538@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.ExitPlanInfo");
}

uint64_t sub_1343548(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13435CC((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_13435CC(uint64_t (***result)()))()
{
  if (result != &off_2533AB8)
  {
    uint64_t v1 = result;
    if (result[3])
    {
      sub_1374318();
      operator delete();
    }
    if (result[4])
    {
      sub_1374318();
      operator delete();
    }
    uint64_t v2 = result[5];
    if (v2)
    {
      sub_134289C(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[6];
    if (v3)
    {
      sub_1342CBC(v3);
      operator delete();
    }
    if (v1[7])
    {
      sub_137A1AC();
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[8];
    if (result)
    {
      sub_137A1AC();
      operator delete();
    }
  }
  return result;
}

void sub_13436D8(uint64_t a1)
{
  sub_1343548(a1);

  operator delete();
}

uint64_t sub_1343710(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_14;
  }
  if (v2)
  {
    uint64_t result = sub_1369E6C(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_10;
      }
LABEL_8:
      uint64_t v3 = *(void *)(v1 + 40);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
      goto LABEL_10;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_1369E6C(*(void *)(v1 + 32));
  if ((v2 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_10:
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_1342DB4(*(void *)(v1 + 48));
    if ((v2 & 0x10) == 0)
    {
LABEL_12:
      if ((v2 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_12;
  }
  uint64_t result = sub_137A1E8(*(void *)(v1 + 56));
  if ((v2 & 0x20) != 0) {
LABEL_13:
  }
    uint64_t result = sub_137A1E8(*(void *)(v1 + 64));
LABEL_14:
  if ((v2 & 0xC0) != 0)
  {
    *(unsigned char *)(v1 + 76) = 0;
    *(_DWORD *)(v1 + 72) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_13437E8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v37 + 1;
    unsigned int v9 = *v37;
    if (*v37 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v37, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v37 + 2;
      }
    }
    int v37 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_55;
        }
        v5 |= 0x40u;
        unsigned int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          int v37 = v12;
          *(_DWORD *)(a1 + 72) = v13;
          goto LABEL_63;
        }
        uint64_t v33 = (char *)sub_188C0D0((uint64_t)v8, v13);
        int v37 = v33;
        *(_DWORD *)(a1 + 72) = v34;
        if (v33) {
          goto LABEL_63;
        }
        goto LABEL_72;
      case 2u:
        if (v9 != 18) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 24);
        if (v15) {
          goto LABEL_25;
        }
        unsigned int v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v16 = (void *)*v16;
        }
        sub_13D6A1C((uint64_t)v16);
        uint64_t v15 = v17;
        *(void *)(a1 + 24) = v17;
        goto LABEL_24;
      case 3u:
        if (v9 != 26) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 32);
        if (v15) {
          goto LABEL_25;
        }
        uint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v18 = (void *)*v18;
        }
        sub_13D6A1C((uint64_t)v18);
        uint64_t v15 = v19;
        *(void *)(a1 + 32) = v19;
LABEL_24:
        int v8 = v37;
LABEL_25:
        unint64_t v20 = (char *)sub_13319DC(a3, v15, (unsigned __int8 *)v8);
        goto LABEL_62;
      case 4u:
        if (v9 != 34) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 40);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_134E93C((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          int v8 = v37;
        }
        unint64_t v20 = sub_1343BF0(a3, v21, (unsigned __int8 *)v8);
        goto LABEL_62;
      case 5u:
        if (v9 != 42) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v23 = *(void *)(a1 + 48);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_134E9B8((uint64_t)v24);
          *(void *)(a1 + 48) = v23;
          int v8 = v37;
        }
        unint64_t v20 = sub_1343C80(a3, v23, (unsigned __int8 *)v8);
        goto LABEL_62;
      case 6u:
        if (v9 != 48) {
          goto LABEL_55;
        }
        v5 |= 0x80u;
        int v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          int v35 = (char *)sub_188C138((uint64_t)v8, v26);
          int v37 = v35;
          *(unsigned char *)(a1 + 76) = v36 != 0;
          if (!v35) {
            goto LABEL_72;
          }
        }
        else
        {
          int v25 = v8 + 2;
LABEL_42:
          int v37 = v25;
          *(unsigned char *)(a1 + 76) = v26 != 0;
        }
        goto LABEL_63;
      case 7u:
        if (v9 != 58) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v28 = *(void *)(a1 + 56);
        if (v28) {
          goto LABEL_54;
        }
        unint64_t v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v29 = (void *)*v29;
        }
        uint64_t v28 = sub_13D6EDC((uint64_t)v29);
        *(void *)(a1 + 56) = v28;
        goto LABEL_53;
      case 8u:
        if (v9 != 66) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v28 = *(void *)(a1 + 64);
        if (v28) {
          goto LABEL_54;
        }
        int v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v30 = (void *)*v30;
        }
        uint64_t v28 = sub_13D6EDC((uint64_t)v30);
        *(void *)(a1 + 64) = v28;
LABEL_53:
        int v8 = v37;
LABEL_54:
        unint64_t v20 = sub_1343D10(a3, v28, (unsigned __int8 *)v8);
        goto LABEL_62;
      default:
LABEL_55:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v37;
          }
          unint64_t v20 = (char *)sub_1885AC0(v9, v32, v8, a3);
LABEL_62:
          int v37 = v20;
          if (!v20) {
            goto LABEL_72;
          }
LABEL_63:
          if (sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_72:
        }
          int v37 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v37;
    }
  }
}

char *sub_1343BF0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1342960(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1343C80(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1342E18(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1343D10(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_137A25C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1343DA0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 72);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    char v4 = sub_1374B08(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_28;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_1374B08(v13, v15, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_28:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 40);
  char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_1342B08(v16, (unint64_t)v18, a3);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_40;
  }
LABEL_34:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 48);
  char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  char v4 = sub_13430E8(v19, (unint64_t)v21, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_13:
    if ((v6 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v22 = *(unsigned char *)(a1 + 76);
  char *v4 = 48;
  v4[1] = v22;
  v4 += 2;
  if ((v6 & 0x10) == 0)
  {
LABEL_14:
    if ((v6 & 0x20) == 0) {
      goto LABEL_55;
    }
    goto LABEL_49;
  }
LABEL_43:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v23 = *(void *)(a1 + 56);
  char *v4 = 58;
  unsigned int v24 = *(_DWORD *)(v23 + 20);
  v4[1] = v24;
  if (v24 > 0x7F) {
    int v25 = sub_188A9CC(v24, v4 + 1);
  }
  else {
    int v25 = v4 + 2;
  }
  char v4 = sub_137A49C(v23, (unint64_t)v25, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_49:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v26 = *(void *)(a1 + 64);
    char *v4 = 66;
    unsigned int v27 = *(_DWORD *)(v26 + 20);
    v4[1] = v27;
    if (v27 > 0x7F) {
      uint64_t v28 = sub_188A9CC(v27, v4 + 1);
    }
    else {
      uint64_t v28 = v4 + 2;
    }
    char v4 = sub_137A49C(v26, (unint64_t)v28, a3);
  }
LABEL_55:
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    uint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    uint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_1344180(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  if (!v2)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v5 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((*(unsigned char *)(a1 + 16) & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_1374EEC(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_1342C30(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v9 = sub_1343328(*(void *)(a1 + 48));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v10 = sub_137A660(*(void *)(a1 + 56));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_22:
  uint64_t v11 = sub_137A660(*(void *)(a1 + 64));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) != 0) {
LABEL_13:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  if (v2 < 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_17:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v12 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1344358(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        sub_13D6A1C((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v8 = &off_2534750;
      }
      sub_136A7DC(v5, (uint64_t)v8);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9)
    {
      uint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        uint64_t v11 = (void *)*v11;
      }
      sub_13D6A1C((uint64_t)v11);
      *(void *)(a1 + 32) = v9;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v12 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unint64_t v12 = &off_2534750;
    }
    sub_136A7DC(v9, (uint64_t)v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_39;
      }
      goto LABEL_31;
    }
LABEL_23:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v13 = *(std::string **)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = (std::string *)sub_134E93C((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_2533A60;
    }
    sub_11A7934(v13, (uint64_t)v16);
    if ((v4 & 8) == 0)
    {
LABEL_39:
      if ((v4 & 0x10) != 0)
      {
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v22 = *(void *)(a1 + 56);
        if (!v22)
        {
          uint64_t v23 = *(void *)(a1 + 8);
          unsigned int v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
          if (v23) {
            unsigned int v24 = (void *)*v24;
          }
          uint64_t v22 = sub_13D6EDC((uint64_t)v24);
          *(void *)(a1 + 56) = v22;
        }
        if (*(void *)(a2 + 56)) {
          int v25 = *(uint64_t (****)())(a2 + 56);
        }
        else {
          int v25 = &off_25349C8;
        }
        sub_137A740(v22, (uint64_t)v25);
        if ((v4 & 0x20) == 0)
        {
LABEL_41:
          if ((v4 & 0x40) == 0) {
            goto LABEL_42;
          }
          goto LABEL_65;
        }
      }
      else if ((v4 & 0x20) == 0)
      {
        goto LABEL_41;
      }
      *(_DWORD *)(a1 + 16) |= 0x20u;
      uint64_t v26 = *(void *)(a1 + 64);
      if (!v26)
      {
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v28 = (void *)*v28;
        }
        uint64_t v26 = sub_13D6EDC((uint64_t)v28);
        *(void *)(a1 + 64) = v26;
      }
      if (*(void *)(a2 + 64)) {
        uint64_t v29 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        uint64_t v29 = &off_25349C8;
      }
      sub_137A740(v26, (uint64_t)v29);
      if ((v4 & 0x40) == 0)
      {
LABEL_42:
        if ((v4 & 0x80) == 0)
        {
LABEL_44:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_45;
        }
LABEL_43:
        *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
        goto LABEL_44;
      }
LABEL_65:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      if ((v4 & 0x80) == 0) {
        goto LABEL_44;
      }
      goto LABEL_43;
    }
LABEL_31:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v17 = *(void *)(a1 + 48);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = sub_134E9B8((uint64_t)v19);
      *(void *)(a1 + 48) = v17;
    }
    if (*(void *)(a2 + 48)) {
      unsigned int v20 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unsigned int v20 = &off_2533A80;
    }
    sub_13433F8(v17, (uint64_t)v20);
    goto LABEL_39;
  }
LABEL_45:
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13445C0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    if (*(unsigned char *)(v4 + 16))
    {
      uint64_t result = sub_136ADBC(*(void *)(v4 + 40));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t result = sub_137A860(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) == 0) {
    return 1;
  }
  uint64_t result = sub_137A860(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1344654@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.BoardingInfo.BoardingInfoEntry");
}

uint64_t sub_1344664(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13446F4((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1366C18((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_13446F4(uint64_t (***result)()))()
{
  if (result != &off_2533B08)
  {
    uint64_t v1 = result;
    uint64_t v2 = (uint64_t)result[6];
    if (v2)
    {
      sub_1342CBC(v2);
      operator delete();
    }
    if (v1[7])
    {
      sub_137A1AC();
      operator delete();
    }
    if (v1[8])
    {
      sub_137A1AC();
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[9];
    if (result)
    {
      sub_137A1AC();
      operator delete();
    }
  }
  return result;
}

void sub_13447C0(uint64_t a1)
{
  sub_1344664(a1);

  operator delete();
}

uint64_t sub_13447F8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1343710(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) == 0) {
    goto LABEL_11;
  }
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = sub_137A1E8(*(void *)(v1 + 56));
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_17;
  }
  uint64_t result = sub_1342DB4(*(void *)(v1 + 48));
  if ((v5 & 2) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v5 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_17:
  uint64_t result = sub_137A1E8(*(void *)(v1 + 64));
  if ((v5 & 8) != 0) {
LABEL_10:
  }
    uint64_t result = sub_137A1E8(*(void *)(v1 + 72));
LABEL_11:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_13448C4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_42;
        }
        uint64_t v11 = v7 - 1;
        while (1)
        {
          unint64_t v12 = (unsigned __int8 *)(v11 + 1);
          uint64_t v26 = v11 + 1;
          uint64_t v13 = *(_DWORD **)(a1 + 40);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 32), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 32) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            sub_134EA54(*(void *)(a1 + 24));
            uint64_t v15 = sub_188CDC8(a1 + 24, v16);
            unint64_t v12 = (unsigned __int8 *)v26;
          }
          uint64_t v11 = sub_1344BDC(a3, v15, v12);
          uint64_t v26 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_50;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v17 = *(void *)(a1 + 48);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_134E9B8((uint64_t)v18);
          *(void *)(a1 + 48) = v17;
          char v7 = v26;
        }
        uint64_t v19 = sub_1343C80(a3, v17, (unsigned __int8 *)v7);
        goto LABEL_49;
      case 4u:
        if (v8 != 34) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (v20) {
          goto LABEL_41;
        }
        uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v21 = (void *)*v21;
        }
        uint64_t v20 = sub_13D6EDC((uint64_t)v21);
        *(void *)(a1 + 56) = v20;
        goto LABEL_40;
      case 5u:
        if (v8 != 42) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void *)(a1 + 64);
        if (v20) {
          goto LABEL_41;
        }
        uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v22 = (void *)*v22;
        }
        uint64_t v20 = sub_13D6EDC((uint64_t)v22);
        *(void *)(a1 + 64) = v20;
        goto LABEL_40;
      case 6u:
        if (v8 != 50) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v20 = *(void *)(a1 + 72);
        if (v20) {
          goto LABEL_41;
        }
        uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v23 = (void *)*v23;
        }
        uint64_t v20 = sub_13D6EDC((uint64_t)v23);
        *(void *)(a1 + 72) = v20;
LABEL_40:
        char v7 = v26;
LABEL_41:
        uint64_t v19 = sub_1343D10(a3, v20, (unsigned __int8 *)v7);
        goto LABEL_49;
      default:
LABEL_42:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v6)
          {
            int v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = v26;
          }
          uint64_t v19 = (char *)sub_1885AC0(v8, v25, v7, a3);
LABEL_49:
          uint64_t v26 = v19;
          if (!v19) {
            return 0;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
            return v26;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v26;
    }
  }
}

char *sub_1344BDC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13437E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1344C6C(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1343DA0(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v12 = *(void *)(a1 + 48);
    *__dst = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    __dst[1] = v13;
    if (v13 > 0x7F) {
      uint64_t v14 = sub_188A9CC(v13, __dst + 1);
    }
    else {
      uint64_t v14 = __dst + 2;
    }
    __dst = sub_13430E8(v12, (unint64_t)v14, a3);
    if ((v11 & 2) == 0)
    {
LABEL_11:
      if ((v11 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_26;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_11;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v15 = *(void *)(a1 + 56);
  *__dst = 34;
  unsigned int v16 = *(_DWORD *)(v15 + 20);
  __dst[1] = v16;
  if (v16 > 0x7F) {
    uint64_t v17 = sub_188A9CC(v16, __dst + 1);
  }
  else {
    uint64_t v17 = __dst + 2;
  }
  __dst = sub_137A49C(v15, (unint64_t)v17, a3);
  if ((v11 & 4) == 0)
  {
LABEL_12:
    if ((v11 & 8) == 0) {
      goto LABEL_38;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v18 = *(void *)(a1 + 64);
  *__dst = 42;
  unsigned int v19 = *(_DWORD *)(v18 + 20);
  __dst[1] = v19;
  if (v19 > 0x7F) {
    uint64_t v20 = sub_188A9CC(v19, __dst + 1);
  }
  else {
    uint64_t v20 = __dst + 2;
  }
  __dst = sub_137A49C(v18, (unint64_t)v20, a3);
  if ((v11 & 8) != 0)
  {
LABEL_32:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v21 = *(void *)(a1 + 72);
    *__dst = 50;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    __dst[1] = v22;
    if (v22 > 0x7F) {
      uint64_t v23 = sub_188A9CC(v22, __dst + 1);
    }
    else {
      uint64_t v23 = __dst + 2;
    }
    __dst = sub_137A49C(v21, (unint64_t)v23, a3);
  }
LABEL_38:
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return __dst;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(__dst, v27, (int)v28);
    __dst += v29;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, __dst);
}

uint64_t sub_1344F54(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1344180(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_15;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_18:
    uint64_t v13 = sub_137A660(*(void *)(a1 + 56));
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_13:
      if ((v8 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_19;
  }
  uint64_t v12 = sub_1343328(*(void *)(a1 + 48));
  v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 2) != 0) {
    goto LABEL_18;
  }
LABEL_12:
  if ((v8 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_19:
  uint64_t v14 = sub_137A660(*(void *)(a1 + 64));
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) != 0)
  {
LABEL_14:
    uint64_t v9 = sub_137A660(*(void *)(a1 + 72));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v15 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_13450E0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1367C14((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_134E9B8((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v13 = &off_2533A80;
      }
      sub_13433F8(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v14 = *(void *)(a1 + 56);
      if (!v14)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v14 = sub_13D6EDC((uint64_t)v16);
        *(void *)(a1 + 56) = v14;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v17 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v17 = &off_25349C8;
      }
      sub_137A740(v14, (uint64_t)v17);
      if ((v9 & 4) == 0)
      {
LABEL_16:
        if ((v9 & 8) == 0) {
          goto LABEL_42;
        }
        goto LABEL_34;
      }
    }
    else if ((v9 & 4) == 0)
    {
      goto LABEL_16;
    }
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v18 = *(void *)(a1 + 64);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = sub_13D6EDC((uint64_t)v20);
      *(void *)(a1 + 64) = v18;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v21 = &off_25349C8;
    }
    sub_137A740(v18, (uint64_t)v21);
    if ((v9 & 8) != 0)
    {
LABEL_34:
      *(_DWORD *)(a1 + 16) |= 8u;
      uint64_t v22 = *(void *)(a1 + 72);
      if (!v22)
      {
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v24 = (void *)*v24;
        }
        uint64_t v22 = sub_13D6EDC((uint64_t)v24);
        *(void *)(a1 + 72) = v22;
      }
      if (*(void *)(a2 + 72)) {
        int v25 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        int v25 = &off_25349C8;
      }
      sub_137A740(v22, (uint64_t)v25);
    }
  }
LABEL_42:
  uint64_t v26 = *(void *)(a2 + 8);
  if (v26)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v26 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13452E8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_13445C0(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v7 = *(void *)(a1 + 48);
    if (*(unsigned char *)(v7 + 16))
    {
      uint64_t result = sub_136ADBC(*(void *)(v7 + 40));
      if (!result) {
        return result;
      }
      int v6 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v6 & 2) != 0)
  {
    uint64_t result = sub_137A860(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 4) != 0)
  {
    uint64_t result = sub_137A860(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_137A860(*(void *)(a1 + 72));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1345394@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.BoardingInfo");
}

uint64_t sub_13453A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2533B58)
  {
    if (*(void *)(a1 + 24))
    {
      sub_13D2884();
      operator delete();
    }
    if (*(void *)(a1 + 32))
    {
      sub_1374318();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1345474(uint64_t a1)
{
  sub_13453A4(a1);

  operator delete();
}

uint64_t sub_13454AC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_1369F48(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_1369E6C(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_134551C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      sub_13D6A1C((uint64_t)v16);
      uint64_t v15 = v17;
      *(void *)(a1 + 32) = v17;
      uint64_t v7 = v20;
    }
    uint64_t v14 = (char *)sub_13319DC(a3, v15, (unsigned __int8 *)v7);
LABEL_31:
    uint64_t v20 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 24);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_13DAB08((uint64_t)v19);
      *(void *)(a1 + 24) = v18;
      uint64_t v7 = v20;
    }
    uint64_t v14 = (char *)sub_1323390(a3, v18, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v20;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v20;
  }
  return 0;
}

char *sub_13456DC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_13D2F58(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_1374B08(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_134585C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_13D3304(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1374EEC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1345934(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_13DAB08((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2536850;
      }
      sub_136AA7C(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        sub_13D6A1C((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        BOOL v12 = &off_2534750;
      }
      sub_136A7DC(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1345A38(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_136AE2C(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1345A84@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.StepBadge");
}

uint64_t sub_1345A94(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AB380;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = a2;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = a2;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = &qword_2550250;
  *(_DWORD *)(a1 + 336) = 0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  return a1;
}

void sub_1345B48(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1345B78(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1345C50((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1366E98(a1 + 22);
  sub_1366E18(a1 + 19);
  sub_1889DA8((uint64_t)(a1 + 17));
  sub_1889DA8((uint64_t)(a1 + 15));
  sub_1366D98(a1 + 12);
  sub_1366D18(a1 + 9);
  sub_1366C98(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1345C50(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 200);
  uint64_t result = (void ***)(a1 + 200);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2533B80)
  {
    int v4 = *(void **)(a1 + 208);
    if (v4)
    {
      sub_133C8B0(v4);
      operator delete();
    }
    if (*(void *)(a1 + 216))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 224))
    {
      sub_137CEBC();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 232);
    if (v5)
    {
      sub_133EE44(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 240);
    if (v6)
    {
      sub_1340450(v6);
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 248);
    if (v7)
    {
      sub_1341380(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 256);
    if (v8)
    {
      sub_1342310(v8);
      operator delete();
    }
    uint64_t v9 = *(void *)(a1 + 264);
    if (v9)
    {
      sub_1344664(v9);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 272);
    if (result)
    {
      sub_139E068();
      operator delete();
    }
  }
  return result;
}

void sub_1345DD4(void *a1)
{
  sub_1345B78(a1);

  operator delete();
}

uint64_t sub_1345E0C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (uint64_t)sub_133D484(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = (uint64_t)sub_133B910(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = (uint64_t)sub_133C2F8(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  *(_DWORD *)(a1 + 120) = 0;
  *(_DWORD *)(a1 + 136) = 0;
  uint64_t v12 = *(unsigned int *)(a1 + 160);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 168) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_13454AC(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 160) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 184);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 192) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_134D55C(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 184) = 0;
  }
  int v18 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v18) {
    goto LABEL_36;
  }
  if (v18)
  {
    unint64_t v19 = *(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v19 + 23) < 0)
    {
      **(unsigned char **)unint64_t v19 = 0;
      *(void *)(v19 + 8) = 0;
      if ((v18 & 2) == 0) {
        goto LABEL_29;
      }
      goto LABEL_26;
    }
    *(unsigned char *)unint64_t v19 = 0;
    *(unsigned char *)(v19 + 23) = 0;
  }
  if ((v18 & 2) == 0) {
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v20 = *(void *)(a1 + 208);
  char v21 = *(unsigned char *)(v20 + 8);
  uint64_t result = v20 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v21) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_29:
  if ((v18 & 4) != 0)
  {
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 216));
    if ((v18 & 8) == 0)
    {
LABEL_31:
      if ((v18 & 0x10) == 0) {
        goto LABEL_32;
      }
      goto LABEL_51;
    }
  }
  else if ((v18 & 8) == 0)
  {
    goto LABEL_31;
  }
  uint64_t result = sub_137CEF8(*(void *)(a1 + 224));
  if ((v18 & 0x10) == 0)
  {
LABEL_32:
    if ((v18 & 0x20) == 0) {
      goto LABEL_33;
    }
LABEL_52:
    uint64_t result = (uint64_t)sub_1340510(*(void *)(a1 + 240));
    if ((v18 & 0x40) == 0)
    {
LABEL_34:
      if ((v18 & 0x80) == 0) {
        goto LABEL_36;
      }
      goto LABEL_35;
    }
    goto LABEL_53;
  }
LABEL_51:
  uint64_t result = (uint64_t)sub_133EF50(*(void *)(a1 + 232));
  if ((v18 & 0x20) != 0) {
    goto LABEL_52;
  }
LABEL_33:
  if ((v18 & 0x40) == 0) {
    goto LABEL_34;
  }
LABEL_53:
  uint64_t result = sub_1341438(*(void *)(a1 + 248));
  if ((v18 & 0x80) != 0) {
LABEL_35:
  }
    uint64_t result = sub_1342400(*(void *)(a1 + 256));
LABEL_36:
  if ((v18 & 0x300) != 0)
  {
    if ((v18 & 0x100) != 0) {
      uint64_t result = sub_13447F8(*(void *)(a1 + 264));
    }
    if ((v18 & 0x200) != 0) {
      uint64_t result = sub_139E0A4(*(void *)(a1 + 272));
    }
  }
  if ((v18 & 0xFC00) != 0)
  {
    *(void *)(a1 + 280) = 0;
    *(void *)(a1 + 288) = 0;
    *(void *)(a1 + 296) = 0;
  }
  if ((v18 & 0xFF0000) != 0)
  {
    *(_OWORD *)(a1 + 304) = 0u;
    *(_OWORD *)(a1 + 320) = 0u;
  }
  char v23 = *(unsigned char *)(a1 + 8);
  uint64_t v22 = a1 + 8;
  *(_DWORD *)(v22 + 328) = 0;
  *(_DWORD *)(v22 + 32) = 0;
  if (v23)
  {
    return sub_188B4AC((uint64_t *)v22);
  }
  return result;
}

uint64_t sub_1346038(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v158 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v158, a3[11].i32[1]) & 1) == 0)
  {
    v156 = (uint64_t *)(a1 + 152);
    v157 = (uint64_t *)(a1 + 176);
    v154 = (uint64_t *)(a1 + 8);
    v155 = (uint64_t *)(a1 + 96);
    while (1)
    {
      uint64_t v7 = (unsigned __int8 *)(*(void *)v158 + 1);
      unsigned int v8 = **(unsigned char **)v158;
      if ((char)**(unsigned char **)v158 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if ((char)*v7 < 0)
        {
          uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v158, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = (unsigned __int8 *)(*(void *)v158 + 2);
        }
      }
      *(void *)v158 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_259;
          }
          uint64_t v11 = (char *)(v7 + 1);
          unint64_t v12 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v13 = *v11;
          int v14 = v12 + (v13 << 7);
          unint64_t v12 = (v14 - 128);
          if (v13 < 0)
          {
            *(void *)v158 = sub_188C138((uint64_t)v7, (v14 - 128));
            if (!*(void *)v158) {
              goto LABEL_283;
            }
            unint64_t v12 = v121;
          }
          else
          {
            uint64_t v11 = (char *)(v7 + 2);
LABEL_13:
            *(void *)v158 = v11;
          }
          if (v12 <= 0xA)
          {
            *(_DWORD *)(a1 + 40) |= 0x400u;
            *(_DWORD *)(a1 + 280) = v12;
            goto LABEL_269;
          }
          if (*v154) {
            v152 = (std::string *)((*v154 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v152 = (std::string *)sub_188DBD8(v154);
          }
          int v153 = 1;
          goto LABEL_277;
        case 2u:
          if (v8 != 16) {
            goto LABEL_259;
          }
          v5 |= 0x800u;
          uint64_t v15 = (char *)(v7 + 1);
          int v16 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_20;
          }
          int v17 = *v15;
          int v16 = v16 + (v17 << 7) - 128;
          if (v17 < 0)
          {
            uint64_t v122 = sub_188C0D0((uint64_t)v7, v16);
            *(void *)v158 = v122;
            *(_DWORD *)(a1 + 284) = v123;
            if (!v122) {
              goto LABEL_283;
            }
          }
          else
          {
            uint64_t v15 = (char *)(v7 + 2);
LABEL_20:
            *(void *)v158 = v15;
            *(_DWORD *)(a1 + 284) = v16;
          }
          goto LABEL_269;
        case 3u:
          if (v8 != 24) {
            goto LABEL_259;
          }
          v5 |= 0x1000u;
          int v18 = (char *)(v7 + 1);
          int v19 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_25;
          }
          int v20 = *v18;
          int v19 = v19 + (v20 << 7) - 128;
          if (v20 < 0)
          {
            uint64_t v124 = sub_188C0D0((uint64_t)v7, v19);
            *(void *)v158 = v124;
            *(_DWORD *)(a1 + 288) = v125;
            if (!v124) {
              goto LABEL_283;
            }
          }
          else
          {
            int v18 = (char *)(v7 + 2);
LABEL_25:
            *(void *)v158 = v18;
            *(_DWORD *)(a1 + 288) = v19;
          }
          goto LABEL_269;
        case 4u:
          if (v8 != 34) {
            goto LABEL_259;
          }
          char v21 = v7 - 1;
          while (1)
          {
            uint64_t v22 = v21 + 1;
            *(void *)v158 = v21 + 1;
            char v23 = *(_DWORD **)(a1 + 64);
            if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
            {
              *(_DWORD *)(a1 + 56) = v24 + 1;
              uint64_t v25 = *(void *)&v23[2 * v24 + 2];
            }
            else
            {
              uint64_t v26 = sub_134E554(*(void *)(a1 + 48));
              uint64_t v25 = sub_188CDC8(a1 + 48, v26);
              uint64_t v22 = *(unsigned __int8 **)v158;
            }
            char v21 = (unsigned __int8 *)sub_1347040(a3, v25, v22);
            *(void *)v158 = v21;
            if (!v21) {
              goto LABEL_283;
            }
            if (*(void *)a3 <= (unint64_t)v21 || *v21 != 34) {
              goto LABEL_269;
            }
          }
        case 6u:
          if (v8 != 48) {
            goto LABEL_259;
          }
          v5 |= 0x2000u;
          uint64_t v27 = (char *)(v7 + 1);
          uint64_t v28 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_40;
          }
          int v29 = *v27;
          uint64_t v28 = v28 + (v29 << 7) - 128;
          if (v29 < 0)
          {
            uint64_t v126 = sub_188C138((uint64_t)v7, v28);
            *(void *)v158 = v126;
            *(unsigned char *)(a1 + 292) = v127 != 0;
            if (!v126) {
              goto LABEL_283;
            }
          }
          else
          {
            uint64_t v27 = (char *)(v7 + 2);
LABEL_40:
            *(void *)v158 = v27;
            *(unsigned char *)(a1 + 292) = v28 != 0;
          }
          goto LABEL_269;
        case 7u:
          if (v8 != 56) {
            goto LABEL_259;
          }
          v5 |= 0x4000u;
          int v30 = (char *)(v7 + 1);
          int v31 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_45;
          }
          int v32 = *v30;
          int v31 = v31 + (v32 << 7) - 128;
          if (v32 < 0)
          {
            uint64_t v128 = sub_188C0D0((uint64_t)v7, v31);
            *(void *)v158 = v128;
            *(_DWORD *)(a1 + 296) = v129;
            if (!v128) {
              goto LABEL_283;
            }
          }
          else
          {
            int v30 = (char *)(v7 + 2);
LABEL_45:
            *(void *)v158 = v30;
            *(_DWORD *)(a1 + 296) = v31;
          }
          goto LABEL_269;
        case 9u:
          if (v8 != 74) {
            goto LABEL_259;
          }
          uint64_t v33 = (char *)(v7 - 1);
          while (1)
          {
            uint64_t v34 = (unsigned __int8 *)(v33 + 1);
            *(void *)v158 = v33 + 1;
            int v35 = *(_DWORD **)(a1 + 88);
            if (v35 && (uint64_t v36 = *(int *)(a1 + 80), (int)v36 < *v35))
            {
              *(_DWORD *)(a1 + 80) = v36 + 1;
              uint64_t v37 = *(void *)&v35[2 * v36 + 2];
            }
            else
            {
              unint64_t v38 = sub_134E3C4(*(void *)(a1 + 72));
              uint64_t v37 = sub_188CDC8(a1 + 72, (uint64_t)v38);
              uint64_t v34 = *(unsigned __int8 **)v158;
            }
            uint64_t v33 = sub_13470D0(a3, v37, v34);
            *(void *)v158 = v33;
            if (!v33) {
              goto LABEL_283;
            }
            if (*(void *)a3 <= (unint64_t)v33 || *v33 != 74) {
              goto LABEL_269;
            }
          }
        case 0xAu:
          if (v8 != 82) {
            goto LABEL_259;
          }
          int v39 = (char *)(v7 - 1);
          while (1)
          {
            int v40 = (unsigned __int8 *)(v39 + 1);
            *(void *)v158 = v39 + 1;
            uint64_t v41 = *(_DWORD **)(a1 + 112);
            if (v41 && (uint64_t v42 = *(int *)(a1 + 104), (int)v42 < *v41))
            {
              *(_DWORD *)(a1 + 104) = v42 + 1;
              uint64_t v43 = *(void *)&v41[2 * v42 + 2];
            }
            else
            {
              unsigned int v44 = sub_134E420(*v155);
              uint64_t v43 = sub_188CDC8((uint64_t)v155, (uint64_t)v44);
              int v40 = *(unsigned __int8 **)v158;
            }
            int v39 = sub_1347160(a3, v43, v40);
            *(void *)v158 = v39;
            if (!v39) {
              goto LABEL_283;
            }
            if (*(void *)a3 <= (unint64_t)v39 || *v39 != 82) {
              goto LABEL_269;
            }
          }
        case 0xBu:
          if (v8 != 88) {
            goto LABEL_259;
          }
          v5 |= 0x8000u;
          uint64_t v45 = (char *)(v7 + 1);
          int v46 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_70;
          }
          int v47 = *v45;
          int v46 = v46 + (v47 << 7) - 128;
          if (v47 < 0)
          {
            uint64_t v130 = sub_188C0D0((uint64_t)v7, v46);
            *(void *)v158 = v130;
            *(_DWORD *)(a1 + 300) = v131;
            if (!v130) {
              goto LABEL_283;
            }
          }
          else
          {
            uint64_t v45 = (char *)(v7 + 2);
LABEL_70:
            *(void *)v158 = v45;
            *(_DWORD *)(a1 + 300) = v46;
          }
          goto LABEL_269;
        case 0xCu:
          if (v8 != 98) {
            goto LABEL_259;
          }
          *(_DWORD *)(a1 + 40) |= 2u;
          uint64_t v48 = *(void *)(a1 + 208);
          if (!v48)
          {
            uint64_t v49 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v154) {
              uint64_t v49 = (void *)*v49;
            }
            uint64_t v48 = sub_134E47C((uint64_t)v49);
            *(void *)(a1 + 208) = v48;
            uint64_t v7 = *(unsigned __int8 **)v158;
          }
          int v50 = sub_13471F0(a3, v48, v7);
          goto LABEL_268;
        case 0xEu:
          if (v8 != 114) {
            goto LABEL_259;
          }
          *(_DWORD *)(a1 + 40) |= 4u;
          uint64_t v51 = *(void *)(a1 + 216);
          if (!v51)
          {
            unsigned int v52 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v154) {
              unsigned int v52 = (void *)*v52;
            }
            uint64_t v51 = sub_15C1918((uint64_t)v52);
            *(void *)(a1 + 216) = v51;
            uint64_t v7 = *(unsigned __int8 **)v158;
          }
          int v50 = sub_1198F14(a3, v51, v7);
          goto LABEL_268;
        case 0xFu:
          if (v8 != 120) {
            goto LABEL_259;
          }
          uint64_t v53 = (char *)(v7 + 1);
          unint64_t v12 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_87;
          }
          int v54 = *v53;
          int v55 = v12 + (v54 << 7);
          unint64_t v12 = (v55 - 128);
          if (v54 < 0)
          {
            *(void *)v158 = sub_188C138((uint64_t)v7, (v55 - 128));
            if (!*(void *)v158) {
              goto LABEL_283;
            }
            unint64_t v12 = v132;
          }
          else
          {
            uint64_t v53 = (char *)(v7 + 2);
LABEL_87:
            *(void *)v158 = v53;
          }
          if (v12 > 5)
          {
            if (*v154) {
              v152 = (std::string *)((*v154 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              v152 = (std::string *)sub_188DBD8(v154);
            }
            int v153 = 15;
LABEL_277:
            sub_188C020(v153, v12, v152);
          }
          else
          {
            *(_DWORD *)(a1 + 40) |= 0x10000u;
            *(_DWORD *)(a1 + 304) = v12;
          }
          goto LABEL_269;
        case 0x11u:
          if (v8 != 138) {
            goto LABEL_259;
          }
          *(_DWORD *)(a1 + 40) |= 8u;
          uint64_t v56 = *(void *)(a1 + 224);
          if (!v56)
          {
            uint64_t v57 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v154) {
              uint64_t v57 = (void *)*v57;
            }
            uint64_t v56 = sub_13D7014((uint64_t)v57);
            *(void *)(a1 + 224) = v56;
            uint64_t v7 = *(unsigned __int8 **)v158;
          }
          int v50 = sub_1347280(a3, v56, v7);
          goto LABEL_268;
        case 0x13u:
          if (v8 != 152) {
            goto LABEL_259;
          }
          v5 |= 0x20000u;
          unsigned int v58 = (char *)(v7 + 1);
          int v59 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_100;
          }
          int v60 = *v58;
          int v59 = v59 + (v60 << 7) - 128;
          if (v60 < 0)
          {
            uint64_t v133 = sub_188C0D0((uint64_t)v7, v59);
            *(void *)v158 = v133;
            *(_DWORD *)(a1 + 308) = v134;
            if (!v133) {
              goto LABEL_283;
            }
          }
          else
          {
            unsigned int v58 = (char *)(v7 + 2);
LABEL_100:
            *(void *)v158 = v58;
            *(_DWORD *)(a1 + 308) = v59;
          }
          goto LABEL_269;
        case 0x14u:
          if (v8 != 160) {
            goto LABEL_259;
          }
          v5 |= 0x40000u;
          int v61 = (char *)(v7 + 1);
          int v62 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_105;
          }
          int v63 = *v61;
          int v62 = v62 + (v63 << 7) - 128;
          if (v63 < 0)
          {
            uint64_t v135 = sub_188C0D0((uint64_t)v7, v62);
            *(void *)v158 = v135;
            *(_DWORD *)(a1 + 312) = v136;
            if (!v135) {
              goto LABEL_283;
            }
          }
          else
          {
            int v61 = (char *)(v7 + 2);
LABEL_105:
            *(void *)v158 = v61;
            *(_DWORD *)(a1 + 312) = v62;
          }
          goto LABEL_269;
        case 0x16u:
          if (v8 == 176)
          {
            unint64_t v64 = (unint64_t)(v7 - 2);
            while (1)
            {
              *(void *)v158 = v64 + 2;
              int v65 = *(unsigned __int8 *)(v64 + 2);
              if (*(char *)(v64 + 2) < 0)
              {
                int v66 = v65 + (*(unsigned __int8 *)(v64 + 3) << 7);
                int v65 = v66 - 128;
                if (*(char *)(v64 + 3) < 0)
                {
                  unint64_t v64 = sub_188C0D0(v64 + 2, v66 - 128);
                  int v65 = v67;
                }
                else
                {
                  v64 += 4;
                }
              }
              else
              {
                v64 += 3;
              }
              *(void *)v158 = v64;
              uint64_t v68 = *(unsigned int *)(a1 + 120);
              if (v68 == *(_DWORD *)(a1 + 124))
              {
                int v69 = v68 + 1;
                sub_188C80C((unsigned int *)(a1 + 120), v68 + 1);
                *(_DWORD *)(*(void *)(a1 + 128) + 4 * v68) = v65;
                unint64_t v64 = *(void *)v158;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 128) + 4 * v68) = v65;
                int v69 = v68 + 1;
              }
              *(_DWORD *)(a1 + 120) = v69;
              if (!v64) {
                goto LABEL_283;
              }
              if (*(void *)a3 <= v64 || *(_WORD *)v64 != 432) {
                goto LABEL_269;
              }
            }
          }
          if (v8 == 178)
          {
            v149 = (unsigned int *)(a1 + 120);
LABEL_258:
            int v50 = sub_188C2CC(v149, v7, (uint64_t)a3);
          }
          else
          {
LABEL_259:
            if (v8) {
              BOOL v150 = (v8 & 7) == 4;
            }
            else {
              BOOL v150 = 1;
            }
            if (v150)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                goto LABEL_2;
              }
LABEL_283:
              *(void *)v158 = 0;
              goto LABEL_2;
            }
            if (v8 - 7600 > 0x18F)
            {
              if (*v154)
              {
                v151 = (std::string *)((*v154 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                v151 = (std::string *)sub_188DBD8(v154);
                uint64_t v7 = *(unsigned __int8 **)v158;
              }
              int v50 = sub_1885AC0(v8, v151, (char *)v7, a3);
            }
            else
            {
              int v50 = sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_2533B80, v154, a3);
            }
          }
LABEL_268:
          *(void *)v158 = v50;
          if (!v50) {
            goto LABEL_283;
          }
LABEL_269:
          if (sub_11947B8((uint64_t)a3, (char **)v158, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 0x17u:
          if (v8 == 184)
          {
            unint64_t v70 = (unint64_t)(v7 - 2);
            while (1)
            {
              *(void *)v158 = v70 + 2;
              int v71 = *(unsigned __int8 *)(v70 + 2);
              if (*(char *)(v70 + 2) < 0)
              {
                int v72 = v71 + (*(unsigned __int8 *)(v70 + 3) << 7);
                int v71 = v72 - 128;
                if (*(char *)(v70 + 3) < 0)
                {
                  unint64_t v70 = sub_188C0D0(v70 + 2, v72 - 128);
                  int v71 = v73;
                }
                else
                {
                  v70 += 4;
                }
              }
              else
              {
                v70 += 3;
              }
              *(void *)v158 = v70;
              uint64_t v74 = *(unsigned int *)(a1 + 136);
              if (v74 == *(_DWORD *)(a1 + 140))
              {
                int v75 = v74 + 1;
                sub_188C80C((unsigned int *)(a1 + 136), v74 + 1);
                *(_DWORD *)(*(void *)(a1 + 144) + 4 * v74) = v71;
                unint64_t v70 = *(void *)v158;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 144) + 4 * v74) = v71;
                int v75 = v74 + 1;
              }
              *(_DWORD *)(a1 + 136) = v75;
              if (!v70) {
                goto LABEL_283;
              }
              if (*(void *)a3 <= v70 || *(_WORD *)v70 != 440) {
                goto LABEL_269;
              }
            }
          }
          if (v8 != 186) {
            goto LABEL_259;
          }
          v149 = (unsigned int *)(a1 + 136);
          goto LABEL_258;
        case 0x18u:
          if (v8 != 192) {
            goto LABEL_259;
          }
          v5 |= 0x80000u;
          uint64_t v76 = (char *)(v7 + 1);
          int v77 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_138;
          }
          int v78 = *v76;
          int v77 = v77 + (v78 << 7) - 128;
          if (v78 < 0)
          {
            uint64_t v137 = sub_188C0D0((uint64_t)v7, v77);
            *(void *)v158 = v137;
            *(_DWORD *)(a1 + 316) = v138;
            if (!v137) {
              goto LABEL_283;
            }
          }
          else
          {
            uint64_t v76 = (char *)(v7 + 2);
LABEL_138:
            *(void *)v158 = v76;
            *(_DWORD *)(a1 + 316) = v77;
          }
          goto LABEL_269;
        case 0x19u:
          if (v8 != 200) {
            goto LABEL_259;
          }
          v5 |= 0x100000u;
          int v79 = (char *)(v7 + 1);
          int v80 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_143;
          }
          int v81 = *v79;
          int v80 = v80 + (v81 << 7) - 128;
          if (v81 < 0)
          {
            uint64_t v139 = sub_188C0D0((uint64_t)v7, v80);
            *(void *)v158 = v139;
            *(_DWORD *)(a1 + 320) = v140;
            if (!v139) {
              goto LABEL_283;
            }
          }
          else
          {
            int v79 = (char *)(v7 + 2);
LABEL_143:
            *(void *)v158 = v79;
            *(_DWORD *)(a1 + 320) = v80;
          }
          goto LABEL_269;
        case 0x1Au:
          if (v8 != 208) {
            goto LABEL_259;
          }
          v5 |= 0x200000u;
          uint64_t v82 = (char *)(v7 + 1);
          int v83 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_148;
          }
          int v84 = *v82;
          int v83 = v83 + (v84 << 7) - 128;
          if (v84 < 0)
          {
            uint64_t v141 = sub_188C0D0((uint64_t)v7, v83);
            *(void *)v158 = v141;
            *(_DWORD *)(a1 + 324) = v142;
            if (!v141) {
              goto LABEL_283;
            }
          }
          else
          {
            uint64_t v82 = (char *)(v7 + 2);
LABEL_148:
            *(void *)v158 = v82;
            *(_DWORD *)(a1 + 324) = v83;
          }
          goto LABEL_269;
        case 0x1Bu:
          if (v8 != 216) {
            goto LABEL_259;
          }
          v5 |= 0x400000u;
          uint64_t v85 = (char *)(v7 + 1);
          int v86 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_153;
          }
          int v87 = *v85;
          int v86 = v86 + (v87 << 7) - 128;
          if (v87 < 0)
          {
            uint64_t v143 = sub_188C0D0((uint64_t)v7, v86);
            *(void *)v158 = v143;
            *(_DWORD *)(a1 + 328) = v144;
            if (!v143) {
              goto LABEL_283;
            }
          }
          else
          {
            uint64_t v85 = (char *)(v7 + 2);
LABEL_153:
            *(void *)v158 = v85;
            *(_DWORD *)(a1 + 328) = v86;
          }
          goto LABEL_269;
        case 0x1Cu:
          if (v8 != 224) {
            goto LABEL_259;
          }
          v5 |= 0x800000u;
          v88 = (char *)(v7 + 1);
          int v89 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_158;
          }
          int v90 = *v88;
          int v89 = v89 + (v90 << 7) - 128;
          if (v90 < 0)
          {
            uint64_t v145 = sub_188C0D0((uint64_t)v7, v89);
            *(void *)v158 = v145;
            *(_DWORD *)(a1 + 332) = v146;
            if (!v145) {
              goto LABEL_283;
            }
          }
          else
          {
            v88 = (char *)(v7 + 2);
LABEL_158:
            *(void *)v158 = v88;
            *(_DWORD *)(a1 + 332) = v89;
          }
          goto LABEL_269;
        case 0x1Du:
          if (v8 != 232) {
            goto LABEL_259;
          }
          v5 |= 0x1000000u;
          long long v91 = (char *)(v7 + 1);
          int v92 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_163;
          }
          int v93 = *v91;
          int v92 = v92 + (v93 << 7) - 128;
          if (v93 < 0)
          {
            uint64_t v147 = sub_188C0D0((uint64_t)v7, v92);
            *(void *)v158 = v147;
            *(_DWORD *)(a1 + 336) = v148;
            if (!v147) {
              goto LABEL_283;
            }
          }
          else
          {
            long long v91 = (char *)(v7 + 2);
LABEL_163:
            *(void *)v158 = v91;
            *(_DWORD *)(a1 + 336) = v92;
          }
          goto LABEL_269;
        case 0x1Eu:
          if (v8 != 242) {
            goto LABEL_259;
          }
          *(_DWORD *)(a1 + 40) |= 0x10u;
          uint64_t v94 = *(void *)(a1 + 232);
          if (!v94)
          {
            v95 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v154) {
              v95 = (void *)*v95;
            }
            uint64_t v94 = sub_134E60C((uint64_t)v95);
            *(void *)(a1 + 232) = v94;
            uint64_t v7 = *(unsigned __int8 **)v158;
          }
          int v50 = sub_1347310(a3, v94, v7);
          goto LABEL_268;
        case 0x1Fu:
          if (v8 != 250) {
            goto LABEL_259;
          }
          *(_DWORD *)(a1 + 40) |= 0x20u;
          v96 = *(void **)(a1 + 240);
          if (!v96)
          {
            v97 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v154) {
              v97 = (void *)*v97;
            }
            v96 = sub_134E6C4((uint64_t)v97);
            *(void *)(a1 + 240) = v96;
            uint64_t v7 = *(unsigned __int8 **)v158;
          }
          int v50 = sub_13473A0(a3, (uint64_t)v96, v7);
          goto LABEL_268;
        case 0x20u:
          if (v8 != 2) {
            goto LABEL_259;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v98 = *(void *)(a1 + 8);
          v99 = (uint64_t *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
          if (v98) {
            v99 = (uint64_t *)*v99;
          }
          v100 = (std::string *)sub_1880F84((void *)(a1 + 200), v99);
          int v50 = (void *)sub_188C244(v100, *(char **)v158, (uint64_t)a3);
          goto LABEL_268;
        case 0x21u:
          if (v8 != 10) {
            goto LABEL_259;
          }
          *(_DWORD *)(a1 + 40) |= 0x40u;
          uint64_t v101 = *(void *)(a1 + 248);
          if (!v101)
          {
            v102 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v154) {
              v102 = (void *)*v102;
            }
            uint64_t v101 = sub_134E79C((uint64_t)v102);
            *(void *)(a1 + 248) = v101;
            uint64_t v7 = *(unsigned __int8 **)v158;
          }
          int v50 = sub_1347430(a3, v101, v7);
          goto LABEL_268;
        case 0x22u:
          if (v8 != 18) {
            goto LABEL_259;
          }
          *(_DWORD *)(a1 + 40) |= 0x80u;
          v103 = *(void **)(a1 + 256);
          if (!v103)
          {
            v104 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v154) {
              v104 = (void *)*v104;
            }
            v103 = sub_134E8C4((uint64_t)v104);
            *(void *)(a1 + 256) = v103;
            uint64_t v7 = *(unsigned __int8 **)v158;
          }
          int v50 = sub_13474C0(a3, (uint64_t)v103, v7);
          goto LABEL_268;
        case 0x23u:
          if (v8 != 26) {
            goto LABEL_259;
          }
          *(_DWORD *)(a1 + 40) |= 0x100u;
          uint64_t v105 = *(void *)(a1 + 264);
          if (!v105)
          {
            v106 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v154) {
              v106 = (void *)*v106;
            }
            uint64_t v105 = sub_134EAD8((uint64_t)v106);
            *(void *)(a1 + 264) = v105;
            uint64_t v7 = *(unsigned __int8 **)v158;
          }
          int v50 = sub_1347550(a3, v105, v7);
          goto LABEL_268;
        case 0x24u:
          if (v8 != 34) {
            goto LABEL_259;
          }
          v107 = (char *)(v7 - 2);
          while (1)
          {
            v108 = (unsigned __int8 *)(v107 + 2);
            *(void *)v158 = v107 + 2;
            v109 = *(_DWORD **)(a1 + 168);
            if (v109 && (uint64_t v110 = *(int *)(a1 + 160), (int)v110 < *v109))
            {
              *(_DWORD *)(a1 + 160) = v110 + 1;
              uint64_t v111 = *(void *)&v109[2 * v110 + 2];
            }
            else
            {
              v112 = sub_134EB78(*v156);
              uint64_t v111 = sub_188CDC8((uint64_t)v156, (uint64_t)v112);
              v108 = *(unsigned __int8 **)v158;
            }
            v107 = sub_13475E0(a3, v111, v108);
            *(void *)v158 = v107;
            if (!v107) {
              goto LABEL_283;
            }
            if (*(void *)a3 <= (unint64_t)v107 || *(_WORD *)v107 != 674) {
              goto LABEL_269;
            }
          }
        case 0x25u:
          if (v8 != 42) {
            goto LABEL_259;
          }
          v113 = (char *)(v7 - 2);
          while (1)
          {
            v114 = (unsigned __int8 *)(v113 + 2);
            *(void *)v158 = v113 + 2;
            v115 = *(_DWORD **)(a1 + 192);
            if (v115 && (uint64_t v116 = *(int *)(a1 + 184), (int)v116 < *v115))
            {
              *(_DWORD *)(a1 + 184) = v116 + 1;
              uint64_t v117 = *(void *)&v115[2 * v116 + 2];
            }
            else
            {
              v118 = sub_134EDA0(*v157);
              uint64_t v117 = sub_188CDC8((uint64_t)v157, (uint64_t)v118);
              v114 = *(unsigned __int8 **)v158;
            }
            v113 = sub_1347670(a3, v117, v114);
            *(void *)v158 = v113;
            if (!v113) {
              goto LABEL_283;
            }
            if (*(void *)a3 <= (unint64_t)v113 || *(_WORD *)v113 != 682) {
              goto LABEL_269;
            }
          }
        case 0x26u:
          if (v8 != 50) {
            goto LABEL_259;
          }
          *(_DWORD *)(a1 + 40) |= 0x200u;
          uint64_t v119 = *(void *)(a1 + 272);
          if (!v119)
          {
            v120 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v154) {
              v120 = (void *)*v120;
            }
            uint64_t v119 = sub_13D8978((uint64_t)v120);
            *(void *)(a1 + 272) = v119;
            uint64_t v7 = *(unsigned __int8 **)v158;
          }
          int v50 = sub_133904C(a3, v119, v7);
          goto LABEL_268;
        default:
          goto LABEL_259;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v158;
}

uint64_t sub_1347040(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_133D550(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13470D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_133B978(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1347160(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_133C35C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13471F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_133C974(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1347280(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_137CFD8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1347310(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_133F004(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13473A0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13405B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1347430(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13414B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13474C0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_134245C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1347550(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13448C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13475E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_134551C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1347670(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_134D5EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1347700(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 280);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 284);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 288);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      v4[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        int v20 = v4 + 2;
      }
      int v4 = sub_133DB54(v18, v20, a3);
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v21 = *(unsigned char *)(a1 + 292);
    char *v4 = 48;
    v4[1] = v21;
    v4 += 2;
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 296);
    char *v4 = 56;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v25 = *(_DWORD *)(a1 + 80);
  if (v25)
  {
    for (int j = 0; j != v25; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 74;
      unsigned int v28 = *(_DWORD *)(v27 + 44);
      v4[1] = v28;
      if (v28 > 0x7F) {
        int v29 = sub_188A9CC(v28, v4 + 1);
      }
      else {
        int v29 = v4 + 2;
      }
      int v4 = sub_133BD18(v27, v29, a3);
    }
  }
  int v30 = *(_DWORD *)(a1 + 104);
  if (v30)
  {
    for (int k = 0; k != v30; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      char *v4 = 82;
      unsigned int v33 = *(_DWORD *)(v32 + 44);
      v4[1] = v33;
      if (v33 > 0x7F) {
        uint64_t v34 = sub_188A9CC(v33, v4 + 1);
      }
      else {
        uint64_t v34 = v4 + 2;
      }
      int v4 = sub_133C590(v32, v34, a3);
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v35 = *(_DWORD *)(a1 + 300);
    char *v4 = 88;
    v4[1] = v35;
    if (v35 > 0x7F)
    {
      v4[1] = v35 | 0x80;
      unsigned int v36 = v35 >> 7;
      v4[2] = v35 >> 7;
      v4 += 3;
      if (v35 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v37 = v36 >> 14;
          v36 >>= 7;
          *v4++ = v36;
        }
        while (v37);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v38 = *(void *)(a1 + 208);
    char *v4 = 98;
    unsigned int v39 = *(_DWORD *)(v38 + 20);
    v4[1] = v39;
    if (v39 > 0x7F) {
      int v40 = sub_188A9CC(v39, v4 + 1);
    }
    else {
      int v40 = v4 + 2;
    }
    int v4 = sub_133CB1C(v38, (unint64_t)v40, a3);
    if ((v6 & 4) == 0)
    {
LABEL_66:
      if ((v6 & 0x10000) == 0) {
        goto LABEL_86;
      }
      goto LABEL_80;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_66;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v41 = *(void *)(a1 + 216);
  char *v4 = 114;
  unsigned int v42 = *(_DWORD *)(v41 + 44);
  v4[1] = v42;
  if (v42 > 0x7F) {
    uint64_t v43 = sub_188A9CC(v42, v4 + 1);
  }
  else {
    uint64_t v43 = v4 + 2;
  }
  int v4 = sub_15B0C0C(v41, v43, a3);
  if ((v6 & 0x10000) != 0)
  {
LABEL_80:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v44 = *(int *)(a1 + 304);
    char *v4 = 120;
    v4[1] = v44;
    if (v44 > 0x7F)
    {
      v4[1] = v44 | 0x80;
      unint64_t v45 = v44 >> 7;
      v4[2] = v44 >> 7;
      v4 += 3;
      if (v44 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v46 = v45 >> 14;
          v45 >>= 7;
          *v4++ = v45;
        }
        while (v46);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_86:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v47 = *(void *)(a1 + 224);
    *(_WORD *)int v4 = 394;
    unsigned int v48 = *(_DWORD *)(v47 + 44);
    v4[2] = v48;
    if (v48 > 0x7F) {
      uint64_t v49 = sub_188A9CC(v48, v4 + 2);
    }
    else {
      uint64_t v49 = v4 + 3;
    }
    int v4 = sub_137D760(v47, v49, a3);
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v50 = *(_DWORD *)(a1 + 308);
    *(_WORD *)int v4 = 408;
    v4[2] = v50;
    if (v50 > 0x7F)
    {
      v4[2] = v50 | 0x80;
      unsigned int v51 = v50 >> 7;
      v4[3] = v50 >> 7;
      v4 += 4;
      if (v50 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v52 = v51 >> 14;
          v51 >>= 7;
          *v4++ = v51;
        }
        while (v52);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v53 = *(_DWORD *)(a1 + 312);
    *(_WORD *)int v4 = 416;
    v4[2] = v53;
    if (v53 > 0x7F)
    {
      v4[2] = v53 | 0x80;
      unsigned int v54 = v53 >> 7;
      v4[3] = v53 >> 7;
      v4 += 4;
      if (v53 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v55 = v54 >> 14;
          v54 >>= 7;
          *v4++ = v54;
        }
        while (v55);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v56 = *(unsigned int *)(a1 + 120);
  if ((int)v56 >= 1)
  {
    for (uint64_t m = 0; m != v56; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v58 = *(_DWORD *)(*(void *)(a1 + 128) + 4 * m);
      *(_WORD *)int v4 = 432;
      v4[2] = v58;
      if (v58 > 0x7F)
      {
        v4[2] = v58 | 0x80;
        unsigned int v59 = v58 >> 7;
        v4[3] = v58 >> 7;
        v4 += 4;
        if (v58 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v60 = v59 >> 14;
            v59 >>= 7;
            *v4++ = v59;
          }
          while (v60);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  uint64_t v61 = *(unsigned int *)(a1 + 136);
  if ((int)v61 >= 1)
  {
    for (uint64_t n = 0; n != v61; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v63 = *(_DWORD *)(*(void *)(a1 + 144) + 4 * n);
      *(_WORD *)int v4 = 440;
      v4[2] = v63;
      if (v63 > 0x7F)
      {
        v4[2] = v63 | 0x80;
        unsigned int v64 = v63 >> 7;
        v4[3] = v63 >> 7;
        v4 += 4;
        if (v63 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v65 = v64 >> 14;
            v64 >>= 7;
            *v4++ = v64;
          }
          while (v65);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v66 = *(_DWORD *)(a1 + 316);
    *(_WORD *)int v4 = 448;
    v4[2] = v66;
    if (v66 > 0x7F)
    {
      v4[2] = v66 | 0x80;
      unsigned int v67 = v66 >> 7;
      v4[3] = v66 >> 7;
      v4 += 4;
      if (v66 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v68 = v67 >> 14;
          v67 >>= 7;
          *v4++ = v67;
        }
        while (v68);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v69 = *(_DWORD *)(a1 + 320);
    *(_WORD *)int v4 = 456;
    v4[2] = v69;
    if (v69 > 0x7F)
    {
      v4[2] = v69 | 0x80;
      unsigned int v70 = v69 >> 7;
      v4[3] = v69 >> 7;
      v4 += 4;
      if (v69 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v71 = v70 >> 14;
          v70 >>= 7;
          *v4++ = v70;
        }
        while (v71);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v72 = *(_DWORD *)(a1 + 324);
    *(_WORD *)int v4 = 464;
    v4[2] = v72;
    if (v72 > 0x7F)
    {
      v4[2] = v72 | 0x80;
      unsigned int v73 = v72 >> 7;
      v4[3] = v72 >> 7;
      v4 += 4;
      if (v72 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v74 = v73 >> 14;
          v73 >>= 7;
          *v4++ = v73;
        }
        while (v74);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v75 = *(_DWORD *)(a1 + 328);
    *(_WORD *)int v4 = 472;
    v4[2] = v75;
    if (v75 > 0x7F)
    {
      v4[2] = v75 | 0x80;
      unsigned int v76 = v75 >> 7;
      v4[3] = v75 >> 7;
      v4 += 4;
      if (v75 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v77 = v76 >> 14;
          v76 >>= 7;
          *v4++ = v76;
        }
        while (v77);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v78 = *(_DWORD *)(a1 + 332);
    *(_WORD *)int v4 = 480;
    v4[2] = v78;
    if (v78 > 0x7F)
    {
      v4[2] = v78 | 0x80;
      unsigned int v79 = v78 >> 7;
      v4[3] = v78 >> 7;
      v4 += 4;
      if (v78 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v80 = v79 >> 14;
          v79 >>= 7;
          *v4++ = v79;
        }
        while (v80);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v81 = *(_DWORD *)(a1 + 336);
    *(_WORD *)int v4 = 488;
    v4[2] = v81;
    if (v81 > 0x7F)
    {
      v4[2] = v81 | 0x80;
      unsigned int v82 = v81 >> 7;
      v4[3] = v81 >> 7;
      v4 += 4;
      if (v81 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v83 = v82 >> 14;
          v82 >>= 7;
          *v4++ = v82;
        }
        while (v83);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v84 = *(void *)(a1 + 232);
    *(_WORD *)int v4 = 498;
    unsigned int v85 = *(_DWORD *)(v84 + 44);
    v4[2] = v85;
    if (v85 > 0x7F) {
      int v86 = sub_188A9CC(v85, v4 + 2);
    }
    else {
      int v86 = v4 + 3;
    }
    int v4 = sub_133F600(v84, v86, a3);
    if ((v6 & 0x20) == 0)
    {
LABEL_169:
      if ((v6 & 1) == 0) {
        goto LABEL_170;
      }
      goto LABEL_186;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_169;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v87 = *(void *)(a1 + 240);
  *(_WORD *)int v4 = 506;
  unsigned int v88 = *(_DWORD *)(v87 + 44);
  v4[2] = v88;
  if (v88 > 0x7F) {
    int v89 = sub_188A9CC(v88, v4 + 2);
  }
  else {
    int v89 = v4 + 3;
  }
  int v4 = sub_1340958(v87, v89, a3);
  if ((v6 & 1) == 0)
  {
LABEL_170:
    if ((v6 & 0x40) == 0) {
      goto LABEL_171;
    }
    goto LABEL_187;
  }
LABEL_186:
  int v4 = sub_117A0AC(a3, 32, (const void **)(*(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_171:
    if ((v6 & 0x80) == 0) {
      goto LABEL_172;
    }
    goto LABEL_193;
  }
LABEL_187:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v90 = *(void *)(a1 + 248);
  *(_WORD *)int v4 = 650;
  unsigned int v91 = *(_DWORD *)(v90 + 40);
  v4[2] = v91;
  if (v91 > 0x7F) {
    int v92 = sub_188A9CC(v91, v4 + 2);
  }
  else {
    int v92 = v4 + 3;
  }
  int v4 = sub_13416E4(v90, v92, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_172:
    if ((v6 & 0x100) == 0) {
      goto LABEL_205;
    }
    goto LABEL_199;
  }
LABEL_193:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v93 = *(void *)(a1 + 256);
  *(_WORD *)int v4 = 658;
  unsigned int v94 = *(_DWORD *)(v93 + 20);
  v4[2] = v94;
  if (v94 > 0x7F) {
    v95 = sub_188A9CC(v94, v4 + 2);
  }
  else {
    v95 = v4 + 3;
  }
  int v4 = sub_1342644(v93, (unint64_t)v95, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_199:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v96 = *(void *)(a1 + 264);
    *(_WORD *)int v4 = 666;
    unsigned int v97 = *(_DWORD *)(v96 + 20);
    v4[2] = v97;
    if (v97 > 0x7F) {
      uint64_t v98 = sub_188A9CC(v97, v4 + 2);
    }
    else {
      uint64_t v98 = v4 + 3;
    }
    int v4 = sub_1344C6C(v96, v98, a3);
  }
LABEL_205:
  int v99 = *(_DWORD *)(a1 + 160);
  if (v99)
  {
    for (iint i = 0; ii != v99; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v101 = *(void *)(*(void *)(a1 + 168) + 8 * ii + 8);
      *(_WORD *)int v4 = 674;
      unsigned int v102 = *(_DWORD *)(v101 + 20);
      v4[2] = v102;
      if (v102 > 0x7F) {
        v103 = sub_188A9CC(v102, v4 + 2);
      }
      else {
        v103 = v4 + 3;
      }
      int v4 = sub_13456DC(v101, (unint64_t)v103, a3);
    }
  }
  int v104 = *(_DWORD *)(a1 + 184);
  if (v104)
  {
    for (jint j = 0; jj != v104; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v106 = *(void *)(*(void *)(a1 + 192) + 8 * jj + 8);
      *(_WORD *)int v4 = 682;
      unsigned int v107 = *(_DWORD *)(v106 + 20);
      v4[2] = v107;
      if (v107 > 0x7F) {
        v108 = sub_188A9CC(v107, v4 + 2);
      }
      else {
        v108 = v4 + 3;
      }
      int v4 = sub_134D914(v106, (unint64_t)v108, a3);
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v109 = *(void *)(a1 + 272);
    *(_WORD *)int v4 = 690;
    unsigned int v110 = *(_DWORD *)(v109 + 20);
    v4[2] = v110;
    if (v110 > 0x7F) {
      uint64_t v111 = sub_188A9CC(v110, v4 + 2);
    }
    else {
      uint64_t v111 = v4 + 3;
    }
    int v4 = sub_139E72C(v109, v111, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v112 = *(void *)(a1 + 8);
  if ((v112 & 1) == 0) {
    return v4;
  }
  unint64_t v114 = v112 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v114 + 31) < 0)
  {
    v115 = *(void **)(v114 + 8);
    uint64_t v116 = *(void *)(v114 + 16);
  }
  else
  {
    v115 = (void *)(v114 + 8);
    LODWORD(v116) = *(unsigned __int8 *)(v114 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v116)
  {
    uint64_t v117 = (int)v116;
    memcpy(v4, v115, (int)v116);
    v4 += v117;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v115, v116, v4);
}

uint64_t sub_134867C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_133E0F8(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_133BFCC(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    int v20 = (uint64_t *)(v19 + 8);
  }
  else {
    int v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_133C758(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = sub_188D4F0((unsigned int *)(a1 + 120));
  uint64_t v25 = *(unsigned int *)(a1 + 120);
  uint64_t v26 = sub_188D4F0((unsigned int *)(a1 + 136));
  uint64_t v27 = *(int *)(a1 + 160);
  uint64_t v28 = v24 + v18 + v26 + 2 * (*(unsigned int *)(a1 + 136) + v25 + v27);
  uint64_t v29 = *(void *)(a1 + 168);
  if (v29) {
    int v30 = (uint64_t *)(v29 + 8);
  }
  else {
    int v30 = 0;
  }
  if (v27)
  {
    uint64_t v31 = 8 * v27;
    do
    {
      uint64_t v32 = *v30++;
      uint64_t v33 = sub_134585C(v32);
      v28 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6);
      v31 -= 8;
    }
    while (v31);
  }
  uint64_t v34 = *(int *)(a1 + 184);
  uint64_t v35 = v28 + 2 * v34;
  uint64_t v36 = *(void *)(a1 + 192);
  if (v36) {
    unsigned int v37 = (uint64_t *)(v36 + 8);
  }
  else {
    unsigned int v37 = 0;
  }
  if (v34)
  {
    uint64_t v38 = 8 * v34;
    do
    {
      uint64_t v39 = *v37++;
      uint64_t v40 = sub_134DAC0(v39);
      v35 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6);
      v38 -= 8;
    }
    while (v38);
  }
  int v41 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v41) {
    goto LABEL_41;
  }
  if (v41)
  {
    unint64_t v45 = *(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v46 = *(unsigned __int8 *)(v45 + 23);
    uint64_t v47 = *(void *)(v45 + 8);
    if ((v46 & 0x80u) == 0) {
      uint64_t v47 = v46;
    }
    v35 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v41 & 2) == 0)
    {
LABEL_34:
      if ((v41 & 4) == 0) {
        goto LABEL_35;
      }
      goto LABEL_72;
    }
  }
  else if ((v41 & 2) == 0)
  {
    goto LABEL_34;
  }
  uint64_t v48 = sub_133CC44(*(void *)(a1 + 208));
  v35 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v41 & 4) == 0)
  {
LABEL_35:
    if ((v41 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t v49 = sub_15B0D90(*(void *)(a1 + 216));
  v35 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v41 & 8) == 0)
  {
LABEL_36:
    if ((v41 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t v50 = sub_137DBFC(*(void *)(a1 + 224));
  v35 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v41 & 0x10) == 0)
  {
LABEL_37:
    if ((v41 & 0x20) == 0) {
      goto LABEL_38;
    }
LABEL_75:
    uint64_t v52 = sub_1340BBC(*(void *)(a1 + 240));
    v35 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v41 & 0x40) == 0)
    {
LABEL_39:
      if ((v41 & 0x80) == 0) {
        goto LABEL_41;
      }
      goto LABEL_40;
    }
    goto LABEL_76;
  }
LABEL_74:
  uint64_t v51 = sub_133F99C(*(void *)(a1 + 232));
  v35 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v41 & 0x20) != 0) {
    goto LABEL_75;
  }
LABEL_38:
  if ((v41 & 0x40) == 0) {
    goto LABEL_39;
  }
LABEL_76:
  uint64_t v53 = sub_1341828(*(void *)(a1 + 248));
  v35 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v41 & 0x80) != 0)
  {
LABEL_40:
    uint64_t v42 = sub_1342754(*(void *)(a1 + 256));
    v35 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_41:
  if ((v41 & 0xFF00) == 0) {
    goto LABEL_54;
  }
  if ((v41 & 0x100) != 0)
  {
    uint64_t v54 = sub_1344F54(*(void *)(a1 + 264));
    v35 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v41 & 0x200) == 0)
    {
LABEL_44:
      if ((v41 & 0x400) == 0) {
        goto LABEL_45;
      }
      goto LABEL_80;
    }
  }
  else if ((v41 & 0x200) == 0)
  {
    goto LABEL_44;
  }
  uint64_t v55 = sub_139EAB4(*(void *)(a1 + 272));
  v35 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v41 & 0x400) == 0)
  {
LABEL_45:
    if ((v41 & 0x800) == 0) {
      goto LABEL_46;
    }
LABEL_84:
    v35 += ((9 * (__clz(*(_DWORD *)(a1 + 284) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v41 & 0x1000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_47;
  }
LABEL_80:
  int v56 = *(_DWORD *)(a1 + 280);
  uint64_t v57 = (9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6;
  if (v56 >= 0) {
    uint64_t v58 = v57;
  }
  else {
    uint64_t v58 = 10;
  }
  v35 += v58 + 1;
  if ((v41 & 0x800) != 0) {
    goto LABEL_84;
  }
LABEL_46:
  if ((v41 & 0x1000) != 0) {
LABEL_47:
  }
    v35 += ((9 * (__clz(*(_DWORD *)(a1 + 288) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_48:
  if ((v41 & 0x2000) != 0) {
    v35 += 2;
  }
  if ((v41 & 0x4000) != 0) {
    v35 += ((9 * (__clz(*(_DWORD *)(a1 + 296) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v41 & 0x8000) != 0) {
    v35 += ((9 * (__clz(*(_DWORD *)(a1 + 300) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_54:
  if ((v41 & 0xFF0000) == 0) {
    goto LABEL_64;
  }
  if ((v41 & 0x10000) != 0)
  {
    int v59 = *(_DWORD *)(a1 + 304);
    uint64_t v60 = ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v59 >= 0) {
      uint64_t v61 = v60;
    }
    else {
      uint64_t v61 = 11;
    }
    v35 += v61;
    if ((v41 & 0x20000) == 0)
    {
LABEL_57:
      if ((v41 & 0x40000) == 0) {
        goto LABEL_58;
      }
      goto LABEL_91;
    }
  }
  else if ((v41 & 0x20000) == 0)
  {
    goto LABEL_57;
  }
  v35 += ((9 * (__clz(*(_DWORD *)(a1 + 308) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v41 & 0x40000) == 0)
  {
LABEL_58:
    if ((v41 & 0x80000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_92;
  }
LABEL_91:
  v35 += ((9 * (__clz(*(_DWORD *)(a1 + 312) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v41 & 0x80000) == 0)
  {
LABEL_59:
    if ((v41 & 0x100000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_93;
  }
LABEL_92:
  v35 += ((9 * (__clz(*(_DWORD *)(a1 + 316) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v41 & 0x100000) == 0)
  {
LABEL_60:
    if ((v41 & 0x200000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_94;
  }
LABEL_93:
  v35 += ((9 * (__clz(*(_DWORD *)(a1 + 320) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v41 & 0x200000) == 0)
  {
LABEL_61:
    if ((v41 & 0x400000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_95;
  }
LABEL_94:
  v35 += ((9 * (__clz(*(_DWORD *)(a1 + 324) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v41 & 0x400000) == 0)
  {
LABEL_62:
    if ((v41 & 0x800000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_63;
  }
LABEL_95:
  v35 += ((9 * (__clz(*(_DWORD *)(a1 + 328) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v41 & 0x800000) != 0) {
LABEL_63:
  }
    v35 += ((9 * (__clz(*(_DWORD *)(a1 + 332) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_64:
  if ((v41 & 0x1000000) != 0) {
    v35 += ((9 * (__clz(*(_DWORD *)(a1 + 336) | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v43 = *(void *)(a1 + 8);
  if (v43)
  {
    unint64_t v62 = v43 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v62 + 31) < 0) {
      uint64_t v63 = *(void *)(v62 + 16);
    }
    else {
      uint64_t v63 = *(unsigned __int8 *)(v62 + 31);
    }
    v35 += v63;
  }
  *(_DWORD *)(a1 + 44) = v35;
  return v35;
}

void sub_1348D54(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1367CA0((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1367D2C((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unsigned int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1367DB8((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 120);
  if (v19)
  {
    uint64_t v20 = *(int *)(a1 + 120);
    sub_188C80C((unsigned int *)(a1 + 120), v20 + v19);
    uint64_t v21 = *(void *)(a1 + 128);
    *(_DWORD *)(a1 + 120) += *(_DWORD *)(a2 + 120);
    memcpy((void *)(v21 + 4 * v20), *(const void **)(a2 + 128), 4 * *(int *)(a2 + 120));
  }
  int v22 = *(_DWORD *)(a2 + 136);
  if (v22)
  {
    uint64_t v23 = *(int *)(a1 + 136);
    sub_188C80C((unsigned int *)(a1 + 136), v23 + v22);
    uint64_t v24 = *(void *)(a1 + 144);
    *(_DWORD *)(a1 + 136) += *(_DWORD *)(a2 + 136);
    memcpy((void *)(v24 + 4 * v23), *(const void **)(a2 + 144), 4 * *(int *)(a2 + 136));
  }
  int v25 = *(_DWORD *)(a2 + 160);
  if (v25)
  {
    uint64_t v26 = (uint64_t *)(*(void *)(a2 + 168) + 8);
    uint64_t v27 = (uint64_t *)sub_188CCE4(a1 + 152, *(_DWORD *)(a2 + 160));
    sub_1367E44((uint64_t *)(a1 + 152), v27, v26, v25, **(_DWORD **)(a1 + 168) - *(_DWORD *)(a1 + 160));
    int v28 = *(_DWORD *)(a1 + 160) + v25;
    *(_DWORD *)(a1 + 160) = v28;
    uint64_t v29 = *(int **)(a1 + 168);
    if (*v29 < v28) {
      int *v29 = v28;
    }
  }
  int v30 = *(_DWORD *)(a2 + 184);
  if (v30)
  {
    uint64_t v31 = (uint64_t *)(*(void *)(a2 + 192) + 8);
    uint64_t v32 = (uint64_t *)sub_188CCE4(a1 + 176, *(_DWORD *)(a2 + 184));
    sub_1367ED0((uint64_t *)(a1 + 176), v32, v31, v30, **(_DWORD **)(a1 + 192) - *(_DWORD *)(a1 + 184));
    int v33 = *(_DWORD *)(a1 + 184) + v30;
    *(_DWORD *)(a1 + 184) = v33;
    uint64_t v34 = *(int **)(a1 + 192);
    if (*v34 < v33) {
      *uint64_t v34 = v33;
    }
  }
  int v35 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v35) {
    goto LABEL_89;
  }
  if (v35)
  {
    uint64_t v36 = (long long *)(*(void *)(a2 + 200) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v37 = *(void *)(a1 + 8);
    uint64_t v38 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
    if (v37) {
      uint64_t v38 = (uint64_t *)*v38;
    }
    sub_1881DF4((std::string **)(a1 + 200), v36, v38);
    if ((v35 & 2) == 0)
    {
LABEL_23:
      if ((v35 & 4) == 0) {
        goto LABEL_24;
      }
      goto LABEL_41;
    }
  }
  else if ((v35 & 2) == 0)
  {
    goto LABEL_23;
  }
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v39 = *(std::string **)(a1 + 208);
  if (!v39)
  {
    uint64_t v40 = *(void *)(a1 + 8);
    int v41 = (void *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
    if (v40) {
      int v41 = (void *)*v41;
    }
    uint64_t v39 = (std::string *)sub_134E47C((uint64_t)v41);
    *(void *)(a1 + 208) = v39;
  }
  if (*(void *)(a2 + 208)) {
    uint64_t v42 = *(uint64_t (****)())(a2 + 208);
  }
  else {
    uint64_t v42 = &off_25337C8;
  }
  sub_11A7934(v39, (uint64_t)v42);
  if ((v35 & 4) == 0)
  {
LABEL_24:
    if ((v35 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_49;
  }
LABEL_41:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v43 = *(void *)(a1 + 216);
  if (!v43)
  {
    uint64_t v44 = *(void *)(a1 + 8);
    unint64_t v45 = (void *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
    if (v44) {
      unint64_t v45 = (void *)*v45;
    }
    uint64_t v43 = sub_15C1918((uint64_t)v45);
    *(void *)(a1 + 216) = v43;
  }
  if (*(void *)(a2 + 216)) {
    uint64_t v46 = *(uint64_t (****)())(a2 + 216);
  }
  else {
    uint64_t v46 = &off_253F1A0;
  }
  sub_15B0E24(v43, (uint64_t)v46);
  if ((v35 & 8) == 0)
  {
LABEL_25:
    if ((v35 & 0x10) == 0) {
      goto LABEL_26;
    }
    goto LABEL_57;
  }
LABEL_49:
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v47 = *(void *)(a1 + 224);
  if (!v47)
  {
    uint64_t v48 = *(void *)(a1 + 8);
    uint64_t v49 = (void *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
    if (v48) {
      uint64_t v49 = (void *)*v49;
    }
    uint64_t v47 = sub_13D7014((uint64_t)v49);
    *(void *)(a1 + 224) = v47;
  }
  if (*(void *)(a2 + 224)) {
    uint64_t v50 = *(uint64_t (****)())(a2 + 224);
  }
  else {
    uint64_t v50 = &off_2534B58;
  }
  sub_137DE44(v47, (uint64_t)v50);
  if ((v35 & 0x10) == 0)
  {
LABEL_26:
    if ((v35 & 0x20) == 0) {
      goto LABEL_27;
    }
LABEL_65:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v55 = *(void **)(a1 + 240);
    if (!v55)
    {
      uint64_t v56 = *(void *)(a1 + 8);
      uint64_t v57 = (void *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
      if (v56) {
        uint64_t v57 = (void *)*v57;
      }
      uint64_t v55 = sub_134E6C4((uint64_t)v57);
      *(void *)(a1 + 240) = v55;
    }
    if (*(void *)(a2 + 240)) {
      uint64_t v58 = *(uint64_t (****)())(a2 + 240);
    }
    else {
      uint64_t v58 = &off_2533988;
    }
    sub_1340CD8((uint64_t)v55, (uint64_t)v58);
    if ((v35 & 0x40) == 0)
    {
LABEL_28:
      if ((v35 & 0x80) == 0) {
        goto LABEL_89;
      }
      goto LABEL_81;
    }
    goto LABEL_73;
  }
LABEL_57:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v51 = *(void *)(a1 + 232);
  if (!v51)
  {
    uint64_t v52 = *(void *)(a1 + 8);
    uint64_t v53 = (void *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
    if (v52) {
      uint64_t v53 = (void *)*v53;
    }
    uint64_t v51 = sub_134E60C((uint64_t)v53);
    *(void *)(a1 + 232) = v51;
  }
  if (*(void *)(a2 + 232)) {
    uint64_t v54 = *(uint64_t (****)())(a2 + 232);
  }
  else {
    uint64_t v54 = &off_25338E0;
  }
  sub_133FB08(v51, (uint64_t)v54);
  if ((v35 & 0x20) != 0) {
    goto LABEL_65;
  }
LABEL_27:
  if ((v35 & 0x40) == 0) {
    goto LABEL_28;
  }
LABEL_73:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  int v59 = *(std::string **)(a1 + 248);
  if (!v59)
  {
    uint64_t v60 = *(void *)(a1 + 8);
    uint64_t v61 = (void *)(v60 & 0xFFFFFFFFFFFFFFFCLL);
    if (v60) {
      uint64_t v61 = (void *)*v61;
    }
    int v59 = (std::string *)sub_134E79C((uint64_t)v61);
    *(void *)(a1 + 248) = v59;
  }
  if (*(void *)(a2 + 248)) {
    unint64_t v62 = *(uint64_t (****)())(a2 + 248);
  }
  else {
    unint64_t v62 = &off_25339D8;
  }
  sub_13418D8(v59, (uint64_t)v62);
  if ((v35 & 0x80) != 0)
  {
LABEL_81:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v63 = *(std::string **)(a1 + 256);
    if (!v63)
    {
      uint64_t v64 = *(void *)(a1 + 8);
      unsigned int v65 = (void *)(v64 & 0xFFFFFFFFFFFFFFFCLL);
      if (v64) {
        unsigned int v65 = (void *)*v65;
      }
      uint64_t v63 = (std::string *)sub_134E8C4((uint64_t)v65);
      *(void *)(a1 + 256) = v63;
    }
    if (*(void *)(a2 + 256)) {
      unsigned int v66 = *(uint64_t (****)())(a2 + 256);
    }
    else {
      unsigned int v66 = &off_2533A40;
    }
    sub_13427DC(v63, (uint64_t)v66);
  }
LABEL_89:
  if ((v35 & 0xFF00) == 0) {
    goto LABEL_100;
  }
  if ((v35 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v69 = *(void *)(a1 + 264);
    if (!v69)
    {
      uint64_t v70 = *(void *)(a1 + 8);
      unsigned int v71 = (void *)(v70 & 0xFFFFFFFFFFFFFFFCLL);
      if (v70) {
        unsigned int v71 = (void *)*v71;
      }
      uint64_t v69 = sub_134EAD8((uint64_t)v71);
      *(void *)(a1 + 264) = v69;
    }
    if (*(void *)(a2 + 264)) {
      unsigned int v72 = *(uint64_t (****)())(a2 + 264);
    }
    else {
      unsigned int v72 = &off_2533B08;
    }
    sub_13450E0(v69, (uint64_t)v72);
    if ((v35 & 0x200) == 0)
    {
LABEL_92:
      if ((v35 & 0x400) == 0) {
        goto LABEL_93;
      }
      goto LABEL_133;
    }
  }
  else if ((v35 & 0x200) == 0)
  {
    goto LABEL_92;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v73 = *(void *)(a1 + 272);
  if (!v73)
  {
    uint64_t v74 = *(void *)(a1 + 8);
    unsigned int v75 = (void *)(v74 & 0xFFFFFFFFFFFFFFFCLL);
    if (v74) {
      unsigned int v75 = (void *)*v75;
    }
    uint64_t v73 = sub_13D8978((uint64_t)v75);
    *(void *)(a1 + 272) = v73;
  }
  if (*(void *)(a2 + 272)) {
    unsigned int v76 = *(uint64_t (****)())(a2 + 272);
  }
  else {
    unsigned int v76 = &off_2535580;
  }
  sub_139ECAC(v73, (uint64_t)v76);
  if ((v35 & 0x400) == 0)
  {
LABEL_93:
    if ((v35 & 0x800) == 0) {
      goto LABEL_94;
    }
    goto LABEL_134;
  }
LABEL_133:
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  if ((v35 & 0x800) == 0)
  {
LABEL_94:
    if ((v35 & 0x1000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_135;
  }
LABEL_134:
  *(_DWORD *)(a1 + 284) = *(_DWORD *)(a2 + 284);
  if ((v35 & 0x1000) == 0)
  {
LABEL_95:
    if ((v35 & 0x2000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_136;
  }
LABEL_135:
  *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
  if ((v35 & 0x2000) == 0)
  {
LABEL_96:
    if ((v35 & 0x4000) == 0) {
      goto LABEL_97;
    }
LABEL_137:
    *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
    if ((v35 & 0x8000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_98;
  }
LABEL_136:
  *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
  if ((v35 & 0x4000) != 0) {
    goto LABEL_137;
  }
LABEL_97:
  if ((v35 & 0x8000) != 0) {
LABEL_98:
  }
    *(_DWORD *)(a1 + 300) = *(_DWORD *)(a2 + 300);
LABEL_99:
  *(_DWORD *)(a1 + 40) |= v35;
LABEL_100:
  if ((v35 & 0xFF0000) == 0) {
    goto LABEL_111;
  }
  if ((v35 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 304) = *(_DWORD *)(a2 + 304);
    if ((v35 & 0x20000) == 0)
    {
LABEL_103:
      if ((v35 & 0x40000) == 0) {
        goto LABEL_104;
      }
      goto LABEL_141;
    }
  }
  else if ((v35 & 0x20000) == 0)
  {
    goto LABEL_103;
  }
  *(_DWORD *)(a1 + 308) = *(_DWORD *)(a2 + 308);
  if ((v35 & 0x40000) == 0)
  {
LABEL_104:
    if ((v35 & 0x80000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_142;
  }
LABEL_141:
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  if ((v35 & 0x80000) == 0)
  {
LABEL_105:
    if ((v35 & 0x100000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_143;
  }
LABEL_142:
  *(_DWORD *)(a1 + 316) = *(_DWORD *)(a2 + 316);
  if ((v35 & 0x100000) == 0)
  {
LABEL_106:
    if ((v35 & 0x200000) == 0) {
      goto LABEL_107;
    }
    goto LABEL_144;
  }
LABEL_143:
  *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
  if ((v35 & 0x200000) == 0)
  {
LABEL_107:
    if ((v35 & 0x400000) == 0) {
      goto LABEL_108;
    }
LABEL_145:
    *(_DWORD *)(a1 + 328) = *(_DWORD *)(a2 + 328);
    if ((v35 & 0x800000) == 0) {
      goto LABEL_110;
    }
    goto LABEL_109;
  }
LABEL_144:
  *(_DWORD *)(a1 + 324) = *(_DWORD *)(a2 + 324);
  if ((v35 & 0x400000) != 0) {
    goto LABEL_145;
  }
LABEL_108:
  if ((v35 & 0x800000) != 0) {
LABEL_109:
  }
    *(_DWORD *)(a1 + 332) = *(_DWORD *)(a2 + 332);
LABEL_110:
  *(_DWORD *)(a1 + 40) |= v35;
LABEL_111:
  if ((v35 & 0x1000000) != 0)
  {
    int v67 = *(_DWORD *)(a2 + 336);
    *(_DWORD *)(a1 + 40) |= 0x1000000u;
    *(_DWORD *)(a1 + 336) = v67;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v68 = *(void *)(a2 + 8);
  if (v68)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v68 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_134947C(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_1345E0C(a1);
    sub_1348D54(a1, a2);
  }
}

uint64_t sub_13494C8(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_133E570(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_18856CC(*(void *)(*(void *)(a1 + 88) + 8 * v6) + 16);
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 104);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_18856CC(*(void *)(*(void *)(a1 + 112) + 8 * v9) + 16);
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v12 = *(unsigned int *)(a1 + 160);
    while ((int)v12 >= 1)
    {
      uint64_t v13 = v12 - 1;
      char v14 = sub_1345A38(*(void *)(*(void *)(a1 + 168) + 8 * v12));
      uint64_t v12 = v13;
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v15 = *(unsigned int *)(a1 + 184);
    while ((int)v15 >= 1)
    {
      uint64_t v16 = v15 - 1;
      char v17 = sub_134DCC8(*(void *)(*(void *)(a1 + 192) + 8 * v15));
      uint64_t result = 0;
      uint64_t v15 = v16;
      if ((v17 & 1) == 0) {
        return result;
      }
    }
    int v18 = *(_DWORD *)(a1 + 40);
    if ((v18 & 4) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 216));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 8) != 0)
    {
      uint64_t result = sub_137E140(*(void *)(a1 + 224));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x10) != 0)
    {
      uint64_t result = sub_133FCC0(*(void *)(a1 + 232));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x20) != 0)
    {
      uint64_t result = sub_1340DE4(*(void *)(a1 + 240));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x100) != 0)
    {
      uint64_t result = sub_13452E8(*(void *)(a1 + 264));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 0x200) == 0) {
      return 1;
    }
    uint64_t result = sub_139F024(*(void *)(a1 + 272));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_134964C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.Step");
}

uint64_t sub_134965C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AB400;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = a2;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = a2;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = a2;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = a2;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = a2;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = a2;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = a2;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = a2;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = a2;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = a2;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = a2;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = a2;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = 0;
  *(_DWORD *)(a1 + 376) = 0;
  return a1;
}

void sub_1349718(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1349748(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unsigned int v77 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v79 = a1 + 16;
  *(void *)a1 = off_24AB400;
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v5 = *(_DWORD *)(a2 + 48);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 56);
    uint64_t v7 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1367F5C(v4, v7, (uint64_t *)(v6 + 8), v5, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v8 = *(_DWORD *)(a1 + 48) + v5;
    *(_DWORD *)(a1 + 48) = v8;
    uint64_t v9 = *(int **)(a1 + 56);
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v10 = *(_DWORD *)(a2 + 72);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 80);
    uint64_t v12 = (uint64_t *)sub_188CCE4(a1 + 64, v10);
    sub_1367FE8((uint64_t *)(a1 + 64), v12, (uint64_t *)(v11 + 8), v10, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v13 = *(_DWORD *)(a1 + 72) + v10;
    *(_DWORD *)(a1 + 72) = v13;
    char v14 = *(int **)(a1 + 80);
    if (*v14 < v13) {
      int *v14 = v13;
    }
  }
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  int v15 = *(_DWORD *)(a2 + 96);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 104);
    char v17 = (uint64_t *)sub_188CCE4(a1 + 88, v15);
    sub_1368074((uint64_t *)(a1 + 88), v17, (uint64_t *)(v16 + 8), v15, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v18 = *(_DWORD *)(a1 + 96) + v15;
    *(_DWORD *)(a1 + 96) = v18;
    int v19 = *(int **)(a1 + 104);
    if (*v19 < v18) {
      *int v19 = v18;
    }
  }
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  int v20 = *(_DWORD *)(a2 + 120);
  if (v20)
  {
    uint64_t v21 = *(void *)(a2 + 128);
    int v22 = (uint64_t *)sub_188CCE4(a1 + 112, v20);
    sub_1368100((uint64_t *)(a1 + 112), v22, (uint64_t *)(v21 + 8), v20, **(_DWORD **)(a1 + 128) - *(_DWORD *)(a1 + 120));
    int v23 = *(_DWORD *)(a1 + 120) + v20;
    *(_DWORD *)(a1 + 120) = v23;
    uint64_t v24 = *(int **)(a1 + 128);
    if (*v24 < v23) {
      int *v24 = v23;
    }
  }
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  int v25 = *(_DWORD *)(a2 + 144);
  if (v25)
  {
    uint64_t v26 = *(void *)(a2 + 152);
    uint64_t v27 = (uint64_t *)sub_188CCE4(a1 + 136, v25);
    sub_136818C((uint64_t *)(a1 + 136), v27, (uint64_t *)(v26 + 8), v25, **(_DWORD **)(a1 + 152) - *(_DWORD *)(a1 + 144));
    int v28 = *(_DWORD *)(a1 + 144) + v25;
    *(_DWORD *)(a1 + 144) = v28;
    uint64_t v29 = *(int **)(a1 + 152);
    if (*v29 < v28) {
      int *v29 = v28;
    }
  }
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  int v30 = *(_DWORD *)(a2 + 168);
  if (v30)
  {
    uint64_t v31 = *(void *)(a2 + 176);
    uint64_t v32 = (uint64_t *)sub_188CCE4(a1 + 160, v30);
    sub_1368218((uint64_t *)(a1 + 160), v32, (uint64_t *)(v31 + 8), v30, **(_DWORD **)(a1 + 176) - *(_DWORD *)(a1 + 168));
    int v33 = *(_DWORD *)(a1 + 168) + v30;
    *(_DWORD *)(a1 + 168) = v33;
    uint64_t v34 = *(int **)(a1 + 176);
    if (*v34 < v33) {
      *uint64_t v34 = v33;
    }
  }
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  int v35 = *(_DWORD *)(a2 + 192);
  if (v35)
  {
    uint64_t v36 = *(void *)(a2 + 200);
    uint64_t v37 = (std::string **)sub_188CCE4(a1 + 184, v35);
    sub_188FB98(a1 + 184, v37, (const std::string **)(v36 + 8), v35, **(_DWORD **)(a1 + 200) - *(_DWORD *)(a1 + 192));
    int v38 = *(_DWORD *)(a1 + 192) + v35;
    *(_DWORD *)(a1 + 192) = v38;
    uint64_t v39 = *(int **)(a1 + 200);
    if (*v39 < v38) {
      *uint64_t v39 = v38;
    }
  }
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  int v40 = *(_DWORD *)(a2 + 216);
  if (v40)
  {
    uint64_t v41 = *(void *)(a2 + 224);
    uint64_t v42 = (uint64_t *)sub_188CCE4(a1 + 208, *(_DWORD *)(a2 + 216));
    sub_13682A4((uint64_t *)(a1 + 208), v42, (uint64_t *)(v41 + 8), v40, **(_DWORD **)(a1 + 224) - *(_DWORD *)(a1 + 216));
    int v43 = *(_DWORD *)(a1 + 216) + v40;
    *(_DWORD *)(a1 + 216) = v43;
    uint64_t v44 = *(int **)(a1 + 224);
    if (*v44 < v43) {
      int *v44 = v43;
    }
  }
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  int v45 = *(_DWORD *)(a2 + 240);
  if (v45)
  {
    uint64_t v46 = *(void *)(a2 + 248);
    uint64_t v47 = (uint64_t *)sub_188CCE4(a1 + 232, *(_DWORD *)(a2 + 240));
    sub_1368330((uint64_t *)(a1 + 232), v47, (uint64_t *)(v46 + 8), v45, **(_DWORD **)(a1 + 248) - *(_DWORD *)(a1 + 240));
    int v48 = *(_DWORD *)(a1 + 240) + v45;
    *(_DWORD *)(a1 + 240) = v48;
    uint64_t v49 = *(int **)(a1 + 248);
    if (*v49 < v48) {
      int *v49 = v48;
    }
  }
  unsigned int v78 = (uint64_t *)(a1 + 256);
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  int v50 = *(_DWORD *)(a2 + 264);
  if (v50)
  {
    uint64_t v51 = *(void *)(a2 + 272);
    uint64_t v52 = (uint64_t *)sub_188CCE4((uint64_t)v78, *(_DWORD *)(a2 + 264));
    sub_13683BC(v78, v52, (uint64_t *)(v51 + 8), v50, **(_DWORD **)(a1 + 272) - *(_DWORD *)(a1 + 264));
    int v53 = *(_DWORD *)(a1 + 264) + v50;
    *(_DWORD *)(a1 + 264) = v53;
    uint64_t v54 = *(int **)(a1 + 272);
    if (*v54 < v53) {
      int *v54 = v53;
    }
  }
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  int v55 = *(_DWORD *)(a2 + 288);
  if (v55)
  {
    uint64_t v56 = *(void *)(a2 + 296);
    uint64_t v57 = (uint64_t *)sub_188CCE4(a1 + 280, *(_DWORD *)(a2 + 288));
    sub_1368448((uint64_t *)(a1 + 280), v57, (uint64_t *)(v56 + 8), v55, **(_DWORD **)(a1 + 296) - *(_DWORD *)(a1 + 288));
    int v58 = *(_DWORD *)(a1 + 288) + v55;
    *(_DWORD *)(a1 + 288) = v58;
    int v59 = *(int **)(a1 + 296);
    if (*v59 < v58) {
      int *v59 = v58;
    }
  }
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = 0;
  int v60 = *(_DWORD *)(a2 + 312);
  if (v60)
  {
    uint64_t v61 = *(void *)(a2 + 320);
    unint64_t v62 = (uint64_t *)sub_188CCE4(a1 + 304, v60);
    sub_13684D4((uint64_t *)(a1 + 304), v62, (uint64_t *)(v61 + 8), v60, **(_DWORD **)(a1 + 320) - *(_DWORD *)(a1 + 312));
    int v63 = *(_DWORD *)(a1 + 312) + v60;
    *(_DWORD *)(a1 + 312) = v63;
    uint64_t v64 = *(int **)(a1 + 320);
    if (*v64 < v63) {
      *uint64_t v64 = v63;
    }
  }
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0;
  int v65 = *(_DWORD *)(a2 + 336);
  if (v65)
  {
    uint64_t v66 = *(void *)(a2 + 344);
    int v67 = (uint64_t *)sub_188CCE4(a1 + 328, *(_DWORD *)(a2 + 336));
    sub_1367748((uint64_t *)(a1 + 328), v67, (uint64_t *)(v66 + 8), v65, **(_DWORD **)(a1 + 344) - *(_DWORD *)(a1 + 336));
    int v68 = *(_DWORD *)(a1 + 336) + v65;
    *(_DWORD *)(a1 + 336) = v68;
    uint64_t v69 = *(int **)(a1 + 344);
    if (*v69 < v68) {
      *uint64_t v69 = v68;
    }
  }
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = 0;
  int v70 = *(_DWORD *)(a2 + 360);
  if (v70)
  {
    uint64_t v71 = *(void *)(a2 + 368);
    unsigned int v72 = (uint64_t *)sub_188CCE4(a1 + 352, *(_DWORD *)(a2 + 360));
    sub_1367A80((uint64_t *)(a1 + 352), v72, (uint64_t *)(v71 + 8), v70, **(_DWORD **)(a1 + 368) - *(_DWORD *)(a1 + 360));
    int v73 = *(_DWORD *)(a1 + 360) + v70;
    *(_DWORD *)(a1 + 360) = v73;
    uint64_t v74 = *(int **)(a1 + 368);
    if (*v74 < v73) {
      *uint64_t v74 = v73;
    }
  }
  *(_DWORD *)(a1 + 376) = 0;
  uint64_t v75 = *(void *)(a2 + 8);
  if (v75) {
    sub_188B4F8(v77, (v75 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v79, a2 + 16);
  return a1;
}

void sub_1349DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, uint64_t *a16, void *a17, uint64_t a18)
{
  sub_1366798(v22);
  sub_1367418(v23);
  sub_1367398(a9);
  sub_1367318(a17);
  sub_1367298(v20);
  sub_1367218(v19);
  sub_1889DE8(v21);
  sub_1367198(a10);
  sub_1367118(a11);
  sub_1367098(a12);
  sub_1367018(a13);
  sub_1366F98(a14);
  sub_1366F18(a15);
  sub_1882CC0(a18);
  *int v18 = off_24E6998;
  sub_119475C(a16);
  _Unwind_Resume(a1);
}

void *sub_1349F30(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1366A98(a1 + 44);
  sub_1366798(a1 + 41);
  sub_1367418(a1 + 38);
  sub_1367398(a1 + 35);
  sub_1367318(a1 + 32);
  sub_1367298(a1 + 29);
  sub_1367218(a1 + 26);
  sub_1889DE8(a1 + 23);
  sub_1367198(a1 + 20);
  sub_1367118(a1 + 17);
  sub_1367098(a1 + 14);
  sub_1367018(a1 + 11);
  sub_1366F98(a1 + 8);
  sub_1366F18(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_134A050(void *a1)
{
  sub_1349F30(a1);

  operator delete();
}

uint64_t sub_134A088(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_13246EC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 48) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 72);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_1325590(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 72) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 96);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 104) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_13229F8(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 96) = 0;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 120);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 128) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_1326EAC(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 120) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 144);
  if ((int)v14 >= 1)
  {
    int v15 = (uint64_t *)(*(void *)(a1 + 152) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_13A6644(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 144) = 0;
  }
  uint64_t v17 = *(unsigned int *)(a1 + 168);
  if ((int)v17 >= 1)
  {
    int v18 = (uint64_t *)(*(void *)(a1 + 176) + 8);
    do
    {
      uint64_t v19 = *v18++;
      sub_1327FD8(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(a1 + 168) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 184);
  uint64_t v21 = *(unsigned int *)(a1 + 216);
  if ((int)v21 >= 1)
  {
    int v22 = (uint64_t *)(*(void *)(a1 + 224) + 8);
    do
    {
      uint64_t v23 = *v22++;
      uint64_t result = sub_1326034(v23);
      --v21;
    }
    while (v21);
    *(_DWORD *)(a1 + 216) = 0;
  }
  uint64_t v24 = *(unsigned int *)(a1 + 240);
  if ((int)v24 >= 1)
  {
    int v25 = (uint64_t *)(*(void *)(a1 + 248) + 8);
    do
    {
      uint64_t v26 = *v25++;
      uint64_t result = sub_132AAF4(v26);
      --v24;
    }
    while (v24);
    *(_DWORD *)(a1 + 240) = 0;
  }
  uint64_t v27 = *(unsigned int *)(a1 + 264);
  if ((int)v27 >= 1)
  {
    int v28 = (uint64_t *)(*(void *)(a1 + 272) + 8);
    do
    {
      uint64_t v29 = *v28++;
      uint64_t result = sub_1329060(v29);
      --v27;
    }
    while (v27);
    *(_DWORD *)(a1 + 264) = 0;
  }
  uint64_t v30 = *(unsigned int *)(a1 + 288);
  if ((int)v30 >= 1)
  {
    uint64_t v31 = (uint64_t *)(*(void *)(a1 + 296) + 8);
    do
    {
      uint64_t v32 = *v31++;
      uint64_t result = sub_1369F48(v32);
      --v30;
    }
    while (v30);
    *(_DWORD *)(a1 + 288) = 0;
  }
  uint64_t v33 = *(unsigned int *)(a1 + 312);
  if ((int)v33 >= 1)
  {
    uint64_t v34 = (uint64_t *)(*(void *)(a1 + 320) + 8);
    do
    {
      uint64_t v35 = *v34++;
      uint64_t result = (uint64_t)sub_132A0C0(v35);
      --v33;
    }
    while (v33);
    *(_DWORD *)(a1 + 312) = 0;
  }
  uint64_t v36 = *(unsigned int *)(a1 + 336);
  if ((int)v36 >= 1)
  {
    uint64_t v37 = (uint64_t *)(*(void *)(a1 + 344) + 8);
    do
    {
      uint64_t v38 = *v37++;
      uint64_t result = sub_1345E0C(v38);
      --v36;
    }
    while (v36);
    *(_DWORD *)(a1 + 336) = 0;
  }
  uint64_t v39 = *(unsigned int *)(a1 + 360);
  if ((int)v39 >= 1)
  {
    int v40 = (uint64_t *)(*(void *)(a1 + 368) + 8);
    do
    {
      uint64_t v41 = *v40++;
      uint64_t result = (uint64_t)sub_1330AF0(v41);
      --v39;
    }
    while (v39);
    *(_DWORD *)(a1 + 360) = 0;
  }
  char v43 = *(unsigned char *)(a1 + 8);
  uint64_t v42 = (uint64_t *)(a1 + 8);
  if (v43)
  {
    return sub_188B4AC(v42);
  }
  return result;
}

uint64_t sub_134A2F4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v107 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v107, a3[11].i32[1])) {
    return *(void *)v107;
  }
  uint64_t v105 = (uint64_t *)(a1 + 328);
  uint64_t v106 = (uint64_t *)(a1 + 352);
  v103 = (uint64_t *)(a1 + 280);
  int v104 = (uint64_t *)(a1 + 304);
  uint64_t v101 = (uint64_t *)(a1 + 232);
  unsigned int v102 = (uint64_t *)(a1 + 256);
  uint64_t v6 = (uint64_t **)(a1 + 184);
  int v99 = (uint64_t *)(a1 + 8);
  v100 = (uint64_t *)(a1 + 208);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v107 + 1);
    unsigned int v8 = **(unsigned char **)v107;
    if ((char)**(unsigned char **)v107 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v107, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v107 + 2);
      }
    }
    *(void *)unsigned int v107 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_151;
        }
        uint64_t v11 = v7 - 1;
        while (1)
        {
          uint64_t v12 = (unsigned __int8 *)(v11 + 1);
          *(void *)unsigned int v107 = v11 + 1;
          uint64_t v13 = *(_DWORD **)(a1 + 56);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 48), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 48) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            uint64_t v16 = sub_1332228(*(void *)(a1 + 40));
            uint64_t v15 = sub_188CDC8(a1 + 40, (uint64_t)v16);
            uint64_t v12 = *(unsigned __int8 **)v107;
          }
          uint64_t v11 = (char *)sub_134AD2C(a3, v15, v12);
          *(void *)unsigned int v107 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_161;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_151;
        }
        uint64_t v17 = v7 - 1;
        while (1)
        {
          int v18 = (unsigned __int8 *)(v17 + 1);
          *(void *)unsigned int v107 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 80);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 72), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 72) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_1332284(*(void *)(a1 + 64));
            uint64_t v21 = sub_188CDC8(a1 + 64, v22);
            int v18 = *(unsigned __int8 **)v107;
          }
          uint64_t v17 = (char *)sub_134ADBC(a3, v21, v18);
          *(void *)unsigned int v107 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_161;
          }
        }
      case 5u:
        if (v8 != 42) {
          goto LABEL_151;
        }
        uint64_t v23 = v7 - 1;
        while (1)
        {
          uint64_t v24 = (unsigned __int8 *)(v23 + 1);
          *(void *)unsigned int v107 = v23 + 1;
          int v25 = *(_DWORD **)(a1 + 104);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 96), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 96) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            uint64_t v28 = sub_13321CC(*(void *)(a1 + 88));
            uint64_t v27 = sub_188CDC8(a1 + 88, v28);
            uint64_t v24 = *(unsigned __int8 **)v107;
          }
          uint64_t v23 = (char *)sub_134AE4C(a3, v27, v24);
          *(void *)unsigned int v107 = v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 42) {
            goto LABEL_161;
          }
        }
      case 8u:
        if (v8 != 66) {
          goto LABEL_151;
        }
        uint64_t v29 = v7 - 1;
        while (1)
        {
          uint64_t v30 = (unsigned __int8 *)(v29 + 1);
          *(void *)unsigned int v107 = v29 + 1;
          uint64_t v31 = *(_DWORD **)(a1 + 128);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 120), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 120) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_133233C(*(void *)(a1 + 112));
            uint64_t v33 = sub_188CDC8(a1 + 112, (uint64_t)v34);
            uint64_t v30 = *(unsigned __int8 **)v107;
          }
          uint64_t v29 = (char *)sub_134AEDC(a3, v33, v30);
          *(void *)unsigned int v107 = v29;
          if (!v29) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 66) {
            goto LABEL_161;
          }
        }
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_151;
        }
        uint64_t v35 = v7 - 1;
        while (1)
        {
          uint64_t v36 = (unsigned __int8 *)(v35 + 1);
          *(void *)unsigned int v107 = v35 + 1;
          uint64_t v37 = *(_DWORD **)(a1 + 152);
          if (v37 && (uint64_t v38 = *(int *)(a1 + 144), (int)v38 < *v37))
          {
            *(_DWORD *)(a1 + 144) = v38 + 1;
            uint64_t v39 = *(void *)&v37[2 * v38 + 2];
          }
          else
          {
            uint64_t v40 = sub_13D8E84(*(void *)(a1 + 136));
            uint64_t v39 = sub_188CDC8(a1 + 136, v40);
            uint64_t v36 = *(unsigned __int8 **)v107;
          }
          uint64_t v35 = sub_134AF6C(a3, v39, v36);
          *(void *)unsigned int v107 = v35;
          if (!v35) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v35 || *v35 != 82) {
            goto LABEL_161;
          }
        }
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_151;
        }
        uint64_t v41 = v7 - 1;
        while (1)
        {
          uint64_t v42 = (unsigned __int8 *)(v41 + 1);
          *(void *)unsigned int v107 = v41 + 1;
          char v43 = *(_DWORD **)(a1 + 176);
          if (v43 && (uint64_t v44 = *(int *)(a1 + 168), (int)v44 < *v43))
          {
            *(_DWORD *)(a1 + 168) = v44 + 1;
            uint64_t v45 = *(void *)&v43[2 * v44 + 2];
          }
          else
          {
            uint64_t v46 = sub_1332398(*(void *)(a1 + 160));
            uint64_t v45 = sub_188CDC8(a1 + 160, v46);
            uint64_t v42 = *(unsigned __int8 **)v107;
          }
          uint64_t v41 = (char *)sub_134AFFC(a3, v45, v42);
          *(void *)unsigned int v107 = v41;
          if (!v41) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v41 || *v41 != 90) {
            goto LABEL_161;
          }
        }
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_151;
        }
        uint64_t v47 = v7 - 1;
        while (1)
        {
          int v48 = (char *)(v47 + 1);
          *(void *)unsigned int v107 = v47 + 1;
          uint64_t v49 = *(_DWORD **)(a1 + 200);
          if (v49 && (uint64_t v50 = *(int *)(a1 + 192), (int)v50 < *v49))
          {
            *(_DWORD *)(a1 + 192) = v50 + 1;
            uint64_t v51 = *(std::string **)&v49[2 * v50 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v53 = v52;
            v53[1] = sub_3A6EDC;
            *uint64_t v52 = 0;
            v52[1] = 0;
            v52[2] = 0;
            uint64_t v51 = (std::string *)sub_188CDC8(a1 + 184, (uint64_t)v52);
            int v48 = *(char **)v107;
          }
          uint64_t v47 = sub_188C244(v51, v48, (uint64_t)a3);
          *(void *)unsigned int v107 = v47;
          if (!v47) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v47 || *v47 != 98) {
            goto LABEL_161;
          }
        }
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_151;
        }
        uint64_t v54 = v7 - 1;
        while (1)
        {
          int v55 = (unsigned __int8 *)(v54 + 1);
          *(void *)unsigned int v107 = v54 + 1;
          uint64_t v56 = *(_DWORD **)(a1 + 224);
          if (v56 && (uint64_t v57 = *(int *)(a1 + 216), (int)v57 < *v56))
          {
            *(_DWORD *)(a1 + 216) = v57 + 1;
            uint64_t v58 = *(void *)&v56[2 * v57 + 2];
          }
          else
          {
            uint64_t v59 = sub_13322E0(*v100);
            uint64_t v58 = sub_188CDC8((uint64_t)v100, v59);
            int v55 = *(unsigned __int8 **)v107;
          }
          uint64_t v54 = (char *)sub_134B08C(a3, v58, v55);
          *(void *)unsigned int v107 = v54;
          if (!v54) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v54 || *v54 != 106) {
            goto LABEL_161;
          }
        }
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_151;
        }
        int v60 = v7 - 1;
        while (1)
        {
          uint64_t v61 = (unsigned __int8 *)(v60 + 1);
          *(void *)unsigned int v107 = v60 + 1;
          unint64_t v62 = *(_DWORD **)(a1 + 248);
          if (v62 && (uint64_t v63 = *(int *)(a1 + 240), (int)v63 < *v62))
          {
            *(_DWORD *)(a1 + 240) = v63 + 1;
            uint64_t v64 = *(void *)&v62[2 * v63 + 2];
          }
          else
          {
            uint64_t v65 = sub_13324AC(*v101);
            uint64_t v64 = sub_188CDC8((uint64_t)v101, v65);
            uint64_t v61 = *(unsigned __int8 **)v107;
          }
          int v60 = (char *)sub_134B11C(a3, v64, v61);
          *(void *)unsigned int v107 = v60;
          if (!v60) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v60 || *v60 != 122) {
            goto LABEL_161;
          }
        }
      case 0x11u:
        if (v8 != 138) {
          goto LABEL_151;
        }
        uint64_t v66 = v7 - 2;
        while (1)
        {
          int v67 = (unsigned __int8 *)(v66 + 2);
          *(void *)unsigned int v107 = v66 + 2;
          int v68 = *(_DWORD **)(a1 + 272);
          if (v68 && (uint64_t v69 = *(int *)(a1 + 264), (int)v69 < *v68))
          {
            *(_DWORD *)(a1 + 264) = v69 + 1;
            uint64_t v70 = *(void *)&v68[2 * v69 + 2];
          }
          else
          {
            uint64_t v71 = sub_13323F4(*v102);
            uint64_t v70 = sub_188CDC8((uint64_t)v102, v71);
            int v67 = *(unsigned __int8 **)v107;
          }
          uint64_t v66 = (char *)sub_134B1AC(a3, v70, v67);
          *(void *)unsigned int v107 = v66;
          if (!v66) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v66 || *(_WORD *)v66 != 394) {
            goto LABEL_161;
          }
        }
      case 0x12u:
        if (v8 != 146) {
          goto LABEL_151;
        }
        unsigned int v72 = v7 - 2;
        while (1)
        {
          int v73 = (unsigned __int8 *)(v72 + 2);
          *(void *)unsigned int v107 = v72 + 2;
          uint64_t v74 = *(_DWORD **)(a1 + 296);
          if (v74 && (uint64_t v75 = *(int *)(a1 + 288), (int)v75 < *v74))
          {
            *(_DWORD *)(a1 + 288) = v75 + 1;
            uint64_t v76 = *(void *)&v74[2 * v75 + 2];
          }
          else
          {
            uint64_t v77 = sub_13DAB08(*v103);
            uint64_t v76 = sub_188CDC8((uint64_t)v103, v77);
            int v73 = *(unsigned __int8 **)v107;
          }
          unsigned int v72 = (char *)sub_1323390(a3, v76, v73);
          *(void *)unsigned int v107 = v72;
          if (!v72) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v72 || *(_WORD *)v72 != 402) {
            goto LABEL_161;
          }
        }
      case 0x13u:
        if (v8 != 154) {
          goto LABEL_151;
        }
        unsigned int v78 = v7 - 2;
        while (1)
        {
          uint64_t v79 = (unsigned __int8 *)(v78 + 2);
          *(void *)unsigned int v107 = v78 + 2;
          unsigned int v80 = *(_DWORD **)(a1 + 320);
          if (v80 && (uint64_t v81 = *(int *)(a1 + 312), (int)v81 < *v80))
          {
            *(_DWORD *)(a1 + 312) = v81 + 1;
            uint64_t v82 = *(void *)&v80[2 * v81 + 2];
          }
          else
          {
            uint64_t v83 = sub_1332450(*v104);
            uint64_t v82 = sub_188CDC8((uint64_t)v104, v83);
            uint64_t v79 = *(unsigned __int8 **)v107;
          }
          unsigned int v78 = (char *)sub_1338CEC(a3, v82, v79);
          *(void *)unsigned int v107 = v78;
          if (!v78) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v78 || *(_WORD *)v78 != 410) {
            goto LABEL_161;
          }
        }
      case 0x14u:
        if (v8 != 162) {
          goto LABEL_151;
        }
        uint64_t v84 = v7 - 2;
        while (1)
        {
          unsigned int v85 = (unsigned __int8 *)(v84 + 2);
          *(void *)unsigned int v107 = v84 + 2;
          int v86 = *(_DWORD **)(a1 + 344);
          if (v86 && (uint64_t v87 = *(int *)(a1 + 336), (int)v87 < *v86))
          {
            *(_DWORD *)(a1 + 336) = v87 + 1;
            uint64_t v88 = *(void *)&v86[2 * v87 + 2];
          }
          else
          {
            uint64_t v89 = sub_134EBF4(*v105);
            uint64_t v88 = sub_188CDC8((uint64_t)v105, v89);
            unsigned int v85 = *(unsigned __int8 **)v107;
          }
          uint64_t v84 = (char *)sub_1338C5C(a3, v88, v85);
          *(void *)unsigned int v107 = v84;
          if (!v84) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v84 || *(_WORD *)v84 != 418) {
            goto LABEL_161;
          }
        }
      case 0x15u:
        if (v8 != 170) {
          goto LABEL_151;
        }
        uint64_t v90 = v7 - 2;
        while (1)
        {
          unsigned int v91 = (unsigned __int8 *)(v90 + 2);
          *(void *)unsigned int v107 = v90 + 2;
          int v92 = *(_DWORD **)(a1 + 368);
          if (v92 && (uint64_t v93 = *(int *)(a1 + 360), (int)v93 < *v92))
          {
            *(_DWORD *)(a1 + 360) = v93 + 1;
            uint64_t v94 = *(void *)&v92[2 * v93 + 2];
          }
          else
          {
            v95 = sub_133280C(*v106);
            uint64_t v94 = sub_188CDC8((uint64_t)v106, (uint64_t)v95);
            unsigned int v91 = *(unsigned __int8 **)v107;
          }
          uint64_t v90 = (char *)sub_133F570(a3, v94, v91);
          *(void *)unsigned int v107 = v90;
          if (!v90) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v90 || *(_WORD *)v90 != 426) {
            goto LABEL_161;
          }
        }
      default:
LABEL_151:
        if (v8) {
          BOOL v96 = (v8 & 7) == 4;
        }
        else {
          BOOL v96 = 1;
        }
        if (!v96)
        {
          if (v8 - 7600 > 0x18F)
          {
            if (*v99)
            {
              uint64_t v98 = (std::string *)((*v99 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v98 = (std::string *)sub_188DBD8(v99);
              uint64_t v7 = *(char **)v107;
            }
            unsigned int v97 = sub_1885AC0(v8, v98, v7, a3);
          }
          else
          {
            unsigned int v97 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2533CD8, v99, a3);
          }
          *(void *)unsigned int v107 = v97;
          if (!v97) {
            return 0;
          }
LABEL_161:
          if (sub_11947B8((uint64_t)a3, (char **)v107, a3[11].i32[1])) {
            return *(void *)v107;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v107;
    }
  }
}

uint64_t sub_134AD2C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13247CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_134ADBC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_132563C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_134AE4C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1322B70(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_134AEDC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1326FEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_134AF6C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13A6CBC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_134AFFC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1328100(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_134B08C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1326128(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_134B11C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_132ACE8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_134B1AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1329154(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_134B23C(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_1324CB4(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 72);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 80) + 8 * j + 8);
      *a2 = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      a2[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        uint64_t v15 = a2 + 2;
      }
      a2 = sub_1325928(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 96);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 104) + 8 * k + 8);
      *a2 = 42;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      a2[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, a2 + 1);
      }
      else {
        uint64_t v20 = a2 + 2;
      }
      a2 = sub_1323540(v18, v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 120);
  if (v21)
  {
    for (int m = 0; m != v21; ++m)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 128) + 8 * m + 8);
      *a2 = 66;
      unsigned int v24 = *(_DWORD *)(v23 + 44);
      a2[1] = v24;
      if (v24 > 0x7F) {
        int v25 = sub_188A9CC(v24, a2 + 1);
      }
      else {
        int v25 = a2 + 2;
      }
      a2 = sub_13274D4(v23, v25, a3);
    }
  }
  int v26 = *(_DWORD *)(a1 + 144);
  if (v26)
  {
    for (int n = 0; n != v26; ++n)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 152) + 8 * n + 8);
      *a2 = 82;
      unsigned int v29 = *(_DWORD *)(v28 + 48);
      a2[1] = v29;
      if (v29 > 0x7F) {
        uint64_t v30 = sub_188A9CC(v29, a2 + 1);
      }
      else {
        uint64_t v30 = a2 + 2;
      }
      a2 = sub_13A962C(v28, v30, a3);
    }
  }
  int v31 = *(_DWORD *)(a1 + 168);
  if (v31)
  {
    for (iint i = 0; ii != v31; ++ii)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 176) + 8 * ii + 8);
      *a2 = 90;
      unsigned int v34 = *(_DWORD *)(v33 + 44);
      a2[1] = v34;
      if (v34 > 0x7F) {
        uint64_t v35 = sub_188A9CC(v34, a2 + 1);
      }
      else {
        uint64_t v35 = a2 + 2;
      }
      a2 = sub_13285AC(v33, v35, a3);
    }
  }
  uint64_t v36 = *(unsigned int *)(a1 + 192);
  if ((int)v36 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = 8 * v36;
    do
    {
      a2 = (char *)sub_125CE58(a3, 12, *(void *)(*(void *)(a1 + 200) + v37 + 8), a2);
      v37 += 8;
    }
    while (v38 != v37);
  }
  int v39 = *(_DWORD *)(a1 + 216);
  if (v39)
  {
    for (jint j = 0; jj != v39; ++jj)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v41 = *(void *)(*(void *)(a1 + 224) + 8 * jj + 8);
      *a2 = 106;
      unsigned int v42 = *(_DWORD *)(v41 + 44);
      a2[1] = v42;
      if (v42 > 0x7F) {
        char v43 = sub_188A9CC(v42, a2 + 1);
      }
      else {
        char v43 = a2 + 2;
      }
      a2 = sub_1326538(v41, v43, a3);
    }
  }
  int v44 = *(_DWORD *)(a1 + 240);
  if (v44)
  {
    for (kint k = 0; kk != v44; ++kk)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v46 = *(void *)(*(void *)(a1 + 248) + 8 * kk + 8);
      *a2 = 122;
      unsigned int v47 = *(_DWORD *)(v46 + 44);
      a2[1] = v47;
      if (v47 > 0x7F) {
        int v48 = sub_188A9CC(v47, a2 + 1);
      }
      else {
        int v48 = a2 + 2;
      }
      a2 = sub_132B4E0(v46, v48, a3);
    }
  }
  int v49 = *(_DWORD *)(a1 + 264);
  if (v49)
  {
    for (mint m = 0; mm != v49; ++mm)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v51 = *(void *)(*(void *)(a1 + 272) + 8 * mm + 8);
      *(_WORD *)a2 = 394;
      unsigned int v52 = *(_DWORD *)(v51 + 44);
      a2[2] = v52;
      if (v52 > 0x7F) {
        int v53 = sub_188A9CC(v52, a2 + 2);
      }
      else {
        int v53 = a2 + 3;
      }
      a2 = sub_13295A8(v51, v53, a3);
    }
  }
  int v54 = *(_DWORD *)(a1 + 288);
  if (v54)
  {
    for (nint n = 0; nn != v54; ++nn)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v56 = *(void *)(*(void *)(a1 + 296) + 8 * nn + 8);
      *(_WORD *)a2 = 402;
      unsigned int v57 = *(_DWORD *)(v56 + 44);
      a2[2] = v57;
      if (v57 > 0x7F) {
        uint64_t v58 = sub_188A9CC(v57, a2 + 2);
      }
      else {
        uint64_t v58 = a2 + 3;
      }
      a2 = sub_13D2F58(v56, v58, a3);
    }
  }
  int v59 = *(_DWORD *)(a1 + 312);
  if (v59)
  {
    for (int i1 = 0; i1 != v59; ++i1)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v61 = *(void *)(*(void *)(a1 + 320) + 8 * i1 + 8);
      *(_WORD *)a2 = 410;
      unsigned int v62 = *(_DWORD *)(v61 + 44);
      a2[2] = v62;
      if (v62 > 0x7F) {
        uint64_t v63 = sub_188A9CC(v62, a2 + 2);
      }
      else {
        uint64_t v63 = a2 + 3;
      }
      a2 = sub_132A450(v61, v63, a3);
    }
  }
  int v64 = *(_DWORD *)(a1 + 336);
  if (v64)
  {
    for (int i2 = 0; i2 != v64; ++i2)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v66 = *(void *)(*(void *)(a1 + 344) + 8 * i2 + 8);
      *(_WORD *)a2 = 418;
      unsigned int v67 = *(_DWORD *)(v66 + 44);
      a2[2] = v67;
      if (v67 > 0x7F) {
        int v68 = sub_188A9CC(v67, a2 + 2);
      }
      else {
        int v68 = a2 + 3;
      }
      a2 = sub_1347700(v66, v68, a3);
    }
  }
  int v69 = *(_DWORD *)(a1 + 360);
  if (v69)
  {
    for (int i3 = 0; i3 != v69; ++i3)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v71 = *(void *)(*(void *)(a1 + 368) + 8 * i3 + 8);
      *(_WORD *)a2 = 426;
      unsigned int v72 = *(_DWORD *)(v71 + 44);
      a2[2] = v72;
      if (v72 > 0x7F) {
        int v73 = sub_188A9CC(v72, a2 + 2);
      }
      else {
        int v73 = a2 + 3;
      }
      a2 = sub_1330F84(v71, v73, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 950, 1000, a2, a3);
  }
  uint64_t v74 = *(void *)(a1 + 8);
  if ((v74 & 1) == 0) {
    return a2;
  }
  unint64_t v76 = v74 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v76 + 31) < 0)
  {
    uint64_t v77 = *(void **)(v76 + 8);
    uint64_t v78 = *(void *)(v76 + 16);
  }
  else
  {
    uint64_t v77 = (void *)(v76 + 8);
    LODWORD(v78) = *(unsigned __int8 *)(v76 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v78)
  {
    uint64_t v79 = (int)v78;
    memcpy(a2, v77, (int)v78);
    a2 += v79;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v77, v78, a2);
}

uint64_t sub_134BA14(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1325018(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 72);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 80);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1325B80(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 96);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 104);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_1323CC0(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 120);
  uint64_t v25 = v18 + v24;
  uint64_t v26 = *(void *)(a1 + 128);
  if (v26) {
    uint64_t v27 = (uint64_t *)(v26 + 8);
  }
  else {
    uint64_t v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_13278DC(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  uint64_t v31 = *(int *)(a1 + 144);
  uint64_t v32 = v25 + v31;
  uint64_t v33 = *(void *)(a1 + 152);
  if (v33) {
    unsigned int v34 = (uint64_t *)(v33 + 8);
  }
  else {
    unsigned int v34 = 0;
  }
  if (v31)
  {
    uint64_t v35 = 8 * v31;
    do
    {
      uint64_t v36 = *v34++;
      uint64_t v37 = sub_13AB404(v36);
      v32 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      v35 -= 8;
    }
    while (v35);
  }
  uint64_t v38 = *(int *)(a1 + 168);
  uint64_t v39 = v32 + v38;
  uint64_t v40 = *(void *)(a1 + 176);
  if (v40) {
    uint64_t v41 = (uint64_t *)(v40 + 8);
  }
  else {
    uint64_t v41 = 0;
  }
  if (v38)
  {
    uint64_t v42 = 8 * v38;
    do
    {
      uint64_t v43 = *v41++;
      uint64_t v44 = sub_13289A4(v43);
      v39 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6);
      v42 -= 8;
    }
    while (v42);
  }
  uint64_t v45 = *(unsigned int *)(a1 + 192);
  uint64_t v46 = v39 + v45;
  if ((int)v45 >= 1)
  {
    unsigned int v47 = (uint64_t *)(*(void *)(a1 + 200) + 8);
    do
    {
      uint64_t v48 = *v47++;
      uint64_t v49 = *(unsigned __int8 *)(v48 + 23);
      uint64_t v50 = *(void *)(v48 + 8);
      if ((v49 & 0x80u) == 0) {
        uint64_t v50 = v49;
      }
      v46 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6);
      --v45;
    }
    while (v45);
  }
  uint64_t v51 = *(int *)(a1 + 216);
  uint64_t v52 = v46 + v51;
  uint64_t v53 = *(void *)(a1 + 224);
  if (v53) {
    int v54 = (uint64_t *)(v53 + 8);
  }
  else {
    int v54 = 0;
  }
  if (v51)
  {
    uint64_t v55 = 8 * v51;
    do
    {
      uint64_t v56 = *v54++;
      uint64_t v57 = sub_132689C(v56);
      v52 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6);
      v55 -= 8;
    }
    while (v55);
  }
  uint64_t v58 = *(int *)(a1 + 240);
  uint64_t v59 = v52 + v58;
  uint64_t v60 = *(void *)(a1 + 248);
  if (v60) {
    uint64_t v61 = (uint64_t *)(v60 + 8);
  }
  else {
    uint64_t v61 = 0;
  }
  if (v58)
  {
    uint64_t v62 = 8 * v58;
    do
    {
      uint64_t v63 = *v61++;
      uint64_t v64 = sub_132BB2C(v63);
      v59 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6);
      v62 -= 8;
    }
    while (v62);
  }
  uint64_t v65 = *(int *)(a1 + 264);
  uint64_t v66 = v59 + 2 * v65;
  uint64_t v67 = *(void *)(a1 + 272);
  if (v67) {
    int v68 = (uint64_t *)(v67 + 8);
  }
  else {
    int v68 = 0;
  }
  if (v65)
  {
    uint64_t v69 = 8 * v65;
    do
    {
      uint64_t v70 = *v68++;
      uint64_t v71 = sub_1329970(v70);
      v66 += v71 + ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6);
      v69 -= 8;
    }
    while (v69);
  }
  uint64_t v72 = *(int *)(a1 + 288);
  uint64_t v73 = v66 + 2 * v72;
  uint64_t v74 = *(void *)(a1 + 296);
  if (v74) {
    uint64_t v75 = (uint64_t *)(v74 + 8);
  }
  else {
    uint64_t v75 = 0;
  }
  if (v72)
  {
    uint64_t v76 = 8 * v72;
    do
    {
      uint64_t v77 = *v75++;
      uint64_t v78 = sub_13D3304(v77);
      v73 += v78 + ((9 * (__clz(v78 | 1) ^ 0x1F) + 73) >> 6);
      v76 -= 8;
    }
    while (v76);
  }
  uint64_t v79 = *(int *)(a1 + 312);
  uint64_t v80 = v73 + 2 * v79;
  uint64_t v81 = *(void *)(a1 + 320);
  if (v81) {
    uint64_t v82 = (uint64_t *)(v81 + 8);
  }
  else {
    uint64_t v82 = 0;
  }
  if (v79)
  {
    uint64_t v83 = 8 * v79;
    do
    {
      uint64_t v84 = *v82++;
      uint64_t v85 = sub_132A670(v84);
      v80 += v85 + ((9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6);
      v83 -= 8;
    }
    while (v83);
  }
  uint64_t v86 = *(int *)(a1 + 336);
  uint64_t v87 = v80 + 2 * v86;
  uint64_t v88 = *(void *)(a1 + 344);
  if (v88) {
    uint64_t v89 = (uint64_t *)(v88 + 8);
  }
  else {
    uint64_t v89 = 0;
  }
  if (v86)
  {
    uint64_t v90 = 8 * v86;
    do
    {
      uint64_t v91 = *v89++;
      uint64_t v92 = sub_134867C(v91);
      v87 += v92 + ((9 * (__clz(v92 | 1) ^ 0x1F) + 73) >> 6);
      v90 -= 8;
    }
    while (v90);
  }
  uint64_t v93 = *(int *)(a1 + 360);
  uint64_t v94 = v87 + 2 * v93;
  uint64_t v95 = *(void *)(a1 + 368);
  if (v95) {
    BOOL v96 = (uint64_t *)(v95 + 8);
  }
  else {
    BOOL v96 = 0;
  }
  if (v93)
  {
    uint64_t v97 = 8 * v93;
    do
    {
      uint64_t v98 = *v96++;
      uint64_t v99 = sub_1331208(v98);
      v94 += v99 + ((9 * (__clz(v99 | 1) ^ 0x1F) + 73) >> 6);
      v97 -= 8;
    }
    while (v97);
  }
  uint64_t v100 = *(void *)(a1 + 8);
  if (v100)
  {
    unint64_t v102 = v100 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v102 + 31) < 0) {
      uint64_t v103 = *(void *)(v102 + 16);
    }
    else {
      uint64_t v103 = *(unsigned __int8 *)(v102 + 31);
    }
    v94 += v103;
  }
  *(_DWORD *)(a1 + 376) = v94;
  return v94;
}

void sub_134BEE0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1367F5C((uint64_t *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 72);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1367FE8((uint64_t *)(a1 + 64), v11, v10, v9, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v12 = *(_DWORD *)(a1 + 72) + v9;
    *(_DWORD *)(a1 + 72) = v12;
    uint64_t v13 = *(int **)(a1 + 80);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 96);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_1368074((uint64_t *)(a1 + 88), v16, v15, v14, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v17 = *(_DWORD *)(a1 + 96) + v14;
    *(_DWORD *)(a1 + 96) = v17;
    uint64_t v18 = *(int **)(a1 + 104);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 120);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 128) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 112, *(_DWORD *)(a2 + 120));
    sub_1368100((uint64_t *)(a1 + 112), v21, v20, v19, **(_DWORD **)(a1 + 128) - *(_DWORD *)(a1 + 120));
    int v22 = *(_DWORD *)(a1 + 120) + v19;
    *(_DWORD *)(a1 + 120) = v22;
    uint64_t v23 = *(int **)(a1 + 128);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 144);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 152) + 8);
    uint64_t v26 = (uint64_t *)sub_188CCE4(a1 + 136, *(_DWORD *)(a2 + 144));
    sub_136818C((uint64_t *)(a1 + 136), v26, v25, v24, **(_DWORD **)(a1 + 152) - *(_DWORD *)(a1 + 144));
    int v27 = *(_DWORD *)(a1 + 144) + v24;
    *(_DWORD *)(a1 + 144) = v27;
    uint64_t v28 = *(int **)(a1 + 152);
    if (*v28 < v27) {
      *uint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 168);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 176) + 8);
    uint64_t v31 = (uint64_t *)sub_188CCE4(a1 + 160, *(_DWORD *)(a2 + 168));
    sub_1368218((uint64_t *)(a1 + 160), v31, v30, v29, **(_DWORD **)(a1 + 176) - *(_DWORD *)(a1 + 168));
    int v32 = *(_DWORD *)(a1 + 168) + v29;
    *(_DWORD *)(a1 + 168) = v32;
    uint64_t v33 = *(int **)(a1 + 176);
    if (*v33 < v32) {
      *uint64_t v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 192);
  if (v34)
  {
    uint64_t v35 = (const std::string **)(*(void *)(a2 + 200) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4(a1 + 184, *(_DWORD *)(a2 + 192));
    sub_188FB98(a1 + 184, v36, v35, v34, **(_DWORD **)(a1 + 200) - *(_DWORD *)(a1 + 192));
    int v37 = *(_DWORD *)(a1 + 192) + v34;
    *(_DWORD *)(a1 + 192) = v37;
    uint64_t v38 = *(int **)(a1 + 200);
    if (*v38 < v37) {
      *uint64_t v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 216);
  if (v39)
  {
    uint64_t v40 = (uint64_t *)(*(void *)(a2 + 224) + 8);
    uint64_t v41 = (uint64_t *)sub_188CCE4(a1 + 208, *(_DWORD *)(a2 + 216));
    sub_13682A4((uint64_t *)(a1 + 208), v41, v40, v39, **(_DWORD **)(a1 + 224) - *(_DWORD *)(a1 + 216));
    int v42 = *(_DWORD *)(a1 + 216) + v39;
    *(_DWORD *)(a1 + 216) = v42;
    uint64_t v43 = *(int **)(a1 + 224);
    if (*v43 < v42) {
      *uint64_t v43 = v42;
    }
  }
  int v44 = *(_DWORD *)(a2 + 240);
  if (v44)
  {
    uint64_t v45 = (uint64_t *)(*(void *)(a2 + 248) + 8);
    uint64_t v46 = (uint64_t *)sub_188CCE4(a1 + 232, *(_DWORD *)(a2 + 240));
    sub_1368330((uint64_t *)(a1 + 232), v46, v45, v44, **(_DWORD **)(a1 + 248) - *(_DWORD *)(a1 + 240));
    int v47 = *(_DWORD *)(a1 + 240) + v44;
    *(_DWORD *)(a1 + 240) = v47;
    uint64_t v48 = *(int **)(a1 + 248);
    if (*v48 < v47) {
      int *v48 = v47;
    }
  }
  int v49 = *(_DWORD *)(a2 + 264);
  if (v49)
  {
    uint64_t v50 = (uint64_t *)(*(void *)(a2 + 272) + 8);
    uint64_t v51 = (uint64_t *)sub_188CCE4(a1 + 256, *(_DWORD *)(a2 + 264));
    sub_13683BC((uint64_t *)(a1 + 256), v51, v50, v49, **(_DWORD **)(a1 + 272) - *(_DWORD *)(a1 + 264));
    int v52 = *(_DWORD *)(a1 + 264) + v49;
    *(_DWORD *)(a1 + 264) = v52;
    uint64_t v53 = *(int **)(a1 + 272);
    if (*v53 < v52) {
      int *v53 = v52;
    }
  }
  int v54 = *(_DWORD *)(a2 + 288);
  if (v54)
  {
    uint64_t v55 = (uint64_t *)(*(void *)(a2 + 296) + 8);
    uint64_t v56 = (uint64_t *)sub_188CCE4(a1 + 280, *(_DWORD *)(a2 + 288));
    sub_1368448((uint64_t *)(a1 + 280), v56, v55, v54, **(_DWORD **)(a1 + 296) - *(_DWORD *)(a1 + 288));
    int v57 = *(_DWORD *)(a1 + 288) + v54;
    *(_DWORD *)(a1 + 288) = v57;
    uint64_t v58 = *(int **)(a1 + 296);
    if (*v58 < v57) {
      int *v58 = v57;
    }
  }
  int v59 = *(_DWORD *)(a2 + 312);
  if (v59)
  {
    uint64_t v60 = (uint64_t *)(*(void *)(a2 + 320) + 8);
    uint64_t v61 = (uint64_t *)sub_188CCE4(a1 + 304, *(_DWORD *)(a2 + 312));
    sub_13684D4((uint64_t *)(a1 + 304), v61, v60, v59, **(_DWORD **)(a1 + 320) - *(_DWORD *)(a1 + 312));
    int v62 = *(_DWORD *)(a1 + 312) + v59;
    *(_DWORD *)(a1 + 312) = v62;
    uint64_t v63 = *(int **)(a1 + 320);
    if (*v63 < v62) {
      int *v63 = v62;
    }
  }
  int v64 = *(_DWORD *)(a2 + 336);
  if (v64)
  {
    uint64_t v65 = (uint64_t *)(*(void *)(a2 + 344) + 8);
    uint64_t v66 = (uint64_t *)sub_188CCE4(a1 + 328, *(_DWORD *)(a2 + 336));
    sub_1367748((uint64_t *)(a1 + 328), v66, v65, v64, **(_DWORD **)(a1 + 344) - *(_DWORD *)(a1 + 336));
    int v67 = *(_DWORD *)(a1 + 336) + v64;
    *(_DWORD *)(a1 + 336) = v67;
    int v68 = *(int **)(a1 + 344);
    if (*v68 < v67) {
      *int v68 = v67;
    }
  }
  int v69 = *(_DWORD *)(a2 + 360);
  if (v69)
  {
    uint64_t v70 = (uint64_t *)(*(void *)(a2 + 368) + 8);
    uint64_t v71 = (uint64_t *)sub_188CCE4(a1 + 352, *(_DWORD *)(a2 + 360));
    sub_1367A80((uint64_t *)(a1 + 352), v71, v70, v69, **(_DWORD **)(a1 + 368) - *(_DWORD *)(a1 + 360));
    int v72 = *(_DWORD *)(a1 + 360) + v69;
    *(_DWORD *)(a1 + 360) = v72;
    uint64_t v73 = *(int **)(a1 + 368);
    if (*v73 < v72) {
      *uint64_t v73 = v72;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v74 = *(void *)(a2 + 8);
  if (v74)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v74 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_134C4D0(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_132538C(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 72);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_1325DF0(*(void *)(*(void *)(a1 + 80) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v8 = *(unsigned int *)(a1 + 96);
  while ((int)v8 >= 1)
  {
    uint64_t v9 = v8 - 1;
    char v10 = sub_132447C(*(void *)(*(void *)(a1 + 104) + 8 * v8));
    uint64_t v8 = v9;
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 120);
  while ((int)v11 >= 1)
  {
    uint64_t v12 = v11 - 1;
    char v13 = sub_1327D78(*(void *)(*(void *)(a1 + 128) + 8 * v11));
    uint64_t v11 = v12;
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 144);
  while ((int)v16 >= 1)
  {
    uint64_t v17 = v16 - 1;
    char v18 = sub_13AD634(*(void *)(*(void *)(a1 + 152) + 8 * v16));
    BOOL v14 = 0;
    uint64_t v16 = v17;
    if ((v18 & 1) == 0) {
      return v14;
    }
  }
  uint64_t v19 = *(unsigned int *)(a1 + 168);
  while ((int)v19 >= 1)
  {
    uint64_t v20 = v19 - 1;
    char v21 = sub_1328E10(*(void *)(*(void *)(a1 + 176) + 8 * v19));
    BOOL v14 = 0;
    uint64_t v19 = v20;
    if ((v21 & 1) == 0) {
      return v14;
    }
  }
  uint64_t v22 = *(unsigned int *)(a1 + 216);
  while ((int)v22 >= 1)
  {
    uint64_t v23 = v22 - 1;
    char v24 = sub_1326C4C(*(void *)(*(void *)(a1 + 224) + 8 * v22));
    BOOL v14 = 0;
    uint64_t v22 = v23;
    if ((v24 & 1) == 0) {
      return v14;
    }
  }
  uint64_t v25 = *(unsigned int *)(a1 + 240);
  while ((int)v25 >= 1)
  {
    uint64_t v26 = v25 - 1;
    char v27 = sub_132C244(*(void *)(*(void *)(a1 + 248) + 8 * v25));
    BOOL v14 = 0;
    uint64_t v25 = v26;
    if ((v27 & 1) == 0) {
      return v14;
    }
  }
  uint64_t v28 = *(unsigned int *)(a1 + 264);
  while ((int)v28 >= 1)
  {
    uint64_t v29 = v28 - 1;
    char v30 = sub_1329D5C(*(void *)(*(void *)(a1 + 272) + 8 * v28));
    BOOL v14 = 0;
    uint64_t v28 = v29;
    if ((v30 & 1) == 0) {
      return v14;
    }
  }
  uint64_t v31 = *(unsigned int *)(a1 + 288);
  while ((int)v31 >= 1)
  {
    uint64_t v32 = v31 - 1;
    char v33 = sub_136AE2C(*(void *)(*(void *)(a1 + 296) + 8 * v31));
    BOOL v14 = 0;
    uint64_t v31 = v32;
    if ((v33 & 1) == 0) {
      return v14;
    }
  }
  uint64_t v34 = *(unsigned int *)(a1 + 312);
  while ((int)v34 >= 1)
  {
    uint64_t v35 = v34 - 1;
    char v36 = sub_18856CC(*(void *)(*(void *)(a1 + 320) + 8 * v34) + 16);
    BOOL v14 = 0;
    uint64_t v34 = v35;
    if ((v36 & 1) == 0) {
      return v14;
    }
  }
  uint64_t v37 = *(unsigned int *)(a1 + 336);
  while ((int)v37 >= 1)
  {
    uint64_t v38 = v37 - 1;
    char v39 = sub_13494C8(*(void *)(*(void *)(a1 + 344) + 8 * v37));
    BOOL v14 = 0;
    uint64_t v37 = v38;
    if ((v39 & 1) == 0) {
      return v14;
    }
  }
  uint64_t v40 = *(unsigned int *)(a1 + 360);
  do
  {
    BOOL v14 = (int)v40 < 1;
    if ((int)v40 < 1) {
      break;
    }
    uint64_t v41 = v40 - 1;
    char v42 = sub_18856CC(*(void *)(*(void *)(a1 + 368) + 8 * v40) + 16);
    uint64_t v40 = v41;
  }
  while ((v42 & 1) != 0);
  return v14;
}

void *sub_134C73C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.DecoderData");
}

uint64_t sub_134C74C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24AB480;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void sub_134C7C8(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_134C7FC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_134C870(void *a1)
{
  sub_134C7FC(a1);

  operator delete();
}

uint64_t sub_134C8A8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_134C8C0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    char v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      char v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(void *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(void *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_134CA40(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

unint64_t sub_134CB68(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v1 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_134CBD0()
{
  return 1;
}

void *sub_134CBD8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.RouteUpdateConfiguration");
}

uint64_t sub_134CBE8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2533E78)
  {
    if (*(void *)(a1 + 24))
    {
      sub_1374318();
      operator delete();
    }
    if (*(void *)(a1 + 32))
    {
      sub_1374318();
      operator delete();
    }
    if (*(void *)(a1 + 40))
    {
      sub_13D2884();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_134CCD8(uint64_t a1)
{
  sub_134CBE8(a1);

  operator delete();
}

uint64_t sub_134CD10(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t result = sub_1369E6C(*(void *)(result + 24));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = sub_1369E6C(*(void *)(v1 + 32));
    if ((v2 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = sub_1369F48(*(void *)(v1 + 40));
  }
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_134CD98(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 != 26) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v16 = *(void *)(a1 + 40);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v16 = sub_13DAB08((uint64_t)v17);
      *(void *)(a1 + 40) = v16;
      unint64_t v7 = v23;
    }
    int v15 = (char *)sub_1323390(a3, v16, (unsigned __int8 *)v7);
LABEL_38:
    uint64_t v23 = v15;
    if (!v15) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v11 == 2)
  {
    if (v8 == 18)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v18 = *(void *)(a1 + 32);
      if (!v18)
      {
        uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v19 = (void *)*v19;
        }
        sub_13D6A1C((uint64_t)v19);
        uint64_t v18 = v20;
        *(void *)(a1 + 32) = v20;
LABEL_36:
        unint64_t v7 = v23;
      }
LABEL_37:
      int v15 = (char *)sub_13319DC(a3, v18, (unsigned __int8 *)v7);
      goto LABEL_38;
    }
  }
  else if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 24);
    if (!v18)
    {
      char v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        char v21 = (void *)*v21;
      }
      sub_13D6A1C((uint64_t)v21);
      uint64_t v18 = v22;
      *(void *)(a1 + 24) = v22;
      goto LABEL_36;
    }
    goto LABEL_37;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v23;
    }
    int v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_38;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_134CFA4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1374B08(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_1374B08(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      int v15 = v4 + 2;
    }
    char v4 = sub_13D2F58(v13, v15, a3);
  }
LABEL_23:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_134D194(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if (v2)
  {
    uint64_t v4 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1374EEC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_13D3304(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_134D29C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) == 0) {
    goto LABEL_30;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      sub_13D6A1C((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_2534750;
    }
    sub_136A7DC(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(void *)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      unsigned int v11 = (void *)*v11;
    }
    sub_13D6A1C((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    uint64_t v12 = &off_2534750;
  }
  sub_136A7DC(v9, (uint64_t)v12);
  if ((v4 & 4) != 0)
  {
LABEL_22:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v13 = *(void *)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      int v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        int v15 = (void *)*v15;
      }
      uint64_t v13 = sub_13DAB08((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_2536850;
    }
    sub_136AA7C(v13, (uint64_t)v16);
  }
LABEL_30:
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_134D3F0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_136AE2C(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_134D450@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.Banner");
}

uint64_t sub_134D460(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2533EA8)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_134CBE8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1367498((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_134D524(uint64_t a1)
{
  sub_134D460(a1);

  operator delete();
}

uint64_t sub_134D55C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*(void *)(result + 40) + 8);
    do
    {
      int v4 = *v3++;
      uint64_t result = (uint64_t)sub_132F208(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_134CD10(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_134D5EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  char v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v24 + 2;
      }
    }
    char v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 48);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      sub_134ED24((uint64_t)v22);
      uint64_t v21 = v23;
      *(void *)(a1 + 48) = v23;
      uint64_t v7 = v24;
    }
    uint64_t v14 = sub_134D7F4(a3, v21, (unsigned __int8 *)v7);
LABEL_35:
    char v24 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 == 18)
  {
    int v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      char v24 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_13326EC(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = (unsigned __int8 *)v24;
      }
      int v15 = sub_134D884(a3, v19, v16);
      char v24 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v24;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

char *sub_134D7F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_134CD98(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_134D884(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_132F274(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_134D914(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = sub_134CFA4(v6, (unint64_t)v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      int v4 = sub_132F5C0(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_134DAC0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_132F850(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_134D194(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_134DBA4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1368560((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      sub_134ED24((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_2533E78;
    }
    sub_134D29C(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_134DCC8(uint64_t a1)
{
  uint64_t result = sub_11A0A80(a1 + 24);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_134D3F0(*(void *)(a1 + 48));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_134DD0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.RegionAlert");
}

uint64_t sub_134DD1C(uint64_t a1)
{
  if (!a1)
  {
    sub_13685EC();
  }

  return sub_133292C(v3, a1, 0);
}

void *sub_134DD78(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24AA480;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_134DDF0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AA500;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(void *)(result + 96) = 0;
  return result;
}

uint64_t sub_134DE94(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AA580;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_134DF10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AA600;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_134DFB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AA680;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_134E058(uint64_t a1)
{
  if (!a1)
  {
    sub_1368658();
  }

  return sub_13361A0(v3, a1, 0);
}

uint64_t sub_134E0B4(uint64_t a1)
{
  if (!a1)
  {
    sub_13686C4();
  }

  return sub_1336980(v3, a1, 0);
}

void *sub_134E110(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24AA800;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_134E188(uint64_t a1)
{
  if (!a1)
  {
    sub_1368730();
  }

  return sub_1337E64(v3, a1, 0);
}

uint64_t sub_134E1E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AA900;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_134E280(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AA980;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_134E320(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24AAA00;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  return result;
}

void *sub_134E3C4(uint64_t a1)
{
  if (!a1)
  {
    sub_136879C();
  }

  return sub_133B7C4(v3, a1, 0);
}

void *sub_134E420(uint64_t a1)
{
  if (!a1)
  {
    sub_1368808();
  }

  return sub_133C1AC(v3, a1, 0);
}

uint64_t sub_134E47C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AAB80;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_134E4F8(uint64_t a1)
{
  if (!a1)
  {
    sub_1368874();
  }

  return sub_133CCD0(v3, a1, 0);
}

uint64_t sub_134E554(uint64_t a1)
{
  if (!a1)
  {
    sub_13688E0();
  }

  return sub_133D298(v3, a1, 0);
}

void *sub_134E5B0(uint64_t a1)
{
  if (!a1)
  {
    sub_136894C();
  }

  return sub_133E5E0(v3, a1, 0);
}

uint64_t sub_134E60C(uint64_t a1)
{
  if (!a1)
  {
    sub_13689B8();
  }

  return sub_133ED94(v3, a1, 0);
}

void *sub_134E668(uint64_t a1)
{
  if (!a1)
  {
    sub_1368A24();
  }

  return sub_133FD48(v3, a1, 0);
}

void *sub_134E6C4(uint64_t a1)
{
  if (!a1)
  {
    sub_1368A90();
  }

  return sub_13403AC(v3, a1, 0);
}

uint64_t sub_134E720(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AAF00;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_134E79C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AAF80;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_134E83C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24AB000;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_134E8C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24AB080;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_134E93C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24AB100;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_134E9B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AB180;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

double sub_134EA54(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AB200;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 61) = 0u;
  return result;
}

uint64_t sub_134EAD8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24AB280;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  return result;
}

void *sub_134EB78(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24AB300;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_134EBF4(uint64_t a1)
{
  if (!a1)
  {
    sub_1368AFC();
  }

  return sub_1345A94(v3, a1, 0);
}

uint64_t sub_134EC50(uint64_t a1)
{
  if (!a1)
  {
    sub_1368B68();
  }

  return sub_134965C(v3, a1, 0);
}

void *sub_134ECAC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24AB480;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_134ED24(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24AB500;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

void *sub_134EDA0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24AB580;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_134EE3C(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24AB600;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = &qword_2550250;
  return a1;
}

void sub_134EEAC(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_134EEDC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_134EF9C(uint64_t a1)
{
  sub_134EEDC(a1);

  operator delete();
}

unsigned char *sub_134EFD4(uint64_t a1)
{
  double result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_134F090(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        int v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          int v15 = (uint64_t *)*v15;
        }
        unint64_t v16 = (void *)(a1 + 56);
        goto LABEL_26;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      int v15 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        int v15 = (uint64_t *)*v15;
      }
      unint64_t v16 = (void *)(a1 + 48);
LABEL_26:
      uint64_t v18 = (std::string *)sub_1880F84(v16, v15);
      uint64_t v13 = (void *)sub_188C244(v18, *(char **)v20, (uint64_t)a3);
      goto LABEL_27;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (v8 - 8000 > 0xF9F)
    {
      if (*v6)
      {
        uint64_t v19 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v7 = *(char **)v20;
      }
      uint64_t v13 = sub_1885AC0(v8, v19, v7, a3);
    }
    else
    {
      uint64_t v13 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2533EE0, (uint64_t *)(a1 + 8), a3);
    }
LABEL_27:
    *(void *)uint64_t v20 = v13;
    if (!v13) {
      goto LABEL_36;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_36:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_134F280(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_134F390(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0)
    {
      unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
      uint64_t v9 = *(void *)(v7 + 8);
      if ((v8 & 0x80u) == 0) {
        uint64_t v9 = v8;
      }
      result += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_134F47C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 48);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v9 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v10 = *(void *)(a1 + 8);
      unint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        unint64_t v11 = (uint64_t *)*v11;
      }
      sub_1881DF4((std::string **)(a1 + 56), v9, v11);
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_134F55C(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_134F564@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.RouteIdentifier");
}

uint64_t sub_134F574(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2533F20)
  {
    if (*(void *)(a1 + 32))
    {
      sub_1374318();
      operator delete();
    }
    if (*(void *)(a1 + 40))
    {
      sub_1374318();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_134F660(uint64_t a1)
{
  sub_134F574(a1);

  operator delete();
}

uint64_t sub_134F698(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  uint64_t result = sub_1369E6C(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_1369E6C(*(void *)(v1 + 40));
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_134F744(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)char v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v24 + 2);
      }
    }
    *(void *)char v24 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 != 26) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 8);
    uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      uint64_t v17 = (uint64_t *)*v17;
    }
    uint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 24), v17);
    uint64_t v15 = (uint64_t)sub_188C244(v18, *(char **)v24, (uint64_t)a3);
LABEL_36:
    *(void *)char v24 = v15;
    if (!v15) {
      goto LABEL_42;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v11 == 2)
  {
    if (v8 == 18)
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v19 = *(void *)(a1 + 40);
      if (!v19)
      {
        uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v20 = (void *)*v20;
        }
        sub_13D6A1C((uint64_t)v20);
        uint64_t v19 = v21;
        *(void *)(a1 + 40) = v21;
LABEL_34:
        uint64_t v7 = *(unsigned __int8 **)v24;
      }
LABEL_35:
      uint64_t v15 = sub_13319DC(a3, v19, v7);
      goto LABEL_36;
    }
  }
  else if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v19 = *(void *)(a1 + 32);
    if (!v19)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      sub_13D6A1C((uint64_t)v22);
      uint64_t v19 = v23;
      *(void *)(a1 + 32) = v23;
      goto LABEL_34;
    }
    goto LABEL_35;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v24;
    }
    uint64_t v15 = (uint64_t)sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_36;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_42:
  *(void *)char v24 = 0;
  return *(void *)v24;
}

char *sub_134F950(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v9 = *(void *)(a1 + 32);
    char *v4 = 10;
    unsigned int v10 = *(_DWORD *)(v9 + 20);
    v4[1] = v10;
    if (v10 > 0x7F) {
      unsigned int v11 = sub_188A9CC(v10, v4 + 1);
    }
    else {
      unsigned int v11 = v4 + 2;
    }
    char v4 = sub_1374B08(v9, v11, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 1) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 40);
  char *v4 = 18;
  unsigned int v13 = *(_DWORD *)(v12 + 20);
  v4[1] = v13;
  if (v13 > 0x7F) {
    uint64_t v14 = sub_188A9CC(v13, v4 + 1);
  }
  else {
    uint64_t v14 = v4 + 2;
  }
  char v4 = sub_1374B08(v12, v14, a3);
  if (v6) {
LABEL_4:
  }
    char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_134FAFC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_12;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_1374EEC(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_1374EEC(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_134FC18(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        unint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unint64_t v11 = (void *)*v11;
        }
        sub_13D6A1C((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        uint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        uint64_t v12 = &off_2534750;
      }
      sub_136A7DC(v9, (uint64_t)v12);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v13 = *(void *)(a1 + 40);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v15 = (void *)*v15;
        }
        sub_13D6A1C((uint64_t)v15);
        *(void *)(a1 + 40) = v13;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v16 = &off_2534750;
      }
      sub_136A7DC(v13, (uint64_t)v16);
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_134FD48(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_134FD94@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.RouteUpdateAlert");
}

uint64_t sub_134FDA4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24AB700;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  return a1;
}

void sub_134FE1C(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_134FE4C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_134FED8((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_134FED8(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t result = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2533F50)
  {
    if (*(void *)(a1 + 56))
    {
      sub_137CEBC();
      operator delete();
    }
    uint64_t v4 = *(void **)(a1 + 64);
    if (v4)
    {
      sub_1341380(v4);
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 72);
    if (v5)
    {
      sub_1342310(v5);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 80);
    if (result)
    {
      sub_1344664((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_134FFBC(void *a1)
{
  sub_134FE4C(a1);

  operator delete();
}

uint64_t sub_134FFF4(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_16;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_17:
    uint64_t result = sub_1341438(*(void *)(a1 + 64));
    if ((v3 & 8) == 0)
    {
LABEL_6:
      if ((v3 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    goto LABEL_18;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  uint64_t result = sub_137CEF8(*(void *)(a1 + 56));
  if ((v3 & 4) != 0) {
    goto LABEL_17;
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_18:
  uint64_t result = sub_1342400(*(void *)(a1 + 72));
  if ((v3 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_13447F8(*(void *)(a1 + 80));
LABEL_8:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_13500C8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v25 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v25, a3[11].i32[1])) {
    return *(void *)v25;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v25 + 1);
    unsigned int v8 = **(unsigned char **)v25;
    if ((char)**(unsigned char **)v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v25 + 2);
      }
    }
    *(void *)uint64_t v25 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (std::string *)sub_1880F84((void *)(a1 + 48), v12);
        uint64_t v14 = (void *)sub_188C244(v13, *(char **)v25, (uint64_t)a3);
        goto LABEL_46;
      case 2u:
        if (v8 != 18) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v15 = *(void *)(a1 + 56);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_13D7014((uint64_t)v16);
          *(void *)(a1 + 56) = v15;
          uint64_t v7 = *(unsigned __int8 **)v25;
        }
        uint64_t v14 = sub_1347280(a3, v15, v7);
        goto LABEL_46;
      case 3u:
        if (v8 != 26) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v17 = *(void *)(a1 + 64);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_134E79C((uint64_t)v18);
          *(void *)(a1 + 64) = v17;
          uint64_t v7 = *(unsigned __int8 **)v25;
        }
        uint64_t v14 = sub_1347430(a3, v17, v7);
        goto LABEL_46;
      case 4u:
        if (v8 != 34) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v19 = *(void **)(a1 + 72);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_134E8C4((uint64_t)v20);
          *(void *)(a1 + 72) = v19;
          uint64_t v7 = *(unsigned __int8 **)v25;
        }
        uint64_t v14 = sub_13474C0(a3, (uint64_t)v19, v7);
        goto LABEL_46;
      case 5u:
        if (v8 != 42) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v21 = *(void *)(a1 + 80);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_134EAD8((uint64_t)v22);
          *(void *)(a1 + 80) = v21;
          uint64_t v7 = *(unsigned __int8 **)v25;
        }
        uint64_t v14 = sub_1347550(a3, v21, v7);
        goto LABEL_46;
      default:
LABEL_37:
        if (v8) {
          BOOL v23 = (v8 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (v8 - 8000 > 0xF9F)
          {
            if (*v6)
            {
              char v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              char v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v7 = *(unsigned __int8 **)v25;
            }
            uint64_t v14 = sub_1885AC0(v8, v24, (char *)v7, a3);
          }
          else
          {
            uint64_t v14 = sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_2533F50, (uint64_t *)(a1 + 8), a3);
          }
LABEL_46:
          *(void *)uint64_t v25 = v14;
          if (!v14) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v25, a3[11].i32[1])) {
            return *(void *)v25;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v25;
    }
  }
}

char *sub_13503EC(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 56);
  char *v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 44);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_137D760(v7, v9, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 64);
  char *v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 40);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_13416E4(v10, v12, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }
LABEL_20:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 72);
  char *v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_1342644(v13, (unint64_t)v15, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_26:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 80);
    char *v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_1344C6C(v16, v18, a3);
  }
LABEL_32:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_135068C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v4)
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    uint64_t v3 = v2 + v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_14:
      uint64_t v12 = sub_1341828(*(void *)(a1 + 64));
      v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v4 & 8) == 0)
      {
LABEL_6:
        if ((v4 & 0x10) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v11 = sub_137DBFC(*(void *)(a1 + 56));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_5:
  if ((v4 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_15:
  uint64_t v13 = sub_1342754(*(void *)(a1 + 72));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x10) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1344F54(*(void *)(a1 + 80));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v14 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_1350818(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x1F) == 0) {
    goto LABEL_43;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 8);
    unint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      unint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_19;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v9 = *(void *)(a1 + 56);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = sub_13D7014((uint64_t)v11);
    *(void *)(a1 + 56) = v9;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v12 = &off_2534B58;
  }
  sub_137DE44(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_19:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v13 = *(std::string **)(a1 + 64);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = (std::string *)sub_134E79C((uint64_t)v15);
    *(void *)(a1 + 64) = v13;
  }
  if (*(void *)(a2 + 64)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    uint64_t v16 = &off_25339D8;
  }
  sub_13418D8(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_35;
  }
LABEL_27:
  *(_DWORD *)(a1 + 40) |= 8u;
  unsigned int v17 = *(std::string **)(a1 + 72);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    unsigned int v17 = (std::string *)sub_134E8C4((uint64_t)v19);
    *(void *)(a1 + 72) = v17;
  }
  if (*(void *)(a2 + 72)) {
    uint64_t v20 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    uint64_t v20 = &off_2533A40;
  }
  sub_13427DC(v17, (uint64_t)v20);
  if ((v4 & 0x10) != 0)
  {
LABEL_35:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v21 = *(void *)(a1 + 80);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      uint64_t v21 = sub_134EAD8((uint64_t)v23);
      *(void *)(a1 + 80) = v21;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v24 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v24 = &off_2533B08;
    }
    sub_13450E0(v21, (uint64_t)v24);
  }
LABEL_43:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1350A08(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_137E140(*(void *)(a1 + 56));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x10) == 0) {
      return 1;
    }
    uint64_t result = sub_13452E8(*(void *)(a1 + 80));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1350A60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.StepUpdate");
}

uint64_t sub_1350A70(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AB780;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_DWORD *)(a1 + 112) = 0;
  return a1;
}

void sub_1350AEC(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1350B1C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2533FA8)
  {
    uint64_t v5 = *(void *)(a1 + 96);
    if (v5)
    {
      sub_134EEDC(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 104);
    if (v6)
    {
      sub_133388C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1368C54((void *)(a1 + 72));
  sub_1368BD4((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1350C0C(uint64_t a1)
{
  sub_1350B1C(a1);

  operator delete();
}

uint64_t sub_1350C44(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_134FFF4(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_134F698(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      uint64_t result = (uint64_t)sub_134EFD4(*(void *)(a1 + 96));
    }
    if ((v9 & 2) != 0) {
      uint64_t result = sub_1333A80(*(void *)(a1 + 104));
    }
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 104) = 0;
  *(_DWORD *)(v10 + 32) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

char *sub_1350D1C(uint64_t a1, char *a2, int32x2_t *a3)
{
  char v36 = a2;
  if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
    return v36;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v36 + 1;
    unsigned int v8 = *v36;
    if (*v36 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v36, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v36 + 2;
      }
    }
    char v36 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        char v11 = *(void **)(a1 + 96);
        if (!v11)
        {
          uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v12 = (void *)*v12;
          }
          char v11 = sub_13551A0((uint64_t)v12);
          *(void *)(a1 + 96) = v11;
          uint64_t v7 = v36;
        }
        uint64_t v13 = (char *)sub_1351124(a3, (uint64_t)v11, (unsigned __int8 *)v7);
        goto LABEL_57;
      case 2u:
        if (v8 != 16) {
          goto LABEL_48;
        }
        uint64_t v14 = v7 + 1;
        unint64_t v15 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v16 = *v14;
        int v17 = v15 + (v16 << 7);
        unint64_t v15 = (v17 - 128);
        if (v16 < 0)
        {
          char v36 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
          if (!v36) {
            return 0;
          }
          unint64_t v15 = v34;
        }
        else
        {
          uint64_t v14 = v7 + 2;
LABEL_19:
          char v36 = v14;
        }
        if (v15 > 4)
        {
          if (*v6) {
            uint64_t v35 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v15, v35);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 4u;
          *(_DWORD *)(a1 + 112) = v15;
        }
        goto LABEL_58;
      case 3u:
        if (v8 != 26) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v18 = *(void *)(a1 + 104);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_134DDF0((uint64_t)v19);
          *(void *)(a1 + 104) = v18;
          uint64_t v7 = v36;
        }
        uint64_t v13 = sub_1338E0C(a3, v18, (unsigned __int8 *)v7);
        goto LABEL_57;
      case 5u:
        if (v8 != 42) {
          goto LABEL_48;
        }
        uint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          char v36 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 64);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 56), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 56) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_1355284(*(void *)(a1 + 48));
            uint64_t v24 = sub_188CDC8(a1 + 48, v25);
            uint64_t v21 = (unsigned __int8 *)v36;
          }
          uint64_t v20 = (char *)sub_13511B4(a3, v24, v21);
          char v36 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 42) {
            goto LABEL_58;
          }
        }
      case 6u:
        if (v8 != 50) {
          goto LABEL_48;
        }
        uint64_t v26 = v7 - 1;
        while (1)
        {
          char v27 = (unsigned __int8 *)(v26 + 1);
          char v36 = v26 + 1;
          uint64_t v28 = *(_DWORD **)(a1 + 88);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 80), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 80) = v29 + 1;
            uint64_t v30 = *(void *)&v28[2 * v29 + 2];
          }
          else
          {
            uint64_t v31 = sub_13551FC(*(void *)(a1 + 72));
            uint64_t v30 = sub_188CDC8(a1 + 72, (uint64_t)v31);
            char v27 = (unsigned __int8 *)v36;
          }
          uint64_t v26 = (char *)sub_1351244(a3, v30, v27);
          char v36 = v26;
          if (!v26) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 50) {
            goto LABEL_58;
          }
        }
      default:
LABEL_48:
        if (v8) {
          BOOL v32 = (v8 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (v8 - 8000 > 0xF9F)
          {
            if (*v6)
            {
              char v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              char v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v7 = v36;
            }
            uint64_t v13 = (char *)sub_1885AC0(v8, v33, v7, a3);
          }
          else
          {
            uint64_t v13 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2533FA8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_57:
          char v36 = v13;
          if (!v13) {
            return 0;
          }
LABEL_58:
          if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
            return v36;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v36;
    }
  }
}

uint64_t sub_1351124(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_134F090(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_13511B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13500C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1351244(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_134F744(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13512D4(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 96);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_134F280(v7, v9, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 112);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 104);
    char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      unint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      unint64_t v15 = v4 + 2;
    }
    int v4 = sub_1333FF0(v13, (unint64_t)v15, a3);
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 42;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      int v4 = sub_13503EC(v18, v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 80);
  if (v21)
  {
    for (int j = 0; j != v21; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 50;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      v4[1] = v24;
      if (v24 > 0x7F) {
        uint64_t v25 = sub_188A9CC(v24, v4 + 1);
      }
      else {
        uint64_t v25 = v4 + 2;
      }
      int v4 = sub_134F950(v23, (unint64_t)v25, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 1500, v4, a3);
  }
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return v4;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    uint64_t v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    uint64_t v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(v4, v29, (int)v30);
    v4 += v31;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v29, v30, v4);
}

uint64_t sub_1351608(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_135068C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_134FAFC(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if ((v17 & 7) != 0)
  {
    if (v17)
    {
      uint64_t v23 = sub_134F390(*(void *)(a1 + 96));
      v11 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v17 & 2) == 0)
      {
LABEL_16:
        if ((v17 & 4) == 0) {
          goto LABEL_21;
        }
LABEL_17:
        int v18 = *(_DWORD *)(a1 + 112);
        uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
        if (v18 >= 0) {
          uint64_t v20 = v19;
        }
        else {
          uint64_t v20 = 11;
        }
        v11 += v20;
        goto LABEL_21;
      }
    }
    else if ((v17 & 2) == 0)
    {
      goto LABEL_16;
    }
    uint64_t v24 = sub_133440C(*(void *)(a1 + 104));
    v11 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 4) == 0) {
      goto LABEL_21;
    }
    goto LABEL_17;
  }
LABEL_21:
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v25 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v11 += v26;
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void sub_13517B8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1368E54((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1368EE0((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 40);
  if ((v14 & 7) != 0)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v16 = *(void **)(a1 + 96);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        int v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          int v18 = (void *)*v18;
        }
        uint64_t v16 = sub_13551A0((uint64_t)v18);
        *(void *)(a1 + 96) = v16;
      }
      if (*(void *)(a2 + 96)) {
        uint64_t v19 = *(uint64_t (****)())(a2 + 96);
      }
      else {
        uint64_t v19 = &off_2533EE0;
      }
      sub_134F47C((uint64_t)v16, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0)
        {
LABEL_12:
          *(_DWORD *)(a1 + 40) |= v14;
          goto LABEL_13;
        }
LABEL_11:
        *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
        goto LABEL_12;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v20 = *(void *)(a1 + 104);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v20 = sub_134DDF0((uint64_t)v22);
      *(void *)(a1 + 104) = v20;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v23 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v23 = &off_25334D0;
    }
    sub_1334634(v20, (uint64_t)v23);
    if ((v14 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13519C0(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_1350A08(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_134FD48(*(void *)(*(void *)(a1 + 88) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 96) + 16);
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_1334910(*(void *)(a1 + 104));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1351A70@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.RouteUpdate");
}

uint64_t sub_1351A80(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AB800;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = &qword_2550250;
  *(void *)(a1 + 128) = &qword_2550250;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(void *)(a1 + 184) = 0;
  return a1;
}

void sub_1351B1C(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1351B50(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24AB800;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    int v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1368F6C(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    int v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1368FF8((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    uint64_t v19 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_11DB348((uint64_t *)(a1 + 96), v19, (uint64_t *)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    uint64_t v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      *uint64_t v21 = v20;
    }
  }
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22) {
    sub_188B4F8(v4, (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 120) = &qword_2550250;
  int v23 = *(_DWORD *)(a2 + 40);
  if (v23)
  {
    uint64_t v24 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    sub_1881DF4((std::string **)(a1 + 120), (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL), v24);
    int v23 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 128) = &qword_2550250;
  if ((v23 & 2) != 0)
  {
    unint64_t v25 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v25 = (uint64_t *)*v25;
    }
    sub_1881DF4((std::string **)(a1 + 128), (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL), v25);
    int v23 = *(_DWORD *)(a2 + 40);
  }
  if ((v23 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 136) = 0;
  if ((v23 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 144) = 0;
  if ((v23 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 152) = 0;
  if ((v23 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 160) = 0;
  if ((v23 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 168) = 0;
  if ((v23 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  return a1;
}

void sub_1351EF8()
{
}

void *sub_1352000(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13520B0((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_11DB1BC(a1 + 12);
  sub_1368D54(a1 + 9);
  sub_1368CD4(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_13520B0(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 120);
  uint64_t v2 = (void ***)(a1 + 120);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 128);
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2534020)
  {
    if (*(void *)(a1 + 136))
    {
      sub_145A81C();
      operator delete();
    }
    if (*(void *)(a1 + 144))
    {
      sub_13059CC();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 152);
    if (v5)
    {
      sub_13AE650(v5);
      operator delete();
    }
    if (*(void *)(a1 + 160))
    {
      sub_14775B0();
      operator delete();
    }
    if (*(void *)(a1 + 168))
    {
      sub_15C0D18();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 176);
    if (result)
    {
      sub_15B9F30();
      operator delete();
    }
  }
  return result;
}

void sub_13521E8(void *a1)
{
  sub_1352000(a1);

  operator delete();
}

uint64_t sub_1352220(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (uint64_t)sub_134EFD4(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_13E8E44(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    int v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_15BAAF0(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  char v12 = *(unsigned char *)(a1 + 40);
  if (!v12) {
    goto LABEL_23;
  }
  if ((*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_16;
    }
LABEL_31:
    unint64_t v16 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v16 + 23) < 0)
    {
      **(unsigned char **)unint64_t v16 = 0;
      *(void *)(v16 + 8) = 0;
      if ((v12 & 4) != 0) {
        goto LABEL_35;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v16 = 0;
      *(unsigned char *)(v16 + 23) = 0;
      if ((v12 & 4) != 0) {
        goto LABEL_35;
      }
    }
LABEL_17:
    if ((v12 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_36;
  }
  unint64_t v15 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v15 + 23) < 0)
  {
    **(unsigned char **)unint64_t v15 = 0;
    *(void *)(v15 + 8) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_31;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v15 = 0;
    *(unsigned char *)(v15 + 23) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_31;
    }
  }
LABEL_16:
  if ((v12 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_35:
  uint64_t result = sub_13E0F24(*(void *)(a1 + 136));
  if ((v12 & 8) == 0)
  {
LABEL_18:
    if ((v12 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = (uint64_t)sub_1305A08(*(void *)(a1 + 144));
  if ((v12 & 0x10) == 0)
  {
LABEL_19:
    if ((v12 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_38:
    uint64_t result = sub_13E123C(*(void *)(a1 + 160));
    if ((v12 & 0x40) == 0)
    {
LABEL_21:
      if ((v12 & 0x80) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    goto LABEL_39;
  }
LABEL_37:
  uint64_t result = sub_13AE68C(*(void *)(a1 + 152));
  if ((v12 & 0x20) != 0) {
    goto LABEL_38;
  }
LABEL_20:
  if ((v12 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_39:
  uint64_t result = sub_15C0D54(*(void *)(a1 + 168));
  if (v12 < 0) {
LABEL_22:
  }
    uint64_t result = sub_15B9F6C(*(void *)(a1 + 176));
LABEL_23:
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(void *)(v13 + 176) = 0;
  *(_DWORD *)(v13 + 32) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_13523CC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v51 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1]) & 1) == 0)
  {
    int v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (unsigned __int8 *)(*(void *)v51 + 1);
      unsigned int v9 = **(unsigned char **)v51;
      if ((char)**(unsigned char **)v51 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if ((char)*v8 < 0)
        {
          uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v51, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = (unsigned __int8 *)(*(void *)v51 + 2);
        }
      }
      *(void *)uint64_t v51 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_87;
          }
          char v12 = v8 - 1;
          while (1)
          {
            uint64_t v13 = v12 + 1;
            *(void *)uint64_t v51 = v12 + 1;
            char v14 = *(_DWORD **)(a1 + 64);
            if (v14 && (uint64_t v15 = *(int *)(a1 + 56), (int)v15 < *v14))
            {
              *(_DWORD *)(a1 + 56) = v15 + 1;
              uint64_t v16 = *(void *)&v14[2 * v15 + 2];
            }
            else
            {
              int v17 = sub_13551A0(*(void *)(a1 + 48));
              uint64_t v16 = sub_188CDC8(a1 + 48, (uint64_t)v17);
              uint64_t v13 = *(unsigned __int8 **)v51;
            }
            char v12 = (unsigned __int8 *)sub_1351124(a3, v16, v13);
            *(void *)uint64_t v51 = v12;
            if (!v12) {
              goto LABEL_103;
            }
            if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
              goto LABEL_98;
            }
          }
        case 2u:
          if (v9 != 18) {
            goto LABEL_87;
          }
          *(_DWORD *)(a1 + 40) |= 4u;
          uint64_t v24 = *(void *)(a1 + 136);
          if (!v24)
          {
            unint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              unint64_t v25 = (void *)*v25;
            }
            sub_1478B2C((uint64_t)v25);
            uint64_t v24 = v26;
            *(void *)(a1 + 136) = v26;
            uint64_t v8 = *(unsigned __int8 **)v51;
          }
          uint64_t v27 = sub_1281B58(a3, v24, v8);
          goto LABEL_97;
        case 3u:
          if (v9 != 26) {
            goto LABEL_87;
          }
          *(_DWORD *)(a1 + 40) |= 8u;
          unint64_t v28 = *(void **)(a1 + 144);
          if (!v28)
          {
            uint64_t v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v29 = (void *)*v29;
            }
            unint64_t v28 = sub_130645C((uint64_t)v29);
            *(void *)(a1 + 144) = v28;
            uint64_t v8 = *(unsigned __int8 **)v51;
          }
          uint64_t v27 = (uint64_t)sub_1192188(a3, (uint64_t)v28, v8);
          goto LABEL_97;
        case 4u:
          if (v9 != 34) {
            goto LABEL_87;
          }
          uint64_t v30 = (char *)(v8 - 1);
          while (1)
          {
            uint64_t v31 = (unsigned __int8 *)(v30 + 1);
            *(void *)uint64_t v51 = v30 + 1;
            BOOL v32 = *(_DWORD **)(a1 + 88);
            if (v32 && (uint64_t v33 = *(int *)(a1 + 80), (int)v33 < *v32))
            {
              *(_DWORD *)(a1 + 80) = v33 + 1;
              uint64_t v34 = *(void *)&v32[2 * v33 + 2];
            }
            else
            {
              sub_1479774(*(void *)(a1 + 72));
              uint64_t v34 = sub_188CDC8(a1 + 72, v35);
              uint64_t v31 = *(unsigned __int8 **)v51;
            }
            uint64_t v30 = sub_13529E4(a3, v34, v31);
            *(void *)uint64_t v51 = v30;
            if (!v30) {
              goto LABEL_103;
            }
            if (*(void *)a3 <= (unint64_t)v30 || *v30 != 34) {
              goto LABEL_98;
            }
          }
        case 5u:
          if (v9 != 42) {
            goto LABEL_87;
          }
          *(_DWORD *)(a1 + 40) |= 0x10u;
          uint64_t v36 = *(void *)(a1 + 152);
          if (!v36)
          {
            uint64_t v37 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v37 = (void *)*v37;
            }
            uint64_t v36 = sub_13D8F60((uint64_t)v37);
            *(void *)(a1 + 152) = v36;
            uint64_t v8 = *(unsigned __int8 **)v51;
          }
          uint64_t v27 = sub_1352A74(a3, v36, v8);
          goto LABEL_97;
        case 6u:
          if (v9 != 50) {
            goto LABEL_87;
          }
          *(_DWORD *)(a1 + 40) |= 0x20u;
          uint64_t v38 = *(void *)(a1 + 160);
          if (!v38)
          {
            char v39 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              char v39 = (void *)*v39;
            }
            uint64_t v38 = sub_1479978((uint64_t)v39);
            *(void *)(a1 + 160) = v38;
            uint64_t v8 = *(unsigned __int8 **)v51;
          }
          uint64_t v27 = sub_1352B04(a3, v38, v8);
          goto LABEL_97;
        case 7u:
          if (v9 != 58) {
            goto LABEL_87;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v40 = *(void *)(a1 + 8);
          uint64_t v41 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
          if (v40) {
            uint64_t v41 = (uint64_t *)*v41;
          }
          char v42 = (void *)(a1 + 120);
          goto LABEL_72;
        case 8u:
          if (v9 != 66) {
            goto LABEL_87;
          }
          *(_DWORD *)(a1 + 40) |= 2u;
          uint64_t v43 = *(void *)(a1 + 8);
          uint64_t v41 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
          if (v43) {
            uint64_t v41 = (uint64_t *)*v41;
          }
          char v42 = (void *)(a1 + 128);
LABEL_72:
          int v44 = (std::string *)sub_1880F84(v42, v41);
          uint64_t v27 = (uint64_t)sub_188C244(v44, *(char **)v51, (uint64_t)a3);
          goto LABEL_97;
        case 9u:
          if (v9 != 74) {
            goto LABEL_87;
          }
          *(_DWORD *)(a1 + 40) |= 0x40u;
          uint64_t v45 = *(void *)(a1 + 168);
          if (!v45)
          {
            uint64_t v46 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v46 = (void *)*v46;
            }
            uint64_t v45 = sub_15C26A4((uint64_t)v46);
            *(void *)(a1 + 168) = v45;
            uint64_t v8 = *(unsigned __int8 **)v51;
          }
          uint64_t v27 = (uint64_t)sub_1352B94(a3, v45, v8);
          goto LABEL_97;
        case 0xAu:
          if (v9 != 82) {
            goto LABEL_87;
          }
          *(_DWORD *)(a1 + 40) |= 0x80u;
          int v47 = *(void **)(a1 + 176);
          if (!v47)
          {
            uint64_t v48 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v48 = (void *)*v48;
            }
            int v47 = sub_15C2014((uint64_t)v48);
            *(void *)(a1 + 176) = v47;
            uint64_t v8 = *(unsigned __int8 **)v51;
          }
          uint64_t v27 = (uint64_t)sub_11EAA5C(a3, (uint64_t)v47, v8);
          goto LABEL_97;
        case 0xBu:
          if (v9 != 89) {
            goto LABEL_87;
          }
          v5 |= 0x100u;
          *(void *)(a1 + 184) = *(void *)v8;
          *(void *)uint64_t v51 = v8 + 8;
          goto LABEL_98;
        default:
          if (v9 >> 3 == 100 && v9 == 34)
          {
            uint64_t v18 = v8 - 2;
            while (1)
            {
              uint64_t v19 = v18 + 2;
              *(void *)uint64_t v51 = v18 + 2;
              int v20 = *(_DWORD **)(a1 + 112);
              if (v20 && (uint64_t v21 = *(int *)(a1 + 104), (int)v21 < *v20))
              {
                *(_DWORD *)(a1 + 104) = v21 + 1;
                uint64_t v22 = *(void *)&v20[2 * v21 + 2];
              }
              else
              {
                uint64_t v23 = sub_15C2114(*(void *)(a1 + 96));
                uint64_t v22 = sub_188CDC8(a1 + 96, v23);
                uint64_t v19 = *(unsigned __int8 **)v51;
              }
              uint64_t v18 = (unsigned __int8 *)sub_11A058C(a3, v22, v19);
              *(void *)uint64_t v51 = v18;
              if (!v18) {
                goto LABEL_103;
              }
              if (*(void *)a3 <= (unint64_t)v18 || *(_WORD *)v18 != 1698) {
                goto LABEL_98;
              }
            }
          }
LABEL_87:
          if (v9) {
            BOOL v49 = (v9 & 7) == 4;
          }
          else {
            BOOL v49 = 1;
          }
          if (v49)
          {
            if (v8)
            {
              a3[10].i32[0] = v9 - 1;
              goto LABEL_2;
            }
LABEL_103:
            *(void *)uint64_t v51 = 0;
            goto LABEL_2;
          }
          if (v9 - 8000 < 0xFA0 || v9 - 80008 <= 0x31F)
          {
            uint64_t v27 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2534020, (uint64_t *)(a1 + 8), a3);
          }
          else
          {
            if (*v7)
            {
              uint64_t v50 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v50 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v51;
            }
            uint64_t v27 = (uint64_t)sub_1885AC0(v9, v50, (char *)v8, a3);
          }
LABEL_97:
          *(void *)uint64_t v51 = v27;
          if (!v27) {
            goto LABEL_103;
          }
LABEL_98:
          if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v51;
}

char *sub_13529E4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1473D30(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1352A74(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13AE9E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1352B04(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14775EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1352B94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15C0D6C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1352C24(uint64_t a1, unsigned char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_134F280(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if ((v11 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v12 = *(void *)(a1 + 136);
    *a2 = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 24);
    a2[1] = v13;
    if (v13 > 0x7F) {
      char v14 = sub_188A9CC(v13, a2 + 1);
    }
    else {
      char v14 = a2 + 2;
    }
    a2 = sub_145CBCC(v12, v14, a3);
  }
  if ((v11 & 8) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v15 = *(void *)(a1 + 144);
    *a2 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 44);
    a2[1] = v16;
    if (v16 > 0x7F) {
      int v17 = sub_188A9CC(v16, a2 + 1);
    }
    else {
      int v17 = a2 + 2;
    }
    a2 = sub_1305C9C(v15, v17, a3);
  }
  int v18 = *(_DWORD *)(a1 + 80);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 34;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      a2[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, a2 + 1);
      }
      else {
        uint64_t v22 = a2 + 2;
      }
      a2 = sub_1474538(v20, (unint64_t)v22, a3);
    }
  }
  if ((v11 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v23 = *(void *)(a1 + 152);
    *a2 = 42;
    unsigned int v24 = *(_DWORD *)(v23 + 20);
    a2[1] = v24;
    if (v24 > 0x7F) {
      unint64_t v25 = sub_188A9CC(v24, a2 + 1);
    }
    else {
      unint64_t v25 = a2 + 2;
    }
    a2 = sub_13AFD70(v23, (unint64_t)v25, a3);
    if ((v11 & 0x20) == 0)
    {
LABEL_33:
      if ((v11 & 1) == 0) {
        goto LABEL_34;
      }
      goto LABEL_51;
    }
  }
  else if ((v11 & 0x20) == 0)
  {
    goto LABEL_33;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v26 = *(void *)(a1 + 160);
  *a2 = 50;
  unsigned int v27 = *(_DWORD *)(v26 + 64);
  a2[1] = v27;
  if (v27 > 0x7F) {
    unint64_t v28 = sub_188A9CC(v27, a2 + 1);
  }
  else {
    unint64_t v28 = a2 + 2;
  }
  a2 = sub_14778CC(v26, v28, a3);
  if ((v11 & 1) == 0)
  {
LABEL_34:
    if ((v11 & 2) == 0) {
      goto LABEL_35;
    }
    goto LABEL_52;
  }
LABEL_51:
  a2 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 2) == 0)
  {
LABEL_35:
    if ((v11 & 0x40) == 0) {
      goto LABEL_36;
    }
    goto LABEL_53;
  }
LABEL_52:
  a2 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 0x40) == 0)
  {
LABEL_36:
    if ((v11 & 0x80) == 0) {
      goto LABEL_37;
    }
    goto LABEL_59;
  }
LABEL_53:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v29 = *(void *)(a1 + 168);
  *a2 = 74;
  unsigned int v30 = *(_DWORD *)(v29 + 20);
  a2[1] = v30;
  if (v30 > 0x7F) {
    uint64_t v31 = sub_188A9CC(v30, a2 + 1);
  }
  else {
    uint64_t v31 = a2 + 2;
  }
  a2 = sub_15C1084(v29, (unint64_t)v31, a3);
  if ((v11 & 0x80) == 0)
  {
LABEL_37:
    if ((v11 & 0x100) == 0) {
      goto LABEL_68;
    }
    goto LABEL_65;
  }
LABEL_59:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v32 = *(void *)(a1 + 176);
  *a2 = 82;
  unsigned int v33 = *(_DWORD *)(v32 + 20);
  a2[1] = v33;
  if (v33 > 0x7F) {
    uint64_t v34 = sub_188A9CC(v33, a2 + 1);
  }
  else {
    uint64_t v34 = a2 + 2;
  }
  a2 = sub_15BA180(v32, (unint64_t)v34, a3);
  if ((v11 & 0x100) != 0)
  {
LABEL_65:
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v35 = *(void *)(a1 + 184);
    *a2 = 89;
    *(void *)(a2 + 1) = v35;
    a2 += 9;
  }
LABEL_68:
  int v36 = *(_DWORD *)(a1 + 104);
  if (v36)
  {
    for (int k = 0; k != v36; ++k)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *(_WORD *)a2 = 1698;
      unsigned int v39 = *(_DWORD *)(v38 + 20);
      a2[2] = v39;
      if (v39 > 0x7F) {
        uint64_t v40 = sub_188A9CC(v39, a2 + 2);
      }
      else {
        uint64_t v40 = a2 + 3;
      }
      a2 = sub_15BAD4C(v38, (unint64_t)v40, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 10101, a2, a3);
  }
  uint64_t v41 = *(void *)(a1 + 8);
  if ((v41 & 1) == 0) {
    return a2;
  }
  unint64_t v43 = v41 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v43 + 31) < 0)
  {
    int v44 = *(void **)(v43 + 8);
    uint64_t v45 = *(void *)(v43 + 16);
  }
  else
  {
    int v44 = (void *)(v43 + 8);
    LODWORD(v45) = *(unsigned __int8 *)(v43 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v45)
  {
    uint64_t v46 = (int)v45;
    memcpy(a2, v44, (int)v45);
    a2 += v46;
    return a2;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v44, v45, a2);
}

uint64_t sub_1353184(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_134F390(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1474A68(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + 2 * v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_15BAE94(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  int v24 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v24) {
    goto LABEL_29;
  }
  if (v24)
  {
    unint64_t v28 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
    uint64_t v30 = *(void *)(v28 + 8);
    if ((v29 & 0x80u) == 0) {
      uint64_t v30 = v29;
    }
    v18 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v24 & 2) == 0)
    {
LABEL_22:
      if ((v24 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_40;
    }
  }
  else if ((v24 & 2) == 0)
  {
    goto LABEL_22;
  }
  unint64_t v31 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
  uint64_t v33 = *(void *)(v31 + 8);
  if ((v32 & 0x80u) == 0) {
    uint64_t v33 = v32;
  }
  v18 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 4) == 0)
  {
LABEL_23:
    if ((v24 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v34 = sub_145DF38(*(void *)(a1 + 136));
  v18 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 8) == 0)
  {
LABEL_24:
    if ((v24 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t v35 = sub_1305E64(*(void *)(a1 + 144));
  v18 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x10) == 0)
  {
LABEL_25:
    if ((v24 & 0x20) == 0) {
      goto LABEL_26;
    }
LABEL_43:
    uint64_t v37 = sub_1477ADC(*(void *)(a1 + 160));
    v18 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v24 & 0x40) == 0)
    {
LABEL_27:
      if ((v24 & 0x80) == 0) {
        goto LABEL_29;
      }
      goto LABEL_28;
    }
    goto LABEL_44;
  }
LABEL_42:
  uint64_t v36 = sub_13B0894(*(void *)(a1 + 152));
  v18 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x20) != 0) {
    goto LABEL_43;
  }
LABEL_26:
  if ((v24 & 0x40) == 0) {
    goto LABEL_27;
  }
LABEL_44:
  uint64_t v38 = sub_15C1220(*(void *)(a1 + 168));
  v18 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x80) != 0)
  {
LABEL_28:
    unint64_t v25 = sub_15BA324(*(void *)(a1 + 176));
    v18 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_29:
  if ((v24 & 0x100) != 0) {
    uint64_t result = v18 + 9;
  }
  else {
    uint64_t result = v18;
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if (v27)
  {
    unint64_t v39 = v27 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v39 + 31) < 0) {
      uint64_t v40 = *(void *)(v39 + 16);
    }
    else {
      uint64_t v40 = *(unsigned __int8 *)(v39 + 31);
    }
    result += v40;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_13534B4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1368F6C((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1368FF8((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unsigned int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_11DB348((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v19) {
    goto LABEL_19;
  }
  if (v19)
  {
    uint64_t v22 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    int v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      int v24 = (uint64_t *)*v24;
    }
    sub_1881DF4((std::string **)(a1 + 120), v22, v24);
    if ((v19 & 2) == 0)
    {
LABEL_13:
      if ((v19 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_31;
    }
  }
  else if ((v19 & 2) == 0)
  {
    goto LABEL_13;
  }
  unint64_t v25 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v26 = *(void *)(a1 + 8);
  uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
  if (v26) {
    uint64_t v27 = (uint64_t *)*v27;
  }
  sub_1881DF4((std::string **)(a1 + 128), v25, v27);
  if ((v19 & 4) == 0)
  {
LABEL_14:
    if ((v19 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_31:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v28 = *(void *)(a1 + 136);
  if (!v28)
  {
    uint64_t v29 = *(void *)(a1 + 8);
    uint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
    if (v29) {
      uint64_t v30 = (void *)*v30;
    }
    sub_1478B2C((uint64_t)v30);
    *(void *)(a1 + 136) = v28;
  }
  if (*(void *)(a2 + 136)) {
    unint64_t v31 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    unint64_t v31 = &off_2539290;
  }
  sub_13E582C(v28, (uint64_t)v31);
  if ((v19 & 8) == 0)
  {
LABEL_15:
    if ((v19 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_47;
  }
LABEL_39:
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v32 = *(void **)(a1 + 144);
  if (!v32)
  {
    uint64_t v33 = *(void *)(a1 + 8);
    uint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
    if (v33) {
      uint64_t v34 = (void *)*v34;
    }
    uint64_t v32 = sub_130645C((uint64_t)v34);
    *(void *)(a1 + 144) = v32;
  }
  if (*(void *)(a2 + 144)) {
    uint64_t v35 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    uint64_t v35 = &off_2532480;
  }
  sub_1305F18((uint64_t)v32, (uint64_t)v35);
  if ((v19 & 0x10) == 0)
  {
LABEL_16:
    if ((v19 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_55;
  }
LABEL_47:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v36 = *(void *)(a1 + 152);
  if (!v36)
  {
    uint64_t v37 = *(void *)(a1 + 8);
    uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
    if (v37) {
      uint64_t v38 = (void *)*v38;
    }
    uint64_t v36 = sub_13D8F60((uint64_t)v38);
    *(void *)(a1 + 152) = v36;
  }
  if (*(void *)(a2 + 152)) {
    unint64_t v39 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    unint64_t v39 = &off_2535C50;
  }
  sub_13B0D54(v36, (uint64_t)v39);
  if ((v19 & 0x20) == 0)
  {
LABEL_17:
    if ((v19 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_63;
  }
LABEL_55:
  *(_DWORD *)(a1 + 40) |= 0x20u;
  uint64_t v40 = *(std::string **)(a1 + 160);
  if (!v40)
  {
    uint64_t v41 = *(void *)(a1 + 8);
    char v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
    if (v41) {
      char v42 = (void *)*v42;
    }
    uint64_t v40 = (std::string *)sub_1479978((uint64_t)v42);
    *(void *)(a1 + 160) = v40;
  }
  if (*(void *)(a2 + 160)) {
    unint64_t v43 = *(uint64_t (****)())(a2 + 160);
  }
  else {
    unint64_t v43 = &off_2539C48;
  }
  sub_1216B14(v40, (uint64_t)v43);
  if ((v19 & 0x40) != 0)
  {
LABEL_63:
    *(_DWORD *)(a1 + 40) |= 0x40u;
    int v44 = *(std::string **)(a1 + 168);
    if (!v44)
    {
      uint64_t v45 = *(void *)(a1 + 8);
      uint64_t v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
      if (v45) {
        uint64_t v46 = (void *)*v46;
      }
      int v44 = (std::string *)sub_15C26A4((uint64_t)v46);
      *(void *)(a1 + 168) = v44;
    }
    if (*(void *)(a2 + 168)) {
      int v47 = *(uint64_t (****)())(a2 + 168);
    }
    else {
      int v47 = &off_253F780;
    }
    sub_13B15D0(v44, (uint64_t)v47);
    if ((v19 & 0x80) != 0) {
      goto LABEL_71;
    }
LABEL_19:
    if ((v19 & 0x100) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_18:
  if ((v19 & 0x80) == 0) {
    goto LABEL_19;
  }
LABEL_71:
  *(_DWORD *)(a1 + 40) |= 0x80u;
  uint64_t v48 = *(std::string **)(a1 + 176);
  if (!v48)
  {
    uint64_t v49 = *(void *)(a1 + 8);
    uint64_t v50 = (void *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
    if (v49) {
      uint64_t v50 = (void *)*v50;
    }
    uint64_t v48 = (std::string *)sub_15C2014((uint64_t)v50);
    *(void *)(a1 + 176) = v48;
  }
  if (*(void *)(a2 + 176)) {
    uint64_t v51 = *(uint64_t (****)())(a2 + 176);
  }
  else {
    uint64_t v51 = &off_253F530;
  }
  sub_1113E40(v48, (uint64_t)v51);
  if ((v19 & 0x100) != 0)
  {
LABEL_20:
    uint64_t v20 = *(void *)(a2 + 184);
    *(_DWORD *)(a1 + 40) |= 0x100u;
    *(void *)(a1 + 184) = v20;
  }
LABEL_21:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13538D0(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_1352220(a1);
    sub_13534B4(a1, a2);
  }
}

uint64_t sub_135391C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 64) + 8 * v3) + 16);
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_13EDFC4(*(void *)(*(void *)(a1 + 88) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 104);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_15BAF9C(*(void *)(*(void *)(a1 + 112) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    int v12 = *(_DWORD *)(a1 + 40);
    if ((v12 & 4) != 0)
    {
      uint64_t result = sub_13E62E4(*(void *)(a1 + 136));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 8) != 0)
    {
      uint64_t result = sub_1305FA8(*(void *)(a1 + 144));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x10) != 0)
    {
      uint64_t result = sub_13B1748(*(void *)(a1 + 152));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 40);
    }
    if ((v12 & 0x80) == 0) {
      return 1;
    }
    uint64_t result = sub_15BA3C8(*(void *)(a1 + 176));
    if (result) {
      return 1;
    }
  }
  return result;
}

__n128 sub_1353A1C(uint64_t a1, uint64_t a2)
{
  sub_1885338((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v4;
  LODWORD(v4) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v4;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v7;
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  uint64_t v10 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = v10;
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v12;
  uint64_t v13 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a2 + 112) = v13;
  uint64_t v14 = *(void *)(a2 + 120);
  *(void *)(a2 + 120) = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = v14;
  uint64_t v15 = *(void *)(a2 + 128);
  *(void *)(a2 + 128) = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = v15;
  uint64_t v16 = *(void *)(a1 + 136);
  uint64_t v17 = *(void *)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a2 + 136) = v16;
  *(void *)(a2 + 144) = v17;
  uint64_t v18 = *(void *)(a1 + 152);
  uint64_t v19 = *(void *)(a1 + 160);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a2 + 152) = v18;
  *(void *)(a2 + 160) = v19;
  uint64_t v20 = *(void *)(a1 + 168);
  uint64_t v21 = *(void *)(a1 + 176);
  __n128 result = *(__n128 *)(a2 + 168);
  *(__n128 *)(a1 + 168) = result;
  *(void *)(a2 + 168) = v20;
  *(void *)(a2 + 176) = v21;
  uint64_t v23 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a2 + 184) = v23;
  return result;
}

void *sub_1353B2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.RouteUpdateRequest");
}

uint64_t sub_1353B3C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AB880;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = &qword_2550250;
  *(void *)(a1 + 80) = &qword_2550250;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  return a1;
}

void sub_1353BC0(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1353BF4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24AB880;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1369084(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 72) = &qword_2550250;
  int v13 = *(_DWORD *)(a2 + 40);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 80) = &qword_2550250;
  if ((v13 & 2) != 0)
  {
    uint64_t v15 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 80), (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL), v15);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  if ((v13 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  if ((v13 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v13 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  return a1;
}

void sub_1353E1C()
{
}

void *sub_1353EB8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1353F50((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1368DD4(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1353F50(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 72);
  uint64_t v2 = (void ***)(a1 + 72);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  __n128 result = (void ***)(a1 + 80);
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_25340E0)
  {
    uint64_t v5 = *(void **)(a1 + 88);
    if (v5)
    {
      sub_13060E0(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 96);
    if (v6)
    {
      sub_13ADB2C(v6);
      operator delete();
    }
    __n128 result = *(void ****)(a1 + 104);
    if (result)
    {
      sub_134C7FC(result);
      operator delete();
    }
  }
  return result;
}

void sub_1354028(void *a1)
{
  sub_1353EB8(a1);

  operator delete();
}

uint64_t sub_1354060(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1350C44(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x1F) != 0)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_16:
      unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_20;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_20;
        }
      }
LABEL_9:
      if ((v6 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_21;
    }
    unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_16;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_20:
    uint64_t result = sub_130611C(*(void *)(a1 + 88));
    if ((v6 & 8) == 0)
    {
LABEL_10:
      if ((v6 & 0x10) == 0) {
        goto LABEL_24;
      }
      goto LABEL_22;
    }
LABEL_21:
    uint64_t result = sub_13ADB68(*(void *)(a1 + 96));
    if ((v6 & 0x10) == 0) {
      goto LABEL_24;
    }
LABEL_22:
    uint64_t v9 = *(void *)(a1 + 104);
    char v10 = *(unsigned char *)(v9 + 8);
    uint64_t result = v9 + 8;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v10) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
LABEL_24:
  char v12 = *(unsigned char *)(a1 + 8);
  uint64_t v11 = a1 + 8;
  *(_DWORD *)(v11 + 104) = 0;
  *(_DWORD *)(v11 + 32) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

uint64_t sub_13541A0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v38 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    return *(void *)v38;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (unsigned __int8 *)(*(void *)v38 + 1);
    unsigned int v8 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v38, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (unsigned __int8 *)(*(void *)v38 + 2);
      }
    }
    *(void *)uint64_t v38 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_23;
        }
        uint64_t v11 = (char *)(v7 - 1);
        while (1)
        {
          char v12 = (unsigned __int8 *)(v11 + 1);
          *(void *)uint64_t v38 = v11 + 1;
          int v13 = *(_DWORD **)(a1 + 64);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 56), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 56) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            uint64_t v16 = sub_13552E0(*(void *)(a1 + 48));
            uint64_t v15 = sub_188CDC8(a1 + 48, v16);
            char v12 = *(unsigned __int8 **)v38;
          }
          uint64_t v11 = sub_13545F0(a3, v15, v12);
          *(void *)uint64_t v38 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_66;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v21 = (uint64_t *)*v21;
        }
        uint64_t v22 = (void *)(a1 + 72);
        goto LABEL_56;
      case 3u:
        if (v8 != 24) {
          goto LABEL_23;
        }
        uint64_t v23 = (char *)(v7 + 1);
        unint64_t v24 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v25 = *v23;
        int v26 = v24 + (v25 << 7);
        unint64_t v24 = (v26 - 128);
        if (v25 < 0)
        {
          *(void *)uint64_t v38 = sub_188C138((uint64_t)v7, (v26 - 128));
          if (!*(void *)v38) {
            return 0;
          }
          unint64_t v24 = v36;
        }
        else
        {
          uint64_t v23 = (char *)(v7 + 2);
LABEL_37:
          *(void *)uint64_t v38 = v23;
        }
        if (sub_13E78E4(v24))
        {
          *(_DWORD *)(a1 + 40) |= 0x20u;
          *(_DWORD *)(a1 + 112) = v24;
        }
        else
        {
          if (*v6) {
            uint64_t v37 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v24, v37);
        }
        goto LABEL_66;
      case 4u:
        if (v8 != 34) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v27 = *(void *)(a1 + 88);
        if (!v27)
        {
          uint64_t v28 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v28 = (void *)*v28;
          }
          uint64_t v27 = sub_13064B8((uint64_t)v28);
          *(void *)(a1 + 88) = v27;
          unint64_t v7 = *(unsigned __int8 **)v38;
        }
        uint64_t v19 = sub_1354680(a3, v27, v7);
        goto LABEL_65;
      case 5u:
        if (v8 != 42) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v29 = *(void *)(a1 + 96);
        if (!v29)
        {
          uint64_t v30 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v30 = (void *)*v30;
          }
          uint64_t v29 = sub_13D8EE0((uint64_t)v30);
          *(void *)(a1 + 96) = v29;
          unint64_t v7 = *(unsigned __int8 **)v38;
        }
        uint64_t v19 = sub_1354710(a3, v29, v7);
        goto LABEL_65;
      case 6u:
        if (v8 != 50) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v31 = *(void *)(a1 + 8);
        uint64_t v21 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          uint64_t v21 = (uint64_t *)*v21;
        }
        uint64_t v22 = (void *)(a1 + 80);
LABEL_56:
        uint64_t v32 = (std::string *)sub_1880F84(v22, v21);
        uint64_t v19 = (void *)sub_188C244(v32, *(char **)v38, (uint64_t)a3);
        goto LABEL_65;
      default:
        if (v8 >> 3 == 32 && v8 == 2)
        {
          *(_DWORD *)(a1 + 40) |= 0x10u;
          uint64_t v33 = *(void **)(a1 + 104);
          if (!v33)
          {
            uint64_t v34 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              uint64_t v34 = (void *)*v34;
            }
            uint64_t v33 = sub_134ECAC((uint64_t)v34);
            *(void *)(a1 + 104) = v33;
            unint64_t v7 = *(unsigned __int8 **)v38;
          }
          uint64_t v19 = sub_13547A0(a3, (uint64_t)v33, v7);
LABEL_65:
          *(void *)uint64_t v38 = v19;
          if (!v19) {
            return 0;
          }
LABEL_66:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            return *(void *)v38;
          }
          continue;
        }
LABEL_23:
        if (v8) {
          BOOL v18 = (v8 & 7) == 4;
        }
        else {
          BOOL v18 = 1;
        }
        if (!v18)
        {
          if (v8 - 8000 > 0xF9F)
          {
            if (*v6)
            {
              uint64_t v35 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v7 = *(unsigned __int8 **)v38;
            }
            uint64_t v19 = sub_1885AC0(v8, v35, (char *)v7, a3);
          }
          else
          {
            uint64_t v19 = sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_25340E0, (uint64_t *)(a1 + 8), a3);
          }
          goto LABEL_65;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v38;
    }
  }
}

char *sub_13545F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1350D1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1354680(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1306134(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1354710(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13ADB90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13547A0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_134C8C0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1354830(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_13512D4(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11) {
    a2 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v11 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v12 = *(int *)(a1 + 112);
    *a2 = 24;
    a2[1] = v12;
    if (v12 > 0x7F)
    {
      a2[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      a2[2] = v12 >> 7;
      a2 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *a2++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v11 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v15 = *(void *)(a1 + 88);
    *a2 = 34;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    a2[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, a2 + 1);
    }
    else {
      uint64_t v17 = a2 + 2;
    }
    a2 = sub_13062B4(v15, (unint64_t)v17, a3);
    if ((v11 & 8) == 0)
    {
LABEL_20:
      if ((v11 & 2) == 0) {
        goto LABEL_21;
      }
      goto LABEL_35;
    }
  }
  else if ((v11 & 8) == 0)
  {
    goto LABEL_20;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v18 = *(void *)(a1 + 96);
  *a2 = 42;
  unsigned int v19 = *(_DWORD *)(v18 + 20);
  a2[1] = v19;
  if (v19 > 0x7F) {
    uint64_t v20 = sub_188A9CC(v19, a2 + 1);
  }
  else {
    uint64_t v20 = a2 + 2;
  }
  a2 = (char *)sub_13ADDAC(v18, (unint64_t)v20, a3);
  if ((v11 & 2) == 0)
  {
LABEL_21:
    if ((v11 & 0x10) == 0) {
      goto LABEL_42;
    }
    goto LABEL_36;
  }
LABEL_35:
  a2 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 0x10) == 0) {
    goto LABEL_42;
  }
LABEL_36:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v21 = *(void *)(a1 + 104);
  *(_WORD *)a2 = 642;
  unsigned int v22 = *(_DWORD *)(v21 + 20);
  a2[2] = v22;
  if (v22 > 0x7F) {
    uint64_t v23 = sub_188A9CC(v22, a2 + 2);
  }
  else {
    uint64_t v23 = a2 + 3;
  }
  a2 = sub_134CA40(v21, (unint64_t)v23, a3);
LABEL_42:
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 1500, a2, a3);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return a2;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(a2, v27, (int)v28);
    a2 += v29;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, a2);
}

uint64_t sub_1354B94(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1351608(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 0x3F) != 0)
  {
    if (v10)
    {
      unint64_t v11 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v10 & 2) == 0)
      {
LABEL_10:
        if ((v10 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_21;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_10;
    }
    unint64_t v14 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 4) == 0)
    {
LABEL_11:
      if ((v10 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_22;
    }
LABEL_21:
    uint64_t v17 = sub_13063DC(*(void *)(a1 + 88));
    v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 8) == 0)
    {
LABEL_12:
      if ((v10 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_23;
    }
LABEL_22:
    uint64_t v18 = sub_13ADF44(*(void *)(a1 + 96));
    v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 0x10) == 0)
    {
LABEL_13:
      if ((v10 & 0x20) == 0) {
        goto LABEL_28;
      }
      goto LABEL_24;
    }
LABEL_23:
    unint64_t v19 = sub_134CB68(*(void *)(a1 + 104));
    v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v10 & 0x20) == 0) {
      goto LABEL_28;
    }
LABEL_24:
    int v20 = *(_DWORD *)(a1 + 112);
    if (v20 < 0) {
      uint64_t v21 = 11;
    }
    else {
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v21;
  }
LABEL_28:
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v4 += v25;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_1354DB8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1369084((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_23;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    unint64_t v14 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 80), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_31;
    }
LABEL_23:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v17 = *(std::string **)(a1 + 88);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = (std::string *)sub_13064B8((uint64_t)v19);
      *(void *)(a1 + 88) = v17;
    }
    if (*(void *)(a2 + 88)) {
      int v20 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      int v20 = &off_25324B8;
    }
    sub_11A7934(v17, (uint64_t)v20);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_39;
    }
LABEL_31:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v21 = *(std::string **)(a1 + 96);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      uint64_t v21 = (std::string *)sub_13D8EE0((uint64_t)v23);
      *(void *)(a1 + 96) = v21;
    }
    if (*(void *)(a2 + 96)) {
      unint64_t v24 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      unint64_t v24 = &off_2535C20;
    }
    sub_13ADFDC(v21, (uint64_t)v24);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
      goto LABEL_12;
    }
LABEL_39:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v25 = *(std::string **)(a1 + 104);
    if (!v25)
    {
      uint64_t v26 = *(void *)(a1 + 8);
      uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        uint64_t v27 = (void *)*v27;
      }
      uint64_t v25 = (std::string *)sub_134ECAC((uint64_t)v27);
      *(void *)(a1 + 104) = v25;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v28 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v28 = &off_2533E58;
    }
    sub_11A442C(v25, (uint64_t)v28);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_135501C(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_1354060(a1);
    sub_1354DB8(a1, a2);
  }
}

BOOL sub_1355068(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_13519C0(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

__n128 sub_13550D0(uint64_t a1, uint64_t a2)
{
  sub_1885338((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v4;
  LODWORD(v4) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v4;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a2 + 72) = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a2 + 80) = *(void *)(a1 + 80);
  *(void *)(a1 + 80) = v9;
  uint64_t v10 = *(void *)(a1 + 88);
  uint64_t v11 = *(void *)(a1 + 96);
  __n128 result = *(__n128 *)(a2 + 88);
  *(__n128 *)(a1 + 88) = result;
  *(void *)(a2 + 88) = v10;
  *(void *)(a2 + 96) = v11;
  uint64_t v13 = *(void *)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a2 + 104) = v13;
  LODWORD(v13) = *(_DWORD *)(a1 + 112);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a2 + 112) = v13;
  return result;
}

void *sub_1355190@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.RouteUpdateResponse");
}

void *sub_13551A0(uint64_t a1)
{
  if (!a1)
  {
    sub_1369110();
  }

  return sub_134EE3C(v3, a1, 0);
}

void *sub_13551FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *__n128 result = off_24AB680;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_1355284(uint64_t a1)
{
  if (!a1)
  {
    sub_136917C();
  }

  return sub_134FDA4(v3, a1, 0);
}

uint64_t sub_13552E0(uint64_t a1)
{
  if (!a1)
  {
    sub_13691E8();
  }

  return sub_1350A70(v3, a1, 0);
}

uint64_t sub_135533C(uint64_t a1)
{
  if (!a1)
  {
    sub_1369254();
  }

  return sub_1351A80(v3, a1, 0);
}

uint64_t sub_1355398(uint64_t a1)
{
  if (!a1)
  {
    sub_13692C0();
  }

  return sub_1353B3C(v3, a1, 0);
}

uint64_t sub_13553F4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 31) = 0;
    *(void *)(a1 + 24) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(a1 + 43) = 0;
    *(void *)(a1 + 35) = 0;
    *(unsigned char *)(a1 + 51) = 0;
  }
  if ((v1 & 0x30000) != 0)
  {
    *(unsigned char *)(a1 + 52) = 0;
    *(_DWORD *)(a1 + 56) = 1;
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1355444(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1357FE0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13554D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_135F6A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

std::string *sub_1355564(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      result[1].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 24);
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_33;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    result[1].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 25);
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_34;
    }
LABEL_33:
    result[1].__r_.__value_.__s.__data_[2] = *(unsigned char *)(a2 + 26);
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_35;
    }
LABEL_34:
    result[1].__r_.__value_.__s.__data_[3] = *(unsigned char *)(a2 + 27);
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_36;
    }
LABEL_35:
    HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_37;
    }
LABEL_36:
    result[1].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 32);
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
        goto LABEL_12;
      }
LABEL_10:
      result[1].__r_.__value_.__s.__data_[10] = *(unsigned char *)(a2 + 34);
      goto LABEL_11;
    }
LABEL_37:
    result[1].__r_.__value_.__s.__data_[9] = *(unsigned char *)(a2 + 33);
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v2 & 0x100) != 0)
  {
    result[1].__r_.__value_.__s.__data_[11] = *(unsigned char *)(a2 + 35);
    if ((v2 & 0x200) == 0)
    {
LABEL_15:
      if ((v2 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_41;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_42;
  }
LABEL_41:
  LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
  if ((v2 & 0x800) == 0)
  {
LABEL_17:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_43;
  }
LABEL_42:
  result[1].__r_.__value_.__s.__data_[20] = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x1000) == 0)
  {
LABEL_18:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_44;
  }
LABEL_43:
  result[1].__r_.__value_.__s.__data_[21] = *(unsigned char *)(a2 + 45);
  if ((v2 & 0x2000) == 0)
  {
LABEL_19:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_20;
    }
LABEL_45:
    *((unsigned char *)&result[1].__r_.__value_.__s + 23) = *(unsigned char *)(a2 + 47);
    if ((v2 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_44:
  result[1].__r_.__value_.__s.__data_[22] = *(unsigned char *)(a2 + 46);
  if ((v2 & 0x4000) != 0) {
    goto LABEL_45;
  }
LABEL_20:
  if ((v2 & 0x8000) != 0) {
LABEL_21:
  }
    LODWORD(result[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
LABEL_22:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_23:
  if ((v2 & 0x30000) != 0)
  {
    if ((v2 & 0x10000) != 0) {
      result[2].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 52);
    }
    if ((v2 & 0x20000) != 0) {
      LODWORD(result[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13556D8(int a1)
{
  uint64_t result = 1;
  if (a1 > 1000)
  {
    if (a1 > 1600)
    {
      if ((a1 - 1801) >= 0xA && (a1 - 1700) >= 9 && a1 != 1601) {
        return 0;
      }
    }
    else
    {
      switch(a1)
      {
        case 1001:
        case 1002:
        case 1003:
        case 1004:
        case 1005:
        case 1006:
        case 1007:
        case 1008:
        case 1009:
        case 1010:
        case 1011:
        case 1012:
        case 1013:
        case 1014:
        case 1015:
        case 1016:
        case 1017:
        case 1018:
        case 1019:
        case 1020:
        case 1021:
        case 1022:
        case 1023:
        case 1024:
        case 1025:
        case 1100:
        case 1101:
        case 1102:
        case 1103:
        case 1104:
        case 1105:
        case 1106:
        case 1107:
        case 1108:
        case 1109:
        case 1110:
        case 1111:
        case 1112:
        case 1113:
        case 1114:
        case 1115:
        case 1116:
        case 1117:
        case 1118:
        case 1119:
        case 1120:
        case 1121:
        case 1122:
        case 1123:
        case 1124:
        case 1125:
        case 1126:
        case 1127:
        case 1128:
        case 1129:
        case 1130:
        case 1131:
        case 1132:
        case 1133:
        case 1134:
        case 1135:
        case 1136:
        case 1137:
        case 1138:
        case 1139:
        case 1140:
        case 1141:
        case 1142:
        case 1143:
        case 1144:
        case 1145:
        case 1146:
        case 1147:
        case 1148:
        case 1149:
        case 1150:
        case 1151:
        case 1152:
        case 1153:
        case 1154:
        case 1155:
        case 1156:
        case 1157:
        case 1158:
        case 1159:
        case 1160:
        case 1161:
        case 1201:
        case 1202:
        case 1203:
        case 1204:
        case 1205:
        case 1206:
        case 1207:
        case 1208:
        case 1209:
        case 1210:
        case 1211:
        case 1212:
        case 1213:
        case 1214:
        case 1215:
        case 1216:
        case 1217:
        case 1218:
        case 1219:
        case 1220:
        case 1221:
        case 1222:
        case 1223:
        case 1224:
        case 1225:
        case 1226:
        case 1227:
        case 1228:
        case 1229:
        case 1230:
        case 1231:
        case 1232:
        case 1233:
        case 1234:
        case 1235:
        case 1236:
        case 1237:
        case 1238:
        case 1239:
        case 1240:
        case 1301:
        case 1302:
        case 1303:
        case 1304:
        case 1305:
        case 1306:
        case 1307:
        case 1308:
        case 1309:
        case 1310:
        case 1311:
        case 1312:
        case 1313:
          return result;
        case 1026:
        case 1027:
        case 1028:
        case 1029:
        case 1030:
        case 1031:
        case 1032:
        case 1033:
        case 1034:
        case 1035:
        case 1036:
        case 1037:
        case 1038:
        case 1039:
        case 1040:
        case 1041:
        case 1042:
        case 1043:
        case 1044:
        case 1045:
        case 1046:
        case 1047:
        case 1048:
        case 1049:
        case 1050:
        case 1051:
        case 1052:
        case 1053:
        case 1054:
        case 1055:
        case 1056:
        case 1057:
        case 1058:
        case 1059:
        case 1060:
        case 1061:
        case 1062:
        case 1063:
        case 1064:
        case 1065:
        case 1066:
        case 1067:
        case 1068:
        case 1069:
        case 1070:
        case 1071:
        case 1072:
        case 1073:
        case 1074:
        case 1075:
        case 1076:
        case 1077:
        case 1078:
        case 1079:
        case 1080:
        case 1081:
        case 1082:
        case 1083:
        case 1084:
        case 1085:
        case 1086:
        case 1087:
        case 1088:
        case 1089:
        case 1090:
        case 1091:
        case 1092:
        case 1093:
        case 1094:
        case 1095:
        case 1096:
        case 1097:
        case 1098:
        case 1099:
        case 1162:
        case 1163:
        case 1164:
        case 1165:
        case 1166:
        case 1167:
        case 1168:
        case 1169:
        case 1170:
        case 1171:
        case 1172:
        case 1173:
        case 1174:
        case 1175:
        case 1176:
        case 1177:
        case 1178:
        case 1179:
        case 1180:
        case 1181:
        case 1182:
        case 1183:
        case 1184:
        case 1185:
        case 1186:
        case 1187:
        case 1188:
        case 1189:
        case 1190:
        case 1191:
        case 1192:
        case 1193:
        case 1194:
        case 1195:
        case 1196:
        case 1197:
        case 1198:
        case 1199:
        case 1200:
        case 1241:
        case 1242:
        case 1243:
        case 1244:
        case 1245:
        case 1246:
        case 1247:
        case 1248:
        case 1249:
        case 1250:
        case 1251:
        case 1252:
        case 1253:
        case 1254:
        case 1255:
        case 1256:
        case 1257:
        case 1258:
        case 1259:
        case 1260:
        case 1261:
        case 1262:
        case 1263:
        case 1264:
        case 1265:
        case 1266:
        case 1267:
        case 1268:
        case 1269:
        case 1270:
        case 1271:
        case 1272:
        case 1273:
        case 1274:
        case 1275:
        case 1276:
        case 1277:
        case 1278:
        case 1279:
        case 1280:
        case 1281:
        case 1282:
        case 1283:
        case 1284:
        case 1285:
        case 1286:
        case 1287:
        case 1288:
        case 1289:
        case 1290:
        case 1291:
        case 1292:
        case 1293:
        case 1294:
        case 1295:
        case 1296:
        case 1297:
        case 1298:
        case 1299:
        case 1300:
          return 0;
        default:
          if ((a1 - 1401) >= 7 && (a1 - 1501) >= 4) {
            return 0;
          }
          break;
      }
    }
  }
  else
  {
    switch(a1)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
      case 70:
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 80:
      case 81:
      case 82:
      case 83:
      case 84:
      case 85:
      case 86:
      case 87:
      case 88:
      case 89:
      case 90:
      case 91:
      case 92:
      case 93:
      case 94:
      case 95:
      case 96:
      case 97:
      case 98:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 111:
      case 112:
      case 113:
      case 114:
      case 115:
      case 116:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
      case 123:
      case 124:
      case 125:
      case 126:
      case 127:
      case 128:
      case 129:
      case 130:
      case 131:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 201:
      case 202:
      case 250:
      case 251:
      case 252:
      case 253:
      case 254:
      case 255:
      case 256:
      case 257:
      case 258:
      case 259:
      case 260:
      case 261:
      case 262:
      case 263:
      case 264:
      case 265:
      case 266:
      case 267:
      case 268:
      case 301:
      case 302:
      case 303:
      case 304:
      case 305:
      case 306:
      case 401:
      case 402:
      case 403:
      case 404:
      case 501:
      case 502:
      case 503:
      case 504:
      case 505:
      case 506:
      case 507:
      case 508:
      case 509:
      case 510:
      case 511:
      case 601:
      case 602:
      case 603:
      case 604:
      case 605:
      case 606:
      case 607:
      case 608:
      case 609:
      case 610:
      case 611:
      case 612:
      case 613:
      case 614:
      case 615:
      case 616:
      case 617:
      case 618:
      case 619:
      case 620:
      case 621:
      case 622:
      case 623:
      case 624:
      case 625:
      case 626:
      case 627:
      case 628:
      case 629:
      case 630:
      case 631:
      case 632:
      case 633:
      case 634:
      case 635:
      case 636:
      case 637:
      case 638:
      case 639:
      case 640:
      case 641:
      case 642:
      case 643:
      case 644:
      case 645:
      case 646:
      case 647:
      case 648:
      case 649:
      case 650:
      case 651:
      case 652:
      case 653:
      case 654:
      case 655:
      case 656:
      case 657:
      case 658:
      case 659:
      case 660:
      case 661:
      case 662:
      case 663:
      case 664:
      case 665:
      case 666:
      case 667:
      case 668:
      case 669:
      case 670:
      case 671:
      case 672:
      case 673:
      case 674:
      case 675:
      case 676:
      case 677:
      case 678:
      case 679:
      case 680:
      case 681:
      case 682:
      case 683:
      case 684:
      case 685:
      case 686:
      case 687:
      case 688:
      case 689:
      case 690:
      case 691:
      case 692:
      case 693:
      case 694:
      case 695:
      case 696:
      case 697:
      case 698:
      case 699:
      case 701:
      case 702:
      case 703:
      case 704:
      case 705:
      case 706:
      case 707:
      case 708:
      case 709:
      case 710:
      case 711:
      case 712:
      case 713:
      case 714:
      case 715:
      case 716:
      case 717:
      case 718:
      case 719:
      case 720:
      case 721:
      case 722:
      case 723:
      case 724:
      case 725:
      case 726:
      case 727:
      case 728:
      case 729:
      case 730:
      case 731:
      case 732:
      case 733:
      case 734:
      case 735:
      case 736:
      case 737:
      case 738:
      case 739:
      case 740:
      case 741:
      case 742:
      case 743:
      case 801:
      case 802:
      case 803:
      case 804:
      case 805:
        return result;
      case 143:
      case 144:
      case 145:
      case 146:
      case 147:
      case 148:
      case 149:
      case 150:
      case 151:
      case 152:
      case 153:
      case 154:
      case 155:
      case 156:
      case 157:
      case 158:
      case 159:
      case 160:
      case 161:
      case 162:
      case 163:
      case 164:
      case 165:
      case 166:
      case 167:
      case 168:
      case 169:
      case 170:
      case 171:
      case 172:
      case 173:
      case 174:
      case 175:
      case 176:
      case 177:
      case 178:
      case 179:
      case 180:
      case 181:
      case 182:
      case 183:
      case 184:
      case 185:
      case 186:
      case 187:
      case 188:
      case 189:
      case 190:
      case 191:
      case 192:
      case 193:
      case 194:
      case 195:
      case 196:
      case 197:
      case 198:
      case 199:
      case 200:
      case 203:
      case 204:
      case 205:
      case 206:
      case 207:
      case 208:
      case 209:
      case 210:
      case 211:
      case 212:
      case 213:
      case 214:
      case 215:
      case 216:
      case 217:
      case 218:
      case 219:
      case 220:
      case 221:
      case 222:
      case 223:
      case 224:
      case 225:
      case 226:
      case 227:
      case 228:
      case 229:
      case 230:
      case 231:
      case 232:
      case 233:
      case 234:
      case 235:
      case 236:
      case 237:
      case 238:
      case 239:
      case 240:
      case 241:
      case 242:
      case 243:
      case 244:
      case 245:
      case 246:
      case 247:
      case 248:
      case 249:
      case 269:
      case 270:
      case 271:
      case 272:
      case 273:
      case 274:
      case 275:
      case 276:
      case 277:
      case 278:
      case 279:
      case 280:
      case 281:
      case 282:
      case 283:
      case 284:
      case 285:
      case 286:
      case 287:
      case 288:
      case 289:
      case 290:
      case 291:
      case 292:
      case 293:
      case 294:
      case 295:
      case 296:
      case 297:
      case 298:
      case 299:
      case 300:
      case 307:
      case 308:
      case 309:
      case 310:
      case 311:
      case 312:
      case 313:
      case 314:
      case 315:
      case 316:
      case 317:
      case 318:
      case 319:
      case 320:
      case 321:
      case 322:
      case 323:
      case 324:
      case 325:
      case 326:
      case 327:
      case 328:
      case 329:
      case 330:
      case 331:
      case 332:
      case 333:
      case 334:
      case 335:
      case 336:
      case 337:
      case 338:
      case 339:
      case 340:
      case 341:
      case 342:
      case 343:
      case 344:
      case 345:
      case 346:
      case 347:
      case 348:
      case 349:
      case 350:
      case 351:
      case 352:
      case 353:
      case 354:
      case 355:
      case 356:
      case 357:
      case 358:
      case 359:
      case 360:
      case 361:
      case 362:
      case 363:
      case 364:
      case 365:
      case 366:
      case 367:
      case 368:
      case 369:
      case 370:
      case 371:
      case 372:
      case 373:
      case 374:
      case 375:
      case 376:
      case 377:
      case 378:
      case 379:
      case 380:
      case 381:
      case 382:
      case 383:
      case 384:
      case 385:
      case 386:
      case 387:
      case 388:
      case 389:
      case 390:
      case 391:
      case 392:
      case 393:
      case 394:
      case 395:
      case 396:
      case 397:
      case 398:
      case 399:
      case 400:
      case 405:
      case 406:
      case 407:
      case 408:
      case 409:
      case 410:
      case 411:
      case 412:
      case 413:
      case 414:
      case 415:
      case 416:
      case 417:
      case 418:
      case 419:
      case 420:
      case 421:
      case 422:
      case 423:
      case 424:
      case 425:
      case 426:
      case 427:
      case 428:
      case 429:
      case 430:
      case 431:
      case 432:
      case 433:
      case 434:
      case 435:
      case 436:
      case 437:
      case 438:
      case 439:
      case 440:
      case 441:
      case 442:
      case 443:
      case 444:
      case 445:
      case 446:
      case 447:
      case 448:
      case 449:
      case 450:
      case 451:
      case 452:
      case 453:
      case 454:
      case 455:
      case 456:
      case 457:
      case 458:
      case 459:
      case 460:
      case 461:
      case 462:
      case 463:
      case 464:
      case 465:
      case 466:
      case 467:
      case 468:
      case 469:
      case 470:
      case 471:
      case 472:
      case 473:
      case 474:
      case 475:
      case 476:
      case 477:
      case 478:
      case 479:
      case 480:
      case 481:
      case 482:
      case 483:
      case 484:
      case 485:
      case 486:
      case 487:
      case 488:
      case 489:
      case 490:
      case 491:
      case 492:
      case 493:
      case 494:
      case 495:
      case 496:
      case 497:
      case 498:
      case 499:
      case 500:
      case 512:
      case 513:
      case 514:
      case 515:
      case 516:
      case 517:
      case 518:
      case 519:
      case 520:
      case 521:
      case 522:
      case 523:
      case 524:
      case 525:
      case 526:
      case 527:
      case 528:
      case 529:
      case 530:
      case 531:
      case 532:
      case 533:
      case 534:
      case 535:
      case 536:
      case 537:
      case 538:
      case 539:
      case 540:
      case 541:
      case 542:
      case 543:
      case 544:
      case 545:
      case 546:
      case 547:
      case 548:
      case 549:
      case 550:
      case 551:
      case 552:
      case 553:
      case 554:
      case 555:
      case 556:
      case 557:
      case 558:
      case 559:
      case 560:
      case 561:
      case 562:
      case 563:
      case 564:
      case 565:
      case 566:
      case 567:
      case 568:
      case 569:
      case 570:
      case 571:
      case 572:
      case 573:
      case 574:
      case 575:
      case 576:
      case 577:
      case 578:
      case 579:
      case 580:
      case 581:
      case 582:
      case 583:
      case 584:
      case 585:
      case 586:
      case 587:
      case 588:
      case 589:
      case 590:
      case 591:
      case 592:
      case 593:
      case 594:
      case 595:
      case 596:
      case 597:
      case 598:
      case 599:
      case 600:
      case 700:
      case 744:
      case 745:
      case 746:
      case 747:
      case 748:
      case 749:
      case 750:
      case 751:
      case 752:
      case 753:
      case 754:
      case 755:
      case 756:
      case 757:
      case 758:
      case 759:
      case 760:
      case 761:
      case 762:
      case 763:
      case 764:
      case 765:
      case 766:
      case 767:
      case 768:
      case 769:
      case 770:
      case 771:
      case 772:
      case 773:
      case 774:
      case 775:
      case 776:
      case 777:
      case 778:
      case 779:
      case 780:
      case 781:
      case 782:
      case 783:
      case 784:
      case 785:
      case 786:
      case 787:
      case 788:
      case 789:
      case 790:
      case 791:
      case 792:
      case 793:
      case 794:
      case 795:
      case 796:
      case 797:
      case 798:
      case 799:
      case 800:
        return 0;
      default:
        if ((a1 - 901) >= 2) {
          return 0;
        }
        break;
    }
  }
  return result;
}

uint64_t sub_135691C(int a1)
{
  uint64_t result = 1;
  if (a1 <= 3000)
  {
    switch(a1)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 65:
      case 66:
      case 67:
      case 68:
      case 69:
      case 70:
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 80:
      case 81:
      case 82:
      case 83:
      case 84:
      case 85:
      case 86:
      case 87:
      case 88:
      case 89:
      case 90:
      case 91:
      case 92:
      case 93:
      case 94:
      case 95:
      case 96:
      case 97:
      case 98:
      case 99:
      case 100:
      case 101:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 111:
      case 112:
      case 113:
      case 114:
      case 115:
      case 116:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
      case 123:
      case 124:
      case 125:
      case 126:
      case 127:
      case 128:
      case 129:
      case 130:
      case 131:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 144:
      case 145:
      case 146:
      case 147:
      case 148:
      case 149:
      case 150:
      case 151:
      case 152:
      case 153:
      case 154:
      case 155:
      case 156:
      case 157:
      case 158:
      case 159:
      case 160:
      case 161:
      case 162:
      case 163:
      case 164:
      case 165:
      case 166:
      case 167:
      case 168:
      case 169:
      case 170:
      case 171:
      case 172:
      case 173:
      case 174:
      case 175:
      case 176:
      case 177:
      case 178:
      case 179:
      case 180:
      case 181:
      case 182:
      case 183:
      case 184:
      case 185:
      case 186:
      case 187:
      case 188:
      case 189:
      case 190:
      case 191:
      case 192:
      case 193:
      case 194:
      case 195:
      case 196:
      case 197:
      case 198:
      case 199:
      case 200:
      case 201:
      case 202:
      case 203:
      case 204:
      case 205:
      case 206:
      case 207:
      case 208:
      case 209:
      case 210:
      case 211:
      case 212:
      case 213:
      case 214:
      case 215:
      case 216:
      case 217:
      case 218:
      case 219:
      case 220:
      case 221:
      case 222:
      case 223:
      case 224:
      case 225:
      case 226:
      case 227:
      case 228:
      case 229:
      case 230:
      case 231:
      case 232:
      case 233:
      case 234:
      case 235:
      case 236:
      case 237:
      case 238:
      case 239:
      case 240:
      case 241:
      case 242:
      case 243:
      case 244:
      case 245:
      case 246:
      case 247:
      case 248:
      case 249:
      case 250:
      case 251:
      case 252:
      case 253:
      case 254:
      case 255:
      case 256:
      case 257:
      case 258:
      case 259:
      case 260:
      case 261:
      case 262:
      case 263:
      case 264:
      case 265:
      case 266:
      case 267:
      case 268:
      case 269:
      case 270:
      case 271:
      case 272:
      case 273:
      case 274:
      case 275:
      case 276:
      case 277:
      case 278:
      case 279:
      case 280:
      case 281:
      case 282:
      case 283:
      case 284:
      case 285:
      case 286:
      case 287:
      case 288:
      case 289:
      case 290:
      case 291:
      case 292:
      case 293:
      case 294:
      case 295:
      case 296:
      case 297:
      case 298:
      case 299:
      case 300:
      case 301:
      case 302:
      case 303:
      case 304:
      case 305:
      case 306:
      case 307:
      case 308:
      case 309:
      case 310:
      case 311:
      case 312:
      case 313:
      case 314:
      case 315:
      case 316:
      case 317:
      case 318:
      case 319:
      case 320:
      case 321:
      case 322:
      case 323:
      case 324:
      case 325:
      case 326:
      case 327:
      case 328:
      case 329:
      case 330:
      case 331:
      case 332:
      case 333:
      case 334:
      case 335:
      case 336:
      case 337:
      case 338:
      case 339:
      case 340:
      case 341:
      case 342:
      case 343:
      case 344:
      case 345:
      case 356:
      case 357:
      case 358:
      case 359:
      case 360:
      case 361:
      case 362:
      case 363:
      case 364:
      case 365:
      case 366:
      case 367:
      case 368:
      case 369:
      case 370:
      case 371:
      case 372:
      case 373:
      case 374:
      case 375:
      case 376:
      case 377:
      case 378:
      case 379:
      case 380:
      case 381:
      case 382:
      case 383:
      case 384:
      case 385:
      case 386:
      case 387:
      case 388:
      case 389:
      case 390:
      case 391:
      case 392:
      case 393:
      case 394:
      case 395:
      case 396:
      case 397:
      case 398:
      case 399:
      case 400:
      case 401:
      case 402:
      case 403:
      case 404:
      case 405:
      case 406:
      case 407:
      case 408:
      case 409:
      case 410:
      case 411:
      case 412:
      case 413:
      case 414:
      case 415:
      case 416:
      case 417:
      case 418:
      case 419:
      case 420:
      case 421:
      case 422:
      case 423:
      case 424:
      case 425:
      case 426:
      case 427:
      case 428:
      case 429:
      case 430:
      case 431:
      case 432:
      case 433:
      case 434:
      case 435:
      case 436:
      case 437:
      case 438:
      case 439:
      case 440:
      case 441:
      case 442:
      case 443:
      case 444:
      case 445:
      case 446:
      case 447:
      case 448:
      case 449:
      case 450:
      case 451:
      case 452:
      case 453:
      case 454:
      case 455:
      case 456:
      case 457:
      case 458:
      case 459:
      case 460:
      case 461:
      case 462:
      case 463:
      case 464:
      case 465:
      case 466:
      case 467:
      case 468:
      case 469:
      case 470:
      case 471:
      case 472:
      case 473:
      case 474:
      case 475:
      case 476:
      case 477:
      case 478:
      case 479:
      case 480:
      case 481:
      case 482:
      case 483:
      case 484:
      case 485:
      case 486:
      case 1001:
      case 1002:
      case 1003:
      case 1004:
      case 1010:
      case 1011:
      case 1017:
      case 1018:
      case 1020:
      case 1030:
      case 1031:
      case 1032:
      case 1033:
      case 1034:
      case 1035:
      case 1036:
      case 1037:
      case 1038:
      case 1039:
      case 1040:
      case 1041:
      case 1042:
      case 1043:
      case 1044:
      case 1045:
      case 1046:
      case 1047:
      case 1048:
      case 1049:
      case 1050:
      case 1051:
      case 1052:
      case 1053:
      case 1054:
      case 1055:
      case 1056:
      case 1057:
      case 1058:
      case 1059:
      case 1060:
      case 1061:
      case 1062:
      case 1063:
      case 1064:
      case 1065:
        return result;
      case 9:
      case 346:
      case 347:
      case 348:
      case 349:
      case 350:
      case 351:
      case 352:
      case 353:
      case 354:
      case 355:
      case 487:
      case 488:
      case 489:
      case 490:
      case 491:
      case 492:
      case 493:
      case 494:
      case 495:
      case 496:
      case 497:
      case 498:
      case 499:
      case 500:
      case 501:
      case 502:
      case 503:
      case 504:
      case 505:
      case 506:
      case 507:
      case 508:
      case 509:
      case 510:
      case 511:
      case 512:
      case 513:
      case 514:
      case 515:
      case 516:
      case 517:
      case 518:
      case 519:
      case 520:
      case 521:
      case 522:
      case 523:
      case 524:
      case 525:
      case 526:
      case 527:
      case 528:
      case 529:
      case 530:
      case 531:
      case 532:
      case 533:
      case 534:
      case 535:
      case 536:
      case 537:
      case 538:
      case 539:
      case 540:
      case 541:
      case 542:
      case 543:
      case 544:
      case 545:
      case 546:
      case 547:
      case 548:
      case 549:
      case 550:
      case 551:
      case 552:
      case 553:
      case 554:
      case 555:
      case 556:
      case 557:
      case 558:
      case 559:
      case 560:
      case 561:
      case 562:
      case 563:
      case 564:
      case 565:
      case 566:
      case 567:
      case 568:
      case 569:
      case 570:
      case 571:
      case 572:
      case 573:
      case 574:
      case 575:
      case 576:
      case 577:
      case 578:
      case 579:
      case 580:
      case 581:
      case 582:
      case 583:
      case 584:
      case 585:
      case 586:
      case 587:
      case 588:
      case 589:
      case 590:
      case 591:
      case 592:
      case 593:
      case 594:
      case 595:
      case 596:
      case 597:
      case 598:
      case 599:
      case 600:
      case 601:
      case 602:
      case 603:
      case 604:
      case 605:
      case 606:
      case 607:
      case 608:
      case 609:
      case 610:
      case 611:
      case 612:
      case 613:
      case 614:
      case 615:
      case 616:
      case 617:
      case 618:
      case 619:
      case 620:
      case 621:
      case 622:
      case 623:
      case 624:
      case 625:
      case 626:
      case 627:
      case 628:
      case 629:
      case 630:
      case 631:
      case 632:
      case 633:
      case 634:
      case 635:
      case 636:
      case 637:
      case 638:
      case 639:
      case 640:
      case 641:
      case 642:
      case 643:
      case 644:
      case 645:
      case 646:
      case 647:
      case 648:
      case 649:
      case 650:
      case 651:
      case 652:
      case 653:
      case 654:
      case 655:
      case 656:
      case 657:
      case 658:
      case 659:
      case 660:
      case 661:
      case 662:
      case 663:
      case 664:
      case 665:
      case 666:
      case 667:
      case 668:
      case 669:
      case 670:
      case 671:
      case 672:
      case 673:
      case 674:
      case 675:
      case 676:
      case 677:
      case 678:
      case 679:
      case 680:
      case 681:
      case 682:
      case 683:
      case 684:
      case 685:
      case 686:
      case 687:
      case 688:
      case 689:
      case 690:
      case 691:
      case 692:
      case 693:
      case 694:
      case 695:
      case 696:
      case 697:
      case 698:
      case 699:
      case 700:
      case 701:
      case 702:
      case 703:
      case 704:
      case 705:
      case 706:
      case 707:
      case 708:
      case 709:
      case 710:
      case 711:
      case 712:
      case 713:
      case 714:
      case 715:
      case 716:
      case 717:
      case 718:
      case 719:
      case 720:
      case 721:
      case 722:
      case 723:
      case 724:
      case 725:
      case 726:
      case 727:
      case 728:
      case 729:
      case 730:
      case 731:
      case 732:
      case 733:
      case 734:
      case 735:
      case 736:
      case 737:
      case 738:
      case 739:
      case 740:
      case 741:
      case 742:
      case 743:
      case 744:
      case 745:
      case 746:
      case 747:
      case 748:
      case 749:
      case 750:
      case 751:
      case 752:
      case 753:
      case 754:
      case 755:
      case 756:
      case 757:
      case 758:
      case 759:
      case 760:
      case 761:
      case 762:
      case 763:
      case 764:
      case 765:
      case 766:
      case 767:
      case 768:
      case 769:
      case 770:
      case 771:
      case 772:
      case 773:
      case 774:
      case 775:
      case 776:
      case 777:
      case 778:
      case 779:
      case 780:
      case 781:
      case 782:
      case 783:
      case 784:
      case 785:
      case 786:
      case 787:
      case 788:
      case 789:
      case 790:
      case 791:
      case 792:
      case 793:
      case 794:
      case 795:
      case 796:
      case 797:
      case 798:
      case 799:
      case 800:
      case 801:
      case 802:
      case 803:
      case 804:
      case 805:
      case 806:
      case 807:
      case 808:
      case 809:
      case 810:
      case 811:
      case 812:
      case 813:
      case 814:
      case 815:
      case 816:
      case 817:
      case 818:
      case 819:
      case 820:
      case 821:
      case 822:
      case 823:
      case 824:
      case 825:
      case 826:
      case 827:
      case 828:
      case 829:
      case 830:
      case 831:
      case 832:
      case 833:
      case 834:
      case 835:
      case 836:
      case 837:
      case 838:
      case 839:
      case 840:
      case 841:
      case 842:
      case 843:
      case 844:
      case 845:
      case 846:
      case 847:
      case 848:
      case 849:
      case 850:
      case 851:
      case 852:
      case 853:
      case 854:
      case 855:
      case 856:
      case 857:
      case 858:
      case 859:
      case 860:
      case 861:
      case 862:
      case 863:
      case 864:
      case 865:
      case 866:
      case 867:
      case 868:
      case 869:
      case 870:
      case 871:
      case 872:
      case 873:
      case 874:
      case 875:
      case 876:
      case 877:
      case 878:
      case 879:
      case 880:
      case 881:
      case 882:
      case 883:
      case 884:
      case 885:
      case 886:
      case 887:
      case 888:
      case 889:
      case 890:
      case 891:
      case 892:
      case 893:
      case 894:
      case 895:
      case 896:
      case 897:
      case 898:
      case 899:
      case 900:
      case 901:
      case 902:
      case 903:
      case 904:
      case 905:
      case 906:
      case 907:
      case 908:
      case 909:
      case 910:
      case 911:
      case 912:
      case 913:
      case 914:
      case 915:
      case 916:
      case 917:
      case 918:
      case 919:
      case 920:
      case 921:
      case 922:
      case 923:
      case 924:
      case 925:
      case 926:
      case 927:
      case 928:
      case 929:
      case 930:
      case 931:
      case 932:
      case 933:
      case 934:
      case 935:
      case 936:
      case 937:
      case 938:
      case 939:
      case 940:
      case 941:
      case 942:
      case 943:
      case 944:
      case 945:
      case 946:
      case 947:
      case 948:
      case 949:
      case 950:
      case 951:
      case 952:
      case 953:
      case 954:
      case 955:
      case 956:
      case 957:
      case 958:
      case 959:
      case 960:
      case 961:
      case 962:
      case 963:
      case 964:
      case 965:
      case 966:
      case 967:
      case 968:
      case 969:
      case 970:
      case 971:
      case 972:
      case 973:
      case 974:
      case 975:
      case 976:
      case 977:
      case 978:
      case 979:
      case 980:
      case 981:
      case 982:
      case 983:
      case 984:
      case 985:
      case 986:
      case 987:
      case 988:
      case 989:
      case 990:
      case 991:
      case 992:
      case 993:
      case 994:
      case 995:
      case 996:
      case 997:
      case 998:
      case 999:
      case 1000:
      case 1005:
      case 1006:
      case 1007:
      case 1008:
      case 1009:
      case 1012:
      case 1013:
      case 1014:
      case 1015:
      case 1016:
      case 1019:
      case 1021:
      case 1022:
      case 1023:
      case 1024:
      case 1025:
      case 1026:
      case 1027:
      case 1028:
      case 1029:
        return 0;
      default:
        if ((a1 - 2030) >= 0xAB && (a1 - 2001) >= 0x1B) {
          return 0;
        }
        break;
    }
    return result;
  }
  if (a1 > 9000)
  {
    if (a1 > 12000)
    {
      if (a1 <= 16000)
      {
        if (a1 > 14000)
        {
          if ((a1 - 14001) < 9 || (a1 - 15001) < 3) {
            return result;
          }
        }
        else if ((a1 - 12001) < 0xA || (a1 - 13001) < 7)
        {
          return result;
        }
      }
      else if ((a1 - 17001) < 0x6C || a1 == 16001 || a1 == 90010)
      {
        return result;
      }
      return 0;
    }
    if (a1 > 10100)
    {
      if ((a1 - 10101) < 0x5B || (a1 - 11001) < 0x1D) {
        return result;
      }
      return 0;
    }
    uint64_t v5 = (a1 - 9001);
    if (v5 <= 0x27 && v5 != 9) {
      return result;
    }
    unsigned int v4 = a1 - 9101;
LABEL_27:
    if (v4 < 6) {
      return result;
    }
    return 0;
  }
  if (a1 <= 6002)
  {
    if ((a1 - 3001) < 0x58) {
      return result;
    }
    uint64_t v3 = (a1 - 5001);
    if (v3 <= 0x26 && v3 != 14) {
      return result;
    }
    unsigned int v4 = a1 - 4001;
    goto LABEL_27;
  }
  switch(a1)
  {
    case 6003:
    case 6004:
    case 6005:
    case 6006:
    case 6007:
    case 6008:
    case 6009:
    case 6010:
    case 6011:
    case 6012:
    case 6013:
    case 6015:
    case 6016:
    case 6018:
    case 6019:
    case 6020:
    case 6021:
    case 6022:
    case 6023:
    case 6024:
    case 6025:
    case 6026:
    case 6027:
    case 6029:
    case 6031:
    case 6032:
    case 6033:
    case 6034:
    case 6036:
    case 6037:
    case 6038:
    case 6039:
    case 6040:
    case 6041:
    case 6042:
    case 6043:
    case 6044:
    case 6045:
    case 6046:
    case 6047:
    case 6048:
    case 6049:
    case 6050:
    case 6051:
    case 6052:
    case 6053:
    case 6054:
    case 6055:
    case 6056:
    case 6057:
    case 6058:
    case 6059:
    case 6060:
    case 6061:
    case 6062:
    case 6063:
    case 6064:
    case 6065:
    case 6066:
    case 6067:
    case 6068:
    case 6069:
    case 6070:
    case 6071:
    case 6072:
    case 6073:
    case 6074:
    case 6075:
    case 6076:
    case 6077:
    case 6078:
    case 6079:
    case 6080:
    case 6081:
    case 6082:
    case 6083:
    case 6084:
    case 6085:
    case 6086:
    case 6087:
    case 6088:
    case 6089:
    case 6090:
    case 6091:
    case 6092:
    case 6093:
    case 6094:
    case 6095:
    case 6096:
    case 6097:
    case 6098:
    case 6099:
    case 6100:
    case 6101:
    case 6102:
    case 6103:
    case 6104:
    case 6105:
    case 6106:
    case 6107:
    case 6108:
    case 6109:
    case 6110:
    case 6111:
      return result;
    case 6014:
    case 6017:
    case 6028:
    case 6030:
    case 6035:
      return 0;
    default:
      if ((a1 - 7001) >= 0x1E && (a1 - 8001) >= 0xB) {
        return 0;
      }
      break;
  }
  return result;
}

uint64_t sub_1357D68(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 168);
  if (*(uint64_t **)(a1 + 168) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1369744((void *)(a1 + 144));
  sub_13696C4((void *)(a1 + 120));
  sub_1369644((void *)(a1 + 96));
  sub_13695C4((void *)(a1 + 72));
  sub_1369544((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1357E4C(uint64_t a1)
{
  sub_1357D68(a1);

  operator delete();
}

uint64_t sub_1357E84(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    unsigned int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1359BFC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_13608F4(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_1359D78(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 128);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_135C3DC(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 152);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_135DA78(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 152) = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v18 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v18 + 23) < 0)
    {
      **(unsigned char **)unint64_t v18 = 0;
      *(void *)(v18 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v18 = 0;
      *(unsigned char *)(v18 + 23) = 0;
    }
  }
  char v20 = *(unsigned char *)(a1 + 8);
  uint64_t v19 = a1 + 8;
  *(unsigned char *)(v19 + 168) = 0;
  *(_DWORD *)(v19 + 8) = 0;
  if (v20)
  {
    return sub_188B4AC((uint64_t *)v19);
  }
  return result;
}

uint64_t sub_1357FE0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v61 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v61, a3[11].i32[1]))
  {
    int v60 = 0;
    goto LABEL_3;
  }
  int v60 = 0;
  uint64_t v6 = (uint64_t **)(a1 + 24);
  int v59 = (uint64_t *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)(*(void *)v61 + 1);
    unsigned int v8 = **(unsigned char **)v61;
    if ((char)**(unsigned char **)v61 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v61, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v61 + 2);
      }
    }
    *(void *)uint64_t v61 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_81;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (std::string *)sub_1880F84((void *)(a1 + 168), v12);
        uint64_t v14 = (void *)sub_188C244(v13, *(char **)v61, (uint64_t)a3);
        goto LABEL_88;
      case 2u:
        if (v8 != 18) {
          goto LABEL_81;
        }
        uint64_t v15 = v7 - 1;
        while (1)
        {
          uint64_t v16 = (char *)(v15 + 1);
          *(void *)uint64_t v61 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(std::string **)&v17[2 * v18 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *uint64_t v21 = v20;
            v21[1] = sub_3A6EDC;
            void *v20 = 0;
            v20[1] = 0;
            int v20[2] = 0;
            uint64_t v19 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v20);
            uint64_t v16 = *(char **)v61;
          }
          uint64_t v15 = sub_188C244(v19, v16, (uint64_t)a3);
          *(void *)uint64_t v61 = v15;
          if (!v15) {
            goto LABEL_96;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_89;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_81;
        }
        uint64_t v22 = v7 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)uint64_t v61 = v22 + 1;
          unint64_t v24 = *(_DWORD **)(a1 + 64);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 56) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            sub_1361EF8(*(void *)(a1 + 48));
            uint64_t v26 = sub_188CDC8(a1 + 48, v27);
            uint64_t v23 = *(unsigned __int8 **)v61;
          }
          uint64_t v22 = (char *)sub_13585E0(a3, v26, v23);
          *(void *)uint64_t v61 = v22;
          if (!v22) {
            goto LABEL_96;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 26) {
            goto LABEL_89;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_81;
        }
        uint64_t v28 = v7 - 1;
        while (1)
        {
          uint64_t v29 = (unsigned __int8 *)(v28 + 1);
          *(void *)uint64_t v61 = v28 + 1;
          uint64_t v30 = *(_DWORD **)(a1 + 88);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 80), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 80) = v31 + 1;
            uint64_t v32 = *(void *)&v30[2 * v31 + 2];
          }
          else
          {
            sub_13623F0(*(void *)(a1 + 72));
            uint64_t v32 = sub_188CDC8(a1 + 72, v33);
            uint64_t v29 = *(unsigned __int8 **)v61;
          }
          uint64_t v28 = (char *)sub_1358670(a3, v32, v29);
          *(void *)uint64_t v61 = v28;
          if (!v28) {
            goto LABEL_96;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 34) {
            goto LABEL_89;
          }
        }
      case 5u:
        if (v8 != 42) {
          goto LABEL_81;
        }
        uint64_t v34 = v7 - 1;
        while (1)
        {
          uint64_t v35 = (unsigned __int8 *)(v34 + 1);
          *(void *)uint64_t v61 = v34 + 1;
          unint64_t v36 = *(_DWORD **)(a1 + 112);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 104), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 104) = v37 + 1;
            uint64_t v38 = *(void *)&v36[2 * v37 + 2];
          }
          else
          {
            sub_1361F94(*(void *)(a1 + 96));
            uint64_t v38 = sub_188CDC8(a1 + 96, v39);
            uint64_t v35 = *(unsigned __int8 **)v61;
          }
          uint64_t v34 = sub_1358700(a3, v38, v35);
          *(void *)uint64_t v61 = v34;
          if (!v34) {
            goto LABEL_96;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 42) {
            goto LABEL_89;
          }
        }
      case 6u:
        if (v8 != 50) {
          goto LABEL_81;
        }
        uint64_t v40 = v7 - 1;
        while (1)
        {
          uint64_t v41 = (unsigned __int8 *)(v40 + 1);
          *(void *)uint64_t v61 = v40 + 1;
          char v42 = *(_DWORD **)(a1 + 136);
          if (v42 && (uint64_t v43 = *(int *)(a1 + 128), (int)v43 < *v42))
          {
            *(_DWORD *)(a1 + 128) = v43 + 1;
            uint64_t v44 = *(void *)&v42[2 * v43 + 2];
          }
          else
          {
            sub_1362028(*(void *)(a1 + 120));
            uint64_t v44 = sub_188CDC8(a1 + 120, v45);
            uint64_t v41 = *(unsigned __int8 **)v61;
          }
          uint64_t v40 = (char *)sub_1358790(a3, v44, v41);
          *(void *)uint64_t v61 = v40;
          if (!v40) {
            goto LABEL_96;
          }
          if (*(void *)a3 <= (unint64_t)v40 || *v40 != 50) {
            goto LABEL_89;
          }
        }
      case 7u:
        if (v8 != 58) {
          goto LABEL_81;
        }
        uint64_t v46 = v7 - 1;
        while (1)
        {
          int v47 = (unsigned __int8 *)(v46 + 1);
          *(void *)uint64_t v61 = v46 + 1;
          uint64_t v48 = *(_DWORD **)(a1 + 160);
          if (v48 && (uint64_t v49 = *(int *)(a1 + 152), (int)v49 < *v48))
          {
            *(_DWORD *)(a1 + 152) = v49 + 1;
            uint64_t v50 = *(void *)&v48[2 * v49 + 2];
          }
          else
          {
            uint64_t v51 = sub_13620C4(*(void *)(a1 + 144));
            uint64_t v50 = sub_188CDC8(a1 + 144, (uint64_t)v51);
            int v47 = *(unsigned __int8 **)v61;
          }
          uint64_t v46 = sub_1358820(a3, v50, v47);
          *(void *)uint64_t v61 = v46;
          if (!v46) {
            goto LABEL_96;
          }
          if (*(void *)a3 <= (unint64_t)v46 || *v46 != 58) {
            goto LABEL_89;
          }
        }
      case 8u:
        if (v8 != 64) {
          goto LABEL_81;
        }
        v60 |= 2u;
        int v52 = v7 + 1;
        uint64_t v53 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_80;
        }
        int v54 = *v52;
        uint64_t v53 = v53 + (v54 << 7) - 128;
        if (v54 < 0)
        {
          uint64_t v57 = sub_188C138((uint64_t)v7, v53);
          *(void *)uint64_t v61 = v57;
          *(unsigned char *)(a1 + 176) = v58 != 0;
          if (!v57) {
            goto LABEL_96;
          }
        }
        else
        {
          int v52 = v7 + 2;
LABEL_80:
          *(void *)uint64_t v61 = v52;
          *(unsigned char *)(a1 + 176) = v53 != 0;
        }
        goto LABEL_89;
      default:
LABEL_81:
        if (v8) {
          BOOL v55 = (v8 & 7) == 4;
        }
        else {
          BOOL v55 = 1;
        }
        if (!v55)
        {
          if (*v59)
          {
            uint64_t v56 = (std::string *)((*v59 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v56 = (std::string *)sub_188DBD8(v59);
            int v7 = *(char **)v61;
          }
          uint64_t v14 = sub_1885AC0(v8, v56, v7, a3);
LABEL_88:
          *(void *)uint64_t v61 = v14;
          if (!v14) {
            goto LABEL_96;
          }
LABEL_89:
          if (sub_11947B8((uint64_t)a3, (char **)v61, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_96:
        }
          *(void *)uint64_t v61 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 16) |= v60;
        return *(void *)v61;
    }
  }
}

uint64_t sub_13585E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1359DC8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1358670(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1360A68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1358700(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_135B478(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1358790(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_135C608(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1358820(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_135DA9C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13588B0(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  unsigned int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unsigned int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 32);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      unsigned int v4 = (unsigned char *)sub_125CE58(a3, 2, *(void *)(*(void *)(a1 + 40) + v8 + 8), v4);
      v8 += 8;
    }
    while (v9 != v8);
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unsigned int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      unsigned int v4 = sub_135A5F0(v12, (unint64_t)v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 80);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        unsigned int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      unsigned char *v4 = 34;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      unsigned int v4 = sub_136117C(v17, (unint64_t)v19, a3);
    }
  }
  int v20 = *(_DWORD *)(a1 + 104);
  if (v20)
  {
    for (int k = 0; k != v20; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        unsigned int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v22 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      unsigned char *v4 = 42;
      unsigned int v23 = *(_DWORD *)(v22 + 20);
      v4[1] = v23;
      if (v23 > 0x7F) {
        unint64_t v24 = sub_188A9CC(v23, v4 + 1);
      }
      else {
        unint64_t v24 = v4 + 2;
      }
      unsigned int v4 = sub_135BA80(v22, (unint64_t)v24, a3);
    }
  }
  int v25 = *(_DWORD *)(a1 + 128);
  if (v25)
  {
    for (int m = 0; m != v25; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        unsigned int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      unsigned char *v4 = 50;
      unsigned int v28 = *(_DWORD *)(v27 + 20);
      v4[1] = v28;
      if (v28 > 0x7F) {
        uint64_t v29 = sub_188A9CC(v28, v4 + 1);
      }
      else {
        uint64_t v29 = v4 + 2;
      }
      unsigned int v4 = sub_135CD88(v27, v29, a3);
    }
  }
  int v30 = *(_DWORD *)(a1 + 152);
  if (v30)
  {
    for (int n = 0; n != v30; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        unsigned int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 160) + 8 * n + 8);
      unsigned char *v4 = 58;
      unsigned int v33 = *(_DWORD *)(v32 + 20);
      v4[1] = v33;
      if (v33 > 0x7F) {
        uint64_t v34 = sub_188A9CC(v33, v4 + 1);
      }
      else {
        uint64_t v34 = v4 + 2;
      }
      unsigned int v4 = sub_135DD9C(v32, (unint64_t)v34, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unsigned int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v35 = *(unsigned char *)(a1 + 176);
    unsigned char *v4 = 64;
    v4[1] = v35;
    v4 += 2;
  }
  uint64_t v36 = *(void *)(a1 + 8);
  if ((v36 & 1) == 0) {
    return v4;
  }
  unint64_t v38 = v36 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v38 + 31) < 0)
  {
    uint64_t v39 = *(void **)(v38 + 8);
    uint64_t v40 = *(void *)(v38 + 16);
  }
  else
  {
    uint64_t v39 = (void *)(v38 + 8);
    LODWORD(v40) = *(unsigned __int8 *)(v38 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v40)
  {
    uint64_t v41 = (int)v40;
    memcpy(v4, v39, (int)v40);
    v4 += v41;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v39, v40, v4);
}

uint64_t sub_1358CA0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_135AC54(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_136176C(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    int v25 = (uint64_t *)(v24 + 8);
  }
  else {
    int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      unint64_t v28 = sub_135C034(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 128);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *(void *)(a1 + 136);
  if (v31) {
    uint64_t v32 = (uint64_t *)(v31 + 8);
  }
  else {
    uint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_135D2E4(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *(int *)(a1 + 152);
  uint64_t v37 = v30 + v36;
  uint64_t v38 = *(void *)(a1 + 160);
  if (v38) {
    uint64_t v39 = (uint64_t *)(v38 + 8);
  }
  else {
    uint64_t v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      uint64_t v41 = *v39++;
      uint64_t v42 = sub_135DF7C(v41);
      v37 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      v40 -= 8;
    }
    while (v40);
  }
  int v43 = *(_DWORD *)(a1 + 16);
  if ((v43 & 3) != 0)
  {
    if (v43)
    {
      unint64_t v44 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v45 = *(unsigned __int8 *)(v44 + 23);
      uint64_t v46 = *(void *)(v44 + 8);
      if ((v45 & 0x80u) == 0) {
        uint64_t v46 = v45;
      }
      v37 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v43 & 2) != 0) {
      v37 += 2;
    }
  }
  uint64_t v47 = *(void *)(a1 + 8);
  if (v47)
  {
    unint64_t v49 = v47 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v49 + 31) < 0) {
      uint64_t v50 = *(void *)(v49 + 16);
    }
    else {
      uint64_t v50 = *(unsigned __int8 *)(v49 + 31);
    }
    v37 += v50;
  }
  *(_DWORD *)(a1 + 20) = v37;
  return v37;
}

void sub_1358F48(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_13697C4((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1369850((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    unsigned int v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *unsigned int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_13698DC((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    int v25 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_1369968((uint64_t *)(a1 + 120), v26, v25, v24, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v27 = *(_DWORD *)(a1 + 128) + v24;
    *(_DWORD *)(a1 + 128) = v27;
    unint64_t v28 = *(int **)(a1 + 136);
    if (*v28 < v27) {
      *unint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 152);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_13699F4((std::string *)(a1 + 144), v31, v30, v29, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v32 = *(_DWORD *)(a1 + 152) + v29;
    *(_DWORD *)(a1 + 152) = v32;
    uint64_t v33 = *(int **)(a1 + 160);
    if (*v33 < v32) {
      *uint64_t v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 16);
  if ((v34 & 3) != 0)
  {
    if (v34)
    {
      uint64_t v35 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v36 = *(void *)(a1 + 8);
      uint64_t v37 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
      if (v36) {
        uint64_t v37 = (uint64_t *)*v37;
      }
      sub_1881DF4((std::string **)(a1 + 168), v35, v37);
    }
    if ((v34 & 2) != 0) {
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    }
    *(_DWORD *)(a1 + 16) |= v34;
  }
  uint64_t v38 = *(void *)(a2 + 8);
  if (v38)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v38 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1359264(uint64_t a1)
{
  return sub_135926C(a1 + 72);
}

uint64_t sub_135926C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 32);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_13BB038(*(void *)(*(void *)(v4 + 40) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_13592F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.DirectionsFeedback");
}

void *sub_1359308(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_135937C(void *a1)
{
  sub_1359308(a1);

  operator delete();
}

uint64_t sub_13593B4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13593D8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v34 + 2;
      }
    }
    int v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_29;
        }
        v5 |= 1u;
        int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          int v34 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_36;
        }
        uint64_t v26 = (char *)sub_188C0D0((uint64_t)v8, v13);
        int v34 = v26;
        *(_DWORD *)(a1 + 24) = v27;
        if (v26) {
          goto LABEL_36;
        }
        goto LABEL_49;
      case 2u:
        if (v9 != 16) {
          goto LABEL_29;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          unint64_t v28 = (char *)sub_188C0D0((uint64_t)v8, v16);
          int v34 = v28;
          *(_DWORD *)(a1 + 28) = v29;
          if (!v28) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          int v34 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 4u;
        unsigned int v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v30 = (char *)sub_188C0D0((uint64_t)v8, v19);
          int v34 = v30;
          *(_DWORD *)(a1 + 32) = v31;
          if (!v30) {
            goto LABEL_49;
          }
        }
        else
        {
          unsigned int v18 = v8 + 2;
LABEL_23:
          int v34 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v32 = (char *)sub_188C0D0((uint64_t)v8, v22);
          int v34 = v32;
          *(_DWORD *)(a1 + 36) = v33;
          if (!v32) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          int v34 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_36;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            int v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v34;
          }
          int v34 = (char *)sub_1885AC0(v9, v25, v8, a3);
          if (!v34) {
            goto LABEL_49;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_49:
        }
          int v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v34;
    }
  }
}

unsigned char *sub_13596B0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_135994C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0) {
LABEL_10:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1359A48()
{
  return 1;
}

void *sub_1359A50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.StepFeedback.EVStepFeedbackInfo");
}

void *sub_1359A60(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1359AE4((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1359AE4(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  uint64_t result = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2534180)
  {
    unint64_t v5 = *(void **)(a1 + 56);
    if (v5)
    {
      sub_135B3CC(v5);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 64);
    if (result)
    {
      sub_1359308(result);
      operator delete();
    }
  }
  return result;
}

void sub_1359BC4(void *a1)
{
  sub_1359A60(a1);

  operator delete();
}

uint64_t sub_1359BFC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_23;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_27:
    unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_31;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_35;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_23:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_27;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_27;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_31:
  unint64_t v8 = *(void *)(result + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_35;
    }
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  *(unsigned char *)unint64_t v8 = 0;
  *(unsigned char *)(v8 + 23) = 0;
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_35:
  uint64_t result = sub_1359D78(*(void *)(result + 56));
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    uint64_t result = sub_13593B4(*(void *)(v1 + 64));
LABEL_9:
  if ((v2 & 0xC0) != 0)
  {
    *(_DWORD *)(v1 + 80) = 0;
    *(void *)(v1 + 72) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 92) = 0;
    *(void *)(v1 + 84) = 0;
    *(_DWORD *)(v1 + 100) = 0;
  }
  if ((v2 & 0x30000) != 0)
  {
    *(_DWORD *)(v1 + 112) = 0;
    *(void *)(v1 + 104) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1359D78(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    *(void *)(a1 + 56) = 0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  if ((v1 & 0x3F00) != 0)
  {
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
    *(_DWORD *)(a1 + 80) = 0;
    *(void *)(a1 + 84) = -1;
    *(void *)(a1 + 96) = 0xBFF0000000000000;
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1359DC8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v81 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v81, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v81 + 1);
    unsigned int v9 = **(unsigned char **)v81;
    if ((char)**(unsigned char **)v81 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v81, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v81 + 2);
      }
    }
    *(void *)uint64_t v81 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_98;
        }
        v5 |= 0x80u;
        unsigned int v12 = (char *)(v8 + 1);
        int v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v81 = v12;
          *(_DWORD *)(a1 + 80) = v13;
          goto LABEL_96;
        }
        uint64_t v61 = sub_188C0D0((uint64_t)v8, v13);
        *(void *)uint64_t v81 = v61;
        *(_DWORD *)(a1 + 80) = v62;
        if (v61) {
          goto LABEL_96;
        }
        goto LABEL_132;
      case 2u:
        if (v9 != 17) {
          goto LABEL_98;
        }
        uint64_t v16 = *(void *)v8;
        unsigned int v15 = v8 + 8;
        v5 |= 0x40u;
        *(void *)(a1 + 72) = v16;
        goto LABEL_89;
      case 3u:
        if (v9 != 24) {
          goto LABEL_98;
        }
        v5 |= 0x200u;
        unsigned int v17 = (char *)(v8 + 1);
        uint64_t v18 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v19 = *v17;
        uint64_t v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v63 = sub_188C138((uint64_t)v8, v18);
          *(void *)uint64_t v81 = v63;
          *(unsigned char *)(a1 + 88) = v64 != 0;
          if (!v63) {
            goto LABEL_132;
          }
        }
        else
        {
          unsigned int v17 = (char *)(v8 + 2);
LABEL_20:
          *(void *)uint64_t v81 = v17;
          *(unsigned char *)(a1 + 88) = v18 != 0;
        }
        goto LABEL_96;
      case 4u:
        if (v9 != 34) {
          goto LABEL_98;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v20 = *(void *)(a1 + 8);
        unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          unint64_t v21 = (uint64_t *)*v21;
        }
        int v22 = (void *)(a1 + 24);
        goto LABEL_94;
      case 5u:
        if (v9 != 40) {
          goto LABEL_98;
        }
        v5 |= 0x100u;
        uint64_t v23 = (char *)(v8 + 1);
        int v24 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v25 = *v23;
        int v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v65 = sub_188C0D0((uint64_t)v8, v24);
          *(void *)uint64_t v81 = v65;
          *(_DWORD *)(a1 + 84) = v66;
          if (!v65) {
            goto LABEL_132;
          }
        }
        else
        {
          uint64_t v23 = (char *)(v8 + 2);
LABEL_29:
          *(void *)uint64_t v81 = v23;
          *(_DWORD *)(a1 + 84) = v24;
        }
        goto LABEL_96;
      case 6u:
        if (v9 != 50) {
          goto LABEL_98;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v26 = *(void *)(a1 + 56);
        if (!v26)
        {
          int v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v27 = (void *)*v27;
          }
          sub_1361F94((uint64_t)v27);
          uint64_t v26 = v28;
          *(void *)(a1 + 56) = v28;
          unint64_t v8 = *(unsigned __int8 **)v81;
        }
        int v29 = sub_1358700(a3, v26, v8);
        goto LABEL_95;
      case 7u:
        if (v9 != 56) {
          goto LABEL_98;
        }
        v5 |= 0x400u;
        uint64_t v30 = (char *)(v8 + 1);
        uint64_t v31 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v67 = sub_188C138((uint64_t)v8, v31);
          *(void *)uint64_t v81 = v67;
          *(unsigned char *)(a1 + 89) = v68 != 0;
          if (!v67) {
            goto LABEL_132;
          }
        }
        else
        {
          uint64_t v30 = (char *)(v8 + 2);
LABEL_40:
          *(void *)uint64_t v81 = v30;
          *(unsigned char *)(a1 + 89) = v31 != 0;
        }
        goto LABEL_96;
      case 8u:
        if (v9 != 66) {
          goto LABEL_98;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v33 = *(void *)(a1 + 8);
        unint64_t v21 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
        if (v33) {
          unint64_t v21 = (uint64_t *)*v21;
        }
        int v22 = (void *)(a1 + 32);
        goto LABEL_94;
      case 9u:
        if (v9 != 72) {
          goto LABEL_98;
        }
        v5 |= 0x800u;
        int v34 = (char *)(v8 + 1);
        uint64_t v35 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v36 = *v34;
        uint64_t v35 = v35 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          uint64_t v69 = sub_188C138((uint64_t)v8, v35);
          *(void *)uint64_t v81 = v69;
          *(unsigned char *)(a1 + 90) = v70 != 0;
          if (!v69) {
            goto LABEL_132;
          }
        }
        else
        {
          int v34 = (char *)(v8 + 2);
LABEL_49:
          *(void *)uint64_t v81 = v34;
          *(unsigned char *)(a1 + 90) = v35 != 0;
        }
        goto LABEL_96;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_98;
        }
        v5 |= 0x1000u;
        uint64_t v37 = (char *)(v8 + 1);
        uint64_t v38 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_54;
        }
        int v39 = *v37;
        uint64_t v38 = v38 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v71 = sub_188C138((uint64_t)v8, v38);
          *(void *)uint64_t v81 = v71;
          *(unsigned char *)(a1 + 91) = v72 != 0;
          if (!v71) {
            goto LABEL_132;
          }
        }
        else
        {
          uint64_t v37 = (char *)(v8 + 2);
LABEL_54:
          *(void *)uint64_t v81 = v37;
          *(unsigned char *)(a1 + 91) = v38 != 0;
        }
        goto LABEL_96;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_98;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v40 = *(void **)(a1 + 64);
        if (!v40)
        {
          uint64_t v41 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v41 = (void *)*v41;
          }
          uint64_t v40 = sub_1361E7C((uint64_t)v41);
          *(void *)(a1 + 64) = v40;
          unint64_t v8 = *(unsigned __int8 **)v81;
        }
        int v29 = sub_135A560(a3, (uint64_t)v40, v8);
        goto LABEL_95;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_98;
        }
        v5 |= 0x2000u;
        uint64_t v42 = (char *)(v8 + 1);
        int v43 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_65;
        }
        int v44 = *v42;
        int v43 = v43 + (v44 << 7) - 128;
        if (v44 < 0)
        {
          uint64_t v73 = sub_188C0D0((uint64_t)v8, v43);
          *(void *)uint64_t v81 = v73;
          *(_DWORD *)(a1 + 92) = v74;
          if (!v73) {
            goto LABEL_132;
          }
        }
        else
        {
          uint64_t v42 = (char *)(v8 + 2);
LABEL_65:
          *(void *)uint64_t v81 = v42;
          *(_DWORD *)(a1 + 92) = v43;
        }
        goto LABEL_96;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_98;
        }
        uint64_t v45 = (char *)(v8 + 1);
        unint64_t v46 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_70;
        }
        int v47 = *v45;
        int v48 = v46 + (v47 << 7);
        unint64_t v46 = (v48 - 128);
        if (v47 < 0)
        {
          *(void *)uint64_t v81 = sub_188C138((uint64_t)v8, (v48 - 128));
          if (!*(void *)v81) {
            goto LABEL_132;
          }
          unint64_t v46 = v75;
        }
        else
        {
          uint64_t v45 = (char *)(v8 + 2);
LABEL_70:
          *(void *)uint64_t v81 = v45;
        }
        if (sub_136FC18())
        {
          *(_DWORD *)(a1 + 16) |= 0x4000u;
          *(_DWORD *)(a1 + 96) = v46;
        }
        else
        {
          if (*v7) {
            uint64_t v80 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v80 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(13, v46, v80);
        }
        goto LABEL_96;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_98;
        }
        v5 |= 0x8000u;
        unint64_t v49 = (char *)(v8 + 1);
        int v50 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_77;
        }
        int v51 = *v49;
        int v50 = v50 + (v51 << 7) - 128;
        if (v51 < 0)
        {
          uint64_t v76 = sub_188C0D0((uint64_t)v8, v50);
          *(void *)uint64_t v81 = v76;
          *(_DWORD *)(a1 + 100) = v77;
          if (!v76) {
            goto LABEL_132;
          }
        }
        else
        {
          unint64_t v49 = (char *)(v8 + 2);
LABEL_77:
          *(void *)uint64_t v81 = v49;
          *(_DWORD *)(a1 + 100) = v50;
        }
        goto LABEL_96;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_98;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v52 = *(void *)(a1 + 8);
        unint64_t v21 = (uint64_t *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
        if (v52) {
          unint64_t v21 = (uint64_t *)*v21;
        }
        int v22 = (void *)(a1 + 40);
        goto LABEL_94;
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_98;
        }
        v5 |= 0x20000u;
        int v54 = (char *)(v8 + 1);
        LODWORD(v53) = *v8;
        if ((v53 & 0x80) == 0) {
          goto LABEL_86;
        }
        int v55 = *v54;
        uint64_t v53 = v53 + (v55 << 7) - 128;
        if (v55 < 0)
        {
          uint64_t v78 = sub_188C138((uint64_t)v8, v53);
          *(void *)uint64_t v81 = v78;
          *(_DWORD *)(a1 + 112) = v79;
          if (!v78) {
            goto LABEL_132;
          }
        }
        else
        {
          int v54 = (char *)(v8 + 2);
LABEL_86:
          *(void *)uint64_t v81 = v54;
          *(_DWORD *)(a1 + 112) = v53;
        }
        goto LABEL_96;
      case 0x11u:
        if (v9 != 137) {
          goto LABEL_98;
        }
        uint64_t v56 = *(void *)v8;
        unsigned int v15 = v8 + 8;
        v5 |= 0x10000u;
        *(void *)(a1 + 104) = v56;
LABEL_89:
        *(void *)uint64_t v81 = v15;
        goto LABEL_96;
      case 0x12u:
        if (v9 != 146) {
          goto LABEL_98;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v57 = *(void *)(a1 + 8);
        unint64_t v21 = (uint64_t *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
        if (v57) {
          unint64_t v21 = (uint64_t *)*v21;
        }
        int v22 = (void *)(a1 + 48);
LABEL_94:
        uint64_t v58 = (std::string *)sub_1880F84(v22, v21);
        int v29 = (void *)sub_188C244(v58, *(char **)v81, (uint64_t)a3);
        goto LABEL_95;
      default:
LABEL_98:
        if (v9) {
          BOOL v59 = (v9 & 7) == 4;
        }
        else {
          BOOL v59 = 1;
        }
        if (!v59)
        {
          if (*v7)
          {
            int v60 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v60 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v81;
          }
          int v29 = sub_1885AC0(v9, v60, (char *)v8, a3);
LABEL_95:
          *(void *)uint64_t v81 = v29;
          if (!v29) {
            goto LABEL_132;
          }
LABEL_96:
          if (sub_11947B8((uint64_t)a3, (char **)v81, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_132:
        }
          *(void *)uint64_t v81 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v81;
    }
  }
}

char *sub_135A560(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13593D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_135A5F0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 80);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 72);
    unsigned char *v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
    if ((v6 & 0x200) == 0)
    {
LABEL_10:
      if ((v6 & 1) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 88);
  unsigned char *v4 = 24;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 1) == 0)
  {
LABEL_11:
    if ((v6 & 0x100) == 0) {
      goto LABEL_26;
    }
    goto LABEL_20;
  }
LABEL_19:
  char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0) {
    goto LABEL_26;
  }
LABEL_20:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v12 = *(_DWORD *)(a1 + 84);
  unsigned char *v4 = 40;
  v4[1] = v12;
  if (v12 > 0x7F)
  {
    v4[1] = v12 | 0x80;
    unsigned int v13 = v12 >> 7;
    v4[2] = v12 >> 7;
    v4 += 3;
    if (v12 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v14 = v13 >> 14;
        v13 >>= 7;
        *v4++ = v13;
      }
      while (v14);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_26:
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 56);
    unsigned char *v4 = 50;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      unsigned int v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      unsigned int v17 = v4 + 2;
    }
    char v4 = sub_135BA80(v15, (unint64_t)v17, a3);
    if ((v6 & 0x400) == 0)
    {
LABEL_28:
      if ((v6 & 2) == 0) {
        goto LABEL_29;
      }
      goto LABEL_43;
    }
  }
  else if ((v6 & 0x400) == 0)
  {
    goto LABEL_28;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v18 = *(unsigned char *)(a1 + 89);
  unsigned char *v4 = 56;
  v4[1] = v18;
  v4 += 2;
  if ((v6 & 2) == 0)
  {
LABEL_29:
    if ((v6 & 0x800) == 0) {
      goto LABEL_30;
    }
    goto LABEL_44;
  }
LABEL_43:
  char v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x800) == 0)
  {
LABEL_30:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_47;
  }
LABEL_44:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v19 = *(unsigned char *)(a1 + 90);
  unsigned char *v4 = 72;
  v4[1] = v19;
  v4 += 2;
  if ((v6 & 0x1000) == 0)
  {
LABEL_31:
    if ((v6 & 0x20) == 0) {
      goto LABEL_32;
    }
    goto LABEL_50;
  }
LABEL_47:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v20 = *(unsigned char *)(a1 + 91);
  unsigned char *v4 = 80;
  v4[1] = v20;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_32:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_56;
  }
LABEL_50:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 64);
  unsigned char *v4 = 90;
  unsigned int v22 = *(_DWORD *)(v21 + 20);
  v4[1] = v22;
  if (v22 > 0x7F) {
    uint64_t v23 = sub_188A9CC(v22, v4 + 1);
  }
  else {
    uint64_t v23 = v4 + 2;
  }
  char v4 = sub_13596B0(v21, (unint64_t)v23, a3);
  if ((v6 & 0x2000) != 0)
  {
LABEL_56:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v24 = *(_DWORD *)(a1 + 92);
    unsigned char *v4 = 96;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unsigned int v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_62:
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v27 = *(int *)(a1 + 96);
    unsigned char *v4 = 104;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v30 = *(_DWORD *)(a1 + 100);
    unsigned char *v4 = 112;
    v4[1] = v30;
    if (v30 > 0x7F)
    {
      v4[1] = v30 | 0x80;
      unsigned int v31 = v30 >> 7;
      v4[2] = v30 >> 7;
      v4 += 3;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0) {
    char v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v33 = *(int *)(a1 + 112);
    *(_WORD *)char v4 = 384;
    v4[2] = v33;
    if (v33 > 0x7F)
    {
      v4[2] = v33 | 0x80;
      unint64_t v34 = v33 >> 7;
      v4[3] = v33 >> 7;
      v4 += 4;
      if (v33 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v35 = v34 >> 14;
          v34 >>= 7;
          *v4++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v36 = *(void *)(a1 + 104);
    *(_WORD *)char v4 = 393;
    *(void *)(v4 + 2) = v36;
    v4 += 10;
  }
  if ((v6 & 8) != 0) {
    char v4 = sub_117A0AC(a3, 18, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    uint64_t v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    uint64_t v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v40, v41, v4);
}

uint64_t sub_135AC54(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_22;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v8 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v17 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
    uint64_t v19 = *(void *)(v17 + 8);
    if ((v18 & 0x80u) == 0) {
      uint64_t v19 = v18;
    }
    v3 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_54;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v20 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  uint64_t v22 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v21;
  }
  v3 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_54:
  unint64_t v23 = sub_135C034(*(void *)(a1 + 56));
  v3 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0)
  {
LABEL_16:
    uint64_t v11 = sub_135994C(*(void *)(a1 + 64));
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  if ((v2 & 0x40) != 0) {
    uint64_t result = v3 + 9;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 0x80) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_22:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_38;
  }
  if ((v2 & 0x100) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v12 = result + 2;
  if ((v2 & 0x200) == 0) {
    uint64_t v12 = result;
  }
  if ((v2 & 0x400) != 0) {
    v12 += 2;
  }
  if ((v2 & 0x800) != 0) {
    v12 += 2;
  }
  if ((v2 & 0x1000) != 0) {
    uint64_t result = v12 + 2;
  }
  else {
    uint64_t result = v12;
  }
  if ((v2 & 0x2000) != 0)
  {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x4000) == 0)
    {
LABEL_36:
      if ((v2 & 0x8000) == 0) {
        goto LABEL_38;
      }
      goto LABEL_37;
    }
  }
  else if ((v2 & 0x4000) == 0)
  {
    goto LABEL_36;
  }
  int v24 = *(_DWORD *)(a1 + 96);
  uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v24 >= 0) {
    uint64_t v26 = v25;
  }
  else {
    uint64_t v26 = 11;
  }
  result += v26;
  if ((v2 & 0x8000) != 0) {
LABEL_37:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 100) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_38:
  if ((v2 & 0x30000) != 0)
  {
    if ((v2 & 0x10000) != 0) {
      result += 10;
    }
    if ((v2 & 0x20000) != 0)
    {
      int v13 = *(_DWORD *)(a1 + 112);
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v13 >= 0) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = 12;
      }
      result += v15;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v27 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v27 + 31) < 0) {
      uint64_t v28 = *(void *)(v27 + 16);
    }
    else {
      uint64_t v28 = *(unsigned __int8 *)(v27 + 31);
    }
    result += v28;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_135AFB4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_39;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_42;
    }
LABEL_39:
    int v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_45;
    }
LABEL_42:
    uint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_53;
    }
LABEL_45:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    uint64_t v19 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v19)
    {
      std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      sub_1361F94((uint64_t)v21);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v19;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v22 = *(void *(****)(void *))(a2 + 56);
    }
    else {
      uint64_t v22 = &off_25341F8;
    }
    uint64_t result = sub_135B28C(v19, (uint64_t)v22);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_61;
    }
LABEL_53:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    unint64_t v23 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
    if (!v23)
    {
      std::string::size_type v24 = v3->__r_.__value_.__l.__size_;
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      unint64_t v23 = (std::string *)sub_1361E7C((uint64_t)v25);
      v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v23;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v26 = *(void *(****)(void *))(a2 + 64);
    }
    else {
      uint64_t v26 = &off_2534158;
    }
    uint64_t result = sub_1104DD8(v23, (uint64_t)v26);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_61:
    v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v4 & 0x100) != 0)
  {
    HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
    if ((v4 & 0x200) == 0)
    {
LABEL_15:
      if ((v4 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_65;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  v3[3].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 88);
  if ((v4 & 0x400) == 0)
  {
LABEL_16:
    if ((v4 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_66;
  }
LABEL_65:
  v3[3].__r_.__value_.__s.__data_[17] = *(unsigned char *)(a2 + 89);
  if ((v4 & 0x800) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_67;
  }
LABEL_66:
  v3[3].__r_.__value_.__s.__data_[18] = *(unsigned char *)(a2 + 90);
  if ((v4 & 0x1000) == 0)
  {
LABEL_18:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_68;
  }
LABEL_67:
  v3[3].__r_.__value_.__s.__data_[19] = *(unsigned char *)(a2 + 91);
  if ((v4 & 0x2000) == 0)
  {
LABEL_19:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_20;
    }
LABEL_69:
    LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
    if ((v4 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_68:
  HIDWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x4000) != 0) {
    goto LABEL_69;
  }
LABEL_20:
  if ((v4 & 0x8000) != 0) {
LABEL_21:
  }
    HIDWORD(v3[4].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 100);
LABEL_22:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
LABEL_23:
  if ((v4 & 0x30000) != 0)
  {
    if ((v4 & 0x10000) != 0) {
      v3[4].__r_.__value_.__l.__size_ = *(void *)(a2 + 104);
    }
    if ((v4 & 0x20000) != 0) {
      LODWORD(v3[4].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 112);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_135B28C(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_25;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_26;
    }
LABEL_25:
    result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_27;
    }
LABEL_26:
    result[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_28;
    }
LABEL_27:
    result[2].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 49);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_29;
    }
LABEL_28:
    result[2].__r_.__value_.__s.__data_[2] = *(unsigned char *)(a2 + 50);
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
        goto LABEL_12;
      }
LABEL_10:
      result[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
      goto LABEL_11;
    }
LABEL_29:
    HIDWORD(result[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v2 & 0x3F00) == 0) {
    goto LABEL_21;
  }
  if ((v2 & 0x100) != 0)
  {
    result[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v2 & 0x200) == 0)
    {
LABEL_15:
      if ((v2 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  result[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_34;
  }
LABEL_33:
  LODWORD(result[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
  if ((v2 & 0x800) == 0)
  {
LABEL_17:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_18;
    }
LABEL_35:
    LODWORD(result[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
    if ((v2 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_34:
  HIDWORD(result[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x1000) != 0) {
    goto LABEL_35;
  }
LABEL_18:
  if ((v2 & 0x2000) != 0) {
LABEL_19:
  }
    result[4].__r_.__value_.__r.__words[0] = *(void *)(a2 + 96);
LABEL_20:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_21:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_135B3B4()
{
  return 1;
}

void *sub_135B3BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.StepFeedback");
}

void *sub_135B3CC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_135B440(void *a1)
{
  sub_135B3CC(a1);

  operator delete();
}

char *sub_135B478(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v70 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v70, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v70 + 1;
    unsigned int v9 = *v70;
    if (*v70 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v70, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v70 + 2;
      }
    }
    uint64_t v70 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_72;
        }
        v5 |= 8u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v70 = v12;
          *(unsigned char *)(a1 + 48) = v13 != 0;
          goto LABEL_65;
        }
        int v50 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v70 = v50;
        *(unsigned char *)(a1 + 48) = v51 != 0;
        if (v50) {
          goto LABEL_65;
        }
        goto LABEL_107;
      case 2u:
        if (v9 != 16) {
          goto LABEL_72;
        }
        v5 |= 0x10u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v52 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v70 = v52;
          *(unsigned char *)(a1 + 49) = v53 != 0;
          if (!v52) {
            goto LABEL_107;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v70 = v15;
          *(unsigned char *)(a1 + 49) = v16 != 0;
        }
        goto LABEL_65;
      case 3u:
        if (v9 != 24) {
          goto LABEL_72;
        }
        v5 |= 1u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v54 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v70 = v54;
          *(void *)(a1 + 24) = v55;
          if (!v54) {
            goto LABEL_107;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v70 = v18;
          *(void *)(a1 + 24) = v19;
        }
        goto LABEL_65;
      case 4u:
        if (v9 != 32) {
          goto LABEL_72;
        }
        v5 |= 2u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v56 = (char *)sub_188C138((uint64_t)v8, v22);
          uint64_t v70 = v56;
          *(void *)(a1 + 32) = v57;
          if (!v56) {
            goto LABEL_107;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v70 = v21;
          *(void *)(a1 + 32) = v22;
        }
        goto LABEL_65;
      case 5u:
        if (v9 != 40) {
          goto LABEL_72;
        }
        v5 |= 4u;
        std::string::size_type v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v58 = (char *)sub_188C138((uint64_t)v8, v25);
          uint64_t v70 = v58;
          *(void *)(a1 + 40) = v59;
          if (!v58) {
            goto LABEL_107;
          }
        }
        else
        {
          std::string::size_type v24 = v8 + 2;
LABEL_33:
          uint64_t v70 = v24;
          *(void *)(a1 + 40) = v25;
        }
        goto LABEL_65;
      case 6u:
        if (v9 != 48) {
          goto LABEL_72;
        }
        unint64_t v27 = v8 + 1;
        unint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v30 = v28 + (v29 << 7);
        unint64_t v28 = (v30 - 128);
        if (v29 < 0)
        {
          uint64_t v70 = (char *)sub_188C138((uint64_t)v8, (v30 - 128));
          if (!v70) {
            goto LABEL_107;
          }
          unint64_t v28 = v60;
        }
        else
        {
          unint64_t v27 = v8 + 2;
LABEL_38:
          uint64_t v70 = v27;
        }
        if (v28 > 2)
        {
          if (*v7) {
            uint64_t v69 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v69 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(6, v28, v69);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 52) = v28;
        }
        goto LABEL_65;
      case 7u:
        if (v9 != 57) {
          goto LABEL_72;
        }
        uint64_t v32 = *(void *)v8;
        unsigned int v31 = v8 + 8;
        v5 |= 0x80u;
        *(void *)(a1 + 56) = v32;
        goto LABEL_64;
      case 8u:
        if (v9 != 64) {
          goto LABEL_72;
        }
        v5 |= 0x800u;
        unint64_t v34 = v8 + 1;
        LODWORD(v33) = *v8;
        if ((v33 & 0x80) == 0) {
          goto LABEL_47;
        }
        int v35 = *v34;
        uint64_t v33 = v33 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v61 = (char *)sub_188C138((uint64_t)v8, v33);
          uint64_t v70 = v61;
          *(_DWORD *)(a1 + 84) = v62;
          if (!v61) {
            goto LABEL_107;
          }
        }
        else
        {
          unint64_t v34 = v8 + 2;
LABEL_47:
          uint64_t v70 = v34;
          *(_DWORD *)(a1 + 84) = v33;
        }
        goto LABEL_65;
      case 9u:
        if (v9 != 73) {
          goto LABEL_72;
        }
        uint64_t v36 = *(void *)v8;
        unsigned int v31 = v8 + 8;
        v5 |= 0x100u;
        *(void *)(a1 + 64) = v36;
        goto LABEL_64;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_72;
        }
        v5 |= 0x1000u;
        uint64_t v38 = v8 + 1;
        LODWORD(v37) = *v8;
        if ((v37 & 0x80) == 0) {
          goto LABEL_54;
        }
        int v39 = *v38;
        uint64_t v37 = v37 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v63 = (char *)sub_188C138((uint64_t)v8, v37);
          uint64_t v70 = v63;
          *(_DWORD *)(a1 + 88) = v64;
          if (!v63) {
            goto LABEL_107;
          }
        }
        else
        {
          uint64_t v38 = v8 + 2;
LABEL_54:
          uint64_t v70 = v38;
          *(_DWORD *)(a1 + 88) = v37;
        }
        goto LABEL_65;
      case 0xBu:
        if (v9 != 89) {
          goto LABEL_72;
        }
        uint64_t v40 = *(void *)v8;
        unsigned int v31 = v8 + 8;
        v5 |= 0x2000u;
        *(void *)(a1 + 96) = v40;
        goto LABEL_64;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_72;
        }
        v5 |= 0x20u;
        uint64_t v41 = v8 + 1;
        uint64_t v42 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_61;
        }
        int v43 = *v41;
        uint64_t v42 = v42 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t v65 = (char *)sub_188C138((uint64_t)v8, v42);
          uint64_t v70 = v65;
          *(unsigned char *)(a1 + 50) = v66 != 0;
          if (!v65) {
            goto LABEL_107;
          }
        }
        else
        {
          uint64_t v41 = v8 + 2;
LABEL_61:
          uint64_t v70 = v41;
          *(unsigned char *)(a1 + 50) = v42 != 0;
        }
        goto LABEL_65;
      case 0xDu:
        if (v9 != 105) {
          goto LABEL_72;
        }
        uint64_t v44 = *(void *)v8;
        unsigned int v31 = v8 + 8;
        v5 |= 0x200u;
        *(void *)(a1 + 72) = v44;
LABEL_64:
        uint64_t v70 = v31;
        goto LABEL_65;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_72;
        }
        v5 |= 0x400u;
        uint64_t v45 = v8 + 1;
        int v46 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_71;
        }
        int v47 = *v45;
        int v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v67 = (char *)sub_188C0D0((uint64_t)v8, v46);
          uint64_t v70 = v67;
          *(_DWORD *)(a1 + 80) = v68;
          if (!v67) {
            goto LABEL_107;
          }
        }
        else
        {
          uint64_t v45 = v8 + 2;
LABEL_71:
          uint64_t v70 = v45;
          *(_DWORD *)(a1 + 80) = v46;
        }
        goto LABEL_65;
      default:
LABEL_72:
        if (v9) {
          BOOL v48 = (v9 & 7) == 4;
        }
        else {
          BOOL v48 = 1;
        }
        if (!v48)
        {
          if (*v7)
          {
            unint64_t v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v70;
          }
          uint64_t v70 = (char *)sub_1885AC0(v9, v49, v8, a3);
          if (!v70) {
            goto LABEL_107;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, &v70, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_107:
        }
          uint64_t v70 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v70;
    }
  }
}

unsigned char *sub_135BA80(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 0x10) == 0)
    {
LABEL_3:
      if ((v6 & 1) == 0) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 49);
  unsigned char *v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if (v6)
  {
LABEL_11:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v9 = *(void *)(a1 + 24);
    unsigned char *v4 = 24;
    v4[1] = v9;
    if (v9 > 0x7F)
    {
      v4[1] = v9 | 0x80;
      unint64_t v10 = v9 >> 7;
      v4[2] = v9 >> 7;
      v4 += 3;
      if (v9 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v11 = v10 >> 14;
          v10 >>= 7;
          *v4++ = v10;
        }
        while (v11);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_17:
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v12 = *(void *)(a1 + 32);
    unsigned char *v4 = 32;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(void *)(a1 + 40);
    unsigned char *v4 = 40;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(int *)(a1 + 52);
    unsigned char *v4 = 48;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 56);
    unsigned char *v4 = 57;
    *(void *)(v4 + 1) = v21;
    v4 += 9;
  }
  if ((v6 & 0x800) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 84);
    unsigned char *v4 = 64;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 64);
    unsigned char *v4 = 73;
    *(void *)(v4 + 1) = v25;
    v4 += 9;
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v26 = *(int *)(a1 + 88);
    unsigned char *v4 = 80;
    v4[1] = v26;
    if (v26 > 0x7F)
    {
      v4[1] = v26 | 0x80;
      unint64_t v27 = v26 >> 7;
      v4[2] = v26 >> 7;
      v4 += 3;
      if (v26 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v28 = v27 >> 14;
          v27 >>= 7;
          *v4++ = v27;
        }
        while (v28);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v29 = *(void *)(a1 + 96);
    unsigned char *v4 = 89;
    *(void *)(v4 + 1) = v29;
    v4 += 9;
    if ((v6 & 0x20) == 0)
    {
LABEL_62:
      if ((v6 & 0x200) == 0) {
        goto LABEL_63;
      }
      goto LABEL_71;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_62;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v30 = *(unsigned char *)(a1 + 50);
  unsigned char *v4 = 96;
  v4[1] = v30;
  v4 += 2;
  if ((v6 & 0x200) == 0)
  {
LABEL_63:
    if ((v6 & 0x400) == 0) {
      goto LABEL_80;
    }
    goto LABEL_74;
  }
LABEL_71:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 72);
  unsigned char *v4 = 105;
  *(void *)(v4 + 1) = v31;
  v4 += 9;
  if ((v6 & 0x400) != 0)
  {
LABEL_74:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v32 = *(_DWORD *)(a1 + 80);
    unsigned char *v4 = 112;
    v4[1] = v32;
    if (v32 > 0x7F)
    {
      v4[1] = v32 | 0x80;
      unsigned int v33 = v32 >> 7;
      v4[2] = v32 >> 7;
      v4 += 3;
      if (v32 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v34 = v33 >> 14;
          v33 >>= 7;
          *v4++ = v33;
        }
        while (v34);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_80:
  uint64_t v35 = *(void *)(a1 + 8);
  if ((v35 & 1) == 0) {
    return v4;
  }
  unint64_t v37 = v35 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v37 + 31) < 0)
  {
    uint64_t v38 = *(void **)(v37 + 8);
    uint64_t v39 = *(void *)(v37 + 16);
  }
  else
  {
    uint64_t v38 = (void *)(v37 + 8);
    LODWORD(v39) = *(unsigned __int8 *)(v37 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v39)
  {
    uint64_t v40 = (int)v39;
    memcpy(v4, v38, (int)v39);
    v4 += v40;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v38, v39, v4);
}

unint64_t sub_135C034(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v1)
  {
    unint64_t v2 = 0;
    goto LABEL_23;
  }
  if ((v1 & 1) == 0)
  {
    unint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x10) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x20) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x40) != 0)
  {
    int v3 = *(_DWORD *)(a1 + 52);
    uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v3 >= 0) {
      uint64_t v5 = v4;
    }
    else {
      uint64_t v5 = 11;
    }
    v2 += v5;
  }
  if ((v1 & 0x80) != 0) {
    v2 += 9;
  }
LABEL_23:
  if ((v1 & 0x3F00) == 0) {
    goto LABEL_37;
  }
  if ((v1 & 0x100) != 0) {
    v2 += 9;
  }
  if ((v1 & 0x200) != 0) {
    v2 += 9;
  }
  if ((v1 & 0x400) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 0x800) == 0)
    {
LABEL_30:
      if ((v1 & 0x1000) == 0) {
        goto LABEL_35;
      }
      goto LABEL_31;
    }
  }
  else if ((v1 & 0x800) == 0)
  {
    goto LABEL_30;
  }
  int v11 = *(_DWORD *)(a1 + 84);
  uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v11 >= 0) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 11;
  }
  v2 += v13;
  if ((v1 & 0x1000) != 0)
  {
LABEL_31:
    int v6 = *(_DWORD *)(a1 + 88);
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v6 >= 0) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 11;
    }
    v2 += v8;
  }
LABEL_35:
  if ((v1 & 0x2000) != 0) {
    v2 += 9;
  }
LABEL_37:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v14 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_135C224()
{
  return 1;
}

void *sub_135C22C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.AlightNotificationFeedback");
}

void *sub_135C23C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_135C2C0((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_135C2C0(uint64_t a1)
{
  int v3 = *(uint64_t **)(a1 + 24);
  uint64_t result = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2534260)
  {
    uint64_t v4 = *(void **)(a1 + 32);
    if (v4)
    {
      sub_135E6A0(v4);
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 40);
    if (v5)
    {
      sub_135E0A8(v5);
      operator delete();
    }
    int v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_135EBB0(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 56);
    if (result)
    {
      sub_135F0E0((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_135C3A4(void *a1)
{
  sub_135C23C(a1);

  operator delete();
}

uint64_t sub_135C3DC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_20;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_21:
    uint64_t result = sub_135C4F8(*(void *)(v1 + 40));
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    goto LABEL_22;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_20:
  uint64_t result = sub_135C4D0(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
    goto LABEL_21;
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_22:
  uint64_t result = sub_135C568(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_135C5C0(*(void *)(v1 + 56));
LABEL_8:
  if ((v2 & 0xE0) != 0)
  {
    *(_DWORD *)(v1 + 72) = 0;
    *(void *)(v1 + 64) = 0;
  }
  if ((v2 & 0x1F00) != 0)
  {
    *(void *)(v1 + 84) = 0;
    *(void *)(v1 + 76) = 0;
    *(_DWORD *)(v1 + 92) = 4;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_135C4D0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = -1;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_135C4F8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_135C5C0(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0)
  {
    *(unsigned char *)(v1 + 32) = 0;
    *(_DWORD *)(v1 + 36) = -1;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_135C568(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_135C5C0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_135C608(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v53 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v53 + 1);
    unsigned int v9 = **(unsigned char **)v53;
    if ((char)**(unsigned char **)v53 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v53, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v53 + 2);
      }
    }
    *(void *)uint64_t v53 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_68;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (uint64_t)sub_188C244(v14, *(char **)v53, (uint64_t)a3);
        goto LABEL_75;
      case 2u:
        if (v9 != 16) {
          goto LABEL_68;
        }
        v5 |= 0x20u;
        unint64_t v16 = (char *)(v8 + 1);
        int v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v45 = sub_188C0D0((uint64_t)v8, v17);
          *(void *)uint64_t v53 = v45;
          *(_DWORD *)(a1 + 64) = v46;
          if (!v45) {
            goto LABEL_93;
          }
        }
        else
        {
          unint64_t v16 = (char *)(v8 + 2);
LABEL_17:
          *(void *)uint64_t v53 = v16;
          *(_DWORD *)(a1 + 64) = v17;
        }
        goto LABEL_76;
      case 3u:
        if (v9 != 24) {
          goto LABEL_68;
        }
        v5 |= 0x40u;
        unint64_t v19 = (char *)(v8 + 1);
        int v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v47 = sub_188C0D0((uint64_t)v8, v20);
          *(void *)uint64_t v53 = v47;
          *(_DWORD *)(a1 + 68) = v48;
          if (!v47) {
            goto LABEL_93;
          }
        }
        else
        {
          unint64_t v19 = (char *)(v8 + 2);
LABEL_22:
          *(void *)uint64_t v53 = v19;
          *(_DWORD *)(a1 + 68) = v20;
        }
        goto LABEL_76;
      case 4u:
        if (v9 != 32) {
          goto LABEL_68;
        }
        v5 |= 0x80u;
        unint64_t v22 = (char *)(v8 + 1);
        int v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v49 = sub_188C0D0((uint64_t)v8, v23);
          *(void *)uint64_t v53 = v49;
          *(_DWORD *)(a1 + 72) = v50;
          if (!v49) {
            goto LABEL_93;
          }
        }
        else
        {
          unint64_t v22 = (char *)(v8 + 2);
LABEL_27:
          *(void *)uint64_t v53 = v22;
          *(_DWORD *)(a1 + 72) = v23;
        }
        goto LABEL_76;
      case 5u:
        if (v9 != 45) {
          goto LABEL_68;
        }
        int v26 = *(_DWORD *)v8;
        uint64_t v25 = v8 + 4;
        v5 |= 0x100u;
        *(_DWORD *)(a1 + 76) = v26;
        goto LABEL_43;
      case 6u:
        if (v9 != 53) {
          goto LABEL_68;
        }
        int v27 = *(_DWORD *)v8;
        uint64_t v25 = v8 + 4;
        v5 |= 0x200u;
        *(_DWORD *)(a1 + 80) = v27;
        goto LABEL_43;
      case 7u:
        if (v9 != 61) {
          goto LABEL_68;
        }
        int v28 = *(_DWORD *)v8;
        uint64_t v25 = v8 + 4;
        v5 |= 0x400u;
        *(_DWORD *)(a1 + 84) = v28;
        goto LABEL_43;
      case 8u:
        if (v9 != 64) {
          goto LABEL_68;
        }
        uint64_t v29 = (char *)(v8 + 1);
        unint64_t v30 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v31 = *v29;
        int v32 = v30 + (v31 << 7);
        unint64_t v30 = (v32 - 128);
        if (v31 < 0)
        {
          *(void *)uint64_t v53 = sub_188C138((uint64_t)v8, (v32 - 128));
          if (!*(void *)v53) {
            goto LABEL_93;
          }
          unint64_t v30 = v51;
        }
        else
        {
          uint64_t v29 = (char *)(v8 + 2);
LABEL_38:
          *(void *)uint64_t v53 = v29;
        }
        if (sub_1369B8C(v30))
        {
          *(_DWORD *)(a1 + 16) |= 0x1000u;
          *(_DWORD *)(a1 + 92) = v30;
        }
        else
        {
          if (*v7) {
            uint64_t v52 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v52 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(8, v30, v52);
        }
        goto LABEL_76;
      case 9u:
        if (v9 != 77) {
          goto LABEL_68;
        }
        int v33 = *(_DWORD *)v8;
        uint64_t v25 = v8 + 4;
        v5 |= 0x800u;
        *(_DWORD *)(a1 + 88) = v33;
LABEL_43:
        *(void *)uint64_t v53 = v25;
        goto LABEL_76;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_68;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v34 = *(void *)(a1 + 32);
        if (!v34)
        {
          uint64_t v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v35 = (void *)*v35;
          }
          sub_13621C4((uint64_t)v35);
          uint64_t v34 = v36;
          *(void *)(a1 + 32) = v36;
          uint64_t v8 = *(unsigned __int8 **)v53;
        }
        uint64_t v15 = (uint64_t)sub_135CB48(a3, v34, v8);
        goto LABEL_75;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_68;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v37 = *(void *)(a1 + 40);
        if (!v37)
        {
          uint64_t v38 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v38 = (void *)*v38;
          }
          uint64_t v37 = sub_1362140((uint64_t)v38);
          *(void *)(a1 + 40) = v37;
          uint64_t v8 = *(unsigned __int8 **)v53;
        }
        uint64_t v15 = (uint64_t)sub_135CBD8(a3, v37, v8);
        goto LABEL_75;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_68;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v39 = *(void *)(a1 + 48);
        if (!v39)
        {
          uint64_t v40 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v40 = (void *)*v40;
          }
          uint64_t v39 = sub_1362244((uint64_t)v40);
          *(void *)(a1 + 48) = v39;
          uint64_t v8 = *(unsigned __int8 **)v53;
        }
        uint64_t v15 = sub_135CC68(a3, v39, v8);
        goto LABEL_75;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_68;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v41 = *(void *)(a1 + 56);
        if (!v41)
        {
          uint64_t v42 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v42 = (void *)*v42;
          }
          uint64_t v41 = sub_13622E0((uint64_t)v42);
          *(void *)(a1 + 56) = v41;
          uint64_t v8 = *(unsigned __int8 **)v53;
        }
        uint64_t v15 = sub_135CCF8(a3, v41, v8);
        goto LABEL_75;
      default:
LABEL_68:
        if (v9) {
          BOOL v43 = (v9 & 7) == 4;
        }
        else {
          BOOL v43 = 1;
        }
        if (!v43)
        {
          if (*v7)
          {
            uint64_t v44 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v44 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v53;
          }
          uint64_t v15 = (uint64_t)sub_1885AC0(v9, v44, (char *)v8, a3);
LABEL_75:
          *(void *)uint64_t v53 = v15;
          if (!v15) {
            goto LABEL_93;
          }
LABEL_76:
          if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_93:
        }
          *(void *)uint64_t v53 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v53;
    }
  }
}

char *sub_135CB48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_135E74C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_135CBD8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_135E198(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_135CC68(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_135EC64(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_135CCF8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_135F1B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_135CD88(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 64);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 68);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 72);
    unsigned char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v16 = *(_DWORD *)(a1 + 76);
    unsigned char *v4 = 45;
    *(_DWORD *)(v4 + 1) = v16;
    v4 += 5;
    if ((v6 & 0x200) == 0)
    {
LABEL_26:
      if ((v6 & 0x400) == 0) {
        goto LABEL_27;
      }
      goto LABEL_35;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_26;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v17 = *(_DWORD *)(a1 + 80);
  unsigned char *v4 = 53;
  *(_DWORD *)(v4 + 1) = v17;
  v4 += 5;
  if ((v6 & 0x400) == 0)
  {
LABEL_27:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_35:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v18 = *(_DWORD *)(a1 + 84);
  unsigned char *v4 = 61;
  *(_DWORD *)(v4 + 1) = v18;
  v4 += 5;
  if ((v6 & 0x1000) != 0)
  {
LABEL_38:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 92);
    unsigned char *v4 = 64;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_44:
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v22 = *(_DWORD *)(a1 + 88);
    unsigned char *v4 = 77;
    *(_DWORD *)(v4 + 1) = v22;
    v4 += 5;
    if ((v6 & 2) == 0)
    {
LABEL_46:
      if ((v6 & 4) == 0) {
        goto LABEL_47;
      }
      goto LABEL_59;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_46;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v23 = *(void *)(a1 + 32);
  unsigned char *v4 = 82;
  unsigned int v24 = *(_DWORD *)(v23 + 20);
  v4[1] = v24;
  if (v24 > 0x7F) {
    uint64_t v25 = sub_188A9CC(v24, v4 + 1);
  }
  else {
    uint64_t v25 = v4 + 2;
  }
  char v4 = sub_135E934(v23, (unint64_t)v25, a3);
  if ((v6 & 4) == 0)
  {
LABEL_47:
    if ((v6 & 8) == 0) {
      goto LABEL_48;
    }
    goto LABEL_65;
  }
LABEL_59:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v26 = *(void *)(a1 + 40);
  unsigned char *v4 = 90;
  unsigned int v27 = *(_DWORD *)(v26 + 20);
  v4[1] = v27;
  if (v27 > 0x7F) {
    int v28 = sub_188A9CC(v27, v4 + 1);
  }
  else {
    int v28 = v4 + 2;
  }
  char v4 = sub_135E3EC(v26, (unint64_t)v28, a3);
  if ((v6 & 8) == 0)
  {
LABEL_48:
    if ((v6 & 0x10) == 0) {
      goto LABEL_77;
    }
    goto LABEL_71;
  }
LABEL_65:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v29 = *(void *)(a1 + 48);
  unsigned char *v4 = 98;
  unsigned int v30 = *(_DWORD *)(v29 + 20);
  v4[1] = v30;
  if (v30 > 0x7F) {
    int v31 = sub_188A9CC(v30, v4 + 1);
  }
  else {
    int v31 = v4 + 2;
  }
  char v4 = sub_135EEF0(v29, (unint64_t)v31, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_71:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v32 = *(void *)(a1 + 56);
    unsigned char *v4 = 106;
    unsigned int v33 = *(_DWORD *)(v32 + 20);
    v4[1] = v33;
    if (v33 > 0x7F) {
      uint64_t v34 = sub_188A9CC(v33, v4 + 1);
    }
    else {
      uint64_t v34 = v4 + 2;
    }
    char v4 = sub_135F3C8(v32, v34, a3);
  }
LABEL_77:
  uint64_t v35 = *(void *)(a1 + 8);
  if ((v35 & 1) == 0) {
    return v4;
  }
  unint64_t v37 = v35 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v37 + 31) < 0)
  {
    uint64_t v38 = *(void **)(v37 + 8);
    uint64_t v39 = *(void *)(v37 + 16);
  }
  else
  {
    uint64_t v38 = (void *)(v37 + 8);
    LODWORD(v39) = *(unsigned __int8 *)(v37 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v39)
  {
    uint64_t v40 = (int)v39;
    memcpy(v4, v38, (int)v39);
    v4 += v40;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v38, v39, v4);
}

uint64_t sub_135D2E4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_17;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_135EAD8(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v14 = sub_135E5B0(*(void *)(a1 + 40));
    v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_36;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v15 = sub_135F020(*(void *)(a1 + 48));
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v16 = sub_135F510(*(void *)(a1 + 56));
  v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_14:
    if ((v2 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_38;
  }
LABEL_37:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_15:
    if ((v2 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_38:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0) {
LABEL_16:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_17:
  if ((v2 & 0x1F00) != 0)
  {
    uint64_t v8 = v3 + 5;
    if ((v2 & 0x100) == 0) {
      uint64_t v8 = v3;
    }
    if ((v2 & 0x200) != 0) {
      v8 += 5;
    }
    if ((v2 & 0x400) != 0) {
      v8 += 5;
    }
    if ((v2 & 0x800) != 0) {
      uint64_t v3 = v8 + 5;
    }
    else {
      uint64_t v3 = v8;
    }
    if ((v2 & 0x1000) != 0)
    {
      int v9 = *(_DWORD *)(a1 + 92);
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v9 >= 0) {
        uint64_t v11 = v10;
      }
      else {
        uint64_t v11 = 11;
      }
      v3 += v11;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v17 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v3 += v18;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_135D55C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_35;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      sub_13621C4((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      unsigned int v13 = *(void *(****)(void *))(a2 + 32);
    }
    else {
      unsigned int v13 = &off_25342E8;
    }
    uint64_t result = sub_117EF04(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_43;
    }
LABEL_35:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_1362140((uint64_t)v16);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 40)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unint64_t v17 = &off_25342C0;
    }
    uint64_t result = sub_135D7E0(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_51;
    }
LABEL_43:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
      unint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unint64_t v20 = (void *)*v20;
      }
      std::string::pointer data = (std::string *)sub_1362244((uint64_t)v20);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      unint64_t v21 = *(void *(****)(void *))(a2 + 48);
    }
    else {
      unint64_t v21 = &off_2534308;
    }
    uint64_t result = sub_135D8C8(data, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_59;
    }
LABEL_51:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    int v22 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v22)
    {
      std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
      unsigned int v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unsigned int v24 = (void *)*v24;
      }
      int v22 = (std::string *)sub_13622E0((uint64_t)v24);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v22;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v25 = *(uint64_t (****)(uint64_t))(a2 + 56);
    }
    else {
      uint64_t v25 = &off_2534340;
    }
    uint64_t result = sub_119E644(v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_60;
    }
LABEL_59:
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
      goto LABEL_11;
    }
LABEL_60:
    HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x1F00) == 0) {
    goto LABEL_20;
  }
  if ((v4 & 0x100) != 0)
  {
    HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
    if ((v4 & 0x200) == 0)
    {
LABEL_15:
      if ((v4 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_64;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
  if ((v4 & 0x400) == 0)
  {
LABEL_16:
    if ((v4 & 0x800) == 0) {
      goto LABEL_17;
    }
LABEL_65:
    LODWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_64:
  HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x800) != 0) {
    goto LABEL_65;
  }
LABEL_17:
  if ((v4 & 0x1000) != 0) {
LABEL_18:
  }
    HIDWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 92);
LABEL_19:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
LABEL_20:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_135D7E0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_13622E0((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(uint64_t (****)(uint64_t))(a2 + 24);
      }
      else {
        int v9 = &off_2534340;
      }
      uint64_t result = sub_119E644(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_135D8C8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    std::string::value_type v9 = *(unsigned char *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    v3[2].__r_.__value_.__s.__data_[0] = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_135D9B4()
{
  return 1;
}

void *sub_135D9BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.GuidanceEventFeedback");
}

void *sub_135D9CC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_135DA40(void *a1)
{
  sub_135D9CC(a1);

  operator delete();
}

uint64_t sub_135DA78(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_135DA9C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v30 + 2;
      }
    }
    unsigned int v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_28;
        }
        v5 |= 1u;
        *(void *)(a1 + 24) = *(void *)v8;
        unsigned int v30 = v8 + 8;
        goto LABEL_35;
      case 2u:
        if (v9 != 16) {
          goto LABEL_28;
        }
        v5 |= 2u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_15;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if (v14 < 0)
        {
          unsigned int v24 = (char *)sub_188C138((uint64_t)v8, v13);
          unsigned int v30 = v24;
          *(unsigned char *)(a1 + 32) = v25 != 0;
          if (!v24) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_15:
          unsigned int v30 = v12;
          *(unsigned char *)(a1 + 32) = v13 != 0;
        }
        goto LABEL_35;
      case 3u:
        if (v9 != 24) {
          goto LABEL_28;
        }
        v5 |= 4u;
        std::string::size_type v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v26 = (char *)sub_188C138((uint64_t)v8, v16);
          unsigned int v30 = v26;
          *(unsigned char *)(a1 + 33) = v27 != 0;
          if (!v26) {
            goto LABEL_50;
          }
        }
        else
        {
          std::string::size_type v15 = v8 + 2;
LABEL_20:
          unsigned int v30 = v15;
          *(unsigned char *)(a1 + 33) = v16 != 0;
        }
        goto LABEL_35;
      case 4u:
        if (v9 != 32) {
          goto LABEL_28;
        }
        uint64_t v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          unsigned int v30 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
          if (!v30) {
            goto LABEL_50;
          }
          unint64_t v19 = v28;
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_25:
          unsigned int v30 = v18;
        }
        if (v19 > 2)
        {
          if (*v7) {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v19, v29);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 36) = v19;
        }
        goto LABEL_35;
      default:
LABEL_28:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            std::string::size_type v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            std::string::size_type v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v30;
          }
          unsigned int v30 = (char *)sub_1885AC0(v9, v23, v8, a3);
          if (!v30) {
            goto LABEL_50;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_50:
        }
          unsigned int v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v30;
    }
  }
}

_OWORD *sub_135DD9C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)int v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    int v4 = (_OWORD *)((char *)v4 + 9);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)int v4 = 16;
  *((unsigned char *)v4 + 1) = v8;
  int v4 = (_OWORD *)((char *)v4 + 2);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v9 = *(unsigned char *)(a1 + 33);
  *(unsigned char *)int v4 = 24;
  *((unsigned char *)v4 + 1) = v9;
  int v4 = (_OWORD *)((char *)v4 + 2);
  if ((v6 & 8) != 0)
  {
LABEL_15:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    *(unsigned char *)int v4 = 32;
    *((unsigned char *)v4 + 1) = v10;
    if (v10 > 0x7F)
    {
      *((unsigned char *)v4 + 1) = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      *((unsigned char *)v4 + 2) = v10 >> 7;
      int v4 = (_OWORD *)((char *)v4 + 3);
      if (v10 >= 0x4000)
      {
        do
        {
          *((unsigned char *)v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *(unsigned char *)int v4 = v11;
          int v4 = (_OWORD *)((char *)v4 + 1);
        }
        while (v12);
      }
    }
    else
    {
      int v4 = (_OWORD *)((char *)v4 + 2);
    }
  }
LABEL_21:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    return (_OWORD *)((char *)v4 + v18);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_135DF7C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    uint64_t v3 = v2 | v1 & 2;
    if ((v1 & 4) != 0) {
      v3 += 2;
    }
    if ((v1 & 8) != 0)
    {
      int v4 = *(_DWORD *)(a1 + 36);
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v4 >= 0) {
        uint64_t v6 = v5;
      }
      else {
        uint64_t v6 = 11;
      }
      v3 += v6;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_135E01C(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_12:
      result[1].__r_.__value_.__s.__data_[9] = *(unsigned char *)(a2 + 33);
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  result[1].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 32);
  if ((v2 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
LABEL_7:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_8:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_135E090()
{
  return 1;
}

void *sub_135E098@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Modality");
}

uint64_t sub_135E0A8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25342C0)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_135F0E0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_135E160(uint64_t a1)
{
  sub_135E0A8(a1);

  operator delete();
}

char *sub_135E198(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    char v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = v29 + 2;
      }
    }
    uint64_t v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 2u;
      unint64_t v19 = v8 + 1;
      uint64_t v20 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_33;
      }
      int v21 = *v19;
      uint64_t v20 = v20 + (v21 << 7) - 128;
      if ((v21 & 0x80000000) == 0)
      {
        unint64_t v19 = v8 + 2;
LABEL_33:
        uint64_t v29 = v19;
        *(unsigned char *)(a1 + 32) = v20 != 0;
        goto LABEL_38;
      }
      uint64_t v25 = (char *)sub_188C138((uint64_t)v8, v20);
      uint64_t v29 = v25;
      *(unsigned char *)(a1 + 32) = v26 != 0;
      if (!v25) {
        goto LABEL_47;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 4u;
      std::string::size_type v23 = v8 + 1;
      LODWORD(v22) = *v8;
      if ((v22 & 0x80) == 0) {
        goto LABEL_37;
      }
      int v24 = *v23;
      uint64_t v22 = v22 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        std::string::size_type v23 = v8 + 2;
LABEL_37:
        uint64_t v29 = v23;
        *(_DWORD *)(a1 + 36) = v22;
        goto LABEL_38;
      }
      uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v22);
      uint64_t v29 = v27;
      *(_DWORD *)(a1 + 36) = v28;
      if (!v27) {
        goto LABEL_47;
      }
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_13622E0((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      char v8 = v29;
    }
    uint64_t v16 = (char *)sub_135CCF8(a3, v17, (unsigned __int8 *)v8);
LABEL_27:
    uint64_t v29 = v16;
    if (!v16) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v8 = v29;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_27;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

unsigned char *sub_135E3EC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 36);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 24);
    unsigned char *v4 = 26;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    v4[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, v4 + 1);
    }
    else {
      uint64_t v13 = v4 + 2;
    }
    int v4 = sub_135F3C8(v11, v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_135E5B0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t v5 = sub_135F510(*(void *)(a1 + 24));
      uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t result = v3 + 2;
    }
    else {
      uint64_t result = v3;
    }
    if ((v2 & 4) != 0)
    {
      int v6 = *(_DWORD *)(a1 + 36);
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v6 >= 0) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 11;
      }
      result += v8;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_135E688()
{
  return 1;
}

void *sub_135E690@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.SpokenGuidanceFeedback");
}

void *sub_135E6A0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_135E714(void *a1)
{
  sub_135E6A0(a1);

  operator delete();
}

char *sub_135E74C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v16 = v8 + 2;
LABEL_25:
      uint64_t v25 = v16;
      *(_DWORD *)(a1 + 28) = v15;
      goto LABEL_30;
    }
    int v21 = (char *)sub_188C138((uint64_t)v8, v15);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    LODWORD(v18) = *v8;
    if ((v18 & 0x80) == 0) {
      goto LABEL_29;
    }
    int v20 = *v19;
    uint64_t v18 = v18 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      uint64_t v25 = v19;
      *(_DWORD *)(a1 + 24) = v18;
      goto LABEL_30;
    }
    std::string::size_type v23 = (char *)sub_188C138((uint64_t)v8, v18);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_135E934(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_135EAD8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_135EB98()
{
  return 1;
}

void *sub_135EBA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.SignGuidanceFeedback");
}

void *sub_135EBB0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_135EC2C(void *a1)
{
  sub_135EBB0(a1);

  operator delete();
}

uint64_t sub_135EC64(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (uint64_t **)(a1 + 24);
  unint64_t v8 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v9 = (char *)(*(void *)v28 + 1);
    unsigned int v10 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        uint64_t v9 = (char *)sub_188C180(*(uint64_t *)v28, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (char *)(*(void *)v28 + 2);
      }
    }
    *(void *)int v28 = v9;
    if (v10 >> 3 == 2) {
      break;
    }
    if (v10 >> 3 != 1 || v10 != 8) {
      goto LABEL_13;
    }
    std::string::size_type v23 = v9 + 1;
    uint64_t v24 = *v9;
    if ((*v9 & 0x80000000) == 0) {
      goto LABEL_36;
    }
    int v25 = *v23;
    uint64_t v24 = v24 + (v25 << 7) - 128;
    if ((v25 & 0x80000000) == 0)
    {
      std::string::size_type v23 = v9 + 2;
LABEL_36:
      *(void *)int v28 = v23;
      *(unsigned char *)(a1 + 48) = v24 != 0;
      int v5 = 1;
      goto LABEL_37;
    }
    uint64_t v26 = sub_188C138((uint64_t)v9, v24);
    *(void *)int v28 = v26;
    *(unsigned char *)(a1 + 48) = v27 != 0;
    int v5 = 1;
    if (!v26) {
      goto LABEL_44;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v10 == 18)
  {
    unint64_t v16 = v9 - 1;
    while (1)
    {
      uint64_t v17 = (char *)(v16 + 1);
      *(void *)int v28 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        int v20 = *(std::string **)&v18[2 * v19 + 2];
      }
      else
      {
        if (!*v7) {
          operator new();
        }
        *int v22 = v21;
        v22[1] = sub_3A6EDC;
        *int v21 = 0;
        v21[1] = 0;
        v21[2] = 0;
        int v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = *(char **)v28;
      }
      unint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
      *(void *)int v28 = v16;
      if (!v16) {
        goto LABEL_44;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_37;
      }
    }
  }
LABEL_13:
  if (v10) {
    BOOL v14 = (v10 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v8)
    {
      unint64_t v15 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v9 = *(char **)v28;
    }
    *(void *)int v28 = sub_1885AC0(v10, v15, v9, a3);
    if (!*(void *)v28) {
      goto LABEL_44;
    }
    goto LABEL_37;
  }
  if (v9)
  {
    a3[10].i32[0] = v10 - 1;
    goto LABEL_2;
  }
LABEL_44:
  *(void *)int v28 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v28;
}

unsigned char *sub_135EEF0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v6 = *(unsigned char *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  uint64_t v7 = *(unsigned int *)(a1 + 32);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      int v4 = (unsigned char *)sub_125CE58(a3, 2, *(void *)(*(void *)(a1 + 40) + v8 + 8), v4);
      v8 += 8;
    }
    while (v9 != v8);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_135F020(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = v3 + 2;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    uint64_t v7 = v3;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v7 += v11;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

uint64_t sub_135F0C8()
{
  return 1;
}

void *sub_135F0D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.JunctionViewGuidanceFeedback");
}

uint64_t sub_135F0E0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_135F180(uint64_t a1)
{
  sub_135F0E0(a1);

  operator delete();
}

uint64_t sub_135F1B8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 8);
    int v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      int v20 = (uint64_t *)*v20;
    }
    int v21 = (std::string *)sub_1880F84((void *)(a1 + 24), v20);
    uint64_t v14 = (void *)sub_188C244(v21, *(char **)v24, (uint64_t)a3);
LABEL_30:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_42;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 16)
  {
    uint64_t v15 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        *(void *)uint64_t v24 = sub_188C138((uint64_t)v7, (v18 - 128));
        if (!*(void *)v24) {
          goto LABEL_42;
        }
        unint64_t v16 = v22;
        goto LABEL_25;
      }
      uint64_t v15 = v7 + 2;
    }
    *(void *)uint64_t v24 = v15;
LABEL_25:
    if (v16 > 2)
    {
      if (*v6) {
        std::string::size_type v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        std::string::size_type v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_30;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_42:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_135F3C8(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_135F510(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_135F5DC()
{
  return 1;
}

void *sub_135F5E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TrafficCameraInformation");
}

void *sub_135F5F4(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_135F668(void *a1)
{
  sub_135F5F4(a1);

  operator delete();
}

char *sub_135F6A0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v105 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v105, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v105 + 1;
    unsigned int v9 = *v105;
    if (*v105 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v105, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v105 + 2;
      }
    }
    uint64_t v105 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_101;
        }
        v5 |= 1u;
        unint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v105 = v12;
          *(unsigned char *)(a1 + 24) = v13 != 0;
          goto LABEL_108;
        }
        uint64_t v69 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v105 = v69;
        *(unsigned char *)(a1 + 24) = v70 != 0;
        if (v69) {
          goto LABEL_108;
        }
        goto LABEL_153;
      case 2u:
        if (v9 != 16) {
          goto LABEL_101;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v71 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v105 = v71;
          *(unsigned char *)(a1 + 25) = v72 != 0;
          if (!v71) {
            goto LABEL_153;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v105 = v15;
          *(unsigned char *)(a1 + 25) = v16 != 0;
        }
        goto LABEL_108;
      case 3u:
        if (v9 != 24) {
          goto LABEL_101;
        }
        v5 |= 4u;
        int v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v73 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v105 = v73;
          *(unsigned char *)(a1 + 26) = v74 != 0;
          if (!v73) {
            goto LABEL_153;
          }
        }
        else
        {
          int v18 = v8 + 2;
LABEL_23:
          uint64_t v105 = v18;
          *(unsigned char *)(a1 + 26) = v19 != 0;
        }
        goto LABEL_108;
      case 4u:
        if (v9 != 32) {
          goto LABEL_101;
        }
        v5 |= 8u;
        int v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          unint64_t v75 = (char *)sub_188C138((uint64_t)v8, v22);
          uint64_t v105 = v75;
          *(unsigned char *)(a1 + 27) = v76 != 0;
          if (!v75) {
            goto LABEL_153;
          }
        }
        else
        {
          int v21 = v8 + 2;
LABEL_28:
          uint64_t v105 = v21;
          *(unsigned char *)(a1 + 27) = v22 != 0;
        }
        goto LABEL_108;
      case 5u:
        if (v9 != 40) {
          goto LABEL_101;
        }
        v5 |= 0x20u;
        uint64_t v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          int v77 = (char *)sub_188C138((uint64_t)v8, v25);
          uint64_t v105 = v77;
          *(unsigned char *)(a1 + 32) = v78 != 0;
          if (!v77) {
            goto LABEL_153;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          uint64_t v105 = v24;
          *(unsigned char *)(a1 + 32) = v25 != 0;
        }
        goto LABEL_108;
      case 6u:
        if (v9 != 48) {
          goto LABEL_101;
        }
        v5 |= 0x10u;
        uint64_t v27 = v8 + 1;
        int v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          int v79 = (char *)sub_188C0D0((uint64_t)v8, v28);
          uint64_t v105 = v79;
          *(_DWORD *)(a1 + 28) = v80;
          if (!v79) {
            goto LABEL_153;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_38:
          uint64_t v105 = v27;
          *(_DWORD *)(a1 + 28) = v28;
        }
        goto LABEL_108;
      case 7u:
        if (v9 != 56) {
          goto LABEL_101;
        }
        v5 |= 0x40u;
        unsigned int v30 = v8 + 1;
        uint64_t v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v81 = (char *)sub_188C138((uint64_t)v8, v31);
          uint64_t v105 = v81;
          *(unsigned char *)(a1 + 33) = v82 != 0;
          if (!v81) {
            goto LABEL_153;
          }
        }
        else
        {
          unsigned int v30 = v8 + 2;
LABEL_43:
          uint64_t v105 = v30;
          *(unsigned char *)(a1 + 33) = v31 != 0;
        }
        goto LABEL_108;
      case 8u:
        if (v9 != 64) {
          goto LABEL_101;
        }
        v5 |= 0x80u;
        unsigned int v33 = v8 + 1;
        uint64_t v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v35 = *v33;
        uint64_t v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v83 = (char *)sub_188C138((uint64_t)v8, v34);
          uint64_t v105 = v83;
          *(unsigned char *)(a1 + 34) = v84 != 0;
          if (!v83) {
            goto LABEL_153;
          }
        }
        else
        {
          unsigned int v33 = v8 + 2;
LABEL_48:
          uint64_t v105 = v33;
          *(unsigned char *)(a1 + 34) = v34 != 0;
        }
        goto LABEL_108;
      case 9u:
        if (v9 != 72) {
          goto LABEL_101;
        }
        v5 |= 0x100u;
        uint64_t v36 = v8 + 1;
        uint64_t v37 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v85 = (char *)sub_188C138((uint64_t)v8, v37);
          uint64_t v105 = v85;
          *(unsigned char *)(a1 + 35) = v86 != 0;
          if (!v85) {
            goto LABEL_153;
          }
        }
        else
        {
          uint64_t v36 = v8 + 2;
LABEL_53:
          uint64_t v105 = v36;
          *(unsigned char *)(a1 + 35) = v37 != 0;
        }
        goto LABEL_108;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_101;
        }
        v5 |= 0x800u;
        uint64_t v39 = v8 + 1;
        uint64_t v40 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v41 = *v39;
        uint64_t v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v87 = (char *)sub_188C138((uint64_t)v8, v40);
          uint64_t v105 = v87;
          *(unsigned char *)(a1 + 44) = v88 != 0;
          if (!v87) {
            goto LABEL_153;
          }
        }
        else
        {
          uint64_t v39 = v8 + 2;
LABEL_58:
          uint64_t v105 = v39;
          *(unsigned char *)(a1 + 44) = v40 != 0;
        }
        goto LABEL_108;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_101;
        }
        v5 |= 0x1000u;
        uint64_t v42 = v8 + 1;
        uint64_t v43 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v44 = *v42;
        uint64_t v43 = v43 + (v44 << 7) - 128;
        if (v44 < 0)
        {
          uint64_t v89 = (char *)sub_188C138((uint64_t)v8, v43);
          uint64_t v105 = v89;
          *(unsigned char *)(a1 + 45) = v90 != 0;
          if (!v89) {
            goto LABEL_153;
          }
        }
        else
        {
          uint64_t v42 = v8 + 2;
LABEL_63:
          uint64_t v105 = v42;
          *(unsigned char *)(a1 + 45) = v43 != 0;
        }
        goto LABEL_108;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_101;
        }
        v5 |= 0x200u;
        uint64_t v45 = v8 + 1;
        int v46 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v47 = *v45;
        int v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v91 = (char *)sub_188C0D0((uint64_t)v8, v46);
          uint64_t v105 = v91;
          *(_DWORD *)(a1 + 36) = v92;
          if (!v91) {
            goto LABEL_153;
          }
        }
        else
        {
          uint64_t v45 = v8 + 2;
LABEL_68:
          uint64_t v105 = v45;
          *(_DWORD *)(a1 + 36) = v46;
        }
        goto LABEL_108;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_101;
        }
        v5 |= 0x400u;
        int v48 = v8 + 1;
        int v49 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_73;
        }
        int v50 = *v48;
        int v49 = v49 + (v50 << 7) - 128;
        if (v50 < 0)
        {
          uint64_t v93 = (char *)sub_188C0D0((uint64_t)v8, v49);
          uint64_t v105 = v93;
          *(_DWORD *)(a1 + 40) = v94;
          if (!v93) {
            goto LABEL_153;
          }
        }
        else
        {
          int v48 = v8 + 2;
LABEL_73:
          uint64_t v105 = v48;
          *(_DWORD *)(a1 + 40) = v49;
        }
        goto LABEL_108;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_101;
        }
        v5 |= 0x8000u;
        unint64_t v51 = v8 + 1;
        int v52 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_78;
        }
        int v53 = *v51;
        int v52 = v52 + (v53 << 7) - 128;
        if (v53 < 0)
        {
          uint64_t v95 = (char *)sub_188C0D0((uint64_t)v8, v52);
          uint64_t v105 = v95;
          *(_DWORD *)(a1 + 48) = v96;
          if (!v95) {
            goto LABEL_153;
          }
        }
        else
        {
          unint64_t v51 = v8 + 2;
LABEL_78:
          uint64_t v105 = v51;
          *(_DWORD *)(a1 + 48) = v52;
        }
        goto LABEL_108;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_101;
        }
        v5 |= 0x2000u;
        int v54 = v8 + 1;
        uint64_t v55 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_83;
        }
        int v56 = *v54;
        uint64_t v55 = v55 + (v56 << 7) - 128;
        if (v56 < 0)
        {
          uint64_t v97 = (char *)sub_188C138((uint64_t)v8, v55);
          uint64_t v105 = v97;
          *(unsigned char *)(a1 + 46) = v98 != 0;
          if (!v97) {
            goto LABEL_153;
          }
        }
        else
        {
          int v54 = v8 + 2;
LABEL_83:
          uint64_t v105 = v54;
          *(unsigned char *)(a1 + 46) = v55 != 0;
        }
        goto LABEL_108;
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_101;
        }
        uint64_t v57 = v8 + 1;
        unint64_t v58 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_88;
        }
        int v59 = *v57;
        int v60 = v58 + (v59 << 7);
        unint64_t v58 = (v60 - 128);
        if (v59 < 0)
        {
          uint64_t v105 = (char *)sub_188C138((uint64_t)v8, (v60 - 128));
          if (!v105) {
            goto LABEL_153;
          }
          unint64_t v58 = v99;
        }
        else
        {
          uint64_t v57 = v8 + 2;
LABEL_88:
          uint64_t v105 = v57;
        }
        if ((v58 - 1) > 2)
        {
          if (*v7) {
            int v104 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v104 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(16, v58, v104);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20000u;
          *(_DWORD *)(a1 + 56) = v58;
        }
        goto LABEL_108;
      case 0x11u:
        if (v9 != 136) {
          goto LABEL_101;
        }
        v5 |= 0x4000u;
        uint64_t v61 = v8 + 1;
        uint64_t v62 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_95;
        }
        int v63 = *v61;
        uint64_t v62 = v62 + (v63 << 7) - 128;
        if (v63 < 0)
        {
          uint64_t v100 = (char *)sub_188C138((uint64_t)v8, v62);
          uint64_t v105 = v100;
          *(unsigned char *)(a1 + 47) = v101 != 0;
          if (!v100) {
            goto LABEL_153;
          }
        }
        else
        {
          uint64_t v61 = v8 + 2;
LABEL_95:
          uint64_t v105 = v61;
          *(unsigned char *)(a1 + 47) = v62 != 0;
        }
        goto LABEL_108;
      case 0x12u:
        if (v9 != 144) {
          goto LABEL_101;
        }
        v5 |= 0x10000u;
        int v64 = v8 + 1;
        uint64_t v65 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_100;
        }
        int v66 = *v64;
        uint64_t v65 = v65 + (v66 << 7) - 128;
        if (v66 < 0)
        {
          unint64_t v102 = (char *)sub_188C138((uint64_t)v8, v65);
          uint64_t v105 = v102;
          *(unsigned char *)(a1 + 52) = v103 != 0;
          if (!v102) {
            goto LABEL_153;
          }
        }
        else
        {
          int v64 = v8 + 2;
LABEL_100:
          uint64_t v105 = v64;
          *(unsigned char *)(a1 + 52) = v65 != 0;
        }
        goto LABEL_108;
      default:
LABEL_101:
        if (v9) {
          BOOL v67 = (v9 & 7) == 4;
        }
        else {
          BOOL v67 = 1;
        }
        if (!v67)
        {
          if (*v7)
          {
            int v68 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v68 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v105;
          }
          uint64_t v105 = (char *)sub_1885AC0(v9, v68, v8, a3);
          if (!v105) {
            goto LABEL_153;
          }
LABEL_108:
          if (sub_11947B8((uint64_t)a3, &v105, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_153:
        }
          uint64_t v105 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v105;
    }
  }
}

unsigned char *sub_135FFD0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 25);
  unsigned char *v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_14:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v9 = *(unsigned char *)(a1 + 26);
  unsigned char *v4 = 24;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_17:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 27);
  unsigned char *v4 = 32;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
LABEL_20:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 32);
  unsigned char *v4 = 40;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 0x10) != 0)
  {
LABEL_23:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 48;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_29:
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 33);
    unsigned char *v4 = 56;
    v4[1] = v15;
    v4 += 2;
    if ((v6 & 0x80) == 0)
    {
LABEL_31:
      if ((v6 & 0x100) == 0) {
        goto LABEL_32;
      }
      goto LABEL_42;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_31;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v16 = *(unsigned char *)(a1 + 34);
  unsigned char *v4 = 64;
  v4[1] = v16;
  v4 += 2;
  if ((v6 & 0x100) == 0)
  {
LABEL_32:
    if ((v6 & 0x800) == 0) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
LABEL_42:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v17 = *(unsigned char *)(a1 + 35);
  unsigned char *v4 = 72;
  v4[1] = v17;
  v4 += 2;
  if ((v6 & 0x800) == 0)
  {
LABEL_33:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_48;
  }
LABEL_45:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v18 = *(unsigned char *)(a1 + 44);
  unsigned char *v4 = 80;
  v4[1] = v18;
  v4 += 2;
  if ((v6 & 0x1000) == 0)
  {
LABEL_34:
    if ((v6 & 0x200) == 0) {
      goto LABEL_57;
    }
    goto LABEL_51;
  }
LABEL_48:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v19 = *(unsigned char *)(a1 + 45);
  unsigned char *v4 = 88;
  v4[1] = v19;
  v4 += 2;
  if ((v6 & 0x200) != 0)
  {
LABEL_51:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v20 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 96;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unsigned int v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_57:
  if ((v6 & 0x400) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v23 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 104;
    v4[1] = v23;
    if (v23 > 0x7F)
    {
      v4[1] = v23 | 0x80;
      unsigned int v24 = v23 >> 7;
      v4[2] = v23 >> 7;
      v4 += 3;
      if (v23 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v25 = v24 >> 14;
          v24 >>= 7;
          *v4++ = v24;
        }
        while (v25);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v26 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 112;
    v4[1] = v26;
    if (v26 > 0x7F)
    {
      v4[1] = v26 | 0x80;
      unsigned int v27 = v26 >> 7;
      v4[2] = v26 >> 7;
      v4 += 3;
      if (v26 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v28 = v27 >> 14;
          v27 >>= 7;
          *v4++ = v27;
        }
        while (v28);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v29 = *(unsigned char *)(a1 + 46);
    unsigned char *v4 = 120;
    v4[1] = v29;
    v4 += 2;
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v30 = *(int *)(a1 + 56);
    *(_WORD *)uint64_t v4 = 384;
    v4[2] = v30;
    if (v30 > 0x7F)
    {
      v4[2] = v30 | 0x80;
      unint64_t v31 = v30 >> 7;
      v4[3] = v30 >> 7;
      v4 += 4;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v33 = *(unsigned char *)(a1 + 47);
    *(_WORD *)uint64_t v4 = 392;
    v4[2] = v33;
    v4 += 3;
  }
  if ((v6 & 0x10000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v34 = *(unsigned char *)(a1 + 52);
    *(_WORD *)uint64_t v4 = 400;
    v4[2] = v34;
    v4 += 3;
  }
  uint64_t v35 = *(void *)(a1 + 8);
  if ((v35 & 1) == 0) {
    return v4;
  }
  unint64_t v37 = v35 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v37 + 31) < 0)
  {
    int v38 = *(void **)(v37 + 8);
    uint64_t v39 = *(void *)(v37 + 16);
  }
  else
  {
    int v38 = (void *)(v37 + 8);
    LODWORD(v39) = *(unsigned __int8 *)(v37 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v39)
  {
    uint64_t v40 = (int)v39;
    memcpy(v4, v38, (int)v39);
    v4 += v40;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v38, v39, v4);
}

uint64_t sub_13605F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    uint64_t v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x80) != 0) {
      v2 += 2;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    if ((v1 & 0x100) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x200) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v1 & 0x400) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v1 & 0x800) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x1000) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x2000) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x4000) != 0) {
      v2 += 3;
    }
    if ((v1 & 0x8000) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  if ((v1 & 0x30000) != 0)
  {
    if ((v1 & 0x10000) != 0) {
      v2 += 3;
    }
    if ((v1 & 0x20000) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 56);
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v3 >= 0) {
        uint64_t v5 = v4;
      }
      else {
        uint64_t v5 = 12;
      }
      v2 += v5;
    }
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13607B8()
{
  return 1;
}

void *sub_13607C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.NavigationAudioFeedback");
}

uint64_t sub_13607D0(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  sub_13693AC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13608BC(uint64_t a1)
{
  sub_13607D0(a1);

  operator delete();
}

uint64_t sub_13608F4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13B9618(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_15:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_19;
        }
      }
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_26;
      }
LABEL_23:
      unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v9 = 0;
        *(unsigned char *)(v9 + 23) = 0;
      }
      goto LABEL_26;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_19:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 8) == 0) {
        goto LABEL_26;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 8) == 0) {
        goto LABEL_26;
      }
    }
    goto LABEL_23;
  }
LABEL_26:
  if ((v5 & 0xF0) != 0)
  {
    *(void *)(v1 + 80) = 0;
    *(void *)(v1 + 88) = 0;
  }
  if ((v5 & 0x3F00) != 0)
  {
    *(_OWORD *)(v1 + 96) = 0u;
    *(_OWORD *)(v1 + 112) = 0u;
  }
  char v11 = *(unsigned char *)(v1 + 8);
  uint64_t v10 = v1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_1360A68(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v71 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v71, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v71 + 1);
    unsigned int v9 = **(unsigned char **)v71;
    if ((char)**(unsigned char **)v71 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v71, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v71 + 2);
      }
    }
    *(void *)uint64_t v71 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_91;
        }
        v5 |= 0x10u;
        unsigned int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v71 = v12;
          *(_DWORD *)(a1 + 80) = v13;
          goto LABEL_89;
        }
        uint64_t v56 = sub_188C0D0((uint64_t)v8, v13);
        *(void *)uint64_t v71 = v56;
        *(_DWORD *)(a1 + 80) = v57;
        if (v56) {
          goto LABEL_89;
        }
        goto LABEL_130;
      case 2u:
        if (v9 != 16) {
          goto LABEL_91;
        }
        v5 |= 0x20u;
        char v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v58 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)uint64_t v71 = v58;
          *(_DWORD *)(a1 + 84) = v59;
          if (!v58) {
            goto LABEL_130;
          }
        }
        else
        {
          char v15 = v8 + 2;
LABEL_18:
          *(void *)uint64_t v71 = v15;
          *(_DWORD *)(a1 + 84) = v16;
        }
        goto LABEL_89;
      case 3u:
        if (v9 != 24) {
          goto LABEL_91;
        }
        v5 |= 0x40u;
        char v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v60 = sub_188C0D0((uint64_t)v8, v19);
          *(void *)uint64_t v71 = v60;
          *(_DWORD *)(a1 + 88) = v61;
          if (!v60) {
            goto LABEL_130;
          }
        }
        else
        {
          char v18 = v8 + 2;
LABEL_23:
          *(void *)uint64_t v71 = v18;
          *(_DWORD *)(a1 + 88) = v19;
        }
        goto LABEL_89;
      case 4u:
        if (v9 != 32) {
          goto LABEL_91;
        }
        v5 |= 0x80u;
        unsigned int v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v62 = sub_188C0D0((uint64_t)v8, v22);
          *(void *)uint64_t v71 = v62;
          *(_DWORD *)(a1 + 92) = v63;
          if (!v62) {
            goto LABEL_130;
          }
        }
        else
        {
          unsigned int v21 = v8 + 2;
LABEL_28:
          *(void *)uint64_t v71 = v21;
          *(_DWORD *)(a1 + 92) = v22;
        }
        goto LABEL_89;
      case 6u:
        if (v9 != 50) {
          goto LABEL_91;
        }
        unsigned int v24 = v8 - 1;
        while (1)
        {
          unsigned int v25 = (unsigned __int8 *)(v24 + 1);
          *(void *)uint64_t v71 = v24 + 1;
          unsigned int v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_13D9608(*(void *)(a1 + 24));
            uint64_t v28 = sub_188CDC8(a1 + 24, v29);
            unsigned int v25 = *(unsigned __int8 **)v71;
          }
          unsigned int v24 = (char *)sub_11AB844(a3, v28, v25);
          *(void *)uint64_t v71 = v24;
          if (!v24) {
            goto LABEL_130;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 50) {
            goto LABEL_89;
          }
        }
      case 8u:
        if (v9 != 66) {
          goto LABEL_91;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v30 = *(void *)(a1 + 8);
        unint64_t v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          unint64_t v31 = (uint64_t *)*v31;
        }
        unint64_t v32 = (void *)(a1 + 48);
        goto LABEL_83;
      case 9u:
        if (v9 != 74) {
          goto LABEL_91;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v33 = *(void *)(a1 + 8);
        unint64_t v31 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
        if (v33) {
          unint64_t v31 = (uint64_t *)*v31;
        }
        unint64_t v32 = (void *)(a1 + 56);
        goto LABEL_83;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_91;
        }
        char v34 = v8 + 1;
        unint64_t v35 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_51;
        }
        int v36 = *v34;
        int v37 = v35 + (v36 << 7);
        unint64_t v35 = (v37 - 128);
        if (v36 < 0)
        {
          *(void *)uint64_t v71 = sub_188C138((uint64_t)v8, (v37 - 128));
          if (!*(void *)v71) {
            goto LABEL_130;
          }
          unint64_t v35 = v64;
        }
        else
        {
          char v34 = v8 + 2;
LABEL_51:
          *(void *)uint64_t v71 = v34;
        }
        if (v35 <= 7)
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 96) = v35;
          goto LABEL_89;
        }
        if (*v7) {
          uint64_t v69 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v69 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v70 = 10;
        goto LABEL_123;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_91;
        }
        int v38 = v8 + 1;
        unint64_t v35 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v39 = *v38;
        int v40 = v35 + (v39 << 7);
        unint64_t v35 = (v40 - 128);
        if (v39 < 0)
        {
          *(void *)uint64_t v71 = sub_188C138((uint64_t)v8, (v40 - 128));
          if (!*(void *)v71) {
            goto LABEL_130;
          }
          unint64_t v35 = v65;
        }
        else
        {
          int v38 = v8 + 2;
LABEL_58:
          *(void *)uint64_t v71 = v38;
        }
        if (v35 <= 5)
        {
          *(_DWORD *)(a1 + 16) |= 0x200u;
          *(_DWORD *)(a1 + 100) = v35;
          goto LABEL_89;
        }
        if (*v7) {
          uint64_t v69 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v69 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v70 = 11;
        goto LABEL_123;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_91;
        }
        v5 |= 0x400u;
        int v41 = v8 + 1;
        uint64_t v42 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_65;
        }
        int v43 = *v41;
        uint64_t v42 = v42 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t v66 = sub_188C138((uint64_t)v8, v42);
          *(void *)uint64_t v71 = v66;
          *(unsigned char *)(a1 + 104) = v67 != 0;
          if (!v66) {
            goto LABEL_130;
          }
        }
        else
        {
          int v41 = v8 + 2;
LABEL_65:
          *(void *)uint64_t v71 = v41;
          *(unsigned char *)(a1 + 104) = v42 != 0;
        }
        goto LABEL_89;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_91;
        }
        int v44 = v8 + 1;
        unint64_t v35 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_70;
        }
        int v45 = *v44;
        int v46 = v35 + (v45 << 7);
        unint64_t v35 = (v46 - 128);
        if (v45 < 0)
        {
          *(void *)uint64_t v71 = sub_188C138((uint64_t)v8, (v46 - 128));
          if (!*(void *)v71) {
            goto LABEL_130;
          }
          unint64_t v35 = v68;
        }
        else
        {
          int v44 = v8 + 2;
LABEL_70:
          *(void *)uint64_t v71 = v44;
        }
        if (v35 > 2)
        {
          if (*v7) {
            uint64_t v69 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v69 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v70 = 13;
LABEL_123:
          sub_188C020(v70, v35, v69);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x800u;
          *(_DWORD *)(a1 + 108) = v35;
        }
        goto LABEL_89;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_91;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v47 = *(void *)(a1 + 8);
        unint64_t v31 = (uint64_t *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
        if (v47) {
          unint64_t v31 = (uint64_t *)*v31;
        }
        unint64_t v32 = (void *)(a1 + 64);
        goto LABEL_83;
      case 0xFu:
        if (v9 != 121) {
          goto LABEL_91;
        }
        uint64_t v49 = *(void *)v8;
        int v48 = v8 + 8;
        v5 |= 0x1000u;
        *(void *)(a1 + 112) = v49;
        goto LABEL_88;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_91;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v50 = *(void *)(a1 + 8);
        unint64_t v31 = (uint64_t *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
        if (v50) {
          unint64_t v31 = (uint64_t *)*v31;
        }
        unint64_t v32 = (void *)(a1 + 72);
LABEL_83:
        unint64_t v51 = (std::string *)sub_1880F84(v32, v31);
        int v52 = (void *)sub_188C244(v51, *(char **)v71, (uint64_t)a3);
        goto LABEL_84;
      case 0x11u:
        if (v9 != 137) {
          goto LABEL_91;
        }
        uint64_t v53 = *(void *)v8;
        int v48 = v8 + 8;
        v5 |= 0x2000u;
        *(void *)(a1 + 120) = v53;
LABEL_88:
        *(void *)uint64_t v71 = v48;
        goto LABEL_89;
      default:
LABEL_91:
        if (v9) {
          BOOL v54 = (v9 & 7) == 4;
        }
        else {
          BOOL v54 = 1;
        }
        if (!v54)
        {
          if (*v7)
          {
            uint64_t v55 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v55 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v71;
          }
          int v52 = sub_1885AC0(v9, v55, v8, a3);
LABEL_84:
          *(void *)uint64_t v71 = v52;
          if (!v52) {
            goto LABEL_130;
          }
LABEL_89:
          if (sub_11947B8((uint64_t)a3, (char **)v71, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_130:
        }
          *(void *)uint64_t v71 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v71;
    }
  }
}

unsigned char *sub_136117C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 80);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 84);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 88);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 92);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v19 = *(_DWORD *)(a1 + 32);
  if (v19)
  {
    for (int i = 0; i != v19; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 50;
      unsigned int v22 = *(_DWORD *)(v21 + 44);
      v4[1] = v22;
      if (v22 > 0x7F) {
        int v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        int v23 = v4 + 2;
      }
      uint64_t v4 = sub_13BA104(v21, v23, a3);
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_39:
      if ((v6 & 0x100) == 0) {
        goto LABEL_49;
      }
      goto LABEL_43;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_39;
  }
  uint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0) {
    goto LABEL_49;
  }
LABEL_43:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v24 = *(int *)(a1 + 96);
  unsigned char *v4 = 80;
  v4[1] = v24;
  if (v24 > 0x7F)
  {
    v4[1] = v24 | 0x80;
    unint64_t v25 = v24 >> 7;
    v4[2] = v24 >> 7;
    v4 += 3;
    if (v24 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v26 = v25 >> 14;
        v25 >>= 7;
        *v4++ = v25;
      }
      while (v26);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_49:
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v27 = *(int *)(a1 + 100);
    unsigned char *v4 = 88;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v30 = *(unsigned char *)(a1 + 104);
    unsigned char *v4 = 96;
    v4[1] = v30;
    v4 += 2;
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v31 = *(int *)(a1 + 108);
    unsigned char *v4 = 104;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unint64_t v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x1000) == 0)
    {
LABEL_69:
      if ((v6 & 8) == 0) {
        goto LABEL_70;
      }
      goto LABEL_76;
    }
  }
  else if ((v6 & 0x1000) == 0)
  {
    goto LABEL_69;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v34 = *(void *)(a1 + 112);
  unsigned char *v4 = 121;
  *(void *)(v4 + 1) = v34;
  v4 += 9;
  if ((v6 & 8) == 0)
  {
LABEL_70:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t v4 = sub_117A0AC(a3, 16, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x2000) == 0) {
    goto LABEL_80;
  }
LABEL_77:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v35 = *(void *)(a1 + 120);
  *(_WORD *)uint64_t v4 = 393;
  *(void *)(v4 + 2) = v35;
  v4 += 10;
LABEL_80:
  uint64_t v36 = *(void *)(a1 + 8);
  if ((v36 & 1) == 0) {
    return v4;
  }
  unint64_t v38 = v36 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v38 + 31) < 0)
  {
    int v39 = *(void **)(v38 + 8);
    uint64_t v40 = *(void *)(v38 + 16);
  }
  else
  {
    int v39 = (void *)(v38 + 8);
    LODWORD(v40) = *(unsigned __int8 *)(v38 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v40)
  {
    uint64_t v41 = (int)v40;
    memcpy(v4, v39, (int)v40);
    v4 += v41;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v39, v40, v4);
}

uint64_t sub_136176C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13BA868(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_19;
  }
  if (v8)
  {
    unint64_t v11 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_29;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v14 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_29:
  unint64_t v17 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_35;
  }
LABEL_32:
  unint64_t v20 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  uint64_t v22 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v21;
  }
  v2 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_36:
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x40) == 0)
    {
LABEL_17:
      if ((v8 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_35:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0) {
    goto LABEL_36;
  }
LABEL_16:
  if ((v8 & 0x40) == 0) {
    goto LABEL_17;
  }
LABEL_37:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x80) != 0) {
LABEL_18:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_19:
  if ((v8 & 0x3F00) != 0)
  {
    if ((v8 & 0x100) != 0)
    {
      int v9 = *(_DWORD *)(a1 + 96);
      if (v9 < 0) {
        uint64_t v10 = 11;
      }
      else {
        uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v10;
    }
    if ((v8 & 0x200) != 0)
    {
      int v23 = *(_DWORD *)(a1 + 100);
      if (v23 < 0) {
        uint64_t v24 = 11;
      }
      else {
        uint64_t v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v24;
    }
    uint64_t v25 = v2 + 2;
    if ((v8 & 0x400) == 0) {
      uint64_t v25 = v2;
    }
    if ((v8 & 0x800) != 0)
    {
      int v26 = *(_DWORD *)(a1 + 108);
      if (v26 < 0) {
        uint64_t v27 = 11;
      }
      else {
        uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v25 += v27;
    }
    if ((v8 & 0x1000) != 0) {
      v25 += 9;
    }
    if ((v8 & 0x2000) != 0) {
      uint64_t v2 = v25 + 10;
    }
    else {
      uint64_t v2 = v25;
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if (v28)
  {
    unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v30 + 31) < 0) {
      uint64_t v31 = *(void *)(v30 + 16);
    }
    else {
      uint64_t v31 = *(unsigned __int8 *)(v30 + 31);
    }
    v2 += v31;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1361AC0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_13694B8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_34;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    unint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 56), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_37;
    }
LABEL_34:
    unint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 64), v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_40;
    }
LABEL_37:
    unint64_t v20 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 72), v20, v22);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_41;
    }
LABEL_40:
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_42;
    }
LABEL_41:
    *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
      goto LABEL_14;
    }
LABEL_42:
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0x3F00) == 0) {
    goto LABEL_24;
  }
  if ((v9 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v9 & 0x200) == 0)
    {
LABEL_18:
      if ((v9 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_46;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  if ((v9 & 0x400) == 0)
  {
LABEL_19:
    if ((v9 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_47;
  }
LABEL_46:
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  if ((v9 & 0x800) == 0)
  {
LABEL_20:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_21;
    }
LABEL_48:
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    if ((v9 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_47:
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  if ((v9 & 0x1000) != 0) {
    goto LABEL_48;
  }
LABEL_21:
  if ((v9 & 0x2000) != 0) {
LABEL_22:
  }
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
LABEL_23:
  *(_DWORD *)(a1 + 16) |= v9;
LABEL_24:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1361D3C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_13BB038(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1361D94@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TrafficRerouteFeedback");
}

uint64_t sub_1361DA4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24AB900;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = a1;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(void *)(result + 120) = a1;
  *(void *)(result + 128) = 0;
  *(void *)(result + 136) = 0;
  *(void *)(result + 144) = a1;
  *(void *)(result + 152) = 0;
  *(void *)(result + 160) = 0;
  *(void *)(result + 168) = &qword_2550250;
  *(unsigned char *)(result + 176) = 0;
  return result;
}

void *sub_1361E7C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24AB980;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_1361EF8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24ABA00;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  *(void *)(v2 + 40) = &qword_2550250;
  *(void *)(v2 + 48) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 100) = 0u;
  return result;
}

double sub_1361F94(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24ABA80;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_DWORD *)(v2 + 80) = 0;
  double result = NAN;
  *(void *)(v2 + 84) = -1;
  *(void *)(v2 + 96) = 0xBFF0000000000000;
  return result;
}

double sub_1362028(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24ABB00;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 76) = 0u;
  *(_DWORD *)(v2 + 92) = 4;
  return result;
}

void *sub_13620C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24ABB80;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1362140(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24ABC00;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 0;
  *(_DWORD *)(result + 36) = -1;
  return result;
}

double sub_13621C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24ABC80;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = xmmword_20B93F0;
  return result;
}

uint64_t sub_1362244(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24ABD00;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 48) = 0;
  return result;
}

uint64_t sub_13622E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24ABD80;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1362368(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24ABE00;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 45) = 0;
  *(_DWORD *)(v2 + 56) = 1;
  return result;
}

double sub_13623F0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24ABE80;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = &qword_2550250;
  *(void *)(v2 + 56) = &qword_2550250;
  *(void *)(v2 + 64) = &qword_2550250;
  *(void *)(v2 + 72) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  return result;
}

uint64_t sub_13624A4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24ABF00;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 140) = 0u;
  return a1;
}

void sub_1362524(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1362554(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24ABF00;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  *(void *)(a1 + 52) = 0;
  int v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_188CA54((unsigned int *)(a1 + 48), v6);
    int v7 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v7, *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  int v8 = *(_DWORD *)(a2 + 64);
  if (v8)
  {
    sub_188CA54((unsigned int *)(a1 + 64), v8);
    int v9 = *(void **)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy(v9, *(const void **)(a2 + 72), 8 * *(int *)(a2 + 64));
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10) {
    sub_188B4F8(v4, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  long long v11 = *(_OWORD *)(a2 + 96);
  long long v12 = *(_OWORD *)(a2 + 112);
  long long v13 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 140) = *(_OWORD *)(a2 + 140);
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 128) = v13;
  *(_OWORD *)(a1 + 96) = v11;
  return a1;
}

void sub_136268C(_Unwind_Exception *a1)
{
  sub_1889DA8(v4);
  sub_1882CC0(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13626EC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 8));
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1362778(void *a1)
{
  sub_13626EC(a1);

  operator delete();
}

unsigned char *sub_13627B0(uint64_t a1)
{
  double result = sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v3)
  {
    *(_OWORD *)(a1 + 112) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
  }
  if ((v3 & 0x300) != 0)
  {
    *(_DWORD *)(a1 + 152) = 0;
    *(void *)(a1 + 144) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_1362834(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v78 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v78, a3[11].i32[1]) & 1) == 0)
  {
    int v7 = (void *)(a1 + 8);
    while (1)
    {
      int v8 = v78 + 1;
      unsigned int v9 = *v78;
      if (*v78 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          int v8 = (char *)sub_188C180((uint64_t)v78, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          int v8 = v78 + 2;
        }
      }
      uint64_t v78 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_112;
          }
          v5 |= 1u;
          long long v12 = v8 + 1;
          uint64_t v13 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v14 = *v12;
          uint64_t v13 = v13 + (v14 << 7) - 128;
          if ((v14 & 0x80000000) == 0)
          {
            long long v12 = v8 + 2;
LABEL_13:
            uint64_t v78 = v12;
            *(void *)(a1 + 80) = v13;
            goto LABEL_122;
          }
          BOOL v54 = (char *)sub_188C138((uint64_t)v8, v13);
          uint64_t v78 = v54;
          *(void *)(a1 + 80) = v55;
          if (!v54) {
            goto LABEL_127;
          }
          goto LABEL_122;
        case 2u:
          if (v9 != 16) {
            goto LABEL_112;
          }
          v5 |= 2u;
          uint64_t v15 = v8 + 1;
          uint64_t v16 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_18;
          }
          int v17 = *v15;
          uint64_t v16 = v16 + (v17 << 7) - 128;
          if (v17 < 0)
          {
            uint64_t v56 = (char *)sub_188C138((uint64_t)v8, v16);
            uint64_t v78 = v56;
            *(void *)(a1 + 88) = v57;
            if (!v56) {
              goto LABEL_127;
            }
          }
          else
          {
            uint64_t v15 = v8 + 2;
LABEL_18:
            uint64_t v78 = v15;
            *(void *)(a1 + 88) = v16;
          }
          goto LABEL_122;
        case 3u:
          if (v9 != 24) {
            goto LABEL_112;
          }
          v5 |= 4u;
          uint64_t v18 = v8 + 1;
          uint64_t v19 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_23;
          }
          int v20 = *v18;
          uint64_t v19 = v19 + (v20 << 7) - 128;
          if (v20 < 0)
          {
            uint64_t v58 = (char *)sub_188C138((uint64_t)v8, v19);
            uint64_t v78 = v58;
            *(void *)(a1 + 96) = v59;
            if (!v58) {
              goto LABEL_127;
            }
          }
          else
          {
            uint64_t v18 = v8 + 2;
LABEL_23:
            uint64_t v78 = v18;
            *(void *)(a1 + 96) = v19;
          }
          goto LABEL_122;
        case 4u:
          if (v9 == 32)
          {
            uint64_t v21 = v8 - 1;
            while (1)
            {
              uint64_t v78 = v21 + 1;
              uint64_t v22 = v21[1];
              if (v21[1] < 0)
              {
                int v23 = v22 + (v21[2] << 7);
                uint64_t v22 = (v23 - 128);
                if (v21[2] < 0)
                {
                  uint64_t v21 = (char *)sub_188C138((uint64_t)(v21 + 1), (v23 - 128));
                  uint64_t v22 = v24;
                }
                else
                {
                  v21 += 3;
                }
              }
              else
              {
                v21 += 2;
              }
              uint64_t v78 = v21;
              uint64_t v25 = *(unsigned int *)(a1 + 48);
              if (v25 == *(_DWORD *)(a1 + 52))
              {
                int v26 = v25 + 1;
                sub_188CA54((unsigned int *)(a1 + 48), v25 + 1);
                *(void *)(*(void *)(a1 + 56) + 8 * v25) = v22;
                uint64_t v21 = v78;
              }
              else
              {
                *(void *)(*(void *)(a1 + 56) + 8 * v25) = v22;
                int v26 = v25 + 1;
              }
              *(_DWORD *)(a1 + 48) = v26;
              if (!v21) {
                goto LABEL_127;
              }
              if (*(void *)a3 <= (unint64_t)v21 || *v21 != 32) {
                goto LABEL_122;
              }
            }
          }
          if (v9 == 34)
          {
            uint64_t v74 = (unsigned int *)(a1 + 48);
LABEL_111:
            unint64_t v75 = sub_188C2EC(v74, (unsigned __int8 *)v8, (uint64_t)a3);
          }
          else
          {
LABEL_112:
            if (v9) {
              BOOL v76 = (v9 & 7) == 4;
            }
            else {
              BOOL v76 = 1;
            }
            if (v76)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_127:
              uint64_t v78 = 0;
              goto LABEL_2;
            }
            if ((v9 - 8000) >> 6 > 0x7C)
            {
              if (*v7)
              {
                int v77 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                int v77 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                int v8 = v78;
              }
              unint64_t v75 = sub_1885AC0(v9, v77, v8, a3);
            }
            else
            {
              unint64_t v75 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25343A8, (uint64_t *)(a1 + 8), a3);
            }
          }
          uint64_t v78 = (char *)v75;
          if (!v75) {
            goto LABEL_127;
          }
LABEL_122:
          if (sub_11947B8((uint64_t)a3, &v78, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 5u:
          if (v9 != 40) {
            goto LABEL_112;
          }
          v5 |= 8u;
          uint64_t v27 = v8 + 1;
          uint64_t v28 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_42;
          }
          int v29 = *v27;
          uint64_t v28 = v28 + (v29 << 7) - 128;
          if (v29 < 0)
          {
            uint64_t v60 = (char *)sub_188C138((uint64_t)v8, v28);
            uint64_t v78 = v60;
            *(void *)(a1 + 104) = v61;
            if (!v60) {
              goto LABEL_127;
            }
          }
          else
          {
            uint64_t v27 = v8 + 2;
LABEL_42:
            uint64_t v78 = v27;
            *(void *)(a1 + 104) = v28;
          }
          goto LABEL_122;
        case 6u:
          if (v9 != 48) {
            goto LABEL_112;
          }
          v5 |= 0x10u;
          unint64_t v30 = v8 + 1;
          uint64_t v31 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_47;
          }
          int v32 = *v30;
          uint64_t v31 = v31 + (v32 << 7) - 128;
          if (v32 < 0)
          {
            uint64_t v62 = (char *)sub_188C138((uint64_t)v8, v31);
            uint64_t v78 = v62;
            *(void *)(a1 + 112) = v63;
            if (!v62) {
              goto LABEL_127;
            }
          }
          else
          {
            unint64_t v30 = v8 + 2;
LABEL_47:
            uint64_t v78 = v30;
            *(void *)(a1 + 112) = v31;
          }
          goto LABEL_122;
        case 7u:
          if (v9 != 56) {
            goto LABEL_112;
          }
          v5 |= 0x200u;
          uint64_t v34 = v8 + 1;
          LODWORD(v33) = *v8;
          if ((v33 & 0x80) == 0) {
            goto LABEL_52;
          }
          int v35 = *v34;
          uint64_t v33 = v33 + (v35 << 7) - 128;
          if (v35 < 0)
          {
            unint64_t v64 = (char *)sub_188C138((uint64_t)v8, v33);
            uint64_t v78 = v64;
            *(_DWORD *)(a1 + 152) = v65;
            if (!v64) {
              goto LABEL_127;
            }
          }
          else
          {
            uint64_t v34 = v8 + 2;
LABEL_52:
            uint64_t v78 = v34;
            *(_DWORD *)(a1 + 152) = v33;
          }
          goto LABEL_122;
        case 8u:
          if (v9 != 64) {
            goto LABEL_112;
          }
          v5 |= 0x20u;
          uint64_t v36 = v8 + 1;
          uint64_t v37 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_57;
          }
          int v38 = *v36;
          uint64_t v37 = v37 + (v38 << 7) - 128;
          if (v38 < 0)
          {
            uint64_t v66 = (char *)sub_188C138((uint64_t)v8, v37);
            uint64_t v78 = v66;
            *(void *)(a1 + 120) = v67;
            if (!v66) {
              goto LABEL_127;
            }
          }
          else
          {
            uint64_t v36 = v8 + 2;
LABEL_57:
            uint64_t v78 = v36;
            *(void *)(a1 + 120) = v37;
          }
          goto LABEL_122;
        case 9u:
          if (v9 != 72) {
            goto LABEL_112;
          }
          v5 |= 0x40u;
          int v39 = v8 + 1;
          uint64_t v40 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_62;
          }
          int v41 = *v39;
          uint64_t v40 = v40 + (v41 << 7) - 128;
          if (v41 < 0)
          {
            unint64_t v68 = (char *)sub_188C138((uint64_t)v8, v40);
            uint64_t v78 = v68;
            *(void *)(a1 + 128) = v69;
            if (!v68) {
              goto LABEL_127;
            }
          }
          else
          {
            int v39 = v8 + 2;
LABEL_62:
            uint64_t v78 = v39;
            *(void *)(a1 + 128) = v40;
          }
          goto LABEL_122;
        case 0xAu:
          if (v9 == 80)
          {
            uint64_t v42 = v8 - 1;
            while (1)
            {
              uint64_t v78 = v42 + 1;
              uint64_t v43 = v42[1];
              if (v42[1] < 0)
              {
                int v44 = v43 + (v42[2] << 7);
                uint64_t v43 = (v44 - 128);
                if (v42[2] < 0)
                {
                  uint64_t v42 = (char *)sub_188C138((uint64_t)(v42 + 1), (v44 - 128));
                  uint64_t v43 = v45;
                }
                else
                {
                  v42 += 3;
                }
              }
              else
              {
                v42 += 2;
              }
              uint64_t v78 = v42;
              uint64_t v46 = *(unsigned int *)(a1 + 64);
              if (v46 == *(_DWORD *)(a1 + 68))
              {
                int v47 = v46 + 1;
                sub_188CA54((unsigned int *)(a1 + 64), v46 + 1);
                *(void *)(*(void *)(a1 + 72) + 8 * v46) = v43;
                uint64_t v42 = v78;
              }
              else
              {
                *(void *)(*(void *)(a1 + 72) + 8 * v46) = v43;
                int v47 = v46 + 1;
              }
              *(_DWORD *)(a1 + 64) = v47;
              if (!v42) {
                goto LABEL_127;
              }
              if (*(void *)a3 <= (unint64_t)v42 || *v42 != 80) {
                goto LABEL_122;
              }
            }
          }
          if (v9 != 82) {
            goto LABEL_112;
          }
          uint64_t v74 = (unsigned int *)(a1 + 64);
          goto LABEL_111;
        case 0xBu:
          if (v9 != 88) {
            goto LABEL_112;
          }
          v5 |= 0x80u;
          int v48 = v8 + 1;
          uint64_t v49 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_81;
          }
          int v50 = *v48;
          uint64_t v49 = v49 + (v50 << 7) - 128;
          if (v50 < 0)
          {
            int v70 = (char *)sub_188C138((uint64_t)v8, v49);
            uint64_t v78 = v70;
            *(void *)(a1 + 136) = v71;
            if (!v70) {
              goto LABEL_127;
            }
          }
          else
          {
            int v48 = v8 + 2;
LABEL_81:
            uint64_t v78 = v48;
            *(void *)(a1 + 136) = v49;
          }
          goto LABEL_122;
        case 0xCu:
          if (v9 != 96) {
            goto LABEL_112;
          }
          v5 |= 0x100u;
          unint64_t v51 = v8 + 1;
          uint64_t v52 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_86;
          }
          int v53 = *v51;
          uint64_t v52 = v52 + (v53 << 7) - 128;
          if (v53 < 0)
          {
            uint64_t v72 = (char *)sub_188C138((uint64_t)v8, v52);
            uint64_t v78 = v72;
            *(void *)(a1 + 144) = v73;
            if (!v72) {
              goto LABEL_127;
            }
          }
          else
          {
            unint64_t v51 = v8 + 2;
LABEL_86:
            uint64_t v78 = v51;
            *(void *)(a1 + 144) = v52;
          }
          goto LABEL_122;
        default:
          goto LABEL_112;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v78;
}

char *sub_1362F44(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 80);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 88);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 96);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 48);
  if ((int)v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * i);
      char *v4 = 32;
      v4[1] = v18;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        v4[2] = v18 >> 7;
        v4 += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(void *)(a1 + 104);
    char *v4 = 40;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(void *)(a1 + 112);
    char *v4 = 48;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v27 = *(int *)(a1 + 152);
    char *v4 = 56;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v30 = *(void *)(a1 + 120);
    char *v4 = 64;
    v4[1] = v30;
    if (v30 > 0x7F)
    {
      v4[1] = v30 | 0x80;
      unint64_t v31 = v30 >> 7;
      v4[2] = v30 >> 7;
      v4 += 3;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v33 = *(void *)(a1 + 128);
    char *v4 = 72;
    v4[1] = v33;
    if (v33 > 0x7F)
    {
      v4[1] = v33 | 0x80;
      unint64_t v34 = v33 >> 7;
      v4[2] = v33 >> 7;
      v4 += 3;
      if (v33 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v35 = v34 >> 14;
          v34 >>= 7;
          *v4++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v36 = *(unsigned int *)(a1 + 64);
  if ((int)v36 >= 1)
  {
    for (uint64_t j = 0; j != v36; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v38 = *(void *)(*(void *)(a1 + 72) + 8 * j);
      char *v4 = 80;
      v4[1] = v38;
      if (v38 > 0x7F)
      {
        v4[1] = v38 | 0x80;
        unint64_t v39 = v38 >> 7;
        v4[2] = v38 >> 7;
        v4 += 3;
        if (v38 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v40 = v39 >> 14;
            v39 >>= 7;
            *v4++ = v39;
          }
          while (v40);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v41 = *(void *)(a1 + 136);
    char *v4 = 88;
    v4[1] = v41;
    if (v41 > 0x7F)
    {
      v4[1] = v41 | 0x80;
      unint64_t v42 = v41 >> 7;
      v4[2] = v41 >> 7;
      v4 += 3;
      if (v41 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v43 = v42 >> 14;
          v42 >>= 7;
          *v4++ = v42;
        }
        while (v43);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v44 = *(void *)(a1 + 144);
    char *v4 = 96;
    v4[1] = v44;
    if (v44 > 0x7F)
    {
      v4[1] = v44 | 0x80;
      unint64_t v45 = v44 >> 7;
      v4[2] = v44 >> 7;
      v4 += 3;
      if (v44 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v46 = v45 >> 14;
          v45 >>= 7;
          *v4++ = v45;
        }
        while (v46);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v47 = *(void *)(a1 + 8);
  if ((v47 & 1) == 0) {
    return v4;
  }
  unint64_t v49 = v47 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v49 + 31) < 0)
  {
    int v50 = *(void **)(v49 + 8);
    uint64_t v51 = *(void *)(v49 + 16);
  }
  else
  {
    int v50 = (void *)(v49 + 8);
    LODWORD(v51) = *(unsigned __int8 *)(v49 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v51)
  {
    uint64_t v52 = (int)v51;
    memcpy(v4, v50, (int)v51);
    v4 += v52;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v50, v51, v4);
}

uint64_t sub_136363C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = sub_188D5A8((unsigned int *)(a1 + 48));
  uint64_t v4 = *(unsigned int *)(a1 + 48);
  uint64_t result = v3 + v2 + sub_188D5A8((unsigned int *)(a1 + 64)) + v4 + *(unsigned int *)(a1 + 64);
  int v6 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v6) {
    goto LABEL_11;
  }
  if (v6)
  {
    result += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v6 & 2) == 0)
    {
LABEL_4:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_4;
  }
  result += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  result += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v6 & 8) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  result += ((9 * (__clz(*(void *)(a1 + 104) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v6 & 0x10) == 0)
  {
LABEL_7:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_22:
    result += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v6 & 0x40) == 0)
    {
LABEL_9:
      if ((v6 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_21:
  result += ((9 * (__clz(*(void *)(a1 + 112) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v6 & 0x20) != 0) {
    goto LABEL_22;
  }
LABEL_8:
  if ((v6 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_23:
  result += ((9 * (__clz(*(void *)(a1 + 128) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v6 & 0x80) != 0) {
LABEL_10:
  }
    result += ((9 * (__clz(*(void *)(a1 + 136) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_11:
  if ((v6 & 0x300) != 0)
  {
    if ((v6 & 0x100) != 0) {
      result += ((9 * (__clz(*(void *)(a1 + 144) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v6 & 0x200) != 0)
    {
      int v7 = *(_DWORD *)(a1 + 152);
      if (v7 < 0) {
        uint64_t v8 = 11;
      }
      else {
        uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v8;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_1363878(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188CA54((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 64);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 64);
    sub_188CA54((unsigned int *)(a1 + 64), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy((void *)(v10 + 8 * v9), *(const void **)(a2 + 72), 8 * *(int *)(a2 + 64));
  }
  int v11 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v11)
  {
    if (v11)
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      if ((v11 & 2) == 0)
      {
LABEL_8:
        if ((v11 & 4) == 0) {
          goto LABEL_9;
        }
        goto LABEL_28;
      }
    }
    else if ((v11 & 2) == 0)
    {
      goto LABEL_8;
    }
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    if ((v11 & 4) == 0)
    {
LABEL_9:
      if ((v11 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_29;
    }
LABEL_28:
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    if ((v11 & 8) == 0)
    {
LABEL_10:
      if ((v11 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_30;
    }
LABEL_29:
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    if ((v11 & 0x10) == 0)
    {
LABEL_11:
      if ((v11 & 0x20) == 0) {
        goto LABEL_12;
      }
      goto LABEL_31;
    }
LABEL_30:
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    if ((v11 & 0x20) == 0)
    {
LABEL_12:
      if ((v11 & 0x40) == 0) {
        goto LABEL_13;
      }
      goto LABEL_32;
    }
LABEL_31:
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    if ((v11 & 0x40) == 0)
    {
LABEL_13:
      if ((v11 & 0x80) == 0)
      {
LABEL_15:
        *(_DWORD *)(a1 + 40) |= v11;
        goto LABEL_16;
      }
LABEL_14:
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      goto LABEL_15;
    }
LABEL_32:
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    if ((v11 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  if ((v11 & 0x300) != 0)
  {
    if ((v11 & 0x100) != 0) {
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
    }
    if ((v11 & 0x200) != 0) {
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
    }
    *(_DWORD *)(a1 + 40) |= v11;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1363A30(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_1363A38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VenueIdentifier");
}

uint64_t sub_1363A48(uint64_t a1)
{
  if (!a1)
  {
    sub_1369A80();
  }

  return sub_13624A4(v3, a1, 0);
}

void sub_1363AA4()
{
}

uint64_t sub_1363B00(uint64_t a1, uint64_t a2)
{
  return sub_1332050(a2);
}

uint64_t sub_1363B08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1363B10()
{
}

uint64_t sub_1363B60(uint64_t a1, uint64_t a2)
{
  return sub_13320D8(a2);
}

uint64_t sub_1363B68(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1363B70()
{
}

void *sub_1363BBC(uint64_t a1, uint64_t a2)
{
  return sub_1332154(a2);
}

uint64_t sub_1363BC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1363BCC()
{
}

void sub_1363C14()
{
}

uint64_t sub_1363C38(uint64_t a1, uint64_t a2)
{
  return sub_13321CC(a2);
}

uint64_t sub_1363C40(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1363C48()
{
}

void sub_1363C90()
{
}

void *sub_1363CB4(uint64_t a1, uint64_t a2)
{
  return sub_1332228(a2);
}

uint64_t sub_1363CBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1363CC4()
{
}

void sub_1363D0C()
{
}

uint64_t sub_1363D30(uint64_t a1, uint64_t a2)
{
  return sub_1332284(a2);
}

uint64_t sub_1363D38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1363D40()
{
}

void sub_1363D88()
{
}

uint64_t sub_1363DAC(uint64_t a1, uint64_t a2)
{
  return sub_13322E0(a2);
}

uint64_t sub_1363DB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1363DBC()
{
}

void sub_1363E04()
{
}

void *sub_1363E28(uint64_t a1, uint64_t a2)
{
  return sub_133233C(a2);
}

uint64_t sub_1363E30(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1363E38()
{
}

void sub_1363E80()
{
}

uint64_t sub_1363EA4(uint64_t a1, uint64_t a2)
{
  return sub_1332398(a2);
}

uint64_t sub_1363EAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1363EB4()
{
}

void sub_1363EFC()
{
}

uint64_t sub_1363F20(uint64_t a1, uint64_t a2)
{
  return sub_13323F4(a2);
}

uint64_t sub_1363F28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1363F30()
{
}

void sub_1363F78()
{
}

uint64_t sub_1363F9C(uint64_t a1, uint64_t a2)
{
  return sub_1332450(a2);
}

uint64_t sub_1363FA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1363FAC()
{
}

void sub_1363FF4()
{
}

uint64_t sub_1364018(uint64_t a1, uint64_t a2)
{
  return sub_13324AC(a2);
}

uint64_t sub_1364020(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1364028()
{
}

uint64_t sub_1364078(uint64_t a1, uint64_t a2)
{
  return sub_1332508(a2);
}

uint64_t sub_1364080(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_1364088()
{
}

void sub_13640D0()
{
}

void *sub_13640F4(uint64_t a1, uint64_t a2)
{
  return sub_133259C(a2);
}

uint64_t sub_13640FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1364104()
{
}

double sub_1364170(uint64_t a1, uint64_t a2)
{
  return sub_13325F8(a2);
}

uint64_t sub_1364178(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1364180()
{
}

void sub_13641C8()
{
}

uint64_t sub_13641EC(uint64_t a1, uint64_t a2)
{
  return sub_1332690(a2);
}

uint64_t sub_13641F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_13641FC()
{
}

uint64_t sub_1364250(uint64_t a1, uint64_t a2)
{
  return sub_13326EC(a2);
}

uint64_t sub_1364258(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1364260()
{
}

void *sub_13642B4(uint64_t a1, uint64_t a2)
{
  return sub_133276C(a2);
}

uint64_t sub_13642BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13642C4()
{
}

void sub_136430C()
{
}

void *sub_1364330(uint64_t a1, uint64_t a2)
{
  return sub_133280C(a2);
}

uint64_t sub_1364338(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1364340()
{
}

double sub_136439C(uint64_t a1, uint64_t a2)
{
  return sub_1332868(a2);
}

uint64_t sub_13643A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13643AC()
{
}

void sub_13643F4()
{
}

uint64_t sub_1364418(uint64_t a1, uint64_t a2)
{
  return sub_134DD1C(a2);
}

uint64_t sub_1364420(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1364428()
{
}

void *sub_1364474(uint64_t a1, uint64_t a2)
{
  return sub_134DD78(a2);
}

uint64_t sub_136447C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1364484()
{
}

uint64_t sub_13644E0(uint64_t a1, uint64_t a2)
{
  return sub_134DDF0(a2);
}

uint64_t sub_13644E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13644F0()
{
}

uint64_t sub_1364540(uint64_t a1, uint64_t a2)
{
  return sub_134DE94(a2);
}

uint64_t sub_1364548(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1364550()
{
}

uint64_t sub_13645A4(uint64_t a1, uint64_t a2)
{
  return sub_134DF10(a2);
}

uint64_t sub_13645AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

void sub_13645B4()
{
}

uint64_t sub_1364608(uint64_t a1, uint64_t a2)
{
  return sub_134DFB4(a2);
}

uint64_t sub_1364610(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

void sub_1364618()
{
}

void sub_1364660()
{
}

void *sub_1364684(uint64_t a1, uint64_t a2)
{
  return sub_134E058(a2);
}

uint64_t sub_136468C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1364694()
{
}

void sub_13646DC()
{
}

uint64_t sub_1364700(uint64_t a1, uint64_t a2)
{
  return sub_134E0B4(a2);
}

uint64_t sub_1364708(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1364710()
{
}

void *sub_136475C(uint64_t a1, uint64_t a2)
{
  return sub_134E110(a2);
}

uint64_t sub_1364764(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_136476C()
{
}

void sub_13647B4()
{
}

uint64_t sub_13647D8(uint64_t a1, uint64_t a2)
{
  return sub_134E188(a2);
}

uint64_t sub_13647E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_13647E8()
{
}

uint64_t sub_136483C(uint64_t a1, uint64_t a2)
{
  return sub_134E1E4(a2);
}

uint64_t sub_1364844(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_136484C()
{
}

uint64_t sub_13648A0(uint64_t a1, uint64_t a2)
{
  return sub_134E280(a2);
}

uint64_t sub_13648A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_13648B0()
{
}

void *sub_136490C(uint64_t a1, uint64_t a2)
{
  return sub_134E320(a2);
}

uint64_t sub_1364914(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_136491C()
{
}

void sub_1364964()
{
}

void *sub_1364988(uint64_t a1, uint64_t a2)
{
  return sub_134E3C4(a2);
}

uint64_t sub_1364990(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1364998()
{
}

void sub_13649E0()
{
}

void *sub_1364A04(uint64_t a1, uint64_t a2)
{
  return sub_134E420(a2);
}

uint64_t sub_1364A0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1364A14()
{
}

uint64_t sub_1364A64(uint64_t a1, uint64_t a2)
{
  return sub_134E47C(a2);
}

uint64_t sub_1364A6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1364A74()
{
}

void sub_1364ABC()
{
}

uint64_t sub_1364AE0(uint64_t a1, uint64_t a2)
{
  return sub_134E4F8(a2);
}

uint64_t sub_1364AE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1364AF0()
{
}

void sub_1364B38()
{
}

uint64_t sub_1364B5C(uint64_t a1, uint64_t a2)
{
  return sub_134E554(a2);
}

uint64_t sub_1364B64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1364B6C()
{
}

void sub_1364BB4()
{
}

void *sub_1364BD8(uint64_t a1, uint64_t a2)
{
  return sub_134E5B0(a2);
}

uint64_t sub_1364BE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1364BE8()
{
}

void sub_1364C30()
{
}

uint64_t sub_1364C54(uint64_t a1, uint64_t a2)
{
  return sub_134E60C(a2);
}

uint64_t sub_1364C5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1364C64()
{
}

void sub_1364CAC()
{
}

void *sub_1364CD0(uint64_t a1, uint64_t a2)
{
  return sub_134E668(a2);
}

uint64_t sub_1364CD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1364CE0()
{
}

void sub_1364D28()
{
}

void *sub_1364D4C(uint64_t a1, uint64_t a2)
{
  return sub_134E6C4(a2);
}

uint64_t sub_1364D54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1364D5C()
{
}

uint64_t sub_1364DAC(uint64_t a1, uint64_t a2)
{
  return sub_134E720(a2);
}

uint64_t sub_1364DB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1364DBC()
{
}

uint64_t sub_1364E10(uint64_t a1, uint64_t a2)
{
  return sub_134E79C(a2);
}

uint64_t sub_1364E18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1364E20()
{
}

void *sub_1364E7C(uint64_t a1, uint64_t a2)
{
  return sub_134E83C(a2);
}

uint64_t sub_1364E84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1364E8C()
{
}

void *sub_1364ED8(uint64_t a1, uint64_t a2)
{
  return sub_134E8C4(a2);
}

uint64_t sub_1364EE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1364EE8()
{
}

uint64_t sub_1364F38(uint64_t a1, uint64_t a2)
{
  return sub_134E93C(a2);
}

uint64_t sub_1364F40(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1364F48()
{
}

uint64_t sub_1364F9C(uint64_t a1, uint64_t a2)
{
  return sub_134E9B8(a2);
}

uint64_t sub_1364FA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1364FAC()
{
}

double sub_1365004(uint64_t a1, uint64_t a2)
{
  return sub_134EA54(a2);
}

uint64_t sub_136500C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1365014()
{
}

uint64_t sub_1365068(uint64_t a1, uint64_t a2)
{
  return sub_134EAD8(a2);
}

uint64_t sub_1365070(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1365078()
{
}

void *sub_13650C8(uint64_t a1, uint64_t a2)
{
  return sub_134EB78(a2);
}

uint64_t sub_13650D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13650D8()
{
}

void sub_1365120()
{
}

uint64_t sub_1365144(uint64_t a1, uint64_t a2)
{
  return sub_134EBF4(a2);
}

uint64_t sub_136514C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1365154()
{
}

void sub_136519C()
{
}

uint64_t sub_13651C0(uint64_t a1, uint64_t a2)
{
  return sub_134EC50(a2);
}

uint64_t sub_13651C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 376);
}

void sub_13651D0()
{
}

void *sub_136521C(uint64_t a1, uint64_t a2)
{
  return sub_134ECAC(a2);
}

uint64_t sub_1365224(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_136522C()
{
}

double sub_136527C(uint64_t a1, uint64_t a2)
{
  return sub_134ED24(a2);
}

uint64_t sub_1365284(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_136528C()
{
}

void *sub_13652E0(uint64_t a1, uint64_t a2)
{
  return sub_134EDA0(a2);
}

uint64_t sub_13652E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13652F0()
{
}

void sub_1365338()
{
}

void *sub_136535C(uint64_t a1, uint64_t a2)
{
  return sub_13551A0(a2);
}

uint64_t sub_1365364(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_136536C()
{
}

void *sub_13653C8(uint64_t a1, uint64_t a2)
{
  return sub_13551FC(a2);
}

uint64_t sub_13653D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13653D8()
{
}

void sub_1365420()
{
}

uint64_t sub_1365444(uint64_t a1, uint64_t a2)
{
  return sub_1355284(a2);
}

uint64_t sub_136544C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1365454()
{
}

void sub_136549C()
{
}

uint64_t sub_13654C0(uint64_t a1, uint64_t a2)
{
  return sub_13552E0(a2);
}

uint64_t sub_13654C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_13654D0()
{
}

void sub_1365518()
{
}

uint64_t sub_136553C(uint64_t a1, uint64_t a2)
{
  return sub_135533C(a2);
}

uint64_t sub_1365544(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_136554C()
{
}

void sub_1365594()
{
}

uint64_t sub_13655B8(uint64_t a1, uint64_t a2)
{
  return sub_1355398(a2);
}

uint64_t sub_13655C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_13655C8()
{
}

void sub_1365610()
{
}

uint64_t sub_1365634(uint64_t a1, uint64_t a2)
{
  return sub_1363A48(a2);
}

uint64_t sub_136563C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1365644()
{
}

uint64_t sub_13656B4(uint64_t a1, uint64_t a2)
{
  return sub_1361DA4(a2);
}

uint64_t sub_13656BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13656C4()
{
}

void *sub_1365714(uint64_t a1, uint64_t a2)
{
  return sub_1361E7C(a2);
}

uint64_t sub_136571C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1365724()
{
}

double sub_1365794(uint64_t a1, uint64_t a2)
{
  return sub_1361EF8(a2);
}

uint64_t sub_136579C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13657A4()
{
}

double sub_136580C(uint64_t a1, uint64_t a2)
{
  return sub_1361F94(a2);
}

uint64_t sub_1365814(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_136581C()
{
}

double sub_136588C(uint64_t a1, uint64_t a2)
{
  return sub_1362028(a2);
}

uint64_t sub_1365894(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_136589C()
{
}

void *sub_13658EC(uint64_t a1, uint64_t a2)
{
  return sub_13620C4(a2);
}

uint64_t sub_13658F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13658FC()
{
}

uint64_t sub_1365954(uint64_t a1, uint64_t a2)
{
  return sub_1362140(a2);
}

uint64_t sub_136595C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1365964()
{
}

double sub_13659B8(uint64_t a1, uint64_t a2)
{
  return sub_13621C4(a2);
}

uint64_t sub_13659C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_13659C8()
{
}

uint64_t sub_1365A1C(uint64_t a1, uint64_t a2)
{
  return sub_1362244(a2);
}

uint64_t sub_1365A24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1365A2C()
{
}

uint64_t sub_1365A88(uint64_t a1, uint64_t a2)
{
  return sub_13622E0(a2);
}

uint64_t sub_1365A90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1365A98()
{
}

double sub_1365AF4(uint64_t a1, uint64_t a2)
{
  return sub_1362368(a2);
}

uint64_t sub_1365AFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1365B04()
{
}

double sub_1365B6C(uint64_t a1, uint64_t a2)
{
  return sub_13623F0(a2);
}

uint64_t sub_1365B74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1365B7C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_132220C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1365BFC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_132182C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1365C7C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_132C894(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1365CFC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1374318();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1365D7C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1477CCC();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_1365DFC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1332154(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      uint64_t result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1365E78(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1332050(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1194DD8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1365EF4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_133259C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1365F70(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1365F70(uint64_t a1, uint64_t a2)
{
}

void sub_1365F80(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_13D6A1C(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1365FFC(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1365FFC(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_136600C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1479A1C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1366088()
{
}

void sub_13660D0()
{
}

void sub_13660F4()
{
}

void sub_136613C()
{
}

void sub_1366160()
{
}

void sub_13661A8()
{
}

void sub_13661CC()
{
}

void sub_1366214()
{
}

void sub_1366238()
{
}

void sub_1366280()
{
}

void sub_13662A4()
{
}

void sub_13662EC()
{
}

void sub_1366310()
{
}

void sub_1366358()
{
}

void sub_136637C()
{
}

void sub_13663C4()
{
}

void sub_13663E8()
{
}

void sub_1366430()
{
}

void sub_1366454()
{
}

void sub_136649C()
{
}

void sub_13664C0()
{
}

void sub_1366508()
{
}

void sub_136652C()
{
}

void sub_1366574()
{
}

void sub_1366598(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_133336C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366618(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1334A4C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366698(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13350DC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366718(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_133AEE0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366798(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1345B78(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366818(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1335914(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366898(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_133623C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366918(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1336A58(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366998(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_133A304(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366A18(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_133A8CC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366A98(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13309F8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366B18(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_133FDDC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366B98(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1340E5C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366C18(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1343548(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366C98(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_133D350(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366D18(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_133B85C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366D98(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_133C244(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366E18(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13453A4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366E98(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_134D460(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366F18(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13245D4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1366F98(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1325484(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1367018(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13227F0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1367098(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1326D6C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1367118(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13A6608();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1367198(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1327E84(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1367218(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1325EEC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1367298(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_132A93C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1367318(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1328F28(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1367398(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13D2884();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1367418(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1329FD8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1367498(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_132F118(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1367518(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_134DD78(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1367594(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1367594(uint64_t a1, uint64_t a2)
{
}

void sub_13675A4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_134DE94(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1367620(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1367620(uint64_t a1, uint64_t a2)
{
}

void sub_1367630(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_134DF10(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_13676AC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_13676AC(uint64_t a1, uint64_t a2)
{
}

std::string *sub_13676BC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_134E320(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1367738(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1367738(uint64_t a1, std::string *a2)
{
  return sub_133B668(a2, a1);
}

void sub_1367748(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_134EBF4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_13677C4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_13677C4(uint64_t a1, uint64_t a2)
{
}

void sub_13677D4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_134DFB4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1367850(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1367850(uint64_t a1, uint64_t a2)
{
}

void sub_1367860(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_134E058(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_13678DC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_13678DC(uint64_t a1, uint64_t a2)
{
}

void sub_13678EC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_134E0B4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1367968(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1367968(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_1367978(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_134E1E4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_122B4EC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_13679F4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_134E280(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1367A70(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1367A70(uint64_t a1, std::string *a2)
{
  return sub_133ADF8(a2, a1);
}

void sub_1367A80(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_133280C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1367AFC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1367AFC(uint64_t a1, uint64_t a2)
{
}

void sub_1367B0C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_134E668(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1367B88(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1367B88(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_1367B98(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_134E720(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1301598(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1367C14(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_134EA54(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1367C90(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1367C90(uint64_t a1, uint64_t a2)
{
}

void sub_1367CA0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_134E554(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1367D1C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1367D1C(uint64_t a1, uint64_t a2)
{
}

void sub_1367D2C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_134E3C4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1367DA8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1367DA8(uint64_t a1, uint64_t a2)
{
}

void sub_1367DB8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_134E420(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1367E34(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1367E34(uint64_t a1, uint64_t a2)
{
}

void sub_1367E44(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_134EB78(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1367EC0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1367EC0(uint64_t a1, uint64_t a2)
{
}

void sub_1367ED0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_134EDA0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1367F4C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1367F4C(uint64_t a1, uint64_t a2)
{
}

void sub_1367F5C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1332228(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1367FD8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1367FD8(uint64_t a1, uint64_t a2)
{
}

void sub_1367FE8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1332284(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1368064(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1368064(uint64_t a1, uint64_t a2)
{
}

void sub_1368074(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_13321CC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_13680F0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_13680F0(uint64_t a1, uint64_t a2)
{
}

void sub_1368100(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_133233C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_136817C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_136817C(uint64_t a1, uint64_t a2)
{
}

void sub_136818C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_13D8E84(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1368208(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1368208(uint64_t a1, uint64_t a2)
{
}

void sub_1368218(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1332398(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1368294(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1368294(uint64_t a1, uint64_t a2)
{
}

void sub_13682A4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_13322E0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1368320(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1368320(uint64_t a1, uint64_t a2)
{
}

void sub_1368330(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_13324AC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_13683AC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_13683AC(uint64_t a1, uint64_t a2)
{
}

void sub_13683BC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_13323F4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1368438(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1368438(uint64_t a1, uint64_t a2)
{
}

void sub_1368448(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_13DAB08(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_13684C4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_13684C4(uint64_t a1, uint64_t a2)
{
}

void sub_13684D4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1332450(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1368550(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1368550(uint64_t a1, uint64_t a2)
{
}

void sub_1368560(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_13326EC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_13685DC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_13685DC(uint64_t a1, uint64_t a2)
{
}

void sub_13685EC()
{
}

void sub_1368634()
{
}

void sub_1368658()
{
}

void sub_13686A0()
{
}

void sub_13686C4()
{
}

void sub_136870C()
{
}

void sub_1368730()
{
}

void sub_1368778()
{
}

void sub_136879C()
{
}

void sub_13687E4()
{
}

void sub_1368808()
{
}

void sub_1368850()
{
}

void sub_1368874()
{
}

void sub_13688BC()
{
}

void sub_13688E0()
{
}

void sub_1368928()
{
}

void sub_136894C()
{
}

void sub_1368994()
{
}

void sub_13689B8()
{
}

void sub_1368A00()
{
}

void sub_1368A24()
{
}

void sub_1368A6C()
{
}

void sub_1368A90()
{
}

void sub_1368AD8()
{
}

void sub_1368AFC()
{
}

void sub_1368B44()
{
}

void sub_1368B68()
{
}

void sub_1368BB0()
{
}

void sub_1368BD4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_134FE4C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1368C54(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_134F574(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1368CD4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_134EEDC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1368D54(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1473CF4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1368DD4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1350B1C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1368E54(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1355284(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1368ED0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1368ED0(uint64_t a1, uint64_t a2)
{
}

void sub_1368EE0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_13551FC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1368F5C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1368F5C(uint64_t a1, uint64_t a2)
{
}

void sub_1368F6C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_13551A0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1368FE8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1368FE8(uint64_t a1, uint64_t a2)
{
}

void sub_1368FF8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1479774(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1369074(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1369074(uint64_t a1, uint64_t a2)
{
}

void sub_1369084(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_13552E0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1369100(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1369100(uint64_t a1, uint64_t a2)
{
}

void sub_1369110()
{
}

void sub_1369158()
{
}

void sub_136917C()
{
}

void sub_13691C4()
{
}

void sub_13691E8()
{
}

void sub_1369230()
{
}

void sub_1369254()
{
}

void sub_136929C()
{
}

void sub_13692C0()
{
}

void sub_1369308()
{
}

void sub_136932C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1357D68(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_13693AC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13B95DC();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_136942C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1361DA4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_13694A8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_13694A8(uint64_t a1, uint64_t a2)
{
}

void sub_13694B8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_13D9608(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1369534(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1369534(uint64_t a1, uint64_t a2)
{
}

void sub_1369544(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1359A60(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_13695C4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13607D0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1369644(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_135B3CC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_13696C4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_135C23C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1369744(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_135D9CC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_13697C4(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1361EF8(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1369840(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1369840(uint64_t a1, std::string *a2)
{
  return sub_135AFB4(a2, a1);
}

void sub_1369850(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_13623F0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_13698CC(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_13698CC(uint64_t a1, uint64_t a2)
{
}

void sub_13698DC(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1361F94(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1369958(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1369958(uint64_t a1, std::string *a2)
{
  return sub_135B28C(a2, a1);
}

void sub_1369968(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1362028(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_13699E4(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_13699E4(uint64_t a1, std::string *a2)
{
  return sub_135D55C(a2, a1);
}

std::string *sub_13699F4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_13620C4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1369A70(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1369A70(uint64_t a1, std::string *a2)
{
  return sub_135E01C(a2, a1);
}

void sub_1369A80()
{
}

void sub_1369AC8()
{
}

BOOL sub_1369AEC(unsigned int a1)
{
  return a1 < 4;
}

BOOL sub_1369AF8(unsigned int a1)
{
  return a1 < 2;
}

BOOL sub_1369B04(int a1)
{
  return (a1 - 1) < 3;
}

uint64_t sub_1369B14(unsigned int a1)
{
  BOOL v1 = a1 - 13 < 2 || a1 == 100;
  return a1 < 0xB || v1;
}

BOOL sub_1369B38(unsigned int a1)
{
  return a1 < 0xF;
}

BOOL sub_1369B44(unsigned int a1)
{
  return a1 < 2;
}

BOOL sub_1369B50(unsigned int a1)
{
  return a1 < 6;
}

BOOL sub_1369B5C(int a1)
{
  return a1 == 0;
}

BOOL sub_1369B68(unsigned int a1)
{
  return a1 < 8;
}

BOOL sub_1369B74(unsigned int a1)
{
  return a1 < 2;
}

BOOL sub_1369B80(unsigned int a1)
{
  return a1 < 8;
}

BOOL sub_1369B8C(unsigned int a1)
{
  return a1 < 5;
}

BOOL sub_1369B98(int a1)
{
  return (a1 - 1) < 4;
}

BOOL sub_1369BA8(unsigned int a1)
{
  return a1 < 4;
}

uint64_t sub_1369BB4(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_145F708(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(void *)(v6 + 64) = 0;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1369C4C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1369CD0((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_1369CD0(uint64_t (***result)()))()
{
  if (result != &off_2534448)
  {
    BOOL v1 = result;
    uint64_t v2 = (uint64_t)result[3];
    if (v2)
    {
      sub_1374224(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[4];
    if (v3)
    {
      sub_1374224(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[5];
    if (v4)
    {
      sub_13D2774(v4);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[6];
    if (result)
    {
      sub_145FD84(result);
      operator delete();
    }
  }
  return result;
}

void sub_1369D9C(uint64_t a1)
{
  sub_1369C4C(a1);

  operator delete();
}

uint64_t sub_1369DD4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_12:
    uint64_t result = sub_1369E6C(*(void *)(v1 + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  uint64_t result = sub_1369E6C(*(void *)(result + 24));
  if ((v2 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_13:
  uint64_t result = sub_1369F48(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_1369BB4(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1369E6C(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_1371944(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 72);
  uint64_t v6 = *(unsigned int *)(a1 + 104);
  if ((int)v6 >= 1)
  {
    char v7 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_1373A48(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 104) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      uint64_t result = sub_1374354(*(void *)(a1 + 120));
    }
    if ((v9 & 2) != 0) {
      uint64_t result = sub_13743C4(*(void *)(a1 + 128));
    }
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_1369F48(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_17:
    uint64_t result = (uint64_t)sub_13D28C0(*(void *)(a1 + 56));
    if ((v3 & 4) == 0)
    {
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_18;
  }
  unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_17;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_17;
    }
  }
LABEL_4:
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_18:
  uint64_t result = sub_13D2980(*(void *)(a1 + 64));
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = (uint64_t)sub_13D28C0(*(void *)(a1 + 72));
LABEL_7:
  if ((v3 & 0x70) != 0)
  {
    *(_DWORD *)(a1 + 88) = 0;
    *(void *)(a1 + 80) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_136A01C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v23 + 2;
      }
    }
    unint64_t v23 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (v11) {
          goto LABEL_20;
        }
        uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v12 = (void *)*v12;
        }
        sub_13D6A1C((uint64_t)v12);
        uint64_t v11 = v13;
        *(void *)(a1 + 24) = v13;
        goto LABEL_19;
      case 2u:
        if (v8 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (!v11)
        {
          uint64_t v14 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v14 = (void *)*v14;
          }
          sub_13D6A1C((uint64_t)v14);
          uint64_t v11 = v15;
          *(void *)(a1 + 32) = v15;
LABEL_19:
          char v7 = v23;
        }
LABEL_20:
        uint64_t v16 = (char *)sub_13319DC(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 3u:
        if (v8 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v17 = *(void *)(a1 + 40);
        if (!v17)
        {
          unint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_13DAB08((uint64_t)v18);
          *(void *)(a1 + 40) = v17;
          char v7 = v23;
        }
        uint64_t v16 = (char *)sub_1323390(a3, v17, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 4u:
        if (v8 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        unint64_t v19 = *(void **)(a1 + 48);
        if (!v19)
        {
          unint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v20 = (void *)*v20;
          }
          unint64_t v19 = sub_1478C60((uint64_t)v20);
          *(void *)(a1 + 48) = v19;
          char v7 = v23;
        }
        uint64_t v16 = sub_129760C(a3, (uint64_t)v19, (unsigned __int8 *)v7);
        goto LABEL_40;
      default:
LABEL_33:
        if (v8) {
          BOOL v21 = (v8 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v6)
          {
            unint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = v23;
          }
          uint64_t v16 = (char *)sub_1885AC0(v8, v22, v7, a3);
LABEL_40:
          unint64_t v23 = v16;
          if (!v16) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
            return v23;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v23;
    }
  }
}

char *sub_136A2A0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_1374B08(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 44);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_13D2F58(v13, v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 44);
    v4[1] = v17;
    if (v17 > 0x7F) {
      unint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      unint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_1460138(v16, v18, a3);
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    unint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    unint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_136A4F8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1374EEC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v9 = sub_13D3304(*(void *)(a1 + 40));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_10:
    uint64_t v6 = sub_1460320(*(void *)(a1 + 48));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_136A638(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) == 0) {
    goto LABEL_39;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      sub_13D6A1C((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_2534750;
    }
    sub_136A7DC(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(void *)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    sub_13D6A1C((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    uint64_t v12 = &off_2534750;
  }
  sub_136A7DC(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_39;
    }
    goto LABEL_31;
  }
LABEL_23:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 40);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = sub_13DAB08((uint64_t)v15);
    *(void *)(a1 + 40) = v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v16 = &off_2536850;
  }
  sub_136AA7C(v13, (uint64_t)v16);
  if ((v4 & 8) != 0)
  {
LABEL_31:
    *(_DWORD *)(a1 + 16) |= 8u;
    unsigned int v17 = *(void **)(a1 + 48);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      unsigned int v17 = sub_1478C60((uint64_t)v19);
      *(void *)(a1 + 48) = v17;
    }
    if (*(void *)(a2 + 48)) {
      unint64_t v20 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unint64_t v20 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v17, (uint64_t)v20);
  }
LABEL_39:
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_136A7DC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    unsigned int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *unsigned int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148CD5C((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    unint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_148CDE8((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 16);
  if ((v24 & 3) != 0)
  {
    if (v24)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      unint64_t v25 = *(std::string **)(a1 + 120);
      if (!v25)
      {
        uint64_t v26 = *(void *)(a1 + 8);
        unint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          unint64_t v27 = (void *)*v27;
        }
        unint64_t v25 = (std::string *)sub_13D6B7C((uint64_t)v27);
        *(void *)(a1 + 120) = v25;
      }
      if (*(void *)(a2 + 120)) {
        unint64_t v28 = *(uint64_t (****)())(a2 + 120);
      }
      else {
        unint64_t v28 = &off_2534810;
      }
      sub_137510C(v25, (uint64_t)v28);
    }
    if ((v24 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      unint64_t v29 = *(std::string **)(a1 + 128);
      if (!v29)
      {
        uint64_t v30 = *(void *)(a1 + 8);
        unint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          unint64_t v31 = (void *)*v31;
        }
        unint64_t v29 = (std::string *)sub_13DA8BC((uint64_t)v31);
        *(void *)(a1 + 128) = v29;
      }
      if (*(void *)(a2 + 128)) {
        unint64_t v32 = *(uint64_t (****)())(a2 + 128);
      }
      else {
        unint64_t v32 = &off_2536748;
      }
      sub_117EF04(v29, (uint64_t)v32);
    }
  }
  uint64_t v33 = *(void *)(a2 + 8);
  if (v33)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v33 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_136AA7C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 48);
      uint64_t v7 = *(void *)(a1 + 8);
      unsigned int v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        unsigned int v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v10 = *(void *)(a1 + 56);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (void *)*v12;
        }
        uint64_t v10 = sub_13DAB64((uint64_t)v12);
        *(void *)(a1 + 56) = v10;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v13 = &off_25368B0;
      }
      sub_13D3504(v10, (uint64_t)v13);
      if ((v4 & 4) == 0)
      {
LABEL_8:
        if ((v4 & 8) == 0) {
          goto LABEL_9;
        }
        goto LABEL_34;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_8;
    }
    *(_DWORD *)(a1 + 40) |= 4u;
    int v14 = *(void **)(a1 + 64);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      int v14 = sub_13DABC0((uint64_t)v16);
      *(void *)(a1 + 64) = v14;
    }
    if (*(void *)(a2 + 64)) {
      int v17 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      int v17 = &off_25368F8;
    }
    sub_13D3608((uint64_t)v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_9:
      if ((v4 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_42;
    }
LABEL_34:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v18 = *(void *)(a1 + 72);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = sub_13DAB64((uint64_t)v20);
      *(void *)(a1 + 72) = v18;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v21 = &off_25368B0;
    }
    sub_13D3504(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_10:
      if ((v4 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_43;
    }
LABEL_42:
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v4 & 0x20) == 0)
    {
LABEL_11:
      if ((v4 & 0x40) == 0)
      {
LABEL_13:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_14;
      }
LABEL_12:
      *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
      goto LABEL_13;
    }
LABEL_43:
    *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
    if ((v4 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_136AC4C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1494090((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    unsigned int v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *unsigned int v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v9 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(void *)(a1 + 72) = v9;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_136AD44(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_136AE2C(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_18856CC(*(void *)(a1 + 48) + 16);
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_136ADBC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_1373910(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v6 = *(void *)(a1 + 120);
  if ((*(unsigned char *)(v6 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(v6 + 24));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_136AE2C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 56) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 4) != 0)
    {
      uint64_t result = sub_13D3704(*(void *)(a1 + 64));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 72) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_136AEA0(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_136AEA8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteLineStyleInfo.LabelInfo");
}

void *sub_136AEB8(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_136AF2C(void *a1)
{
  sub_136AEB8(a1);

  operator delete();
}

uint64_t sub_136AF64(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_136AF8C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v31 + 2;
      }
    }
    unint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v16 = v8 + 2;
LABEL_26:
        unint64_t v31 = v16;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_36;
      }
      unint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v17);
      unint64_t v31 = v25;
      *(_DWORD *)(a1 + 32) = v26;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      unint64_t v31 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_36;
    }
    unint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
    unint64_t v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    int v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      int v22 = v8 + 2;
LABEL_35:
      unint64_t v31 = v22;
      *(_DWORD *)(a1 + 24) = v23;
      goto LABEL_36;
    }
    unint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    unint64_t v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v31;
    }
    unint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  unint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_136B1E0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_136B400(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_136B4CC()
{
  return 1;
}

void *sub_136B4D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteLineStyleInfo.LaneChangeInfo");
}

uint64_t sub_136B4E4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2534480)
  {
    unint64_t v5 = *(void **)(a1 + 48);
    if (v5)
    {
      sub_145FD84(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_1369C4C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_148B1C8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_136B5C0(uint64_t a1)
{
  sub_136B4E4(a1);

  operator delete();
}

uint64_t sub_136B5F8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_136AF64(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      uint64_t result = sub_1369BB4(*(void *)(v1 + 48));
    }
    if ((v5 & 2) != 0) {
      uint64_t result = sub_1369DD4(*(void *)(v1 + 56));
    }
  }
  if ((v5 & 0x3C) != 0)
  {
    *(_DWORD *)(v1 + 72) = 0;
    *(void *)(v1 + 64) = 0;
    *(unsigned char *)(v1 + 76) = 1;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_136B6B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v47 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v47, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v47 + 1;
    unsigned int v9 = *v47;
    if (*v47 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v47, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v47 + 2;
      }
    }
    uint64_t v47 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_52;
        }
        unsigned int v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v47 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v47) {
            goto LABEL_77;
          }
          unint64_t v13 = v39;
          if (!v39)
          {
LABEL_14:
            *(_DWORD *)(a1 + 16) |= 4u;
            *(_DWORD *)(a1 + 64) = 0;
            goto LABEL_60;
          }
        }
        else
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          uint64_t v47 = v12;
          if (!v13) {
            goto LABEL_14;
          }
        }
        if (*v7) {
          unint64_t v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v40);
        goto LABEL_60;
      case 2u:
        if (v9 != 16) {
          goto LABEL_52;
        }
        v5 |= 8u;
        uint64_t v16 = v8 + 1;
        int v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          unint64_t v41 = (char *)sub_188C0D0((uint64_t)v8, v17);
          uint64_t v47 = v41;
          *(_DWORD *)(a1 + 68) = v42;
          if (!v41) {
            goto LABEL_77;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_19:
          uint64_t v47 = v16;
          *(_DWORD *)(a1 + 68) = v17;
        }
        goto LABEL_60;
      case 3u:
        if (v9 != 24) {
          goto LABEL_52;
        }
        v5 |= 0x10u;
        uint64_t v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          unint64_t v43 = (char *)sub_188C0D0((uint64_t)v8, v20);
          uint64_t v47 = v43;
          *(_DWORD *)(a1 + 72) = v44;
          if (!v43) {
            goto LABEL_77;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_24:
          uint64_t v47 = v19;
          *(_DWORD *)(a1 + 72) = v20;
        }
        goto LABEL_60;
      case 4u:
        if (v9 != 34) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        int v22 = *(void **)(a1 + 48);
        if (!v22)
        {
          int v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v23 = (void *)*v23;
          }
          int v22 = sub_1478C60((uint64_t)v23);
          *(void *)(a1 + 48) = v22;
          unsigned int v8 = v47;
        }
        int v24 = sub_129760C(a3, (uint64_t)v22, (unsigned __int8 *)v8);
        goto LABEL_59;
      case 5u:
        if (v9 != 42) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v25 = *(void *)(a1 + 56);
        if (!v25)
        {
          int v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v26 = (void *)*v26;
          }
          sub_13D6098((uint64_t)v26);
          uint64_t v25 = v27;
          *(void *)(a1 + 56) = v27;
          unsigned int v8 = v47;
        }
        int v24 = sub_136BB18(a3, v25, (unsigned __int8 *)v8);
        goto LABEL_59;
      case 6u:
        if (v9 != 48) {
          goto LABEL_52;
        }
        v5 |= 0x20u;
        int v28 = v8 + 1;
        uint64_t v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          unint64_t v45 = (char *)sub_188C138((uint64_t)v8, v29);
          uint64_t v47 = v45;
          *(unsigned char *)(a1 + 76) = v46 != 0;
          if (!v45) {
            goto LABEL_77;
          }
        }
        else
        {
          int v28 = v8 + 2;
LABEL_41:
          uint64_t v47 = v28;
          *(unsigned char *)(a1 + 76) = v29 != 0;
        }
        goto LABEL_60;
      case 7u:
        if (v9 != 58) {
          goto LABEL_52;
        }
        unint64_t v31 = v8 - 1;
        while (1)
        {
          unint64_t v32 = (unsigned __int8 *)(v31 + 1);
          uint64_t v47 = v31 + 1;
          uint64_t v33 = *(_DWORD **)(a1 + 40);
          if (v33 && (uint64_t v34 = *(int *)(a1 + 32), (int)v34 < *v33))
          {
            *(_DWORD *)(a1 + 32) = v34 + 1;
            uint64_t v35 = *(void *)&v33[2 * v34 + 2];
          }
          else
          {
            uint64_t v36 = sub_13D6118(*(void *)(a1 + 24));
            uint64_t v35 = sub_188CDC8(a1 + 24, v36);
            unint64_t v32 = (unsigned __int8 *)v47;
          }
          unint64_t v31 = sub_136BBA8(a3, v35, v32);
          uint64_t v47 = v31;
          if (!v31) {
            goto LABEL_77;
          }
          if (*(void *)a3 <= (unint64_t)v31 || *v31 != 58) {
            goto LABEL_60;
          }
        }
      default:
LABEL_52:
        if (v9) {
          BOOL v37 = (v9 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v7)
          {
            unint64_t v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v47;
          }
          int v24 = (char *)sub_1885AC0(v9, v38, v8, a3);
LABEL_59:
          uint64_t v47 = v24;
          if (!v24) {
            goto LABEL_77;
          }
LABEL_60:
          if (sub_11947B8((uint64_t)a3, &v47, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_77:
        }
          uint64_t v47 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v47;
    }
  }
}

char *sub_136BB18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_136A01C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_136BBA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_136AF8C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_136BC38(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 68);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 72);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 44);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    uint64_t v4 = sub_1460138(v16, v18, a3);
    if ((v6 & 2) == 0)
    {
LABEL_24:
      if ((v6 & 0x20) == 0) {
        goto LABEL_41;
      }
      goto LABEL_38;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_24;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    int v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    int v21 = v4 + 2;
  }
  uint64_t v4 = sub_136A2A0(v19, (unint64_t)v21, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_38:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v22 = *(unsigned char *)(a1 + 76);
    char *v4 = 48;
    v4[1] = v22;
    v4 += 2;
  }
LABEL_41:
  int v23 = *(_DWORD *)(a1 + 32);
  if (v23)
  {
    for (int i = 0; i != v23; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v25 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 58;
      unsigned int v26 = *(_DWORD *)(v25 + 20);
      v4[1] = v26;
      if (v26 > 0x7F) {
        uint64_t v27 = sub_188A9CC(v26, v4 + 1);
      }
      else {
        uint64_t v27 = v4 + 2;
      }
      uint64_t v4 = sub_136B1E0(v25, (unint64_t)v27, a3);
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    unint64_t v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    unint64_t v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_136C000(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_136B400(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x3F) == 0) {
    goto LABEL_18;
  }
  if (v8)
  {
    uint64_t v11 = sub_1460320(*(void *)(a1 + 48));
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_22;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v12 = sub_136A4F8(*(void *)(a1 + 56));
  v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_22:
  int v13 = *(_DWORD *)(a1 + 64);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v14;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_26:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) != 0) {
LABEL_15:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  if ((v8 & 0x20) != 0) {
    v2 += 2;
  }
LABEL_18:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v15 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_136C1C0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148CBC8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void **)(a1 + 48);
      if (!v11)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        int v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          int v13 = (void *)*v13;
        }
        uint64_t v11 = sub_1478C60((uint64_t)v13);
        *(void *)(a1 + 48) = v11;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v14 = &off_2539400;
      }
      sub_136AC4C((uint64_t)v11, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_33;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 56);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      unsigned int v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        unsigned int v17 = (void *)*v17;
      }
      sub_13D6098((uint64_t)v17);
      *(void *)(a1 + 56) = v15;
    }
    if (*(void *)(a2 + 56)) {
      int v18 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      int v18 = &off_2534448;
    }
    sub_136A638(v15, (uint64_t)v18);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_34;
    }
LABEL_33:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_35;
    }
LABEL_34:
    *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
      goto LABEL_12;
    }
LABEL_35:
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_136C388(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_18856CC(*(void *)(a1 + 48) + 16);
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_136AD44(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_136C3D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteLineStyleInfo");
}

void *sub_136C3E8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_136C45C(void *a1)
{
  sub_136C3E8(a1);

  operator delete();
}

uint64_t sub_136C494(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_136C4BC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v29 + 2;
      }
    }
    uint64_t v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      uint64_t v16 = v8 + 1;
      unint64_t v17 = *v8;
      if (*v8 < 0)
      {
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          uint64_t v29 = (char *)sub_188C138((uint64_t)v8, (v19 - 128));
          if (!v29) {
            goto LABEL_59;
          }
          unint64_t v17 = v25;
          goto LABEL_27;
        }
        uint64_t v16 = v8 + 2;
      }
      uint64_t v29 = v16;
LABEL_27:
      if (v17 <= 2)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_45;
      }
      if (*v7) {
        uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v28 = 3;
      goto LABEL_53;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    int v23 = v8 + 1;
    LODWORD(v24) = *v8;
    if (*v8 < 0)
    {
      uint64_t v24 = v24 + (*v23 << 7) - 128;
      if (*v23 < 0) {
        int v23 = (char *)sub_188C138((uint64_t)v8, v24);
      }
      else {
        int v23 = v8 + 2;
      }
    }
    uint64_t v29 = v23;
    *(_DWORD *)(a1 + 24) = -(v24 & 1) ^ (v24 >> 1);
    int v5 = 1;
    if (!v23) {
      goto LABEL_59;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    unsigned int v20 = v8 + 1;
    unint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    int v21 = *v20;
    int v22 = v17 + (v21 << 7);
    unint64_t v17 = (v22 - 128);
    if (v21 < 0)
    {
      uint64_t v29 = (char *)sub_188C138((uint64_t)v8, (v22 - 128));
      if (!v29) {
        goto LABEL_59;
      }
      unint64_t v17 = v26;
    }
    else
    {
      unsigned int v20 = v8 + 2;
LABEL_33:
      uint64_t v29 = v20;
    }
    if (v17 <= 2)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = v17;
      goto LABEL_45;
    }
    if (*v7) {
      uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v28 = 2;
LABEL_53:
    sub_188C020(v28, v17, v27);
    goto LABEL_45;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v29;
    }
    uint64_t v29 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v29) {
      goto LABEL_59;
    }
    goto LABEL_45;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_59:
  uint64_t v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

unsigned char *sub_136C794(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    unsigned int v8 = (2 * v7) ^ (v7 >> 31);
    v4[1] = (2 * v7) ^ (v7 >> 31);
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unsigned int v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(int *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    unsigned int v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    unsigned int v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_136C9BC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz((2 * *(_DWORD *)(a1 + 24)) ^ (*(int *)(a1 + 24) >> 31) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v3 = *(_DWORD *)(a1 + 28);
  if (v3 < 0) {
    uint64_t v4 = 11;
  }
  else {
    uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v4;
LABEL_11:
  if ((v1 & 4) != 0)
  {
    int v5 = *(_DWORD *)(a1 + 32);
    if (v5 < 0) {
      uint64_t v6 = 11;
    }
    else {
      uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v6;
  }
LABEL_16:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v2 += v10;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_136CAA8()
{
  return 1;
}

void *sub_136CAB0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.JunctionElement");
}

void *sub_136CAC0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_136CB44(void *a1)
{
  sub_136CAC0(a1);

  operator delete();
}

uint64_t sub_136CB7C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 32) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_136CB94(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
    return v17;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v17 + 1;
    unsigned int v8 = *v17;
    if (*v17 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v17, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v17 + 2;
      }
    }
    uint64_t v17 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        unint64_t v11 = (unsigned int *)(a1 + 40);
        goto LABEL_14;
      }
      if (v8 == 16)
      {
        int v14 = sub_110DAD8((uint64_t *)&v17);
        sub_11CD448(a1, v14);
LABEL_19:
        if (!v17) {
          return 0;
        }
        goto LABEL_29;
      }
    }
    else if (v8 >> 3 == 1)
    {
      if (v8 == 10)
      {
        unint64_t v11 = (unsigned int *)(a1 + 16);
LABEL_14:
        unint64_t v12 = sub_188C2CC(v11, (unsigned __int8 *)v7, (uint64_t)a3);
        goto LABEL_28;
      }
      if (v8 == 8)
      {
        int v13 = sub_110DAD8((uint64_t *)&v17);
        sub_11CD3D8(a1, v13);
        goto LABEL_19;
      }
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v16 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v17;
    }
    unint64_t v12 = sub_1885AC0(v8, v16, v7, a3);
LABEL_28:
    uint64_t v17 = (char *)v12;
    if (!v12) {
      return 0;
    }
LABEL_29:
    if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
      return v17;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v17;
  }
  return 0;
}

unsigned char *sub_136CD44(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  unsigned int v6 = *(_DWORD *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned char *v4 = 10;
    uint64_t v7 = v4 + 1;
    if (v6 >= 0x80)
    {
      do
      {
        *v7++ = v6 | 0x80;
        unsigned int v27 = v6 >> 14;
        v6 >>= 7;
      }
      while (v27);
      uint64_t v4 = v7 - 1;
    }
    v4 += 2;
    *uint64_t v7 = v6;
    unsigned int v8 = *(unsigned int **)(a1 + 24);
    unsigned int v9 = &v8[*(int *)(a1 + 16)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v11 = *v8++;
      unsigned int v10 = v11;
      unsigned char *v4 = v11;
      if (v11 > 0x7F)
      {
        unsigned char *v4 = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        v4[1] = v10 >> 7;
        v4 += 2;
        if (v10 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v8 < v9);
  }
  unsigned int v14 = *(_DWORD *)(a1 + 56);
  if ((int)v14 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned char *v4 = 18;
    unint64_t v15 = v4 + 1;
    if (v14 >= 0x80)
    {
      do
      {
        *v15++ = v14 | 0x80;
        unsigned int v28 = v14 >> 14;
        v14 >>= 7;
      }
      while (v28);
      uint64_t v4 = v15 - 1;
    }
    v4 += 2;
    unsigned char *v15 = v14;
    unint64_t v16 = *(unsigned int **)(a1 + 48);
    uint64_t v17 = &v16[*(int *)(a1 + 40)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v19 = *v16++;
      unsigned int v18 = v19;
      unsigned char *v4 = v19;
      if (v19 > 0x7F)
      {
        unsigned char *v4 = v18 | 0x80;
        unsigned int v20 = v18 >> 7;
        v4[1] = v18 >> 7;
        v4 += 2;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v21 = v20 >> 14;
            v20 >>= 7;
            *v4++ = v20;
          }
          while (v21);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v16 < v17);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    unint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    unint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v26)
  {
    uint64_t v29 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v29;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_136CFD0(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 16));
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 32) = v3;
  uint64_t v5 = v4 + v2;
  uint64_t v6 = sub_188D4F0((unsigned int *)(a1 + 40));
  if (v6)
  {
    int v7 = v6;
    if ((v6 & 0x80000000) != 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v5 += v8;
  }
  else
  {
    int v7 = 0;
  }
  *(_DWORD *)(a1 + 56) = v7;
  uint64_t result = v5 + v6;
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 60) = result;
  return result;
}

std::string *sub_136D0B8(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = &result->__r_.__value_.__r.__words[2];
    uint64_t v6 = SLODWORD(result->__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&result->__r_.__value_.__r.__words[2], v6 + v4);
    std::string::pointer data = v3[1].__r_.__value_.__l.__data_;
    *(_DWORD *)v5 += *(_DWORD *)(a2 + 16);
    uint64_t result = (std::string *)memcpy(&data[4 * v6], *(const void **)(a2 + 24), 4 * *(int *)(a2 + 16));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v9 + v8);
    std::string::pointer v10 = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    uint64_t result = (std::string *)memcpy(&v10[4 * v9], *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_136D1A0()
{
  return 1;
}

void *sub_136D1A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TimeCheckpoints");
}

uint64_t sub_136D1B8(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_136D270(uint64_t a1)
{
  sub_136D1B8(a1);

  operator delete();
}

uint64_t sub_136D2A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_136D324(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)unsigned int v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      unsigned int v19 = (std::string *)sub_1880F84(v17, v16);
      unsigned int v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unsigned int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    unsigned int v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)unsigned int v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)unsigned int v20 = 0;
  return *(void *)v20;
}

char *sub_136D4CC(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_136D5B8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_136D694()
{
  return 1;
}

void *sub_136D69C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.URLData");
}

uint64_t sub_136D6AC(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_136D74C(uint64_t a1)
{
  sub_136D6AC(a1);

  operator delete();
}

uint64_t sub_136D784(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_136D7CC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_31;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)unsigned int v19 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    unsigned int v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_23:
    *(void *)unsigned int v19 = v14;
    if (!v14) {
      goto LABEL_32;
    }
LABEL_26:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_31;
    }
  }
  if (v8 >> 3 == 1 && v8 == 13)
  {
    v5 |= 2u;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)v7;
    *(void *)unsigned int v19 = v7 + 4;
    goto LABEL_26;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unsigned int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v19;
    }
    unsigned int v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_23;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_31;
  }
LABEL_32:
  *(void *)unsigned int v19 = 0;
LABEL_31:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_136D968(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 32);
    char *v4 = 13;
    *(_DWORD *)(v4 + 1) = v7;
    v4 += 5;
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    unint64_t v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    unint64_t v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_136DA6C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 5;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_136DB0C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_136DBC4()
{
  return 1;
}

void *sub_136DBCC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.FormattedString.FormatArgument.Price");
}

uint64_t sub_136DBDC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(void *)(a1 + 32)) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_136DC88(uint64_t a1)
{
  sub_136DBDC(a1);

  operator delete();
}

std::string *sub_136DCC0(std::string *result)
{
  int v1 = result;
  int v2 = result->__r_.__value_.__r.__words[2];
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = result[1].__r_.__value_.__r.__words[0] & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1882020((std::string *)((char *)result + 32), &off_25369E8);
  }
LABEL_7:
  if ((v2 & 0xC) != 0)
  {
    v1[1].__r_.__value_.__s.__data_[20] = 0;
    LODWORD(v1[1].__r_.__value_.__r.__words[2]) = 0;
  }
  std::string::value_type v5 = v1->__r_.__value_.__s.__data_[8];
  p_std::string::size_type size = &v1->__r_.__value_.__l.__size_;
  *((_DWORD *)p_size + 2) = 0;
  if (v5)
  {
    return (std::string *)sub_188B4AC((uint64_t *)p_size);
  }
  return result;
}

uint64_t sub_136DD80(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)unint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_28;
        }
        v5 |= 4u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)unint64_t v30 = v12;
          *(_DWORD *)(a1 + 40) = v13;
          goto LABEL_36;
        }
        uint64_t v26 = sub_188C0D0((uint64_t)v8, v13);
        *(void *)unint64_t v30 = v26;
        *(_DWORD *)(a1 + 40) = v27;
        if (v26) {
          goto LABEL_36;
        }
        goto LABEL_45;
      case 2u:
        if (v9 != 18) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
        goto LABEL_27;
      case 3u:
        if (v9 != 24) {
          goto LABEL_28;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v19);
          *(void *)unint64_t v30 = v28;
          *(unsigned char *)(a1 + 44) = v29 != 0;
          if (!v28) {
            goto LABEL_45;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_22:
          *(void *)unint64_t v30 = v18;
          *(unsigned char *)(a1 + 44) = v19 != 0;
        }
        goto LABEL_36;
      case 4u:
        if (v9 != 34) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v22 = (uint64_t *)*v22;
        }
        uint64_t v17 = (std::string *)sub_1881EAC((uint64_t *)(a1 + 32), &off_25369E8, v22);
LABEL_27:
        int v23 = (void *)sub_188C244(v17, *(char **)v30, (uint64_t)a3);
        goto LABEL_35;
      default:
LABEL_28:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v30;
          }
          int v23 = sub_1885AC0(v9, v25, v8, a3);
LABEL_35:
          *(void *)unint64_t v30 = v23;
          if (!v23) {
            goto LABEL_45;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_45:
        }
          *(void *)unint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_136E048(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_10:
      if ((v6 & 2) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 44);
  unsigned char *v4 = 24;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 2) != 0) {
LABEL_11:
  }
    int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_12:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_136E1F4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v1 & 8) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_17:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_136E304(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881E1C((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[1].__r_.__value_.__s.__data_[20] = *(unsigned char *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_18:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_136E40C()
{
  return 1;
}

void *sub_136E414@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.FormattedString.FormatArgument.TimestampData");
}

uint64_t sub_136E424(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 80);
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1889DA8(a1 + 64);
  sub_1889DE8((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_136E4F4(uint64_t a1)
{
  sub_136E424(a1);

  operator delete();
}

uint64_t sub_136E52C(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t result = sub_188CC00(a1 + 40);
  *(_DWORD *)(a1 + 64) = 0;
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_136E5F0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v43 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
    return *(void *)v43;
  }
  int v42 = (uint64_t *)(a1 + 8);
  uint64_t v6 = (uint64_t **)(a1 + 40);
  while (2)
  {
    char v7 = (unsigned __int8 *)(*(void *)v43 + 1);
    unsigned int v8 = **(unsigned char **)v43;
    if ((char)**(unsigned char **)v43 < 0)
    {
      int v9 = (char)*v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v43, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v43 + 2);
      }
    }
    *(void *)unint64_t v43 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8)
        {
          if (v8 != 10) {
            goto LABEL_68;
          }
          unint64_t v39 = sub_188C2CC((unsigned int *)(a1 + 24), v7, (uint64_t)a3);
          goto LABEL_75;
        }
        unint64_t v12 = v7 - 1;
        while (1)
        {
          *(void *)unint64_t v43 = v12 + 1;
          int v13 = v12[1];
          if ((char)v12[1] < 0)
          {
            int v14 = v13 + (v12[2] << 7);
            int v13 = v14 - 128;
            if ((char)v12[2] < 0)
            {
              unint64_t v12 = (unsigned __int8 *)sub_188C0D0((uint64_t)(v12 + 1), v14 - 128);
              int v13 = v15;
            }
            else
            {
              v12 += 3;
            }
          }
          else
          {
            v12 += 2;
          }
          *(void *)unint64_t v43 = v12;
          uint64_t v16 = *(unsigned int *)(a1 + 24);
          if (v16 == *(_DWORD *)(a1 + 28))
          {
            int v17 = v16 + 1;
            sub_188C80C((unsigned int *)(a1 + 24), v16 + 1);
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v16) = v13;
            unint64_t v12 = *(unsigned __int8 **)v43;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v16) = v13;
            int v17 = v16 + 1;
          }
          *(_DWORD *)(a1 + 24) = v17;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 8) {
            goto LABEL_76;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_68;
        }
        uint64_t v18 = (const std::string::value_type *)(v7 - 1);
        while (1)
        {
          uint64_t v19 = (char *)(v18 + 1);
          *(void *)unint64_t v43 = v18 + 1;
          int v20 = *(_DWORD **)(a1 + 56);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 48), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 48) = v21 + 1;
            uint64_t v22 = *(std::string **)&v20[2 * v21 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v24 = v23;
            v24[1] = sub_3A6EDC;
            void *v23 = 0;
            v23[1] = 0;
            int v23[2] = 0;
            uint64_t v22 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v23);
            uint64_t v19 = *(char **)v43;
          }
          uint64_t v18 = sub_188C244(v22, v19, (uint64_t)a3);
          *(void *)unint64_t v43 = v18;
          if (!v18) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
            goto LABEL_76;
          }
        }
      case 4u:
        if (v8 == 32)
        {
          uint64_t v25 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)unint64_t v43 = v25 + 1;
            unint64_t v26 = *(unsigned __int8 *)(v25 + 1);
            int v27 = (char *)(v25 + 2);
            if (*(char *)(v25 + 1) < 0)
            {
              int v28 = *v27;
              int v29 = v26 + (v28 << 7);
              unint64_t v26 = (v29 - 128);
              if (v28 < 0)
              {
                *(void *)unint64_t v43 = sub_188C138(v25 + 1, (v29 - 128));
                if (!*(void *)v43) {
                  return 0;
                }
                unint64_t v26 = v32;
                goto LABEL_41;
              }
              int v27 = (char *)(v25 + 3);
            }
            *(void *)unint64_t v43 = v27;
LABEL_41:
            if (v26 > 3)
            {
              if (*v42) {
                uint64_t v33 = (std::string *)((*v42 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v33 = (std::string *)sub_188DBD8(v42);
              }
              sub_188C020(4, v26, v33);
            }
            else
            {
              uint64_t v30 = *(unsigned int *)(a1 + 64);
              if (v30 == *(_DWORD *)(a1 + 68))
              {
                int v31 = v30 + 1;
                sub_188C80C((unsigned int *)(a1 + 64), v30 + 1);
                *(_DWORD *)(*(void *)(a1 + 72) + 4 * v30) = v26;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 72) + 4 * v30) = v26;
                int v31 = v30 + 1;
              }
              *(_DWORD *)(a1 + 64) = v31;
            }
            uint64_t v25 = *(void *)v43;
            if (*(void *)a3 <= *(void *)v43 || **(unsigned char **)v43 != 32) {
              goto LABEL_76;
            }
          }
        }
        if (v8 == 34)
        {
          *(void *)&long long v44 = a1 + 64;
          *((void *)&v44 + 1) = sub_1369AEC;
          uint64_t v45 = a1 + 8;
          int v46 = 4;
          unint64_t v39 = sub_1112E88((uint64_t)a3, (char *)v7, &v44);
LABEL_75:
          *(void *)unint64_t v43 = v39;
          if (!v39) {
            return 0;
          }
LABEL_76:
          if (sub_11947B8((uint64_t)a3, (char **)v43, a3[11].i32[1])) {
            return *(void *)v43;
          }
          continue;
        }
LABEL_68:
        if (v8) {
          BOOL v40 = (v8 & 7) == 4;
        }
        else {
          BOOL v40 = 1;
        }
        if (!v40)
        {
          if (*v42)
          {
            unint64_t v41 = (std::string *)((*v42 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v41 = (std::string *)sub_188DBD8(v42);
            char v7 = *(unsigned __int8 **)v43;
          }
          unint64_t v39 = sub_1885AC0(v8, v41, (char *)v7, a3);
          goto LABEL_75;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v43;
      case 5u:
        if (v8 != 42) {
          goto LABEL_68;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v34 = *(void *)(a1 + 8);
        uint64_t v35 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
        if (v34) {
          uint64_t v35 = (uint64_t *)*v35;
        }
        uint64_t v36 = (void *)(a1 + 80);
        goto LABEL_63;
      case 6u:
        if (v8 != 50) {
          goto LABEL_68;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v37 = *(void *)(a1 + 8);
        uint64_t v35 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
        if (v37) {
          uint64_t v35 = (uint64_t *)*v35;
        }
        uint64_t v36 = (void *)(a1 + 88);
LABEL_63:
        unint64_t v38 = (std::string *)sub_1880F84(v36, v35);
        unint64_t v39 = (void *)sub_188C244(v38, *(char **)v43, (uint64_t)a3);
        goto LABEL_75;
      default:
        goto LABEL_68;
    }
  }
}

char *sub_136EAD4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v8 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unsigned int v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 48);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 8 * v11;
    do
    {
      int v14 = *(void **)(*(void *)(a1 + 56) + v12 + 8);
      if (*((char *)v14 + 23) < 0)
      {
        int64_t v15 = v14[1];
        if (v15 > 127) {
          goto LABEL_21;
        }
      }
      else
      {
        int64_t v15 = *((unsigned __int8 *)v14 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v15)
      {
        *__dst = 18;
        __dst[1] = v15;
        if (*((char *)v14 + 23) < 0) {
          int v14 = (void *)*v14;
        }
        uint64_t v16 = __dst + 2;
        memcpy(v16, v14, v15);
        __dst = &v16[v15];
        goto LABEL_19;
      }
LABEL_21:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v14, __dst);
LABEL_19:
      v12 += 8;
    }
    while (v13 != v12);
  }
  uint64_t v17 = *(unsigned int *)(a1 + 64);
  if ((int)v17 >= 1)
  {
    for (uint64_t j = 0; j != v17; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v19 = *(int *)(*(void *)(a1 + 72) + 4 * j);
      *__dst = 32;
      __dst[1] = v19;
      if (v19 > 0x7F)
      {
        __dst[1] = v19 | 0x80;
        unint64_t v20 = v19 >> 7;
        __dst[2] = v19 >> 7;
        __dst += 3;
        if (v19 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v21 = v20 >> 14;
            v20 >>= 7;
            *__dst++ = v20;
          }
          while (v21);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if (v22) {
    __dst = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v22 & 2) != 0) {
    __dst = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return __dst;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    unint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    unint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(__dst, v26, (int)v27);
    __dst += v28;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, __dst);
}

uint64_t sub_136EDB8(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 24));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  uint64_t v4 = v2 + *(unsigned int *)(a1 + 24) + v3;
  if ((int)v3 >= 1)
  {
    unint64_t v5 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  uint64_t v9 = *(unsigned int *)(a1 + 64);
  if (v9)
  {
    int v10 = 0;
    uint64_t v11 = 0;
    do
    {
      int v12 = *(_DWORD *)(*(void *)(a1 + 72) + 4 * v10);
      if (v12 < 0) {
        uint64_t v13 = 10;
      }
      else {
        uint64_t v13 = (9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6;
      }
      v11 += v13;
      ++v10;
    }
    while (v9 != v10);
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t result = v4 + v9 + v11;
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 3) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      result += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0)
    {
      unint64_t v19 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v21 = *(void *)(v19 + 8);
      if ((v20 & 0x80u) == 0) {
        uint64_t v21 = v20;
      }
      result += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v23 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    result += v24;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_136EF60(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    unint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (const std::string **)(*(void *)(a2 + 56) + 8);
    int v10 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1].__r_.__value_.__r.__words[2], v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v11 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v8;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v11;
    int v12 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v12 < v11) {
      *int v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 64);
  if (v13)
  {
    uint64_t v14 = SLODWORD(v3[2].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[2].__r_.__value_.__r.__words[2], v14 + v13);
    std::string::pointer data = v3[3].__r_.__value_.__l.__data_;
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 64);
    uint64_t result = (std::string *)memcpy(&data[4 * v14], *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  int v16 = *(_DWORD *)(a2 + 16);
  if ((v16 & 3) != 0)
  {
    if (v16)
    {
      uint64_t v17 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
      unint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v19 = (uint64_t *)*v19;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v17, v19);
    }
    if ((v16 & 2) != 0)
    {
      uint64_t v20 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
      uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        uint64_t v22 = (uint64_t *)*v22;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__r.__words[2], v20, v22);
    }
  }
  uint64_t v23 = *(void *)(a2 + 8);
  if (v23)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v23 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_136F12C()
{
  return 1;
}

void *sub_136F134@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.FormattedString.FormatArgument.CountdownData");
}

void *sub_136F144(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_136F1B8(void *a1)
{
  sub_136F144(a1);

  operator delete();
}

uint64_t sub_136F1F0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_136F208(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v14 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
    goto LABEL_22;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v14 + 1;
    unsigned int v8 = *v14;
    if (*v14 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v14, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v14 + 2;
      }
    }
    uint64_t v14 = v7;
    if (v8 == 13)
    {
      *(_DWORD *)(a1 + 24) = *(_DWORD *)v7;
      uint64_t v14 = v7 + 4;
      int v5 = 1;
      goto LABEL_17;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v14;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v14) {
      goto LABEL_23;
    }
LABEL_17:
    if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
      goto LABEL_22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_22;
  }
LABEL_23:
  uint64_t v14 = 0;
LABEL_22:
  *(_DWORD *)(a1 + 16) |= v5;
  return v14;
}

_OWORD *sub_136F348(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v6 = *(_DWORD *)(a1 + 24);
    *(unsigned char *)int v4 = 13;
    *(_DWORD *)((char *)v4 + 1) = v6;
    int v4 = (_OWORD *)((char *)v4 + 5);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    return (_OWORD *)((char *)v4 + v12);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_136F42C(uint64_t a1)
{
  uint64_t v1 = 5;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_136F474()
{
  return 1;
}

void *sub_136F47C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.FormattedString.FormatArgument.NumberData");
}

void *sub_136F48C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_136F500(void *a1)
{
  sub_136F48C(a1);

  operator delete();
}

uint64_t sub_136F538(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 16) = 1;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_136F554(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    unint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    int v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      int v13 = v7 + 2;
LABEL_19:
      unint64_t v19 = v13;
      *(unsigned char *)(a1 + 24) = v14 != 0;
      int v5 = 1;
      goto LABEL_20;
    }
    int v16 = (char *)sub_188C138((uint64_t)v7, v14);
    unint64_t v19 = v16;
    *(unsigned char *)(a1 + 24) = v17 != 0;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    unint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  unint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_136F6E4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v6 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_136F7C8(uint64_t a1)
{
  uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_136F808()
{
  return 1;
}

void *sub_136F810@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.FormattedString.FormatArgument.MeasurementData");
}

uint64_t sub_136F820(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2534600)
  {
    char v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1381E8C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_136F8D8(uint64_t a1)
{
  sub_136F820(a1);

  operator delete();
}

uint64_t sub_136F910(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_136F970(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

uint64_t sub_136F970(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    char v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_136C494(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 7) != 0)
  {
    *(_DWORD *)(v1 + 56) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_136FA04(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 24);
    if (!v15)
    {
      int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v16 = (void *)*v16;
      }
      uint64_t v15 = sub_13D7210((uint64_t)v16);
      *(void *)(a1 + 24) = v15;
      uint64_t v7 = v23;
    }
    uint64_t v14 = sub_136FDBC(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v17 = v7 + 1;
    unint64_t v18 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v17;
    int v20 = v18 + (v19 << 7);
    unint64_t v18 = (v20 - 128);
    if (v19 < 0)
    {
      uint64_t v23 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v23) {
        return 0;
      }
      unint64_t v18 = v21;
    }
    else
    {
      uint64_t v17 = v7 + 2;
LABEL_31:
      uint64_t v23 = v17;
    }
    if (sub_136FC18())
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v18;
    }
    else
    {
      if (*v6) {
        uint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v18, v22);
    }
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

uint64_t sub_136FC18()
{
  return 1;
}

char *sub_136FDBC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1381F44(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_136FE4C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    uint64_t v4 = sub_1382390(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_136FFD8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_138264C(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_13700A8(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        std::string::pointer data = (std::string *)sub_13D7210((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2534CB8;
      }
      uint64_t result = sub_1370178(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}