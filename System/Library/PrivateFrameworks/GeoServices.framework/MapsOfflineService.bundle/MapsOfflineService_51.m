uint64_t sub_153F2E4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  void *v5;
  char *v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  BOOL v10;
  std::string *v11;
  void *v12;
  uint64_t v13;
  uint64_t *v14;
  std::string *v15;
  int v17[2];

  *(void *)v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  v5 = (void *)(a1 + 8);
  while (1)
  {
    v6 = (char *)(*(void *)v17 + 1);
    v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      v8 = v7 + (*v6 << 7);
      v7 = v8 - 128;
      if (*v6 < 0)
      {
        v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        v7 = v9;
      }
      else
      {
        v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    v13 = *(void *)(a1 + 8);
    v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      v14 = (uint64_t *)*v14;
    }
    v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    v10 = (v7 & 7) == 4;
  }
  else {
    v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      v6 = *(char **)v17;
    }
    v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)v17 = 0;
  return *(void *)v17;
}

char *sub_153F43C(uint64_t a1, char *__dst, void *a3)
{
  v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_153F508(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_153F58C()
{
  return 1;
}

void *sub_153F594@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CaptionedPhotoExt.ContextualPhotoMetadata");
}

uint64_t sub_153F5A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_153F644(uint64_t a1)
{
  sub_153F5A4(a1);

  operator delete();
}

uint64_t sub_153F67C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0) {
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_153F6CC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v25 + 1);
    unsigned int v9 = **(unsigned char **)v25;
    if ((char)**(unsigned char **)v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v25 + 2);
      }
    }
    *(void *)v25 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 != 2)
    {
      if (v12 != 1 || v9 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        v21 = (uint64_t *)*v21;
      }
      v22 = (std::string *)sub_1880F84((void *)(a1 + 24), v21);
      v16 = (void *)sub_188C244(v22, *(char **)v25, (uint64_t)a3);
LABEL_31:
      *(void *)v25 = v16;
      if (!v16) {
        goto LABEL_39;
      }
      goto LABEL_32;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    v17 = v8 + 1;
    uint64_t v18 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_27;
    }
    int v19 = *v17;
    uint64_t v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      v17 = v8 + 2;
LABEL_27:
      *(void *)v25 = v17;
      *(unsigned char *)(a1 + 32) = v18 != 0;
      goto LABEL_32;
    }
    uint64_t v23 = sub_188C138((uint64_t)v8, v18);
    *(void *)v25 = v23;
    *(unsigned char *)(a1 + 32) = v24 != 0;
    if (!v23) {
      goto LABEL_39;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, (char **)v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 29)
  {
    v5 |= 4u;
    *(_DWORD *)(a1 + 36) = *(_DWORD *)v8;
    *(void *)v25 = v8 + 4;
    goto LABEL_32;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v25;
    }
    v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_31;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  *(void *)v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v25;
}

unsigned char *sub_153F8E0(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned char *v4 = 16;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_9:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v8 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 29;
    *(_DWORD *)(v4 + 1) = v8;
    v4 += 5;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_153FA28(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      uint64_t v3 = v2 + 5;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_153FAD4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_153FBA4()
{
  return 1;
}

void *sub_153FBAC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CaptionedPhotoExt.ExperimentalData");
}

uint64_t sub_153FBBC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_253D320 && *(void *)(a1 + 48))
  {
    sub_184B078();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_12C45E8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_153FC80(uint64_t a1)
{
  sub_153FBBC(a1);

  operator delete();
}

unsigned char *sub_153FCB8(unsigned char *result)
{
  int v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)result + 5) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  if (v1[16]) {
    uint64_t result = sub_16CD894(*((void *)v1 + 6));
  }
  char v6 = v1[8];
  uint64_t v5 = v1 + 8;
  *((_DWORD *)v5 + 2) = 0;
  if (v6)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_153FD48(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 48);
    if (!v21)
    {
      v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        v22 = (void *)*v22;
      }
      uint64_t v21 = sub_185089C((uint64_t)v22);
      *(void *)(a1 + 48) = v21;
      uint64_t v7 = v23;
    }
    uint64_t v14 = sub_12688D0(a3, v21, (unsigned __int8 *)v7);
LABEL_35:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 18)
  {
    v15 = v7 - 1;
    while (1)
    {
      v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v23 = v15 + 1;
      v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_185089C(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        v16 = (unsigned __int8 *)v23;
      }
      v15 = sub_12688D0(a3, v19, v16);
      uint64_t v23 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_153FF50(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v6, v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 44);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_184B3AC(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_15400FC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_184B568(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_15401E0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_185089C((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_254D2B0;
    }
    sub_16CE3CC(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1540304(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CE508(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1540368@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceRequestExt.DispatcherMetadata.GeoContextMetadata.GeoIdCollectionMapping");
}

uint64_t sub_1540378(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253D358)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_153FBBC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1540430(uint64_t a1)
{
  sub_1540378(a1);

  operator delete();
}

unsigned char *sub_1540468(unsigned char *result)
{
  int v1 = result;
  if (result[16]) {
    uint64_t result = sub_153FCB8(*((unsigned char **)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_15404C4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    unint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void **)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_1548708((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = sub_154061C(a3, (uint64_t)v13, (unsigned __int8 *)v6);
LABEL_20:
    unint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_154061C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_153FD48(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_15406AC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    char v4 = sub_153FF50(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_15407BC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_15400FC(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1540844(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    unint64_t v5 = *(void **)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      unint64_t v5 = sub_1548708((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_253D320;
    }
    sub_15401E0((uint64_t)v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_15408EC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_1540304(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1540918@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceRequestExt.DispatcherMetadata.GeoContextMetadata");
}

void *sub_1540928(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_154B028(a1 + 12);
  sub_154AFA8(a1 + 9);
  sub_154AF28(a1 + 6);
  sub_154AEA8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15409CC(void *a1)
{
  sub_1540928(a1);

  operator delete();
}

uint64_t sub_1540A04(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_175F27C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (unsigned char **)(*(void *)(v1 + 64) + 8);
    do
    {
      unsigned int v7 = *v6++;
      uint64_t result = (uint64_t)sub_1540468(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_12997A8(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 104);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(v1 + 112) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = sub_175AED8(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 104) = 0;
  }
  char v15 = *(unsigned char *)(v1 + 8);
  uint64_t v14 = v1 + 8;
  *(_DWORD *)(v14 + 112) = 0;
  *(_DWORD *)(v14 + 8) = 0;
  if (v15)
  {
    return sub_188B4AC((uint64_t *)v14);
  }
  return result;
}

char *sub_1540B00(uint64_t a1, char *a2, int32x2_t *a3)
{
  v43 = a2;
  if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
    return v43;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v7 = v43 + 1;
    unsigned int v8 = *v43;
    if (*v43 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v43, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v43 + 2;
      }
    }
    v43 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_56;
        }
        uint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          v43 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v43) {
            return 0;
          }
          unint64_t v12 = v41;
        }
        else
        {
          uint64_t v11 = v7 + 2;
LABEL_13:
          v43 = v11;
        }
        if (sub_1791E00(v12))
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          *(_DWORD *)(a1 + 120) = v12;
        }
        else
        {
          if (*v6) {
            v42 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v42);
        }
        goto LABEL_63;
      case 2u:
        if (v8 != 18) {
          goto LABEL_56;
        }
        char v15 = v7 - 1;
        while (1)
        {
          unint64_t v16 = (unsigned __int8 *)(v15 + 1);
          v43 = v15 + 1;
          v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            sub_178CAC0(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
            unint64_t v16 = (unsigned __int8 *)v43;
          }
          char v15 = sub_1540F48(a3, v19, v16);
          v43 = v15;
          if (!v15) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_63;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_56;
        }
        uint64_t v21 = v7 - 1;
        while (1)
        {
          v22 = (unsigned __int8 *)(v21 + 1);
          v43 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 64);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 56) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            v26 = sub_15487A4(*(void *)(a1 + 48));
            uint64_t v25 = sub_188CDC8(a1 + 48, (uint64_t)v26);
            v22 = (unsigned __int8 *)v43;
          }
          uint64_t v21 = sub_1540FD8(a3, v25, v22);
          v43 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 26) {
            goto LABEL_63;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_56;
        }
        v27 = v7 - 1;
        while (1)
        {
          v28 = (unsigned __int8 *)(v27 + 1);
          v43 = v27 + 1;
          v29 = *(_DWORD **)(a1 + 88);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 80), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 80) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            uint64_t v32 = sub_129E6C4(*(void *)(a1 + 72));
            uint64_t v31 = sub_188CDC8(a1 + 72, v32);
            v28 = (unsigned __int8 *)v43;
          }
          v27 = sub_1541068(a3, v31, v28);
          v43 = v27;
          if (!v27) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 34) {
            goto LABEL_63;
          }
        }
      case 5u:
        if (v8 != 42) {
          goto LABEL_56;
        }
        v33 = v7 - 1;
        while (1)
        {
          v34 = (unsigned __int8 *)(v33 + 1);
          v43 = v33 + 1;
          v35 = *(_DWORD **)(a1 + 112);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 104), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 104) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            v38 = sub_178C798(*(void *)(a1 + 96));
            uint64_t v37 = sub_188CDC8(a1 + 96, (uint64_t)v38);
            v34 = (unsigned __int8 *)v43;
          }
          v33 = (char *)sub_15410F8(a3, v37, v34);
          v43 = v33;
          if (!v33) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 42) {
            goto LABEL_63;
          }
        }
      default:
LABEL_56:
        if (v8) {
          BOOL v39 = (v8 & 7) == 4;
        }
        else {
          BOOL v39 = 1;
        }
        if (!v39)
        {
          if (*v6)
          {
            v40 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v7 = v43;
          }
          v43 = (char *)sub_1885AC0(v8, v40, v7, a3);
          if (!v43) {
            return 0;
          }
LABEL_63:
          if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
            return v43;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v43;
    }
  }
}

char *sub_1540F48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_175F2FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1540FD8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15404C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1541068(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12997D0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_15410F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_175AF94(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1541188(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 120);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        int v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        int v13 = v4 + 2;
      }
      uint64_t v4 = sub_175F720(v11, (unint64_t)v13, a3);
    }
  }
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 26;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      v4[1] = v17;
      if (v17 > 0x7F) {
        uint64_t v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        uint64_t v18 = v4 + 2;
      }
      uint64_t v4 = sub_15406AC(v16, (unint64_t)v18, a3);
    }
  }
  int v19 = *(_DWORD *)(a1 + 80);
  if (v19)
  {
    for (int k = 0; k != v19; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      unsigned char *v4 = 34;
      unsigned int v22 = *(_DWORD *)(v21 + 20);
      v4[1] = v22;
      if (v22 > 0x7F) {
        uint64_t v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        uint64_t v23 = v4 + 2;
      }
      uint64_t v4 = sub_1299A68(v21, (unint64_t)v23, a3);
    }
  }
  int v24 = *(_DWORD *)(a1 + 104);
  if (v24)
  {
    for (int m = 0; m != v24; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      unsigned char *v4 = 42;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      v4[1] = v27;
      if (v27 > 0x7F) {
        v28 = sub_188A9CC(v27, v4 + 1);
      }
      else {
        v28 = v4 + 2;
      }
      uint64_t v4 = sub_175B224(v26, (unint64_t)v28, a3);
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    uint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    uint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_15414D8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_175F998(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15407BC(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1299C88(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    uint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    uint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_175B438(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v29 = *(_DWORD *)(a1 + 120);
    uint64_t v30 = ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v29 >= 0) {
      uint64_t v31 = v30;
    }
    else {
      uint64_t v31 = 11;
    }
    v23 += v31;
  }
  uint64_t v32 = *(void *)(a1 + 8);
  if (v32)
  {
    unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v34 + 31) < 0) {
      uint64_t v35 = *(void *)(v34 + 16);
    }
    else {
      uint64_t v35 = *(unsigned __int8 *)(v34 + 31);
    }
    v23 += v35;
  }
  *(_DWORD *)(a1 + 20) = v23;
  return v23;
}

void sub_15416B0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_154B3BC((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_154B448((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_154B4D4((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_154B550((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v24 = *(_DWORD *)(a2 + 120);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 120) = v24;
  }
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_15418C8(uint64_t a1)
{
  if (!sub_1541930(a1 + 48)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 104);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_175B720(*(void *)(*(void *)(a1 + 112) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

uint64_t sub_1541930(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_1540304(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_15419A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceRequestExt.DispatcherMetadata");
}

uint64_t sub_15419B0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253D3F8)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_182E7B8(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_13F22FC(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1541A9C(uint64_t a1)
{
  sub_15419B0(a1);

  operator delete();
}

uint64_t sub_1541AD4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  uint64_t result = sub_182E7F4(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_13F2338(*(void *)(v1 + 40));
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1541B80(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 2);
      }
    }
    *(void *)uint64_t v23 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v16 = *(void *)(a1 + 40);
      if (!v16)
      {
        int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v17 = (void *)*v17;
        }
        uint64_t v16 = sub_13F3C7C((uint64_t)v17);
        *(void *)(a1 + 40) = v16;
        uint64_t v7 = *(unsigned __int8 **)v23;
      }
      uint64_t v15 = sub_1541D98(a3, v16, v7);
      goto LABEL_36;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v18 = *(void *)(a1 + 32);
    if (!v18)
    {
      int v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v19 = (void *)*v19;
      }
      uint64_t v18 = sub_1836F0C((uint64_t)v19);
      *(void *)(a1 + 32) = v18;
      uint64_t v7 = *(unsigned __int8 **)v23;
    }
    uint64_t v15 = sub_1179958(a3, v18, v7);
LABEL_36:
    *(void *)uint64_t v23 = v15;
    if (!v15) {
      goto LABEL_42;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
      return *(void *)v23;
    }
  }
  if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    int v22 = (std::string *)sub_1880F84((void *)(a1 + 24), v21);
    uint64_t v15 = (uint64_t)sub_188C244(v22, *(char **)v23, (uint64_t)a3);
    goto LABEL_36;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v23;
    }
    uint64_t v15 = (uint64_t)sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_36;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v23;
  }
LABEL_42:
  *(void *)uint64_t v23 = 0;
  return *(void *)v23;
}

uint64_t sub_1541D98(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13F24A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1541E28(uint64_t a1, char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  char *v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 44);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  char v4 = sub_182F28C(v7, v9, a3);
  if ((v6 & 4) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 40);
    char *v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    char v4 = sub_13F2AE0(v10, v12, a3);
  }
LABEL_18:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1541FD4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_12;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_182F8B4(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_13F2F8C(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_15420F0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) == 0) {
    goto LABEL_25;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(void *)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    unint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      unint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = sub_1836F0C((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    uint64_t v12 = &off_254CB28;
  }
  sub_182FC60(v9, (uint64_t)v12);
  if ((v4 & 4) != 0)
  {
LABEL_17:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v13 = *(void *)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        unint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_13F3C7C((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_2537290;
    }
    sub_13F323C(v13, (uint64_t)v16);
  }
LABEL_25:
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1542234(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_18300B0(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_13F35CC(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1542280@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceResponseExt.ServiceResponseTrace");
}

uint64_t sub_1542290(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1542348(uint64_t a1)
{
  sub_1542290(a1);

  operator delete();
}

uint64_t sub_1542380(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_15423FC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      int v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_15425A4(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1542690(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_154276C()
{
  return 1;
}

void *sub_1542774@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceResponseExt.DebugInfo");
}

void *sub_1542784(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_154B0A8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1542804(void *a1)
{
  sub_1542784(a1);

  operator delete();
}

uint64_t sub_154283C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1542380(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_15428B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1548960(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_1542A58(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_1542A58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15423FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1542AE8(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_15425A4(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1542C2C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1542690(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_1542CDC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_154B5DC((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1542DAC()
{
  return 1;
}

void *sub_1542DB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceResponseExt.DebugLog");
}

uint64_t sub_1542DC4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if ((uint64_t (***)())a1 != &off_253D458)
  {
    if (*(void *)(a1 + 112))
    {
      sub_184B078();
      operator delete();
    }
    if (*(void *)(a1 + 120))
    {
      sub_170FC20();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_12C1DB8((void *)(a1 + 72));
  sub_12C1DB8((void *)(a1 + 48));
  sub_154B128((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1542EF0(uint64_t a1)
{
  sub_1542DC4(a1);

  operator delete();
}

uint64_t sub_1542F28(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16FBBF0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_15B2C80(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_15B2C80(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if ((v11 & 0xF) == 0) {
    goto LABEL_19;
  }
  if (v11)
  {
    unint64_t v14 = *(void *)(v1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v14 + 23) < 0)
    {
      **(unsigned char **)unint64_t v14 = 0;
      *(void *)(v14 + 8) = 0;
      if ((v11 & 2) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v14 = 0;
      *(unsigned char *)(v14 + 23) = 0;
      if ((v11 & 2) != 0) {
        goto LABEL_27;
      }
    }
LABEL_16:
    if ((v11 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_31;
  }
  if ((v11 & 2) == 0) {
    goto LABEL_16;
  }
LABEL_27:
  unint64_t v15 = *(void *)(v1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v15 + 23) < 0)
  {
    **(unsigned char **)unint64_t v15 = 0;
    *(void *)(v15 + 8) = 0;
    if ((v11 & 4) != 0) {
      goto LABEL_31;
    }
LABEL_17:
    if ((v11 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  *(unsigned char *)unint64_t v15 = 0;
  *(unsigned char *)(v15 + 23) = 0;
  if ((v11 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_31:
  uint64_t result = (uint64_t)sub_16CD894(*(void *)(v1 + 112));
  if ((v11 & 8) != 0) {
LABEL_18:
  }
    uint64_t result = (uint64_t)sub_170FC5C(*(void *)(v1 + 120));
LABEL_19:
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_WORD *)(v12 + 120) = 0;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_1543090(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v52 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v52, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v52 + 1);
    unsigned int v9 = **(unsigned char **)v52;
    if ((char)**(unsigned char **)v52 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v52, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v52 + 2);
      }
    }
    *(void *)v52 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v12 = *(void *)(a1 + 112);
        if (!v12)
        {
          char v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            char v13 = (void *)*v13;
          }
          uint64_t v12 = sub_185089C((uint64_t)v13);
          *(void *)(a1 + 112) = v12;
          uint64_t v8 = *(unsigned __int8 **)v52;
        }
        uint64_t v14 = (uint64_t)sub_12688D0(a3, v12, v8);
        goto LABEL_77;
      case 2u:
        if (v9 != 18) {
          goto LABEL_70;
        }
        unint64_t v15 = v8 - 1;
        while (1)
        {
          uint64_t v16 = v15 + 1;
          *(void *)v52 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_17894DC(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
            uint64_t v16 = *(unsigned __int8 **)v52;
          }
          unint64_t v15 = (unsigned __int8 *)sub_15435C4(a3, v19, v16);
          *(void *)v52 = v15;
          if (!v15) {
            goto LABEL_87;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_78;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_70;
        }
        uint64_t v21 = v8 - 1;
        while (1)
        {
          int v22 = v21 + 1;
          *(void *)v52 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 64);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 56) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            uint64_t v26 = sub_15C1B30(*(void *)(a1 + 48));
            uint64_t v25 = sub_188CDC8(a1 + 48, (uint64_t)v26);
            int v22 = *(unsigned __int8 **)v52;
          }
          uint64_t v21 = (unsigned __int8 *)sub_125CF74(a3, v25, v22);
          *(void *)v52 = v21;
          if (!v21) {
            goto LABEL_87;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 26) {
            goto LABEL_78;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        int v29 = (void *)(a1 + 96);
        goto LABEL_48;
      case 5u:
        if (v9 != 40) {
          goto LABEL_70;
        }
        v5 |= 0x10u;
        uint64_t v30 = (char *)(v8 + 1);
        uint64_t v31 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v48 = sub_188C138((uint64_t)v8, v31);
          *(void *)v52 = v48;
          *(unsigned char *)(a1 + 128) = v49 != 0;
          if (!v48) {
            goto LABEL_87;
          }
        }
        else
        {
          uint64_t v30 = (char *)(v8 + 2);
LABEL_43:
          *(void *)v52 = v30;
          *(unsigned char *)(a1 + 128) = v31 != 0;
        }
        goto LABEL_78;
      case 6u:
        if (v9 != 50) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v33 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
        if (v33) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        int v29 = (void *)(a1 + 104);
LABEL_48:
        unint64_t v34 = (std::string *)sub_1880F84(v29, v28);
        uint64_t v14 = (uint64_t)sub_188C244(v34, *(char **)v52, (uint64_t)a3);
        goto LABEL_77;
      case 7u:
        if (v9 != 58) {
          goto LABEL_70;
        }
        uint64_t v35 = v8 - 1;
        while (1)
        {
          uint64_t v36 = v35 + 1;
          *(void *)v52 = v35 + 1;
          uint64_t v37 = *(_DWORD **)(a1 + 88);
          if (v37 && (uint64_t v38 = *(int *)(a1 + 80), (int)v38 < *v37))
          {
            *(_DWORD *)(a1 + 80) = v38 + 1;
            uint64_t v39 = *(void *)&v37[2 * v38 + 2];
          }
          else
          {
            v40 = sub_15C1B30(*(void *)(a1 + 72));
            uint64_t v39 = sub_188CDC8(a1 + 72, (uint64_t)v40);
            uint64_t v36 = *(unsigned __int8 **)v52;
          }
          uint64_t v35 = (unsigned __int8 *)sub_125CF74(a3, v39, v36);
          *(void *)v52 = v35;
          if (!v35) {
            goto LABEL_87;
          }
          if (*(void *)a3 <= (unint64_t)v35 || *v35 != 58) {
            goto LABEL_78;
          }
        }
      case 8u:
        if (v9 != 66) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        unint64_t v41 = *(void **)(a1 + 120);
        if (!v41)
        {
          v42 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v42 = (void *)*v42;
          }
          unint64_t v41 = sub_178A5CC((uint64_t)v42);
          *(void *)(a1 + 120) = v41;
          uint64_t v8 = *(unsigned __int8 **)v52;
        }
        uint64_t v14 = sub_1543654(a3, (uint64_t)v41, v8);
        goto LABEL_77;
      case 9u:
        if (v9 != 72) {
          goto LABEL_70;
        }
        v5 |= 0x20u;
        v43 = (char *)(v8 + 1);
        uint64_t v44 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_69;
        }
        int v45 = *v43;
        uint64_t v44 = v44 + (v45 << 7) - 128;
        if (v45 < 0)
        {
          uint64_t v50 = sub_188C138((uint64_t)v8, v44);
          *(void *)v52 = v50;
          *(unsigned char *)(a1 + 129) = v51 != 0;
          if (!v50) {
            goto LABEL_87;
          }
        }
        else
        {
          v43 = (char *)(v8 + 2);
LABEL_69:
          *(void *)v52 = v43;
          *(unsigned char *)(a1 + 129) = v44 != 0;
        }
        goto LABEL_78;
      default:
LABEL_70:
        if (v9) {
          BOOL v46 = (v9 & 7) == 4;
        }
        else {
          BOOL v46 = 1;
        }
        if (!v46)
        {
          if (*v7)
          {
            v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v52;
          }
          uint64_t v14 = (uint64_t)sub_1885AC0(v9, v47, (char *)v8, a3);
LABEL_77:
          *(void *)v52 = v14;
          if (!v14) {
            goto LABEL_87;
          }
LABEL_78:
          if (sub_11947B8((uint64_t)a3, (char **)v52, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_87:
        }
          *(void *)v52 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v52;
    }
  }
}

uint64_t sub_15435C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16FBE98(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1543654(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_170FDC4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15436E4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 112);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v7, v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_16FC618(v12, v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v17, v19, a3);
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x10) == 0)
    {
LABEL_26:
      if ((v6 & 2) == 0) {
        goto LABEL_28;
      }
      goto LABEL_27;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_26;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v28 = *(unsigned char *)(a1 + 128);
  char *v4 = 40;
  v4[1] = v28;
  v4 += 2;
  if ((v6 & 2) != 0) {
LABEL_27:
  }
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_28:
  int v20 = *(_DWORD *)(a1 + 80);
  if (v20)
  {
    for (int k = 0; k != v20; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v22 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      char *v4 = 58;
      unsigned int v23 = *(_DWORD *)(v22 + 20);
      v4[1] = v23;
      if (v23 > 0x7F) {
        uint64_t v24 = sub_188A9CC(v23, v4 + 1);
      }
      else {
        uint64_t v24 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v22, v24, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 120);
    char *v4 = 66;
    unsigned int v26 = *(_DWORD *)(v25 + 44);
    v4[1] = v26;
    if (v26 > 0x7F) {
      uint64_t v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      uint64_t v27 = v4 + 2;
    }
    uint64_t v4 = sub_17101D4(v25, v27, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v29 = *(unsigned char *)(a1 + 129);
    char *v4 = 72;
    v4[1] = v29;
    v4 += 2;
  }
  uint64_t v30 = *(void *)(a1 + 8);
  if ((v30 & 1) == 0) {
    return v4;
  }
  unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v32 + 31) < 0)
  {
    uint64_t v33 = *(void **)(v32 + 8);
    uint64_t v34 = *(void *)(v32 + 16);
  }
  else
  {
    uint64_t v33 = (void *)(v32 + 8);
    LODWORD(v34) = *(unsigned __int8 *)(v32 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v34)
  {
    uint64_t v35 = (int)v34;
    memcpy(v4, v33, (int)v34);
    v4 += v35;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v33, v34, v4);
}

uint64_t sub_1543AB8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16FCA60(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15B2F90(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_15B2F90(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 0x3F) != 0)
  {
    if (v22)
    {
      unint64_t v27 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
      uint64_t v29 = *(void *)(v27 + 8);
      if ((v28 & 0x80u) == 0) {
        uint64_t v29 = v28;
      }
      v16 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v22 & 2) == 0)
      {
LABEL_24:
        if ((v22 & 4) == 0) {
          goto LABEL_25;
        }
        goto LABEL_40;
      }
    }
    else if ((v22 & 2) == 0)
    {
      goto LABEL_24;
    }
    unint64_t v30 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
    uint64_t v32 = *(void *)(v30 + 8);
    if ((v31 & 0x80u) == 0) {
      uint64_t v32 = v31;
    }
    v16 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 4) == 0)
    {
LABEL_25:
      if ((v22 & 8) == 0)
      {
LABEL_27:
        uint64_t v24 = v16 + 2;
        if ((v22 & 0x10) == 0) {
          uint64_t v24 = v16;
        }
        if ((v22 & 0x20) != 0) {
          uint64_t v16 = v24 + 2;
        }
        else {
          uint64_t v16 = v24;
        }
        goto LABEL_32;
      }
LABEL_26:
      uint64_t v23 = sub_1710450(*(void *)(a1 + 120));
      v16 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
      goto LABEL_27;
    }
LABEL_40:
    uint64_t v33 = sub_184B568(*(void *)(a1 + 112));
    v16 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_32:
  uint64_t v25 = *(void *)(a1 + 8);
  if (v25)
  {
    unint64_t v34 = v25 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v34 + 31) < 0) {
      uint64_t v35 = *(void *)(v34 + 16);
    }
    else {
      uint64_t v35 = *(unsigned __int8 *)(v34 + 31);
    }
    v16 += v35;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void sub_1543D24(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_154B658((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38((std::string *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C1E38((std::string *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    unsigned int v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *unsigned int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 0x3F) != 0)
  {
    if (v19)
    {
      uint64_t v21 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      sub_1881DF4((std::string **)(a1 + 96), v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_29;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    uint64_t v24 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v25 = *(void *)(a1 + 8);
    unsigned int v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      unsigned int v26 = (uint64_t *)*v26;
    }
    sub_1881DF4((std::string **)(a1 + 104), v24, v26);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_37;
    }
LABEL_29:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v27 = *(void *)(a1 + 112);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (void *)*v29;
      }
      uint64_t v27 = sub_185089C((uint64_t)v29);
      *(void *)(a1 + 112) = v27;
    }
    if (*(void *)(a2 + 112)) {
      unint64_t v30 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      unint64_t v30 = &off_254D2B0;
    }
    sub_16CE3CC(v27, (uint64_t)v30);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_45;
    }
LABEL_37:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v31 = *(void **)(a1 + 120);
    if (!v31)
    {
      uint64_t v32 = *(void *)(a1 + 8);
      uint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        uint64_t v33 = (void *)*v33;
      }
      uint64_t v31 = sub_178A5CC((uint64_t)v33);
      *(void *)(a1 + 120) = v31;
    }
    if (*(void *)(a2 + 120)) {
      unint64_t v34 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      unint64_t v34 = &off_2546978;
    }
    sub_171068C((uint64_t)v31, (uint64_t)v34);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0)
      {
LABEL_18:
        *(_DWORD *)(a1 + 16) |= v19;
        goto LABEL_19;
      }
LABEL_17:
      *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
      goto LABEL_18;
    }
LABEL_45:
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    if ((v19 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1544004(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16FD18C(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    uint64_t result = sub_16CE508(*(void *)(a1 + 112));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_1710848(*(void *)(a1 + 120));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_154407C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceCollectionItemExt.LocalizedPlaceCollectionItem");
}

uint64_t sub_154408C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253D4E0)
  {
    int v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1544A30(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1544144(uint64_t a1)
{
  sub_154408C(a1);

  operator delete();
}

uint64_t sub_154417C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_15441E8(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0)
  {
    *(unsigned char *)(v1 + 40) = 0;
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_15441E8(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  uint64_t result = sub_188CC00(a1 + 48);
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 80) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1544254(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v30 + 2;
      }
    }
    unint64_t v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v20 = v8 + 1;
      uint64_t v21 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_33;
      }
      int v22 = *v20;
      uint64_t v21 = v21 + (v22 << 7) - 128;
      if ((v22 & 0x80000000) == 0)
      {
        uint64_t v20 = v8 + 2;
LABEL_33:
        unint64_t v30 = v20;
        *(unsigned char *)(a1 + 40) = v21 != 0;
        goto LABEL_38;
      }
      unsigned int v26 = (char *)sub_188C138((uint64_t)v8, v21);
      unint64_t v30 = v26;
      *(unsigned char *)(a1 + 40) = v27 != 0;
      if (!v26) {
        goto LABEL_47;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v23 = v8 + 1;
      uint64_t v24 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v25 = *v23;
      uint64_t v24 = v24 + (v25 << 7) - 128;
      if ((v25 & 0x80000000) == 0)
      {
        uint64_t v23 = v8 + 2;
LABEL_37:
        unint64_t v30 = v23;
        *(void *)(a1 + 32) = v24;
        goto LABEL_38;
      }
      uint64_t v28 = (char *)sub_188C138((uint64_t)v8, v24);
      unint64_t v30 = v28;
      *(void *)(a1 + 32) = v29;
      if (!v28) {
        goto LABEL_47;
      }
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      unsigned int v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        unsigned int v18 = (void *)*v18;
      }
      sub_1548BC4((uint64_t)v18);
      uint64_t v17 = v19;
      *(void *)(a1 + 24) = v19;
      uint64_t v8 = v30;
    }
    uint64_t v16 = (char *)sub_15444AC(a3, v17, (unsigned __int8 *)v8);
LABEL_27:
    unint64_t v30 = v16;
    if (!v16) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v30;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_27;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  unint64_t v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v30;
}

uint64_t sub_15444AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1544AEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_154453C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 40);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 24);
    unsigned char *v4 = 26;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    v4[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, v4 + 1);
    }
    else {
      uint64_t v13 = v4 + 2;
    }
    char v4 = sub_1544EC4(v11, (unint64_t)v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1544700(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v5 = sub_15451D0(*(void *)(a1 + 24));
    uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_11:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_15447CC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        sub_1548BC4((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        unint64_t v9 = &off_253D510;
      }
      uint64_t result = sub_15448B4(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        v3[1].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_15448B4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    char v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14) {
      v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
    }
    if ((v14 & 2) != 0) {
      v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
  }
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1544A18()
{
  return 1;
}

void *sub_1544A20@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PublisherExt.RelatedCollection");
}

void *sub_1544A30(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 6);
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1544AB4(void *a1)
{
  sub_1544A30(a1);

  operator delete();
}

uint64_t sub_1544AEC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v40 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v40, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (uint64_t **)(a1 + 48);
  uint64_t v8 = (uint64_t **)(a1 + 24);
  int v9 = (void *)(a1 + 8);
  while (2)
  {
    char v10 = (char *)(*(void *)v40 + 1);
    unsigned int v11 = **(unsigned char **)v40;
    if ((char)**(unsigned char **)v40 < 0)
    {
      unsigned int v12 = v11 + (*v10 << 7);
      unsigned int v11 = v12 - 128;
      if (*v10 < 0)
      {
        char v10 = (char *)sub_188C180(*(uint64_t *)v40, v12 - 128);
        unsigned int v11 = v13;
      }
      else
      {
        char v10 = (char *)(*(void *)v40 + 2);
      }
    }
    *(void *)v40 = v10;
    switch(v11 >> 3)
    {
      case 1u:
        if (v11 != 8) {
          goto LABEL_43;
        }
        v5 |= 1u;
        int v14 = v10 + 1;
        uint64_t v15 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v16 = *v14;
        uint64_t v15 = v15 + (v16 << 7) - 128;
        if ((v16 & 0x80000000) == 0)
        {
          int v14 = v10 + 2;
LABEL_13:
          *(void *)v40 = v14;
          *(void *)(a1 + 72) = v15;
          goto LABEL_50;
        }
        uint64_t v36 = sub_188C138((uint64_t)v10, v15);
        *(void *)v40 = v36;
        *(void *)(a1 + 72) = v37;
        if (v36) {
          goto LABEL_50;
        }
        goto LABEL_59;
      case 2u:
        if (v11 != 16) {
          goto LABEL_43;
        }
        v5 |= 2u;
        uint64_t v17 = v10 + 1;
        uint64_t v18 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v19 = *v17;
        uint64_t v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v10, v18);
          *(void *)v40 = v38;
          *(void *)(a1 + 80) = v39;
          if (!v38) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v17 = v10 + 2;
LABEL_18:
          *(void *)v40 = v17;
          *(void *)(a1 + 80) = v18;
        }
        goto LABEL_50;
      case 3u:
        if (v11 != 26) {
          goto LABEL_43;
        }
        uint64_t v20 = v10 - 1;
        while (1)
        {
          uint64_t v21 = (char *)(v20 + 1);
          *(void *)v40 = v20 + 1;
          int v22 = *(_DWORD **)(a1 + 40);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 32) = v23 + 1;
            uint64_t v24 = *(std::string **)&v22[2 * v23 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v26 = v25;
            v26[1] = sub_3A6EDC;
            *int v25 = 0;
            v25[1] = 0;
            int v25[2] = 0;
            uint64_t v24 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v25);
            uint64_t v21 = *(char **)v40;
          }
          uint64_t v20 = sub_188C244(v24, v21, (uint64_t)a3);
          *(void *)v40 = v20;
          if (!v20) {
            goto LABEL_59;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 26) {
            goto LABEL_50;
          }
        }
      case 4u:
        if (v11 != 34) {
          goto LABEL_43;
        }
        uint64_t v27 = v10 - 1;
        while (1)
        {
          uint64_t v28 = (char *)(v27 + 1);
          *(void *)v40 = v27 + 1;
          uint64_t v29 = *(_DWORD **)(a1 + 64);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 56), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 56) = v30 + 1;
            uint64_t v31 = *(std::string **)&v29[2 * v30 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v33 = v32;
            v33[1] = sub_3A6EDC;
            *uint64_t v32 = 0;
            v32[1] = 0;
            v32[2] = 0;
            uint64_t v31 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v32);
            uint64_t v28 = *(char **)v40;
          }
          uint64_t v27 = sub_188C244(v31, v28, (uint64_t)a3);
          *(void *)v40 = v27;
          if (!v27) {
            goto LABEL_59;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 34) {
            goto LABEL_50;
          }
        }
      default:
LABEL_43:
        if (v11) {
          BOOL v34 = (v11 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v9)
          {
            uint64_t v35 = (std::string *)((*v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v10 = *(char **)v40;
          }
          *(void *)v40 = sub_1885AC0(v11, v35, v10, a3);
          if (!*(void *)v40) {
            goto LABEL_59;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, (char **)v40, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v10) {
          a3[10].i32[0] = v11 - 1;
        }
        else {
LABEL_59:
        }
          *(void *)v40 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v40;
    }
  }
}

char *sub_1544EC4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 72);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 80);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(unsigned int *)(a1 + 32);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 8 * v13;
    do
    {
      int v16 = *(void **)(*(void *)(a1 + 40) + v14 + 8);
      if (*((char *)v16 + 23) < 0)
      {
        int64_t v17 = v16[1];
        if (v17 > 127) {
          goto LABEL_26;
        }
      }
      else
      {
        int64_t v17 = *((unsigned __int8 *)v16 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v17)
      {
        char *v4 = 26;
        v4[1] = v17;
        if (*((char *)v16 + 23) < 0) {
          int v16 = (void *)*v16;
        }
        uint64_t v18 = v4 + 2;
        memcpy(v18, v16, v17);
        int v4 = &v18[v17];
        goto LABEL_24;
      }
LABEL_26:
      int v4 = (char *)sub_188A868(a3, 3, (uint64_t)v16, v4);
LABEL_24:
      v14 += 8;
    }
    while (v15 != v14);
  }
  uint64_t v19 = *(unsigned int *)(a1 + 56);
  if ((int)v19 >= 1)
  {
    uint64_t v20 = 0;
    uint64_t v21 = 8 * v19;
    do
    {
      int v22 = *(void **)(*(void *)(a1 + 64) + v20 + 8);
      if (*((char *)v22 + 23) < 0)
      {
        int64_t v23 = v22[1];
        if (v23 > 127) {
          goto LABEL_38;
        }
      }
      else
      {
        int64_t v23 = *((unsigned __int8 *)v22 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v23)
      {
        char *v4 = 34;
        v4[1] = v23;
        if (*((char *)v22 + 23) < 0) {
          int v22 = (void *)*v22;
        }
        uint64_t v24 = v4 + 2;
        memcpy(v24, v22, v23);
        int v4 = &v24[v23];
        goto LABEL_36;
      }
LABEL_38:
      int v4 = (char *)sub_188A868(a3, 4, (uint64_t)v22, v4);
LABEL_36:
      v20 += 8;
    }
    while (v21 != v20);
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_15451D0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 56);
  uint64_t v8 = v3 + v7;
  if ((int)v7 >= 1)
  {
    unint64_t v9 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v8 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      --v7;
    }
    while (v7);
  }
  int v13 = *(_DWORD *)(a1 + 16);
  if ((v13 & 3) != 0)
  {
    if (v13) {
      v8 += ((9 * (__clz(*(void *)(a1 + 72) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v13 & 2) != 0) {
      v8 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v8 += v17;
  }
  *(_DWORD *)(a1 + 20) = v8;
  return v8;
}

uint64_t sub_1545314()
{
  return 1;
}

void *sub_154531C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CollectionValidityInfo");
}

uint64_t sub_154532C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_253D568)
  {
    if (*(void *)(a1 + 48))
    {
      sub_184B078();
      operator delete();
    }
    if (*(void *)(a1 + 56))
    {
      sub_184B078();
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 64);
    if (v5)
    {
      sub_1544A30(v5);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_12C1DB8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1545428(uint64_t a1)
{
  sub_154532C(a1);

  operator delete();
}

uint64_t sub_1545460(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if (v5)
    {
      uint64_t result = (uint64_t)sub_16CD894(*(void *)(v1 + 48));
      if ((v5 & 2) == 0)
      {
LABEL_8:
        if ((v5 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_8;
    }
    uint64_t result = (uint64_t)sub_16CD894(*(void *)(v1 + 56));
    if ((v5 & 4) != 0) {
LABEL_9:
    }
      uint64_t result = sub_15441E8(*(void *)(v1 + 64));
  }
LABEL_10:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(void *)(v6 + 64) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_1545520(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v27 + 1;
    unsigned int v9 = *v27;
    if (*v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v27 + 2;
      }
    }
    unint64_t v27 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 48);
        if (v12) {
          goto LABEL_20;
        }
        int v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v13 = (void *)*v13;
        }
        uint64_t v12 = sub_185089C((uint64_t)v13);
        *(void *)(a1 + 48) = v12;
        goto LABEL_19;
      case 2u:
        if (v9 != 18) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v12 = *(void *)(a1 + 56);
        if (!v12)
        {
          uint64_t v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v14 = (void *)*v14;
          }
          uint64_t v12 = sub_185089C((uint64_t)v14);
          *(void *)(a1 + 56) = v12;
LABEL_19:
          uint64_t v8 = v27;
        }
LABEL_20:
        uint64_t v15 = sub_12688D0(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_46;
      case 3u:
        if (v9 != 25) {
          goto LABEL_39;
        }
        v5 |= 8u;
        *(void *)(a1 + 72) = *(void *)v8;
        unint64_t v27 = v8 + 8;
        goto LABEL_47;
      case 4u:
        if (v9 != 34) {
          goto LABEL_39;
        }
        unint64_t v16 = v8 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          unint64_t v27 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_15C1B30(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
            uint64_t v17 = (unsigned __int8 *)v27;
          }
          unint64_t v16 = (char *)sub_125CF74(a3, v20, v17);
          unint64_t v27 = v16;
          if (!v16) {
            goto LABEL_52;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 34) {
            goto LABEL_47;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v22 = *(void *)(a1 + 64);
        if (!v22)
        {
          int64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int64_t v23 = (void *)*v23;
          }
          sub_1548BC4((uint64_t)v23);
          uint64_t v22 = v24;
          *(void *)(a1 + 64) = v24;
          uint64_t v8 = v27;
        }
        uint64_t v15 = (char *)sub_15444AC(a3, v22, (unsigned __int8 *)v8);
        goto LABEL_46;
      default:
LABEL_39:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            unsigned int v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v27;
          }
          uint64_t v15 = (char *)sub_1885AC0(v9, v26, v8, a3);
LABEL_46:
          unint64_t v27 = v15;
          if (!v15) {
            goto LABEL_52;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          unint64_t v27 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v27;
    }
  }
}

unsigned char *sub_1545820(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_20;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_184B3AC(v10, v12, a3);
  if ((v6 & 8) != 0)
  {
LABEL_17:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 72);
    unsigned char *v4 = 25;
    *(void *)(v4 + 1) = v13;
    v4 += 9;
  }
LABEL_20:
  int v14 = *(_DWORD *)(a1 + 32);
  if (v14)
  {
    for (int i = 0; i != v14; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      v4[1] = v17;
      if (v17 > 0x7F) {
        uint64_t v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        uint64_t v18 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v16, v18, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 64);
    unsigned char *v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      uint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      uint64_t v21 = v4 + 2;
    }
    uint64_t v4 = sub_1544EC4(v19, (unint64_t)v21, a3);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    BOOL v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    BOOL v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_1545AD8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_16;
  }
  if (v8)
  {
    uint64_t v12 = sub_184B568(*(void *)(a1 + 48));
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v13 = sub_184B568(*(void *)(a1 + 56));
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) != 0)
  {
LABEL_13:
    uint64_t v9 = sub_15451D0(*(void *)(a1 + 64));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  if ((v8 & 8) != 0) {
    v2 += 9;
  }
LABEL_16:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v14 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1545C3C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C1E38((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 48);
      if (!v11)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v11 = sub_185089C((uint64_t)v13);
        *(void *)(a1 + 48) = v11;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v14 = &off_254D2B0;
      }
      sub_16CE3CC(v11, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_31;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 56);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      unsigned int v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        unsigned int v17 = (void *)*v17;
      }
      uint64_t v15 = sub_185089C((uint64_t)v17);
      *(void *)(a1 + 56) = v15;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v18 = &off_254D2B0;
    }
    sub_16CE3CC(v15, (uint64_t)v18);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_31:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v19 = *(std::string **)(a1 + 64);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      sub_1548BC4((uint64_t)v21);
      *(void *)(a1 + 64) = v19;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v22 = *(void *(****)(void *))(a2 + 64);
    }
    else {
      uint64_t v22 = &off_253D510;
    }
    sub_15448B4(v19, (uint64_t)v22);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1545E1C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_16CE508(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1545E68@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CollectionIdsExt.CollectionInfo");
}

uint64_t sub_1545E78(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_253D5B8 && *(void *)(a1 + 24))
  {
    sub_184B078();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1545F30(uint64_t a1)
{
  sub_1545E78(a1);

  operator delete();
}

unsigned char *sub_1545F68(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if (v2) {
    uint64_t result = sub_16CD894(*((void *)result + 3));
  }
  if ((v2 & 6) != 0)
  {
    *((_DWORD *)v1 + 10) = 0;
    *((void *)v1 + 4) = 0;
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1545FD4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v29 + 2;
      }
    }
    uint64_t v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v19 = v8 + 1;
      int v20 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_33;
      }
      int v21 = *v19;
      int v20 = v20 + (v21 << 7) - 128;
      if ((v21 & 0x80000000) == 0)
      {
        uint64_t v19 = v8 + 2;
LABEL_33:
        uint64_t v29 = v19;
        *(_DWORD *)(a1 + 40) = v20;
        goto LABEL_38;
      }
      BOOL v25 = (char *)sub_188C0D0((uint64_t)v8, v20);
      uint64_t v29 = v25;
      *(_DWORD *)(a1 + 40) = v26;
      if (!v25) {
        goto LABEL_47;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v22 = v8 + 1;
      uint64_t v23 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v24 = *v22;
      uint64_t v23 = v23 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        uint64_t v22 = v8 + 2;
LABEL_37:
        uint64_t v29 = v22;
        *(void *)(a1 + 32) = v23;
        goto LABEL_38;
      }
      uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v23);
      uint64_t v29 = v27;
      *(void *)(a1 + 32) = v28;
      if (!v27) {
        goto LABEL_47;
      }
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_185089C((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      int v8 = v29;
    }
    uint64_t v16 = sub_12688D0(a3, v17, (unsigned __int8 *)v8);
LABEL_27:
    uint64_t v29 = v16;
    if (!v16) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v29;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_27;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

char *sub_154621C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 40);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 24);
    char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_184B3AC(v13, v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1546424(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_10;
  }
  if (v2)
  {
    uint64_t v4 = sub_184B568(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_154650C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        unint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          unint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_185089C((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_254D2B0;
      }
      sub_16CE3CC(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_15465F4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1546620@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TrailHeadExt.TrailData");
}

uint64_t sub_1546630(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_14900FC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15466DC(uint64_t a1)
{
  sub_1546630(a1);

  operator delete();
}

uint64_t sub_1546714(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1417070(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (v5)
  {
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  if ((v5 & 6) != 0)
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_15467D0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (char *)(*(void *)v34 + 1);
    unsigned int v9 = **(unsigned char **)v34;
    if ((char)**(unsigned char **)v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v34 + 2);
      }
    }
    *(void *)BOOL v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unsigned int v14 = (std::string *)sub_1880F84((void *)(a1 + 48), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v34, (uint64_t)a3);
        goto LABEL_40;
      case 2u:
        if (v9 != 16) {
          goto LABEL_33;
        }
        v5 |= 2u;
        uint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v30 = sub_188C138((uint64_t)v8, v17);
          *(void *)BOOL v34 = v30;
          *(void *)(a1 + 56) = v31;
          if (!v30) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_17:
          *(void *)BOOL v34 = v16;
          *(void *)(a1 + 56) = v17;
        }
        goto LABEL_41;
      case 3u:
        if (v9 != 24) {
          goto LABEL_33;
        }
        v5 |= 4u;
        uint64_t v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v32 = sub_188C138((uint64_t)v8, v20);
          *(void *)BOOL v34 = v32;
          *(void *)(a1 + 64) = v33;
          if (!v32) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_22:
          *(void *)BOOL v34 = v19;
          *(void *)(a1 + 64) = v20;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 34) {
          goto LABEL_33;
        }
        uint64_t v22 = v8 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)BOOL v34 = v22 + 1;
          int v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_144A6DC(*(void *)(a1 + 24));
            uint64_t v26 = sub_188CDC8(a1 + 24, (uint64_t)v27);
            uint64_t v23 = *(unsigned __int8 **)v34;
          }
          uint64_t v22 = (char *)sub_1415788(a3, v26, v23);
          *(void *)BOOL v34 = v22;
          if (!v22) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_41;
          }
        }
      default:
LABEL_33:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(char **)v34;
          }
          uint64_t v15 = sub_1885AC0(v9, v29, v8, a3);
LABEL_40:
          *(void *)BOOL v34 = v15;
          if (!v15) {
            goto LABEL_50;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_50:
        }
          *(void *)BOOL v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v34;
    }
  }
}

unsigned char *sub_1546AD0(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 64);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_1417780(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1546D30(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1417BAC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v11 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v8 & 4) != 0) {
LABEL_13:
    }
      v2 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v14 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1546E84(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1491C84(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1546FC4()
{
  return 1;
}

void *sub_1546FCC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EnrichmentInfoValidity.AssetInfo");
}

uint64_t sub_1546FDC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_149047C((void *)(a1 + 48));
  sub_154B1A8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15470AC(uint64_t a1)
{
  sub_1546FDC(a1);

  operator delete();
}

uint64_t sub_15470E4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1546714(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14228C4(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
        if ((v8 & 2) == 0) {
          goto LABEL_19;
        }
        goto LABEL_14;
      }
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
    }
    if ((v8 & 2) == 0) {
      goto LABEL_19;
    }
LABEL_14:
    unint64_t v10 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
    }
  }
LABEL_19:
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

uint64_t sub_15471F4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    return *(void *)v31;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v31 + 1);
    unsigned int v8 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v31, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        char v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          char v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 72);
        goto LABEL_17;
      case 2u:
        if (v8 != 18) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        char v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          char v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 80);
LABEL_17:
        uint64_t v15 = (std::string *)sub_1880F84(v13, v12);
        unsigned int v16 = (void *)sub_188C244(v15, *(char **)v31, (uint64_t)a3);
        goto LABEL_45;
      case 3u:
        if (v8 != 26) {
          goto LABEL_38;
        }
        uint64_t v17 = v7 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          *(void *)uint64_t v31 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_1548D94(*(void *)(a1 + 24));
            uint64_t v21 = sub_188CDC8(a1 + 24, (uint64_t)v22);
            uint64_t v18 = *(unsigned __int8 **)v31;
          }
          uint64_t v17 = (char *)sub_15474F4(a3, v21, v18);
          *(void *)uint64_t v31 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_46;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_38;
        }
        uint64_t v23 = v7 - 1;
        while (1)
        {
          int v24 = (unsigned __int8 *)(v23 + 1);
          *(void *)uint64_t v31 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 64);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 56), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 56) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            BOOL v28 = sub_144B190(*(void *)(a1 + 48));
            uint64_t v27 = sub_188CDC8(a1 + 48, (uint64_t)v28);
            int v24 = *(unsigned __int8 **)v31;
          }
          uint64_t v23 = (char *)sub_141F788(a3, v27, v24);
          *(void *)uint64_t v31 = v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 34) {
            goto LABEL_46;
          }
        }
      default:
LABEL_38:
        if (v8) {
          BOOL v29 = (v8 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v6)
          {
            uint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(char **)v31;
          }
          unsigned int v16 = sub_1885AC0(v8, v30, v7, a3);
LABEL_45:
          *(void *)uint64_t v31 = v16;
          if (!v16) {
            return 0;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            return *(void *)v31;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v31;
    }
  }
}

uint64_t sub_15474F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15467D0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1547584(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        uint64_t v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        uint64_t v11 = v4 + 2;
      }
      uint64_t v4 = sub_1546AD0(v9, v11, a3);
    }
  }
  int v12 = *(_DWORD *)(a1 + 56);
  if (v12)
  {
    for (int j = 0; j != v12; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 34;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      v4[1] = v15;
      if (v15 > 0x7F) {
        unsigned int v16 = sub_188A9CC(v15, v4 + 1);
      }
      else {
        unsigned int v16 = v4 + 2;
      }
      uint64_t v4 = sub_1422F74(v14, v16, a3);
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_1547790(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1546D30(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1423360(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 3) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0)
    {
      unint64_t v19 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v21 = *(void *)(v19 + 8);
      if ((v20 & 0x80u) == 0) {
        uint64_t v21 = v20;
      }
      v9 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v9 += v25;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_1547924(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_154B6E4(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_1492058(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14)
    {
      int v15 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v15, v17);
    }
    if ((v14 & 2) != 0)
    {
      uint64_t v18 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
      uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (uint64_t *)*v20;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v18, v20);
    }
  }
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1547ACC()
{
  return 1;
}

void *sub_1547AD4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EnrichmentInfoValidity");
}

void *sub_1547AE4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24BF170;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_1547B68(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BF1F0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

uint64_t sub_1547C04(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BF270;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 1;
  return result;
}

uint64_t sub_1547CA4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BF2F0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1547D44(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BF370;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = a1;
  *(void *)(result + 88) = a1;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(_DWORD *)(result + 120) = 0;
  return result;
}

void *sub_1547E00(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24BF3F0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

double sub_1547E88(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24BF470;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  *(void *)(v2 + 40) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  return result;
}

void *sub_1547F18(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24BF4F0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

void *sub_1547FA0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_24BF570;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_1548044(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24BF5F0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = 0;
  return result;
}

void *sub_15480CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_24BF670;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_1548168(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24BF6F0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_15481EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BF770;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_154828C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24BF7F0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_1548310(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24BF870;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_1548394(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24BF8F0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_1548418(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BF970;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = a1;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = a1;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = a1;
  *(void *)(result + 120) = 0;
  *(void *)(result + 128) = 0;
  *(void *)(result + 136) = a1;
  *(void *)(result + 144) = 0;
  *(void *)(result + 152) = 0;
  *(_DWORD *)(result + 160) = 0;
  return result;
}

uint64_t sub_15484E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BF9F0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 48) = 0;
  return result;
}

void *sub_154857C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24BFA70;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_1548600(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24BFAF0;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

void *sub_1548684(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24BFB70;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_1548708(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24BFBF0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_15487A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24BFC70;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_154881C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BFCF0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = a1;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(_DWORD *)(result + 120) = 0;
  return result;
}

void *sub_15488D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24BFD70;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

void *sub_1548960(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24BFDF0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_15489E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BFE70;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1548A84(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BFEF0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = &qword_2550250;
  *(void *)(result + 104) = &qword_2550250;
  *(void *)(result + 112) = 0;
  *(void *)(result + 120) = 0;
  *(_WORD *)(result + 128) = 0;
  return result;
}

uint64_t sub_1548B44(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24BFF70;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

double sub_1548BC4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24BFFF0;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  return result;
}

uint64_t sub_1548C74(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C0070;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  return result;
}

uint64_t sub_1548D14(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C00F0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_1548D94(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24C0170;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[7] = 0;
  result[8] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_1548E3C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24C01F0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = &qword_2550250;
  return result;
}

void *sub_1548EEC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1548F6C(void *a1)
{
  sub_1548EEC(a1);

  operator delete();
}

uint64_t sub_1548FA4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_1549020(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      std::string::size_type v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          std::string::size_type v19 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_15C1B30(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = (char *)sub_125CF74(a3, v16, v13);
          std::string::size_type v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      std::string::size_type v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_15491C0(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_15B2EA4(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1549304(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_15493B4()
{
  return 1;
}

void *sub_15493BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VenueItemListExt.VenueItemLocalization");
}

uint64_t sub_15493CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C0270;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_154946C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16D7C14(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_15494FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16D578C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_154958C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16CFD68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_154961C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16DB468(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_15496AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = (uint64_t)sub_16B98F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_154973C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C2D6C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_15497CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16D9254(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_154985C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C4E40(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_15498EC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15499A4(uint64_t a1)
{
  sub_15498EC(a1);

  operator delete();
}

uint64_t sub_15499DC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1549A58(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      std::string::size_type v19 = (std::string *)sub_1880F84(v17, v16);
      int v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    int v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_1549C00(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1549CEC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1549DC8()
{
  return 1;
}

void *sub_1549DD0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ProviderRules");
}

void *sub_1549DE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C02F0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void sub_1549E64()
{
}

void *sub_1549EBC(uint64_t a1, uint64_t a2)
{
  return sub_1549DE0(a2);
}

uint64_t sub_1549EC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1549ECC()
{
}

void *sub_1549F24(uint64_t a1, uint64_t a2)
{
  return sub_1547AE4(a2);
}

uint64_t sub_1549F2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1549F34()
{
}

uint64_t sub_1549F88(uint64_t a1, uint64_t a2)
{
  return sub_1547B68(a2);
}

uint64_t sub_1549F90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1549F98()
{
}

uint64_t sub_1549FF0(uint64_t a1, uint64_t a2)
{
  return sub_1547C04(a2);
}

uint64_t sub_1549FF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A000()
{
}

uint64_t sub_154A054(uint64_t a1, uint64_t a2)
{
  return sub_1547CA4(a2);
}

uint64_t sub_154A05C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_154A064()
{
}

uint64_t sub_154A0C0(uint64_t a1, uint64_t a2)
{
  return sub_1547D44(a2);
}

uint64_t sub_154A0C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A0D0()
{
}

void *sub_154A12C(uint64_t a1, uint64_t a2)
{
  return sub_1547E00(a2);
}

uint64_t sub_154A134(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A13C()
{
}

double sub_154A1A0(uint64_t a1, uint64_t a2)
{
  return sub_1547E88(a2);
}

uint64_t sub_154A1A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A1B0()
{
}

void *sub_154A20C(uint64_t a1, uint64_t a2)
{
  return sub_1547F18(a2);
}

uint64_t sub_154A214(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A21C()
{
}

void *sub_154A278(uint64_t a1, uint64_t a2)
{
  return sub_1547FA0(a2);
}

uint64_t sub_154A280(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A288()
{
}

void *sub_154A2E4(uint64_t a1, uint64_t a2)
{
  return sub_1548044(a2);
}

uint64_t sub_154A2EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A2F4()
{
}

void *sub_154A348(uint64_t a1, uint64_t a2)
{
  return sub_15480CC(a2);
}

uint64_t sub_154A350(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A358()
{
}

void *sub_154A3B0(uint64_t a1, uint64_t a2)
{
  return sub_1548168(a2);
}

uint64_t sub_154A3B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A3C0()
{
}

uint64_t sub_154A414(uint64_t a1, uint64_t a2)
{
  return sub_15481EC(a2);
}

uint64_t sub_154A41C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_154A424()
{
}

void *sub_154A47C(uint64_t a1, uint64_t a2)
{
  return sub_154828C(a2);
}

uint64_t sub_154A484(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A48C()
{
}

void *sub_154A4E4(uint64_t a1, uint64_t a2)
{
  return sub_1548310(a2);
}

uint64_t sub_154A4EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A4F4()
{
}

void *sub_154A54C(uint64_t a1, uint64_t a2)
{
  return sub_1548394(a2);
}

uint64_t sub_154A554(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A55C()
{
}

uint64_t sub_154A5C0(uint64_t a1, uint64_t a2)
{
  return sub_1548418(a2);
}

uint64_t sub_154A5C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 160);
}

void sub_154A5D0()
{
}

uint64_t sub_154A624(uint64_t a1, uint64_t a2)
{
  return sub_15484E0(a2);
}

uint64_t sub_154A62C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A634()
{
}

void *sub_154A68C(uint64_t a1, uint64_t a2)
{
  return sub_154857C(a2);
}

uint64_t sub_154A694(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A69C()
{
}

void *sub_154A6F4(uint64_t a1, uint64_t a2)
{
  return sub_1548600(a2);
}

uint64_t sub_154A6FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A704()
{
}

void *sub_154A75C(uint64_t a1, uint64_t a2)
{
  return sub_1548684(a2);
}

uint64_t sub_154A764(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A76C()
{
}

void *sub_154A7C0(uint64_t a1, uint64_t a2)
{
  return sub_1548708(a2);
}

uint64_t sub_154A7C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A7D0()
{
}

void *sub_154A81C(uint64_t a1, uint64_t a2)
{
  return sub_15487A4(a2);
}

uint64_t sub_154A824(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A82C()
{
}

uint64_t sub_154A888(uint64_t a1, uint64_t a2)
{
  return sub_154881C(a2);
}

uint64_t sub_154A890(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A898()
{
}

void *sub_154A8F4(uint64_t a1, uint64_t a2)
{
  return sub_15488D8(a2);
}

uint64_t sub_154A8FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A904()
{
}

void *sub_154A95C(uint64_t a1, uint64_t a2)
{
  return sub_1548960(a2);
}

uint64_t sub_154A964(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154A96C()
{
}

uint64_t sub_154A9C0(uint64_t a1, uint64_t a2)
{
  return sub_15489E4(a2);
}

uint64_t sub_154A9C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_154A9D0()
{
}

uint64_t sub_154AA3C(uint64_t a1, uint64_t a2)
{
  return sub_1548A84(a2);
}

uint64_t sub_154AA44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154AA4C()
{
}

uint64_t sub_154AAA0(uint64_t a1, uint64_t a2)
{
  return sub_1548B44(a2);
}

uint64_t sub_154AAA8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154AAB0()
{
}

double sub_154AB08(uint64_t a1, uint64_t a2)
{
  return sub_1548BC4(a2);
}

uint64_t sub_154AB10(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154AB18()
{
}

uint64_t sub_154AB6C(uint64_t a1, uint64_t a2)
{
  return sub_1548C74(a2);
}

uint64_t sub_154AB74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154AB7C()
{
}

uint64_t sub_154ABD0(uint64_t a1, uint64_t a2)
{
  return sub_1548D14(a2);
}

uint64_t sub_154ABD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154ABE0()
{
}

void *sub_154AC40(uint64_t a1, uint64_t a2)
{
  return sub_1548D94(a2);
}

uint64_t sub_154AC48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154AC50()
{
}

void *sub_154ACB4(uint64_t a1, uint64_t a2)
{
  return sub_1548E3C(a2);
}

uint64_t sub_154ACBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154ACC4()
{
}

uint64_t sub_154AD18(uint64_t a1, uint64_t a2)
{
  return sub_15493CC(a2);
}

uint64_t sub_154AD20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_154AD28(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16D9CD8();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_154ADA8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15375B0();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_154AE28(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_153B6AC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_154AEA8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_175F240();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_154AF28(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1540378(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_154AFA8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_129976C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_154B028(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_175AE9C();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_154B0A8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1542290(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_154B128(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16FBBB4();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_154B1A8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1546630(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_154B228(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = sub_1787818(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_154B2A4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_154B2A4(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_154B2B4(uint64_t *result, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1547D44(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_154B330(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_154B330(uint64_t a1, uint64_t a2)
{
  return sub_15382C4(a2, a1);
}

std::string *sub_154B340(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unsigned int v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1548168(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_154B3BC(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      sub_178CAC0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      int v14 = *v7++;
      sub_154B438(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_154B438(uint64_t a1, std::string *a2)
{
  return sub_175FAD0(a2, a1);
}

void sub_154B448(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_15487A4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_154B4C4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_154B4C4(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_154B4D4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_129E6C4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_122C7C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_154B550(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_178C798(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_154B5CC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_154B5CC(uint64_t a1, uint64_t a2)
{
}

std::string *sub_154B5DC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unsigned int v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1548960(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_154B658(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = sub_17894DC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_154B6D4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_154B6D4(uint64_t a1, uint64_t a2)
{
}

std::string *sub_154B6E4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unsigned int v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1548D94(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_154B760(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_154B760(uint64_t a1, std::string *a2)
{
  return sub_1546E84(a2, a1);
}

void sub_154B770()
{
  dword_254F3C0 = 1001;
  qword_254F3C8 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2536850, 1001, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F3D0 = 1001;
  qword_254F3D8 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_25368B0, 1001, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F3E0 = 100;
  qword_254F3E8 = (uint64_t)&off_253CE80;
  sub_1882AC4((unint64_t)&off_254AF08, 100, 11, 1, 0, (uint64_t)&off_253CE80);
  dword_254F3F0 = 101;
  byte_254F3F4 = 0;
  sub_1882224((unint64_t)&off_254AF08, 101, 8, 0, 0);
  dword_254F3F8 = 102;
  qword_254F400 = (uint64_t)&unk_214D608;
  sub_1882224((unint64_t)&off_254AF08, 102, 9, 0, 0);
  qword_254F408 = 103;
  sub_1882224((unint64_t)&off_254AF08, 103, 13, 0, 0);
  dword_254F410 = 104;
  qword_254F418 = (uint64_t)&off_254CB28;
  sub_1882AC4((unint64_t)&off_254AF08, 104, 11, 0, 0, (uint64_t)&off_254CB28);
  dword_254F420 = 201;
  qword_254F428 = (uint64_t)&off_253F208;
  sub_1882AC4((unint64_t)&off_25449E0, 201, 11, 1, 0, (uint64_t)&off_253F208);
  dword_254F430 = 1000;
  byte_254F434 = 0;
  sub_1882224((unint64_t)&off_2544B30, 1000, 8, 0, 0);
  dword_254F438 = 1000;
  byte_254F43C = 0;
  sub_1882224((unint64_t)&off_25446B0, 1000, 8, 0, 0);
  dword_254F440 = 1000;
  byte_254F444 = 0;
  sub_1882224((unint64_t)&off_2545708, 1000, 8, 0, 0);
  dword_254F448 = 1001;
  qword_254F450 = (uint64_t)&unk_214D620;
  sub_1882224((unint64_t)&off_2546978, 1001, 9, 0, 0);
  dword_254F458 = 1002;
  qword_254F460 = (uint64_t)&unk_214D638;
  sub_1882224((unint64_t)&off_2546978, 1002, 9, 0, 0);
  dword_254F468 = 1001;
  qword_254F470 = (uint64_t)&unk_214D650;
  sub_1882224((unint64_t)&off_2548D70, 1001, 9, 0, 0);
  dword_254F478 = 1001;
  qword_254F480 = (uint64_t)&unk_214D668;
  sub_1882224((unint64_t)&off_2548E18, 1001, 9, 0, 0);
  dword_254F488 = 1002;
  qword_254F490 = (uint64_t)&unk_214D680;
  sub_1882224((unint64_t)&off_2548E18, 1002, 9, 1, 0);
  qword_254F498 = 0x1000003E9;
  sub_18829C0((unint64_t)&off_2548C38, 1001, 14, 0, 0, (uint64_t)sub_1535A3C);
  qword_254F4A0 = 0x1000003E9;
  sub_18829C0((unint64_t)&off_2548C88, 1001, 14, 0, 0, (uint64_t)sub_1535A3C);
  dword_254F4A8 = 1000;
  qword_254F4B0 = (uint64_t)&off_253CEA8;
  sub_1882AC4((unint64_t)&off_25468E8, 1000, 11, 1, 0, (uint64_t)&off_253CEA8);
  dword_254F4B8 = 1001;
  byte_254F4BC = 0;
  sub_1882224((unint64_t)&off_25468E8, 1001, 8, 0, 0);
  qword_254F4C0 = 0x1000003EALL;
  sub_18829C0((unint64_t)&off_25468E8, 1002, 14, 1, 0, (uint64_t)sub_13F4AFC);
  qword_254F4C8 = 0x1000003EBLL;
  sub_18829C0((unint64_t)&off_25468E8, 1003, 14, 0, 0, (uint64_t)sub_13F4B0C);
  dword_254F4D0 = 500;
  qword_254F4D8 = (uint64_t)&off_2548588;
  sub_1882AC4((unint64_t)&off_254D2B0, 500, 11, 0, 0, (uint64_t)&off_2548588);
  qword_254F4E0 = 201;
  sub_18829C0((unint64_t)&off_25450F8, 201, 14, 0, 0, (uint64_t)sub_1535A4C);
  dword_254F4E8 = 202;
  qword_254F4F0 = 0;
  sub_1882224((unint64_t)&off_25450F8, 202, 4, 1, 0);
  qword_254F4F8 = 203;
  sub_18829C0((unint64_t)&off_25450F8, 203, 14, 0, 0, (uint64_t)sub_1535A58);
  dword_254F500 = 204;
  qword_254F508 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_25450F8, 204, 11, 1, 0, (uint64_t)&off_253F2A0);
  qword_254F510 = 0x1000000CDLL;
  sub_18829C0((unint64_t)&off_25450F8, 205, 14, 0, 0, (uint64_t)sub_145C85C);
  dword_254F518 = 206;
  qword_254F520 = (uint64_t)&off_253CF50;
  sub_1882AC4((unint64_t)&off_25450F8, 206, 11, 1, 0, (uint64_t)&off_253CF50);
  dword_254F528 = 207;
  qword_254F530 = (uint64_t)&off_253CEE8;
  sub_1882AC4((unint64_t)&off_25450F8, 207, 11, 1, 0, (uint64_t)&off_253CEE8);
  dword_254F538 = 201;
  qword_254F540 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_25451C8, 201, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F548 = 202;
  qword_254F550 = (uint64_t)&off_253CEE8;
  sub_1882AC4((unint64_t)&off_25451C8, 202, 11, 1, 0, (uint64_t)&off_253CEE8);
  dword_254F558 = 201;
  qword_254F560 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2545228, 201, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F568 = 202;
  qword_254F570 = 0;
  sub_1882224((unint64_t)&off_2545228, 202, 4, 0, 0);
  dword_254F578 = 201;
  qword_254F580 = (uint64_t)&off_253CF20;
  sub_1882AC4((unint64_t)&off_2545000, 201, 11, 1, 0, (uint64_t)&off_253CF20);
  qword_254F588 = 202;
  sub_18829C0((unint64_t)&off_2545000, 202, 14, 0, 0, (uint64_t)sub_1535A4C);
  dword_254F590 = 203;
  qword_254F598 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2545000, 203, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F5A0 = 204;
  qword_254F5A8 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2545000, 204, 11, 1, 0, (uint64_t)&off_253F2A0);
  qword_254F5B0 = 201;
  sub_18829C0((unint64_t)&off_2544E18, 201, 14, 0, 0, (uint64_t)sub_1535A4C);
  dword_254F5B8 = 201;
  byte_254F5BC = 0;
  sub_1882224((unint64_t)&off_2544ED0, 201, 8, 0, 0);
  qword_254F5C0 = 202;
  sub_18829C0((unint64_t)&off_2544ED0, 202, 14, 0, 0, (uint64_t)sub_1321820);
  dword_254F5C8 = 203;
  qword_254F5D0 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2544ED0, 203, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F5D8 = 204;
  qword_254F5E0 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2544ED0, 204, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F5E8 = 1001;
  qword_254F5F0 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2544ED0, 1001, 11, 0, 0, (uint64_t)&off_253F2A0);
  dword_254F5F8 = 1002;
  qword_254F600 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2544ED0, 1002, 11, 0, 0, (uint64_t)&off_253F2A0);
  dword_254F608 = 201;
  qword_254F610 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2544F98, 201, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F618 = 1002;
  qword_254F620 = 0;
  sub_1882224((unint64_t)&off_25486C0, 1002, 4, 0, 0);
  dword_254F628 = 1005;
  qword_254F630 = (uint64_t)&off_253D670;
  sub_1882AC4((unint64_t)&off_25486C0, 1005, 11, 1, 0, (uint64_t)&off_253D670);
  dword_254F638 = 1006;
  qword_254F640 = (uint64_t)&off_253D050;
  sub_1882AC4((unint64_t)&off_25486C0, 1006, 11, 1, 0, (uint64_t)&off_253D050);
  dword_254F648 = 1007;
  qword_254F650 = 0;
  sub_1882224((unint64_t)&off_25486C0, 1007, 4, 0, 0);
  dword_254F658 = 1008;
  qword_254F660 = (uint64_t)&off_253D670;
  sub_1882AC4((unint64_t)&off_25486C0, 1008, 11, 1, 0, (uint64_t)&off_253D670);
  dword_254F668 = 1009;
  byte_254F66C = 0;
  sub_1882224((unint64_t)&off_25486C0, 1009, 8, 0, 0);
  qword_254F670 = 1010;
  sub_18829C0((unint64_t)&off_25486C0, 1010, 14, 1, 0, (uint64_t)sub_13F4AC4);
  dword_254F678 = 1011;
  qword_254F680 = (uint64_t)&unk_214D698;
  sub_1882224((unint64_t)&off_25486C0, 1011, 9, 1, 0);
  dword_254F688 = 1500;
  qword_254F690 = (uint64_t)&unk_214D6B0;
  sub_1882224((unint64_t)&off_25486C0, 1500, 9, 1, 0);
  dword_254F698 = 1600;
  qword_254F6A0 = (uint64_t)&off_253A070;
  sub_1882AC4((unint64_t)&off_25486C0, 1600, 11, 0, 0, (uint64_t)&off_253A070);
  dword_254F6A8 = 1601;
  qword_254F6B0 = 0;
  sub_1882224((unint64_t)&off_25486C0, 1601, 4, 1, 0);
  dword_254F6B8 = 1602;
  qword_254F6C0 = (uint64_t)&off_253CFD0;
  sub_1882AC4((unint64_t)&off_25486C0, 1602, 11, 0, 0, (uint64_t)&off_253CFD0);
  dword_254F6C8 = 1603;
  qword_254F6D0 = (uint64_t)&off_253D000;
  sub_1882AC4((unint64_t)&off_25486C0, 1603, 11, 0, 0, (uint64_t)&off_253D000);
  dword_254F6D8 = 1604;
  qword_254F6E0 = (uint64_t)&off_253D670;
  sub_1882AC4((unint64_t)&off_25486C0, 1604, 11, 1, 0, (uint64_t)&off_253D670);
  dword_254F6E8 = 1605;
  qword_254F6F0 = (uint64_t)&off_253D670;
  sub_1882AC4((unint64_t)&off_25486C0, 1605, 11, 1, 0, (uint64_t)&off_253D670);
  dword_254F6F8 = 1606;
  qword_254F700 = (uint64_t)&off_253D080;
  sub_1882AC4((unint64_t)&off_25486C0, 1606, 11, 1, 0, (uint64_t)&off_253D080);
  dword_254F708 = 1607;
  qword_254F710 = 0;
  sub_1882224((unint64_t)&off_25486C0, 1607, 4, 0, 0);
  dword_254F718 = 1609;
  qword_254F720 = (uint64_t)&off_2537E90;
  sub_1882AC4((unint64_t)&off_25486C0, 1609, 11, 1, 0, (uint64_t)&off_2537E90);
  dword_254F728 = 1610;
  qword_254F730 = (uint64_t)&off_25384A8;
  sub_1882AC4((unint64_t)&off_25486C0, 1610, 11, 0, 0, (uint64_t)&off_25384A8);
  dword_254F738 = 1611;
  qword_254F740 = (uint64_t)&off_253D0B8;
  sub_1882AC4((unint64_t)&off_25486C0, 1611, 11, 0, 0, (uint64_t)&off_253D0B8);
  dword_254F748 = 1612;
  qword_254F750 = (uint64_t)&off_253D0B8;
  sub_1882AC4((unint64_t)&off_25486C0, 1612, 11, 1, 0, (uint64_t)&off_253D0B8);
  dword_254F758 = 1613;
  qword_254F760 = (uint64_t)&off_253D0B8;
  sub_1882AC4((unint64_t)&off_25486C0, 1613, 11, 0, 0, (uint64_t)&off_253D0B8);
  dword_254F768 = 1614;
  qword_254F770 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_25486C0, 1614, 11, 0, 0, (uint64_t)&off_253F2A0);
  dword_254F778 = 1615;
  qword_254F780 = (uint64_t)&off_253D0F0;
  sub_1882AC4((unint64_t)&off_25486C0, 1615, 11, 0, 0, (uint64_t)&off_253D0F0);
  dword_254F788 = 1616;
  qword_254F790 = (uint64_t)&off_2531238;
  sub_1882AC4((unint64_t)&off_25486C0, 1616, 11, 0, 0, (uint64_t)&off_2531238);
  dword_254F798 = 1617;
  qword_254F7A0 = (uint64_t)&off_253A070;
  sub_1882AC4((unint64_t)&off_25486C0, 1617, 11, 1, 0, (uint64_t)&off_253A070);
  qword_254F7A8 = 1618;
  sub_1882224((unint64_t)&off_25486C0, 1618, 5, 1, 0);
  dword_254F7B0 = 1619;
  qword_254F7B8 = 0;
  sub_1882224((unint64_t)&off_25486C0, 1619, 4, 0, 0);
  dword_254F7C0 = 1620;
  qword_254F7C8 = (uint64_t)&off_253D0B8;
  sub_1882AC4((unint64_t)&off_25486C0, 1620, 11, 1, 0, (uint64_t)&off_253D0B8);
  dword_254F7D0 = 1621;
  qword_254F7D8 = (uint64_t)&off_253D128;
  sub_1882AC4((unint64_t)&off_25486C0, 1621, 11, 0, 0, (uint64_t)&off_253D128);
  dword_254F7E0 = 1622;
  qword_254F7E8 = 0;
  sub_1882224((unint64_t)&off_25486C0, 1622, 4, 1, 0);
  dword_254F7F0 = 1623;
  byte_254F7F4 = 0;
  sub_1882224((unint64_t)&off_25486C0, 1623, 8, 0, 0);
  dword_254F7F8 = 1000;
  qword_254F800 = (uint64_t)&off_2546DD0;
  sub_1882AC4((unint64_t)&off_25475D8, 1000, 11, 1, 0, (uint64_t)&off_2546DD0);
  dword_254F808 = 1000;
  qword_254F810 = (uint64_t)&unk_214D6C8;
  sub_1882224((unint64_t)&off_25444D8, 1000, 9, 1, 0);
  dword_254F818 = 1001;
  qword_254F820 = (uint64_t)&unk_214D6E0;
  sub_1882224((unint64_t)&off_25444D8, 1001, 12, 0, 0);
  dword_254F828 = 1002;
  qword_254F830 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_25444D8, 1002, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F838 = 1003;
  qword_254F840 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_25444D8, 1003, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F848 = 1004;
  qword_254F850 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_25444D8, 1004, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F858 = 1006;
  qword_254F860 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_25444D8, 1006, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F868 = 1007;
  qword_254F870 = 0;
  sub_1882224((unint64_t)&off_25444D8, 1007, 4, 1, 0);
  dword_254F878 = 1008;
  byte_254F87C = 0;
  sub_1882224((unint64_t)&off_25444D8, 1008, 8, 0, 0);
  dword_254F880 = 1009;
  byte_254F884 = 0;
  sub_1882224((unint64_t)&off_25444D8, 1009, 8, 0, 0);
  dword_254F888 = 1010;
  qword_254F890 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_25444D8, 1010, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F898 = 1011;
  byte_254F89C = 0;
  sub_1882224((unint64_t)&off_25444D8, 1011, 8, 0, 0);
  dword_254F8A0 = 1012;
  qword_254F8A8 = 0;
  sub_1882224((unint64_t)&off_25444D8, 1012, 4, 0, 0);
  dword_254F8B0 = 1013;
  qword_254F8B8 = 0;
  sub_1882224((unint64_t)&off_25444D8, 1013, 4, 0, 0);
  dword_254F8C0 = 1014;
  qword_254F8C8 = 0;
  sub_1882224((unint64_t)&off_25444D8, 1014, 4, 1, 0);
  dword_254F8D0 = 1015;
  qword_254F8D8 = (uint64_t)&unk_214D6F8;
  sub_1882224((unint64_t)&off_25444D8, 1015, 9, 1, 0);
  dword_254F8E0 = 500;
  qword_254F8E8 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2546CE8, 500, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F8F0 = 501;
  qword_254F8F8 = (uint64_t)&unk_214D710;
  sub_1882224((unint64_t)&off_2546CE8, 501, 9, 1, 0);
  dword_254F900 = 1000;
  qword_254F908 = (uint64_t)&off_25456A8;
  sub_1882AC4((unint64_t)&off_25456A8, 1000, 11, 0, 0, (uint64_t)&off_25456A8);
  dword_254F910 = 1001;
  qword_254F918 = (uint64_t)&off_253D158;
  sub_1882AC4((unint64_t)&off_2545E40, 1001, 11, 1, 0, (uint64_t)&off_253D158);
  dword_254F920 = 201;
  qword_254F928 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2545840, 201, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F930 = 202;
  qword_254F938 = (uint64_t)&unk_214D728;
  sub_1882224((unint64_t)&off_2545840, 202, 12, 0, 0);
  dword_254F940 = 203;
  byte_254F944 = 0;
  sub_1882224((unint64_t)&off_2545840, 203, 8, 0, 0);
  dword_254F948 = 1001;
  qword_254F950 = (uint64_t)&off_253D180;
  sub_1882AC4((unint64_t)&off_2546098, 1001, 11, 1, 0, (uint64_t)&off_253D180);
  dword_254F958 = 1002;
  qword_254F960 = (uint64_t)&off_25374C0;
  sub_1882AC4((unint64_t)&off_2546098, 1002, 11, 0, 0, (uint64_t)&off_25374C0);
  dword_254F968 = 1003;
  qword_254F970 = (uint64_t)&off_2537C08;
  sub_1882AC4((unint64_t)&off_2546098, 1003, 11, 1, 0, (uint64_t)&off_2537C08);
  dword_254F978 = 1001;
  qword_254F980 = (uint64_t)&off_253D1A8;
  sub_1882AC4((unint64_t)&off_2545640, 1001, 11, 1, 0, (uint64_t)&off_253D1A8);
  dword_254F988 = 1000;
  qword_254F990 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2547720, 1000, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F998 = 1001;
  qword_254F9A0 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2547720, 1001, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F9A8 = 1001;
  qword_254F9B0 = (uint64_t)&off_253D1D0;
  sub_1882AC4((unint64_t)&off_2533178, 1001, 11, 0, 0, (uint64_t)&off_253D1D0);
  dword_254F9B8 = 201;
  qword_254F9C0 = (uint64_t)&off_253D278;
  sub_1882AC4((unint64_t)&off_25452D0, 201, 11, 1, 0, (uint64_t)&off_253D278);
  qword_254F9C8 = 202;
  sub_18829C0((unint64_t)&off_25452D0, 202, 14, 0, 0, (uint64_t)sub_1535A4C);
  dword_254F9D0 = 1001;
  qword_254F9D8 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2546640, 1001, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254F9E0 = 1002;
  qword_254F9E8 = (uint64_t)&unk_214D740;
  sub_1882224((unint64_t)&off_2546640, 1002, 9, 0, 0);
  dword_254F9F0 = 1003;
  qword_254F9F8 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2546640, 1003, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FA00 = 1004;
  qword_254FA08 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2546640, 1004, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FA10 = 1005;
  byte_254FA14 = 0;
  sub_1882224((unint64_t)&off_2546640, 1005, 8, 0, 0);
  dword_254FA18 = 201;
  qword_254FA20 = (uint64_t)&unk_214D758;
  sub_1882224((unint64_t)&off_2544AB0, 201, 12, 0, 0);
  dword_254FA28 = 202;
  qword_254FA30 = (uint64_t)&off_2537B70;
  sub_1882AC4((unint64_t)&off_2544AB0, 202, 11, 1, 0, (uint64_t)&off_2537B70);
  dword_254FA38 = 203;
  byte_254FA3C = 0;
  sub_1882224((unint64_t)&off_2544AB0, 203, 8, 0, 0);
  dword_254FA40 = 204;
  qword_254FA48 = (uint64_t)&off_2537B70;
  sub_1882AC4((unint64_t)&off_2544AB0, 204, 11, 1, 0, (uint64_t)&off_2537B70);
  dword_254FA50 = 205;
  qword_254FA58 = 0;
  sub_1882224((unint64_t)&off_2544AB0, 205, 4, 0, 0);
  dword_254FA60 = 206;
  qword_254FA68 = (uint64_t)&off_2537B70;
  sub_1882AC4((unint64_t)&off_2544AB0, 206, 11, 1, 0, (uint64_t)&off_2537B70);
  dword_254FA70 = 201;
  qword_254FA78 = (uint64_t)&off_253D2B0;
  sub_1882AC4((unint64_t)&off_2544B60, 201, 11, 1, 0, (uint64_t)&off_253D2B0);
  dword_254FA80 = 201;
  byte_254FA84 = 0;
  sub_1882224((unint64_t)&off_2545760, 201, 8, 0, 0);
  dword_254FA88 = 202;
  qword_254FA90 = (uint64_t)&unk_214D770;
  sub_1882224((unint64_t)&off_2545760, 202, 12, 0, 0);
  dword_254FA98 = 203;
  byte_254FA9C = 0;
  sub_1882224((unint64_t)&off_2545760, 203, 8, 0, 0);
  dword_254FAA0 = 201;
  byte_254FAA4 = 0;
  sub_1882224((unint64_t)&off_2545A18, 201, 8, 0, 0);
  dword_254FAA8 = 202;
  qword_254FAB0 = (uint64_t)&unk_214D788;
  sub_1882224((unint64_t)&off_2545A18, 202, 9, 0, 0);
  dword_254FAB8 = 1001;
  byte_254FABC = 0;
  sub_1882224((unint64_t)&off_2546190, 1001, 8, 0, 0);
  *(void *)&dword_254FAC0 = 1002;
  sub_1882224((unint64_t)&off_2546190, 1002, 2, 0, 0);
  qword_254FAC8 = 1003;
  sub_1882224((unint64_t)&off_2546190, 1003, 13, 0, 0);
  dword_254FAD0 = 1004;
  qword_254FAD8 = (uint64_t)&unk_214D7A0;
  sub_1882224((unint64_t)&off_2546190, 1004, 9, 1, 0);
  qword_254FAE0 = 1005;
  sub_1882224((unint64_t)&off_2546190, 1005, 5, 0, 0);
  dword_254FAE8 = 1006;
  byte_254FAEC = 0;
  sub_1882224((unint64_t)&off_2546190, 1006, 8, 0, 0);
  dword_254FAF0 = 1007;
  qword_254FAF8 = (uint64_t)&off_253D2D8;
  sub_1882AC4((unint64_t)&off_2546190, 1007, 11, 1, 0, (uint64_t)&off_253D2D8);
  dword_254FB00 = 1008;
  byte_254FB04 = 0;
  sub_1882224((unint64_t)&off_2546190, 1008, 8, 0, 0);
  dword_254FB08 = 1009;
  qword_254FB10 = (uint64_t)&off_253D2F8;
  sub_1882AC4((unint64_t)&off_2546190, 1009, 11, 1, 0, (uint64_t)&off_253D2F8);
  dword_254FB18 = 1001;
  byte_254FB1C = 0;
  sub_1882224((unint64_t)&off_2546208, 1001, 8, 0, 0);
  dword_254FB20 = 1002;
  qword_254FB28 = (uint64_t)&unk_214D7B8;
  sub_1882224((unint64_t)&off_2546208, 1002, 9, 0, 0);
  dword_254FB30 = 700;
  byte_254FB34 = 0;
  sub_1882224((unint64_t)&off_2546DD0, 700, 8, 0, 0);
  dword_254FB38 = 701;
  qword_254FB40 = (uint64_t)&unk_214D7D0;
  sub_1882224((unint64_t)&off_2546DD0, 701, 9, 0, 0);
  dword_254FB48 = 2000;
  byte_254FB4C = 0;
  sub_1882224((unint64_t)&off_254CA18, 2000, 8, 0, 0);
  dword_254FB50 = 2001;
  qword_254FB58 = (uint64_t)&off_253A038;
  sub_1882AC4((unint64_t)&off_254CA18, 2001, 11, 0, 0, (uint64_t)&off_253A038);
  dword_254FB60 = 2002;
  qword_254FB68 = (uint64_t)&off_253D378;
  sub_1882AC4((unint64_t)&off_254CA18, 2002, 11, 0, 0, (uint64_t)&off_253D378);
  dword_254FB70 = 2003;
  byte_254FB74 = 0;
  sub_1882224((unint64_t)&off_254CA18, 2003, 8, 0, 0);
  dword_254FB78 = 2000;
  qword_254FB80 = (uint64_t)&off_253D3F8;
  sub_1882AC4((unint64_t)&off_254CB28, 2000, 11, 1, 0, (uint64_t)&off_253D3F8);
  dword_254FB88 = 2001;
  qword_254FB90 = (uint64_t)&off_253D428;
  sub_1882AC4((unint64_t)&off_254CB28, 2001, 11, 0, 0, (uint64_t)&off_253D428);
  dword_254FB98 = 2002;
  qword_254FBA0 = (uint64_t)&off_253D720;
  sub_1882AC4((unint64_t)&off_254CB28, 2002, 11, 0, 0, (uint64_t)&off_253D720);
  dword_254FBA8 = 1000;
  qword_254FBB0 = (uint64_t)&off_2537E90;
  sub_1882AC4((unint64_t)&off_2548FF0, 1000, 11, 1, 0, (uint64_t)&off_2537E90);
  dword_254FBB8 = 1002;
  qword_254FBC0 = 0;
  sub_1882224((unint64_t)&off_2547798, 1002, 4, 0, 0);
  dword_254FBC8 = 1003;
  qword_254FBD0 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2547798, 1003, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FBD8 = 1004;
  qword_254FBE0 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2547798, 1004, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FBE8 = 1005;
  qword_254FBF0 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2547798, 1005, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FBF8 = 1007;
  qword_254FC00 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2547798, 1007, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FC08 = 1008;
  qword_254FC10 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2547798, 1008, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FC18 = 1009;
  qword_254FC20 = (uint64_t)&unk_214D7E8;
  sub_1882224((unint64_t)&off_2547798, 1009, 9, 0, 0);
  dword_254FC28 = 1010;
  byte_254FC2C = 0;
  sub_1882224((unint64_t)&off_2547798, 1010, 8, 0, 0);
  dword_254FC30 = 1011;
  qword_254FC38 = (uint64_t)&off_253D510;
  sub_1882AC4((unint64_t)&off_2547798, 1011, 11, 0, 0, (uint64_t)&off_253D510);
  dword_254FC40 = 1012;
  qword_254FC48 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2547798, 1012, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FC50 = 1013;
  qword_254FC58 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2547798, 1013, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FC60 = 1014;
  qword_254FC68 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2547798, 1014, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FC70 = 1015;
  qword_254FC78 = (uint64_t)&unk_214D800;
  sub_1882224((unint64_t)&off_2547798, 1015, 9, 1, 0);
  dword_254FC80 = 1001;
  qword_254FC88 = (uint64_t)&off_253D458;
  sub_1882AC4((unint64_t)&off_25479A8, 1001, 11, 0, 0, (uint64_t)&off_253D458);
  dword_254FC90 = 1001;
  qword_254FC98 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2549038, 1001, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FCA0 = 1002;
  qword_254FCA8 = (uint64_t)&off_253D4E0;
  sub_1882AC4((unint64_t)&off_2549038, 1002, 11, 1, 0, (uint64_t)&off_253D4E0);
  dword_254FCB0 = 1001;
  qword_254FCB8 = (uint64_t)&off_253D568;
  sub_1882AC4((unint64_t)&off_2547B18, 1001, 11, 1, 0, (uint64_t)&off_253D568);
  dword_254FCC0 = 1000;
  qword_254FCC8 = (uint64_t)&off_25389E0;
  sub_1882AC4((unint64_t)&off_2546768, 1000, 11, 1, 0, (uint64_t)&off_25389E0);
  dword_254FCD0 = 1000;
  qword_254FCD8 = 0;
  sub_1882224((unint64_t)&off_2530808, 1000, 4, 1, 0);
  dword_254FCE0 = 1000;
  qword_254FCE8 = (uint64_t)&unk_214D818;
  sub_1882224((unint64_t)&off_2545C80, 1000, 9, 1, 0);
  dword_254FCF0 = 1000;
  qword_254FCF8 = 0;
  sub_1882224((unint64_t)&off_2548398, 1000, 4, 1, 0);
  dword_254FD00 = 1001;
  qword_254FD08 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2548398, 1001, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FD10 = 1002;
  qword_254FD18 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2548398, 1002, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FD20 = 1000;
  qword_254FD28 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2547BF8, 1000, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FD30 = 1001;
  qword_254FD38 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2547BF8, 1001, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FD40 = 1003;
  qword_254FD48 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_2547BF8, 1003, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FD50 = 1004;
  byte_254FD54 = 0;
  sub_1882224((unint64_t)&off_2547BF8, 1004, 8, 0, 0);
  dword_254FD58 = 1001;
  qword_254FD60 = 0;
  sub_1882224((unint64_t)&off_2548048, 1001, 4, 1, 0);
  dword_254FD68 = 1002;
  qword_254FD70 = (uint64_t)&off_253D5B8;
  sub_1882AC4((unint64_t)&off_2548048, 1002, 11, 1, 0, (uint64_t)&off_253D5B8);
  dword_254FD78 = 1000;
  qword_254FD80 = (uint64_t)&unk_214D830;
  sub_1882224((unint64_t)&off_2547B98, 1000, 9, 0, 0);
  dword_254FD88 = 1001;
  qword_254FD90 = 0;
  sub_1882224((unint64_t)&off_2547B98, 1001, 4, 0, 0);
  dword_254FD98 = 1000;
  qword_254FDA0 = (uint64_t)&unk_214D848;
  sub_1882224((unint64_t)&off_2548290, 1000, 9, 0, 0);
  dword_254FDA8 = 1001;
  qword_254FDB0 = 0;
  sub_1882224((unint64_t)&off_2548290, 1001, 4, 1, 0);
  dword_254FDB8 = 1000;
  qword_254FDC0 = (uint64_t)&off_253D778;
  sub_1882AC4((unint64_t)&off_25495F8, 1000, 11, 0, 0, (uint64_t)&off_253D778);
  dword_254FDC8 = 1001;
  qword_254FDD0 = (uint64_t)&off_253D5E8;
  sub_1882AC4((unint64_t)&off_2545F00, 1001, 11, 1, 0, (uint64_t)&off_253D5E8);
  dword_254FDD8 = 200;
  qword_254FDE0 = (uint64_t)&off_2538850;
  sub_1882AC4((unint64_t)&off_25448E8, 200, 11, 0, 0, (uint64_t)&off_2538850);
  dword_254FDE8 = 1000;
  byte_254FDEC = 0;
  sub_1882224((unint64_t)&off_25455D0, 1000, 8, 0, 0);
  dword_254FDF0 = 1001;
  qword_254FDF8 = (uint64_t)&off_2537C38;
  sub_1882AC4((unint64_t)&off_25455D0, 1001, 11, 1, 0, (uint64_t)&off_2537C38);
  qword_254FE00 = 1000;
  sub_18829C0((unint64_t)&off_2548830, 1000, 14, 0, 0, (uint64_t)sub_13F4AA8);
  dword_254FE08 = 1000;
  qword_254FE10 = (uint64_t)&off_254DAB8;
  sub_1882AC4((unint64_t)&off_254D750, 1000, 11, 0, 0, (uint64_t)&off_254DAB8);
  dword_254FE18 = 1000;
  qword_254FE20 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_254DAB8, 1000, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FE28 = 1001;
  qword_254FE30 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_254DAB8, 1001, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FE38 = 1002;
  qword_254FE40 = (uint64_t)&off_253F2A0;
  sub_1882AC4((unint64_t)&off_254DAB8, 1002, 11, 1, 0, (uint64_t)&off_253F2A0);
  dword_254FE48 = 1001;
  qword_254FE50 = (uint64_t)&off_253D640;
  sub_1882AC4((unint64_t)&off_254DB00, 1001, 11, 1, 0, (uint64_t)&off_253D640);
  dword_254FE58 = 1002;
  qword_254FE60 = (uint64_t)&off_25373B0;
  sub_1882AC4((unint64_t)&off_254DB00, 1002, 11, 1, 0, (uint64_t)&off_25373B0);
  dword_254FE68 = 1000;
  byte_254FE6C = 0;
  sub_1882224((unint64_t)&off_254D6C8, 1000, 8, 0, 0);
  dword_254FE70 = 1001;
  qword_254FE78 = (uint64_t)&off_254DAB8;
  sub_1882AC4((unint64_t)&off_254D6C8, 1001, 11, 0, 0, (uint64_t)&off_254DAB8);
  dword_254FE80 = 200;
  qword_254FE88 = 0;

  sub_1882224((unint64_t)&off_2549718, 200, 4, 0, 0);
}

uint64_t sub_154DD50()
{
  qword_260D830 = (uint64_t)"TRANSIT_POI_HALLTRANSIT_POI_LINETRANSIT_POI_STATIONTRANSIT_POI_STOPTRANSIT_POI_UNKNOWN";
  *(void *)algn_260D838 = 16;
  dword_260D840 = 2;
  qword_260D848 = (uint64_t)"TRANSIT_POI_LINETRANSIT_POI_STATIONTRANSIT_POI_STOPTRANSIT_POI_UNKNOWN";
  unk_260D850 = 16;
  dword_260D858 = 4;
  qword_260D860 = (uint64_t)"TRANSIT_POI_STATIONTRANSIT_POI_STOPTRANSIT_POI_UNKNOWN";
  unk_260D868 = 19;
  dword_260D870 = 1;
  qword_260D878 = (uint64_t)"TRANSIT_POI_STOPTRANSIT_POI_UNKNOWN";
  unk_260D880 = 16;
  dword_260D888 = 3;
  qword_260D890 = (uint64_t)"TRANSIT_POI_UNKNOWN";
  unk_260D898 = 19;
  dword_260D8A0 = 0;
  qword_260D8A8 = (uint64_t)"ENTITY_HALLENTITY_LINEENTITY_MARKETENTITY_STATIONENTITY_STOPENTITY_SYSTEMENTITY_UNKNOWN";
  unk_260D8B0 = 11;
  dword_260D8B8 = 6;
  qword_260D8C0 = (uint64_t)"ENTITY_LINEENTITY_MARKETENTITY_STATIONENTITY_STOPENTITY_SYSTEMENTITY_UNKNOWN";
  unk_260D8C8 = 11;
  dword_260D8D0 = 3;
  qword_260D8D8 = (uint64_t)"ENTITY_MARKETENTITY_STATIONENTITY_STOPENTITY_SYSTEMENTITY_UNKNOWN";
  unk_260D8E0 = 13;
  dword_260D8E8 = 5;
  qword_260D8F0 = (uint64_t)"ENTITY_STATIONENTITY_STOPENTITY_SYSTEMENTITY_UNKNOWN";
  unk_260D8F8 = 14;
  dword_260D900 = 1;
  qword_260D908 = (uint64_t)"ENTITY_STOPENTITY_SYSTEMENTITY_UNKNOWN";
  unk_260D910 = 11;
  dword_260D918 = 2;
  qword_260D920 = (uint64_t)"ENTITY_SYSTEMENTITY_UNKNOWN";
  unk_260D928 = 13;
  dword_260D930 = 4;
  qword_260D938 = (uint64_t)"ENTITY_UNKNOWN";
  unk_260D940 = 14;
  dword_260D948 = 0;
  qword_260D950 = (uint64_t)"RELATIONSHIP_AUTHORIZEDRELATIONSHIP_OTHERRELATIONSHIP_OWNER";
  *(void *)algn_260D958 = 23;
  dword_260D960 = 2;
  uint64_t result = 18;
  qword_260D968 = (uint64_t)"RELATIONSHIP_OTHERRELATIONSHIP_OWNER";
  unk_260D970 = 18;
  dword_260D978 = 3;
  qword_260D980 = (uint64_t)"RELATIONSHIP_OWNER";
  unk_260D988 = 18;
  dword_260D990 = 1;
  qword_260D998 = (uint64_t)"PREFLIGHT_DATA_TYPE_ALLPREFLIGHT_DATA_TYPE_NONEPREFLIGHT_DATA_TYPE_PARTIAL";
  unk_260D9A0 = 23;
  dword_260D9A8 = 1;
  qword_260D9B0 = (uint64_t)"PREFLIGHT_DATA_TYPE_NONEPREFLIGHT_DATA_TYPE_PARTIAL";
  unk_260D9B8 = 24;
  dword_260D9C0 = 0;
  qword_260D9C8 = (uint64_t)"PREFLIGHT_DATA_TYPE_PARTIAL";
  unk_260D9D0 = 27;
  dword_260D9D8 = 2;
  qword_260D9E0 = (uint64_t)"DIRECTIVE_TYPE_HEARTBEATDIRECTIVE_TYPE_UNKNOWN";
  *(void *)algn_260D9E8 = 24;
  dword_260D9F0 = 1;
  qword_260D9F8 = (uint64_t)"DIRECTIVE_TYPE_UNKNOWN";
  unk_260DA00 = 22;
  dword_260DA08 = 0;
  qword_260DA10 = (uint64_t)"UPDATE_TYPE_POIUPDATE_TYPE_UNKNOWNUPDATE_TYPE_VOLATILE";
  *(void *)algn_260DA18 = 15;
  dword_260DA20 = 1;
  qword_260DA28 = (uint64_t)"UPDATE_TYPE_UNKNOWNUPDATE_TYPE_VOLATILE";
  unk_260DA30 = 19;
  dword_260DA38 = 0;
  qword_260DA40 = (uint64_t)"UPDATE_TYPE_VOLATILE";
  unk_260DA48 = 20;
  dword_260DA50 = 2;
  qword_260DA58 = (uint64_t)"ACCESS_POINTHALLLINESTATIONSTOPUNKNOWN";
  unk_260DA60 = 12;
  dword_260DA68 = 5;
  qword_260DA70 = (uint64_t)"HALLLINESTATIONSTOPUNKNOWN";
  unk_260DA78 = 4;
  dword_260DA80 = 2;
  qword_260DA88 = (uint64_t)"LINESTATIONSTOPUNKNOWN";
  unk_260DA90 = 4;
  dword_260DA98 = 4;
  qword_260DAA0 = (uint64_t)"STATIONSTOPUNKNOWN";
  unk_260DAA8 = 7;
  dword_260DAB0 = 3;
  qword_260DAB8 = (uint64_t)"STOPUNKNOWN";
  unk_260DAC0 = 4;
  dword_260DAC8 = 1;
  qword_260DAD0 = (uint64_t)"UNKNOWN";
  unk_260DAD8 = 7;
  dword_260DAE0 = 0;
  return result;
}

char *sub_154DF54(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_185443C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void *sub_154DFE4(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_154F5B8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_154E064(void *a1)
{
  sub_154DFE4(a1);

  operator delete();
}

uint64_t sub_154E09C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_154E6D0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_154E118(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      std::string::size_type v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          std::string::size_type v19 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_154EA94(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = sub_154E2B8(a3, v16, v13);
          std::string::size_type v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      std::string::size_type v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_154E2B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_154E6F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_154E348(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = (char *)sub_154E864(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_154E48C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_154E980(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_154E53C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_154F6C4((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_154E60C()
{
  return 1;
}

void *sub_154E614@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Polygon");
}

void *sub_154E624(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_154E698(void *a1)
{
  sub_154E624(a1);

  operator delete();
}

uint64_t sub_154E6D0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_154E6F4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    goto LABEL_29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 17)
      {
        uint64_t v15 = *(void *)v7;
        int v14 = v7 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v15;
LABEL_23:
        uint64_t v18 = v14;
        goto LABEL_24;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 9)
    {
      uint64_t v16 = *(void *)v7;
      int v14 = v7 + 8;
      v5 |= 1u;
      *(void *)(a1 + 24) = v16;
      goto LABEL_23;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v18;
    }
    uint64_t v18 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v18) {
      goto LABEL_30;
    }
LABEL_24:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v18 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 16) |= v5;
  return v18;
}

_OWORD *sub_154E864(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)int v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 32);
    *(unsigned char *)int v4 = 17;
    *(void *)((char *)v4 + 1) = v8;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    return (_OWORD *)((char *)v4 + v14);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_154E980(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_154E9DC()
{
  return 1;
}

void *sub_154E9E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Pos2");
}

uint64_t sub_154E9F4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C06D0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_154EA94(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C0750;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_154EB10(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0xE) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

std::string *sub_154EB60(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_16;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_16:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_154EC40(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_154ECE0(uint64_t a1)
{
  sub_154EC40(a1);

  operator delete();
}

uint64_t sub_154ED18(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_25;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v27, (uint64_t)a3);
        goto LABEL_32;
      case 2u:
        if (v9 != 17) {
          goto LABEL_25;
        }
        uint64_t v17 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v17;
        goto LABEL_24;
      case 3u:
        if (v9 != 24) {
          goto LABEL_25;
        }
        uint64_t v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          *(void *)uint64_t v27 = sub_188C138((uint64_t)v8, (v21 - 128));
          if (!*(void *)v27) {
            goto LABEL_44;
          }
          unint64_t v19 = v25;
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_19:
          *(void *)uint64_t v27 = v18;
        }
        if (v19 > 1)
        {
          if (*v7) {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v19, v26);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v19;
        }
        goto LABEL_33;
      case 4u:
        if (v9 != 37) {
          goto LABEL_25;
        }
        int v22 = *(_DWORD *)v8;
        uint64_t v16 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 44) = v22;
LABEL_24:
        *(void *)uint64_t v27 = v16;
        goto LABEL_33;
      default:
LABEL_25:
        if (v9) {
          BOOL v23 = (v9 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v7)
          {
            unint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v27;
          }
          uint64_t v15 = sub_1885AC0(v9, v24, v8, a3);
LABEL_32:
          *(void *)uint64_t v27 = v15;
          if (!v15) {
            goto LABEL_44;
          }
LABEL_33:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_44:
        }
          *(void *)uint64_t v27 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v27;
    }
  }
}

unsigned char *sub_154EFA4(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  unsigned char *v4 = 17;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 4) != 0)
  {
LABEL_9:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(int *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_15:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v11 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 37;
    *(_DWORD *)(v4 + 1) = v11;
    v4 += 5;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_154F168(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0)
    {
      int v7 = *(_DWORD *)(a1 + 40);
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v7 >= 0) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = 11;
      }
      v2 += v9;
    }
    if ((v1 & 8) != 0) {
      uint64_t v3 = v2 + 5;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_154F248()
{
  return 1;
}

void *sub_154F250@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.dedicated_pathlet.DedicatedPathletMetaData");
}

void *sub_154F260(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C07D0;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_154F2E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_167B33C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_154F378(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_167B9D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_154F408()
{
}

uint64_t sub_154F45C(uint64_t a1, uint64_t a2)
{
  return sub_154E9F4(a2);
}

uint64_t sub_154F464(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_154F46C()
{
}

void *sub_154F4BC(uint64_t a1, uint64_t a2)
{
  return sub_154EA94(a2);
}

uint64_t sub_154F4C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154F4CC()
{
}

void *sub_154F528(uint64_t a1, uint64_t a2)
{
  return sub_154F260(a2);
}

uint64_t sub_154F530(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_154F538(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1854364();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_154F5B8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_154E624(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_154F638(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1854FE8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_154F6B4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_154F6B4(uint64_t a1, uint64_t a2)
{
}

std::string *sub_154F6C4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_154EA94(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1515C18(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_154F740(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_167B284();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_154F7C0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_167B7C0();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_154F840(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1694EB4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_154F8BC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1694F38(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_154F938(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_154F938(uint64_t a1, uint64_t a2)
{
}

void sub_154F948()
{
  dword_254FE90 = 200;
  qword_254FE98 = (uint64_t)&unk_214DCB0;
  sub_1882224((unint64_t)&off_254D5E8, 200, 9, 0, 0);
  dword_254FEA0 = 201;
  qword_254FEA8 = (uint64_t)&off_253D6C8;
  sub_1882AC4((unint64_t)&off_254D5E8, 201, 11, 1, 0, (uint64_t)&off_253D6C8);
  dword_254FEB0 = 200;
  qword_254FEB8 = (uint64_t)&unk_214DCC8;
  sub_1882224((unint64_t)&off_254D670, 200, 9, 1, 0);
  dword_254FEC0 = 201;
  qword_254FEC8 = (uint64_t)&off_253D698;

  sub_1882AC4((unint64_t)&off_254D670, 201, 11, 1, 0, (uint64_t)&off_253D698);
}

const char *sub_154FA50()
{
  qword_260DAE8 = (uint64_t)"DATACOPYREQUEST_PRIORITY_HIGHDATACOPYREQUEST_PRIORITY_NORMAL";
  unk_260DAF0 = 29;
  dword_260DAF8 = 1;
  qword_260DB00 = (uint64_t)"DATACOPYREQUEST_PRIORITY_NORMAL";
  unk_260DB08 = 31;
  dword_260DB10 = 0;
  qword_260DB18 = (uint64_t)"KITTYHAWK_STOREFRONTMUNIN_STOREFRONT";
  unk_260DB20 = 20;
  dword_260DB28 = 2;
  qword_260DB30 = (uint64_t)"MUNIN_STOREFRONT";
  unk_260DB38 = 16;
  dword_260DB40 = 1;
  qword_260DB48 = (uint64_t)"BAD_IMAGEBAD_STOREFRONTBASEMAP_STOREFRONTNOT_A_STOREFRONTOTHERPERMANENTLY_CLOSED_NOT_IN_DBPOI"
                           "_CONTAINMENTPOI_UNVERIFIABLEPOLICY_VIOLATION";
  unk_260DB50 = 9;
  dword_260DB58 = 2;
  qword_260DB60 = (uint64_t)"BAD_STOREFRONTBASEMAP_STOREFRONTNOT_A_STOREFRONTOTHERPERMANENTLY_CLOSED_NOT_IN_DBPOI_CONTAINMENTPOI_UNVERIFIABLEPOLICY_VIOLATION";
  unk_260DB68 = 14;
  dword_260DB70 = 1;
  qword_260DB78 = (uint64_t)"BASEMAP_STOREFRONTNOT_A_STOREFRONTOTHERPERMANENTLY_CLOSED_NOT_IN_DBPOI_CONTAINMENTPOI_UNVERIFIABLEPOLICY_VIOLATION";
  unk_260DB80 = 18;
  dword_260DB88 = 9;
  qword_260DB90 = (uint64_t)"NOT_A_STOREFRONTOTHERPERMANENTLY_CLOSED_NOT_IN_DBPOI_CONTAINMENTPOI_UNVERIFIABLEPOLICY_VIOLATION";
  unk_260DB98 = 16;
  dword_260DBA0 = 3;
  qword_260DBA8 = (uint64_t)"OTHERPERMANENTLY_CLOSED_NOT_IN_DBPOI_CONTAINMENTPOI_UNVERIFIABLEPOLICY_VIOLATION";
  unk_260DBB0 = 5;
  dword_260DBB8 = 7;
  qword_260DBC0 = (uint64_t)"PERMANENTLY_CLOSED_NOT_IN_DBPOI_CONTAINMENTPOI_UNVERIFIABLEPOLICY_VIOLATION";
  unk_260DBC8 = 28;
  dword_260DBD0 = 8;
  qword_260DBD8 = (uint64_t)"POI_CONTAINMENTPOI_UNVERIFIABLEPOLICY_VIOLATION";
  unk_260DBE0 = 15;
  dword_260DBE8 = 6;
  qword_260DBF0 = (uint64_t)"POI_UNVERIFIABLEPOLICY_VIOLATION";
  unk_260DBF8 = 16;
  dword_260DC00 = 5;
  qword_260DC08 = (uint64_t)"POLICY_VIOLATION";
  unk_260DC10 = 16;
  dword_260DC18 = 4;
  qword_260DC20 = (uint64_t)"CLOSEDFREE_TRAFFICHEAVY_TRAFFICLONG_QUEUES_TRAFFICQUEUING_TRAFFICSLOW_TRAFFICSTATIONARY_TRAFFICUNKNOWN";
  *(void *)algn_260DC28 = 6;
  dword_260DC30 = 7;
  qword_260DC38 = (uint64_t)"FREE_TRAFFICHEAVY_TRAFFICLONG_QUEUES_TRAFFICQUEUING_TRAFFICSLOW_TRAFFICSTATIONARY_TRAFFICUNKNOWN";
  unk_260DC40 = 12;
  dword_260DC48 = 2;
  qword_260DC50 = (uint64_t)"HEAVY_TRAFFICLONG_QUEUES_TRAFFICQUEUING_TRAFFICSLOW_TRAFFICSTATIONARY_TRAFFICUNKNOWN";
  unk_260DC58 = 13;
  dword_260DC60 = 3;
  qword_260DC68 = (uint64_t)"LONG_QUEUES_TRAFFICQUEUING_TRAFFICSLOW_TRAFFICSTATIONARY_TRAFFICUNKNOWN";
  unk_260DC70 = 19;
  dword_260DC78 = 1;
  qword_260DC80 = (uint64_t)"QUEUING_TRAFFICSLOW_TRAFFICSTATIONARY_TRAFFICUNKNOWN";
  unk_260DC88 = 15;
  dword_260DC90 = 5;
  qword_260DC98 = (uint64_t)"SLOW_TRAFFICSTATIONARY_TRAFFICUNKNOWN";
  unk_260DCA0 = 12;
  dword_260DCA8 = 4;
  qword_260DCB0 = (uint64_t)"STATIONARY_TRAFFICUNKNOWN";
  unk_260DCB8 = 18;
  dword_260DCC0 = 6;
  qword_260DCC8 = (uint64_t)"UNKNOWN";
  unk_260DCD0 = 7;
  dword_260DCD8 = 8;
  qword_260DCE0 = (uint64_t)"HIGH_OCCUPANCY";
  *(void *)algn_260DCE8 = 14;
  dword_260DCF0 = 0;
  qword_260DCF8 = (uint64_t)"CREATION_TIME_MAP_MATCHEDCREATION_TIME_RT_LOCCREATION_TIME_UN_MAP_MATCHEDDISPATCHER_READDISPA"
                           "TCHER_WRITEMAP_MATCHER_READMAP_MATCHER_WRITEMODEL_RUNNER_READ";
  unk_260DD00 = 25;
  dword_260DD08 = 7;
  qword_260DD10 = (uint64_t)"CREATION_TIME_RT_LOCCREATION_TIME_UN_MAP_MATCHEDDISPATCHER_READDISPATCHER_WRITEMAP_MATCHER_READMAP_MATCHER_WRITEMODEL_RUNNER_READ";
  unk_260DD18 = 20;
  dword_260DD20 = 1;
  qword_260DD28 = (uint64_t)"CREATION_TIME_UN_MAP_MATCHEDDISPATCHER_READDISPATCHER_WRITEMAP_MATCHER_READMAP_MATCHER_WRITEMODEL_RUNNER_READ";
  unk_260DD30 = 28;
  dword_260DD38 = 4;
  qword_260DD40 = (uint64_t)"DISPATCHER_READDISPATCHER_WRITEMAP_MATCHER_READMAP_MATCHER_WRITEMODEL_RUNNER_READ";
  unk_260DD48 = 15;
  dword_260DD50 = 2;
  qword_260DD58 = (uint64_t)"DISPATCHER_WRITEMAP_MATCHER_READMAP_MATCHER_WRITEMODEL_RUNNER_READ";
  unk_260DD60 = 16;
  dword_260DD68 = 3;
  qword_260DD70 = (uint64_t)"MAP_MATCHER_READMAP_MATCHER_WRITEMODEL_RUNNER_READ";
  unk_260DD78 = 16;
  dword_260DD80 = 5;
  qword_260DD88 = (uint64_t)"MAP_MATCHER_WRITEMODEL_RUNNER_READ";
  unk_260DD90 = 17;
  dword_260DD98 = 6;
  qword_260DDA0 = (uint64_t)"MODEL_RUNNER_READ";
  unk_260DDA8 = 17;
  dword_260DDB0 = 8;
  qword_260DDB8 = (uint64_t)"DEC2022UNKNOWN";
  unk_260DDC0 = 7;
  dword_260DDC8 = 1;
  qword_260DDD0 = (uint64_t)"UNKNOWN";
  unk_260DDD8 = 7;
  dword_260DDE0 = 0;
  qword_260DDE8 = (uint64_t)"SOURCE_HISTORIC_TRAFFICSOURCE_LANE_CLOSURE_DETECTIONSOURCE_MANEUVER_PATHLET_BUILDSOURCE_MANEU"
                           "VER_PATHLET_GENERATIONSOURCE_NETWORK_BUILDSOURCE_SCHEDULER_BUILDSOURCE_UNKNOWN";
  unk_260DDF0 = 23;
  dword_260DDF8 = 3;
  qword_260DE00 = (uint64_t)"SOURCE_LANE_CLOSURE_DETECTIONSOURCE_MANEUVER_PATHLET_BUILDSOURCE_MANEUVER_PATHLET_GENERATIONSOURCE_NETWORK_BUILDSOURCE_SCHEDULER_BUILDSOURCE_UNKNOWN";
  unk_260DE08 = 29;
  dword_260DE10 = 4;
  qword_260DE18 = (uint64_t)"SOURCE_MANEUVER_PATHLET_BUILDSOURCE_MANEUVER_PATHLET_GENERATIONSOURCE_NETWORK_BUILDSOURCE_SCHEDULER_BUILDSOURCE_UNKNOWN";
  unk_260DE20 = 29;
  dword_260DE28 = 6;
  qword_260DE30 = (uint64_t)"SOURCE_MANEUVER_PATHLET_GENERATIONSOURCE_NETWORK_BUILDSOURCE_SCHEDULER_BUILDSOURCE_UNKNOWN";
  unk_260DE38 = 34;
  dword_260DE40 = 5;
  qword_260DE48 = (uint64_t)"SOURCE_NETWORK_BUILDSOURCE_SCHEDULER_BUILDSOURCE_UNKNOWN";
  unk_260DE50 = 20;
  dword_260DE58 = 1;
  qword_260DE60 = (uint64_t)"SOURCE_SCHEDULER_BUILDSOURCE_UNKNOWN";
  unk_260DE68 = 22;
  dword_260DE70 = 2;
  qword_260DE78 = (uint64_t)"SOURCE_UNKNOWN";
  unk_260DE80 = 14;
  dword_260DE88 = 0;
  qword_260DE90 = (uint64_t)"OUTCOME_FAILUREOUTCOME_SUCCESSOUTCOME_UNKNOWN";
  *(void *)algn_260DE98 = 15;
  dword_260DEA0 = 2;
  qword_260DEA8 = (uint64_t)"OUTCOME_SUCCESSOUTCOME_UNKNOWN";
  unk_260DEB0 = 15;
  dword_260DEB8 = 1;
  qword_260DEC0 = (uint64_t)"OUTCOME_UNKNOWN";
  unk_260DEC8 = 15;
  dword_260DED0 = 0;
  qword_260DED8 = (uint64_t)"AREAIGNOREIGNORE_OPENLRIGNORE_VENDORIDREPLACE_GEOIDSREPLACE_GEOIDS_BY_VENDORIDREPLACE_GEOIDS_"
                           "REALREPLACE_OPENLRTEST_VENDORUNKNOWN_FIX_TYPE";
  unk_260DEE0 = 4;
  dword_260DEE8 = 5;
  qword_260DEF0 = (uint64_t)"IGNOREIGNORE_OPENLRIGNORE_VENDORIDREPLACE_GEOIDSREPLACE_GEOIDS_BY_VENDORIDREPLACE_GEOIDS_REALREPLACE_OPENLRTEST_VENDORUNKNOWN_FIX_TYPE";
  unk_260DEF8 = 6;
  dword_260DF00 = 6;
  qword_260DF08 = (uint64_t)"IGNORE_OPENLRIGNORE_VENDORIDREPLACE_GEOIDSREPLACE_GEOIDS_BY_VENDORIDREPLACE_GEOIDS_REALREPLACE_OPENLRTEST_VENDORUNKNOWN_FIX_TYPE";
  unk_260DF10 = 13;
  dword_260DF18 = 8;
  qword_260DF20 = (uint64_t)"IGNORE_VENDORIDREPLACE_GEOIDSREPLACE_GEOIDS_BY_VENDORIDREPLACE_GEOIDS_REALREPLACE_OPENLRTEST_VENDORUNKNOWN_FIX_TYPE";
  unk_260DF28 = 15;
  dword_260DF30 = 9;
  qword_260DF38 = (uint64_t)"REPLACE_GEOIDSREPLACE_GEOIDS_BY_VENDORIDREPLACE_GEOIDS_REALREPLACE_OPENLRTEST_VENDORUNKNOWN_FIX_TYPE";
  unk_260DF40 = 14;
  dword_260DF48 = 1;
  qword_260DF50 = (uint64_t)"REPLACE_GEOIDS_BY_VENDORIDREPLACE_GEOIDS_REALREPLACE_OPENLRTEST_VENDORUNKNOWN_FIX_TYPE";
  unk_260DF58 = 26;
  dword_260DF60 = 4;
  qword_260DF68 = (uint64_t)"REPLACE_GEOIDS_REALREPLACE_OPENLRTEST_VENDORUNKNOWN_FIX_TYPE";
  unk_260DF70 = 19;
  dword_260DF78 = 3;
  qword_260DF80 = (uint64_t)"REPLACE_OPENLRTEST_VENDORUNKNOWN_FIX_TYPE";
  unk_260DF88 = 14;
  dword_260DF90 = 2;
  qword_260DF98 = (uint64_t)"TEST_VENDORUNKNOWN_FIX_TYPE";
  unk_260DFA0 = 11;
  dword_260DFA8 = 7;
  qword_260DFB0 = (uint64_t)"UNKNOWN_FIX_TYPE";
  unk_260DFB8 = 16;
  dword_260DFC0 = 0;
  uint64_t result = "ESCALATIONFAILUREMAINTENANCENATURAL_DISASTERSUSPECTUNKNOWN_FIX_REASON";
  qword_260DFC8 = (uint64_t)"ESCALATIONFAILUREMAINTENANCENATURAL_DISASTERSUSPECTUNKNOWN_FIX_REASON";
  unk_260DFD0 = 10;
  dword_260DFD8 = 3;
  qword_260DFE0 = (uint64_t)"FAILUREMAINTENANCENATURAL_DISASTERSUSPECTUNKNOWN_FIX_REASON";
  unk_260DFE8 = 7;
  dword_260DFF0 = 1;
  qword_260DFF8 = (uint64_t)"MAINTENANCENATURAL_DISASTERSUSPECTUNKNOWN_FIX_REASON";
  unk_260E000 = 11;
  dword_260E008 = 4;
  qword_260E010 = (uint64_t)"NATURAL_DISASTERSUSPECTUNKNOWN_FIX_REASON";
  unk_260E018 = 16;
  dword_260E020 = 5;
  qword_260E028 = (uint64_t)"SUSPECTUNKNOWN_FIX_REASON";
  unk_260E030 = 7;
  dword_260E038 = 2;
  qword_260E040 = (uint64_t)"UNKNOWN_FIX_REASON";
  unk_260E048 = 18;
  dword_260E050 = 0;
  return result;
}

uint64_t sub_154FE10(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_154FEC8(uint64_t a1)
{
  sub_154FE10(a1);

  operator delete();
}

uint64_t sub_154FF00(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_154FF7C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)int v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      unint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      unint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)int v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)int v20 = 0;
  return *(void *)v20;
}

char *sub_1550124(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1550210(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_15502EC()
{
  return 1;
}

void *sub_15502F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "dispatcher.DebugInfo");
}

void *sub_1550304(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_155253C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1550384(void *a1)
{
  sub_1550304(a1);

  operator delete();
}

uint64_t sub_15503BC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_154FF00(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_1550438(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      unint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          unint64_t v19 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1550944(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_15505D8(a3, v16, v13);
          unint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      unint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_15505D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_154FF7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1550668(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1550124(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_15507AC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1550210(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_155085C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_15525BC((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_155092C()
{
  return 1;
}

void *sub_1550934@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "dispatcher.DebugLog");
}

void *sub_1550944(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C0898;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_15509C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24C0918;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1550A68(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16EB93C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1550AF8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253D750)
  {
    if (*(void *)(a1 + 24))
    {
      sub_16EB900();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 32);
    if (v5)
    {
      sub_1417034(v5);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1550BC8(uint64_t a1)
{
  sub_1550AF8(a1);

  operator delete();
}

uint64_t sub_1550C00(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_16BF128(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_1417070(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1550C70(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v19 + 2;
      }
    }
    unint64_t v19 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_144A6DC((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      int v7 = v19;
    }
    unint64_t v14 = (char *)sub_1415788(a3, (uint64_t)v15, (unsigned __int8 *)v7);
LABEL_31:
    unint64_t v19 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void **)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_1788710((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      int v7 = v19;
    }
    unint64_t v14 = (char *)sub_1550A68(a3, (uint64_t)v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v19;
    }
    unint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v19;
  }
  return 0;
}

char *sub_1550E30(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_16EBC08(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_1417780(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1550FB0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_16EBD94(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1417BAC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1551088(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void **)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_1788710((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2545A18;
      }
      sub_16BF9C4((uint64_t)v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(std::string **)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = (std::string *)sub_144A6DC((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        BOOL v12 = &off_2537CC0;
      }
      sub_1417E18(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_155118C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_16BFB20(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_15511B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.enrichment.PlacecardCreativeAssetObjectPhoto");
}

uint64_t sub_15511C8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253D778)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_1422888(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1552638((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_155128C(uint64_t a1)
{
  sub_15511C8(a1);

  operator delete();
}

uint64_t sub_15512C4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1550C00(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_14228C4(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1551354(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    BOOL v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    unint64_t v15 = *(void **)(a1 + 48);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      unint64_t v15 = sub_144B190((uint64_t)v16);
      *(void *)(a1 + 48) = v15;
      uint64_t v7 = v23;
    }
    unint64_t v14 = (char *)sub_141F788(a3, (uint64_t)v15, (unsigned __int8 *)v7);
LABEL_26:
    BOOL v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_27:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v17 = v7 - 1;
    while (1)
    {
      uint64_t v18 = (unsigned __int8 *)(v17 + 1);
      BOOL v23 = v17 + 1;
      unint64_t v19 = *(_DWORD **)(a1 + 40);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 32) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        int v22 = sub_1552064(*(void *)(a1 + 24));
        uint64_t v21 = sub_188CDC8(a1 + 24, (uint64_t)v22);
        uint64_t v18 = (unsigned __int8 *)v23;
      }
      uint64_t v17 = sub_155155C(a3, v21, v18);
      BOOL v23 = v17;
      if (!v17) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 10) {
        goto LABEL_27;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    unint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_155155C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1550C70(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15515EC(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1550E30(v8, (unint64_t)v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 48);
    *__dst = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      uint64_t v13 = __dst + 2;
    }
    __dst = sub_1422F74(v11, v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_1551798(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1550FB0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_1423360(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_155187C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_15526B8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    unsigned int v10 = *(std::string **)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      unsigned int v10 = (std::string *)sub_144B190((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_25380C8;
    }
    sub_14235D0(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_15519A0(uint64_t a1)
{
  return sub_15519A8(a1 + 24);
}

uint64_t sub_15519A8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_16BFB20(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_1551A18@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.enrichment.PlacecardCreativeAssetObject");
}

uint64_t sub_1551A28(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1551AD0(uint64_t a1)
{
  sub_1551A28(a1);

  operator delete();
}

uint64_t sub_1551B08(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1551B8C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  uint64_t v6 = (uint64_t **)(a1 + 24);
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    unint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      unint64_t v24 = (uint64_t *)*v24;
    }
    unint64_t v25 = (std::string *)sub_1880F84((void *)(a1 + 48), v24);
    unint64_t v15 = (void *)sub_188C244(v25, *(char **)v26, (uint64_t)a3);
LABEL_35:
    *(void *)uint64_t v26 = v15;
    if (!v15) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 == 18)
  {
    unint64_t v16 = v8 - 1;
    while (1)
    {
      uint64_t v17 = (char *)(v16 + 1);
      *(void *)uint64_t v26 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
      }
      else
      {
        if (!*v6) {
          operator new();
        }
        void *v22 = v21;
        v22[1] = sub_3A6EDC;
        void *v21 = 0;
        v21[1] = 0;
        v21[2] = 0;
        uint64_t v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = *(char **)v26;
      }
      unint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
      *(void *)uint64_t v26 = v16;
      if (!v16) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v26;
    }
    unint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_41:
  *(void *)uint64_t v26 = 0;
  return *(void *)v26;
}

char *sub_1551DE0(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v10)
      {
        char *v4 = 18;
        v4[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = v4 + 2;
        memcpy(v11, v9, v10);
        uint64_t v4 = &v11[v10];
        goto LABEL_12;
      }
LABEL_14:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v9, v4);
LABEL_12:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    unint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    unint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_1551F6C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_155204C()
{
  return 1;
}

void *sub_1552054@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.enrichment.TreatmentInfo");
}

void *sub_1552064(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C0998;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_15520E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24C0A18;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_155217C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24C0A98;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_1552220(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17754BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15522B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17685B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_1552340()
{
}

void *sub_1552398(uint64_t a1, uint64_t a2)
{
  return sub_1550944(a2);
}

uint64_t sub_15523A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15523A8()
{
}

uint64_t sub_15523FC(uint64_t a1, uint64_t a2)
{
  return sub_15509C8(a2);
}

uint64_t sub_1552404(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_155240C()
{
}

void *sub_155245C(uint64_t a1, uint64_t a2)
{
  return sub_1552064(a2);
}

uint64_t sub_1552464(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_155246C()
{
}

void *sub_15524C0(uint64_t a1, uint64_t a2)
{
  return sub_15520E0(a2);
}

uint64_t sub_15524C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15524D0()
{
}

void *sub_155252C(uint64_t a1, uint64_t a2)
{
  return sub_155217C(a2);
}

uint64_t sub_1552534(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_155253C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_154FE10(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_15525BC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1550944(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1552638(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1550AF8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_15526B8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1552064(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1552734(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1552734(uint64_t a1, uint64_t a2)
{
}

void sub_1552744()
{
  dword_254FED0 = 1501;
  qword_254FED8 = 0;
  sub_1882224((unint64_t)&off_25486C0, 1501, 4, 0, 0);
  dword_254FEE0 = 1502;
  qword_254FEE8 = 0;

  sub_1882224((unint64_t)&off_25486C0, 1502, 4, 0, 0);
}

const char *sub_15527CC()
{
  qword_260E058 = (uint64_t)"AirportPressureAppleSensorPressureHarvestedPressureModelledPressureThirdPartyPressure";
  unk_260E060 = 15;
  dword_260E068 = 1;
  qword_260E070 = (uint64_t)"AppleSensorPressureHarvestedPressureModelledPressureThirdPartyPressure";
  unk_260E078 = 19;
  dword_260E080 = 2;
  qword_260E088 = (uint64_t)"HarvestedPressureModelledPressureThirdPartyPressure";
  unk_260E090 = 17;
  dword_260E098 = 0;
  qword_260E0A0 = (uint64_t)"ModelledPressureThirdPartyPressure";
  unk_260E0A8 = 16;
  dword_260E0B0 = 10;
  qword_260E0B8 = (uint64_t)"ThirdPartyPressure";
  unk_260E0C0 = 18;
  dword_260E0C8 = 3;
  qword_260E0D0 = (uint64_t)"ReliabilityHighReliabilityProtobufDefaultReliablityLowReliablityMedium";
  *(void *)algn_260E0D8 = 15;
  dword_260E0E0 = 3;
  qword_260E0E8 = (uint64_t)"ReliabilityProtobufDefaultReliablityLowReliablityMedium";
  unk_260E0F0 = 26;
  dword_260E0F8 = 0;
  qword_260E100 = (uint64_t)"ReliablityLowReliablityMedium";
  unk_260E108 = 13;
  dword_260E110 = 1;
  qword_260E118 = (uint64_t)"ReliablityMedium";
  unk_260E120 = 16;
  dword_260E128 = 2;
  qword_260E130 = (uint64_t)"PRESSURE_SOURCE_AIRPORT_ALTIMETERPRESSURE_SOURCE_APPLE_SENSORPRESSURE_SOURCE_PROTOBUF_DEFAULT"
                           "PRESSURE_SOURCE_VENDOR_MODELPRESSURE_SOURCE_VENDOR_SENSOR";
  *(void *)algn_260E138 = 33;
  dword_260E140 = 5;
  qword_260E148 = (uint64_t)"PRESSURE_SOURCE_APPLE_SENSORPRESSURE_SOURCE_PROTOBUF_DEFAULTPRESSURE_SOURCE_VENDOR_MODELPRESSURE_SOURCE_VENDOR_SENSOR";
  unk_260E150 = 28;
  dword_260E158 = 4;
  qword_260E160 = (uint64_t)"PRESSURE_SOURCE_PROTOBUF_DEFAULTPRESSURE_SOURCE_VENDOR_MODELPRESSURE_SOURCE_VENDOR_SENSOR";
  unk_260E168 = 32;
  dword_260E170 = 0;
  qword_260E178 = (uint64_t)"PRESSURE_SOURCE_VENDOR_MODELPRESSURE_SOURCE_VENDOR_SENSOR";
  unk_260E180 = 28;
  dword_260E188 = 1;
  qword_260E190 = (uint64_t)"PRESSURE_SOURCE_VENDOR_SENSOR";
  unk_260E198 = 29;
  dword_260E1A0 = 3;
  qword_260E1A8 = (uint64_t)"CDMACDMA_UBER_1CDMA_UBER_2CDMA_UBER_3CELLCELL_UBER_1LTELTE_UBER_1NR5GNR5G_UBER_1SCDMASCDMA_UBER_1WIFI";
  unk_260E1B0 = 4;
  dword_260E1B8 = 4;
  qword_260E1C0 = (uint64_t)"CDMA_UBER_1CDMA_UBER_2CDMA_UBER_3CELLCELL_UBER_1LTELTE_UBER_1NR5GNR5G_UBER_1SCDMASCDMA_UBER_1WIFI";
  unk_260E1C8 = 11;
  dword_260E1D0 = 6;
  qword_260E1D8 = (uint64_t)"CDMA_UBER_2CDMA_UBER_3CELLCELL_UBER_1LTELTE_UBER_1NR5GNR5G_UBER_1SCDMASCDMA_UBER_1WIFI";
  unk_260E1E0 = 11;
  dword_260E1E8 = 7;
  qword_260E1F0 = (uint64_t)"CDMA_UBER_3CELLCELL_UBER_1LTELTE_UBER_1NR5GNR5G_UBER_1SCDMASCDMA_UBER_1WIFI";
  unk_260E1F8 = 11;
  dword_260E200 = 8;
  qword_260E208 = (uint64_t)"CELLCELL_UBER_1LTELTE_UBER_1NR5GNR5G_UBER_1SCDMASCDMA_UBER_1WIFI";
  unk_260E210 = 4;
  dword_260E218 = 2;
  qword_260E220 = (uint64_t)"CELL_UBER_1LTELTE_UBER_1NR5GNR5G_UBER_1SCDMASCDMA_UBER_1WIFI";
  unk_260E228 = 11;
  dword_260E230 = 11;
  qword_260E238 = (uint64_t)"LTELTE_UBER_1NR5GNR5G_UBER_1SCDMASCDMA_UBER_1WIFI";
  unk_260E240 = 3;
  dword_260E248 = 3;
  qword_260E250 = (uint64_t)"LTE_UBER_1NR5GNR5G_UBER_1SCDMASCDMA_UBER_1WIFI";
  unk_260E258 = 10;
  dword_260E260 = 10;
  qword_260E268 = (uint64_t)"NR5GNR5G_UBER_1SCDMASCDMA_UBER_1WIFI";
  unk_260E270 = 4;
  dword_260E278 = 12;
  qword_260E280 = (uint64_t)"NR5G_UBER_1SCDMASCDMA_UBER_1WIFI";
  unk_260E288 = 11;
  dword_260E290 = 13;
  qword_260E298 = (uint64_t)"SCDMASCDMA_UBER_1WIFI";
  unk_260E2A0 = 5;
  dword_260E2A8 = 5;
  qword_260E2B0 = (uint64_t)"SCDMA_UBER_1WIFI";
  unk_260E2B8 = 12;
  dword_260E2C0 = 9;
  qword_260E2C8 = (uint64_t)"WIFI";
  unk_260E2D0 = 4;
  dword_260E2D8 = 1;
  qword_260E2E0 = (uint64_t)"jsonprototextxml";
  *(void *)algn_260E2E8 = 4;
  dword_260E2F0 = 1;
  qword_260E2F8 = (uint64_t)"prototextxml";
  unk_260E300 = 5;
  dword_260E308 = 0;
  qword_260E310 = (uint64_t)"textxml";
  unk_260E318 = 4;
  dword_260E320 = 3;
  qword_260E328 = (uint64_t)"xml";
  unk_260E330 = 3;
  dword_260E338 = 2;
  uint64_t result = "MAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_DEVICE_LOCATIONMAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_GLOBALMAPS_ENRICHMENT_SEAR"
           "CH_SCOPE_TYPE_MIXED_INTENTMAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_UNKNOWNMAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_VIEWPORT";
  qword_260E340 = (uint64_t)"MAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_DEVICE_LOCATIONMAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_GLOBALMAPS"
                           "_ENRICHMENT_SEARCH_SCOPE_TYPE_MIXED_INTENTMAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_UNKNOWNMAPS_ENRIC"
                           "HMENT_SEARCH_SCOPE_TYPE_VIEWPORT";
  *(void *)algn_260E348 = 49;
  dword_260E350 = 1;
  qword_260E358 = (uint64_t)"MAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_GLOBALMAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_MIXED_INTENTMAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_UNKNOWNMAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_VIEWPORT";
  unk_260E360 = 40;
  dword_260E368 = 4;
  qword_260E370 = (uint64_t)"MAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_MIXED_INTENTMAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_UNKNOWNMAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_VIEWPORT";
  unk_260E378 = 46;
  dword_260E380 = 3;
  qword_260E388 = (uint64_t)"MAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_UNKNOWNMAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_VIEWPORT";
  unk_260E390 = 41;
  dword_260E398 = 0;
  qword_260E3A0 = (uint64_t)"MAPS_ENRICHMENT_SEARCH_SCOPE_TYPE_VIEWPORT";
  unk_260E3A8 = 42;
  dword_260E3B0 = 2;
  qword_260E3B8 = (uint64_t)"RESULT_FILTER_MATCH_TYPE_NONERESULT_FILTER_MATCH_TYPE_OPTIONALRESULT_FILTER_MATCH_TYPE_STRICT";
  unk_260E3C0 = 29;
  dword_260E3C8 = 0;
  qword_260E3D0 = (uint64_t)"RESULT_FILTER_MATCH_TYPE_OPTIONALRESULT_FILTER_MATCH_TYPE_STRICT";
  unk_260E3D8 = 33;
  dword_260E3E0 = 1;
  qword_260E3E8 = (uint64_t)"RESULT_FILTER_MATCH_TYPE_STRICT";
  unk_260E3F0 = 31;
  dword_260E3F8 = 2;
  qword_260E400 = (uint64_t)"MAPS_ENRICHMENT_REQUEST_TYPE_PLACECARDMAPS_ENRICHMENT_REQUEST_TYPE_SEARCHMAPS_ENRICHMENT_REQU"
                           "EST_TYPE_UNKNOWN";
  *(void *)algn_260E408 = 38;
  dword_260E410 = 2;
  qword_260E418 = (uint64_t)"MAPS_ENRICHMENT_REQUEST_TYPE_SEARCHMAPS_ENRICHMENT_REQUEST_TYPE_UNKNOWN";
  unk_260E420 = 35;
  dword_260E428 = 1;
  qword_260E430 = (uint64_t)"MAPS_ENRICHMENT_REQUEST_TYPE_UNKNOWN";
  unk_260E438 = 36;
  dword_260E440 = 0;
  qword_260E448 = (uint64_t)"MAPS_WEB_REQUEST_TYPE_SHOWCASEMAPS_WEB_REQUEST_TYPE_UNKNOWN";
  unk_260E450 = 30;
  dword_260E458 = 1;
  qword_260E460 = (uint64_t)"MAPS_WEB_REQUEST_TYPE_UNKNOWN";
  unk_260E468 = 29;
  dword_260E470 = 0;
  qword_260E478 = (uint64_t)"CITY_TOURLANDMARK_TOURNOTIFICATION_TOUR";
  unk_260E480 = 9;
  dword_260E488 = 0;
  qword_260E490 = (uint64_t)"LANDMARK_TOURNOTIFICATION_TOUR";
  unk_260E498 = 13;
  dword_260E4A0 = 1;
  qword_260E4A8 = (uint64_t)"NOTIFICATION_TOUR";
  unk_260E4B0 = 17;
  dword_260E4B8 = 2;
  return result;
}

char *sub_1552B00(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15744DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1552B90(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_158322C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 3) != 0)
  {
    if ((v6 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v7 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
LABEL_9:
      if ((v6 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v6 & 2) != 0) {
LABEL_10:
    }
      uint64_t result = sub_1577380(*(void *)(a1 + 80));
  }
LABEL_11:
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = a1 + 8;
  *(void *)(v8 + 80) = 0;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_1552C64(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15836F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

std::string *sub_1552CF4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_1589B5C(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 7) != 0)
  {
    if (v14)
    {
      uint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0)
        {
LABEL_12:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
          goto LABEL_13;
        }
LABEL_11:
        v3[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
        goto LABEL_12;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v19 = (std::string *)v3[3].__r_.__value_.__l.__size_;
    if (!v19)
    {
      std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      sub_1584B0C((uint64_t)v21);
      v3[3].__r_.__value_.__l.__size_ = (std::string::size_type)v19;
    }
    if (*(void *)(a2 + 80)) {
      int v22 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      int v22 = &off_253E408;
    }
    uint64_t result = sub_1578544(v19, (uint64_t)v22);
    if ((v14 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1552ED8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 0;
  }
  for (uint64_t i = *(unsigned int *)(a1 + 56); (int)i >= 1; --i)
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 64) + 8 * i);
    if ((~*(_DWORD *)(v2 + 16) & 3) != 0) {
      return 0;
    }
  }
  return sub_15788AC(*(void *)(a1 + 80));
}

BOOL sub_1552F18(unsigned int a1)
{
  return a1 < 9;
}

BOOL sub_1552F24(unsigned int a1)
{
  return a1 < 7 || a1 == 100;
}

uint64_t sub_1552F3C()
{
  return 1;
}

BOOL sub_1553088(unsigned int a1)
{
  return a1 < 6;
}

void *sub_1553094(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1553108(void *a1)
{
  sub_1553094(a1);

  operator delete();
}

uint64_t sub_1553140(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1553168(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v29 + 2;
      }
    }
    BOOL v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      uint64_t v16 = v8 + 1;
      unint64_t v17 = *v8;
      if (*v8 < 0)
      {
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          BOOL v29 = (char *)sub_188C138((uint64_t)v8, (v19 - 128));
          if (!v29) {
            goto LABEL_59;
          }
          unint64_t v17 = v25;
          goto LABEL_27;
        }
        uint64_t v16 = v8 + 2;
      }
      BOOL v29 = v16;
LABEL_27:
      if (v17 <= 2)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_45;
      }
      if (*v7) {
        uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v28 = 3;
      goto LABEL_53;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    uint64_t v23 = v8 + 1;
    LODWORD(v24) = *v8;
    if (*v8 < 0)
    {
      uint64_t v24 = v24 + (*v23 << 7) - 128;
      if (*v23 < 0) {
        uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v24);
      }
      else {
        uint64_t v23 = v8 + 2;
      }
    }
    BOOL v29 = v23;
    *(_DWORD *)(a1 + 24) = -(v24 & 1) ^ (v24 >> 1);
    int v5 = 1;
    if (!v23) {
      goto LABEL_59;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    std::string::size_type v20 = v8 + 1;
    unint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    int v21 = *v20;
    int v22 = v17 + (v21 << 7);
    unint64_t v17 = (v22 - 128);
    if (v21 < 0)
    {
      BOOL v29 = (char *)sub_188C138((uint64_t)v8, (v22 - 128));
      if (!v29) {
        goto LABEL_59;
      }
      unint64_t v17 = v26;
    }
    else
    {
      std::string::size_type v20 = v8 + 2;
LABEL_33:
      BOOL v29 = v20;
    }
    if (v17 <= 2)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = v17;
      goto LABEL_45;
    }
    if (*v7) {
      uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v28 = 2;
LABEL_53:
    sub_188C020(v28, v17, v27);
    goto LABEL_45;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v29;
    }
    BOOL v29 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v29) {
      goto LABEL_59;
    }
    goto LABEL_45;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_59:
  BOOL v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

unsigned char *sub_1553440(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    unsigned int v8 = (2 * v7) ^ (v7 >> 31);
    v4[1] = (2 * v7) ^ (v7 >> 31);
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unsigned int v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(int *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    std::string::size_type v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    std::string::size_type v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_1553668(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz((2 * *(_DWORD *)(a1 + 24)) ^ (*(int *)(a1 + 24) >> 31) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v3 = *(_DWORD *)(a1 + 28);
  if (v3 < 0) {
    uint64_t v4 = 11;
  }
  else {
    uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v4;
LABEL_11:
  if ((v1 & 4) != 0)
  {
    int v5 = *(_DWORD *)(a1 + 32);
    if (v5 < 0) {
      uint64_t v6 = 11;
    }
    else {
      uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v6;
  }
LABEL_16:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v2 += v10;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1553754()
{
  return 1;
}

void *sub_155375C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.JunctionElement");
}

uint64_t sub_155376C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = &off_24C0C10;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = &qword_2550250;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = -1;
  *(void *)(a1 + 176) = -1;
  return a1;
}

void sub_1553804(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1553834(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 120);
  if (*(uint64_t **)(a1 + 120) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253D7E8)
  {
    uint64_t v6 = *(void *)(a1 + 128);
    if (v6)
    {
      sub_1556018(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1587188((void *)(a1 + 96));
  sub_1587108((void *)(a1 + 72));
  sub_1587088((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_155392C(uint64_t a1)
{
  sub_1553834(a1);

  operator delete();
}

uint64_t sub_1553964(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1555B20(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_1553140(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_1553AB8(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  int v12 = *(_DWORD *)(a1 + 40);
  if ((v12 & 3) != 0)
  {
    if ((v12 & 1) == 0) {
      goto LABEL_17;
    }
    unint64_t v13 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v13 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
LABEL_17:
      if ((v12 & 2) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    **(unsigned char **)unint64_t v13 = 0;
    *(void *)(v13 + 8) = 0;
    if ((v12 & 2) != 0) {
LABEL_18:
    }
      uint64_t result = sub_1553AB8(*(void *)(a1 + 128));
  }
LABEL_19:
  if ((v12 & 0xFC) != 0)
  {
    *(void *)(a1 + 136) = 0;
    *(void *)(a1 + 144) = 0;
    *(void *)(a1 + 152) = 0;
  }
  if ((v12 & 0xFF00) != 0)
  {
    *(void *)(a1 + 160) = 0;
    *(void *)(a1 + 168) = -1;
    *(_DWORD *)(a1 + 176) = -1;
  }
  char v15 = *(unsigned char *)(a1 + 8);
  uint64_t v14 = a1 + 8;
  *(_DWORD *)(v14 + 172) = -1;
  *(_DWORD *)(v14 + 32) = 0;
  if (v15)
  {
    return sub_188B4AC((uint64_t *)v14);
  }
  return result;
}

uint64_t sub_1553AB8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
LABEL_17:
  if ((v1 & 0x38) != 0)
  {
    *(_DWORD *)(a1 + 56) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1553B80(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v112 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v112, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v112 + 1);
    unsigned int v9 = **(unsigned char **)v112;
    if ((char)**(unsigned char **)v112 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v112, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v112 + 2);
      }
    }
    *(void *)v112 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_132;
        }
        v5 |= 4u;
        int v12 = (char *)(v8 + 1);
        int v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)v112 = v12;
          *(_DWORD *)(a1 + 136) = v13;
          goto LABEL_142;
        }
        uint64_t v84 = sub_188C0D0((uint64_t)v8, v13);
        *(void *)v112 = v84;
        *(_DWORD *)(a1 + 136) = v85;
        if (v84) {
          goto LABEL_142;
        }
        goto LABEL_194;
      case 2u:
        if (v9 != 16) {
          goto LABEL_132;
        }
        v5 |= 0x2000u;
        unint64_t v16 = (char *)(v8 + 1);
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v86 = sub_188C138((uint64_t)v8, v15);
          *(void *)v112 = v86;
          *(_DWORD *)(a1 + 168) = v87;
          if (!v86) {
            goto LABEL_194;
          }
        }
        else
        {
          unint64_t v16 = (char *)(v8 + 2);
LABEL_18:
          *(void *)v112 = v16;
          *(_DWORD *)(a1 + 168) = v15;
        }
        goto LABEL_142;
      case 3u:
        if (v9 != 24) {
          goto LABEL_132;
        }
        v5 |= 0x4000u;
        unint64_t v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v88 = sub_188C138((uint64_t)v8, v18);
          *(void *)v112 = v88;
          *(_DWORD *)(a1 + 172) = v89;
          if (!v88) {
            goto LABEL_194;
          }
        }
        else
        {
          unint64_t v19 = (char *)(v8 + 2);
LABEL_23:
          *(void *)v112 = v19;
          *(_DWORD *)(a1 + 172) = v18;
        }
        goto LABEL_142;
      case 4u:
        if (v9 != 32) {
          goto LABEL_132;
        }
        v5 |= 0x8000u;
        uint64_t v22 = (char *)(v8 + 1);
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v90 = sub_188C138((uint64_t)v8, v21);
          *(void *)v112 = v90;
          *(_DWORD *)(a1 + 176) = v91;
          if (!v90) {
            goto LABEL_194;
          }
        }
        else
        {
          uint64_t v22 = (char *)(v8 + 2);
LABEL_28:
          *(void *)v112 = v22;
          *(_DWORD *)(a1 + 176) = v21;
        }
        goto LABEL_142;
      case 5u:
        if (v9 != 40) {
          goto LABEL_132;
        }
        v5 |= 8u;
        uint64_t v24 = (char *)(v8 + 1);
        int v25 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v92 = sub_188C0D0((uint64_t)v8, v25);
          *(void *)v112 = v92;
          *(_DWORD *)(a1 + 140) = v93;
          if (!v92) {
            goto LABEL_194;
          }
        }
        else
        {
          uint64_t v24 = (char *)(v8 + 2);
LABEL_33:
          *(void *)v112 = v24;
          *(_DWORD *)(a1 + 140) = v25;
        }
        goto LABEL_142;
      case 6u:
        if (v9 != 48) {
          goto LABEL_132;
        }
        v5 |= 0x10u;
        uint64_t v27 = (char *)(v8 + 1);
        int v28 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v94 = sub_188C0D0((uint64_t)v8, v28);
          *(void *)v112 = v94;
          *(_DWORD *)(a1 + 144) = v95;
          if (!v94) {
            goto LABEL_194;
          }
        }
        else
        {
          uint64_t v27 = (char *)(v8 + 2);
LABEL_38:
          *(void *)v112 = v27;
          *(_DWORD *)(a1 + 144) = v28;
        }
        goto LABEL_142;
      case 7u:
        if (v9 != 56) {
          goto LABEL_132;
        }
        uint64_t v30 = (char *)(v8 + 1);
        unint64_t v31 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        int v33 = v31 + (v32 << 7);
        unint64_t v31 = (v33 - 128);
        if (v32 < 0)
        {
          *(void *)v112 = sub_188C138((uint64_t)v8, (v33 - 128));
          if (!*(void *)v112) {
            goto LABEL_194;
          }
          unint64_t v31 = v96;
        }
        else
        {
          uint64_t v30 = (char *)(v8 + 2);
LABEL_43:
          *(void *)v112 = v30;
        }
        if (sub_1552F3C())
        {
          *(_DWORD *)(a1 + 40) |= 0x20u;
          *(_DWORD *)(a1 + 148) = v31;
          goto LABEL_142;
        }
        if (*v7) {
          v110 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v110 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v111 = 7;
        goto LABEL_186;
      case 8u:
        if (v9 != 66) {
          goto LABEL_132;
        }
        BOOL v34 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v35 = (unsigned __int8 *)(v34 + 1);
          *(void *)v112 = v34 + 1;
          uint64_t v36 = *(_DWORD **)(a1 + 64);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 56), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 56) = v37 + 1;
            uint64_t v38 = *(void *)&v36[2 * v37 + 2];
          }
          else
          {
            uint64_t v39 = sub_15630A0(*(void *)(a1 + 48));
            uint64_t v38 = sub_188CDC8(a1 + 48, v39);
            uint64_t v35 = *(unsigned __int8 **)v112;
          }
          BOOL v34 = sub_155466C(a3, v38, v35);
          *(void *)v112 = v34;
          if (!v34) {
            goto LABEL_194;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 66) {
            goto LABEL_142;
          }
        }
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_132;
        }
        v40 = (char *)(v8 + 1);
        unint64_t v31 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_60;
        }
        int v41 = *v40;
        int v42 = v31 + (v41 << 7);
        unint64_t v31 = (v42 - 128);
        if (v41 < 0)
        {
          *(void *)v112 = sub_188C138((uint64_t)v8, (v42 - 128));
          if (!*(void *)v112) {
            goto LABEL_194;
          }
          unint64_t v31 = v97;
        }
        else
        {
          v40 = (char *)(v8 + 2);
LABEL_60:
          *(void *)v112 = v40;
        }
        if (v31 <= 1)
        {
          *(_DWORD *)(a1 + 40) |= 0x40u;
          *(_DWORD *)(a1 + 152) = v31;
          goto LABEL_142;
        }
        if (*v7) {
          v110 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v110 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v111 = 10;
        goto LABEL_186;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_132;
        }
        v43 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v44 = (unsigned __int8 *)(v43 + 1);
          *(void *)v112 = v43 + 1;
          int v45 = *(_DWORD **)(a1 + 88);
          if (v45 && (uint64_t v46 = *(int *)(a1 + 80), (int)v46 < *v45))
          {
            *(_DWORD *)(a1 + 80) = v46 + 1;
            uint64_t v47 = *(void *)&v45[2 * v46 + 2];
          }
          else
          {
            uint64_t v48 = sub_1562FC8(*(void *)(a1 + 72));
            uint64_t v47 = sub_188CDC8(a1 + 72, v48);
            uint64_t v44 = *(unsigned __int8 **)v112;
          }
          v43 = sub_15546FC(a3, v47, v44);
          *(void *)v112 = v43;
          if (!v43) {
            goto LABEL_194;
          }
          if (*(void *)a3 <= (unint64_t)v43 || *v43 != 90) {
            goto LABEL_142;
          }
        }
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_132;
        }
        uint64_t v49 = v8 - 1;
        while (1)
        {
          uint64_t v50 = v49 + 1;
          *(void *)v112 = v49 + 1;
          uint64_t v51 = *(_DWORD **)(a1 + 112);
          if (v51 && (uint64_t v52 = *(int *)(a1 + 104), (int)v52 < *v51))
          {
            *(_DWORD *)(a1 + 104) = v52 + 1;
            uint64_t v53 = *(void *)&v51[2 * v52 + 2];
          }
          else
          {
            uint64_t v54 = sub_1563140(*(void *)(a1 + 96));
            uint64_t v53 = sub_188CDC8(a1 + 96, v54);
            uint64_t v50 = *(unsigned __int8 **)v112;
          }
          uint64_t v49 = (unsigned __int8 *)sub_155478C(a3, v53, v50);
          *(void *)v112 = v49;
          if (!v49) {
            goto LABEL_194;
          }
          if (*(void *)a3 <= (unint64_t)v49 || *v49 != 98) {
            goto LABEL_142;
          }
        }
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_132;
        }
        v5 |= 0x10000u;
        v56 = (char *)(v8 + 1);
        LODWORD(v55) = *v8;
        if ((v55 & 0x80) == 0) {
          goto LABEL_87;
        }
        int v57 = *v56;
        uint64_t v55 = v55 + (v57 << 7) - 128;
        if (v57 < 0)
        {
          uint64_t v98 = sub_188C138((uint64_t)v8, v55);
          *(void *)v112 = v98;
          *(_DWORD *)(a1 + 180) = v99;
          if (!v98) {
            goto LABEL_194;
          }
        }
        else
        {
          v56 = (char *)(v8 + 2);
LABEL_87:
          *(void *)v112 = v56;
          *(_DWORD *)(a1 + 180) = v55;
        }
        goto LABEL_142;
      case 0x11u:
        if (v9 != 136) {
          goto LABEL_132;
        }
        v58 = (char *)(v8 + 1);
        unint64_t v31 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_92;
        }
        int v59 = *v58;
        int v60 = v31 + (v59 << 7);
        unint64_t v31 = (v60 - 128);
        if (v59 < 0)
        {
          *(void *)v112 = sub_188C138((uint64_t)v8, (v60 - 128));
          if (!*(void *)v112) {
            goto LABEL_194;
          }
          unint64_t v31 = v100;
        }
        else
        {
          v58 = (char *)(v8 + 2);
LABEL_92:
          *(void *)v112 = v58;
        }
        if (v31 <= 5)
        {
          *(_DWORD *)(a1 + 40) |= 0x80u;
          *(_DWORD *)(a1 + 156) = v31;
          goto LABEL_142;
        }
        if (*v7) {
          v110 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v110 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v111 = 17;
        goto LABEL_186;
      case 0x12u:
        if (v9 != 144) {
          goto LABEL_132;
        }
        v61 = (char *)(v8 + 1);
        unint64_t v31 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_99;
        }
        int v62 = *v61;
        int v63 = v31 + (v62 << 7);
        unint64_t v31 = (v63 - 128);
        if (v62 < 0)
        {
          *(void *)v112 = sub_188C138((uint64_t)v8, (v63 - 128));
          if (!*(void *)v112) {
            goto LABEL_194;
          }
          unint64_t v31 = v101;
        }
        else
        {
          v61 = (char *)(v8 + 2);
LABEL_99:
          *(void *)v112 = v61;
        }
        if (v31 > 1)
        {
          if (*v7) {
            v110 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v110 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v111 = 18;
LABEL_186:
          sub_188C020(v111, v31, v110);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x100u;
          *(_DWORD *)(a1 + 160) = v31;
        }
        goto LABEL_142;
      case 0x13u:
        if (v9 != 154) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v64 = *(void *)(a1 + 128);
        if (!v64)
        {
          v65 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v65 = (void *)*v65;
          }
          uint64_t v64 = sub_1563140((uint64_t)v65);
          *(void *)(a1 + 128) = v64;
          uint64_t v8 = *(unsigned __int8 **)v112;
        }
        uint64_t v66 = sub_155478C(a3, v64, v8);
        goto LABEL_141;
      case 0x14u:
        if (v9 != 160) {
          goto LABEL_132;
        }
        v5 |= 0x200u;
        v67 = (char *)(v8 + 1);
        uint64_t v68 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_112;
        }
        int v69 = *v67;
        uint64_t v68 = v68 + (v69 << 7) - 128;
        if (v69 < 0)
        {
          uint64_t v102 = sub_188C138((uint64_t)v8, v68);
          *(void *)v112 = v102;
          *(unsigned char *)(a1 + 164) = v103 != 0;
          if (!v102) {
            goto LABEL_194;
          }
        }
        else
        {
          v67 = (char *)(v8 + 2);
LABEL_112:
          *(void *)v112 = v67;
          *(unsigned char *)(a1 + 164) = v68 != 0;
        }
        goto LABEL_142;
      case 0x15u:
        if (v9 != 168) {
          goto LABEL_132;
        }
        v5 |= 0x400u;
        v70 = (char *)(v8 + 1);
        uint64_t v71 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_117;
        }
        int v72 = *v70;
        uint64_t v71 = v71 + (v72 << 7) - 128;
        if (v72 < 0)
        {
          uint64_t v104 = sub_188C138((uint64_t)v8, v71);
          *(void *)v112 = v104;
          *(unsigned char *)(a1 + 165) = v105 != 0;
          if (!v104) {
            goto LABEL_194;
          }
        }
        else
        {
          v70 = (char *)(v8 + 2);
LABEL_117:
          *(void *)v112 = v70;
          *(unsigned char *)(a1 + 165) = v71 != 0;
        }
        goto LABEL_142;
      case 0x16u:
        if (v9 != 176) {
          goto LABEL_132;
        }
        v5 |= 0x800u;
        v73 = (char *)(v8 + 1);
        uint64_t v74 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_122;
        }
        int v75 = *v73;
        uint64_t v74 = v74 + (v75 << 7) - 128;
        if (v75 < 0)
        {
          uint64_t v106 = sub_188C138((uint64_t)v8, v74);
          *(void *)v112 = v106;
          *(unsigned char *)(a1 + 166) = v107 != 0;
          if (!v106) {
            goto LABEL_194;
          }
        }
        else
        {
          v73 = (char *)(v8 + 2);
LABEL_122:
          *(void *)v112 = v73;
          *(unsigned char *)(a1 + 166) = v74 != 0;
        }
        goto LABEL_142;
      case 0x18u:
        if (v9 != 192) {
          goto LABEL_132;
        }
        v5 |= 0x1000u;
        v76 = (char *)(v8 + 1);
        uint64_t v77 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_127;
        }
        int v78 = *v76;
        uint64_t v77 = v77 + (v78 << 7) - 128;
        if (v78 < 0)
        {
          uint64_t v108 = sub_188C138((uint64_t)v8, v77);
          *(void *)v112 = v108;
          *(unsigned char *)(a1 + 167) = v109 != 0;
          if (!v108) {
            goto LABEL_194;
          }
        }
        else
        {
          v76 = (char *)(v8 + 2);
LABEL_127:
          *(void *)v112 = v76;
          *(unsigned char *)(a1 + 167) = v77 != 0;
        }
        goto LABEL_142;
      case 0x1Eu:
        if (v9 != 242) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v79 = *(void *)(a1 + 8);
        v80 = (uint64_t *)(v79 & 0xFFFFFFFFFFFFFFFCLL);
        if (v79) {
          v80 = (uint64_t *)*v80;
        }
        v81 = (std::string *)sub_1880F84((void *)(a1 + 120), v80);
        uint64_t v66 = (uint64_t)sub_188C244(v81, *(char **)v112, (uint64_t)a3);
        goto LABEL_141;
      default:
LABEL_132:
        if (v9) {
          BOOL v82 = (v9 & 7) == 4;
        }
        else {
          BOOL v82 = 1;
        }
        if (!v82)
        {
          if (v9 - 7600 > 0x18F)
          {
            if (*v7)
            {
              v83 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v83 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v112;
            }
            uint64_t v66 = (uint64_t)sub_1885AC0(v9, v83, (char *)v8, a3);
          }
          else
          {
            uint64_t v66 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_253D7E8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_141:
          *(void *)v112 = v66;
          if (!v66) {
            goto LABEL_194;
          }
LABEL_142:
          if (sub_11947B8((uint64_t)a3, (char **)v112, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_194:
        }
          *(void *)v112 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v112;
    }
  }
}

char *sub_155466C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1555B9C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15546FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1553168(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_155478C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_155611C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_155481C(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 136);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 168);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 172);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 176);
    char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 140);
    char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 144);
    char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 148);
    char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v28 = *(_DWORD *)(a1 + 56);
  if (v28)
  {
    for (int i = 0; i != v28; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 66;
      unsigned int v31 = *(_DWORD *)(v30 + 40);
      v4[1] = v31;
      if (v31 > 0x7F) {
        int v32 = sub_188A9CC(v31, v4 + 1);
      }
      else {
        int v32 = v4 + 2;
      }
      unint64_t v4 = sub_1555D3C(v30, v32, a3);
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v33 = *(int *)(a1 + 152);
    char *v4 = 80;
    v4[1] = v33;
    if (v33 > 0x7F)
    {
      v4[1] = v33 | 0x80;
      unint64_t v34 = v33 >> 7;
      v4[2] = v33 >> 7;
      v4 += 3;
      if (v33 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v35 = v34 >> 14;
          v34 >>= 7;
          *v4++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v36 = *(_DWORD *)(a1 + 80);
  if (v36)
  {
    for (int j = 0; j != v36; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 90;
      unsigned int v39 = *(_DWORD *)(v38 + 20);
      v4[1] = v39;
      if (v39 > 0x7F) {
        v40 = sub_188A9CC(v39, v4 + 1);
      }
      else {
        v40 = v4 + 2;
      }
      unint64_t v4 = sub_1553440(v38, (unint64_t)v40, a3);
    }
  }
  int v41 = *(_DWORD *)(a1 + 104);
  if (v41)
  {
    for (int k = 0; k != v41; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v43 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      char *v4 = 98;
      unsigned int v44 = *(_DWORD *)(v43 + 20);
      v4[1] = v44;
      if (v44 > 0x7F) {
        int v45 = sub_188A9CC(v44, v4 + 1);
      }
      else {
        int v45 = v4 + 2;
      }
      unint64_t v4 = sub_15564E4(v43, v45, a3);
    }
  }
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v46 = *(int *)(a1 + 180);
    *(_WORD *)unint64_t v4 = 384;
    v4[2] = v46;
    if (v46 > 0x7F)
    {
      v4[2] = v46 | 0x80;
      unint64_t v47 = v46 >> 7;
      v4[3] = v46 >> 7;
      v4 += 4;
      if (v46 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v48 = v47 >> 14;
          v47 >>= 7;
          *v4++ = v47;
        }
        while (v48);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v49 = *(int *)(a1 + 156);
    *(_WORD *)unint64_t v4 = 392;
    v4[2] = v49;
    if (v49 > 0x7F)
    {
      v4[2] = v49 | 0x80;
      unint64_t v50 = v49 >> 7;
      v4[3] = v49 >> 7;
      v4 += 4;
      if (v49 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v51 = v50 >> 14;
          v50 >>= 7;
          *v4++ = v50;
        }
        while (v51);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v52 = *(int *)(a1 + 160);
    *(_WORD *)unint64_t v4 = 400;
    v4[2] = v52;
    if (v52 > 0x7F)
    {
      v4[2] = v52 | 0x80;
      unint64_t v53 = v52 >> 7;
      v4[3] = v52 >> 7;
      v4 += 4;
      if (v52 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v54 = v53 >> 14;
          v53 >>= 7;
          *v4++ = v53;
        }
        while (v54);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v57 = *(void *)(a1 + 128);
    *(_WORD *)unint64_t v4 = 410;
    unsigned int v58 = *(_DWORD *)(v57 + 20);
    v4[2] = v58;
    if (v58 > 0x7F) {
      int v59 = sub_188A9CC(v58, v4 + 2);
    }
    else {
      int v59 = v4 + 3;
    }
    unint64_t v4 = sub_15564E4(v57, v59, a3);
    if ((v6 & 0x200) == 0)
    {
LABEL_104:
      if ((v6 & 0x400) == 0) {
        goto LABEL_105;
      }
      goto LABEL_122;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_104;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v60 = *(unsigned char *)(a1 + 164);
  *(_WORD *)unint64_t v4 = 416;
  v4[2] = v60;
  v4 += 3;
  if ((v6 & 0x400) == 0)
  {
LABEL_105:
    if ((v6 & 0x800) == 0) {
      goto LABEL_106;
    }
    goto LABEL_125;
  }
LABEL_122:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v61 = *(unsigned char *)(a1 + 165);
  *(_WORD *)unint64_t v4 = 424;
  v4[2] = v61;
  v4 += 3;
  if ((v6 & 0x800) == 0)
  {
LABEL_106:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_107;
    }
    goto LABEL_128;
  }
LABEL_125:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v62 = *(unsigned char *)(a1 + 166);
  *(_WORD *)unint64_t v4 = 432;
  v4[2] = v62;
  v4 += 3;
  if ((v6 & 0x1000) == 0)
  {
LABEL_107:
    if ((v6 & 1) == 0) {
      goto LABEL_109;
    }
    goto LABEL_108;
  }
LABEL_128:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v63 = *(unsigned char *)(a1 + 167);
  *(_WORD *)unint64_t v4 = 448;
  v4[2] = v63;
  v4 += 3;
  if (v6) {
LABEL_108:
  }
    unint64_t v4 = sub_117A0AC(a3, 30, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_109:
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v55 = *(void *)(a1 + 8);
  if ((v55 & 1) == 0) {
    return v4;
  }
  unint64_t v64 = v55 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v64 + 31) < 0)
  {
    v65 = *(void **)(v64 + 8);
    uint64_t v66 = *(void *)(v64 + 16);
  }
  else
  {
    v65 = (void *)(v64 + 8);
    LODWORD(v66) = *(unsigned __int8 *)(v64 + 31);
  }
  if (*a3 - (void)v4 >= (int)v66)
  {
    uint64_t v67 = (int)v66;
    memcpy(v4, v65, (int)v66);
    v4 += v67;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v65, v66, v4);
}

uint64_t sub_1555160(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1555E80(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1553668(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    unsigned int v20 = (uint64_t *)(v19 + 8);
  }
  else {
    unsigned int v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_155677C(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  int v24 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v24) {
    goto LABEL_32;
  }
  if (v24)
  {
    unint64_t v40 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v41 = *(unsigned __int8 *)(v40 + 23);
    uint64_t v42 = *(void *)(v40 + 8);
    if ((v41 & 0x80u) == 0) {
      uint64_t v42 = v41;
    }
    v18 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v24 & 2) == 0)
    {
LABEL_22:
      if ((v24 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_65;
    }
  }
  else if ((v24 & 2) == 0)
  {
    goto LABEL_22;
  }
  uint64_t v43 = sub_155677C(*(void *)(a1 + 128));
  v18 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v24 & 4) == 0)
  {
LABEL_23:
    if ((v24 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_66;
  }
LABEL_65:
  v18 += ((9 * (__clz(*(_DWORD *)(a1 + 136) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 8) == 0)
  {
LABEL_24:
    if ((v24 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_67;
  }
LABEL_66:
  v18 += ((9 * (__clz(*(_DWORD *)(a1 + 140) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x10) == 0)
  {
LABEL_25:
    if ((v24 & 0x20) == 0) {
      goto LABEL_26;
    }
LABEL_68:
    int v44 = *(_DWORD *)(a1 + 148);
    uint64_t v45 = (9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6;
    if (v44 >= 0) {
      uint64_t v46 = v45;
    }
    else {
      uint64_t v46 = 10;
    }
    v18 += v46 + 1;
    if ((v24 & 0x40) == 0)
    {
LABEL_27:
      if ((v24 & 0x80) == 0) {
        goto LABEL_32;
      }
      goto LABEL_28;
    }
    goto LABEL_72;
  }
LABEL_67:
  v18 += ((9 * (__clz(*(_DWORD *)(a1 + 144) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x20) != 0) {
    goto LABEL_68;
  }
LABEL_26:
  if ((v24 & 0x40) == 0) {
    goto LABEL_27;
  }
LABEL_72:
  int v47 = *(_DWORD *)(a1 + 152);
  uint64_t v48 = (9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6;
  if (v47 >= 0) {
    uint64_t v49 = v48;
  }
  else {
    uint64_t v49 = 10;
  }
  v18 += v49 + 1;
  if ((v24 & 0x80) != 0)
  {
LABEL_28:
    int v25 = *(_DWORD *)(a1 + 156);
    uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v25 >= 0) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 12;
    }
    v18 += v27;
  }
LABEL_32:
  if ((v24 & 0xFF00) == 0) {
    goto LABEL_54;
  }
  if ((v24 & 0x100) != 0)
  {
    int v28 = *(_DWORD *)(a1 + 160);
    uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v28 >= 0) {
      uint64_t v30 = v29;
    }
    else {
      uint64_t v30 = 12;
    }
    v18 += v30;
  }
  uint64_t v31 = v18 + 3;
  if ((v24 & 0x200) == 0) {
    uint64_t v31 = v18;
  }
  if ((v24 & 0x400) != 0) {
    v31 += 3;
  }
  if ((v24 & 0x800) != 0) {
    v31 += 3;
  }
  if ((v24 & 0x1000) != 0) {
    uint64_t v18 = v31 + 3;
  }
  else {
    uint64_t v18 = v31;
  }
  if ((v24 & 0x2000) != 0)
  {
    int v50 = *(_DWORD *)(a1 + 168);
    uint64_t v51 = ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v50 >= 0) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 11;
    }
    v18 += v52;
    if ((v24 & 0x4000) == 0)
    {
LABEL_49:
      if ((v24 & 0x8000) == 0) {
        goto LABEL_54;
      }
      goto LABEL_50;
    }
  }
  else if ((v24 & 0x4000) == 0)
  {
    goto LABEL_49;
  }
  int v53 = *(_DWORD *)(a1 + 172);
  uint64_t v54 = ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v53 >= 0) {
    uint64_t v55 = v54;
  }
  else {
    uint64_t v55 = 11;
  }
  v18 += v55;
  if ((v24 & 0x8000) != 0)
  {
LABEL_50:
    int v32 = *(_DWORD *)(a1 + 176);
    uint64_t v33 = ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v32 >= 0) {
      uint64_t v34 = v33;
    }
    else {
      uint64_t v34 = 11;
    }
    v18 += v34;
  }
LABEL_54:
  if ((v24 & 0x10000) != 0)
  {
    int v35 = *(_DWORD *)(a1 + 180);
    uint64_t v36 = ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v35 >= 0) {
      uint64_t v37 = v36;
    }
    else {
      uint64_t v37 = 12;
    }
    v18 += v37;
  }
  uint64_t v38 = *(void *)(a1 + 8);
  if (v38)
  {
    unint64_t v56 = v38 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v56 + 31) < 0) {
      uint64_t v57 = *(void *)(v56 + 16);
    }
    else {
      uint64_t v57 = *(unsigned __int8 *)(v56 + 31);
    }
    v18 += v57;
  }
  *(_DWORD *)(a1 + 44) = v18;
  return v18;
}

void sub_15555B0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1587708((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1587794((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *unint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1587810((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v19)
  {
    if (v19)
    {
      uint64_t v22 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v23 = *(void *)(a1 + 8);
      int v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        int v24 = (uint64_t *)*v24;
      }
      sub_1881DF4((std::string **)(a1 + 120), v22, v24);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_49;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    int v25 = *(std::string **)(a1 + 128);
    if (!v25)
    {
      uint64_t v26 = *(void *)(a1 + 8);
      uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        uint64_t v27 = (void *)*v27;
      }
      int v25 = (std::string *)sub_1563140((uint64_t)v27);
      *(void *)(a1 + 128) = v25;
    }
    if (*(void *)(a2 + 128)) {
      int v28 = *(uint64_t (****)(uint64_t))(a2 + 128);
    }
    else {
      int v28 = &off_253D8A0;
    }
    sub_1555900(v25, (uint64_t)v28);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_50;
    }
LABEL_49:
    *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_51;
    }
LABEL_50:
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_52;
    }
LABEL_51:
    *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
    if ((v19 & 0x20) == 0)
    {
LABEL_17:
      if ((v19 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_53;
    }
LABEL_52:
    *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
    if ((v19 & 0x40) == 0)
    {
LABEL_18:
      if ((v19 & 0x80) == 0)
      {
LABEL_20:
        *(_DWORD *)(a1 + 40) |= v19;
        goto LABEL_21;
      }
LABEL_19:
      *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
      goto LABEL_20;
    }
LABEL_53:
    *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
    if ((v19 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_21:
  if ((v19 & 0xFF00) == 0) {
    goto LABEL_32;
  }
  if ((v19 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
    if ((v19 & 0x200) == 0)
    {
LABEL_24:
      if ((v19 & 0x400) == 0) {
        goto LABEL_25;
      }
      goto LABEL_57;
    }
  }
  else if ((v19 & 0x200) == 0)
  {
    goto LABEL_24;
  }
  *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
  if ((v19 & 0x400) == 0)
  {
LABEL_25:
    if ((v19 & 0x800) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_57:
  *(unsigned char *)(a1 + 165) = *(unsigned char *)(a2 + 165);
  if ((v19 & 0x800) == 0)
  {
LABEL_26:
    if ((v19 & 0x1000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_58:
  *(unsigned char *)(a1 + 166) = *(unsigned char *)(a2 + 166);
  if ((v19 & 0x1000) == 0)
  {
LABEL_27:
    if ((v19 & 0x2000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
LABEL_59:
  *(unsigned char *)(a1 + 167) = *(unsigned char *)(a2 + 167);
  if ((v19 & 0x2000) == 0)
  {
LABEL_28:
    if ((v19 & 0x4000) == 0) {
      goto LABEL_29;
    }
LABEL_61:
    *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
    if ((v19 & 0x8000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_60:
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  if ((v19 & 0x4000) != 0) {
    goto LABEL_61;
  }
LABEL_29:
  if ((v19 & 0x8000) != 0) {
LABEL_30:
  }
    *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
LABEL_31:
  *(_DWORD *)(a1 + 40) |= v19;
LABEL_32:
  if ((v19 & 0x10000) != 0)
  {
    int v20 = *(_DWORD *)(a2 + 180);
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    *(_DWORD *)(a1 + 180) = v20;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_1555900(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      int v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_20:
    unint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
LABEL_23:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
      goto LABEL_9;
    }
LABEL_24:
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1555A50(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_1555A58@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Step");
}

void *sub_1555A68(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1587188(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1555AE8(void *a1)
{
  sub_1555A68(a1);

  operator delete();
}

uint64_t sub_1555B20(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1553AB8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_1555B9C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          std::string::size_type v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1563140(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = (char *)sub_155478C(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        std::string::size_type v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        std::string::size_type v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1555D3C(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_15564E4(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    std::string::size_type v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    std::string::size_type v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1555E80(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_155677C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_1555F30(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_1587810((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1556000()
{
  return 1;
}

void *sub_1556008@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.NameInfoList");
}

uint64_t sub_1556018(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15560E4(uint64_t a1)
{
  sub_1556018(a1);

  operator delete();
}

uint64_t sub_155611C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v34 + 1);
    unsigned int v9 = **(unsigned char **)v34;
    if ((char)**(unsigned char **)v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v34 + 2);
      }
    }
    *(void *)uint64_t v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 24);
        goto LABEL_21;
      case 2u:
        if (v9 != 18) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 32);
        goto LABEL_21;
      case 3u:
        if (v9 != 26) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 40);
LABEL_21:
        uint64_t v17 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v18 = (void *)sub_188C244(v17, *(char **)v34, (uint64_t)a3);
        goto LABEL_47;
      case 4u:
        if (v9 != 32) {
          goto LABEL_40;
        }
        int v19 = v8 + 1;
        LODWORD(v20) = *v8;
        if (*v8 < 0)
        {
          uint64_t v20 = v20 + (*v19 << 7) - 128;
          if (*v19 < 0) {
            int v19 = (char *)sub_188C138((uint64_t)v8, v20);
          }
          else {
            int v19 = v8 + 2;
          }
        }
        v5 |= 8u;
        *(void *)uint64_t v34 = v19;
        *(_DWORD *)(a1 + 48) = -(v20 & 1) ^ (v20 >> 1);
        if (v19) {
          goto LABEL_51;
        }
        goto LABEL_69;
      case 5u:
        if (v9 != 40) {
          goto LABEL_40;
        }
        uint64_t v21 = v8 + 1;
        unint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          *(void *)uint64_t v34 = sub_188C138((uint64_t)v8, (v24 - 128));
          if (!*(void *)v34) {
            goto LABEL_69;
          }
          unint64_t v22 = v30;
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_30:
          *(void *)uint64_t v34 = v21;
        }
        if (v22 <= 1)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 52) = v22;
          goto LABEL_51;
        }
        if (*v7) {
          int v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v33 = 5;
        goto LABEL_63;
      case 6u:
        if (v9 != 48) {
          goto LABEL_40;
        }
        int v25 = v8 + 1;
        unint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v26 = *v25;
        int v27 = v22 + (v26 << 7);
        unint64_t v22 = (v27 - 128);
        if (v26 < 0)
        {
          *(void *)uint64_t v34 = sub_188C138((uint64_t)v8, (v27 - 128));
          if (!*(void *)v34) {
            goto LABEL_69;
          }
          unint64_t v22 = v31;
        }
        else
        {
          int v25 = v8 + 2;
LABEL_37:
          *(void *)uint64_t v34 = v25;
        }
        if (v22 > 3)
        {
          if (*v7) {
            int v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v33 = 6;
LABEL_63:
          sub_188C020(v33, v22, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 56) = v22;
        }
        goto LABEL_51;
      default:
LABEL_40:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v34;
          }
          uint64_t v18 = sub_1885AC0(v9, v29, v8, a3);
LABEL_47:
          *(void *)uint64_t v34 = v18;
          if (!v18) {
            goto LABEL_69;
          }
LABEL_51:
          if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_69:
        }
          *(void *)uint64_t v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v34;
    }
  }
}

unsigned char *sub_15564E4(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
LABEL_8:
  int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_15;
  }
LABEL_9:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v7 = *(_DWORD *)(a1 + 48);
  unsigned char *v4 = 32;
  unsigned int v8 = (2 * v7) ^ (v7 >> 31);
  v4[1] = (2 * v7) ^ (v7 >> 31);
  if (v8 > 0x7F)
  {
    v4[1] = v8 | 0x80;
    unsigned int v9 = v8 >> 7;
    v4[2] = v8 >> 7;
    v4 += 3;
    if (v8 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v10 = v9 >> 14;
        v9 >>= 7;
        *v4++ = v9;
      }
      while (v10);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_15:
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 52);
    unsigned char *v4 = 40;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(int *)(a1 + 56);
    unsigned char *v4 = 48;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*a3 - (void)v4 >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_155677C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_29;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_21;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  v2 += ((9 * (__clz((2 * *(_DWORD *)(a1 + 48)) ^ (*(int *)(a1 + 48) >> 31) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_25;
  }
LABEL_21:
  int v12 = *(_DWORD *)(a1 + 52);
  if (v12 < 0) {
    uint64_t v13 = 11;
  }
  else {
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v13;
  if ((v1 & 0x20) != 0)
  {
LABEL_25:
    int v14 = *(_DWORD *)(a1 + 56);
    if (v14 < 0) {
      uint64_t v15 = 11;
    }
    else {
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v15;
  }
LABEL_29:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v2 += v19;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1556944()
{
  return 1;
}

void *sub_155694C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.NameInfo");
}

uint64_t sub_155695C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253D8E0)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_1556018(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1556A14(uint64_t a1)
{
  sub_155695C(a1);

  operator delete();
}

uint64_t sub_1556A4C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_1553AB8(*(void *)(result + 24));
    }
    *(_DWORD *)(v1 + 32) = -1;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1556AB8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v23 + 2;
      }
    }
    int v23 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v17 = v8 + 1;
    LODWORD(v16) = *v8;
    if ((v16 & 0x80) == 0) {
      goto LABEL_24;
    }
    int v18 = *v17;
    uint64_t v16 = v16 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v17 = v8 + 2;
LABEL_24:
      int v23 = v17;
      *(_DWORD *)(a1 + 32) = v16;
      goto LABEL_31;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    int v23 = v21;
    *(_DWORD *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v19 = sub_1563140((uint64_t)v20);
      *(void *)(a1 + 24) = v19;
      uint64_t v8 = v23;
    }
    uint64_t v15 = (char *)sub_155478C(a3, v19, (unsigned __int8 *)v8);
LABEL_30:
    int v23 = v15;
    if (!v15) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v23;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  int v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

unsigned char *sub_1556C98(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15564E4(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1556E30(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_155677C(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1556F00(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        data = (std::string *)sub_1563140((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)(uint64_t))(a2 + 24);
      }
      else {
        unint64_t v8 = &off_253D8A0;
      }
      uint64_t result = sub_1555900(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1556FD0()
{
  return 1;
}

void *sub_1556FD8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Route.RouteName");
}

uint64_t sub_1556FE8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = &off_24C0E10;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(_DWORD *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = a2;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = a2;
  *(_DWORD *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = &qword_2550250;
  *(void *)(a1 + 216) = &qword_2550250;
  *(void *)(a1 + 224) = &qword_2550250;
  *(void *)(a1 + 232) = &qword_2550250;
  *(void *)(a1 + 240) = &qword_2550250;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  return a1;
}

void sub_15570A4(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_15570D4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_15;
    }
  }
  else if (v4)
  {
    goto LABEL_15;
  }
  uint64_t v5 = (void ***)(a1 + 208);
  if (*(uint64_t **)(a1 + 208) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 216) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 216));
  }
  if (*(uint64_t **)(a1 + 224) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 224));
  }
  if (*(uint64_t **)(a1 + 232) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 232));
  }
  if (*(uint64_t **)(a1 + 240) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 240));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_15:
  sub_1889DA8(a1 + 184);
  sub_1889DA8(a1 + 168);
  sub_1587288((void *)(a1 + 144));
  sub_1889DA8(a1 + 120);
  sub_1889DA8(a1 + 96);
  sub_1889DE8((void *)(a1 + 72));
  sub_1587208((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1557210(uint64_t a1)
{
  sub_15570D4(a1);

  operator delete();
}

uint64_t sub_1557248(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_1553964(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 72);
  *(_DWORD *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 120) = 0;
  uint64_t v6 = *(unsigned int *)(a1 + 152);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_1556A4C(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 152) = 0;
  }
  *(_DWORD *)(a1 + 168) = 0;
  *(_DWORD *)(a1 + 184) = 0;
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 0x1F) != 0)
  {
    if ((v9 & 1) == 0)
    {
      if ((v9 & 2) == 0) {
        goto LABEL_12;
      }
LABEL_20:
      unint64_t v11 = *(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v11 + 23) < 0)
      {
        **(unsigned char **)unint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
        if ((v9 & 4) != 0) {
          goto LABEL_24;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v11 = 0;
        *(unsigned char *)(v11 + 23) = 0;
        if ((v9 & 4) != 0) {
          goto LABEL_24;
        }
      }
LABEL_13:
      if ((v9 & 8) == 0) {
        goto LABEL_14;
      }
LABEL_28:
      unint64_t v13 = *(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v13 + 23) < 0)
      {
        **(unsigned char **)unint64_t v13 = 0;
        *(void *)(v13 + 8) = 0;
        if ((v9 & 0x10) == 0) {
          goto LABEL_35;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v13 = 0;
        *(unsigned char *)(v13 + 23) = 0;
        if ((v9 & 0x10) == 0) {
          goto LABEL_35;
        }
      }
      goto LABEL_32;
    }
    unint64_t v10 = *(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_20;
      }
    }
LABEL_12:
    if ((v9 & 4) == 0) {
      goto LABEL_13;
    }
LABEL_24:
    unint64_t v12 = *(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v9 & 8) != 0) {
        goto LABEL_28;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v9 & 8) != 0) {
        goto LABEL_28;
      }
    }
LABEL_14:
    if ((v9 & 0x10) == 0) {
      goto LABEL_35;
    }
LABEL_32:
    unint64_t v14 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v14 + 23) < 0)
    {
      **(unsigned char **)unint64_t v14 = 0;
      *(void *)(v14 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v14 = 0;
      *(unsigned char *)(v14 + 23) = 0;
    }
  }
LABEL_35:
  if ((v9 & 0xE0) != 0)
  {
    *(_DWORD *)(a1 + 256) = 0;
    *(void *)(a1 + 248) = 0;
  }
  if ((v9 & 0x700) != 0)
  {
    *(_DWORD *)(a1 + 268) = 0;
    *(void *)(a1 + 260) = 0;
  }
  char v16 = *(unsigned char *)(a1 + 8);
  uint64_t v15 = a1 + 8;
  *(_DWORD *)(v15 + 32) = 0;
  if (v16)
  {
    return sub_188B4AC((uint64_t *)v15);
  }
  return result;
}

uint64_t sub_1557440(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v88 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v88, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v87 = (uint64_t *)(a1 + 8);
  uint64_t v7 = (uint64_t **)(a1 + 72);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v88 + 1);
    unsigned int v9 = **(unsigned char **)v88;
    if ((char)**(unsigned char **)v88 < 0)
    {
      int v10 = (char)*v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v88, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v88 + 2);
      }
    }
    *(void *)uint64_t v88 = v8;
    unsigned int v13 = v9 >> 3;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_162;
        }
        unint64_t v14 = (char *)(v8 + 1);
        unint64_t v15 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v16 = *v14;
        int v17 = v15 + (v16 << 7);
        unint64_t v15 = (v17 - 128);
        if (v16 < 0)
        {
          *(void *)uint64_t v88 = sub_188C138((uint64_t)v8, (v17 - 128));
          if (!*(void *)v88) {
            goto LABEL_177;
          }
          unint64_t v15 = v71;
        }
        else
        {
          unint64_t v14 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v88 = v14;
        }
        if (v15 <= 5)
        {
          *(_DWORD *)(a1 + 40) |= 0x20u;
          *(_DWORD *)(a1 + 248) = v15;
          goto LABEL_128;
        }
        if (*v87) {
          BOOL v82 = (std::string *)((*v87 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          BOOL v82 = (std::string *)sub_188DBD8(v87);
        }
        int v83 = 1;
        goto LABEL_157;
      case 2u:
        if (v9 != 18) {
          goto LABEL_162;
        }
        uint64_t v19 = v8 - 1;
        while (1)
        {
          uint64_t v20 = v19 + 1;
          *(void *)uint64_t v88 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 64);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 56), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 56) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            uint64_t v24 = sub_1563044(*(void *)(a1 + 48));
            uint64_t v23 = sub_188CDC8(a1 + 48, v24);
            uint64_t v20 = *(unsigned __int8 **)v88;
          }
          uint64_t v19 = (unsigned __int8 *)sub_1557E78(a3, v23, v20);
          *(void *)uint64_t v88 = v19;
          if (!v19) {
            goto LABEL_177;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 18) {
            goto LABEL_128;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_162;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v25 = *(void *)(a1 + 8);
        int v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          int v26 = (uint64_t *)*v26;
        }
        int v27 = (void *)(a1 + 208);
        goto LABEL_126;
      case 4u:
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x18u:
        goto LABEL_162;
      case 5u:
        if (v9 != 40) {
          goto LABEL_162;
        }
        v5 |= 0x40u;
        BOOL v28 = (char *)(v8 + 1);
        int v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v72 = sub_188C0D0((uint64_t)v8, v29);
          *(void *)uint64_t v88 = v72;
          *(_DWORD *)(a1 + 252) = v73;
          if (!v72) {
            goto LABEL_177;
          }
        }
        else
        {
          BOOL v28 = (char *)(v8 + 2);
LABEL_38:
          *(void *)uint64_t v88 = v28;
          *(_DWORD *)(a1 + 252) = v29;
        }
        goto LABEL_128;
      case 6u:
        if (v9 != 48) {
          goto LABEL_162;
        }
        v5 |= 0x80u;
        unint64_t v31 = (char *)(v8 + 1);
        int v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v33 = *v31;
        int v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v74 = sub_188C0D0((uint64_t)v8, v32);
          *(void *)uint64_t v88 = v74;
          *(_DWORD *)(a1 + 256) = v75;
          if (!v74) {
            goto LABEL_177;
          }
        }
        else
        {
          unint64_t v31 = (char *)(v8 + 2);
LABEL_43:
          *(void *)uint64_t v88 = v31;
          *(_DWORD *)(a1 + 256) = v32;
        }
        goto LABEL_128;
      case 7u:
        if (v9 != 58) {
          goto LABEL_162;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v34 = *(void *)(a1 + 8);
        int v26 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
        if (v34) {
          int v26 = (uint64_t *)*v26;
        }
        int v27 = (void *)(a1 + 216);
        goto LABEL_126;
      case 8u:
        if (v9 != 64) {
          goto LABEL_162;
        }
        int v35 = (char *)(v8 + 1);
        unint64_t v15 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v36 = *v35;
        int v37 = v15 + (v36 << 7);
        unint64_t v15 = (v37 - 128);
        if (v36 < 0)
        {
          *(void *)uint64_t v88 = sub_188C138((uint64_t)v8, (v37 - 128));
          if (!*(void *)v88) {
            goto LABEL_177;
          }
          unint64_t v15 = v76;
        }
        else
        {
          int v35 = (char *)(v8 + 2);
LABEL_52:
          *(void *)uint64_t v88 = v35;
        }
        if (v15 <= 1)
        {
          *(_DWORD *)(a1 + 40) |= 0x100u;
          *(_DWORD *)(a1 + 260) = v15;
          goto LABEL_128;
        }
        if (*v87) {
          BOOL v82 = (std::string *)((*v87 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          BOOL v82 = (std::string *)sub_188DBD8(v87);
        }
        int v83 = 8;
        goto LABEL_157;
      case 9u:
        if (v9 != 74) {
          goto LABEL_162;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v38 = *(void *)(a1 + 8);
        int v26 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
        if (v38) {
          int v26 = (uint64_t *)*v26;
        }
        int v27 = (void *)(a1 + 224);
        goto LABEL_126;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_162;
        }
        unsigned int v39 = (char *)(v8 + 1);
        unint64_t v15 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v40 = *v39;
        int v41 = v15 + (v40 << 7);
        unint64_t v15 = (v41 - 128);
        if (v40 < 0)
        {
          *(void *)uint64_t v88 = sub_188C138((uint64_t)v8, (v41 - 128));
          if (!*(void *)v88) {
            goto LABEL_177;
          }
          unint64_t v15 = v77;
        }
        else
        {
          unsigned int v39 = (char *)(v8 + 2);
LABEL_63:
          *(void *)uint64_t v88 = v39;
        }
        if (v15 > 1)
        {
          if (*v87) {
            BOOL v82 = (std::string *)((*v87 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            BOOL v82 = (std::string *)sub_188DBD8(v87);
          }
          int v83 = 10;
LABEL_157:
          sub_188C020(v83, v15, v82);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x200u;
          *(_DWORD *)(a1 + 264) = v15;
        }
        goto LABEL_128;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_162;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v42 = *(void *)(a1 + 8);
        int v26 = (uint64_t *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
        if (v42) {
          int v26 = (uint64_t *)*v26;
        }
        int v27 = (void *)(a1 + 232);
        goto LABEL_126;
      case 0x15u:
        if (v9 != 170) {
          goto LABEL_162;
        }
        uint64_t v43 = (const std::string::value_type *)(v8 - 2);
        while (1)
        {
          int v44 = (char *)(v43 + 2);
          *(void *)uint64_t v88 = v43 + 2;
          uint64_t v45 = *(_DWORD **)(a1 + 88);
          if (v45 && (uint64_t v46 = *(int *)(a1 + 80), (int)v46 < *v45))
          {
            *(_DWORD *)(a1 + 80) = v46 + 1;
            int v47 = *(std::string **)&v45[2 * v46 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v49 = v48;
            v49[1] = sub_3A6EDC;
            *uint64_t v48 = 0;
            v48[1] = 0;
            v48[2] = 0;
            int v47 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v48);
            int v44 = *(char **)v88;
          }
          uint64_t v43 = sub_188C244(v47, v44, (uint64_t)a3);
          *(void *)uint64_t v88 = v43;
          if (!v43) {
            goto LABEL_177;
          }
          if (*(void *)a3 <= (unint64_t)v43 || *(_WORD *)v43 != 426) {
            goto LABEL_128;
          }
        }
      case 0x16u:
        if (v9 == 178)
        {
          uint64_t v18 = (unsigned int *)(a1 + 96);
          goto LABEL_86;
        }
        if (v9 != 176) {
          goto LABEL_162;
        }
        int v80 = sub_110DAD8((uint64_t *)v88);
        sub_13370BC(a1, v80);
        goto LABEL_160;
      case 0x17u:
        if (v9 == 186)
        {
          uint64_t v18 = (unsigned int *)(a1 + 120);
LABEL_86:
          int v50 = sub_188C2CC(v18, v8, (uint64_t)a3);
LABEL_127:
          *(void *)uint64_t v88 = v50;
          if (!v50) {
            goto LABEL_177;
          }
          goto LABEL_128;
        }
        if (v9 != 184) {
          goto LABEL_162;
        }
        int v81 = sub_110DAD8((uint64_t *)v88);
        sub_1557F08(a1, v81);
        goto LABEL_160;
      case 0x19u:
        if (v9 != 202) {
          goto LABEL_162;
        }
        uint64_t v51 = (char *)(v8 - 2);
        while (1)
        {
          uint64_t v52 = (unsigned __int8 *)(v51 + 2);
          *(void *)uint64_t v88 = v51 + 2;
          int v53 = *(_DWORD **)(a1 + 160);
          if (v53 && (uint64_t v54 = *(int *)(a1 + 152), (int)v54 < *v53))
          {
            *(_DWORD *)(a1 + 152) = v54 + 1;
            uint64_t v55 = *(void *)&v53[2 * v54 + 2];
          }
          else
          {
            uint64_t v56 = sub_15631CC(*(void *)(a1 + 144));
            uint64_t v55 = sub_188CDC8(a1 + 144, v56);
            uint64_t v52 = *(unsigned __int8 **)v88;
          }
          uint64_t v51 = sub_1557F78(a3, v55, v52);
          *(void *)uint64_t v88 = v51;
          if (!v51) {
            goto LABEL_177;
          }
          if (*(void *)a3 <= (unint64_t)v51 || *(_WORD *)v51 != 458) {
            goto LABEL_128;
          }
        }
      case 0x1Au:
        if (v9 != 208) {
          goto LABEL_162;
        }
        v5 |= 0x400u;
        uint64_t v57 = (char *)(v8 + 1);
        int v58 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_101;
        }
        int v59 = *v57;
        int v58 = v58 + (v59 << 7) - 128;
        if (v59 < 0)
        {
          uint64_t v78 = sub_188C0D0((uint64_t)v8, v58);
          *(void *)uint64_t v88 = v78;
          *(_DWORD *)(a1 + 268) = v79;
          if (!v78) {
            goto LABEL_177;
          }
        }
        else
        {
          uint64_t v57 = (char *)(v8 + 2);
LABEL_101:
          *(void *)uint64_t v88 = v57;
          *(_DWORD *)(a1 + 268) = v58;
        }
        goto LABEL_128;
      case 0x1Bu:
        if (v9 != 216)
        {
          if (v9 == 218)
          {
            *(void *)&long long v89 = a1 + 168;
            *((void *)&v89 + 1) = sub_1552F18;
            uint64_t v90 = a1 + 8;
            int v91 = 27;
            int v50 = sub_1112E88((uint64_t)a3, (char *)v8, &v89);
            goto LABEL_127;
          }
          goto LABEL_162;
        }
        uint64_t v60 = (uint64_t)(v8 - 2);
        while (1)
        {
          *(void *)uint64_t v88 = v60 + 2;
          unint64_t v61 = *(unsigned __int8 *)(v60 + 2);
          char v62 = (char *)(v60 + 3);
          if (*(char *)(v60 + 2) < 0)
          {
            int v63 = *v62;
            int v64 = v61 + (v63 << 7);
            unint64_t v61 = (v64 - 128);
            if (v63 < 0)
            {
              *(void *)uint64_t v88 = sub_188C138(v60 + 2, (v64 - 128));
              if (!*(void *)v88) {
                goto LABEL_177;
              }
              unint64_t v61 = v67;
              goto LABEL_108;
            }
            char v62 = (char *)(v60 + 4);
          }
          *(void *)uint64_t v88 = v62;
LABEL_108:
          if (v61 > 8)
          {
            if (*v87) {
              uint64_t v68 = (std::string *)((*v87 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v68 = (std::string *)sub_188DBD8(v87);
            }
            sub_188C020(27, v61, v68);
          }
          else
          {
            uint64_t v65 = *(unsigned int *)(a1 + 168);
            if (v65 == *(_DWORD *)(a1 + 172))
            {
              int v66 = v65 + 1;
              sub_188C80C((unsigned int *)(a1 + 168), v65 + 1);
              *(_DWORD *)(*(void *)(a1 + 176) + 4 * v65) = v61;
            }
            else
            {
              *(_DWORD *)(*(void *)(a1 + 176) + 4 * v65) = v61;
              int v66 = v65 + 1;
            }
            *(_DWORD *)(a1 + 168) = v66;
          }
          uint64_t v60 = *(void *)v88;
          if (*(void *)a3 <= *(void *)v88 || **(_WORD **)v88 != 472) {
            goto LABEL_128;
          }
        }
      default:
        if (v13 != 50)
        {
          if (v13 != 51) {
            goto LABEL_162;
          }
          if (v9 == 154)
          {
            uint64_t v18 = (unsigned int *)(a1 + 184);
            goto LABEL_86;
          }
          if (v9 != 152) {
            goto LABEL_162;
          }
          int v84 = sub_110DAD8((uint64_t *)v88);
          sub_1558008(a1, v84);
LABEL_160:
          if (!*(void *)v88) {
            goto LABEL_177;
          }
LABEL_128:
          if (sub_11947B8((uint64_t)a3, (char **)v88, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9 == 146)
        {
          *(_DWORD *)(a1 + 40) |= 0x10u;
          uint64_t v69 = *(void *)(a1 + 8);
          int v26 = (uint64_t *)(v69 & 0xFFFFFFFFFFFFFFFCLL);
          if (v69) {
            int v26 = (uint64_t *)*v26;
          }
          int v27 = (void *)(a1 + 240);
LABEL_126:
          v70 = (std::string *)sub_1880F84(v27, v26);
          int v50 = (void *)sub_188C244(v70, *(char **)v88, (uint64_t)a3);
          goto LABEL_127;
        }
LABEL_162:
        if (v9) {
          BOOL v85 = (v9 & 7) == 4;
        }
        else {
          BOOL v85 = 1;
        }
        if (!v85)
        {
          if (v9 - 7600 > 0x18F)
          {
            if (*v87)
            {
              uint64_t v86 = (std::string *)((*v87 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v86 = (std::string *)sub_188DBD8(v87);
              uint64_t v8 = *(unsigned __int8 **)v88;
            }
            int v50 = sub_1885AC0(v9, v86, (char *)v8, a3);
          }
          else
          {
            int v50 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_253D908, v87, a3);
          }
          goto LABEL_127;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_177:
        }
          *(void *)uint64_t v88 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v88;
    }
  }
}

uint64_t sub_1557E78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1553B80(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_1557F08(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 120);
  uint64_t v4 = (_DWORD *)(a1 + 120);
  if (v5 == *(_DWORD *)(a1 + 124))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 120), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 128) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 128) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

char *sub_1557F78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1556AB8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_1558008(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 184);
  uint64_t v4 = (_DWORD *)(a1 + 184);
  if (v5 == *(_DWORD *)(a1 + 188))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 184), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 192) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 192) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

char *sub_1558078(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 248);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        unint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        unint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_155481C(v12, v14, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 252);
    char *v4 = 40;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v18 = *(_DWORD *)(a1 + 256);
    char *v4 = 48;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unsigned int v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(int *)(a1 + 260);
    char *v4 = 64;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(int *)(a1 + 264);
    char *v4 = 80;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 20, (const void **)(*(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v27 = *(unsigned int *)(a1 + 80);
  if ((int)v27 >= 1)
  {
    uint64_t v28 = 0;
    uint64_t v29 = 8 * v27;
    do
    {
      int v30 = *(void **)(*(void *)(a1 + 88) + v28 + 8);
      if (*((char *)v30 + 23) < 0)
      {
        int64_t v31 = v30[1];
        if (v31 > 127) {
          goto LABEL_63;
        }
      }
      else
      {
        int64_t v31 = *((unsigned __int8 *)v30 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v31)
      {
        *(_WORD *)uint64_t v4 = 426;
        v4[2] = v31;
        if (*((char *)v30 + 23) < 0) {
          int v30 = (void *)*v30;
        }
        int v32 = v4 + 3;
        memcpy(v32, v30, v31);
        uint64_t v4 = &v32[v31];
        goto LABEL_61;
      }
LABEL_63:
      uint64_t v4 = (char *)sub_188A868(a3, 21, (uint64_t)v30, v4);
LABEL_61:
      v28 += 8;
    }
    while (v29 != v28);
  }
  unsigned int v33 = *(_DWORD *)(a1 + 112);
  if ((int)v33 > 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *(_WORD *)uint64_t v4 = 434;
    uint64_t v34 = v4 + 2;
    if (v33 >= 0x80)
    {
      do
      {
        *v34++ = v33 | 0x80;
        unsigned int v35 = v33 >> 7;
        unsigned int v78 = v33 >> 14;
        v33 >>= 7;
      }
      while (v78);
    }
    else
    {
      LOBYTE(v35) = v33;
    }
    unsigned char *v34 = v35;
    uint64_t v4 = v34 + 1;
    int v36 = *(unsigned int **)(a1 + 104);
    int v37 = &v36[*(int *)(a1 + 96)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v39 = *v36++;
      unsigned int v38 = v39;
      char *v4 = v39;
      if (v39 > 0x7F)
      {
        char *v4 = v38 | 0x80;
        unsigned int v40 = v38 >> 7;
        v4[1] = v38 >> 7;
        v4 += 2;
        if (v38 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v41 = v40 >> 14;
            v40 >>= 7;
            *v4++ = v40;
          }
          while (v41);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v36 < v37);
  }
  unsigned int v42 = *(_DWORD *)(a1 + 136);
  if ((int)v42 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *(_WORD *)uint64_t v4 = 442;
    uint64_t v43 = v4 + 2;
    if (v42 >= 0x80)
    {
      do
      {
        *v43++ = v42 | 0x80;
        unsigned int v44 = v42 >> 7;
        unsigned int v79 = v42 >> 14;
        v42 >>= 7;
      }
      while (v79);
    }
    else
    {
      LOBYTE(v44) = v42;
    }
    unsigned char *v43 = v44;
    uint64_t v4 = v43 + 1;
    uint64_t v45 = *(unsigned int **)(a1 + 128);
    uint64_t v46 = &v45[*(int *)(a1 + 120)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v48 = *v45++;
      unsigned int v47 = v48;
      char *v4 = v48;
      if (v48 > 0x7F)
      {
        char *v4 = v47 | 0x80;
        unsigned int v49 = v47 >> 7;
        v4[1] = v47 >> 7;
        v4 += 2;
        if (v47 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v50 = v49 >> 14;
            v49 >>= 7;
            *v4++ = v49;
          }
          while (v50);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v45 < v46);
  }
  int v51 = *(_DWORD *)(a1 + 152);
  if (v51)
  {
    for (int j = 0; j != v51; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v53 = *(void *)(*(void *)(a1 + 160) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 458;
      unsigned int v54 = *(_DWORD *)(v53 + 20);
      v4[2] = v54;
      if (v54 > 0x7F) {
        uint64_t v55 = sub_188A9CC(v54, v4 + 2);
      }
      else {
        uint64_t v55 = v4 + 3;
      }
      uint64_t v4 = sub_1556C98(v53, (unint64_t)v55, a3);
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v56 = *(_DWORD *)(a1 + 268);
    *(_WORD *)uint64_t v4 = 464;
    v4[2] = v56;
    if (v56 > 0x7F)
    {
      v4[2] = v56 | 0x80;
      unsigned int v57 = v56 >> 7;
      v4[3] = v56 >> 7;
      v4 += 4;
      if (v56 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v58 = v57 >> 14;
          v57 >>= 7;
          *v4++ = v57;
        }
        while (v58);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v59 = *(unsigned int *)(a1 + 168);
  if ((int)v59 >= 1)
  {
    for (uint64_t k = 0; k != v59; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v61 = *(int *)(*(void *)(a1 + 176) + 4 * k);
      *(_WORD *)uint64_t v4 = 472;
      v4[2] = v61;
      if (v61 > 0x7F)
      {
        v4[2] = v61 | 0x80;
        unint64_t v62 = v61 >> 7;
        v4[3] = v61 >> 7;
        v4 += 4;
        if (v61 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v63 = v62 >> 14;
            v62 >>= 7;
            *v4++ = v62;
          }
          while (v63);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x10) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 50, (const void **)(*(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  unsigned int v64 = *(_DWORD *)(a1 + 200);
  if ((int)v64 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *(_WORD *)uint64_t v4 = 922;
    uint64_t v65 = v4 + 2;
    if (v64 >= 0x80)
    {
      do
      {
        *v65++ = v64 | 0x80;
        unsigned int v66 = v64 >> 7;
        unsigned int v80 = v64 >> 14;
        v64 >>= 7;
      }
      while (v80);
    }
    else
    {
      LOBYTE(v66) = v64;
    }
    unsigned char *v65 = v66;
    uint64_t v4 = v65 + 1;
    unint64_t v67 = *(unsigned int **)(a1 + 192);
    uint64_t v68 = &v67[*(int *)(a1 + 184)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v70 = *v67++;
      unsigned int v69 = v70;
      char *v4 = v70;
      if (v70 > 0x7F)
      {
        char *v4 = v69 | 0x80;
        unsigned int v71 = v69 >> 7;
        v4[1] = v69 >> 7;
        v4 += 2;
        if (v69 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v72 = v71 >> 14;
            v71 >>= 7;
            *v4++ = v71;
          }
          while (v72);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v67 < v68);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v73 = *(void *)(a1 + 8);
  if ((v73 & 1) == 0) {
    return v4;
  }
  unint64_t v75 = v73 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v75 + 31) < 0)
  {
    unint64_t v76 = *(void **)(v75 + 8);
    uint64_t v77 = *(void *)(v75 + 16);
  }
  else
  {
    unint64_t v76 = (void *)(v75 + 8);
    LODWORD(v77) = *(unsigned __int8 *)(v75 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v77)
  {
    uint64_t v81 = (int)v77;
    memcpy(v4, v76, (int)v77);
    v4 += v81;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v76, v77, v4);
}

uint64_t sub_15589EC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1555160(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 80);
  uint64_t v11 = v4 + 2 * v10;
  if ((int)v10 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v11 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      --v10;
    }
    while (v10);
  }
  uint64_t v16 = sub_188D4F0((unsigned int *)(a1 + 96));
  uint64_t v17 = 10;
  uint64_t v18 = (9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v16 >= 0) {
    uint64_t v17 = v18;
  }
  uint64_t v19 = v11 + v17 + 2;
  if (v16) {
    int v20 = v16;
  }
  else {
    int v20 = 0;
  }
  if (!v16) {
    uint64_t v19 = v11;
  }
  *(_DWORD *)(a1 + 112) = v20;
  uint64_t v21 = v19 + v16;
  uint64_t v22 = sub_188D4F0((unsigned int *)(a1 + 120));
  uint64_t v23 = 10;
  uint64_t v24 = (9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v22 >= 0) {
    uint64_t v23 = v24;
  }
  uint64_t v25 = v21 + v23 + 2;
  if (v22) {
    int v26 = v22;
  }
  else {
    int v26 = 0;
  }
  if (!v22) {
    uint64_t v25 = v21;
  }
  *(_DWORD *)(a1 + 136) = v26;
  uint64_t v27 = v25 + v22;
  uint64_t v28 = *(int *)(a1 + 152);
  uint64_t v29 = v27 + 2 * v28;
  uint64_t v30 = *(void *)(a1 + 160);
  if (v30) {
    int64_t v31 = (uint64_t *)(v30 + 8);
  }
  else {
    int64_t v31 = 0;
  }
  if (v28)
  {
    uint64_t v32 = 8 * v28;
    do
    {
      uint64_t v33 = *v31++;
      uint64_t v34 = sub_1556E30(v33);
      v29 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6);
      v32 -= 8;
    }
    while (v32);
  }
  uint64_t v35 = *(unsigned int *)(a1 + 168);
  if (v35)
  {
    int v36 = 0;
    uint64_t v37 = 0;
    do
    {
      int v38 = *(_DWORD *)(*(void *)(a1 + 176) + 4 * v36);
      if (v38 < 0) {
        uint64_t v39 = 10;
      }
      else {
        uint64_t v39 = (9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6;
      }
      v37 += v39;
      ++v36;
    }
    while (v35 != v36);
  }
  else
  {
    uint64_t v37 = 0;
  }
  uint64_t v40 = v29 + 2 * v35 + v37;
  uint64_t v41 = sub_188D4F0((unsigned int *)(a1 + 184));
  if (v41)
  {
    int v42 = v41;
    if ((v41 & 0x80000000) != 0) {
      uint64_t v43 = 10;
    }
    else {
      uint64_t v43 = (9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6;
    }
    v40 += v43 + 2;
  }
  else
  {
    int v42 = 0;
  }
  *(_DWORD *)(a1 + 200) = v42;
  uint64_t result = v40 + v41;
  int v45 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v45) {
    goto LABEL_56;
  }
  if (v45)
  {
    unint64_t v47 = *(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v48 = *(unsigned __int8 *)(v47 + 23);
    uint64_t v49 = *(void *)(v47 + 8);
    if ((v48 & 0x80u) == 0) {
      uint64_t v49 = v48;
    }
    result += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v45 & 2) == 0)
    {
LABEL_49:
      if ((v45 & 4) == 0) {
        goto LABEL_50;
      }
      goto LABEL_69;
    }
  }
  else if ((v45 & 2) == 0)
  {
    goto LABEL_49;
  }
  unint64_t v50 = *(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v51 = *(unsigned __int8 *)(v50 + 23);
  uint64_t v52 = *(void *)(v50 + 8);
  if ((v51 & 0x80u) == 0) {
    uint64_t v52 = v51;
  }
  result += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v45 & 4) == 0)
  {
LABEL_50:
    if ((v45 & 8) == 0) {
      goto LABEL_51;
    }
    goto LABEL_72;
  }
LABEL_69:
  unint64_t v53 = *(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v54 = *(unsigned __int8 *)(v53 + 23);
  uint64_t v55 = *(void *)(v53 + 8);
  if ((v54 & 0x80u) == 0) {
    uint64_t v55 = v54;
  }
  result += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v45 & 8) == 0)
  {
LABEL_51:
    if ((v45 & 0x10) == 0) {
      goto LABEL_52;
    }
    goto LABEL_75;
  }
LABEL_72:
  unint64_t v56 = *(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v57 = *(unsigned __int8 *)(v56 + 23);
  uint64_t v58 = *(void *)(v56 + 8);
  if ((v57 & 0x80u) == 0) {
    uint64_t v58 = v57;
  }
  result += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v45 & 0x10) == 0)
  {
LABEL_52:
    if ((v45 & 0x20) == 0) {
      goto LABEL_53;
    }
LABEL_78:
    int v62 = *(_DWORD *)(a1 + 248);
    if (v62 < 0) {
      uint64_t v63 = 11;
    }
    else {
      uint64_t v63 = ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v63;
    if ((v45 & 0x40) == 0)
    {
LABEL_54:
      if ((v45 & 0x80) == 0) {
        goto LABEL_56;
      }
      goto LABEL_55;
    }
    goto LABEL_84;
  }
LABEL_75:
  unint64_t v59 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v60 = *(unsigned __int8 *)(v59 + 23);
  uint64_t v61 = *(void *)(v59 + 8);
  if ((v60 & 0x80u) == 0) {
    uint64_t v61 = v60;
  }
  result += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v45 & 0x20) != 0) {
    goto LABEL_78;
  }
LABEL_53:
  if ((v45 & 0x40) == 0) {
    goto LABEL_54;
  }
LABEL_84:
  result += ((9 * (__clz(*(_DWORD *)(a1 + 252) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v45 & 0x80) != 0) {
LABEL_55:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 256) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_56:
  if ((v45 & 0x700) == 0) {
    goto LABEL_61;
  }
  if ((v45 & 0x100) != 0)
  {
    int v64 = *(_DWORD *)(a1 + 260);
    if (v64 < 0) {
      uint64_t v65 = 11;
    }
    else {
      uint64_t v65 = ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v65;
    if ((v45 & 0x200) == 0)
    {
LABEL_59:
      if ((v45 & 0x400) == 0) {
        goto LABEL_61;
      }
      goto LABEL_60;
    }
  }
  else if ((v45 & 0x200) == 0)
  {
    goto LABEL_59;
  }
  int v66 = *(_DWORD *)(a1 + 264);
  if (v66 < 0) {
    uint64_t v67 = 11;
  }
  else {
    uint64_t v67 = ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v67;
  if ((v45 & 0x400) != 0) {
LABEL_60:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 268) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_61:
  uint64_t v46 = *(void *)(a1 + 8);
  if (v46)
  {
    unint64_t v68 = v46 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v68 + 31) < 0) {
      uint64_t v69 = *(void *)(v68 + 16);
    }
    else {
      uint64_t v69 = *(unsigned __int8 *)(v68 + 31);
    }
    result += v69;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_1558F24(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_158789C((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 96);
  if (v14)
  {
    uint64_t v15 = *(int *)(a1 + 96);
    sub_188C80C((unsigned int *)(a1 + 96), v15 + v14);
    uint64_t v16 = *(void *)(a1 + 104);
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
    memcpy((void *)(v16 + 4 * v15), *(const void **)(a2 + 104), 4 * *(int *)(a2 + 96));
  }
  int v17 = *(_DWORD *)(a2 + 120);
  if (v17)
  {
    uint64_t v18 = *(int *)(a1 + 120);
    sub_188C80C((unsigned int *)(a1 + 120), v18 + v17);
    uint64_t v19 = *(void *)(a1 + 128);
    *(_DWORD *)(a1 + 120) += *(_DWORD *)(a2 + 120);
    memcpy((void *)(v19 + 4 * v18), *(const void **)(a2 + 128), 4 * *(int *)(a2 + 120));
  }
  int v20 = *(_DWORD *)(a2 + 152);
  if (v20)
  {
    uint64_t v21 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v22 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_1587928((uint64_t *)(a1 + 144), v22, v21, v20, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v23 = *(_DWORD *)(a1 + 152) + v20;
    *(_DWORD *)(a1 + 152) = v23;
    uint64_t v24 = *(int **)(a1 + 160);
    if (*v24 < v23) {
      *uint64_t v24 = v23;
    }
  }
  int v25 = *(_DWORD *)(a2 + 168);
  if (v25)
  {
    uint64_t v26 = *(int *)(a1 + 168);
    sub_188C80C((unsigned int *)(a1 + 168), v26 + v25);
    uint64_t v27 = *(void *)(a1 + 176);
    *(_DWORD *)(a1 + 168) += *(_DWORD *)(a2 + 168);
    memcpy((void *)(v27 + 4 * v26), *(const void **)(a2 + 176), 4 * *(int *)(a2 + 168));
  }
  int v28 = *(_DWORD *)(a2 + 184);
  if (v28)
  {
    uint64_t v29 = *(int *)(a1 + 184);
    sub_188C80C((unsigned int *)(a1 + 184), v29 + v28);
    uint64_t v30 = *(void *)(a1 + 192);
    *(_DWORD *)(a1 + 184) += *(_DWORD *)(a2 + 184);
    memcpy((void *)(v30 + 4 * v29), *(const void **)(a2 + 192), 4 * *(int *)(a2 + 184));
  }
  int v31 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v31)
  {
    if (v31)
    {
      uint64_t v33 = (long long *)(*(void *)(a2 + 208) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v34 = *(void *)(a1 + 8);
      uint64_t v35 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        uint64_t v35 = (uint64_t *)*v35;
      }
      sub_1881DF4((std::string **)(a1 + 208), v33, v35);
      if ((v31 & 2) == 0)
      {
LABEL_21:
        if ((v31 & 4) == 0) {
          goto LABEL_22;
        }
        goto LABEL_45;
      }
    }
    else if ((v31 & 2) == 0)
    {
      goto LABEL_21;
    }
    int v36 = (long long *)(*(void *)(a2 + 216) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v37 = *(void *)(a1 + 8);
    int v38 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
    if (v37) {
      int v38 = (uint64_t *)*v38;
    }
    sub_1881DF4((std::string **)(a1 + 216), v36, v38);
    if ((v31 & 4) == 0)
    {
LABEL_22:
      if ((v31 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_48;
    }
LABEL_45:
    uint64_t v39 = (long long *)(*(void *)(a2 + 224) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v40 = *(void *)(a1 + 8);
    uint64_t v41 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
    if (v40) {
      uint64_t v41 = (uint64_t *)*v41;
    }
    sub_1881DF4((std::string **)(a1 + 224), v39, v41);
    if ((v31 & 8) == 0)
    {
LABEL_23:
      if ((v31 & 0x10) == 0) {
        goto LABEL_24;
      }
      goto LABEL_51;
    }
LABEL_48:
    int v42 = (long long *)(*(void *)(a2 + 232) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v43 = *(void *)(a1 + 8);
    unsigned int v44 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
    if (v43) {
      unsigned int v44 = (uint64_t *)*v44;
    }
    sub_1881DF4((std::string **)(a1 + 232), v42, v44);
    if ((v31 & 0x10) == 0)
    {
LABEL_24:
      if ((v31 & 0x20) == 0) {
        goto LABEL_25;
      }
      goto LABEL_54;
    }
LABEL_51:
    int v45 = (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v46 = *(void *)(a1 + 8);
    unint64_t v47 = (uint64_t *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
    if (v46) {
      unint64_t v47 = (uint64_t *)*v47;
    }
    sub_1881DF4((std::string **)(a1 + 240), v45, v47);
    if ((v31 & 0x20) == 0)
    {
LABEL_25:
      if ((v31 & 0x40) == 0) {
        goto LABEL_26;
      }
      goto LABEL_55;
    }
LABEL_54:
    *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
    if ((v31 & 0x40) == 0)
    {
LABEL_26:
      if ((v31 & 0x80) == 0)
      {
LABEL_28:
        *(_DWORD *)(a1 + 40) |= v31;
        goto LABEL_29;
      }
LABEL_27:
      *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
      goto LABEL_28;
    }
LABEL_55:
    *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
    if ((v31 & 0x80) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_29:
  if ((v31 & 0x700) == 0) {
    goto LABEL_35;
  }
  if ((v31 & 0x100) == 0)
  {
    if ((v31 & 0x200) == 0) {
      goto LABEL_32;
    }
LABEL_58:
    *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
    if ((v31 & 0x400) == 0) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
  if ((v31 & 0x200) != 0) {
    goto LABEL_58;
  }
LABEL_32:
  if ((v31 & 0x400) != 0) {
LABEL_33:
  }
    *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
LABEL_34:
  *(_DWORD *)(a1 + 40) |= v31;
LABEL_35:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v32 = *(void *)(a2 + 8);
  if (v32)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v32 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_155937C(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 64) + 8 * v2) + 16);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_15593E8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Route");
}

void *sub_15593F8(void *a1)
{
  BOOL v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_155946C(void *a1)
{
  sub_15593F8(a1);

  operator delete();
}

uint64_t sub_15594A4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_15594CC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v21 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
    goto LABEL_39;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v21 + 1;
    unsigned int v8 = *v21;
    if (*v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v21 + 2;
      }
    }
    uint64_t v21 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 != 16) {
        goto LABEL_12;
      }
      int v14 = v7 + 1;
      unint64_t v15 = *v7;
      if (*v7 < 0)
      {
        int v16 = *v14;
        int v17 = v15 + (v16 << 7);
        unint64_t v15 = (v17 - 128);
        if (v16 < 0)
        {
          uint64_t v21 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
          if (!v21) {
            goto LABEL_40;
          }
          unint64_t v15 = v18;
          goto LABEL_25;
        }
        int v14 = v7 + 2;
      }
      uint64_t v21 = v14;
LABEL_25:
      if (v15 > 1)
      {
        if (*v6) {
          uint64_t v19 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(2, v15, v19);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        *(_DWORD *)(a1 + 32) = v15;
      }
      goto LABEL_28;
    }
    if (v8 >> 3 == 1 && v8 == 9)
    {
      *(void *)(a1 + 24) = *(void *)v7;
      uint64_t v21 = v7 + 8;
      int v5 = 1;
      goto LABEL_28;
    }
LABEL_12:
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v21;
    }
    uint64_t v21 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v21) {
      goto LABEL_40;
    }
LABEL_28:
    if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
      goto LABEL_39;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_39;
  }
LABEL_40:
  uint64_t v21 = 0;
LABEL_39:
  *(_DWORD *)(a1 + 16) |= v5;
  return v21;
}

_OWORD *sub_15596C0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(int *)(a1 + 32);
    *(unsigned char *)uint64_t v4 = 16;
    *((unsigned char *)v4 + 1) = v8;
    if (v8 > 0x7F)
    {
      *((unsigned char *)v4 + 1) = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      *((unsigned char *)v4 + 2) = v8 >> 7;
      uint64_t v4 = (_OWORD *)((char *)v4 + 3);
      if (v8 >= 0x4000)
      {
        do
        {
          *((unsigned char *)v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *(unsigned char *)uint64_t v4 = v9;
          uint64_t v4 = (_OWORD *)((char *)v4 + 1);
        }
        while (v10);
      }
    }
    else
    {
      uint64_t v4 = (_OWORD *)((char *)v4 + 2);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    return (_OWORD *)((char *)v4 + v16);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_1559820(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 32);
      if (v3 < 0) {
        uint64_t v4 = 11;
      }
      else {
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v4;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_15598AC()
{
  return 1;
}

void *sub_15598B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Timepoint");
}

uint64_t sub_15598C4(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253DA40)
  {
    int v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_15593F8(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1559998(uint64_t a1)
{
  sub_15598C4(a1);

  operator delete();
}

uint64_t sub_15599D0(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_15594A4(*(void *)(result + 48));
  }
LABEL_7:
  if ((v2 & 0xFC) != 0)
  {
    *(_DWORD *)(v1 + 64) = 0;
    *(void *)(v1 + 56) = 0;
  }
  if ((v2 & 0xF00) != 0)
  {
    *(_DWORD *)(v1 + 68) = 800000;
    *(_WORD *)(v1 + 72) = 257;
    *(_DWORD *)(v1 + 76) = 1;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1559A9C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v80 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v80, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v80 + 1);
    unsigned int v9 = **(unsigned char **)v80;
    if ((char)**(unsigned char **)v80 < 0)
    {
      int v10 = (char)*v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v80, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v80 + 2);
      }
    }
    *(void *)unsigned int v80 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_117;
        }
        unint64_t v13 = (char *)(v8 + 1);
        unint64_t v14 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)unsigned int v80 = sub_188C138((uint64_t)v8, (v16 - 128));
          if (!*(void *)v80) {
            goto LABEL_143;
          }
          unint64_t v14 = v59;
        }
        else
        {
          unint64_t v13 = (char *)(v8 + 2);
LABEL_13:
          *(void *)unsigned int v80 = v13;
        }
        if (v14 <= 5)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 56) = v14;
          goto LABEL_125;
        }
        if (*v7) {
          unsigned int v78 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unsigned int v78 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v79 = 1;
        goto LABEL_136;
      case 2u:
        if (v9 != 16) {
          goto LABEL_117;
        }
        v5 |= 0x10u;
        int v17 = (char *)(v8 + 1);
        uint64_t v18 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v19 = *v17;
        uint64_t v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v60 = sub_188C138((uint64_t)v8, v18);
          *(void *)unsigned int v80 = v60;
          *(unsigned char *)(a1 + 64) = v61 != 0;
          if (!v60) {
            goto LABEL_143;
          }
        }
        else
        {
          int v17 = (char *)(v8 + 2);
LABEL_20:
          *(void *)unsigned int v80 = v17;
          *(unsigned char *)(a1 + 64) = v18 != 0;
        }
        goto LABEL_125;
      case 3u:
        if (v9 != 24) {
          goto LABEL_117;
        }
        v5 |= 0x200u;
        int v20 = (char *)(v8 + 1);
        uint64_t v21 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v62 = sub_188C138((uint64_t)v8, v21);
          *(void *)unsigned int v80 = v62;
          *(unsigned char *)(a1 + 72) = v63 != 0;
          if (!v62) {
            goto LABEL_143;
          }
        }
        else
        {
          int v20 = (char *)(v8 + 2);
LABEL_25:
          *(void *)unsigned int v80 = v20;
          *(unsigned char *)(a1 + 72) = v21 != 0;
        }
        goto LABEL_125;
      case 4u:
        if (v9 != 32) {
          goto LABEL_117;
        }
        v5 |= 0x20u;
        int v23 = (char *)(v8 + 1);
        uint64_t v24 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v64 = sub_188C138((uint64_t)v8, v24);
          *(void *)unsigned int v80 = v64;
          *(unsigned char *)(a1 + 65) = v65 != 0;
          if (!v64) {
            goto LABEL_143;
          }
        }
        else
        {
          int v23 = (char *)(v8 + 2);
LABEL_30:
          *(void *)unsigned int v80 = v23;
          *(unsigned char *)(a1 + 65) = v24 != 0;
        }
        goto LABEL_125;
      case 7u:
        if (v9 != 56) {
          goto LABEL_117;
        }
        uint64_t v26 = (char *)(v8 + 1);
        unint64_t v14 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v27 = *v26;
        int v28 = v14 + (v27 << 7);
        unint64_t v14 = (v28 - 128);
        if (v27 < 0)
        {
          *(void *)unsigned int v80 = sub_188C138((uint64_t)v8, (v28 - 128));
          if (!*(void *)v80) {
            goto LABEL_143;
          }
          unint64_t v14 = v66;
        }
        else
        {
          uint64_t v26 = (char *)(v8 + 2);
LABEL_35:
          *(void *)unsigned int v80 = v26;
        }
        if (v14 <= 1)
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 60) = v14;
          goto LABEL_125;
        }
        if (*v7) {
          unsigned int v78 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unsigned int v78 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v79 = 7;
        goto LABEL_136;
      case 8u:
        if (v9 != 64) {
          goto LABEL_117;
        }
        uint64_t v29 = (char *)(v8 + 1);
        unint64_t v14 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v30 = *v29;
        int v31 = v14 + (v30 << 7);
        unint64_t v14 = (v31 - 128);
        if (v30 < 0)
        {
          *(void *)unsigned int v80 = sub_188C138((uint64_t)v8, (v31 - 128));
          if (!*(void *)v80) {
            goto LABEL_143;
          }
          unint64_t v14 = v67;
        }
        else
        {
          uint64_t v29 = (char *)(v8 + 2);
LABEL_42:
          *(void *)unsigned int v80 = v29;
        }
        if ((v14 - 1) > 2)
        {
          if (*v7) {
            unsigned int v78 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unsigned int v78 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v79 = 8;
LABEL_136:
          sub_188C020(v79, v14, v78);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x800u;
          *(_DWORD *)(a1 + 76) = v14;
        }
        goto LABEL_125;
      case 9u:
        if (v9 != 74) {
          goto LABEL_117;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v32 = *(void *)(a1 + 8);
        uint64_t v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
        if (v32) {
          uint64_t v33 = (uint64_t *)*v33;
        }
        uint64_t v34 = (std::string *)sub_1880F84((void *)(a1 + 40), v33);
        uint64_t v35 = (void *)sub_188C244(v34, *(char **)v80, (uint64_t)a3);
        goto LABEL_124;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_117;
        }
        v5 |= 0x40u;
        int v36 = (char *)(v8 + 1);
        uint64_t v37 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v68 = sub_188C138((uint64_t)v8, v37);
          *(void *)unsigned int v80 = v68;
          *(unsigned char *)(a1 + 66) = v69 != 0;
          if (!v68) {
            goto LABEL_143;
          }
        }
        else
        {
          int v36 = (char *)(v8 + 2);
LABEL_53:
          *(void *)unsigned int v80 = v36;
          *(unsigned char *)(a1 + 66) = v37 != 0;
        }
        goto LABEL_125;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_117;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v39 = *(void *)(a1 + 48);
        if (!v39)
        {
          uint64_t v40 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v40 = (void *)*v40;
          }
          uint64_t v39 = sub_15632A8((uint64_t)v40);
          *(void *)(a1 + 48) = v39;
          uint64_t v8 = *(unsigned __int8 **)v80;
        }
        uint64_t v35 = sub_155A2C4(a3, v39, v8);
        goto LABEL_124;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_117;
        }
        v5 |= 0x400u;
        uint64_t v41 = (char *)(v8 + 1);
        uint64_t v42 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_64;
        }
        int v43 = *v41;
        uint64_t v42 = v42 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t v70 = sub_188C138((uint64_t)v8, v42);
          *(void *)unsigned int v80 = v70;
          *(unsigned char *)(a1 + 73) = v71 != 0;
          if (!v70) {
            goto LABEL_143;
          }
        }
        else
        {
          uint64_t v41 = (char *)(v8 + 2);
LABEL_64:
          *(void *)unsigned int v80 = v41;
          *(unsigned char *)(a1 + 73) = v42 != 0;
        }
        goto LABEL_125;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_117;
        }
        v5 |= 0x80u;
        unsigned int v44 = (char *)(v8 + 1);
        uint64_t v45 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_69;
        }
        int v46 = *v44;
        uint64_t v45 = v45 + (v46 << 7) - 128;
        if (v46 < 0)
        {
          uint64_t v72 = sub_188C138((uint64_t)v8, v45);
          *(void *)unsigned int v80 = v72;
          *(unsigned char *)(a1 + 67) = v73 != 0;
          if (!v72) {
            goto LABEL_143;
          }
        }
        else
        {
          unsigned int v44 = (char *)(v8 + 2);
LABEL_69:
          *(void *)unsigned int v80 = v44;
          *(unsigned char *)(a1 + 67) = v45 != 0;
        }
        goto LABEL_125;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_117;
        }
        v5 |= 0x100u;
        unint64_t v47 = (char *)(v8 + 1);
        int v48 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_74;
        }
        int v49 = *v47;
        int v48 = v48 + (v49 << 7) - 128;
        if (v49 < 0)
        {
          uint64_t v74 = sub_188C0D0((uint64_t)v8, v48);
          *(void *)unsigned int v80 = v74;
          *(_DWORD *)(a1 + 68) = v75;
          if (!v74) {
            goto LABEL_143;
          }
        }
        else
        {
          unint64_t v47 = (char *)(v8 + 2);
LABEL_74:
          *(void *)unsigned int v80 = v47;
          *(_DWORD *)(a1 + 68) = v48;
        }
        goto LABEL_125;
      case 0x10u:
        if (v9 == 128)
        {
          uint64_t v50 = (uint64_t)(v8 - 2);
          while (1)
          {
            *(void *)unsigned int v80 = v50 + 2;
            unint64_t v51 = *(unsigned __int8 *)(v50 + 2);
            uint64_t v52 = (char *)(v50 + 3);
            if (*(char *)(v50 + 2) < 0)
            {
              int v53 = *v52;
              int v54 = v51 + (v53 << 7);
              unint64_t v51 = (v54 - 128);
              if (v53 < 0)
              {
                *(void *)unsigned int v80 = sub_188C138(v50 + 2, (v54 - 128));
                if (!*(void *)v80) {
                  goto LABEL_143;
                }
                unint64_t v51 = v57;
                goto LABEL_81;
              }
              uint64_t v52 = (char *)(v50 + 4);
            }
            *(void *)unsigned int v80 = v52;
LABEL_81:
            if (v51 > 5)
            {
              if (*v7) {
                uint64_t v58 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v58 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(16, v51, v58);
            }
            else
            {
              uint64_t v55 = *(unsigned int *)(a1 + 24);
              if (v55 == *(_DWORD *)(a1 + 28))
              {
                int v56 = v55 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v55 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v55) = v51;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v55) = v51;
                int v56 = v55 + 1;
              }
              *(_DWORD *)(a1 + 24) = v56;
            }
            uint64_t v50 = *(void *)v80;
            if (*(void *)a3 <= *(void *)v80 || **(_WORD **)v80 != 384) {
              goto LABEL_125;
            }
          }
        }
        if (v9 == 130)
        {
          *(void *)&long long v81 = a1 + 24;
          *((void *)&v81 + 1) = sub_1553088;
          uint64_t v82 = a1 + 8;
          int v83 = 16;
          uint64_t v35 = sub_1112E88((uint64_t)a3, (char *)v8, &v81);
LABEL_124:
          *(void *)unsigned int v80 = v35;
          if (!v35) {
            goto LABEL_143;
          }
LABEL_125:
          if (sub_11947B8((uint64_t)a3, (char **)v80, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_117:
        if (v9) {
          BOOL v76 = (v9 & 7) == 4;
        }
        else {
          BOOL v76 = 1;
        }
        if (!v76)
        {
          if (*v7)
          {
            uint64_t v77 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v77 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v80;
          }
          uint64_t v35 = sub_1885AC0(v9, v77, (char *)v8, a3);
          goto LABEL_124;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_143:
        }
          *(void *)unsigned int v80 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v80;
      default:
        goto LABEL_117;
    }
  }
}

char *sub_155A2C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15594CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_155A354(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 64);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
    if ((v6 & 0x200) == 0)
    {
LABEL_10:
      if ((v6 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 72);
  unsigned char *v4 = 24;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_28;
    }
    goto LABEL_22;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 65);
  unsigned char *v4 = 32;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 8) != 0)
  {
LABEL_22:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 60);
    unsigned char *v4 = 56;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_28:
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 76);
    unsigned char *v4 = 64;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x40) == 0)
    {
LABEL_37:
      if ((v6 & 2) == 0) {
        goto LABEL_38;
      }
      goto LABEL_46;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_37;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v19 = *(unsigned char *)(a1 + 66);
  unsigned char *v4 = 80;
  v4[1] = v19;
  v4 += 2;
  if ((v6 & 2) == 0)
  {
LABEL_38:
    if ((v6 & 0x400) == 0) {
      goto LABEL_39;
    }
    goto LABEL_52;
  }
LABEL_46:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v20 = *(void *)(a1 + 48);
  unsigned char *v4 = 90;
  unsigned int v21 = *(_DWORD *)(v20 + 20);
  v4[1] = v21;
  if (v21 > 0x7F) {
    int v22 = sub_188A9CC(v21, v4 + 1);
  }
  else {
    int v22 = v4 + 2;
  }
  uint64_t v4 = sub_15596C0(v20, (unint64_t)v22, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_39:
    if ((v6 & 0x80) == 0) {
      goto LABEL_40;
    }
    goto LABEL_55;
  }
LABEL_52:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v23 = *(unsigned char *)(a1 + 73);
  unsigned char *v4 = 96;
  v4[1] = v23;
  v4 += 2;
  if ((v6 & 0x80) == 0)
  {
LABEL_40:
    if ((v6 & 0x100) == 0) {
      goto LABEL_64;
    }
    goto LABEL_58;
  }
LABEL_55:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v24 = *(unsigned char *)(a1 + 67);
  unsigned char *v4 = 112;
  v4[1] = v24;
  v4 += 2;
  if ((v6 & 0x100) != 0)
  {
LABEL_58:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 68);
    unsigned char *v4 = 120;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_64:
  uint64_t v28 = *(unsigned int *)(a1 + 24);
  if ((int)v28 >= 1)
  {
    for (uint64_t i = 0; i != v28; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v30 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *(_WORD *)uint64_t v4 = 384;
      v4[2] = v30;
      if (v30 > 0x7F)
      {
        v4[2] = v30 | 0x80;
        unint64_t v31 = v30 >> 7;
        v4[3] = v30 >> 7;
        v4 += 4;
        if (v30 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v32 = v31 >> 14;
            v31 >>= 7;
            *v4++ = v31;
          }
          while (v32);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if ((v33 & 1) == 0) {
    return v4;
  }
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v35 + 31) < 0)
  {
    int v36 = *(void **)(v35 + 8);
    uint64_t v37 = *(void *)(v35 + 16);
  }
  else
  {
    int v36 = (void *)(v35 + 8);
    LODWORD(v37) = *(unsigned __int8 *)(v35 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v37)
  {
    uint64_t v38 = (int)v37;
    memcpy(v4, v36, (int)v37);
    v4 += v38;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v36, v37, v4);
}

uint64_t sub_155A894(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + 2 * v2;
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_36;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
LABEL_19:
      int v13 = *(_DWORD *)(a1 + 56);
      if (v13 < 0) {
        uint64_t v14 = 11;
      }
      else {
        uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v7 += v14;
      if ((v8 & 8) == 0) {
        goto LABEL_27;
      }
      goto LABEL_23;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v12 = sub_1559820(*(void *)(a1 + 48));
  v7 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) != 0) {
    goto LABEL_19;
  }
LABEL_13:
  if ((v8 & 8) != 0)
  {
LABEL_23:
    int v15 = *(_DWORD *)(a1 + 60);
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v7 += v16;
  }
LABEL_27:
  uint64_t v17 = v7 + 2;
  if ((v8 & 0x10) == 0) {
    uint64_t v17 = v7;
  }
  if ((v8 & 0x20) != 0) {
    v17 += 2;
  }
  if ((v8 & 0x40) != 0) {
    v17 += 2;
  }
  if ((v8 & 0x80) != 0) {
    uint64_t v7 = v17 + 2;
  }
  else {
    uint64_t v7 = v17;
  }
LABEL_36:
  if ((v8 & 0xF00) != 0)
  {
    if ((v8 & 0x100) != 0) {
      v7 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v18 = v7 + 2;
    if ((v8 & 0x200) == 0) {
      uint64_t v18 = v7;
    }
    if ((v8 & 0x400) != 0) {
      uint64_t v7 = v18 + 2;
    }
    else {
      uint64_t v7 = v18;
    }
    if ((v8 & 0x800) != 0)
    {
      int v19 = *(_DWORD *)(a1 + 76);
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v19 >= 0) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 11;
      }
      v7 += v21;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v7 += v25;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

std::string *sub_155AAEC(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v8)
  {
    if (v8)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v10, v12);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_36;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      int v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        int v15 = (void *)*v15;
      }
      data = (std::string *)sub_15632A8((uint64_t)v15);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v16 = *(void *(****)(void *))(a2 + 48);
    }
    else {
      uint64_t v16 = &off_253DA18;
    }
    uint64_t result = sub_1197FD8(data, (uint64_t)v16);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_37;
    }
LABEL_36:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v8 & 8) == 0)
    {
LABEL_8:
      if ((v8 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_38;
    }
LABEL_37:
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
    if ((v8 & 0x10) == 0)
    {
LABEL_9:
      if ((v8 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_39;
    }
LABEL_38:
    v3[2].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 64);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_40;
    }
LABEL_39:
    v3[2].__r_.__value_.__s.__data_[17] = *(unsigned char *)(a2 + 65);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0)
      {
LABEL_13:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
        goto LABEL_14;
      }
LABEL_12:
      v3[2].__r_.__value_.__s.__data_[19] = *(unsigned char *)(a2 + 67);
      goto LABEL_13;
    }
LABEL_40:
    v3[2].__r_.__value_.__s.__data_[18] = *(unsigned char *)(a2 + 66);
    if ((v8 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  if ((v8 & 0xF00) == 0) {
    goto LABEL_21;
  }
  if ((v8 & 0x100) != 0)
  {
    HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    if ((v8 & 0x200) == 0)
    {
LABEL_17:
      if ((v8 & 0x400) == 0) {
        goto LABEL_18;
      }
LABEL_44:
      v3[3].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 73);
      if ((v8 & 0x800) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_17;
  }
  v3[3].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 72);
  if ((v8 & 0x400) != 0) {
    goto LABEL_44;
  }
LABEL_18:
  if ((v8 & 0x800) != 0) {
LABEL_19:
  }
    HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
LABEL_20:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
LABEL_21:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_155ACE4()
{
  return 1;
}

void *sub_155ACEC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.RouteAttributes");
}

uint64_t sub_155ACFC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_155AD20(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if ((uint64_t (***)())a1 != &off_253DA90)
  {
    uint64_t v6 = *(void **)(a1 + 56);
    if (v6)
    {
      sub_1573B90(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_155AE30(uint64_t a1)
{
  sub_155AD20(a1);

  operator delete();
}

uint64_t sub_155AE68(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_20:
    unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_24;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_20;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_24:
  unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_28;
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_28:
  unint64_t v8 = *(void *)(result + 48) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v8 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t result = sub_155ACFC(*(void *)(result + 56));
    goto LABEL_8;
  }
  **(unsigned char **)unint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  if ((v2 & 0x10) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  if ((v2 & 0xE0) != 0)
  {
    *(void *)(v1 + 64) = 0;
    *(void *)(v1 + 72) = 0;
  }
  if ((v2 & 0xF00) != 0)
  {
    *(void *)(v1 + 80) = 0;
    *(void *)(v1 + 88) = 0;
    *(unsigned char *)(v1 + 96) = 0;
    *(_DWORD *)(v1 + 100) = 1;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_155AFC4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v49 + 1);
    unsigned int v9 = **(unsigned char **)v49;
    if ((char)**(unsigned char **)v49 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v49, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v49 + 2);
      }
    }
    *(void *)int v49 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v12 = *(void **)(a1 + 56);
        if (!v12)
        {
          int v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v13 = (void *)*v13;
          }
          uint64_t v12 = sub_158481C((uint64_t)v13);
          *(void *)(a1 + 56) = v12;
          unint64_t v8 = *(unsigned __int8 **)v49;
        }
        std::string::size_type v14 = sub_155B4FC(a3, (uint64_t)v12, v8);
        goto LABEL_39;
      case 2u:
        if (v9 != 18) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_38;
      case 3u:
        if (v9 != 26) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_38;
      case 4u:
        if (v9 != 32) {
          goto LABEL_67;
        }
        int v19 = (char *)(v8 + 1);
        unint64_t v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          *(void *)int v49 = sub_188C138((uint64_t)v8, (v22 - 128));
          if (!*(void *)v49) {
            goto LABEL_94;
          }
          unint64_t v20 = v41;
        }
        else
        {
          int v19 = (char *)(v8 + 2);
LABEL_27:
          *(void *)int v49 = v19;
        }
        if (sub_1552F24(v20))
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 72) = v20;
          goto LABEL_65;
        }
        if (*v7) {
          unint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v48 = 4;
        goto LABEL_88;
      case 5u:
        if (v9 != 42) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 40);
        goto LABEL_38;
      case 6u:
        if (v9 != 50) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 48);
LABEL_38:
        uint64_t v25 = (std::string *)sub_1880F84(v17, v16);
        std::string::size_type v14 = (void *)sub_188C244(v25, *(char **)v49, (uint64_t)a3);
        goto LABEL_39;
      case 7u:
        if (v9 != 57) {
          goto LABEL_67;
        }
        uint64_t v27 = *(void *)v8;
        unsigned int v26 = v8 + 8;
        v5 |= 0x20u;
        *(void *)(a1 + 64) = v27;
        goto LABEL_47;
      case 8u:
        if (v9 != 65) {
          goto LABEL_67;
        }
        uint64_t v28 = *(void *)v8;
        unsigned int v26 = v8 + 8;
        v5 |= 0x100u;
        *(void *)(a1 + 80) = v28;
        goto LABEL_47;
      case 9u:
        if (v9 != 73) {
          goto LABEL_67;
        }
        uint64_t v29 = *(void *)v8;
        unsigned int v26 = v8 + 8;
        v5 |= 0x200u;
        *(void *)(a1 + 88) = v29;
LABEL_47:
        *(void *)int v49 = v26;
        goto LABEL_65;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_67;
        }
        unint64_t v30 = (char *)(v8 + 1);
        unint64_t v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v31 = *v30;
        int v32 = v20 + (v31 << 7);
        unint64_t v20 = (v32 - 128);
        if (v31 < 0)
        {
          *(void *)int v49 = sub_188C138((uint64_t)v8, (v32 - 128));
          if (!*(void *)v49) {
            goto LABEL_94;
          }
          unint64_t v20 = v42;
        }
        else
        {
          unint64_t v30 = (char *)(v8 + 2);
LABEL_52:
          *(void *)int v49 = v30;
        }
        if ((v20 - 1) > 8)
        {
          if (*v7) {
            unint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v48 = 10;
LABEL_88:
          sub_188C020(v48, v20, v47);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x800u;
          *(_DWORD *)(a1 + 100) = v20;
        }
        goto LABEL_65;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_67;
        }
        v5 |= 0x80u;
        uint64_t v33 = (char *)(v8 + 1);
        int v34 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_59;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v43 = sub_188C0D0((uint64_t)v8, v34);
          *(void *)int v49 = v43;
          *(_DWORD *)(a1 + 76) = v44;
          if (!v43) {
            goto LABEL_94;
          }
        }
        else
        {
          uint64_t v33 = (char *)(v8 + 2);
LABEL_59:
          *(void *)int v49 = v33;
          *(_DWORD *)(a1 + 76) = v34;
        }
        goto LABEL_65;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_67;
        }
        v5 |= 0x400u;
        int v36 = (char *)(v8 + 1);
        uint64_t v37 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_64;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v45 = sub_188C138((uint64_t)v8, v37);
          *(void *)int v49 = v45;
          *(unsigned char *)(a1 + 96) = v46 != 0;
          if (!v45) {
            goto LABEL_94;
          }
        }
        else
        {
          int v36 = (char *)(v8 + 2);
LABEL_64:
          *(void *)int v49 = v36;
          *(unsigned char *)(a1 + 96) = v37 != 0;
        }
        goto LABEL_65;
      default:
LABEL_67:
        if (v9) {
          BOOL v39 = (v9 & 7) == 4;
        }
        else {
          BOOL v39 = 1;
        }
        if (!v39)
        {
          if (*v7)
          {
            uint64_t v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v49;
          }
          std::string::size_type v14 = sub_1885AC0(v9, v40, (char *)v8, a3);
LABEL_39:
          *(void *)int v49 = v14;
          if (!v14) {
            goto LABEL_94;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_94:
        }
          *(void *)int v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v49;
    }
  }
}

char *sub_155B4FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1573C3C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_155B58C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1573DAC(v7, (unint64_t)v9, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_14;
  }
LABEL_13:
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0) {
    goto LABEL_20;
  }
LABEL_14:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v10 = *(int *)(a1 + 72);
  unsigned char *v4 = 32;
  v4[1] = v10;
  if (v10 > 0x7F)
  {
    v4[1] = v10 | 0x80;
    unint64_t v11 = v10 >> 7;
    v4[2] = v10 >> 7;
    v4 += 3;
    if (v10 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v12 = v11 >> 14;
        v11 >>= 7;
        *v4++ = v11;
      }
      while (v12);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_20:
  if ((v6 & 4) != 0)
  {
    char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_22:
      if ((v6 & 0x20) == 0) {
        goto LABEL_23;
      }
      goto LABEL_29;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_22;
  }
  char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_23:
    if ((v6 & 0x100) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_29:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 64);
  unsigned char *v4 = 57;
  *(void *)(v4 + 1) = v13;
  v4 += 9;
  if ((v6 & 0x100) == 0)
  {
LABEL_24:
    if ((v6 & 0x200) == 0) {
      goto LABEL_25;
    }
    goto LABEL_35;
  }
LABEL_32:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 80);
  unsigned char *v4 = 65;
  *(void *)(v4 + 1) = v14;
  v4 += 9;
  if ((v6 & 0x200) == 0)
  {
LABEL_25:
    if ((v6 & 0x800) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_35:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v15 = *(void *)(a1 + 88);
  unsigned char *v4 = 73;
  *(void *)(v4 + 1) = v15;
  v4 += 9;
  if ((v6 & 0x800) != 0)
  {
LABEL_38:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 100);
    unsigned char *v4 = 80;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_44:
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 76);
    unsigned char *v4 = 88;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v22 = *(unsigned char *)(a1 + 96);
    unsigned char *v4 = 96;
    v4[1] = v22;
    v4 += 2;
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    unsigned int v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    unsigned int v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_155B9A4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_33;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v8 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_25:
    unint64_t v17 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
    uint64_t v19 = *(void *)(v17 + 8);
    if ((v18 & 0x80u) == 0) {
      uint64_t v19 = v18;
    }
    v3 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  unint64_t v14 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
    goto LABEL_25;
  }
LABEL_14:
  if ((v2 & 0x10) != 0)
  {
LABEL_15:
    uint64_t v11 = sub_1573EC8(*(void *)(a1 + 56));
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  if ((v2 & 0x20) != 0) {
    uint64_t result = v3 + 9;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 0x40) != 0)
  {
    int v12 = *(_DWORD *)(a1 + 72);
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v13;
  }
  if ((v2 & 0x80) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 76) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_33:
  if ((v2 & 0xF00) != 0)
  {
    uint64_t v20 = result + 9;
    if ((v2 & 0x100) == 0) {
      uint64_t v20 = result;
    }
    if ((v2 & 0x200) != 0) {
      v20 += 9;
    }
    if ((v2 & 0x400) != 0) {
      uint64_t result = v20 + 2;
    }
    else {
      uint64_t result = v20;
    }
    if ((v2 & 0x800) != 0)
    {
      int v21 = *(_DWORD *)(a1 + 100);
      uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v21 >= 0) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = 11;
      }
      result += v23;
    }
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if (v24)
  {
    unint64_t v25 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    result += v26;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_155BC2C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_29;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_32;
    }
LABEL_29:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_35;
    }
LABEL_32:
    uint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_43;
    }
LABEL_35:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    uint64_t v19 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v19)
    {
      std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
      int v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        int v21 = (void *)*v21;
      }
      uint64_t v19 = (std::string *)sub_158481C((uint64_t)v21);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v19;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v22 = *(void *(****)(void *))(a2 + 56);
    }
    else {
      uint64_t v22 = &off_253E258;
    }
    uint64_t result = sub_123BFCC(v19, (uint64_t)v22);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_44;
    }
LABEL_43:
    v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
      goto LABEL_11;
    }
LABEL_44:
    LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0xF00) == 0) {
    goto LABEL_19;
  }
  if ((v4 & 0x100) != 0)
  {
    v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
    if ((v4 & 0x200) == 0)
    {
LABEL_15:
      if ((v4 & 0x400) == 0) {
        goto LABEL_16;
      }
LABEL_48:
      v3[4].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 96);
      if ((v4 & 0x800) == 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  v3[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
  if ((v4 & 0x400) != 0) {
    goto LABEL_48;
  }
LABEL_16:
  if ((v4 & 0x800) != 0) {
LABEL_17:
  }
    HIDWORD(v3[4].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 100);
LABEL_18:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
LABEL_19:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_155BE58(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 0x10) == 0 || (~*(_DWORD *)(*(void *)(a1 + 56) + 16) & 3) == 0;
}

BOOL sub_155BE84(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_155BE98@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.RouteIncident");
}

void *sub_155BEA8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_155BF1C(void *a1)
{
  sub_155BEA8(a1);

  operator delete();
}

uint64_t sub_155BF54(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0xFFFFFFFF00000001;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_155BF80(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v27 + 1;
    unsigned int v9 = *v27;
    if (*v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v27 + 2;
      }
    }
    uint64_t v27 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_25:
      uint64_t v27 = v16;
      *(_DWORD *)(a1 + 28) = v15;
      goto LABEL_35;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v15);
    uint64_t v27 = v23;
    *(_DWORD *)(a1 + 28) = v24;
    if (!v23) {
      goto LABEL_48;
    }
LABEL_35:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      uint64_t v27 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v27) {
        goto LABEL_48;
      }
      unint64_t v19 = v25;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v27 = v18;
    }
    if (v19 > 0xA || ((1 << v19) & 0x71E) == 0)
    {
      if (*v7) {
        uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v26);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    goto LABEL_35;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      std::string::size_type v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v27;
    }
    uint64_t v27 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v27) {
      goto LABEL_48;
    }
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_48:
  uint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v27;
}

unsigned char *sub_155C1CC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_155C370(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_155C430()
{
  return 1;
}

void *sub_155C438@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.ProblemDetail");
}

uint64_t sub_155C448(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t result = sub_188CC00(a1 + 56);
  uint64_t v3 = *(unsigned int *)(a1 + 88);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 96) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_15808E0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 88) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v6) {
    goto LABEL_15;
  }
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_29:
    unint64_t v10 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v6 & 4) != 0) {
        goto LABEL_33;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v6 & 4) != 0) {
        goto LABEL_33;
      }
    }
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
  unint64_t v9 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_29;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_29;
    }
  }
LABEL_8:
  if ((v6 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_33:
  uint64_t result = sub_15764D4(*(void *)(a1 + 120));
  if ((v6 & 8) == 0)
  {
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = sub_155C5E4(*(void *)(a1 + 128));
  if ((v6 & 0x10) == 0)
  {
LABEL_11:
    if ((v6 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_36:
    uint64_t result = sub_1576CC0(*(void *)(a1 + 144));
    if ((v6 & 0x40) == 0)
    {
LABEL_13:
      if ((v6 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_37;
  }
LABEL_35:
  uint64_t result = sub_155FE88(*(void *)(a1 + 136));
  if ((v6 & 0x20) != 0) {
    goto LABEL_36;
  }
LABEL_12:
  if ((v6 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_37:
  uint64_t result = sub_157FF28(*(void *)(a1 + 152));
  if ((v6 & 0x80) != 0) {
LABEL_14:
  }
    uint64_t result = sub_15808E0(*(void *)(a1 + 160));
LABEL_15:
  if ((v6 & 0xFF00) != 0)
  {
    *(void *)(a1 + 168) = 0;
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 181) = 0;
  }
  if ((v6 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 197) = 0;
    *(void *)(a1 + 189) = 0;
    *(_DWORD *)(a1 + 204) = 0;
  }
  if ((v6 & 0x3000000) != 0)
  {
    *(void *)(a1 + 208) = 0;
    *(_DWORD *)(a1 + 216) = 10;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_155C5E4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_155ACFC(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0)
  {
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_155C64C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253DAF8)
  {
    uint64_t v5 = *(void **)(a1 + 48);
    if (v5)
    {
      sub_1580F84(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_15743EC(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1587308((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_155C728(uint64_t a1)
{
  sub_155C64C(a1);

  operator delete();
}

uint64_t sub_155C760(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_155ACFC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      uint64_t result = sub_155C448(*(void *)(v1 + 48));
    }
    if ((v5 & 2) != 0) {
      uint64_t result = sub_155C5E4(*(void *)(v1 + 56));
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_155C804(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v28 = a2;
  if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
    return v28;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v28 + 1;
    unsigned int v8 = *v28;
    if (*v28 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v28, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v28 + 2;
      }
    }
    uint64_t v28 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 != 18) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v22 = *(void *)(a1 + 56);
      if (!v22)
      {
        uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v23 = (void *)*v23;
        }
        sub_1584918((uint64_t)v23);
        uint64_t v22 = v24;
        *(void *)(a1 + 56) = v24;
        char v7 = v28;
      }
      unint64_t v15 = sub_1552B00(a3, v22, (unsigned __int8 *)v7);
    }
    else
    {
      if (v11 != 1 || v8 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v25 = *(void *)(a1 + 48);
      if (!v25)
      {
        uint64_t v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v26 = (void *)*v26;
        }
        sub_15853C8((uint64_t)v26);
        uint64_t v25 = v27;
        *(void *)(a1 + 48) = v27;
        char v7 = v28;
      }
      unint64_t v15 = (char *)sub_155CA64(a3, v25, (unsigned __int8 *)v7);
    }
LABEL_42:
    uint64_t v28 = v15;
    if (!v15) {
      return 0;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
      return v28;
    }
  }
  if (v8 == 26)
  {
    uint64_t v16 = v7 - 1;
    while (1)
    {
      uint64_t v17 = (unsigned __int8 *)(v16 + 1);
      uint64_t v28 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        int v21 = sub_158481C(*(void *)(a1 + 24));
        uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = (unsigned __int8 *)v28;
      }
      uint64_t v16 = sub_155B4FC(a3, v20, v17);
      uint64_t v28 = v16;
      if (!v16) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_43;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      std::string::size_type v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v28;
    }
    unint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_42;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v28;
  }
  return 0;
}

uint64_t sub_155CA64(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_158119C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_155CAF4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1582200(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 56);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_15746A8(v10, (unint64_t)v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = (char *)sub_1573DAC(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_155CD04(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1573EC8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_1582CDC(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v10 = sub_1574840(*(void *)(a1 + 56));
      v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_155CE20(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_15879B4(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v12 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v12 = (void *)*v12;
        }
        sub_15853C8((uint64_t)v12);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v13 = &off_253E5A8;
      }
      uint64_t result = sub_155CF94(data, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v14 = (std::string *)v3[2].__r_.__value_.__l.__size_;
      if (!v14)
      {
        std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
        unsigned int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unsigned int v16 = (void *)*v16;
        }
        sub_1584918((uint64_t)v16);
        v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v14;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v17 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v17 = &off_253E2B8;
      }
      uint64_t result = sub_155D500(v14, (uint64_t)v17);
    }
  }
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_155CF94(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188CA54((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v9 + v8);
    std::string::pointer data = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    uint64_t result = (std::string *)memcpy(&data[8 * v9], *(const void **)(a2 + 48), 8 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 64);
  if (v11)
  {
    unint64_t v12 = (const std::string **)(*(void *)(a2 + 72) + 8);
    unint64_t v13 = (std::string **)sub_188CCE4((uint64_t)&v3[2].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 64));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2].__r_.__value_.__l.__size_, v13, v12, v11, *(_DWORD *)v3[3].__r_.__value_.__l.__data_ - LODWORD(v3[2].__r_.__value_.__r.__words[2]));
    int v14 = LODWORD(v3[2].__r_.__value_.__r.__words[2]) + v11;
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = v14;
    std::string::size_type v15 = (int *)v3[3].__r_.__value_.__l.__data_;
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  int v16 = *(_DWORD *)(a2 + 88);
  if (v16)
  {
    uint64_t v17 = (uint64_t *)(*(void *)(a2 + 96) + 8);
    uint64_t v18 = (std::string **)sub_188CCE4((uint64_t)&v3[3].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 88));
    uint64_t result = (std::string *)sub_1589AE0((uint64_t *)&v3[3].__r_.__value_.__l.__size_, v18, v17, v16, *(_DWORD *)v3[4].__r_.__value_.__l.__data_ - LODWORD(v3[3].__r_.__value_.__r.__words[2]));
    int v19 = LODWORD(v3[3].__r_.__value_.__r.__words[2]) + v16;
    LODWORD(v3[3].__r_.__value_.__r.__words[2]) = v19;
    unint64_t v20 = (int *)v3[4].__r_.__value_.__l.__data_;
    if (*v20 < v19) {
      *unint64_t v20 = v19;
    }
  }
  int v21 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v21) {
    goto LABEL_75;
  }
  if (v21)
  {
    uint64_t v22 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__l.__size_, v22, v24);
    if ((v21 & 2) == 0)
    {
LABEL_14:
      if ((v21 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_27;
    }
  }
  else if ((v21 & 2) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v25 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v26 = v3->__r_.__value_.__l.__size_;
  uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
  if (v26) {
    uint64_t v27 = (uint64_t *)*v27;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__r.__words[2], v25, v27);
  if ((v21 & 4) == 0)
  {
LABEL_15:
    if ((v21 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_27:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  uint64_t v28 = (std::string *)v3[5].__r_.__value_.__l.__data_;
  if (!v28)
  {
    std::string::size_type v29 = v3->__r_.__value_.__l.__size_;
    unint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
    if (v29) {
      unint64_t v30 = (void *)*v30;
    }
    uint64_t v28 = (std::string *)sub_15849F4((uint64_t)v30);
    v3[5].__r_.__value_.__r.__words[0] = (std::string::size_type)v28;
  }
  if (*(void *)(a2 + 120)) {
    int v31 = *(uint64_t (****)())(a2 + 120);
  }
  else {
    int v31 = &off_253E3A8;
  }
  uint64_t result = sub_1576AD8(v28, (uint64_t)v31);
  if ((v21 & 8) == 0)
  {
LABEL_16:
    if ((v21 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_43;
  }
LABEL_35:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  int v32 = (std::string *)v3[5].__r_.__value_.__l.__size_;
  if (!v32)
  {
    std::string::size_type v33 = v3->__r_.__value_.__l.__size_;
    int v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
    if (v33) {
      int v34 = (void *)*v34;
    }
    sub_1584918((uint64_t)v34);
    v3[5].__r_.__value_.__l.__size_ = (std::string::size_type)v32;
  }
  if (*(void *)(a2 + 128)) {
    int v35 = *(uint64_t (****)())(a2 + 128);
  }
  else {
    int v35 = &off_253E2B8;
  }
  uint64_t result = sub_155D500(v32, (uint64_t)v35);
  if ((v21 & 0x10) == 0)
  {
LABEL_17:
    if ((v21 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_51:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    uint64_t v40 = (std::string *)v3[6].__r_.__value_.__l.__data_;
    if (!v40)
    {
      std::string::size_type v41 = v3->__r_.__value_.__l.__size_;
      unint64_t v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
      if (v41) {
        unint64_t v42 = (void *)*v42;
      }
      uint64_t v40 = (std::string *)sub_1584A90((uint64_t)v42);
      v3[6].__r_.__value_.__r.__words[0] = (std::string::size_type)v40;
    }
    if (*(void *)(a2 + 144)) {
      uint64_t v43 = *(void *(****)(void *))(a2 + 144);
    }
    else {
      uint64_t v43 = &off_253E3E0;
    }
    uint64_t result = sub_1113E40(v40, (uint64_t)v43);
    if ((v21 & 0x40) == 0)
    {
LABEL_19:
      if ((v21 & 0x80) == 0) {
        goto LABEL_75;
      }
      goto LABEL_67;
    }
    goto LABEL_59;
  }
LABEL_43:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
  int v36 = (std::string *)v3[5].__r_.__value_.__r.__words[2];
  if (!v36)
  {
    std::string::size_type v37 = v3->__r_.__value_.__l.__size_;
    int v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
    if (v37) {
      int v38 = (void *)*v38;
    }
    sub_1584898((uint64_t)v38);
    v3[5].__r_.__value_.__r.__words[2] = (std::string::size_type)v36;
  }
  if (*(void *)(a2 + 136)) {
    BOOL v39 = *(void *(****)(void *))(a2 + 136);
  }
  else {
    BOOL v39 = &off_253E280;
  }
  uint64_t result = sub_1561340(v36, (uint64_t)v39);
  if ((v21 & 0x20) != 0) {
    goto LABEL_51;
  }
LABEL_18:
  if ((v21 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_59:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
  int v44 = (std::string *)v3[6].__r_.__value_.__l.__size_;
  if (!v44)
  {
    std::string::size_type v45 = v3->__r_.__value_.__l.__size_;
    uint64_t v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
    if (v45) {
      uint64_t v46 = (void *)*v46;
    }
    int v44 = (std::string *)sub_15852A0((uint64_t)v46);
    v3[6].__r_.__value_.__l.__size_ = (std::string::size_type)v44;
  }
  if (*(void *)(a2 + 152)) {
    unint64_t v47 = *(void *(****)(void *))(a2 + 152);
  }
  else {
    unint64_t v47 = &off_253E530;
  }
  uint64_t result = sub_15806A4(v44, (uint64_t)v47);
  if ((v21 & 0x80) != 0)
  {
LABEL_67:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x80u;
    int v48 = (std::string *)v3[6].__r_.__value_.__r.__words[2];
    if (!v48)
    {
      std::string::size_type v49 = v3->__r_.__value_.__l.__size_;
      uint64_t v50 = (void *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
      if (v49) {
        uint64_t v50 = (void *)*v50;
      }
      int v48 = (std::string *)sub_158534C((uint64_t)v50);
      v3[6].__r_.__value_.__r.__words[2] = (std::string::size_type)v48;
    }
    if (*(void *)(a2 + 160)) {
      unint64_t v51 = *(void *(****)(void *))(a2 + 160);
    }
    else {
      unint64_t v51 = &off_253E580;
    }
    uint64_t result = sub_117EF50(v48, (uint64_t)v51);
  }
LABEL_75:
  if ((v21 & 0xFF00) == 0) {
    goto LABEL_86;
  }
  if ((v21 & 0x100) != 0)
  {
    LODWORD(v3[7].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 168);
    if ((v21 & 0x200) == 0)
    {
LABEL_78:
      if ((v21 & 0x400) == 0) {
        goto LABEL_79;
      }
      goto LABEL_109;
    }
  }
  else if ((v21 & 0x200) == 0)
  {
    goto LABEL_78;
  }
  v3[7].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 172);
  if ((v21 & 0x400) == 0)
  {
LABEL_79:
    if ((v21 & 0x800) == 0) {
      goto LABEL_80;
    }
    goto LABEL_110;
  }
LABEL_109:
  v3[7].__r_.__value_.__s.__data_[5] = *(unsigned char *)(a2 + 173);
  if ((v21 & 0x800) == 0)
  {
LABEL_80:
    if ((v21 & 0x1000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_111;
  }
LABEL_110:
  v3[7].__r_.__value_.__s.__data_[6] = *(unsigned char *)(a2 + 174);
  if ((v21 & 0x1000) == 0)
  {
LABEL_81:
    if ((v21 & 0x2000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_112;
  }
LABEL_111:
  v3[7].__r_.__value_.__s.__data_[7] = *(unsigned char *)(a2 + 175);
  if ((v21 & 0x2000) == 0)
  {
LABEL_82:
    if ((v21 & 0x4000) == 0) {
      goto LABEL_83;
    }
LABEL_113:
    LODWORD(v3[7].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 184);
    if ((v21 & 0x8000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_84;
  }
LABEL_112:
  v3[7].__r_.__value_.__l.__size_ = *(void *)(a2 + 176);
  if ((v21 & 0x4000) != 0) {
    goto LABEL_113;
  }
LABEL_83:
  if ((v21 & 0x8000) != 0) {
LABEL_84:
  }
    v3[7].__r_.__value_.__s.__data_[20] = *(unsigned char *)(a2 + 188);
LABEL_85:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v21;
LABEL_86:
  if ((v21 & 0xFF0000) == 0) {
    goto LABEL_97;
  }
  if ((v21 & 0x10000) != 0)
  {
    v3[7].__r_.__value_.__s.__data_[21] = *(unsigned char *)(a2 + 189);
    if ((v21 & 0x20000) == 0)
    {
LABEL_89:
      if ((v21 & 0x40000) == 0) {
        goto LABEL_90;
      }
      goto LABEL_117;
    }
  }
  else if ((v21 & 0x20000) == 0)
  {
    goto LABEL_89;
  }
  v3[7].__r_.__value_.__s.__data_[22] = *(unsigned char *)(a2 + 190);
  if ((v21 & 0x40000) == 0)
  {
LABEL_90:
    if ((v21 & 0x80000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_118;
  }
LABEL_117:
  *((unsigned char *)&v3[7].__r_.__value_.__s + 23) = *(unsigned char *)(a2 + 191);
  if ((v21 & 0x80000) == 0)
  {
LABEL_91:
    if ((v21 & 0x100000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_119;
  }
LABEL_118:
  v3[8].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 192);
  if ((v21 & 0x100000) == 0)
  {
LABEL_92:
    if ((v21 & 0x200000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_120;
  }
LABEL_119:
  v3[8].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 193);
  if ((v21 & 0x200000) == 0)
  {
LABEL_93:
    if ((v21 & 0x400000) == 0) {
      goto LABEL_94;
    }
LABEL_121:
    v3[8].__r_.__value_.__s.__data_[3] = *(unsigned char *)(a2 + 195);
    if ((v21 & 0x800000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_95;
  }
LABEL_120:
  v3[8].__r_.__value_.__s.__data_[2] = *(unsigned char *)(a2 + 194);
  if ((v21 & 0x400000) != 0) {
    goto LABEL_121;
  }
LABEL_94:
  if ((v21 & 0x800000) != 0) {
LABEL_95:
  }
    v3[8].__r_.__value_.__l.__size_ = *(void *)(a2 + 200);
LABEL_96:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v21;
LABEL_97:
  if ((v21 & 0x3000000) != 0)
  {
    if ((v21 & 0x1000000) != 0) {
      v3[8].__r_.__value_.__r.__words[2] = *(void *)(a2 + 208);
    }
    if ((v21 & 0x2000000) != 0) {
      LODWORD(v3[9].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 216);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v21;
  }
  uint64_t v52 = *(void *)(a2 + 8);
  if (v52)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v52 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_155D500(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        int v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          int v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_158481C((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253E258;
      }
      uint64_t result = sub_123BFCC(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_155D5E8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8 * v2--);
    if ((~*(_DWORD *)(v3 + 16) & 3) != 0) {
      return 0;
    }
  }
  int v5 = *(_DWORD *)(a1 + 16);
  if ((v5 & 1) == 0 || (uint64_t result = sub_155D674(*(void *)(a1 + 48)), result))
  {
    if ((v5 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 56);
      if ((*(unsigned char *)(v6 + 16) & 1) == 0 || (~*(_DWORD *)(*(void *)(v6 + 24) + 16) & 3) != 0) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_155D674(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 88);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 96) + 8 * v1--);
    if ((~*(_DWORD *)(v2 + 16) & 7) != 0) {
      return 0;
    }
  }
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 8) == 0
    || (uint64_t v5 = *(void *)(a1 + 128), (*(unsigned char *)(v5 + 16) & 1) != 0)
    && (~*(_DWORD *)(*(void *)(v5 + 24) + 16) & 3) == 0)
  {
    if ((v3 & 0x20) == 0 || (~*(_DWORD *)(*(void *)(a1 + 144) + 16) & 3) == 0)
    {
      if ((v3 & 0x40) != 0)
      {
        uint64_t v6 = *(void *)(a1 + 152);
        uint64_t v7 = *(unsigned int *)(v6 + 32);
        uint64_t v8 = *(void *)(v6 + 40);
        while ((int)v7 >= 1)
        {
          uint64_t v9 = *(void *)(v8 + 8 * v7--);
          if ((*(unsigned char *)(v9 + 16) & 1) == 0) {
            return 0;
          }
        }
      }
      if ((v3 & 0x80) == 0 || (~*(_DWORD *)(*(void *)(a1 + 160) + 16) & 7) == 0) {
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_155D734(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 1) != 0 && (~*(_DWORD *)(*(void *)(a1 + 24) + 16) & 3) == 0;
}

void *sub_155D75C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Waypoint");
}

uint64_t sub_155D76C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253DB38)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1573B90(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_155D824(uint64_t a1)
{
  sub_155D76C(a1);

  operator delete();
}

uint64_t sub_155D85C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_155ACFC(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_155D8C4(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v29 = a2;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    return v29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v29 + 1;
    unsigned int v8 = *v29;
    if (*v29 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v29, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v29 + 2;
      }
    }
    std::string::size_type v29 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 4)
    {
      if (v8 != 32) {
        goto LABEL_14;
      }
      int v16 = v7 + 1;
      unint64_t v17 = *v7;
      if (*v7 < 0)
      {
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          std::string::size_type v29 = (char *)sub_188C138((uint64_t)v7, (v19 - 128));
          if (!v29) {
            return 0;
          }
          unint64_t v17 = v25;
          goto LABEL_26;
        }
        int v16 = v7 + 2;
      }
      std::string::size_type v29 = v16;
LABEL_26:
      if (v17 <= 3)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 36) = v17;
        goto LABEL_41;
      }
      if (*v6) {
        uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v28 = 4;
      goto LABEL_53;
    }
    if (v11 == 3) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    std::string::size_type v23 = *(void **)(a1 + 24);
    if (!v23)
    {
      uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v24 = (void *)*v24;
      }
      std::string::size_type v23 = sub_158481C((uint64_t)v24);
      *(void *)(a1 + 24) = v23;
      uint64_t v7 = v29;
    }
    std::string::size_type v15 = sub_155B4FC(a3, (uint64_t)v23, (unsigned __int8 *)v7);
LABEL_40:
    std::string::size_type v29 = v15;
    if (!v15) {
      return 0;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      return v29;
    }
  }
  if (v8 == 24)
  {
    unint64_t v20 = v7 + 1;
    unint64_t v17 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    int v21 = *v20;
    int v22 = v17 + (v21 << 7);
    unint64_t v17 = (v22 - 128);
    if (v21 < 0)
    {
      std::string::size_type v29 = (char *)sub_188C138((uint64_t)v7, (v22 - 128));
      if (!v29) {
        return 0;
      }
      unint64_t v17 = v26;
    }
    else
    {
      unint64_t v20 = v7 + 2;
LABEL_32:
      std::string::size_type v29 = v20;
    }
    if (v17 <= 3)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_41;
    }
    if (*v6) {
      uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v28 = 3;
LABEL_53:
    sub_188C020(v28, v17, v27);
    goto LABEL_41;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v29;
    }
    std::string::size_type v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_40;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v29;
  }
  return 0;
}

unsigned char *sub_155DB74(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1573DAC(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_155DD88(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v4 = sub_1573EC8(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  if ((v2 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 36);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
  }
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_155DE8C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_158481C((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253E258;
      }
      uint64_t result = sub_123BFCC(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_155DF74(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 1) == 0 || (~*(_DWORD *)(*(void *)(a1 + 24) + 16) & 3) == 0;
}

void *sub_155DFA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.RoadAccessPoint");
}

void *sub_155DFB0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_155E024(void *a1)
{
  sub_155DFB0(a1);

  operator delete();
}

uint64_t sub_155E05C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_155E080(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    unint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      unint64_t v25 = v15;
      *(void *)(a1 + 32) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    unint64_t v25 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      unint64_t v18 = v8 + 2;
LABEL_29:
      unint64_t v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    std::string::size_type v23 = (char *)sub_188C138((uint64_t)v8, v19);
    unint64_t v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    unint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_155E270(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_155E414(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_155E4B4()
{
  return 1;
}

void *sub_155E4BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.WaypointID");
}

uint64_t sub_155E4CC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253DB88)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_1573B90(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1587388((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_155E590(uint64_t a1)
{
  sub_155E4CC(a1);

  operator delete();
}

uint64_t sub_155E5C8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_155D85C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_155ACFC(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_155E658(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v23 + 2;
      }
    }
    std::string::size_type v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void **)(a1 + 48);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_158481C((uint64_t)v22);
      *(void *)(a1 + 48) = v21;
      unint64_t v7 = v23;
    }
    unint64_t v14 = sub_155B4FC(a3, (uint64_t)v21, (unsigned __int8 *)v7);
LABEL_35:
    std::string::size_type v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 18)
  {
    unint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      std::string::size_type v23 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        int v20 = sub_15635A0(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
        uint64_t v16 = (unsigned __int8 *)v23;
      }
      unint64_t v15 = sub_155E860(a3, v19, v16);
      std::string::size_type v23 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v23;
    }
    unint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_155E860(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_155D8C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_155E8F0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_1573DAC(v6, (unint64_t)v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_155DB74(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_155EA9C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_155DD88(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_1573EC8(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_155EB80(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1587A30(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(void *(****)(void *))(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v12 = (void *)*v12;
      }
      std::string::pointer data = (std::string *)sub_158481C((uint64_t)v12);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v9 = *(void *(****)(void *))(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_253E258;
    }
    uint64_t result = sub_123BFCC(data, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_155ECA4(uint64_t a1)
{
  uint64_t result = sub_155ECF8(a1 + 24);
  if (result) {
    return (*(unsigned char *)(a1 + 16) & 1) == 0 || (~*(_DWORD *)(*(void *)(a1 + 48) + 16) & 3) == 0;
  }
  return result;
}

uint64_t sub_155ECF8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v4 + 16) & 1) != 0 && (~*(_DWORD *)(*(void *)(v4 + 24) + 16) & 3) != 0) {
      break;
    }
    if (--v2 <= 1) {
      return 1;
    }
  }
  return 0;
}

void *sub_155ED54@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.WaypointPlace");
}

uint64_t sub_155ED64(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253DBC0)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_15743EC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_155EE1C(uint64_t a1)
{
  sub_155ED64(a1);

  operator delete();
}

uint64_t sub_155EE54(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_155C5E4(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_155EEB0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
    return v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v17 + 1;
    unsigned int v7 = *v17;
    if (*v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v17 + 2;
      }
    }
    uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      sub_1584918((uint64_t)v14);
      uint64_t v13 = v15;
      *(void *)(a1 + 24) = v15;
      uint64_t v6 = v17;
    }
    uint64_t v12 = sub_1552B00(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v17 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
      return v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v17;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v17;
  }
  return 0;
}

unsigned char *sub_155F008(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_15746A8(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_155F118(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1574840(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_155F1A0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unsigned int v7 = (void *)*v7;
      }
      sub_1584918((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_253E2B8;
    }
    uint64_t result = sub_155D500(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_155F248(uint64_t a1)
{
  BOOL result = 1;
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v1 = *(void *)(a1 + 24);
    if ((*(unsigned char *)(v1 + 16) & 1) == 0 || (~*(_DWORD *)(*(void *)(v1 + 24) + 16) & 3) != 0) {
      return 0;
    }
  }
  return result;
}

void *sub_155F280@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.WaypointLocation");
}

uint64_t sub_155F290(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_253DBE0)
  {
    unint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_155DFB0(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_155E4CC(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_155ED64(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_155F380(uint64_t a1)
{
  sub_155F290(a1);

  operator delete();
}

uint64_t sub_155F3B8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) != 0)
  {
    if (v2)
    {
      BOOL result = sub_155E05C(*(void *)(result + 24));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(v1 + 48) = 2;
          goto LABEL_7;
        }
LABEL_5:
        BOOL result = sub_155EE54(*(void *)(v1 + 40));
        goto LABEL_6;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    BOOL result = sub_155E5C8(*(void *)(v1 + 32));
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_155F448(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    unint64_t v26 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_34;
        }
        unint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          unint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v26) {
            return 0;
          }
          unint64_t v12 = v24;
        }
        else
        {
          unint64_t v11 = v7 + 2;
LABEL_13:
          unint64_t v26 = v11;
        }
        if ((v12 - 2) > 2)
        {
          if (*v6) {
            unint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v25);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v12;
        }
        goto LABEL_42;
      case 2u:
        if (v8 != 18) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void **)(a1 + 24);
        if (!v15)
        {
          unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_156361C((uint64_t)v16);
          *(void *)(a1 + 24) = v15;
          uint64_t v7 = v26;
        }
        uint64_t v17 = sub_155F72C(a3, (uint64_t)v15, (unsigned __int8 *)v7);
        goto LABEL_41;
      case 3u:
        if (v8 != 26) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void **)(a1 + 32);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_1563698((uint64_t)v19);
          *(void *)(a1 + 32) = v18;
          uint64_t v7 = v26;
        }
        uint64_t v17 = sub_155F7BC(a3, (uint64_t)v18, (unsigned __int8 *)v7);
        goto LABEL_41;
      case 4u:
        if (v8 != 34) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        int v20 = *(void **)(a1 + 40);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v21 = (void *)*v21;
          }
          int v20 = sub_1563734((uint64_t)v21);
          *(void *)(a1 + 40) = v20;
          uint64_t v7 = v26;
        }
        uint64_t v17 = sub_155F84C(a3, (uint64_t)v20, (unsigned __int8 *)v7);
        goto LABEL_41;
      default:
LABEL_34:
        if (v8) {
          BOOL v22 = (v8 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v6)
          {
            std::string::size_type v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            std::string::size_type v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v26;
          }
          uint64_t v17 = (char *)sub_1885AC0(v8, v23, v7, a3);
LABEL_41:
          unint64_t v26 = v17;
          if (!v17) {
            return 0;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
            return v26;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v26;
    }
  }
}

char *sub_155F72C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  BOOL result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    BOOL result = sub_155E080(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_155F7BC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  BOOL result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    BOOL result = sub_155E658(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_155F84C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  BOOL result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    BOOL result = sub_155EEB0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_155F8DC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    char v4 = sub_155E270(v10, (unint64_t)v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_155E8F0(v13, (unint64_t)v15, a3);
  if ((v6 & 4) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 40);
    unsigned char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    char v4 = sub_155F008(v16, (unint64_t)v18, a3);
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    BOOL v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    BOOL v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_155FB48(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    unint64_t v4 = sub_155E414(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_155EA9C(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_155F118(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v7 = *(_DWORD *)(a1 + 48);
  if (v7 < 0) {
    uint64_t v8 = 11;
  }
  else {
    uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v8;
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_155FC8C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_156361C((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253DB60;
      }
      BOOL result = sub_1113E40(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_1563698((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253DB88;
    }
    BOOL result = sub_155EB80(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_28:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    unsigned int v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unsigned int v14 = (std::string *)sub_1563734((uint64_t)v16);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unsigned int v17 = &off_253DBC0;
    }
    BOOL result = sub_155F1A0(v14, (uint64_t)v17);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_155FE04(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_155ECA4(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  uint64_t result = 1;
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    if (*(unsigned char *)(v4 + 16))
    {
      uint64_t v5 = *(void *)(v4 + 24);
      if ((*(unsigned char *)(v5 + 16) & 1) == 0 || (~*(_DWORD *)(*(void *)(v5 + 24) + 16) & 3) != 0) {
        return 0;
      }
    }
  }
  return result;
}

void *sub_155FE78@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.WaypointTyped");
}

uint64_t sub_155FE88(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_155FEB4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = &off_24C1390;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = &qword_2550250;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 125) = 0;
  *(_DWORD *)(a1 + 136) = 1;
  return a1;
}

void sub_155FF44(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_155FF74(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253DC18)
  {
    uint64_t v6 = *(void *)(a1 + 104);
    if (v6)
    {
      sub_15598C4(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 112);
    if (v7)
    {
      sub_15743EC(v7);
      operator delete();
    }
    uint64_t v8 = *(void **)(a1 + 120);
    if (v8)
    {
      sub_1573F3C(v8);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1587488((void *)(a1 + 72));
  sub_1587408((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15600A0(uint64_t a1)
{
  sub_155FF74(a1);

  operator delete();
}

uint64_t sub_15600D8(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_155C760(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_155F3B8(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 0xF) == 0) {
    goto LABEL_15;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_25:
    uint64_t result = sub_15599D0(*(void *)(a1 + 104));
    if ((v9 & 4) == 0)
    {
LABEL_13:
      if ((v9 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v12 + 23) < 0)
  {
    **(unsigned char **)unint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
    if ((v9 & 2) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v9 & 2) != 0) {
      goto LABEL_25;
    }
  }
LABEL_12:
  if ((v9 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_155C5E4(*(void *)(a1 + 112));
  if ((v9 & 8) != 0) {
LABEL_14:
  }
    uint64_t result = sub_155FE88(*(void *)(a1 + 120));
LABEL_15:
  if ((v9 & 0x70) != 0)
  {
    *(unsigned char *)(a1 + 132) = 0;
    *(_DWORD *)(a1 + 128) = 0;
    *(_DWORD *)(a1 + 136) = 1;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 32) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_1560210(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v53 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v53 + 1);
    unsigned int v9 = **(unsigned char **)v53;
    if ((char)**(unsigned char **)v53 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v53, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v53 + 2);
      }
    }
    *(void *)int v53 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v12 = *(void *)(a1 + 104);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_1563324((uint64_t)v13);
          *(void *)(a1 + 104) = v12;
          uint64_t v8 = *(unsigned __int8 **)v53;
        }
        uint64_t v14 = sub_1560780(a3, v12, v8);
        goto LABEL_75;
      case 2u:
        if (v9 != 18) {
          goto LABEL_66;
        }
        std::string::size_type v15 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 1);
          *(void *)int v53 = v15 + 1;
          unsigned int v17 = *(_DWORD **)(a1 + 64);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 56), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 56) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_1563504(*(void *)(a1 + 48));
            uint64_t v19 = sub_188CDC8(a1 + 48, v20);
            uint64_t v16 = *(unsigned __int8 **)v53;
          }
          std::string::size_type v15 = sub_1560810(a3, v19, v16);
          *(void *)int v53 = v15;
          if (!v15) {
            goto LABEL_87;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_76;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_66;
        }
        v5 |= 0x40u;
        unint64_t v21 = (char *)(v8 + 1);
        int v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v47 = sub_188C0D0((uint64_t)v8, v22);
          *(void *)int v53 = v47;
          *(_DWORD *)(a1 + 136) = v48;
          if (!v47) {
            goto LABEL_87;
          }
        }
        else
        {
          unint64_t v21 = (char *)(v8 + 2);
LABEL_29:
          *(void *)int v53 = v21;
          *(_DWORD *)(a1 + 136) = v22;
        }
        goto LABEL_76;
      case 4u:
        if (v9 != 34) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v24 = *(void *)(a1 + 112);
        if (!v24)
        {
          unint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v25 = (void *)*v25;
          }
          sub_1584918((uint64_t)v25);
          uint64_t v24 = v26;
          *(void *)(a1 + 112) = v26;
          uint64_t v8 = *(unsigned __int8 **)v53;
        }
        uint64_t v14 = (uint64_t)sub_1552B00(a3, v24, v8);
        goto LABEL_75;
      case 5u:
        if (v9 != 42) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v27 = *(void *)(a1 + 120);
        if (!v27)
        {
          int v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v28 = (void *)*v28;
          }
          sub_1584898((uint64_t)v28);
          uint64_t v27 = v29;
          *(void *)(a1 + 120) = v29;
          uint64_t v8 = *(unsigned __int8 **)v53;
        }
        uint64_t v14 = (uint64_t)sub_15608A0(a3, v27, v8);
        goto LABEL_75;
      case 7u:
        if (v9 != 58) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v30 = *(void *)(a1 + 8);
        int v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          int v31 = (uint64_t *)*v31;
        }
        int v32 = (std::string *)sub_1880F84((void *)(a1 + 96), v31);
        uint64_t v14 = (uint64_t)sub_188C244(v32, *(char **)v53, (uint64_t)a3);
        goto LABEL_75;
      case 8u:
        if (v9 != 64) {
          goto LABEL_66;
        }
        v5 |= 0x10u;
        std::string::size_type v33 = (char *)(v8 + 1);
        int v34 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_50;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v49 = sub_188C0D0((uint64_t)v8, v34);
          *(void *)int v53 = v49;
          *(_DWORD *)(a1 + 128) = v50;
          if (!v49) {
            goto LABEL_87;
          }
        }
        else
        {
          std::string::size_type v33 = (char *)(v8 + 2);
LABEL_50:
          *(void *)int v53 = v33;
          *(_DWORD *)(a1 + 128) = v34;
        }
        goto LABEL_76;
      case 0x12u:
        if (v9 != 144) {
          goto LABEL_66;
        }
        v5 |= 0x20u;
        int v36 = (char *)(v8 + 1);
        uint64_t v37 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v51 = sub_188C138((uint64_t)v8, v37);
          *(void *)int v53 = v51;
          *(unsigned char *)(a1 + 132) = v52 != 0;
          if (!v51) {
            goto LABEL_87;
          }
        }
        else
        {
          int v36 = (char *)(v8 + 2);
LABEL_55:
          *(void *)int v53 = v36;
          *(unsigned char *)(a1 + 132) = v37 != 0;
        }
        goto LABEL_76;
      case 0x16u:
        if (v9 != 178) {
          goto LABEL_66;
        }
        BOOL v39 = (char *)(v8 - 2);
        while (1)
        {
          uint64_t v40 = (unsigned __int8 *)(v39 + 2);
          *(void *)int v53 = v39 + 2;
          std::string::size_type v41 = *(_DWORD **)(a1 + 88);
          if (v41 && (uint64_t v42 = *(int *)(a1 + 80), (int)v42 < *v41))
          {
            *(_DWORD *)(a1 + 80) = v42 + 1;
            uint64_t v43 = *(void *)&v41[2 * v42 + 2];
          }
          else
          {
            sub_15637AC(*(void *)(a1 + 72));
            uint64_t v43 = sub_188CDC8(a1 + 72, v44);
            uint64_t v40 = *(unsigned __int8 **)v53;
          }
          BOOL v39 = sub_1560930(a3, v43, v40);
          *(void *)int v53 = v39;
          if (!v39) {
            goto LABEL_87;
          }
          if (*(void *)a3 <= (unint64_t)v39 || *(_WORD *)v39 != 434) {
            goto LABEL_76;
          }
        }
      default:
LABEL_66:
        if (v9) {
          BOOL v45 = (v9 & 7) == 4;
        }
        else {
          BOOL v45 = 1;
        }
        if (!v45)
        {
          if (v9 - 7600 > 0x18F)
          {
            if (*v7)
            {
              uint64_t v46 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v46 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v53;
            }
            uint64_t v14 = (uint64_t)sub_1885AC0(v9, v46, (char *)v8, a3);
          }
          else
          {
            uint64_t v14 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_253DC18, (uint64_t *)(a1 + 8), a3);
          }
LABEL_75:
          *(void *)int v53 = v14;
          if (!v14) {
            goto LABEL_87;
          }
LABEL_76:
          if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_87:
        }
          *(void *)int v53 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v53;
    }
  }
}

uint64_t sub_1560780(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1559A9C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1560810(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_155C804(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15608A0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1573FE8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1560930(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_155F448(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15609C0(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 104);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_155A354(v7, (unint64_t)v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_155CAF4(v12, (unint64_t)v14, a3);
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 136);
    char *v4 = 24;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 112);
    char *v4 = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    v4[1] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      uint64_t v20 = v4 + 2;
    }
    uint64_t v4 = sub_15746A8(v18, (unint64_t)v20, a3);
    if ((v6 & 8) == 0)
    {
LABEL_25:
      if ((v6 & 1) == 0) {
        goto LABEL_26;
      }
      goto LABEL_40;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_25;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 120);
  char *v4 = 42;
  unsigned int v22 = *(_DWORD *)(v21 + 20);
  v4[1] = v22;
  if (v22 > 0x7F) {
    int v23 = sub_188A9CC(v22, v4 + 1);
  }
  else {
    int v23 = v4 + 2;
  }
  uint64_t v4 = (char *)sub_15741C4(v21, (unint64_t)v23, a3);
  if ((v6 & 1) == 0)
  {
LABEL_26:
    if ((v6 & 0x10) == 0) {
      goto LABEL_47;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_47;
  }
LABEL_41:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v24 = *(_DWORD *)(a1 + 128);
  char *v4 = 64;
  v4[1] = v24;
  if (v24 > 0x7F)
  {
    v4[1] = v24 | 0x80;
    unsigned int v25 = v24 >> 7;
    v4[2] = v24 >> 7;
    v4 += 3;
    if (v24 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v26 = v25 >> 14;
        v25 >>= 7;
        *v4++ = v25;
      }
      while (v26);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_47:
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v27 = *(unsigned char *)(a1 + 132);
    *(_WORD *)uint64_t v4 = 400;
    v4[2] = v27;
    v4 += 3;
  }
  int v28 = *(_DWORD *)(a1 + 80);
  if (v28)
  {
    for (int j = 0; j != v28; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 434;
      unsigned int v31 = *(_DWORD *)(v30 + 20);
      v4[2] = v31;
      if (v31 > 0x7F) {
        int v32 = sub_188A9CC(v31, v4 + 2);
      }
      else {
        int v32 = v4 + 3;
      }
      uint64_t v4 = sub_155F8DC(v30, (unint64_t)v32, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if ((v33 & 1) == 0) {
    return v4;
  }
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v35 + 31) < 0)
  {
    int v36 = *(void **)(v35 + 8);
    uint64_t v37 = *(void *)(v35 + 16);
  }
  else
  {
    int v36 = (void *)(v35 + 8);
    LODWORD(v37) = *(unsigned __int8 *)(v35 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v37)
  {
    uint64_t v38 = (int)v37;
    memcpy(v4, v36, (int)v37);
    v4 += v38;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v36, v37, v4);
}

uint64_t sub_1560E3C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_155CD04(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + 2 * v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_155FB48(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if ((v17 & 0x7F) != 0)
  {
    if (v17)
    {
      unint64_t v20 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
      uint64_t v22 = *(void *)(v20 + 8);
      if ((v21 & 0x80u) == 0) {
        uint64_t v22 = v21;
      }
      v11 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v17 & 2) == 0)
      {
LABEL_16:
        if ((v17 & 4) == 0) {
          goto LABEL_17;
        }
        goto LABEL_30;
      }
    }
    else if ((v17 & 2) == 0)
    {
      goto LABEL_16;
    }
    uint64_t v23 = sub_155A894(*(void *)(a1 + 104));
    v11 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 4) == 0)
    {
LABEL_17:
      if ((v17 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_31;
    }
LABEL_30:
    uint64_t v24 = sub_1574840(*(void *)(a1 + 112));
    v11 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 8) == 0)
    {
LABEL_18:
      if ((v17 & 0x10) == 0)
      {
LABEL_20:
        if ((v17 & 0x20) != 0) {
          v11 += 3;
        }
        if ((v17 & 0x40) != 0) {
          v11 += ((9 * (__clz(*(_DWORD *)(a1 + 136) | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
        goto LABEL_24;
      }
LABEL_19:
      v11 += ((9 * (__clz(*(_DWORD *)(a1 + 128) | 1) ^ 0x1F) + 73) >> 6) + 1;
      goto LABEL_20;
    }
LABEL_31:
    uint64_t v25 = sub_1574360(*(void *)(a1 + 120));
    v11 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_24:
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v26 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v26 + 31) < 0) {
      uint64_t v27 = *(void *)(v26 + 16);
    }
    else {
      uint64_t v27 = *(unsigned __int8 *)(v26 + 31);
    }
    v11 += v27;
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void sub_1561090(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1587ABC((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1587B48((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unsigned int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *unsigned int v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 40);
  if ((v14 & 0x7F) != 0)
  {
    if (v14)
    {
      uint64_t v16 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      sub_1881DF4((std::string **)(a1 + 96), v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_32;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    unsigned int v19 = *(std::string **)(a1 + 104);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      unsigned int v19 = (std::string *)sub_1563324((uint64_t)v21);
      *(void *)(a1 + 104) = v19;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v22 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v22 = &off_253DA40;
    }
    sub_155AAEC(v19, (uint64_t)v22);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_40;
    }
LABEL_32:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v23 = *(std::string **)(a1 + 112);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      sub_1584918((uint64_t)v25);
      *(void *)(a1 + 112) = v23;
    }
    if (*(void *)(a2 + 112)) {
      unint64_t v26 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      unint64_t v26 = &off_253E2B8;
    }
    sub_155D500(v23, (uint64_t)v26);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_48;
    }
LABEL_40:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v27 = *(std::string **)(a1 + 120);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (void *)*v29;
      }
      sub_1584898((uint64_t)v29);
      *(void *)(a1 + 120) = v27;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v30 = *(void *(****)(void *))(a2 + 120);
    }
    else {
      uint64_t v30 = &off_253E280;
    }
    sub_1561340(v27, (uint64_t)v30);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_49;
    }
LABEL_48:
    *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0)
      {
LABEL_16:
        *(_DWORD *)(a1 + 40) |= v14;
        goto LABEL_17;
      }
LABEL_15:
      *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
      goto LABEL_16;
    }
LABEL_49:
    *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
    if ((v14 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_1561340(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_12:
      result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
  if ((v2 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    result[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
LABEL_7:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_8:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_15613B4(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    uint64_t v4 = *(void *)(a1 + 64);
    while ((int)v3 >= 1)
    {
      uint64_t v5 = v3 - 1;
      char v6 = sub_155D5E8(*(void *)(v4 + 8 * v3));
      uint64_t v3 = v5;
      if ((v6 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v7 = *(unsigned int *)(a1 + 80);
    while ((int)v7 >= 1)
    {
      uint64_t v8 = v7 - 1;
      char v9 = sub_155FE04(*(void *)(*(void *)(a1 + 88) + 8 * v7));
      uint64_t v7 = v8;
      if ((v9 & 1) == 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 40) & 4) != 0)
    {
      uint64_t v10 = *(void *)(a1 + 112);
      if ((*(unsigned char *)(v10 + 16) & 1) == 0 || (~*(_DWORD *)(*(void *)(v10 + 24) + 16) & 3) != 0) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

void *sub_1561468@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.DirectionsRequest");
}

uint64_t sub_1561478(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = &off_24C1410;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = a2;
  *(void *)(a1 + 184) = &qword_2550250;
  *(_WORD *)(a1 + 200) = 0;
  *(void *)(a1 + 192) = 0;
  return a1;
}

void sub_1561514(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1561544(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 184);
  if (*(uint64_t **)(a1 + 184) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DA8(a1 + 168);
  sub_1587688((void *)(a1 + 144));
  sub_1587608((void *)(a1 + 120));
  sub_1587608((void *)(a1 + 96));
  sub_1587588((void *)(a1 + 72));
  sub_1587508((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1561630(uint64_t a1)
{
  sub_1561544(a1);

  operator delete();
}

uint64_t sub_1561668(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1557248(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_15638E8(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_155AE68(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 128);
  if ((int)v12 >= 1)
  {
    unsigned int v13 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_155AE68(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 152);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_155BF54(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 152) = 0;
  }
  *(_DWORD *)(a1 + 168) = 0;
  int v18 = *(_DWORD *)(a1 + 40);
  if (v18)
  {
    unint64_t v19 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v19 + 23) < 0)
    {
      **(unsigned char **)unint64_t v19 = 0;
      *(void *)(v19 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v19 = 0;
      *(unsigned char *)(v19 + 23) = 0;
    }
  }
  if ((v18 & 0x1E) != 0)
  {
    *(_WORD *)(a1 + 200) = 0;
    *(void *)(a1 + 192) = 0;
  }
  char v21 = *(unsigned char *)(a1 + 8);
  uint64_t v20 = a1 + 8;
  *(_DWORD *)(v20 + 32) = 0;
  if (v21)
  {
    return sub_188B4AC((uint64_t *)v20);
  }
  return result;
}

uint64_t sub_15617D4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)long long v81 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v81, a3[11].i32[1]))
  {
    int v79 = 0;
    goto LABEL_3;
  }
  int v79 = 0;
  unsigned int v80 = (uint64_t *)(a1 + 144);
  unsigned int v78 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v6 = (char *)(*(void *)v81 + 1);
    unsigned int v7 = **(unsigned char **)v81;
    if ((char)**(unsigned char **)v81 < 0)
    {
      int v8 = *v6;
      unsigned int v9 = v7 + (v8 << 7);
      unsigned int v7 = v9 - 128;
      if (v8 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v81, v9 - 128);
        unsigned int v7 = v10;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v81 + 2);
      }
    }
    *(void *)long long v81 = v6;
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 8) {
          goto LABEL_125;
        }
        uint64_t v11 = v6 + 1;
        unint64_t v12 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_14;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)long long v81 = sub_188C138((uint64_t)v6, (v14 - 128));
          if (!*(void *)v81) {
            goto LABEL_145;
          }
          unint64_t v12 = v70;
        }
        else
        {
          uint64_t v11 = v6 + 2;
LABEL_14:
          *(void *)long long v81 = v11;
        }
        if (v12 <= 0x1E && ((1 << v12) & 0x40100023) != 0)
        {
          *(_DWORD *)(a1 + 40) |= 2u;
          *(_DWORD *)(a1 + 192) = v12;
          goto LABEL_135;
        }
        if (*v78) {
          uint64_t v68 = (std::string *)((*v78 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v68 = (std::string *)sub_188DBD8(v78);
        }
        int v69 = 1;
        goto LABEL_114;
      case 2u:
        if (v7 != 18) {
          goto LABEL_125;
        }
        uint64_t v16 = v6 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)long long v81 = v16 + 1;
          int v18 = *(_DWORD **)(a1 + 64);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 56) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_156324C(*(void *)(a1 + 48));
            uint64_t v20 = sub_188CDC8(a1 + 48, v21);
            uint64_t v17 = *(unsigned __int8 **)v81;
          }
          uint64_t v16 = (char *)sub_1562050(a3, v20, v17);
          *(void *)long long v81 = v16;
          if (!v16) {
            goto LABEL_145;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_135;
          }
        }
      case 3u:
        if (v7 != 26) {
          goto LABEL_125;
        }
        uint64_t v22 = v6 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)long long v81 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 88);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 80), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 80) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_15855E4(*(void *)(a1 + 72));
            uint64_t v26 = sub_188CDC8(a1 + 72, v27);
            uint64_t v23 = *(unsigned __int8 **)v81;
          }
          uint64_t v22 = sub_15620E0(a3, v26, v23);
          *(void *)long long v81 = v22;
          if (!v22) {
            goto LABEL_145;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 26) {
            goto LABEL_135;
          }
        }
      case 4u:
        if (v7 != 32) {
          goto LABEL_125;
        }
        uint64_t v28 = v6 + 1;
        unint64_t v12 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_44;
        }
        int v29 = *v28;
        int v30 = v12 + (v29 << 7);
        unint64_t v12 = (v30 - 128);
        if (v29 < 0)
        {
          *(void *)long long v81 = sub_188C138((uint64_t)v6, (v30 - 128));
          if (!*(void *)v81) {
            goto LABEL_145;
          }
          unint64_t v12 = v71;
        }
        else
        {
          uint64_t v28 = v6 + 2;
LABEL_44:
          *(void *)long long v81 = v28;
        }
        if (v12 > 2)
        {
          if (*v78) {
            uint64_t v68 = (std::string *)((*v78 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v68 = (std::string *)sub_188DBD8(v78);
          }
          int v69 = 4;
LABEL_114:
          sub_188C020(v69, v12, v68);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 4u;
          *(_DWORD *)(a1 + 196) = v12;
        }
        goto LABEL_135;
      case 5u:
        if (v7 != 40) {
          goto LABEL_125;
        }
        v79 |= 8u;
        unsigned int v31 = v6 + 1;
        uint64_t v32 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_51;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v72 = sub_188C138((uint64_t)v6, v32);
          *(void *)long long v81 = v72;
          *(unsigned char *)(a1 + 200) = v73 != 0;
          if (!v72) {
            goto LABEL_145;
          }
        }
        else
        {
          unsigned int v31 = v6 + 2;
LABEL_51:
          *(void *)long long v81 = v31;
          *(unsigned char *)(a1 + 200) = v32 != 0;
        }
        goto LABEL_135;
      case 6u:
        if (v7 != 50) {
          goto LABEL_125;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v34 = *(void *)(a1 + 8);
        unint64_t v35 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
        if (v34) {
          unint64_t v35 = (uint64_t *)*v35;
        }
        int v36 = (std::string *)sub_1880F84((void *)(a1 + 184), v35);
        uint64_t v37 = (void *)sub_188C244(v36, *(char **)v81, (uint64_t)a3);
        goto LABEL_134;
      case 7u:
        if (v7 != 56) {
          goto LABEL_125;
        }
        v79 |= 0x10u;
        uint64_t v38 = v6 + 1;
        uint64_t v39 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_60;
        }
        int v40 = *v38;
        uint64_t v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v74 = sub_188C138((uint64_t)v6, v39);
          *(void *)long long v81 = v74;
          *(unsigned char *)(a1 + 201) = v75 != 0;
          if (!v74) {
            goto LABEL_145;
          }
        }
        else
        {
          uint64_t v38 = v6 + 2;
LABEL_60:
          *(void *)long long v81 = v38;
          *(unsigned char *)(a1 + 201) = v39 != 0;
        }
        goto LABEL_135;
      case 9u:
        if (v7 != 74) {
          goto LABEL_125;
        }
        std::string::size_type v41 = v6 - 1;
        while (1)
        {
          uint64_t v42 = (unsigned __int8 *)(v41 + 1);
          *(void *)long long v81 = v41 + 1;
          uint64_t v43 = *(_DWORD **)(a1 + 112);
          if (v43 && (uint64_t v44 = *(int *)(a1 + 104), (int)v44 < *v43))
          {
            *(_DWORD *)(a1 + 104) = v44 + 1;
            uint64_t v45 = *(void *)&v43[2 * v44 + 2];
          }
          else
          {
            sub_15633E4(*(void *)(a1 + 96));
            uint64_t v45 = sub_188CDC8(a1 + 96, v46);
            uint64_t v42 = *(unsigned __int8 **)v81;
          }
          std::string::size_type v41 = (char *)sub_1562170(a3, v45, v42);
          *(void *)long long v81 = v41;
          if (!v41) {
            goto LABEL_145;
          }
          if (*(void *)a3 <= (unint64_t)v41 || *v41 != 74) {
            goto LABEL_135;
          }
        }
      case 0xAu:
        if (v7 != 82) {
          goto LABEL_125;
        }
        uint64_t v47 = v6 - 1;
        while (1)
        {
          int v48 = (unsigned __int8 *)(v47 + 1);
          *(void *)long long v81 = v47 + 1;
          uint64_t v49 = *(_DWORD **)(a1 + 136);
          if (v49 && (uint64_t v50 = *(int *)(a1 + 128), (int)v50 < *v49))
          {
            *(_DWORD *)(a1 + 128) = v50 + 1;
            uint64_t v51 = *(void *)&v49[2 * v50 + 2];
          }
          else
          {
            sub_15633E4(*(void *)(a1 + 120));
            uint64_t v51 = sub_188CDC8(a1 + 120, v52);
            int v48 = *(unsigned __int8 **)v81;
          }
          uint64_t v47 = (char *)sub_1562170(a3, v51, v48);
          *(void *)long long v81 = v47;
          if (!v47) {
            goto LABEL_145;
          }
          if (*(void *)a3 <= (unint64_t)v47 || *v47 != 82) {
            goto LABEL_135;
          }
        }
      case 0xBu:
        if (v7 != 90) {
          goto LABEL_125;
        }
        int v53 = v6 - 1;
        while (1)
        {
          int v54 = (unsigned __int8 *)(v53 + 1);
          *(void *)long long v81 = v53 + 1;
          uint64_t v55 = *(_DWORD **)(a1 + 160);
          if (v55 && (uint64_t v56 = *(int *)(a1 + 152), (int)v56 < *v55))
          {
            *(_DWORD *)(a1 + 152) = v56 + 1;
            uint64_t v57 = *(void *)&v55[2 * v56 + 2];
          }
          else
          {
            sub_1563484(*v80);
            uint64_t v57 = sub_188CDC8((uint64_t)v80, v58);
            int v54 = *(unsigned __int8 **)v81;
          }
          int v53 = sub_1562200(a3, v57, v54);
          *(void *)long long v81 = v53;
          if (!v53) {
            goto LABEL_145;
          }
          if (*(void *)a3 <= (unint64_t)v53 || *v53 != 90) {
            goto LABEL_135;
          }
        }
      case 0xDu:
        if (v7 == 104)
        {
          uint64_t v59 = (uint64_t)(v6 - 1);
          while (1)
          {
            *(void *)long long v81 = v59 + 1;
            unint64_t v60 = *(unsigned __int8 *)(v59 + 1);
            uint64_t v61 = (char *)(v59 + 2);
            if (*(char *)(v59 + 1) < 0)
            {
              int v62 = *v61;
              int v63 = v60 + (v62 << 7);
              unint64_t v60 = (v63 - 128);
              if (v62 < 0)
              {
                *(void *)long long v81 = sub_188C138(v59 + 1, (v63 - 128));
                if (!*(void *)v81) {
                  goto LABEL_145;
                }
                unint64_t v60 = v66;
                goto LABEL_97;
              }
              uint64_t v61 = (char *)(v59 + 3);
            }
            *(void *)long long v81 = v61;
LABEL_97:
            if (v60 > 5)
            {
              if (*v78) {
                unint64_t v67 = (std::string *)((*v78 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                unint64_t v67 = (std::string *)sub_188DBD8(v78);
              }
              sub_188C020(13, v60, v67);
            }
            else
            {
              uint64_t v64 = *(unsigned int *)(a1 + 168);
              if (v64 == *(_DWORD *)(a1 + 172))
              {
                int v65 = v64 + 1;
                sub_188C80C((unsigned int *)(a1 + 168), v64 + 1);
                *(_DWORD *)(*(void *)(a1 + 176) + 4 * v64) = v60;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 176) + 4 * v64) = v60;
                int v65 = v64 + 1;
              }
              *(_DWORD *)(a1 + 168) = v65;
            }
            uint64_t v59 = *(void *)v81;
            if (*(void *)a3 <= *(void *)v81 || **(unsigned char **)v81 != 104) {
              goto LABEL_135;
            }
          }
        }
        if (v7 == 106)
        {
          *(void *)&long long v82 = a1 + 168;
          *((void *)&v82 + 1) = sub_1553088;
          uint64_t v83 = a1 + 8;
          int v84 = 13;
          uint64_t v37 = sub_1112E88((uint64_t)a3, v6, &v82);
LABEL_134:
          *(void *)long long v81 = v37;
          if (!v37) {
            goto LABEL_145;
          }
LABEL_135:
          if (sub_11947B8((uint64_t)a3, (char **)v81, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
LABEL_125:
        if (v7) {
          BOOL v76 = (v7 & 7) == 4;
        }
        else {
          BOOL v76 = 1;
        }
        if (!v76)
        {
          if (v7 - 7600 > 0x18F)
          {
            if (*v78)
            {
              uint64_t v77 = (std::string *)((*v78 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v77 = (std::string *)sub_188DBD8(v78);
              uint64_t v6 = *(char **)v81;
            }
            uint64_t v37 = sub_1885AC0(v7, v77, v6, a3);
          }
          else
          {
            uint64_t v37 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_253DCA8, v78, a3);
          }
          goto LABEL_134;
        }
        if (v6) {
          a3[10].i32[0] = v7 - 1;
        }
        else {
LABEL_145:
        }
          *(void *)long long v81 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v79;
        return *(void *)v81;
      default:
        goto LABEL_125;
    }
  }
}

uint64_t sub_1562050(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1557440(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15620E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15840F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1562170(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_155AFC4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1562200(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_155BF80(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1562290(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 192);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_1558078(v12, v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 80);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      uint64_t v4 = sub_1584404(v17, (unint64_t)v19, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v20 = *(int *)(a1 + 196);
    char *v4 = 32;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v23 = *(unsigned char *)(a1 + 200);
    char *v4 = 40;
    v4[1] = v23;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_33:
      if ((v6 & 0x10) == 0) {
        goto LABEL_42;
      }
      goto LABEL_39;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_33;
  }
  uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_42;
  }
LABEL_39:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v24 = *(unsigned char *)(a1 + 201);
  char *v4 = 56;
  v4[1] = v24;
  v4 += 2;
LABEL_42:
  int v25 = *(_DWORD *)(a1 + 104);
  if (v25)
  {
    for (int k = 0; k != v25; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      char *v4 = 74;
      unsigned int v28 = *(_DWORD *)(v27 + 20);
      v4[1] = v28;
      if (v28 > 0x7F) {
        int v29 = sub_188A9CC(v28, v4 + 1);
      }
      else {
        int v29 = v4 + 2;
      }
      uint64_t v4 = sub_155B58C(v27, (unint64_t)v29, a3);
    }
  }
  int v30 = *(_DWORD *)(a1 + 128);
  if (v30)
  {
    for (int m = 0; m != v30; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      char *v4 = 82;
      unsigned int v33 = *(_DWORD *)(v32 + 20);
      v4[1] = v33;
      if (v33 > 0x7F) {
        uint64_t v34 = sub_188A9CC(v33, v4 + 1);
      }
      else {
        uint64_t v34 = v4 + 2;
      }
      uint64_t v4 = sub_155B58C(v32, (unint64_t)v34, a3);
    }
  }
  int v35 = *(_DWORD *)(a1 + 152);
  if (v35)
  {
    for (int n = 0; n != v35; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v37 = *(void *)(*(void *)(a1 + 160) + 8 * n + 8);
      char *v4 = 90;
      unsigned int v38 = *(_DWORD *)(v37 + 20);
      v4[1] = v38;
      if (v38 > 0x7F) {
        uint64_t v39 = sub_188A9CC(v38, v4 + 1);
      }
      else {
        uint64_t v39 = v4 + 2;
      }
      uint64_t v4 = sub_155C1CC(v37, (unint64_t)v39, a3);
    }
  }
  uint64_t v40 = *(unsigned int *)(a1 + 168);
  if ((int)v40 >= 1)
  {
    for (iint i = 0; ii != v40; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v42 = *(int *)(*(void *)(a1 + 176) + 4 * ii);
      char *v4 = 104;
      v4[1] = v42;
      if (v42 > 0x7F)
      {
        v4[1] = v42 | 0x80;
        unint64_t v43 = v42 >> 7;
        v4[2] = v42 >> 7;
        v4 += 3;
        if (v42 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v44 = v43 >> 14;
            v43 >>= 7;
            *v4++ = v43;
          }
          while (v44);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v45 = *(void *)(a1 + 8);
  if ((v45 & 1) == 0) {
    return v4;
  }
  unint64_t v47 = v45 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v47 + 31) < 0)
  {
    int v48 = *(void **)(v47 + 8);
    uint64_t v49 = *(void *)(v47 + 16);
  }
  else
  {
    int v48 = (void *)(v47 + 8);
    LODWORD(v49) = *(unsigned __int8 *)(v47 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v49)
  {
    uint64_t v50 = (int)v49;
    memcpy(v4, v48, (int)v49);
    v4 += v50;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v48, v49, v4);
}

uint64_t sub_156283C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  if ((*(unsigned char *)(a1 + 40) & 2) != 0)
  {
    int v3 = *(_DWORD *)(a1 + 192);
    uint64_t v4 = (9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6;
    if (v3 >= 0) {
      uint64_t v5 = v4;
    }
    else {
      uint64_t v5 = 10;
    }
    v2 += v5 + 1;
  }
  uint64_t v6 = *(int *)(a1 + 56);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = *(void *)(a1 + 64);
  if (v8) {
    unint64_t v9 = (uint64_t *)(v8 + 8);
  }
  else {
    unint64_t v9 = 0;
  }
  if (v6)
  {
    uint64_t v10 = 8 * v6;
    do
    {
      uint64_t v11 = *v9++;
      uint64_t v12 = sub_15589EC(v11);
      v7 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      v10 -= 8;
    }
    while (v10);
  }
  uint64_t v13 = *(int *)(a1 + 80);
  uint64_t v14 = v7 + v13;
  uint64_t v15 = *(void *)(a1 + 88);
  if (v15) {
    uint64_t v16 = (uint64_t *)(v15 + 8);
  }
  else {
    uint64_t v16 = 0;
  }
  if (v13)
  {
    uint64_t v17 = 8 * v13;
    do
    {
      uint64_t v18 = *v16++;
      uint64_t v19 = sub_1584664(v18);
      v14 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      v17 -= 8;
    }
    while (v17);
  }
  uint64_t v20 = *(int *)(a1 + 104);
  uint64_t v21 = v14 + v20;
  uint64_t v22 = *(void *)(a1 + 112);
  if (v22) {
    char v23 = (uint64_t *)(v22 + 8);
  }
  else {
    char v23 = 0;
  }
  if (v20)
  {
    uint64_t v24 = 8 * v20;
    do
    {
      uint64_t v25 = *v23++;
      uint64_t v26 = sub_155B9A4(v25);
      v21 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
      v24 -= 8;
    }
    while (v24);
  }
  uint64_t v27 = *(int *)(a1 + 128);
  uint64_t v28 = v21 + v27;
  uint64_t v29 = *(void *)(a1 + 136);
  if (v29) {
    int v30 = (uint64_t *)(v29 + 8);
  }
  else {
    int v30 = 0;
  }
  if (v27)
  {
    uint64_t v31 = 8 * v27;
    do
    {
      uint64_t v32 = *v30++;
      uint64_t v33 = sub_155B9A4(v32);
      v28 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6);
      v31 -= 8;
    }
    while (v31);
  }
  uint64_t v34 = *(int *)(a1 + 152);
  uint64_t v35 = v28 + v34;
  uint64_t v36 = *(void *)(a1 + 160);
  if (v36) {
    uint64_t v37 = (uint64_t *)(v36 + 8);
  }
  else {
    uint64_t v37 = 0;
  }
  if (v34)
  {
    uint64_t v38 = 8 * v34;
    do
    {
      uint64_t v39 = *v37++;
      uint64_t v40 = sub_155C370(v39);
      v35 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6);
      v38 -= 8;
    }
    while (v38);
  }
  uint64_t v41 = *(unsigned int *)(a1 + 168);
  if (v41)
  {
    int v42 = 0;
    uint64_t v43 = 0;
    do
    {
      int v44 = *(_DWORD *)(*(void *)(a1 + 176) + 4 * v42);
      if (v44 < 0) {
        uint64_t v45 = 10;
      }
      else {
        uint64_t v45 = (9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6;
      }
      v43 += v45;
      ++v42;
    }
    while (v41 != v42);
  }
  else
  {
    uint64_t v43 = 0;
  }
  uint64_t result = v35 + v41 + v43;
  int v47 = *(_DWORD *)(a1 + 40);
  if (v47)
  {
    unint64_t v48 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v49 = *(unsigned __int8 *)(v48 + 23);
    uint64_t v50 = *(void *)(v48 + 8);
    if ((v49 & 0x80u) == 0) {
      uint64_t v50 = v49;
    }
    result += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v47 & 0x1C) != 0)
  {
    if ((v47 & 4) != 0)
    {
      int v51 = *(_DWORD *)(a1 + 196);
      if (v51 < 0) {
        uint64_t v52 = 11;
      }
      else {
        uint64_t v52 = ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v52;
    }
    uint64_t v53 = result + 2;
    if ((v47 & 8) == 0) {
      uint64_t v53 = result;
    }
    if ((v47 & 0x10) != 0) {
      uint64_t result = v53 + 2;
    }
    else {
      uint64_t result = v53;
    }
  }
  uint64_t v54 = *(void *)(a1 + 8);
  if (v54)
  {
    unint64_t v55 = v54 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v55 + 31) < 0) {
      uint64_t v56 = *(void *)(v55 + 16);
    }
    else {
      uint64_t v56 = *(unsigned __int8 *)(v55 + 31);
    }
    result += v56;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_1562B5C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1587BD4((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1587C60((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1587CEC((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_1587CEC((uint64_t *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    char v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      *char v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_1587D78((uint64_t *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 168);
  if (v29)
  {
    uint64_t v30 = *(int *)(a1 + 168);
    sub_188C80C((unsigned int *)(a1 + 168), v30 + v29);
    uint64_t v31 = *(void *)(a1 + 176);
    *(_DWORD *)(a1 + 168) += *(_DWORD *)(a2 + 168);
    memcpy((void *)(v31 + 4 * v30), *(const void **)(a2 + 176), 4 * *(int *)(a2 + 168));
  }
  int v32 = *(_DWORD *)(a2 + 40);
  if ((v32 & 0x1F) != 0)
  {
    if (v32)
    {
      uint64_t v34 = (long long *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v35 = *(void *)(a1 + 8);
      uint64_t v36 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
      if (v35) {
        uint64_t v36 = (uint64_t *)*v36;
      }
      sub_1881DF4((std::string **)(a1 + 184), v34, v36);
      if ((v32 & 2) == 0)
      {
LABEL_21:
        if ((v32 & 4) == 0) {
          goto LABEL_22;
        }
        goto LABEL_34;
      }
    }
    else if ((v32 & 2) == 0)
    {
      goto LABEL_21;
    }
    *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
    if ((v32 & 4) == 0)
    {
LABEL_22:
      if ((v32 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_35;
    }
LABEL_34:
    *(_DWORD *)(a1 + 196) = *(_DWORD *)(a2 + 196);
    if ((v32 & 8) == 0)
    {
LABEL_23:
      if ((v32 & 0x10) == 0)
      {
LABEL_25:
        *(_DWORD *)(a1 + 40) |= v32;
        goto LABEL_26;
      }
LABEL_24:
      *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
      goto LABEL_25;
    }
LABEL_35:
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    if ((v32 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_26:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v33 = *(void *)(a2 + 8);
  if (v33)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v33 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1562E9C(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16) || (*(unsigned char *)(a1 + 40) & 2) == 0) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    BOOL v4 = sub_155937C(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v3;
    if (!v4) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  while ((int)v5 >= 1)
  {
    uint64_t v7 = v5 - 1;
    BOOL v8 = sub_1563ADC(*(void *)(v6 + 8 * v5));
    uint64_t v5 = v7;
    if (!v8) {
      return 0;
    }
  }
  if (!sub_1562F5C(a1 + 96)) {
    return 0;
  }

  return sub_1562F5C(a1 + 120);
}

uint64_t sub_1562F5C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v4 + 16) & 0x10) != 0 && (~*(_DWORD *)(*(void *)(v4 + 56) + 16) & 3) != 0) {
      break;
    }
    if (--v2 <= 1) {
      return 1;
    }
  }
  return 0;
}

void *sub_1562FB8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.DirectionsResponse");
}

uint64_t sub_1562FC8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C0B90;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1563044(uint64_t a1)
{
  if (!a1)
  {
    sub_1587DF4();
  }

  return sub_155376C(v3, a1, 0);
}

uint64_t sub_15630A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C0C90;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1563140(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C0D10;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_15631CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C0D90;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = -1;
  return result;
}

uint64_t sub_156324C(uint64_t a1)
{
  if (!a1)
  {
    sub_1587E60();
  }

  return sub_1556FE8(v3, a1, 0);
}

uint64_t sub_15632A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C0E90;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1563324(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C0F10;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0xC350000000000;
  *(_WORD *)(result + 72) = 257;
  *(_DWORD *)(result + 76) = 1;
  return result;
}

double sub_15633E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C0F90;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  *(void *)(v2 + 40) = &qword_2550250;
  *(void *)(v2 + 48) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 81) = 0u;
  *(_DWORD *)(v2 + 100) = 1;
  return result;
}

double sub_1563484(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C1010;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = xmmword_2142220;
  return result;
}

uint64_t sub_1563504(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C1090;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

void *sub_15635A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C1110;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_156361C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C1190;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_1563698(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24C1210;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_1563734(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C1290;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_15637AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C1310;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 2;
  return result;
}

uint64_t sub_1563830(uint64_t a1)
{
  if (!a1)
  {
    sub_1587ECC();
  }

  return sub_155FEB4(v3, a1, 0);
}

uint64_t sub_156388C(uint64_t a1)
{
  if (!a1)
  {
    sub_1587F38();
  }

  return sub_1561478(v3, a1, 0);
}

uint64_t sub_15638E8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_1552B90(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (v5) {
    double result = sub_155FE88(*(void *)(v1 + 48));
  }
  if ((v5 & 6) != 0)
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

std::string *sub_1563984(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    double result = sub_1589BD8(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    BOOL v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *BOOL v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v13 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v13 = (void *)*v13;
        }
        sub_1584898((uint64_t)v13);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 48)) {
        int v14 = *(void *(****)(void *))(a2 + 48);
      }
      else {
        int v14 = &off_253E280;
      }
      double result = sub_1561340(data, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1563ADC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  do
  {
    BOOL v1 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    BOOL v5 = sub_1552ED8(*(void *)(v3 + 8 * v2));
    uint64_t v2 = v4;
  }
  while (v5);
  return v1;
}

void *sub_1563B3C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1563BB0(void *a1)
{
  sub_1563B3C(a1);

  operator delete();
}

uint64_t sub_1563BE8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1563C10(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    BOOL v8 = v35 + 1;
    unsigned int v9 = *v35;
    if (*v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        BOOL v8 = (char *)sub_188C180((uint64_t)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        BOOL v8 = v35 + 2;
      }
    }
    uint64_t v35 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 > 7) {
      break;
    }
    if (v12 == 3)
    {
      if (v9 != 24) {
        goto LABEL_33;
      }
      v5 |= 1u;
      int v19 = v8 + 1;
      uint64_t v20 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_27;
      }
      int v21 = *v19;
      uint64_t v20 = v20 + (v21 << 7) - 128;
      if ((v21 & 0x80000000) == 0)
      {
        int v19 = v8 + 2;
LABEL_27:
        uint64_t v35 = v19;
        *(void *)(a1 + 24) = v20;
        goto LABEL_40;
      }
      uint64_t v31 = (char *)sub_188C138((uint64_t)v8, v20);
      uint64_t v35 = v31;
      *(void *)(a1 + 24) = v32;
      if (!v31) {
        goto LABEL_53;
      }
    }
    else
    {
      if (v12 != 7 || v9 != 56) {
        goto LABEL_33;
      }
      v5 |= 4u;
      uint64_t v13 = v8 + 1;
      uint64_t v14 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_15;
      }
      int v15 = *v13;
      uint64_t v14 = v14 + (v15 << 7) - 128;
      if ((v15 & 0x80000000) == 0)
      {
        uint64_t v13 = v8 + 2;
LABEL_15:
        uint64_t v35 = v13;
        *(unsigned char *)(a1 + 36) = v14 != 0;
        goto LABEL_40;
      }
      int v27 = (char *)sub_188C138((uint64_t)v8, v14);
      uint64_t v35 = v27;
      *(unsigned char *)(a1 + 36) = v28 != 0;
      if (!v27) {
        goto LABEL_53;
      }
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 8)
  {
    if (v9 != 64) {
      goto LABEL_33;
    }
    v5 |= 8u;
    int v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      int v22 = v8 + 2;
LABEL_32:
      uint64_t v35 = v22;
      *(_DWORD *)(a1 + 40) = v23;
      goto LABEL_40;
    }
    uint64_t v33 = (char *)sub_188C0D0((uint64_t)v8, v23);
    uint64_t v35 = v33;
    *(_DWORD *)(a1 + 40) = v34;
    if (!v33) {
      goto LABEL_53;
    }
    goto LABEL_40;
  }
  if (v12 == 2047 && v9 == 248)
  {
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    int v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_22;
    }
    int v18 = *v16;
    int v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_22:
      uint64_t v35 = v16;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_40;
    }
    int v29 = (char *)sub_188C0D0((uint64_t)v8, v17);
    uint64_t v35 = v29;
    *(_DWORD *)(a1 + 32) = v30;
    if (!v29) {
      goto LABEL_53;
    }
    goto LABEL_40;
  }
LABEL_33:
  if (v9) {
    BOOL v25 = (v9 & 7) == 4;
  }
  else {
    BOOL v25 = 1;
  }
  if (!v25)
  {
    if (*v7)
    {
      uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      BOOL v8 = v35;
    }
    uint64_t v35 = (char *)sub_1885AC0(v9, v26, v8, a3);
    if (!v35) {
      goto LABEL_53;
    }
    goto LABEL_40;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_53:
  uint64_t v35 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v35;
}

unsigned char *sub_1563EE4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 24;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 36);
    unsigned char *v4 = 56;
    v4[1] = v10;
    v4 += 2;
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v11 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 64;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unsigned int v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v14 = *(_DWORD *)(a1 + 32);
    *(_WORD *)uint64_t v4 = 32760;
    v4[2] = v14;
    if (v14 > 0x7F)
    {
      v4[2] = v14 | 0x80;
      unsigned int v15 = v14 >> 7;
      v4[3] = v14 >> 7;
      v4 += 4;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

unint64_t sub_156413C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    unint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1564214()
{
  return 1;
}

void *sub_156421C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.Transfer");
}

uint64_t sub_156422C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253DD78)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_1556018(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1556018(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15642FC(uint64_t a1)
{
  sub_156422C(a1);

  operator delete();
}

uint64_t sub_1564334(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_1553AB8(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_1553AB8(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0x3C) != 0)
  {
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
    *(_DWORD *)(v1 + 56) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_15643B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v38 + 1;
    unsigned int v9 = *v38;
    if (*v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v38 + 2;
      }
    }
    uint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 3u:
        if (v9 != 26) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (v12) {
          goto LABEL_41;
        }
        unsigned int v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v13 = (void *)*v13;
        }
        uint64_t v12 = sub_1563140((uint64_t)v13);
        *(void *)(a1 + 24) = v12;
        goto LABEL_40;
      case 4u:
        if (v9 != 32) {
          goto LABEL_42;
        }
        v5 |= 4u;
        uint64_t v17 = v8 + 1;
        uint64_t v18 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v19 = *v17;
        uint64_t v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          int v30 = (char *)sub_188C138((uint64_t)v8, v18);
          uint64_t v38 = v30;
          *(void *)(a1 + 40) = v31;
          if (!v30) {
            goto LABEL_63;
          }
        }
        else
        {
          uint64_t v17 = v8 + 2;
LABEL_24:
          uint64_t v38 = v17;
          *(void *)(a1 + 40) = v18;
        }
        goto LABEL_50;
      case 5u:
        if (v9 != 40) {
          goto LABEL_42;
        }
        v5 |= 8u;
        uint64_t v20 = v8 + 1;
        int v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v22 = *v20;
        int v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v32 = (char *)sub_188C0D0((uint64_t)v8, v21);
          uint64_t v38 = v32;
          *(_DWORD *)(a1 + 48) = v33;
          if (!v32) {
            goto LABEL_63;
          }
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_29:
          uint64_t v38 = v20;
          *(_DWORD *)(a1 + 48) = v21;
        }
        goto LABEL_50;
      case 6u:
        if (v9 != 48) {
          goto LABEL_42;
        }
        v5 |= 0x10u;
        int v23 = v8 + 1;
        uint64_t v24 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          int v34 = (char *)sub_188C138((uint64_t)v8, v24);
          uint64_t v38 = v34;
          *(unsigned char *)(a1 + 52) = v35 != 0;
          if (!v34) {
            goto LABEL_63;
          }
        }
        else
        {
          int v23 = v8 + 2;
LABEL_34:
          uint64_t v38 = v23;
          *(unsigned char *)(a1 + 52) = v24 != 0;
        }
        goto LABEL_50;
      case 7u:
        goto LABEL_42;
      case 8u:
        if (v9 != 66) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v12 = *(void *)(a1 + 32);
        if (!v12)
        {
          uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v26 = (void *)*v26;
          }
          uint64_t v12 = sub_1563140((uint64_t)v26);
          *(void *)(a1 + 32) = v12;
LABEL_40:
          unint64_t v8 = v38;
        }
LABEL_41:
        int v27 = (char *)sub_155478C(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_49;
      default:
        if (v9 >> 3 == 2047 && v9 == 248)
        {
          v5 |= 0x20u;
          unsigned int v14 = v8 + 1;
          int v15 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v16 = *v14;
          int v15 = v15 + (v16 << 7) - 128;
          if ((v16 & 0x80000000) == 0)
          {
            unsigned int v14 = v8 + 2;
LABEL_19:
            uint64_t v38 = v14;
            *(_DWORD *)(a1 + 56) = v15;
            goto LABEL_50;
          }
          uint64_t v36 = (char *)sub_188C0D0((uint64_t)v8, v15);
          uint64_t v38 = v36;
          *(_DWORD *)(a1 + 56) = v37;
          if (!v36) {
            goto LABEL_63;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_42:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            int v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v38;
          }
          int v27 = (char *)sub_1885AC0(v9, v29, v8, a3);
LABEL_49:
          uint64_t v38 = v27;
          if (!v27) {
            goto LABEL_63;
          }
          goto LABEL_50;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_63:
        }
          uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v38;
    }
  }
}

unsigned char *sub_1564740(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 26;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15564E4(v7, v9, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 40);
    unsigned char *v4 = 32;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 40;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v16 = *(unsigned char *)(a1 + 52);
    unsigned char *v4 = 48;
    v4[1] = v16;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_24:
      if ((v6 & 0x20) == 0) {
        goto LABEL_41;
      }
      goto LABEL_35;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_24;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v17 = *(void *)(a1 + 32);
  unsigned char *v4 = 66;
  unsigned int v18 = *(_DWORD *)(v17 + 20);
  v4[1] = v18;
  if (v18 > 0x7F) {
    int v19 = sub_188A9CC(v18, v4 + 1);
  }
  else {
    int v19 = v4 + 2;
  }
  char v4 = sub_15564E4(v17, v19, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_35:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v20 = *(_DWORD *)(a1 + 56);
    *(_WORD *)char v4 = 32760;
    v4[2] = v20;
    if (v20 > 0x7F)
    {
      v4[2] = v20 | 0x80;
      unsigned int v21 = v20 >> 7;
      v4[3] = v20 >> 7;
      v4 += 4;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_41:
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_1564A78(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v5 = sub_155677C(*(void *)(a1 + 24));
    uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_155677C(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_10:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  if ((v2 & 0x10) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 0x20) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_16:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1564BD4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_1563140((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)(uint64_t))(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253D8A0;
      }
      uint64_t result = sub_1555900(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_30;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      unint64_t v10 = (std::string *)sub_1563140((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      unsigned int v13 = *(uint64_t (****)(uint64_t))(a2 + 32);
    }
    else {
      unsigned int v13 = &off_253D8A0;
    }
    uint64_t result = sub_1555900(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_31;
    }
LABEL_30:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_32;
    }
LABEL_31:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
      goto LABEL_9;
    }
LABEL_32:
    v3[2].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 52);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1564D24()
{
  return 1;
}

void *sub_1564D2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.Trip");
}

void *sub_1564D3C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1564DC0((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1564DC0(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  uint64_t result = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_253DDB8)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_1556018(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_1556018(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 64);
    if (v7)
    {
      sub_1556018(v7);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 72);
    if (result)
    {
      sub_1556018((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_1564ECC(void *a1)
{
  sub_1564D3C(a1);

  operator delete();
}

uint64_t sub_1564F04(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x7F) == 0) {
    goto LABEL_10;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_20;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_24:
    unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_28;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_28;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_29:
    uint64_t result = sub_1553AB8(*(void *)(v1 + 56));
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
    goto LABEL_30;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_20:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_24;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_24;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_28:
  uint64_t result = sub_1553AB8(*(void *)(result + 48));
  if ((v2 & 0x10) != 0) {
    goto LABEL_29;
  }
LABEL_7:
  if ((v2 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_30:
  uint64_t result = sub_1553AB8(*(void *)(v1 + 64));
  if ((v2 & 0x40) != 0) {
LABEL_9:
  }
    uint64_t result = sub_1553AB8(*(void *)(v1 + 72));
LABEL_10:
  *(void *)(v1 + 80) = 0;
  if ((v2 & 0x1F00) != 0)
  {
    *(void *)(v1 + 88) = 0;
    *(void *)(v1 + 96) = 0;
    *(_DWORD *)(v1 + 104) = -1;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1565050(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v57 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v57, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v57 + 1);
    unsigned int v9 = **(unsigned char **)v57;
    if ((char)**(unsigned char **)v57 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v57, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v57 + 2);
      }
    }
    *(void *)uint64_t v57 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v12 = *(void *)(a1 + 48);
        if (v12) {
          goto LABEL_40;
        }
        unsigned int v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v13 = (void *)*v13;
        }
        uint64_t v12 = sub_1563140((uint64_t)v13);
        *(void *)(a1 + 48) = v12;
        goto LABEL_39;
      case 2u:
        if (v9 != 18) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v12 = *(void *)(a1 + 56);
        if (v12) {
          goto LABEL_40;
        }
        uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v12 = sub_1563140((uint64_t)v17);
        *(void *)(a1 + 56) = v12;
        goto LABEL_39;
      case 3u:
        if (v9 != 26) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        int v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          int v19 = (uint64_t *)*v19;
        }
        unsigned int v20 = (void *)(a1 + 24);
        goto LABEL_66;
      case 4u:
        if (v9 != 34) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v12 = *(void *)(a1 + 64);
        if (v12) {
          goto LABEL_40;
        }
        unsigned int v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v21 = (void *)*v21;
        }
        uint64_t v12 = sub_1563140((uint64_t)v21);
        *(void *)(a1 + 64) = v12;
        goto LABEL_39;
      case 5u:
        if (v9 != 42) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v12 = *(void *)(a1 + 72);
        if (v12) {
          goto LABEL_40;
        }
        unsigned int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v22 = (void *)*v22;
        }
        uint64_t v12 = sub_1563140((uint64_t)v22);
        *(void *)(a1 + 72) = v12;
LABEL_39:
        unint64_t v8 = *(unsigned __int8 **)v57;
LABEL_40:
        uint64_t v23 = sub_155478C(a3, v12, v8);
        goto LABEL_84;
      case 6u:
      case 8u:
      case 0xDu:
        goto LABEL_77;
      case 7u:
        if (v9 != 56) {
          goto LABEL_77;
        }
        v5 |= 0x80u;
        uint64_t v24 = (char *)(v8 + 1);
        uint64_t v25 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v45 = sub_188C138((uint64_t)v8, v25);
          *(void *)uint64_t v57 = v45;
          *(void *)(a1 + 80) = v46;
          if (!v45) {
            goto LABEL_106;
          }
        }
        else
        {
          uint64_t v24 = (char *)(v8 + 2);
LABEL_45:
          *(void *)uint64_t v57 = v24;
          *(void *)(a1 + 80) = v25;
        }
        goto LABEL_85;
      case 9u:
        if (v9 != 72) {
          goto LABEL_77;
        }
        uint64_t v27 = (char *)(v8 + 1);
        unint64_t v28 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_50;
        }
        int v29 = *v27;
        int v30 = v28 + (v29 << 7);
        unint64_t v28 = (v30 - 128);
        if (v29 < 0)
        {
          *(void *)uint64_t v57 = sub_188C138((uint64_t)v8, (v30 - 128));
          if (!*(void *)v57) {
            goto LABEL_106;
          }
          unint64_t v28 = v47;
        }
        else
        {
          uint64_t v27 = (char *)(v8 + 2);
LABEL_50:
          *(void *)uint64_t v57 = v27;
        }
        if ((v28 + 2) > 9)
        {
          if (*v7) {
            uint64_t v56 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v56 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(9, v28, v56);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x1000u;
          *(_DWORD *)(a1 + 104) = v28;
        }
        goto LABEL_85;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_77;
        }
        v5 |= 0x100u;
        uint64_t v31 = (char *)(v8 + 1);
        int v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v33 = *v31;
        int v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v48 = sub_188C0D0((uint64_t)v8, v32);
          *(void *)uint64_t v57 = v48;
          *(_DWORD *)(a1 + 88) = v49;
          if (!v48) {
            goto LABEL_106;
          }
        }
        else
        {
          uint64_t v31 = (char *)(v8 + 2);
LABEL_57:
          *(void *)uint64_t v57 = v31;
          *(_DWORD *)(a1 + 88) = v32;
        }
        goto LABEL_85;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v34 = *(void *)(a1 + 8);
        int v19 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
        if (v34) {
          int v19 = (uint64_t *)*v19;
        }
        unsigned int v20 = (void *)(a1 + 32);
        goto LABEL_66;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v35 = *(void *)(a1 + 8);
        int v19 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          int v19 = (uint64_t *)*v19;
        }
        unsigned int v20 = (void *)(a1 + 40);
LABEL_66:
        uint64_t v36 = (std::string *)sub_1880F84(v20, v19);
        uint64_t v23 = (uint64_t)sub_188C244(v36, *(char **)v57, (uint64_t)a3);
        goto LABEL_84;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_77;
        }
        v5 |= 0x200u;
        int v37 = (char *)(v8 + 1);
        int v38 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_71;
        }
        int v39 = *v37;
        int v38 = v38 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v50 = sub_188C0D0((uint64_t)v8, v38);
          *(void *)uint64_t v57 = v50;
          *(_DWORD *)(a1 + 92) = v51;
          if (!v50) {
            goto LABEL_106;
          }
        }
        else
        {
          int v37 = (char *)(v8 + 2);
LABEL_71:
          *(void *)uint64_t v57 = v37;
          *(_DWORD *)(a1 + 92) = v38;
        }
        goto LABEL_85;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_77;
        }
        v5 |= 0x400u;
        uint64_t v40 = (char *)(v8 + 1);
        int v41 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_76;
        }
        int v42 = *v40;
        int v41 = v41 + (v42 << 7) - 128;
        if (v42 < 0)
        {
          uint64_t v52 = sub_188C0D0((uint64_t)v8, v41);
          *(void *)uint64_t v57 = v52;
          *(_DWORD *)(a1 + 96) = v53;
          if (!v52) {
            goto LABEL_106;
          }
        }
        else
        {
          uint64_t v40 = (char *)(v8 + 2);
LABEL_76:
          *(void *)uint64_t v57 = v40;
          *(_DWORD *)(a1 + 96) = v41;
        }
        goto LABEL_85;
      default:
        if (v9 >> 3 == 2047 && v9 == 248)
        {
          v5 |= 0x800u;
          unsigned int v14 = (char *)(v8 + 1);
          int v15 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v16 = *v14;
          int v15 = v15 + (v16 << 7) - 128;
          if ((v16 & 0x80000000) == 0)
          {
            unsigned int v14 = (char *)(v8 + 2);
LABEL_19:
            *(void *)uint64_t v57 = v14;
            *(_DWORD *)(a1 + 100) = v15;
            goto LABEL_85;
          }
          uint64_t v54 = sub_188C0D0((uint64_t)v8, v15);
          *(void *)uint64_t v57 = v54;
          *(_DWORD *)(a1 + 100) = v55;
          if (!v54) {
            goto LABEL_106;
          }
LABEL_85:
          if (sub_11947B8((uint64_t)a3, (char **)v57, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_77:
        if (v9) {
          BOOL v43 = (v9 & 7) == 4;
        }
        else {
          BOOL v43 = 1;
        }
        if (!v43)
        {
          if (*v7)
          {
            int v44 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v44 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v57;
          }
          uint64_t v23 = (uint64_t)sub_1885AC0(v9, v44, (char *)v8, a3);
LABEL_84:
          *(void *)uint64_t v57 = v23;
          if (!v23) {
            goto LABEL_106;
          }
          goto LABEL_85;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_106:
        }
          *(void *)uint64_t v57 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v57;
    }
  }
}

unsigned char *sub_1565638(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15564E4(v7, v9, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_3:
      if ((v6 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_15564E4(v10, v12, a3);
  if ((v6 & 1) == 0)
  {
LABEL_4:
    if ((v6 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_5:
    if ((v6 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 64);
  unsigned char *v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  char v4 = sub_15564E4(v13, v15, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_6:
    if ((v6 & 0x80) == 0) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 72);
  unsigned char *v4 = 42;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_15564E4(v16, v18, a3);
  if ((v6 & 0x80) != 0)
  {
LABEL_33:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(void *)(a1 + 80);
    unsigned char *v4 = 56;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_39:
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 104);
    unsigned char *v4 = 72;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 88);
    unsigned char *v4 = 80;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    char v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_55:
      if ((v6 & 0x200) == 0) {
        goto LABEL_65;
      }
      goto LABEL_59;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_55;
  }
  char v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0) {
    goto LABEL_65;
  }
LABEL_59:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v28 = *(_DWORD *)(a1 + 92);
  unsigned char *v4 = 112;
  v4[1] = v28;
  if (v28 > 0x7F)
  {
    v4[1] = v28 | 0x80;
    unsigned int v29 = v28 >> 7;
    v4[2] = v28 >> 7;
    v4 += 3;
    if (v28 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v30 = v29 >> 14;
        v29 >>= 7;
        *v4++ = v29;
      }
      while (v30);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_65:
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v31 = *(_DWORD *)(a1 + 96);
    unsigned char *v4 = 120;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unsigned int v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v34 = *(_DWORD *)(a1 + 100);
    *(_WORD *)char v4 = 32760;
    v4[2] = v34;
    if (v34 > 0x7F)
    {
      v4[2] = v34 | 0x80;
      unsigned int v35 = v34 >> 7;
      v4[3] = v34 >> 7;
      v4 += 4;
      if (v34 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v36 = v35 >> 14;
          v35 >>= 7;
          *v4++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    uint64_t v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    uint64_t v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v40, v41, v4);
}

uint64_t sub_1565BEC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_19;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v10 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_30;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v13 = sub_155677C(*(void *)(a1 + 48));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v14 = sub_155677C(*(void *)(a1 + 56));
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v15 = sub_155677C(*(void *)(a1 + 64));
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_32:
  uint64_t v16 = sub_155677C(*(void *)(a1 + 72));
  v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0) {
LABEL_18:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_19:
  if ((v2 & 0x1F00) == 0) {
    goto LABEL_42;
  }
  if ((v2 & 0x100) != 0)
  {
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_22:
      if ((v2 & 0x400) == 0) {
        goto LABEL_23;
      }
      goto LABEL_36;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_22;
  }
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x400) == 0)
  {
LABEL_23:
    if ((v2 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_37;
  }
LABEL_36:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 96) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x800) == 0)
  {
LABEL_24:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_37:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 100) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x1000) == 0) {
    goto LABEL_42;
  }
LABEL_38:
  int v17 = *(_DWORD *)(a1 + 104);
  if (v17 < 0) {
    uint64_t v18 = 11;
  }
  else {
    uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v18;
LABEL_42:
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v3 += v22;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1565F1C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_15;
        }
        goto LABEL_12;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
    if ((v4 & 4) == 0)
    {
LABEL_15:
      if ((v4 & 8) != 0)
      {
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
        std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
        if (!data)
        {
          std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
          uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
          if (v17) {
            uint64_t v18 = (void *)*v18;
          }
          std::string::pointer data = (std::string *)sub_1563140((uint64_t)v18);
          v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
        }
        if (*(void *)(a2 + 48)) {
          uint64_t v19 = *(uint64_t (****)(uint64_t))(a2 + 48);
        }
        else {
          uint64_t v19 = &off_253D8A0;
        }
        uint64_t result = sub_1555900(data, (uint64_t)v19);
        if ((v4 & 0x10) == 0)
        {
LABEL_17:
          if ((v4 & 0x20) == 0) {
            goto LABEL_18;
          }
          goto LABEL_50;
        }
      }
      else if ((v4 & 0x10) == 0)
      {
        goto LABEL_17;
      }
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
      unint64_t v20 = (std::string *)v3[2].__r_.__value_.__l.__size_;
      if (!v20)
      {
        std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
        uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v22 = (void *)*v22;
        }
        unint64_t v20 = (std::string *)sub_1563140((uint64_t)v22);
        v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v20;
      }
      if (*(void *)(a2 + 56)) {
        unint64_t v23 = *(uint64_t (****)(uint64_t))(a2 + 56);
      }
      else {
        unint64_t v23 = &off_253D8A0;
      }
      uint64_t result = sub_1555900(v20, (uint64_t)v23);
      if ((v4 & 0x20) == 0)
      {
LABEL_18:
        if ((v4 & 0x40) == 0) {
          goto LABEL_19;
        }
        goto LABEL_58;
      }
LABEL_50:
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
      unint64_t v24 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
      if (!v24)
      {
        std::string::size_type v25 = v3->__r_.__value_.__l.__size_;
        unsigned int v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          unsigned int v26 = (void *)*v26;
        }
        unint64_t v24 = (std::string *)sub_1563140((uint64_t)v26);
        v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v24;
      }
      if (*(void *)(a2 + 64)) {
        unsigned int v27 = *(uint64_t (****)(uint64_t))(a2 + 64);
      }
      else {
        unsigned int v27 = &off_253D8A0;
      }
      uint64_t result = sub_1555900(v24, (uint64_t)v27);
      if ((v4 & 0x40) == 0)
      {
LABEL_19:
        if ((v4 & 0x80) == 0)
        {
LABEL_21:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_22;
        }
LABEL_20:
        v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
        goto LABEL_21;
      }
LABEL_58:
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
      unsigned int v28 = (std::string *)v3[3].__r_.__value_.__l.__data_;
      if (!v28)
      {
        std::string::size_type v29 = v3->__r_.__value_.__l.__size_;
        unsigned int v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          unsigned int v30 = (void *)*v30;
        }
        unsigned int v28 = (std::string *)sub_1563140((uint64_t)v30);
        v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)v28;
      }
      if (*(void *)(a2 + 72)) {
        unsigned int v31 = *(uint64_t (****)(uint64_t))(a2 + 72);
      }
      else {
        unsigned int v31 = &off_253D8A0;
      }
      uint64_t result = sub_1555900(v28, (uint64_t)v31);
      if ((v4 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
LABEL_12:
    uint64_t v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
    uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v12, v14);
    goto LABEL_15;
  }
LABEL_22:
  if ((v4 & 0x1F00) == 0) {
    goto LABEL_30;
  }
  if ((v4 & 0x100) != 0)
  {
    LODWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
    if ((v4 & 0x200) == 0)
    {
LABEL_25:
      if ((v4 & 0x400) == 0) {
        goto LABEL_26;
      }
      goto LABEL_69;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_25;
  }
  HIDWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x400) == 0)
  {
LABEL_26:
    if ((v4 & 0x800) == 0) {
      goto LABEL_27;
    }
LABEL_70:
    HIDWORD(v3[4].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 100);
    if ((v4 & 0x1000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
LABEL_69:
  LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
  if ((v4 & 0x800) != 0) {
    goto LABEL_70;
  }
LABEL_27:
  if ((v4 & 0x1000) != 0) {
LABEL_28:
  }
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 104);
LABEL_29:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
LABEL_30:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_15661D8()
{
  return 1;
}

void *sub_15661E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.Line");
}

void *sub_15661F0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1566264(void *a1)
{
  sub_15661F0(a1);

  operator delete();
}

uint64_t sub_156629C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_15662B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    std::string::size_type v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      std::string::size_type v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_1566434(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_156655C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_15665C4()
{
  return 1;
}

void *sub_15665CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.WalkingSegmentSummary");
}

uint64_t sub_15665DC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253DE48)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_1564D3C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1556018(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15666AC(uint64_t a1)
{
  sub_15665DC(a1);

  operator delete();
}

uint64_t sub_15666E4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_1564F04(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_1553AB8(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0xC) != 0)
  {
    *(unsigned char *)(v1 + 48) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1566764(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v30 + 2;
      }
    }
    unsigned int v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          sub_1572D60((uint64_t)v13);
          uint64_t v12 = v14;
          *(void *)(a1 + 24) = v14;
          unsigned int v8 = v30;
        }
        int v15 = (char *)sub_1566A38(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_38;
      case 2u:
        if (v9 != 16) {
          goto LABEL_31;
        }
        v5 |= 4u;
        uint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          unsigned int v26 = (char *)sub_188C138((uint64_t)v8, v17);
          unsigned int v30 = v26;
          *(void *)(a1 + 40) = v27;
          if (!v26) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_19:
          unsigned int v30 = v16;
          *(void *)(a1 + 40) = v17;
        }
        goto LABEL_39;
      case 4u:
        if (v9 != 32) {
          goto LABEL_31;
        }
        v5 |= 8u;
        uint64_t v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          unsigned int v28 = (char *)sub_188C138((uint64_t)v8, v20);
          unsigned int v30 = v28;
          *(unsigned char *)(a1 + 48) = v29 != 0;
          if (!v28) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_24:
          unsigned int v30 = v19;
          *(unsigned char *)(a1 + 48) = v20 != 0;
        }
        goto LABEL_39;
      case 5u:
        if (v9 != 42) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 32);
        if (!v22)
        {
          unint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_1563140((uint64_t)v23);
          *(void *)(a1 + 32) = v22;
          unsigned int v8 = v30;
        }
        int v15 = (char *)sub_155478C(a3, v22, (unsigned __int8 *)v8);
        goto LABEL_38;
      default:
LABEL_31:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            std::string::size_type v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            std::string::size_type v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v30;
          }
          int v15 = (char *)sub_1885AC0(v9, v25, v8, a3);
LABEL_38:
          unsigned int v30 = v15;
          if (!v15) {
            goto LABEL_48;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_48:
        }
          unsigned int v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v30;
    }
  }
}

uint64_t sub_1566A38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1565050(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1566AC8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1565638(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 40);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 48);
    unsigned char *v4 = 32;
    v4[1] = v13;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v14 = *(void *)(a1 + 32);
    unsigned char *v4 = 42;
    unsigned int v15 = *(_DWORD *)(v14 + 20);
    v4[1] = v15;
    if (v15 > 0x7F) {
      uint64_t v16 = sub_188A9CC(v15, v4 + 1);
    }
    else {
      uint64_t v16 = v4 + 2;
    }
    char v4 = sub_15564E4(v14, v16, a3);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_1566CFC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_13;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v5 = sub_1565BEC(*(void *)(a1 + 24));
  uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_155677C(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0) {
    v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_13:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1566E00(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v8 = (void *)*v8;
        }
        sub_1572D60((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253DDB8;
      }
      uint64_t result = sub_1565F1C(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      unint64_t v10 = (std::string *)sub_1563140((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      char v13 = *(uint64_t (****)(uint64_t))(a2 + 32);
    }
    else {
      char v13 = &off_253D8A0;
    }
    uint64_t result = sub_1555900(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_28:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1566F38()
{
  return 1;
}

void *sub_1566F40@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.TripSegmentSummary");
}

uint64_t sub_1566F50(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253DE80)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_15661F0(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_15665DC(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1567020(uint64_t a1)
{
  sub_1566F50(a1);

  operator delete();
}

uint64_t sub_1567058(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 24);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_15666E4(*(void *)(v1 + 32));
    }
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_15670D8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      sub_1572E78((uint64_t)v16);
      uint64_t v15 = v17;
      *(void *)(a1 + 32) = v17;
      uint64_t v7 = v20;
    }
    uint64_t v14 = sub_1567328(a3, v15, (unsigned __int8 *)v7);
LABEL_31:
    uint64_t v20 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 24);
    if (!v18)
    {
      unint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_1572DFC((uint64_t)v19);
      *(void *)(a1 + 24) = v18;
      uint64_t v7 = v20;
    }
    uint64_t v14 = sub_1567298(a3, v18, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      char v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      char v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v20;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v20;
  }
  return 0;
}

char *sub_1567298(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15662B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1567328(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1566764(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_15673B8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1566434(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_1566AC8(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1567538(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_156655C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1566CFC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1567610(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        std::string::pointer data = (std::string *)sub_1572DFC((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        unint64_t v8 = &off_253DE28;
      }
      uint64_t result = sub_11A7934(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        sub_1572E78((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        BOOL v12 = &off_253DE48;
      }
      uint64_t result = sub_1566E00(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1567714()
{
  return 1;
}

void *sub_156771C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.SegmentSummary");
}

uint64_t sub_156772C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253DEA8)
  {
    uint64_t v6 = *(void *)(a1 + 88);
    if (v6)
    {
      sub_156890C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1588024((void *)(a1 + 64));
  sub_1889DA8(a1 + 48);
  sub_1587FA4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1567804(uint64_t a1)
{
  sub_156772C(a1);

  operator delete();
}

uint64_t sub_156783C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1567058(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  *(_DWORD *)(v1 + 48) = 0;
  uint64_t v5 = *(unsigned int *)(v1 + 72);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 80) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_156D294(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 72) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if (v8) {
    uint64_t result = sub_1567904(*(void *)(v1 + 88));
  }
  if ((v8 & 6) != 0) {
    *(void *)(v1 + 96) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_1567904(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_155ACFC(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_1553AB8(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0x7C) != 0)
  {
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
    *(_DWORD *)(v1 + 64) = 1;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_156798C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v46 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v46, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      int v8 = v46 + 1;
      unsigned int v9 = *v46;
      if (*v46 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          int v8 = (char *)sub_188C180((uint64_t)v46, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          int v8 = v46 + 2;
        }
      }
      uint64_t v46 = v8;
      switch(v9 >> 3)
      {
        case 2u:
          if (v9 != 16) {
            goto LABEL_65;
          }
          v5 |= 2u;
          BOOL v12 = v8 + 1;
          int v13 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v14 = *v12;
          int v13 = v13 + (v14 << 7) - 128;
          if ((v14 & 0x80000000) == 0)
          {
            BOOL v12 = v8 + 2;
LABEL_13:
            uint64_t v46 = v12;
            *(_DWORD *)(a1 + 96) = v13;
            goto LABEL_73;
          }
          uint64_t v40 = (char *)sub_188C0D0((uint64_t)v8, v13);
          uint64_t v46 = v40;
          *(_DWORD *)(a1 + 96) = v41;
          if (!v40) {
            goto LABEL_78;
          }
          goto LABEL_73;
        case 3u:
          if (v9 != 24) {
            goto LABEL_65;
          }
          v5 |= 4u;
          unint64_t v15 = v8 + 1;
          int v16 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_18;
          }
          int v17 = *v15;
          int v16 = v16 + (v17 << 7) - 128;
          if (v17 < 0)
          {
            uint64_t v42 = (char *)sub_188C0D0((uint64_t)v8, v16);
            uint64_t v46 = v42;
            *(_DWORD *)(a1 + 100) = v43;
            if (!v42) {
              goto LABEL_78;
            }
          }
          else
          {
            unint64_t v15 = v8 + 2;
LABEL_18:
            uint64_t v46 = v15;
            *(_DWORD *)(a1 + 100) = v16;
          }
          goto LABEL_73;
        case 4u:
          if (v9 != 34) {
            goto LABEL_65;
          }
          uint64_t v18 = v8 - 1;
          while (1)
          {
            unint64_t v19 = (unsigned __int8 *)(v18 + 1);
            uint64_t v46 = v18 + 1;
            uint64_t v20 = *(_DWORD **)(a1 + 40);
            if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
            {
              *(_DWORD *)(a1 + 32) = v21 + 1;
              uint64_t v22 = *(void *)&v20[2 * v21 + 2];
            }
            else
            {
              unint64_t v23 = sub_1572EF8(*(void *)(a1 + 24));
              uint64_t v22 = sub_188CDC8(a1 + 24, (uint64_t)v23);
              unint64_t v19 = (unsigned __int8 *)v46;
            }
            uint64_t v18 = sub_1567E10(a3, v22, v19);
            uint64_t v46 = v18;
            if (!v18) {
              goto LABEL_78;
            }
            if (*(void *)a3 <= (unint64_t)v18 || *v18 != 34) {
              goto LABEL_73;
            }
          }
        case 5u:
          if (v9 != 42) {
            goto LABEL_65;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v24 = *(void *)(a1 + 88);
          if (!v24)
          {
            std::string::size_type v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              std::string::size_type v25 = (void *)*v25;
            }
            sub_157302C((uint64_t)v25);
            uint64_t v24 = v26;
            *(void *)(a1 + 88) = v26;
            int v8 = v46;
          }
          uint64_t v27 = sub_1567EA0(a3, v24, (unsigned __int8 *)v8);
          goto LABEL_72;
        case 6u:
          if (v9 == 48)
          {
            unsigned int v28 = v8 - 1;
            while (1)
            {
              uint64_t v46 = v28 + 1;
              int v29 = v28[1];
              if (v28[1] < 0)
              {
                int v30 = v29 + (v28[2] << 7);
                int v29 = v30 - 128;
                if (v28[2] < 0)
                {
                  unsigned int v28 = (char *)sub_188C0D0((uint64_t)(v28 + 1), v30 - 128);
                  int v29 = v31;
                }
                else
                {
                  v28 += 3;
                }
              }
              else
              {
                v28 += 2;
              }
              uint64_t v46 = v28;
              uint64_t v32 = *(unsigned int *)(a1 + 48);
              if (v32 == *(_DWORD *)(a1 + 52))
              {
                int v33 = v32 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v32 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v32) = v29;
                unsigned int v28 = v46;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v32) = v29;
                int v33 = v32 + 1;
              }
              *(_DWORD *)(a1 + 48) = v33;
              if (!v28) {
                goto LABEL_78;
              }
              if (*(void *)a3 <= (unint64_t)v28 || *v28 != 48) {
                goto LABEL_73;
              }
            }
          }
          if (v9 == 50)
          {
            uint64_t v27 = (char *)sub_188C2CC((unsigned int *)(a1 + 48), (unsigned __int8 *)v8, (uint64_t)a3);
          }
          else
          {
LABEL_65:
            if (v9) {
              BOOL v44 = (v9 & 7) == 4;
            }
            else {
              BOOL v44 = 1;
            }
            if (v44)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_78:
              uint64_t v46 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              uint64_t v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v8 = v46;
            }
            uint64_t v27 = (char *)sub_1885AC0(v9, v45, v8, a3);
          }
LABEL_72:
          uint64_t v46 = v27;
          if (!v27) {
            goto LABEL_78;
          }
LABEL_73:
          if (sub_11947B8((uint64_t)a3, &v46, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 7u:
          if (v9 != 58) {
            goto LABEL_65;
          }
          unsigned int v34 = v8 - 1;
          while (1)
          {
            unsigned int v35 = (unsigned __int8 *)(v34 + 1);
            uint64_t v46 = v34 + 1;
            unsigned int v36 = *(_DWORD **)(a1 + 80);
            if (v36 && (uint64_t v37 = *(int *)(a1 + 72), (int)v37 < *v36))
            {
              *(_DWORD *)(a1 + 72) = v37 + 1;
              uint64_t v38 = *(void *)&v36[2 * v37 + 2];
            }
            else
            {
              uint64_t v39 = sub_15733D0(*(void *)(a1 + 64));
              uint64_t v38 = sub_188CDC8(a1 + 64, v39);
              unsigned int v35 = (unsigned __int8 *)v46;
            }
            unsigned int v34 = sub_1567F30(a3, v38, v35);
            uint64_t v46 = v34;
            if (!v34) {
              goto LABEL_78;
            }
            if (*(void *)a3 <= (unint64_t)v34 || *v34 != 58) {
              goto LABEL_73;
            }
          }
        default:
          goto LABEL_65;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v46;
}

char *sub_1567E10(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15670D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1567EA0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1568A14(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1567F30(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_156D37C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1567FC0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 96);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 100);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        int v17 = v4 + 2;
      }
      char v4 = sub_15673B8(v15, (unint64_t)v17, a3);
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 88);
    unsigned char *v4 = 42;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    v4[1] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      uint64_t v20 = v4 + 2;
    }
    char v4 = sub_1568E50(v18, (unint64_t)v20, a3);
  }
  uint64_t v21 = *(unsigned int *)(a1 + 48);
  if ((int)v21 >= 1)
  {
    for (uint64_t j = 0; j != v21; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v23 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * j);
      unsigned char *v4 = 48;
      v4[1] = v23;
      if (v23 > 0x7F)
      {
        v4[1] = v23 | 0x80;
        unsigned int v24 = v23 >> 7;
        v4[2] = v23 >> 7;
        v4 += 3;
        if (v23 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v25 = v24 >> 14;
            v24 >>= 7;
            *v4++ = v24;
          }
          while (v25);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  int v26 = *(_DWORD *)(a1 + 72);
  if (v26)
  {
    for (int k = 0; k != v26; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      unsigned char *v4 = 58;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      v4[1] = v29;
      if (v29 > 0x7F) {
        int v30 = sub_188A9CC(v29, v4 + 1);
      }
      else {
        int v30 = v4 + 2;
      }
      char v4 = sub_156DB08(v28, (unint64_t)v30, a3);
    }
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    unsigned int v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    unsigned int v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v34, v35, v4);
}

uint64_t sub_1568384(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1567538(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = sub_188D4F0((unsigned int *)(a1 + 48));
  uint64_t v9 = *(int *)(a1 + 72);
  uint64_t v10 = v8 + v2 + *(unsigned int *)(a1 + 48) + v9;
  uint64_t v11 = *(void *)(a1 + 80);
  if (v11) {
    unsigned int v12 = (uint64_t *)(v11 + 8);
  }
  else {
    unsigned int v12 = 0;
  }
  if (v9)
  {
    uint64_t v13 = 8 * v9;
    do
    {
      uint64_t v14 = *v12++;
      uint64_t v15 = sub_156E034(v14);
      v10 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      v13 -= 8;
    }
    while (v13);
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if ((v16 & 7) != 0)
  {
    if (v16)
    {
      uint64_t v19 = sub_1569208(*(void *)(a1 + 88));
      v10 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v16 & 2) == 0)
      {
LABEL_18:
        if ((v16 & 4) == 0) {
          goto LABEL_20;
        }
        goto LABEL_19;
      }
    }
    else if ((v16 & 2) == 0)
    {
      goto LABEL_18;
    }
    v10 += ((9 * (__clz(*(_DWORD *)(a1 + 96) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v16 & 4) != 0) {
LABEL_19:
    }
      v10 += ((9 * (__clz(*(_DWORD *)(a1 + 100) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_20:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v20 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v10 += v21;
  }
  *(_DWORD *)(a1 + 20) = v10;
  return v10;
}

void sub_1568530(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_15886A4((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 72);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v14 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1588730((uint64_t *)(a1 + 64), v14, v13, v12, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v15 = *(_DWORD *)(a1 + 72) + v12;
    *(_DWORD *)(a1 + 72) = v15;
    int v16 = *(int **)(a1 + 80);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  int v17 = *(_DWORD *)(a2 + 16);
  if ((v17 & 7) != 0)
  {
    if (v17)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v19 = *(std::string **)(a1 + 88);
      if (!v19)
      {
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v21 = (void *)*v21;
        }
        sub_157302C((uint64_t)v21);
        *(void *)(a1 + 88) = v19;
      }
      if (*(void *)(a2 + 88)) {
        uint64_t v22 = *(uint64_t (****)())(a2 + 88);
      }
      else {
        uint64_t v22 = &off_253DF10;
      }
      sub_1568730(v19, (uint64_t)v22);
      if ((v17 & 2) == 0)
      {
LABEL_12:
        if ((v17 & 4) == 0)
        {
LABEL_14:
          *(_DWORD *)(a1 + 16) |= v17;
          goto LABEL_15;
        }
LABEL_13:
        *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
        goto LABEL_14;
      }
    }
    else if ((v17 & 2) == 0)
    {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v17 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_1568730(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_158481C((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        int v9 = &off_253E258;
      }
      uint64_t result = sub_123BFCC(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_31;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_1563140((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)(uint64_t))(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253D8A0;
    }
    uint64_t result = sub_1555900(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_32;
    }
LABEL_31:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_33;
    }
LABEL_32:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_34;
    }
LABEL_33:
    v3[2].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
      goto LABEL_10;
    }
LABEL_34:
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1568898(uint64_t a1)
{
  BOOL result = 1;
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v1 = *(void *)(a1 + 88);
    if ((*(unsigned char *)(v1 + 16) & 1) != 0 && (~*(_DWORD *)(*(void *)(v1 + 24) + 16) & 3) != 0) {
      return 0;
    }
  }
  return result;
}

BOOL sub_15688D0(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 1) == 0 || (~*(_DWORD *)(*(void *)(a1 + 24) + 16) & 3) == 0;
}

void *sub_15688FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.SuggestedRoute");
}

uint64_t sub_156890C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253DF10)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_1573B90(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1556018(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15689DC(uint64_t a1)
{
  sub_156890C(a1);

  operator delete();
}

char *sub_1568A14(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v45 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v45, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v45 + 1;
    unsigned int v9 = *v45;
    if (*v45 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v45, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v45 + 2;
      }
    }
    uint64_t v45 = v8;
    switch(v9 >> 3)
    {
      case 3u:
        if (v9 != 24) {
          goto LABEL_49;
        }
        v5 |= 4u;
        int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          uint64_t v45 = v12;
          *(void *)(a1 + 40) = v13;
          goto LABEL_57;
        }
        uint64_t v35 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v45 = v35;
        *(void *)(a1 + 40) = v36;
        if (v35) {
          goto LABEL_57;
        }
        goto LABEL_76;
      case 4u:
        if (v9 != 34) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void **)(a1 + 24);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_158481C((uint64_t)v19);
          *(void *)(a1 + 24) = v18;
          uint64_t v8 = v45;
        }
        uint64_t v20 = sub_155B4FC(a3, (uint64_t)v18, (unsigned __int8 *)v8);
        goto LABEL_56;
      case 5u:
        if (v9 != 42) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 32);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_1563140((uint64_t)v22);
          *(void *)(a1 + 32) = v21;
          uint64_t v8 = v45;
        }
        uint64_t v20 = (char *)sub_155478C(a3, v21, (unsigned __int8 *)v8);
        goto LABEL_56;
      case 6u:
        if (v9 != 48) {
          goto LABEL_49;
        }
        v5 |= 0x10u;
        unsigned int v23 = v8 + 1;
        uint64_t v24 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v39 = (char *)sub_188C138((uint64_t)v8, v24);
          uint64_t v45 = v39;
          *(unsigned char *)(a1 + 56) = v40 != 0;
          if (!v39) {
            goto LABEL_76;
          }
        }
        else
        {
          unsigned int v23 = v8 + 2;
LABEL_36:
          uint64_t v45 = v23;
          *(unsigned char *)(a1 + 56) = v24 != 0;
        }
        goto LABEL_57;
      case 7u:
        if (v9 != 56) {
          goto LABEL_49;
        }
        v5 |= 8u;
        int v26 = v8 + 1;
        uint64_t v27 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          int v41 = (char *)sub_188C138((uint64_t)v8, v27);
          uint64_t v45 = v41;
          *(void *)(a1 + 48) = v42;
          if (!v41) {
            goto LABEL_76;
          }
        }
        else
        {
          int v26 = v8 + 2;
LABEL_41:
          uint64_t v45 = v26;
          *(void *)(a1 + 48) = v27;
        }
        goto LABEL_57;
      case 8u:
        if (v9 != 64) {
          goto LABEL_49;
        }
        unsigned int v29 = v8 + 1;
        unint64_t v30 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        int v31 = *v29;
        int v32 = v30 + (v31 << 7);
        unint64_t v30 = (v32 - 128);
        if (v31 < 0)
        {
          uint64_t v45 = (char *)sub_188C138((uint64_t)v8, (v32 - 128));
          if (!v45) {
            goto LABEL_76;
          }
          unint64_t v30 = v43;
        }
        else
        {
          unsigned int v29 = v8 + 2;
LABEL_46:
          uint64_t v45 = v29;
        }
        if ((v30 - 1) > 2)
        {
          if (*v7) {
            BOOL v44 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            BOOL v44 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(8, v30, v44);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 64) = v30;
        }
        goto LABEL_57;
      default:
        if (v9 >> 3 == 2047 && v9 == 248)
        {
          v5 |= 0x20u;
          int v15 = v8 + 1;
          int v16 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          int v16 = v16 + (v17 << 7) - 128;
          if ((v17 & 0x80000000) == 0)
          {
            int v15 = v8 + 2;
LABEL_19:
            uint64_t v45 = v15;
            *(_DWORD *)(a1 + 60) = v16;
            goto LABEL_57;
          }
          uint64_t v37 = (char *)sub_188C0D0((uint64_t)v8, v16);
          uint64_t v45 = v37;
          *(_DWORD *)(a1 + 60) = v38;
          if (!v37) {
            goto LABEL_76;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, &v45, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_49:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            unsigned int v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v45;
          }
          uint64_t v20 = (char *)sub_1885AC0(v9, v34, v8, a3);
LABEL_56:
          uint64_t v45 = v20;
          if (!v20) {
            goto LABEL_76;
          }
          goto LABEL_57;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_76:
        }
          uint64_t v45 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v45;
    }
  }
}

unsigned char *sub_1568E50(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 34;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    int v4 = sub_1573DAC(v10, (unint64_t)v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_25;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  unsigned char *v4 = 42;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  int v4 = sub_15564E4(v13, v15, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_34;
    }
    goto LABEL_28;
  }
LABEL_25:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v16 = *(unsigned char *)(a1 + 56);
  unsigned char *v4 = 48;
  v4[1] = v16;
  v4 += 2;
  if ((v6 & 8) != 0)
  {
LABEL_28:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v17 = *(void *)(a1 + 48);
    unsigned char *v4 = 56;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_34:
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v20 = *(int *)(a1 + 64);
    unsigned char *v4 = 64;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v23 = *(_DWORD *)(a1 + 60);
    *(_WORD *)int v4 = 32760;
    v4[2] = v23;
    if (v23 > 0x7F)
    {
      v4[2] = v23 | 0x80;
      unsigned int v24 = v23 >> 7;
      v4[3] = v23 >> 7;
      v4 += 4;
      if (v23 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v25 = v24 >> 14;
          v24 >>= 7;
          *v4++ = v24;
        }
        while (v25);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return v4;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    unsigned int v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    unsigned int v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(v4, v29, (int)v30);
    v4 += v31;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v29, v30, v4);
}

uint64_t sub_1569208(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_21;
  }
  if (v2)
  {
    uint64_t v5 = sub_1573EC8(*(void *)(a1 + 24));
    uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_155677C(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if ((v2 & 8) != 0) {
LABEL_10:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_11:
  if ((v2 & 0x10) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 0x20) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  if ((v2 & 0x40) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 64);
    uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v7 >= 0) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 11;
    }
    result += v9;
  }
LABEL_21:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_1569394@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.Station");
}

uint64_t sub_15693A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253DF58)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1556018(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_1556018(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1569490(uint64_t a1)
{
  sub_15693A4(a1);

  operator delete();
}

uint64_t sub_15694C8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  uint64_t result = sub_1553AB8(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_1553AB8(*(void *)(v1 + 40));
LABEL_6:
  if ((v2 & 0x18) != 0)
  {
    *(_DWORD *)(v1 + 56) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1569584(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    switch(v9 >> 3)
    {
      case 3u:
        if (v9 != 26) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unsigned int v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (uint64_t)sub_188C244(v14, *(char **)v31, (uint64_t)a3);
        goto LABEL_43;
      case 4u:
        if (v9 != 32) {
          goto LABEL_36;
        }
        v5 |= 8u;
        unint64_t v19 = (char *)(v8 + 1);
        uint64_t v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v29 = sub_188C138((uint64_t)v8, v20);
          *(void *)uint64_t v31 = v29;
          *(void *)(a1 + 48) = v30;
          if (!v29) {
            goto LABEL_53;
          }
        }
        else
        {
          unint64_t v19 = (char *)(v8 + 2);
LABEL_23:
          *(void *)uint64_t v31 = v19;
          *(void *)(a1 + 48) = v20;
        }
        goto LABEL_44;
      case 5u:
        if (v9 != 42) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 32);
        if (v22) {
          goto LABEL_35;
        }
        unsigned int v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v23 = (void *)*v23;
        }
        uint64_t v22 = sub_1563140((uint64_t)v23);
        *(void *)(a1 + 32) = v22;
        goto LABEL_34;
      case 6u:
        if (v9 != 50) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v22 = *(void *)(a1 + 40);
        if (v22) {
          goto LABEL_35;
        }
        unsigned int v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v24 = (void *)*v24;
        }
        uint64_t v22 = sub_1563140((uint64_t)v24);
        *(void *)(a1 + 40) = v22;
LABEL_34:
        uint64_t v8 = *(unsigned __int8 **)v31;
LABEL_35:
        uint64_t v15 = sub_155478C(a3, v22, v8);
        goto LABEL_43;
      default:
        if (v9 >> 3 == 2047 && v9 == 248)
        {
          v5 |= 0x10u;
          char v16 = (char *)(v8 + 1);
          int v17 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_18;
          }
          int v18 = *v16;
          int v17 = v17 + (v18 << 7) - 128;
          if ((v18 & 0x80000000) == 0)
          {
            char v16 = (char *)(v8 + 2);
LABEL_18:
            *(void *)uint64_t v31 = v16;
            *(_DWORD *)(a1 + 56) = v17;
            goto LABEL_44;
          }
          uint64_t v27 = sub_188C0D0((uint64_t)v8, v17);
          *(void *)uint64_t v31 = v27;
          *(_DWORD *)(a1 + 56) = v28;
          if (!v27) {
            goto LABEL_53;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_36:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v31;
          }
          uint64_t v15 = (uint64_t)sub_1885AC0(v9, v26, (char *)v8, a3);
LABEL_43:
          *(void *)uint64_t v31 = v15;
          if (!v15) {
            goto LABEL_53;
          }
          goto LABEL_44;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_53:
        }
          *(void *)uint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

unsigned char *sub_1569888(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    unsigned char *v4 = 32;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 42;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_15564E4(v10, v12, a3);
    if ((v6 & 4) == 0)
    {
LABEL_12:
      if ((v6 & 0x10) == 0) {
        goto LABEL_32;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_12;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 50;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_15564E4(v13, v15, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_26:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 56);
    *(_WORD *)char v4 = 32760;
    v4[2] = v16;
    if (v16 > 0x7F)
    {
      v4[2] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[3] = v16 >> 7;
      v4 += 4;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_32:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1569B2C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_14;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_155677C(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = sub_155677C(*(void *)(a1 + 40));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x10) != 0) {
LABEL_13:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_14:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v11 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1569CA0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v10)
      {
        std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = (std::string *)sub_1563140((uint64_t)v12);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
      }
      if (*(void *)(a2 + 32)) {
        uint64_t v13 = *(uint64_t (****)(uint64_t))(a2 + 32);
      }
      else {
        uint64_t v13 = &off_253D8A0;
      }
      uint64_t result = sub_1555900(v10, (uint64_t)v13);
      if ((v4 & 4) == 0)
      {
LABEL_8:
        if ((v4 & 8) == 0) {
          goto LABEL_9;
        }
        goto LABEL_32;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_8;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    unsigned int v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      unsigned int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unsigned int v16 = (void *)*v16;
      }
      unsigned int v14 = (std::string *)sub_1563140((uint64_t)v16);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v17 = *(uint64_t (****)(uint64_t))(a2 + 40);
    }
    else {
      unsigned int v17 = &off_253D8A0;
    }
    uint64_t result = sub_1555900(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_9:
      if ((v4 & 0x10) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
      goto LABEL_11;
    }
LABEL_32:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1569E04()
{
  return 1;
}

void *sub_1569E0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.Agency");
}

uint64_t sub_1569E1C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253DF98)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1556018(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_1556018(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 48);
    if (v8)
    {
      sub_1556018(v8);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1569F28(uint64_t a1)
{
  sub_1569E1C(a1);

  operator delete();
}

uint64_t sub_1569F60(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_17:
    uint64_t result = sub_1553AB8(*(void *)(result + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_18;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_17;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_17;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_18:
  uint64_t result = sub_1553AB8(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_1553AB8(*(void *)(v1 + 48));
LABEL_7:
  if ((v2 & 0x30) != 0)
  {
    *(_DWORD *)(v1 + 64) = 0;
    *(void *)(v1 + 56) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_156A02C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v32 + 1);
    unsigned int v9 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v32 + 2);
      }
    }
    *(void *)int v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_41;
        }
        v5 |= 0x10u;
        uint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)int v32 = v12;
          *(void *)(a1 + 56) = v13;
          goto LABEL_49;
        }
        uint64_t v28 = sub_188C138((uint64_t)v8, v13);
        *(void *)int v32 = v28;
        *(void *)(a1 + 56) = v29;
        if (v28) {
          goto LABEL_49;
        }
        goto LABEL_58;
      case 2u:
        if (v9 != 18) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 32);
        if (v18) {
          goto LABEL_36;
        }
        uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v19 = (void *)*v19;
        }
        uint64_t v18 = sub_1563140((uint64_t)v19);
        *(void *)(a1 + 32) = v18;
        goto LABEL_35;
      case 3u:
        if (v9 != 26) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v18 = *(void *)(a1 + 40);
        if (v18) {
          goto LABEL_36;
        }
        uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v20 = (void *)*v20;
        }
        uint64_t v18 = sub_1563140((uint64_t)v20);
        *(void *)(a1 + 40) = v18;
        goto LABEL_35;
      case 4u:
        if (v9 != 34) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v18 = *(void *)(a1 + 48);
        if (v18) {
          goto LABEL_36;
        }
        unint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v21 = (void *)*v21;
        }
        uint64_t v18 = sub_1563140((uint64_t)v21);
        *(void *)(a1 + 48) = v18;
LABEL_35:
        uint64_t v8 = *(unsigned __int8 **)v32;
LABEL_36:
        uint64_t v22 = sub_155478C(a3, v18, v8);
        goto LABEL_48;
      case 5u:
        if (v9 != 42) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v24 = (uint64_t *)*v24;
        }
        BOOL v25 = (std::string *)sub_1880F84((void *)(a1 + 24), v24);
        uint64_t v22 = (uint64_t)sub_188C244(v25, *(char **)v32, (uint64_t)a3);
        goto LABEL_48;
      default:
        if (v9 >> 3 == 2047 && v9 == 248)
        {
          v5 |= 0x20u;
          std::string::size_type v15 = (char *)(v8 + 1);
          int v16 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          int v16 = v16 + (v17 << 7) - 128;
          if ((v17 & 0x80000000) == 0)
          {
            std::string::size_type v15 = (char *)(v8 + 2);
LABEL_19:
            *(void *)int v32 = v15;
            *(_DWORD *)(a1 + 64) = v16;
            goto LABEL_49;
          }
          uint64_t v30 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)int v32 = v30;
          *(_DWORD *)(a1 + 64) = v31;
          if (!v30) {
            goto LABEL_58;
          }
LABEL_49:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_41:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v7)
          {
            uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v32;
          }
          uint64_t v22 = (uint64_t)sub_1885AC0(v9, v27, (char *)v8, a3);
LABEL_48:
          *(void *)int v32 = v22;
          if (!v22) {
            goto LABEL_58;
          }
          goto LABEL_49;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_58:
        }
          *(void *)int v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v32;
    }
  }
}

unsigned char *sub_156A378(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_15564E4(v10, v12, a3);
    if ((v6 & 4) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    std::string::size_type v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    std::string::size_type v15 = v4 + 2;
  }
  char v4 = sub_15564E4(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_11:
    if ((v6 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  unsigned char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_15564E4(v16, v18, a3);
  if ((v6 & 1) == 0)
  {
LABEL_12:
    if ((v6 & 0x20) == 0) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
LABEL_32:
  char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_39;
  }
LABEL_33:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v19 = *(_DWORD *)(a1 + 64);
  *(_WORD *)char v4 = 32760;
  v4[2] = v19;
  if (v19 > 0x7F)
  {
    v4[2] = v19 | 0x80;
    unsigned int v20 = v19 >> 7;
    v4[3] = v19 >> 7;
    v4 += 4;
    if (v19 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v21 = v20 >> 14;
        v20 >>= 7;
        *v4++ = v20;
      }
      while (v21);
    }
  }
  else
  {
    v4 += 3;
  }
LABEL_39:
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    BOOL v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    BOOL v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_156A688(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_155677C(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = sub_155677C(*(void *)(a1 + 40));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v11 = sub_155677C(*(void *)(a1 + 48));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_19:
  v3 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0) {
LABEL_14:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_15:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v12 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_156A830(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v10)
      {
        std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
        unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = (std::string *)sub_1563140((uint64_t)v12);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
      }
      if (*(void *)(a2 + 32)) {
        uint64_t v13 = *(uint64_t (****)(uint64_t))(a2 + 32);
      }
      else {
        uint64_t v13 = &off_253D8A0;
      }
      uint64_t result = sub_1555900(v10, (uint64_t)v13);
      if ((v4 & 4) == 0)
      {
LABEL_8:
        if ((v4 & 8) == 0) {
          goto LABEL_9;
        }
        goto LABEL_33;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_8;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    unsigned int v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unsigned int v14 = (std::string *)sub_1563140((uint64_t)v16);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v17 = *(uint64_t (****)(uint64_t))(a2 + 40);
    }
    else {
      unsigned int v17 = &off_253D8A0;
    }
    uint64_t result = sub_1555900(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_9:
      if ((v4 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_41;
    }
LABEL_33:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      std::string::pointer data = (std::string *)sub_1563140((uint64_t)v20);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      unsigned int v21 = *(uint64_t (****)(uint64_t))(a2 + 48);
    }
    else {
      unsigned int v21 = &off_253D8A0;
    }
    uint64_t result = sub_1555900(data, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_10:
      if ((v4 & 0x20) == 0)
      {
LABEL_12:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_13;
      }
LABEL_11:
      LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
      goto LABEL_12;
    }
LABEL_41:
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_156A9DC()
{
  return 1;
}

void *sub_156A9E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.System");
}

void *sub_156A9F4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_156AA68(void *a1)
{
  sub_156A9F4(a1);

  operator delete();
}

uint64_t sub_156AAA0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x3F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 37) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_156AAC8(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v44 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v44 + 1;
    unsigned int v9 = *v44;
    if (*v44 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v44, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v44 + 2;
      }
    }
    BOOL v44 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_39;
        }
        v5 |= 1u;
        unint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          BOOL v44 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_46;
        }
        int v32 = (char *)sub_188C0D0((uint64_t)v8, v13);
        BOOL v44 = v32;
        *(_DWORD *)(a1 + 24) = v33;
        if (v32) {
          goto LABEL_46;
        }
        goto LABEL_63;
      case 2u:
        if (v9 != 16) {
          goto LABEL_39;
        }
        v5 |= 2u;
        std::string::size_type v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          unsigned int v34 = (char *)sub_188C0D0((uint64_t)v8, v16);
          BOOL v44 = v34;
          *(_DWORD *)(a1 + 28) = v35;
          if (!v34) {
            goto LABEL_63;
          }
        }
        else
        {
          std::string::size_type v15 = v8 + 2;
LABEL_18:
          BOOL v44 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_46;
      case 3u:
        if (v9 != 24) {
          goto LABEL_39;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v36 = (char *)sub_188C0D0((uint64_t)v8, v19);
          BOOL v44 = v36;
          *(_DWORD *)(a1 + 32) = v37;
          if (!v36) {
            goto LABEL_63;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          BOOL v44 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_46;
      case 4u:
        if (v9 != 32) {
          goto LABEL_39;
        }
        v5 |= 8u;
        unsigned int v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v38 = (char *)sub_188C0D0((uint64_t)v8, v22);
          BOOL v44 = v38;
          *(_DWORD *)(a1 + 36) = v39;
          if (!v38) {
            goto LABEL_63;
          }
        }
        else
        {
          unsigned int v21 = v8 + 2;
LABEL_28:
          BOOL v44 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_46;
      case 5u:
        if (v9 != 40) {
          goto LABEL_39;
        }
        v5 |= 0x10u;
        unint64_t v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v40 = (char *)sub_188C0D0((uint64_t)v8, v25);
          BOOL v44 = v40;
          *(_DWORD *)(a1 + 40) = v41;
          if (!v40) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v24 = v8 + 2;
LABEL_33:
          BOOL v44 = v24;
          *(_DWORD *)(a1 + 40) = v25;
        }
        goto LABEL_46;
      case 6u:
        if (v9 != 48) {
          goto LABEL_39;
        }
        v5 |= 0x20u;
        uint64_t v27 = v8 + 1;
        uint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v42 = (char *)sub_188C138((uint64_t)v8, v28);
          BOOL v44 = v42;
          *(unsigned char *)(a1 + 44) = v43 != 0;
          if (!v42) {
            goto LABEL_63;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_38:
          BOOL v44 = v27;
          *(unsigned char *)(a1 + 44) = v28 != 0;
        }
        goto LABEL_46;
      default:
LABEL_39:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v7)
          {
            int v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v44;
          }
          BOOL v44 = (char *)sub_1885AC0(v9, v31, v8, a3);
          if (!v44) {
            goto LABEL_63;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_63:
        }
          BOOL v44 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v44;
    }
  }
}

unsigned char *sub_156AE70(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v22 = *(unsigned char *)(a1 + 44);
    unsigned char *v4 = 48;
    v4[1] = v22;
    v4 += 2;
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    int v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    int v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_156B1C0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_10:
      if ((v1 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0) {
LABEL_11:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_12:
  if ((v1 & 0x20) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_15:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_156B2F4(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_10;
  }
  if (v2)
  {
    LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v2 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_15:
  HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
  if ((v2 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    result[1].__r_.__value_.__s.__data_[20] = *(unsigned char *)(a2 + 44);
LABEL_9:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_10:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_156B388()
{
  return 1;
}

void *sub_156B390@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.EnterExitInfo");
}

void *sub_156B3A0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_156B414(void *a1)
{
  sub_156B3A0(a1);

  operator delete();
}

uint64_t sub_156B44C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x1F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(unsigned char *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_156B474(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v39 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v39 + 1;
    unsigned int v9 = *v39;
    if (*v39 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v39, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v39 + 2;
      }
    }
    int v39 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_34;
        }
        v5 |= 1u;
        unsigned int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          int v39 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_41;
        }
        int v29 = (char *)sub_188C0D0((uint64_t)v8, v13);
        int v39 = v29;
        *(_DWORD *)(a1 + 24) = v30;
        if (v29) {
          goto LABEL_41;
        }
        goto LABEL_56;
      case 2u:
        if (v9 != 16) {
          goto LABEL_34;
        }
        v5 |= 2u;
        unsigned int v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v31 = (char *)sub_188C0D0((uint64_t)v8, v16);
          int v39 = v31;
          *(_DWORD *)(a1 + 28) = v32;
          if (!v31) {
            goto LABEL_56;
          }
        }
        else
        {
          unsigned int v15 = v8 + 2;
LABEL_18:
          int v39 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_41;
      case 3u:
        if (v9 != 24) {
          goto LABEL_34;
        }
        v5 |= 4u;
        unsigned int v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v33 = (char *)sub_188C0D0((uint64_t)v8, v19);
          int v39 = v33;
          *(_DWORD *)(a1 + 32) = v34;
          if (!v33) {
            goto LABEL_56;
          }
        }
        else
        {
          unsigned int v18 = v8 + 2;
LABEL_23:
          int v39 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 32) {
          goto LABEL_34;
        }
        v5 |= 8u;
        unsigned int v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v35 = (char *)sub_188C0D0((uint64_t)v8, v22);
          int v39 = v35;
          *(_DWORD *)(a1 + 36) = v36;
          if (!v35) {
            goto LABEL_56;
          }
        }
        else
        {
          unsigned int v21 = v8 + 2;
LABEL_28:
          int v39 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_41;
      case 5u:
        if (v9 != 40) {
          goto LABEL_34;
        }
        v5 |= 0x10u;
        unint64_t v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          int v37 = (char *)sub_188C138((uint64_t)v8, v25);
          int v39 = v37;
          *(unsigned char *)(a1 + 40) = v38 != 0;
          if (!v37) {
            goto LABEL_56;
          }
        }
        else
        {
          unint64_t v24 = v8 + 2;
LABEL_33:
          int v39 = v24;
          *(unsigned char *)(a1 + 40) = v25 != 0;
        }
        goto LABEL_41;
      default:
LABEL_34:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v39;
          }
          int v39 = (char *)sub_1885AC0(v9, v28, v8, a3);
          if (!v39) {
            goto LABEL_56;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_56:
        }
          int v39 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v39;
    }
  }
}

unsigned char *sub_156B7BC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v19 = *(unsigned char *)(a1 + 40);
    unsigned char *v4 = 40;
    v4[1] = v19;
    v4 += 2;
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    int v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    int v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_156BA90(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0) {
LABEL_10:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  if ((v1 & 0x10) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_14:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_156BB98(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_13:
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    result[1].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 40);
LABEL_8:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_9:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_156BC1C()
{
  return 1;
}

void *sub_156BC24@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.TransferInfo");
}

void *sub_156BC34(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_156BCA8(void *a1)
{
  sub_156BC34(a1);

  operator delete();
}

uint64_t sub_156BCE0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_156BD08(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unsigned int v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unsigned int v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(unsigned char *)(a1 + 28) = v16 != 0;
      goto LABEL_30;
    }
    unsigned int v21 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(unsigned char *)(a1 + 28) = v22 != 0;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    unsigned int v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      unsigned int v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    int v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unsigned int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_156BF08(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unsigned int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unsigned int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_156C068(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1) {
      uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_156C0EC()
{
  return 1;
}

void *sub_156C0F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.VehicleTime");
}

uint64_t sub_156C104(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253E000)
  {
    int v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_156BC34(v5);
      operator delete();
    }
    unint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_156BC34(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_156C1D4(uint64_t a1)
{
  sub_156C104(a1);

  operator delete();
}

uint64_t sub_156C20C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_156BCE0(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_156BCE0(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0xFC) != 0)
  {
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
  }
  if ((v2 & 0x300) != 0) {
    *(void *)(v1 + 64) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_156C298(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v59 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v59, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v59 + 1;
    unsigned int v9 = *v59;
    if (*v59 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v59, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v59 + 2;
      }
    }
    uint64_t v59 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        unsigned int v12 = *(void **)(a1 + 24);
        if (v12) {
          goto LABEL_20;
        }
        unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v13 = (void *)*v13;
        }
        unsigned int v12 = sub_15732D0((uint64_t)v13);
        *(void *)(a1 + 24) = v12;
        goto LABEL_19;
      case 2u:
        if (v9 != 18) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unsigned int v12 = *(void **)(a1 + 32);
        if (!v12)
        {
          unsigned int v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v14 = (void *)*v14;
          }
          unsigned int v12 = sub_15732D0((uint64_t)v14);
          *(void *)(a1 + 32) = v12;
LABEL_19:
          unsigned int v8 = v59;
        }
LABEL_20:
        uint64_t v15 = sub_156C7D0(a3, (uint64_t)v12, (unsigned __int8 *)v8);
        goto LABEL_70;
      case 3u:
        if (v9 != 24) {
          goto LABEL_63;
        }
        v5 |= 4u;
        uint64_t v16 = v8 + 1;
        int v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v43 = (char *)sub_188C0D0((uint64_t)v8, v17);
          uint64_t v59 = v43;
          *(_DWORD *)(a1 + 40) = v44;
          if (!v43) {
            goto LABEL_96;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_25:
          uint64_t v59 = v16;
          *(_DWORD *)(a1 + 40) = v17;
        }
        goto LABEL_71;
      case 4u:
        if (v9 != 32) {
          goto LABEL_63;
        }
        v5 |= 8u;
        int v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v45 = (char *)sub_188C0D0((uint64_t)v8, v20);
          uint64_t v59 = v45;
          *(_DWORD *)(a1 + 44) = v46;
          if (!v45) {
            goto LABEL_96;
          }
        }
        else
        {
          int v19 = v8 + 2;
LABEL_30:
          uint64_t v59 = v19;
          *(_DWORD *)(a1 + 44) = v20;
        }
        goto LABEL_71;
      case 5u:
        if (v9 != 40) {
          goto LABEL_63;
        }
        v5 |= 0x10u;
        uint64_t v22 = v8 + 1;
        int v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          unint64_t v47 = (char *)sub_188C0D0((uint64_t)v8, v23);
          uint64_t v59 = v47;
          *(_DWORD *)(a1 + 48) = v48;
          if (!v47) {
            goto LABEL_96;
          }
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_35:
          uint64_t v59 = v22;
          *(_DWORD *)(a1 + 48) = v23;
        }
        goto LABEL_71;
      case 6u:
        if (v9 != 48) {
          goto LABEL_63;
        }
        v5 |= 0x20u;
        uint64_t v25 = v8 + 1;
        int v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v27 = *v25;
        int v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          int v49 = (char *)sub_188C0D0((uint64_t)v8, v26);
          uint64_t v59 = v49;
          *(_DWORD *)(a1 + 52) = v50;
          if (!v49) {
            goto LABEL_96;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_40:
          uint64_t v59 = v25;
          *(_DWORD *)(a1 + 52) = v26;
        }
        goto LABEL_71;
      case 7u:
        if (v9 != 56) {
          goto LABEL_63;
        }
        uint64_t v28 = v8 + 1;
        unint64_t v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v30 = *v28;
        int v31 = v29 + (v30 << 7);
        unint64_t v29 = (v31 - 128);
        if (v30 < 0)
        {
          uint64_t v59 = (char *)sub_188C138((uint64_t)v8, (v31 - 128));
          if (!v59) {
            goto LABEL_96;
          }
          unint64_t v29 = v51;
        }
        else
        {
          uint64_t v28 = v8 + 2;
LABEL_45:
          uint64_t v59 = v28;
        }
        if (v29 > 3)
        {
          if (*v7) {
            uint64_t v58 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v58 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(7, v29, v58);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 56) = v29;
        }
        goto LABEL_71;
      case 8u:
        if (v9 != 64) {
          goto LABEL_63;
        }
        v5 |= 0x80u;
        int v32 = v8 + 1;
        int v33 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v34 = *v32;
        int v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v52 = (char *)sub_188C0D0((uint64_t)v8, v33);
          uint64_t v59 = v52;
          *(_DWORD *)(a1 + 60) = v53;
          if (!v52) {
            goto LABEL_96;
          }
        }
        else
        {
          int v32 = v8 + 2;
LABEL_52:
          uint64_t v59 = v32;
          *(_DWORD *)(a1 + 60) = v33;
        }
        goto LABEL_71;
      case 9u:
        if (v9 != 72) {
          goto LABEL_63;
        }
        v5 |= 0x100u;
        int v35 = v8 + 1;
        int v36 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v37 = *v35;
        int v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v54 = (char *)sub_188C0D0((uint64_t)v8, v36);
          uint64_t v59 = v54;
          *(_DWORD *)(a1 + 64) = v55;
          if (!v54) {
            goto LABEL_96;
          }
        }
        else
        {
          int v35 = v8 + 2;
LABEL_57:
          uint64_t v59 = v35;
          *(_DWORD *)(a1 + 64) = v36;
        }
        goto LABEL_71;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_63;
        }
        v5 |= 0x200u;
        uint64_t v38 = v8 + 1;
        int v39 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_62;
        }
        int v40 = *v38;
        int v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v56 = (char *)sub_188C0D0((uint64_t)v8, v39);
          uint64_t v59 = v56;
          *(_DWORD *)(a1 + 68) = v57;
          if (!v56) {
            goto LABEL_96;
          }
        }
        else
        {
          uint64_t v38 = v8 + 2;
LABEL_62:
          uint64_t v59 = v38;
          *(_DWORD *)(a1 + 68) = v39;
        }
        goto LABEL_71;
      default:
LABEL_63:
        if (v9) {
          BOOL v41 = (v9 & 7) == 4;
        }
        else {
          BOOL v41 = 1;
        }
        if (!v41)
        {
          if (*v7)
          {
            uint64_t v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v59;
          }
          uint64_t v15 = (char *)sub_1885AC0(v9, v42, v8, a3);
LABEL_70:
          uint64_t v59 = v15;
          if (!v15) {
            goto LABEL_96;
          }
LABEL_71:
          if (sub_11947B8((uint64_t)a3, &v59, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_96:
        }
          uint64_t v59 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v59;
    }
  }
}

char *sub_156C7D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_156BD08(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_156C860(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_156BF08(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  char v4 = sub_156BF08(v10, (unint64_t)v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 52);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 56);
    unsigned char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 60);
    unsigned char *v4 = 64;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v31 = *(_DWORD *)(a1 + 64);
    unsigned char *v4 = 72;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unsigned int v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v34 = *(_DWORD *)(a1 + 68);
    unsigned char *v4 = 80;
    v4[1] = v34;
    if (v34 > 0x7F)
    {
      v4[1] = v34 | 0x80;
      unsigned int v35 = v34 >> 7;
      v4[2] = v34 >> 7;
      v4 += 3;
      if (v34 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v36 = v35 >> 14;
          v35 >>= 7;
          *v4++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    int v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    int v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v40, v41, v4);
}

uint64_t sub_156CDCC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if (v2)
  {
    uint64_t v4 = sub_156C068(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_156C068(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_24;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
LABEL_25:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_26:
  int v8 = *(_DWORD *)(a1 + 56);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v9;
  if ((v2 & 0x80) != 0) {
LABEL_14:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  if ((v2 & 0x300) != 0)
  {
    if ((v2 & 0x100) != 0) {
      v3 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v2 & 0x200) != 0) {
      v3 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v10 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_156D010(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        int v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          int v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_15732D0((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253DFE0;
      }
      uint64_t result = sub_11AD324(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_38;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      unint64_t v10 = (std::string *)sub_15732D0((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      unsigned int v13 = *(void *(****)(void *))(a2 + 32);
    }
    else {
      unsigned int v13 = &off_253DFE0;
    }
    uint64_t result = sub_11AD324(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_39;
    }
LABEL_38:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_40;
    }
LABEL_39:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_41;
    }
LABEL_40:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_42;
    }
LABEL_41:
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
      goto LABEL_11;
    }
LABEL_42:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x300) != 0)
  {
    if ((v4 & 0x100) != 0) {
      LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    }
    if ((v4 & 0x200) != 0) {
      HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_156D1AC()
{
  return 1;
}

void *sub_156D1B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.VehicleInfo");
}

void *sub_156D1C4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_15881A4(a1 + 9);
  sub_1588124(a1 + 6);
  sub_15880A4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_156D25C(void *a1)
{
  sub_156D1C4(a1);

  operator delete();
}

uint64_t sub_156D294(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_156C20C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_156AAA0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_156B44C(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 0x7F) != 0)
  {
    *(void *)(v1 + 96) = 0;
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 117) = 0;
    *(void *)(v1 + 112) = 0;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

char *sub_156D37C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v64 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v64, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v64 + 1;
    unsigned int v9 = *v64;
    if (*v64 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v64, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v64 + 2;
      }
    }
    uint64_t v64 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_20;
        }
        char v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v64 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v64) {
            goto LABEL_105;
          }
          unint64_t v13 = v52;
        }
        else
        {
          char v12 = v8 + 2;
LABEL_13:
          uint64_t v64 = v12;
        }
        if (v13 > 0xA)
        {
          if (*v7) {
            int v63 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v63 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v63);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          *(_DWORD *)(a1 + 96) = v13;
        }
        goto LABEL_84;
      case 2u:
        if (v9 != 16) {
          goto LABEL_20;
        }
        v5 |= 2u;
        unsigned int v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          int v53 = (char *)sub_188C0D0((uint64_t)v8, v20);
          uint64_t v64 = v53;
          *(_DWORD *)(a1 + 100) = v54;
          if (!v53) {
            goto LABEL_105;
          }
        }
        else
        {
          unsigned int v19 = v8 + 2;
LABEL_32:
          uint64_t v64 = v19;
          *(_DWORD *)(a1 + 100) = v20;
        }
        goto LABEL_84;
      case 3u:
        if (v9 != 24) {
          goto LABEL_20;
        }
        v5 |= 8u;
        unsigned int v22 = v8 + 1;
        int v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          int v55 = (char *)sub_188C0D0((uint64_t)v8, v23);
          uint64_t v64 = v55;
          *(_DWORD *)(a1 + 112) = v56;
          if (!v55) {
            goto LABEL_105;
          }
        }
        else
        {
          unsigned int v22 = v8 + 2;
LABEL_37:
          uint64_t v64 = v22;
          *(_DWORD *)(a1 + 112) = v23;
        }
        goto LABEL_84;
      case 4u:
        if (v9 != 34) {
          goto LABEL_20;
        }
        unint64_t v25 = v8 - 1;
        while (1)
        {
          unint64_t v26 = (unsigned __int8 *)(v25 + 1);
          uint64_t v64 = v25 + 1;
          unint64_t v27 = *(_DWORD **)(a1 + 40);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 32), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 32) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            sub_157334C(*(void *)(a1 + 24));
            uint64_t v29 = sub_188CDC8(a1 + 24, v30);
            unint64_t v26 = (unsigned __int8 *)v64;
          }
          unint64_t v25 = sub_156D958(a3, v29, v26);
          uint64_t v64 = v25;
          if (!v25) {
            goto LABEL_105;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 34) {
            goto LABEL_84;
          }
        }
      case 5u:
        if (v9 != 41) {
          goto LABEL_20;
        }
        v5 |= 4u;
        *(void *)(a1 + 104) = *(void *)v8;
        uint64_t v64 = v8 + 8;
        goto LABEL_84;
      case 6u:
      case 8u:
        goto LABEL_20;
      case 7u:
        if (v9 != 56) {
          goto LABEL_20;
        }
        v5 |= 0x10u;
        unsigned int v31 = v8 + 1;
        int v32 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_54;
        }
        int v33 = *v31;
        int v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          int v57 = (char *)sub_188C0D0((uint64_t)v8, v32);
          uint64_t v64 = v57;
          *(_DWORD *)(a1 + 116) = v58;
          if (!v57) {
            goto LABEL_105;
          }
        }
        else
        {
          unsigned int v31 = v8 + 2;
LABEL_54:
          uint64_t v64 = v31;
          *(_DWORD *)(a1 + 116) = v32;
        }
        goto LABEL_84;
      case 9u:
        if (v9 != 74) {
          goto LABEL_20;
        }
        unsigned int v34 = v8 - 1;
        while (1)
        {
          unsigned int v35 = (unsigned __int8 *)(v34 + 1);
          uint64_t v64 = v34 + 1;
          unsigned int v36 = *(_DWORD **)(a1 + 64);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 56), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 56) = v37 + 1;
            uint64_t v38 = *(void *)&v36[2 * v37 + 2];
          }
          else
          {
            unint64_t v39 = sub_15731D0(*(void *)(a1 + 48));
            uint64_t v38 = sub_188CDC8(a1 + 48, (uint64_t)v39);
            unsigned int v35 = (unsigned __int8 *)v64;
          }
          unsigned int v34 = sub_156D9E8(a3, v38, v35);
          uint64_t v64 = v34;
          if (!v34) {
            goto LABEL_105;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 74) {
            goto LABEL_84;
          }
        }
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_20;
        }
        int v40 = v8 - 1;
        while (1)
        {
          uint64_t v41 = (unsigned __int8 *)(v40 + 1);
          uint64_t v64 = v40 + 1;
          uint64_t v42 = *(_DWORD **)(a1 + 88);
          if (v42 && (uint64_t v43 = *(int *)(a1 + 80), (int)v43 < *v42))
          {
            *(_DWORD *)(a1 + 80) = v43 + 1;
            uint64_t v44 = *(void *)&v42[2 * v43 + 2];
          }
          else
          {
            uint64_t v45 = sub_1573250(*(void *)(a1 + 72));
            uint64_t v44 = sub_188CDC8(a1 + 72, v45);
            uint64_t v41 = (unsigned __int8 *)v64;
          }
          int v40 = sub_156DA78(a3, v44, v41);
          uint64_t v64 = v40;
          if (!v40) {
            goto LABEL_105;
          }
          if (*(void *)a3 <= (unint64_t)v40 || *v40 != 82) {
            goto LABEL_84;
          }
        }
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_20;
        }
        v5 |= 0x20u;
        int v46 = v8 + 1;
        int v47 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_79;
        }
        int v48 = *v46;
        int v47 = v47 + (v48 << 7) - 128;
        if (v48 < 0)
        {
          uint64_t v59 = (char *)sub_188C0D0((uint64_t)v8, v47);
          uint64_t v64 = v59;
          *(_DWORD *)(a1 + 120) = v60;
          if (!v59) {
            goto LABEL_105;
          }
        }
        else
        {
          int v46 = v8 + 2;
LABEL_79:
          uint64_t v64 = v46;
          *(_DWORD *)(a1 + 120) = v47;
        }
        goto LABEL_84;
      default:
        if (v9 >> 3 == 512 && v9 == 0)
        {
          v5 |= 0x40u;
          int v49 = v8 + 1;
          uint64_t v50 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_83;
          }
          int v51 = *v49;
          uint64_t v50 = v50 + (v51 << 7) - 128;
          if ((v51 & 0x80000000) == 0)
          {
            int v49 = v8 + 2;
LABEL_83:
            uint64_t v64 = v49;
            *(unsigned char *)(a1 + 124) = v50 != 0;
            goto LABEL_84;
          }
          uint64_t v61 = (char *)sub_188C138((uint64_t)v8, v50);
          uint64_t v64 = v61;
          *(unsigned char *)(a1 + 124) = v62 != 0;
          if (!v61) {
            goto LABEL_105;
          }
LABEL_84:
          if (sub_11947B8((uint64_t)a3, &v64, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_20:
        if (v9) {
          BOOL v17 = (v9 & 7) == 4;
        }
        else {
          BOOL v17 = 1;
        }
        if (!v17)
        {
          if (*v7)
          {
            unsigned int v18 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v64;
          }
          uint64_t v64 = (char *)sub_1885AC0(v9, v18, v8, a3);
          if (!v64) {
            goto LABEL_105;
          }
          goto LABEL_84;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_105:
        }
          uint64_t v64 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v64;
    }
  }
}

char *sub_156D958(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_156C298(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_156D9E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_156AAC8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_156DA78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_156B474(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_156DB08(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 96);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 100);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 112);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v16 = *(_DWORD *)(a1 + 32);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        int v20 = v4 + 2;
      }
      uint64_t v4 = sub_156C860(v18, (unint64_t)v20, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 104);
    unsigned char *v4 = 41;
    *(void *)(v4 + 1) = v21;
    v4 += 9;
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 116);
    unsigned char *v4 = 56;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v25 = *(_DWORD *)(a1 + 56);
  if (v25)
  {
    for (int j = 0; j != v25; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 74;
      unsigned int v28 = *(_DWORD *)(v27 + 20);
      v4[1] = v28;
      if (v28 > 0x7F) {
        uint64_t v29 = sub_188A9CC(v28, v4 + 1);
      }
      else {
        uint64_t v29 = v4 + 2;
      }
      uint64_t v4 = sub_156AE70(v27, (unint64_t)v29, a3);
    }
  }
  int v30 = *(_DWORD *)(a1 + 80);
  if (v30)
  {
    for (int k = 0; k != v30; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      unsigned char *v4 = 82;
      unsigned int v33 = *(_DWORD *)(v32 + 20);
      v4[1] = v33;
      if (v33 > 0x7F) {
        unsigned int v34 = sub_188A9CC(v33, v4 + 1);
      }
      else {
        unsigned int v34 = v4 + 2;
      }
      uint64_t v4 = sub_156B7BC(v32, (unint64_t)v34, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v35 = *(_DWORD *)(a1 + 120);
    unsigned char *v4 = 88;
    v4[1] = v35;
    if (v35 > 0x7F)
    {
      v4[1] = v35 | 0x80;
      unsigned int v36 = v35 >> 7;
      v4[2] = v35 >> 7;
      v4 += 3;
      if (v35 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v37 = v36 >> 14;
          v36 >>= 7;
          *v4++ = v36;
        }
        while (v37);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v38 = *(unsigned char *)(a1 + 124);
    *(_WORD *)uint64_t v4 = 8320;
    v4[2] = v38;
    v4 += 3;
  }
  uint64_t v39 = *(void *)(a1 + 8);
  if ((v39 & 1) == 0) {
    return v4;
  }
  unint64_t v41 = v39 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v41 + 31) < 0)
  {
    uint64_t v42 = *(void **)(v41 + 8);
    uint64_t v43 = *(void *)(v41 + 16);
  }
  else
  {
    uint64_t v42 = (void *)(v41 + 8);
    LODWORD(v43) = *(unsigned __int8 *)(v41 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v43)
  {
    uint64_t v44 = (int)v43;
    memcpy(v4, v42, (int)v43);
    v4 += v44;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v42, v43, v4);
}

uint64_t sub_156E034(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_156CDCC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_156B1C0(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_156BA90(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 0x7F) != 0)
  {
    if (v22)
    {
      int v23 = *(_DWORD *)(a1 + 96);
      uint64_t v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v23 >= 0) {
        uint64_t v25 = v24;
      }
      else {
        uint64_t v25 = 11;
      }
      v16 += v25;
    }
    if ((v22 & 2) != 0) {
      v16 += ((9 * (__clz(*(_DWORD *)(a1 + 100) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v26 = v16 + 9;
    if ((v22 & 4) == 0) {
      uint64_t v26 = v16;
    }
    if ((v22 & 8) != 0)
    {
      v26 += ((9 * (__clz(*(_DWORD *)(a1 + 112) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v22 & 0x10) == 0)
      {
LABEL_33:
        if ((v22 & 0x20) == 0) {
          goto LABEL_35;
        }
        goto LABEL_34;
      }
    }
    else if ((v22 & 0x10) == 0)
    {
      goto LABEL_33;
    }
    v26 += ((9 * (__clz(*(_DWORD *)(a1 + 116) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 0x20) == 0)
    {
LABEL_35:
      if ((v22 & 0x40) != 0) {
        uint64_t v16 = v26 + 3;
      }
      else {
        uint64_t v16 = v26;
      }
      goto LABEL_38;
    }
LABEL_34:
    v26 += ((9 * (__clz(*(_DWORD *)(a1 + 120) | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_35;
  }
LABEL_38:
  uint64_t v27 = *(void *)(a1 + 8);
  if (v27)
  {
    unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v29 + 31) < 0) {
      uint64_t v30 = *(void *)(v29 + 16);
    }
    else {
      uint64_t v30 = *(unsigned __int8 *)(v29 + 31);
    }
    v16 += v30;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void sub_156E288(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_15887BC((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1588848((std::string *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_15888D4((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 0x7F) != 0)
  {
    if (v19)
    {
      *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_26;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_27;
    }
LABEL_26:
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_28;
    }
LABEL_27:
    *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
LABEL_28:
    *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
    if ((v19 & 0x20) == 0)
    {
LABEL_17:
      if ((v19 & 0x40) == 0)
      {
LABEL_19:
        *(_DWORD *)(a1 + 16) |= v19;
        goto LABEL_20;
      }
LABEL_18:
      *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
      goto LABEL_19;
    }
LABEL_29:
    *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
    if ((v19 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_156E4A8()
{
  return 1;
}

void *sub_156E4B0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.Step");
}

uint64_t sub_156E4C0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_253E048)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_1556018(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1556018(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 40);
    if (v7)
    {
      sub_1573B90(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_156E5B0(uint64_t a1)
{
  sub_156E4C0(a1);

  operator delete();
}

uint64_t sub_156E5E8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t result = sub_1553AB8(*(void *)(result + 24));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = sub_1553AB8(*(void *)(v1 + 32));
    if ((v2 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = sub_155ACFC(*(void *)(v1 + 40));
  }
LABEL_6:
  if ((v2 & 0x38) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_156E67C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v35 + 1;
    unsigned int v9 = *v35;
    if (*v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v35 + 2;
      }
    }
    unsigned int v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_43;
        }
        v5 |= 8u;
        int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          unsigned int v35 = v12;
          *(void *)(a1 + 48) = v13;
          goto LABEL_51;
        }
        unint64_t v29 = (char *)sub_188C138((uint64_t)v8, v13);
        unsigned int v35 = v29;
        *(void *)(a1 + 48) = v30;
        if (v29) {
          goto LABEL_51;
        }
        goto LABEL_62;
      case 2u:
        if (v9 != 18) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 24);
        if (v18) {
          goto LABEL_31;
        }
        int v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v19 = (void *)*v19;
        }
        uint64_t v18 = sub_1563140((uint64_t)v19);
        *(void *)(a1 + 24) = v18;
        goto LABEL_30;
      case 3u:
        if (v9 != 26) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 32);
        if (v18) {
          goto LABEL_31;
        }
        uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v20 = (void *)*v20;
        }
        uint64_t v18 = sub_1563140((uint64_t)v20);
        *(void *)(a1 + 32) = v18;
LABEL_30:
        uint64_t v8 = v35;
LABEL_31:
        uint64_t v21 = (char *)sub_155478C(a3, v18, (unsigned __int8 *)v8);
        goto LABEL_50;
      case 4u:
        if (v9 != 34) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        int v22 = *(void **)(a1 + 40);
        if (!v22)
        {
          int v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v23 = (void *)*v23;
          }
          int v22 = sub_158481C((uint64_t)v23);
          *(void *)(a1 + 40) = v22;
          uint64_t v8 = v35;
        }
        uint64_t v21 = sub_155B4FC(a3, (uint64_t)v22, (unsigned __int8 *)v8);
        goto LABEL_50;
      case 5u:
        if (v9 != 40) {
          goto LABEL_43;
        }
        v5 |= 0x10u;
        uint64_t v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          unsigned int v33 = (char *)sub_188C0D0((uint64_t)v8, v25);
          unsigned int v35 = v33;
          *(_DWORD *)(a1 + 56) = v34;
          if (!v33) {
            goto LABEL_62;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_42:
          unsigned int v35 = v24;
          *(_DWORD *)(a1 + 56) = v25;
        }
        goto LABEL_51;
      default:
        if (v9 >> 3 == 2047 && v9 == 248)
        {
          v5 |= 0x20u;
          uint64_t v15 = v8 + 1;
          int v16 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          int v16 = v16 + (v17 << 7) - 128;
          if ((v17 & 0x80000000) == 0)
          {
            uint64_t v15 = v8 + 2;
LABEL_19:
            unsigned int v35 = v15;
            *(_DWORD *)(a1 + 60) = v16;
            goto LABEL_51;
          }
          unsigned int v31 = (char *)sub_188C0D0((uint64_t)v8, v16);
          unsigned int v35 = v31;
          *(_DWORD *)(a1 + 60) = v32;
          if (!v31) {
            goto LABEL_62;
          }
LABEL_51:
          if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_43:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            unsigned int v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v35;
          }
          uint64_t v21 = (char *)sub_1885AC0(v9, v28, v8, a3);
LABEL_50:
          unsigned int v35 = v21;
          if (!v21) {
            goto LABEL_62;
          }
          goto LABEL_51;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_62:
        }
          unsigned int v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v35;
    }
  }
}

unsigned char *sub_156E9E8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    char v4 = sub_15564E4(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_25;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_15564E4(v13, v15, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_31;
  }
LABEL_25:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 40);
  unsigned char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_1573DAC(v16, (unint64_t)v18, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_31:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 56);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_37:
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 60);
    *(_WORD *)char v4 = 32760;
    v4[2] = v22;
    if (v22 > 0x7F)
    {
      v4[2] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[3] = v22 >> 7;
      v4 += 4;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    unsigned int v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    unsigned int v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_156ED50(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_155677C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_155677C(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_1573EC8(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_17:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0) {
LABEL_12:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_13:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v9 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_156EEDC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_1563140((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)(uint64_t))(a2 + 24);
      }
      else {
        unint64_t v9 = &off_253D8A0;
      }
      uint64_t result = sub_1555900(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_30;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_1563140((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)(uint64_t))(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253D8A0;
    }
    uint64_t result = sub_1555900(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_38;
    }
LABEL_30:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    unsigned int v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unsigned int v14 = (std::string *)sub_158481C((uint64_t)v16);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v17 = *(void *(****)(void *))(a2 + 40);
    }
    else {
      unsigned int v17 = &off_253E258;
    }
    uint64_t result = sub_123BFCC(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_39;
    }
LABEL_38:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
      goto LABEL_9;
    }
LABEL_39:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_156F06C(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 4) == 0 || (~*(_DWORD *)(*(void *)(a1 + 40) + 16) & 3) == 0;
}

void *sub_156F098@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.AccessPoint");
}

uint64_t sub_156F0A8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253E088)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_1556018(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_1573B90(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_156F178(uint64_t a1)
{
  sub_156F0A8(a1);

  operator delete();
}

uint64_t sub_156F1B0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_1553AB8(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_155ACFC(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0xC) != 0)
  {
    *(_DWORD *)(v1 + 48) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_156F230(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v31 + 2;
      }
    }
    unsigned int v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 > 2) {
      break;
    }
    if (v12 != 1)
    {
      if (v12 == 2 && v9 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v14 = *(void *)(a1 + 24);
        if (!v14)
        {
          std::string::size_type v15 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            std::string::size_type v15 = (void *)*v15;
          }
          uint64_t v14 = sub_1563140((uint64_t)v15);
          *(void *)(a1 + 24) = v14;
          uint64_t v8 = v31;
        }
        uint64_t v16 = (char *)sub_155478C(a3, v14, (unsigned __int8 *)v8);
        goto LABEL_45;
      }
      goto LABEL_38;
    }
    if (v9 != 8) {
      goto LABEL_38;
    }
    v5 |= 4u;
    unsigned int v20 = v8 + 1;
    uint64_t v21 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v22 = *v20;
    uint64_t v21 = v21 + (v22 << 7) - 128;
    if ((v22 & 0x80000000) == 0)
    {
      unsigned int v20 = v8 + 2;
LABEL_31:
      unsigned int v31 = v20;
      *(void *)(a1 + 40) = v21;
      goto LABEL_46;
    }
    uint64_t v29 = (char *)sub_188C138((uint64_t)v8, v21);
    unsigned int v31 = v29;
    *(void *)(a1 + 40) = v30;
    if (!v29) {
      goto LABEL_55;
    }
LABEL_46:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 != 3)
  {
    if (v12 != 2047 || v9 != 248) {
      goto LABEL_38;
    }
    v5 |= 8u;
    unsigned int v17 = v8 + 1;
    int v18 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_26;
    }
    int v19 = *v17;
    int v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      unsigned int v17 = v8 + 2;
LABEL_26:
      unsigned int v31 = v17;
      *(_DWORD *)(a1 + 48) = v18;
      goto LABEL_46;
    }
    unint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v18);
    unsigned int v31 = v27;
    *(_DWORD *)(a1 + 48) = v28;
    if (!v27) {
      goto LABEL_55;
    }
    goto LABEL_46;
  }
  if (v9 == 26)
  {
    *(_DWORD *)(a1 + 16) |= 2u;
    unsigned int v23 = *(void **)(a1 + 32);
    if (!v23)
    {
      unsigned int v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        unsigned int v24 = (void *)*v24;
      }
      unsigned int v23 = sub_158481C((uint64_t)v24);
      *(void *)(a1 + 32) = v23;
      uint64_t v8 = v31;
    }
    uint64_t v16 = sub_155B4FC(a3, (uint64_t)v23, (unsigned __int8 *)v8);
LABEL_45:
    unsigned int v31 = v16;
    if (!v16) {
      goto LABEL_55;
    }
    goto LABEL_46;
  }
LABEL_38:
  if (v9) {
    BOOL v25 = (v9 & 7) == 4;
  }
  else {
    BOOL v25 = 1;
  }
  if (!v25)
  {
    if (*v7)
    {
      int v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v31;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v26, v8, a3);
    goto LABEL_45;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_55:
  unsigned int v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_156F4D8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    char v4 = sub_15564E4(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_30;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    std::string::size_type v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    std::string::size_type v15 = v4 + 2;
  }
  char v4 = sub_1573DAC(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 48);
    *(_WORD *)char v4 = 32760;
    v4[2] = v16;
    if (v16 > 0x7F)
    {
      v4[2] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[3] = v16 >> 7;
      v4 += 4;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_156F75C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_155677C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1573EC8(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_10:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_11:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_156F888(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_1563140((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)(uint64_t))(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253D8A0;
      }
      uint64_t result = sub_1555900(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_158481C((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(void *(****)(void *))(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253E258;
    }
    uint64_t result = sub_123BFCC(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_28:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_156F9C0(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 2) == 0 || (~*(_DWORD *)(*(void *)(a1 + 32) + 16) & 3) == 0;
}

void *sub_156F9EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.Hub");
}

void *sub_156F9FC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_156FA80((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_156FA80(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 32);
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_253E0C0)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    if (v5)
    {
      sub_1556018(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_1556018(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 56);
    if (result)
    {
      sub_1573B90(result);
      operator delete();
    }
  }
  return result;
}

void sub_156FB58(void *a1)
{
  sub_156F9FC(a1);

  operator delete();
}

uint64_t sub_156FB90(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_18;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_22:
    uint64_t result = sub_1553AB8(*(void *)(result + 40));
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    goto LABEL_23;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_18:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_22;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_22;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_23:
  uint64_t result = sub_1553AB8(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_155ACFC(*(void *)(v1 + 56));
LABEL_8:
  if ((v2 & 0xE0) != 0)
  {
    *(void *)(v1 + 64) = 0;
    *(void *)(v1 + 72) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 72) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_156FC90(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v45 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v45, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v45 + 1);
    unsigned int v9 = **(unsigned char **)v45;
    if ((char)**(unsigned char **)v45 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v45, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v45 + 2);
      }
    }
    *(void *)uint64_t v45 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_57;
        }
        v5 |= 0x20u;
        unsigned int v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v45 = v12;
          *(void *)(a1 + 64) = v13;
          goto LABEL_65;
        }
        uint64_t v37 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v45 = v37;
        *(void *)(a1 + 64) = v38;
        if (v37) {
          goto LABEL_65;
        }
        goto LABEL_78;
      case 2u:
        if (v9 != 18) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v18 = *(void *)(a1 + 40);
        if (v18) {
          goto LABEL_31;
        }
        uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v19 = (void *)*v19;
        }
        uint64_t v18 = sub_1563140((uint64_t)v19);
        *(void *)(a1 + 40) = v18;
        goto LABEL_30;
      case 3u:
        if (v9 != 26) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v18 = *(void *)(a1 + 48);
        if (v18) {
          goto LABEL_31;
        }
        unsigned int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v20 = (void *)*v20;
        }
        uint64_t v18 = sub_1563140((uint64_t)v20);
        *(void *)(a1 + 48) = v18;
LABEL_30:
        unint64_t v8 = *(unsigned __int8 **)v45;
LABEL_31:
        uint64_t v21 = sub_155478C(a3, v18, v8);
        goto LABEL_64;
      case 4u:
        if (v9 != 34) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        int v22 = *(void **)(a1 + 56);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          int v22 = sub_158481C((uint64_t)v23);
          *(void *)(a1 + 56) = v22;
          unint64_t v8 = *(unsigned __int8 **)v45;
        }
        uint64_t v21 = (uint64_t)sub_155B4FC(a3, (uint64_t)v22, v8);
        goto LABEL_64;
      case 5u:
        if (v9 != 40) {
          goto LABEL_57;
        }
        v5 |= 0x40u;
        uint64_t v24 = (char *)(v8 + 1);
        uint64_t v25 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v41 = sub_188C138((uint64_t)v8, v25);
          *(void *)uint64_t v45 = v41;
          *(unsigned char *)(a1 + 72) = v42 != 0;
          if (!v41) {
            goto LABEL_78;
          }
        }
        else
        {
          uint64_t v24 = (char *)(v8 + 2);
LABEL_42:
          *(void *)uint64_t v45 = v24;
          *(unsigned char *)(a1 + 72) = v25 != 0;
        }
        goto LABEL_65;
      case 6u:
        if (v9 != 48) {
          goto LABEL_57;
        }
        v5 |= 0x80u;
        unint64_t v27 = (char *)(v8 + 1);
        int v28 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v43 = sub_188C0D0((uint64_t)v8, v28);
          *(void *)uint64_t v45 = v43;
          *(_DWORD *)(a1 + 76) = v44;
          if (!v43) {
            goto LABEL_78;
          }
        }
        else
        {
          unint64_t v27 = (char *)(v8 + 2);
LABEL_47:
          *(void *)uint64_t v45 = v27;
          *(_DWORD *)(a1 + 76) = v28;
        }
        goto LABEL_65;
      case 7u:
        if (v9 != 58) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v30 = *(void *)(a1 + 8);
        unsigned int v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          unsigned int v31 = (uint64_t *)*v31;
        }
        int v32 = (void *)(a1 + 24);
        goto LABEL_56;
      case 8u:
        if (v9 != 66) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v33 = *(void *)(a1 + 8);
        unsigned int v31 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
        if (v33) {
          unsigned int v31 = (uint64_t *)*v31;
        }
        int v32 = (void *)(a1 + 32);
LABEL_56:
        int v34 = (std::string *)sub_1880F84(v32, v31);
        uint64_t v21 = (uint64_t)sub_188C244(v34, *(char **)v45, (uint64_t)a3);
        goto LABEL_64;
      default:
        if (v9 >> 3 == 2047 && v9 == 248)
        {
          v5 |= 0x100u;
          std::string::size_type v15 = (char *)(v8 + 1);
          int v16 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          int v16 = v16 + (v17 << 7) - 128;
          if ((v17 & 0x80000000) == 0)
          {
            std::string::size_type v15 = (char *)(v8 + 2);
LABEL_19:
            *(void *)uint64_t v45 = v15;
            *(_DWORD *)(a1 + 80) = v16;
            goto LABEL_65;
          }
          uint64_t v39 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)uint64_t v45 = v39;
          *(_DWORD *)(a1 + 80) = v40;
          if (!v39) {
            goto LABEL_78;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, (char **)v45, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_57:
        if (v9) {
          BOOL v35 = (v9 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v7)
          {
            unsigned int v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v45;
          }
          uint64_t v21 = (uint64_t)sub_1885AC0(v9, v36, (char *)v8, a3);
LABEL_64:
          *(void *)uint64_t v45 = v21;
          if (!v21) {
            goto LABEL_78;
          }
          goto LABEL_65;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_78:
        }
          *(void *)uint64_t v45 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v45;
    }
  }
}

unsigned char *sub_15700FC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 64);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 40);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    char v4 = sub_15564E4(v10, v12, a3);
    if ((v6 & 8) == 0)
    {
LABEL_10:
      if ((v6 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 48);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    std::string::size_type v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    std::string::size_type v15 = v4 + 2;
  }
  char v4 = sub_15564E4(v13, v15, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_11:
    if ((v6 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 56);
  unsigned char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_1573DAC(v16, (unint64_t)v18, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_12:
    if ((v6 & 0x80) == 0) {
      goto LABEL_41;
    }
    goto LABEL_35;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v19 = *(unsigned char *)(a1 + 72);
  unsigned char *v4 = 40;
  v4[1] = v19;
  v4 += 2;
  if ((v6 & 0x80) != 0)
  {
LABEL_35:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v20 = *(_DWORD *)(a1 + 76);
    unsigned char *v4 = 48;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unsigned int v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_41:
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_43:
      if ((v6 & 0x100) == 0) {
        goto LABEL_53;
      }
      goto LABEL_47;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_43;
  }
  char v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0) {
    goto LABEL_53;
  }
LABEL_47:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v23 = *(_DWORD *)(a1 + 80);
  *(_WORD *)char v4 = 32760;
  v4[2] = v23;
  if (v23 > 0x7F)
  {
    v4[2] = v23 | 0x80;
    unsigned int v24 = v23 >> 7;
    v4[3] = v23 >> 7;
    v4 += 4;
    if (v23 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v25 = v24 >> 14;
        v24 >>= 7;
        *v4++ = v24;
      }
      while (v25);
    }
  }
  else
  {
    v4 += 3;
  }
LABEL_53:
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return v4;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    int v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    int v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(v4, v29, (int)v30);
    v4 += v31;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v29, v30, v4);
}

uint64_t sub_15704EC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_22;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v8 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v12 = sub_155677C(*(void *)(a1 + 40));
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_28;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v13 = sub_155677C(*(void *)(a1 + 48));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_28:
  uint64_t v14 = sub_1573EC8(*(void *)(a1 + 56));
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0) {
LABEL_16:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_17:
  if ((v2 & 0x40) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 0x80) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 76) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_22:
  if ((v2 & 0x100) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v15 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    result += v16;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1570708(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      unint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
      uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        uint64_t v11 = (uint64_t *)*v11;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
    }
    if ((v4 & 4) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
      uint64_t v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v14)
      {
        std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
        uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v14 = (std::string *)sub_1563140((uint64_t)v16);
        v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
      }
      if (*(void *)(a2 + 40)) {
        unsigned int v17 = *(uint64_t (****)(uint64_t))(a2 + 40);
      }
      else {
        unsigned int v17 = &off_253D8A0;
      }
      uint64_t result = sub_1555900(v14, (uint64_t)v17);
      if ((v4 & 8) == 0)
      {
LABEL_12:
        if ((v4 & 0x10) == 0) {
          goto LABEL_13;
        }
        goto LABEL_40;
      }
    }
    else if ((v4 & 8) == 0)
    {
      goto LABEL_12;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      std::string::pointer data = (std::string *)sub_1563140((uint64_t)v20);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      unsigned int v21 = *(uint64_t (****)(uint64_t))(a2 + 48);
    }
    else {
      unsigned int v21 = &off_253D8A0;
    }
    uint64_t result = sub_1555900(data, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_13:
      if ((v4 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_48;
    }
LABEL_40:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    unsigned int v22 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v22)
    {
      std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
      unsigned int v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unsigned int v24 = (void *)*v24;
      }
      unsigned int v22 = (std::string *)sub_158481C((uint64_t)v24);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v22;
    }
    if (*(void *)(a2 + 56)) {
      unsigned int v25 = *(void *(****)(void *))(a2 + 56);
    }
    else {
      unsigned int v25 = &off_253E258;
    }
    uint64_t result = sub_123BFCC(v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0)
    {
LABEL_14:
      if ((v4 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_49;
    }
LABEL_48:
    v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_15:
      if ((v4 & 0x80) == 0)
      {
LABEL_17:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_18;
      }
LABEL_16:
      HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
      goto LABEL_17;
    }
LABEL_49:
    v3[3].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 72);
    if ((v4 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  if ((v4 & 0x100) != 0)
  {
    int v12 = *(_DWORD *)(a2 + 80);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v12;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1570918(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 0x10) == 0 || (~*(_DWORD *)(*(void *)(a1 + 56) + 16) & 3) == 0;
}

void *sub_1570944@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.Stop");
}

void *sub_1570954(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *uint64_t result = off_24C1D90;
  result[1] = v3;
  result[2] = 0;
  result[3] = a2;
  result[4] = 0;
  result[5] = 0;
  result[6] = a2;
  result[7] = 0;
  result[8] = 0;
  result[9] = a2;
  result[10] = 0;
  result[11] = 0;
  result[12] = a2;
  result[13] = 0;
  result[14] = 0;
  result[15] = a2;
  result[16] = 0;
  result[17] = 0;
  result[18] = a2;
  result[19] = 0;
  result[20] = 0;
  result[21] = a2;
  result[22] = 0;
  result[23] = 0;
  result[24] = a2;
  result[25] = 0;
  result[26] = 0;
  result[27] = a2;
  result[28] = 0;
  result[29] = 0;
  result[30] = a2;
  result[31] = 0;
  result[32] = 0;
  result[33] = a2;
  result[34] = 0;
  result[35] = 0;
  result[36] = a2;
  result[37] = 0;
  result[38] = 0;
  result[39] = &qword_2550250;
  return result;
}

uint64_t sub_15709D8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  if (*(uint64_t **)(a1 + 312) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 312));
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1588624((void *)(a1 + 288));
  sub_1889DE8((void *)(a1 + 264));
  sub_15885A4((void *)(a1 + 240));
  sub_1587508((void *)(a1 + 216));
  sub_1587188((void *)(a1 + 192));
  sub_1588524((void *)(a1 + 168));
  sub_15884A4((void *)(a1 + 144));
  sub_1588424((void *)(a1 + 120));
  sub_15883A4((void *)(a1 + 96));
  sub_1588324((void *)(a1 + 72));
  sub_15882A4((void *)(a1 + 48));
  sub_1588224((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1570B04(uint64_t a1)
{
  sub_15709D8(a1);

  operator delete();
}

uint64_t sub_1570B3C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_1567904(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_15694C8(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_1563BE8(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 104);
  if ((int)v11 >= 1)
  {
    int v12 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_1564334(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 128);
  if ((int)v14 >= 1)
  {
    std::string::size_type v15 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_1564F04(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v17 = *(unsigned int *)(a1 + 152);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v19 = *v18++;
      sub_156F1B0(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(a1 + 152) = 0;
  }
  uint64_t v20 = *(unsigned int *)(a1 + 176);
  if ((int)v20 >= 1)
  {
    unsigned int v21 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v22 = *v21++;
      sub_156E5E8(v22);
      --v20;
    }
    while (v20);
    *(_DWORD *)(a1 + 176) = 0;
  }
  uint64_t v23 = *(unsigned int *)(a1 + 200);
  if ((int)v23 >= 1)
  {
    unsigned int v24 = (uint64_t *)(*(void *)(a1 + 208) + 8);
    do
    {
      uint64_t v25 = *v24++;
      sub_1553AB8(v25);
      --v23;
    }
    while (v23);
    *(_DWORD *)(a1 + 200) = 0;
  }
  uint64_t v26 = *(unsigned int *)(a1 + 224);
  if ((int)v26 >= 1)
  {
    unint64_t v27 = (uint64_t *)(*(void *)(a1 + 232) + 8);
    do
    {
      uint64_t v28 = *v27++;
      sub_1557248(v28);
      --v26;
    }
    while (v26);
    *(_DWORD *)(a1 + 224) = 0;
  }
  uint64_t v29 = *(unsigned int *)(a1 + 248);
  if ((int)v29 >= 1)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a1 + 256) + 8);
    do
    {
      uint64_t v31 = *v30++;
      sub_156FB90(v31);
      --v29;
    }
    while (v29);
    *(_DWORD *)(a1 + 248) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 264);
  uint64_t v33 = *(unsigned int *)(a1 + 296);
  if ((int)v33 >= 1)
  {
    int v34 = (uint64_t *)(*(void *)(a1 + 304) + 8);
    do
    {
      uint64_t v35 = *v34++;
      uint64_t result = sub_1569F60(v35);
      --v33;
    }
    while (v33);
    *(_DWORD *)(a1 + 296) = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v36 = *(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v36 + 23) < 0)
    {
      **(unsigned char **)unint64_t v36 = 0;
      *(void *)(v36 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v36 = 0;
      *(unsigned char *)(v36 + 23) = 0;
    }
  }
  char v38 = *(unsigned char *)(a1 + 8);
  uint64_t v37 = a1 + 8;
  *(_DWORD *)(v37 + 8) = 0;
  if (v38)
  {
    return sub_188B4AC((uint64_t *)v37);
  }
  return result;
}

uint64_t sub_1570D84(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v95 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v95, a3[11].i32[1])) {
    return *(void *)v95;
  }
  int v93 = (uint64_t *)(a1 + 288);
  uint64_t v94 = (uint64_t **)(a1 + 264);
  int v91 = (uint64_t *)(a1 + 216);
  uint64_t v92 = (uint64_t *)(a1 + 240);
  long long v89 = (uint64_t *)(a1 + 8);
  uint64_t v90 = (uint64_t *)(a1 + 192);
  while (2)
  {
    uint64_t v6 = (char *)(*(void *)v95 + 1);
    unsigned int v7 = **(unsigned char **)v95;
    if ((char)**(unsigned char **)v95 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v95, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v95 + 2);
      }
    }
    *(void *)int v95 = v6;
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_135;
        }
        uint64_t v10 = v6 - 1;
        while (1)
        {
          uint64_t v11 = (unsigned __int8 *)(v10 + 1);
          *(void *)int v95 = v10 + 1;
          int v12 = *(_DWORD **)(a1 + 40);
          if (v12 && (uint64_t v13 = *(int *)(a1 + 32), (int)v13 < *v12))
          {
            *(_DWORD *)(a1 + 32) = v13 + 1;
            uint64_t v14 = *(void *)&v12[2 * v13 + 2];
          }
          else
          {
            sub_157302C(*(void *)(a1 + 24));
            uint64_t v14 = sub_188CDC8(a1 + 24, v15);
            uint64_t v11 = *(unsigned __int8 **)v95;
          }
          uint64_t v10 = sub_1567EA0(a3, v14, v11);
          *(void *)int v95 = v10;
          if (!v10) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v10 || *v10 != 10) {
            goto LABEL_143;
          }
        }
      case 2u:
        if (v7 != 18) {
          goto LABEL_135;
        }
        uint64_t v16 = v6 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)int v95 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 64);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 56) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_15730B4(*(void *)(a1 + 48));
            uint64_t v20 = sub_188CDC8(a1 + 48, v21);
            uint64_t v17 = *(unsigned __int8 **)v95;
          }
          uint64_t v16 = (char *)sub_1571688(a3, v20, v17);
          *(void *)int v95 = v16;
          if (!v16) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_143;
          }
        }
      case 3u:
        if (v7 != 26) {
          goto LABEL_135;
        }
        uint64_t v22 = v6 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)int v95 = v22 + 1;
          unsigned int v24 = *(_DWORD **)(a1 + 88);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 80), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 80) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_1572C60(*(void *)(a1 + 72));
            uint64_t v26 = sub_188CDC8(a1 + 72, v27);
            uint64_t v23 = *(unsigned __int8 **)v95;
          }
          uint64_t v22 = sub_1571718(a3, v26, v23);
          *(void *)int v95 = v22;
          if (!v22) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 26) {
            goto LABEL_143;
          }
        }
      case 4u:
        if (v7 != 34) {
          goto LABEL_135;
        }
        uint64_t v28 = v6 - 1;
        while (1)
        {
          uint64_t v29 = (unsigned __int8 *)(v28 + 1);
          *(void *)int v95 = v28 + 1;
          uint64_t v30 = *(_DWORD **)(a1 + 112);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 104), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 104) = v31 + 1;
            uint64_t v32 = *(void *)&v30[2 * v31 + 2];
          }
          else
          {
            sub_1572CE0(*(void *)(a1 + 96));
            uint64_t v32 = sub_188CDC8(a1 + 96, v33);
            uint64_t v29 = *(unsigned __int8 **)v95;
          }
          uint64_t v28 = sub_15717A8(a3, v32, v29);
          *(void *)int v95 = v28;
          if (!v28) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 34) {
            goto LABEL_143;
          }
        }
      case 5u:
        if (v7 != 42) {
          goto LABEL_135;
        }
        int v34 = v6 - 1;
        while (1)
        {
          uint64_t v35 = (unsigned __int8 *)(v34 + 1);
          *(void *)int v95 = v34 + 1;
          unint64_t v36 = *(_DWORD **)(a1 + 136);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 128), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 128) = v37 + 1;
            uint64_t v38 = *(void *)&v36[2 * v37 + 2];
          }
          else
          {
            sub_1572D60(*(void *)(a1 + 120));
            uint64_t v38 = sub_188CDC8(a1 + 120, v39);
            uint64_t v35 = *(unsigned __int8 **)v95;
          }
          int v34 = (char *)sub_1566A38(a3, v38, v35);
          *(void *)int v95 = v34;
          if (!v34) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 42) {
            goto LABEL_143;
          }
        }
      case 6u:
        if (v7 != 50) {
          goto LABEL_135;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v40 = *(void *)(a1 + 8);
        uint64_t v41 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
        if (v40) {
          uint64_t v41 = (uint64_t *)*v41;
        }
        uint64_t v42 = (std::string *)sub_1880F84((void *)(a1 + 312), v41);
        uint64_t v43 = (void *)sub_188C244(v42, *(char **)v95, (uint64_t)a3);
        goto LABEL_142;
      case 7u:
        if (v7 != 58) {
          goto LABEL_135;
        }
        int v44 = v6 - 1;
        while (1)
        {
          uint64_t v45 = (unsigned __int8 *)(v44 + 1);
          *(void *)int v95 = v44 + 1;
          int v46 = *(_DWORD **)(a1 + 160);
          if (v46 && (uint64_t v47 = *(int *)(a1 + 152), (int)v47 < *v46))
          {
            *(_DWORD *)(a1 + 152) = v47 + 1;
            uint64_t v48 = *(void *)&v46[2 * v47 + 2];
          }
          else
          {
            sub_1573500(*(void *)(a1 + 144));
            uint64_t v48 = sub_188CDC8(a1 + 144, v49);
            uint64_t v45 = *(unsigned __int8 **)v95;
          }
          int v44 = sub_1571838(a3, v48, v45);
          *(void *)int v95 = v44;
          if (!v44) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v44 || *v44 != 58) {
            goto LABEL_143;
          }
        }
      case 8u:
        if (v7 != 66) {
          goto LABEL_135;
        }
        uint64_t v50 = v6 - 1;
        while (1)
        {
          int v51 = (unsigned __int8 *)(v50 + 1);
          *(void *)int v95 = v50 + 1;
          unint64_t v52 = *(_DWORD **)(a1 + 184);
          if (v52 && (uint64_t v53 = *(int *)(a1 + 176), (int)v53 < *v52))
          {
            *(_DWORD *)(a1 + 176) = v53 + 1;
            uint64_t v54 = *(void *)&v52[2 * v53 + 2];
          }
          else
          {
            sub_1573480(*(void *)(a1 + 168));
            uint64_t v54 = sub_188CDC8(a1 + 168, v55);
            int v51 = *(unsigned __int8 **)v95;
          }
          uint64_t v50 = sub_15718C8(a3, v54, v51);
          *(void *)int v95 = v50;
          if (!v50) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v50 || *v50 != 66) {
            goto LABEL_143;
          }
        }
      case 9u:
        if (v7 != 74) {
          goto LABEL_135;
        }
        int v56 = v6 - 1;
        while (1)
        {
          int v57 = (unsigned __int8 *)(v56 + 1);
          *(void *)int v95 = v56 + 1;
          int v58 = *(_DWORD **)(a1 + 208);
          if (v58 && (uint64_t v59 = *(int *)(a1 + 200), (int)v59 < *v58))
          {
            *(_DWORD *)(a1 + 200) = v59 + 1;
            uint64_t v60 = *(void *)&v58[2 * v59 + 2];
          }
          else
          {
            uint64_t v61 = sub_1563140(*v90);
            uint64_t v60 = sub_188CDC8((uint64_t)v90, v61);
            int v57 = *(unsigned __int8 **)v95;
          }
          int v56 = (char *)sub_155478C(a3, v60, v57);
          *(void *)int v95 = v56;
          if (!v56) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v56 || *v56 != 74) {
            goto LABEL_143;
          }
        }
      case 0xAu:
        if (v7 != 82) {
          goto LABEL_135;
        }
        uint64_t v62 = v6 - 1;
        while (1)
        {
          int v63 = (unsigned __int8 *)(v62 + 1);
          *(void *)int v95 = v62 + 1;
          uint64_t v64 = *(_DWORD **)(a1 + 232);
          if (v64 && (uint64_t v65 = *(int *)(a1 + 224), (int)v65 < *v64))
          {
            *(_DWORD *)(a1 + 224) = v65 + 1;
            uint64_t v66 = *(void *)&v64[2 * v65 + 2];
          }
          else
          {
            uint64_t v67 = sub_156324C(*v91);
            uint64_t v66 = sub_188CDC8((uint64_t)v91, v67);
            int v63 = *(unsigned __int8 **)v95;
          }
          uint64_t v62 = (char *)sub_1562050(a3, v66, v63);
          *(void *)int v95 = v62;
          if (!v62) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v62 || *v62 != 82) {
            goto LABEL_143;
          }
        }
      case 0xBu:
        if (v7 != 90) {
          goto LABEL_135;
        }
        uint64_t v68 = v6 - 1;
        while (1)
        {
          int v69 = (unsigned __int8 *)(v68 + 1);
          *(void *)int v95 = v68 + 1;
          unint64_t v70 = *(_DWORD **)(a1 + 256);
          if (v70 && (uint64_t v71 = *(int *)(a1 + 248), (int)v71 < *v70))
          {
            *(_DWORD *)(a1 + 248) = v71 + 1;
            uint64_t v72 = *(void *)&v70[2 * v71 + 2];
          }
          else
          {
            sub_1573580(*v92);
            uint64_t v72 = sub_188CDC8((uint64_t)v92, v73);
            int v69 = *(unsigned __int8 **)v95;
          }
          uint64_t v68 = (char *)sub_1571958(a3, v72, v69);
          *(void *)int v95 = v68;
          if (!v68) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v68 || *v68 != 90) {
            goto LABEL_143;
          }
        }
      case 0xCu:
        if (v7 != 98) {
          goto LABEL_135;
        }
        uint64_t v74 = v6 - 1;
        while (1)
        {
          uint64_t v75 = (char *)(v74 + 1);
          *(void *)int v95 = v74 + 1;
          BOOL v76 = *(_DWORD **)(a1 + 280);
          if (v76 && (uint64_t v77 = *(int *)(a1 + 272), (int)v77 < *v76))
          {
            *(_DWORD *)(a1 + 272) = v77 + 1;
            unsigned int v78 = *(std::string **)&v76[2 * v77 + 2];
          }
          else
          {
            if (!*v94) {
              operator new();
            }
            void *v80 = v79;
            v80[1] = sub_3A6EDC;
            *int v79 = 0;
            v79[1] = 0;
            v79[2] = 0;
            unsigned int v78 = (std::string *)sub_188CDC8((uint64_t)v94, (uint64_t)v79);
            uint64_t v75 = *(char **)v95;
          }
          uint64_t v74 = sub_188C244(v78, v75, (uint64_t)a3);
          *(void *)int v95 = v74;
          if (!v74) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v74 || *v74 != 98) {
            goto LABEL_143;
          }
        }
      case 0xDu:
        if (v7 != 106) {
          goto LABEL_135;
        }
        long long v81 = v6 - 1;
        while (1)
        {
          long long v82 = (unsigned __int8 *)(v81 + 1);
          *(void *)int v95 = v81 + 1;
          uint64_t v83 = *(_DWORD **)(a1 + 304);
          if (v83 && (uint64_t v84 = *(int *)(a1 + 296), (int)v84 < *v83))
          {
            *(_DWORD *)(a1 + 296) = v84 + 1;
            uint64_t v85 = *(void *)&v83[2 * v84 + 2];
          }
          else
          {
            sub_1573140(*v93);
            uint64_t v85 = sub_188CDC8((uint64_t)v93, v86);
            long long v82 = *(unsigned __int8 **)v95;
          }
          long long v81 = (char *)sub_15719E8(a3, v85, v82);
          *(void *)int v95 = v81;
          if (!v81) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v81 || *v81 != 106) {
            goto LABEL_143;
          }
        }
      default:
LABEL_135:
        if (v7) {
          BOOL v87 = (v7 & 7) == 4;
        }
        else {
          BOOL v87 = 1;
        }
        if (!v87)
        {
          if (*v89)
          {
            uint64_t v88 = (std::string *)((*v89 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v88 = (std::string *)sub_188DBD8(v89);
            uint64_t v6 = *(char **)v95;
          }
          uint64_t v43 = sub_1885AC0(v7, v88, v6, a3);
LABEL_142:
          *(void *)int v95 = v43;
          if (!v43) {
            return 0;
          }
LABEL_143:
          if (sub_11947B8((uint64_t)a3, (char **)v95, a3[11].i32[1])) {
            return *(void *)v95;
          }
          continue;
        }
        if (!v6) {
          return 0;
        }
        a3[10].i32[0] = v7 - 1;
        return *(void *)v95;
    }
  }
}

uint64_t sub_1571688(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1569584(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1571718(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1563C10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15717A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15643B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1571838(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_156F230(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15718C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_156E67C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1571958(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_156FC90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_15719E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_156A02C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1571A78(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_1568E50(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_1569888(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 80);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *__dst = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        uint64_t v20 = __dst + 2;
      }
      __dst = sub_1563EE4(v18, (unint64_t)v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 104);
  if (v21)
  {
    for (int m = 0; m != v21; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      *__dst = 34;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      __dst[1] = v24;
      if (v24 > 0x7F) {
        uint64_t v25 = sub_188A9CC(v24, __dst + 1);
      }
      else {
        uint64_t v25 = __dst + 2;
      }
      __dst = sub_1564740(v23, (unint64_t)v25, a3);
    }
  }
  int v26 = *(_DWORD *)(a1 + 128);
  if (v26)
  {
    for (int n = 0; n != v26; ++n)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 136) + 8 * n + 8);
      *__dst = 42;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      __dst[1] = v29;
      if (v29 > 0x7F) {
        uint64_t v30 = sub_188A9CC(v29, __dst + 1);
      }
      else {
        uint64_t v30 = __dst + 2;
      }
      __dst = sub_1565638(v28, (unint64_t)v30, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16)) {
    __dst = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v31 = *(_DWORD *)(a1 + 152);
  if (v31)
  {
    for (iint i = 0; ii != v31; ++ii)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 160) + 8 * ii + 8);
      *__dst = 58;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      __dst[1] = v34;
      if (v34 > 0x7F) {
        uint64_t v35 = sub_188A9CC(v34, __dst + 1);
      }
      else {
        uint64_t v35 = __dst + 2;
      }
      __dst = sub_156F4D8(v33, (unint64_t)v35, a3);
    }
  }
  int v36 = *(_DWORD *)(a1 + 176);
  if (v36)
  {
    for (jint j = 0; jj != v36; ++jj)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 184) + 8 * jj + 8);
      *__dst = 66;
      unsigned int v39 = *(_DWORD *)(v38 + 20);
      __dst[1] = v39;
      if (v39 > 0x7F) {
        uint64_t v40 = sub_188A9CC(v39, __dst + 1);
      }
      else {
        uint64_t v40 = __dst + 2;
      }
      __dst = sub_156E9E8(v38, (unint64_t)v40, a3);
    }
  }
  int v41 = *(_DWORD *)(a1 + 200);
  if (v41)
  {
    for (kint k = 0; kk != v41; ++kk)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v43 = *(void *)(*(void *)(a1 + 208) + 8 * kk + 8);
      *__dst = 74;
      unsigned int v44 = *(_DWORD *)(v43 + 20);
      __dst[1] = v44;
      if (v44 > 0x7F) {
        uint64_t v45 = sub_188A9CC(v44, __dst + 1);
      }
      else {
        uint64_t v45 = __dst + 2;
      }
      __dst = sub_15564E4(v43, v45, a3);
    }
  }
  int v46 = *(_DWORD *)(a1 + 224);
  if (v46)
  {
    for (mint m = 0; mm != v46; ++mm)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v48 = *(void *)(*(void *)(a1 + 232) + 8 * mm + 8);
      *__dst = 82;
      unsigned int v49 = *(_DWORD *)(v48 + 44);
      __dst[1] = v49;
      if (v49 > 0x7F) {
        uint64_t v50 = sub_188A9CC(v49, __dst + 1);
      }
      else {
        uint64_t v50 = __dst + 2;
      }
      __dst = sub_1558078(v48, v50, a3);
    }
  }
  int v51 = *(_DWORD *)(a1 + 248);
  if (v51)
  {
    for (nint n = 0; nn != v51; ++nn)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v53 = *(void *)(*(void *)(a1 + 256) + 8 * nn + 8);
      *__dst = 90;
      unsigned int v54 = *(_DWORD *)(v53 + 20);
      __dst[1] = v54;
      if (v54 > 0x7F) {
        uint64_t v55 = sub_188A9CC(v54, __dst + 1);
      }
      else {
        uint64_t v55 = __dst + 2;
      }
      __dst = sub_15700FC(v53, (unint64_t)v55, a3);
    }
  }
  uint64_t v56 = *(unsigned int *)(a1 + 272);
  if ((int)v56 >= 1)
  {
    uint64_t v57 = 0;
    uint64_t v58 = 8 * v56;
    do
    {
      __dst = (char *)sub_125CE58(a3, 12, *(void *)(*(void *)(a1 + 280) + v57 + 8), __dst);
      v57 += 8;
    }
    while (v58 != v57);
  }
  int v59 = *(_DWORD *)(a1 + 296);
  if (v59)
  {
    for (int i1 = 0; i1 != v59; ++i1)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v61 = *(void *)(*(void *)(a1 + 304) + 8 * i1 + 8);
      *__dst = 106;
      unsigned int v62 = *(_DWORD *)(v61 + 20);
      __dst[1] = v62;
      if (v62 > 0x7F) {
        int v63 = sub_188A9CC(v62, __dst + 1);
      }
      else {
        int v63 = __dst + 2;
      }
      __dst = sub_156A378(v61, (unint64_t)v63, a3);
    }
  }
  uint64_t v64 = *(void *)(a1 + 8);
  if ((v64 & 1) == 0) {
    return __dst;
  }
  unint64_t v66 = v64 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v66 + 31) < 0)
  {
    uint64_t v67 = *(void **)(v66 + 8);
    uint64_t v68 = *(void *)(v66 + 16);
  }
  else
  {
    uint64_t v67 = (void *)(v66 + 8);
    LODWORD(v68) = *(unsigned __int8 *)(v66 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v68)
  {
    uint64_t v69 = (int)v68;
    memcpy(__dst, v67, (int)v68);
    __dst += v69;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v67, v68, __dst);
}

uint64_t sub_1572148(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1569208(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1569B2C(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      unint64_t v21 = sub_156413C(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    uint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    uint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_1564A78(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 128);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *(void *)(a1 + 136);
  if (v31) {
    uint64_t v32 = (uint64_t *)(v31 + 8);
  }
  else {
    uint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_1565BEC(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *(int *)(a1 + 152);
  uint64_t v37 = v30 + v36;
  uint64_t v38 = *(void *)(a1 + 160);
  if (v38) {
    unsigned int v39 = (uint64_t *)(v38 + 8);
  }
  else {
    unsigned int v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      uint64_t v41 = *v39++;
      uint64_t v42 = sub_156F75C(v41);
      v37 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      v40 -= 8;
    }
    while (v40);
  }
  uint64_t v43 = *(int *)(a1 + 176);
  uint64_t v44 = v37 + v43;
  uint64_t v45 = *(void *)(a1 + 184);
  if (v45) {
    int v46 = (uint64_t *)(v45 + 8);
  }
  else {
    int v46 = 0;
  }
  if (v43)
  {
    uint64_t v47 = 8 * v43;
    do
    {
      uint64_t v48 = *v46++;
      uint64_t v49 = sub_156ED50(v48);
      v44 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6);
      v47 -= 8;
    }
    while (v47);
  }
  uint64_t v50 = *(int *)(a1 + 200);
  uint64_t v51 = v44 + v50;
  uint64_t v52 = *(void *)(a1 + 208);
  if (v52) {
    uint64_t v53 = (uint64_t *)(v52 + 8);
  }
  else {
    uint64_t v53 = 0;
  }
  if (v50)
  {
    uint64_t v54 = 8 * v50;
    do
    {
      uint64_t v55 = *v53++;
      uint64_t v56 = sub_155677C(v55);
      v51 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6);
      v54 -= 8;
    }
    while (v54);
  }
  uint64_t v57 = *(int *)(a1 + 224);
  uint64_t v58 = v51 + v57;
  uint64_t v59 = *(void *)(a1 + 232);
  if (v59) {
    uint64_t v60 = (uint64_t *)(v59 + 8);
  }
  else {
    uint64_t v60 = 0;
  }
  if (v57)
  {
    uint64_t v61 = 8 * v57;
    do
    {
      uint64_t v62 = *v60++;
      uint64_t v63 = sub_15589EC(v62);
      v58 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6);
      v61 -= 8;
    }
    while (v61);
  }
  uint64_t v64 = *(int *)(a1 + 248);
  uint64_t v65 = v58 + v64;
  uint64_t v66 = *(void *)(a1 + 256);
  if (v66) {
    uint64_t v67 = (uint64_t *)(v66 + 8);
  }
  else {
    uint64_t v67 = 0;
  }
  if (v64)
  {
    uint64_t v68 = 8 * v64;
    do
    {
      uint64_t v69 = *v67++;
      uint64_t v70 = sub_15704EC(v69);
      v65 += v70 + ((9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6);
      v68 -= 8;
    }
    while (v68);
  }
  uint64_t v71 = *(unsigned int *)(a1 + 272);
  uint64_t v72 = v65 + v71;
  if ((int)v71 >= 1)
  {
    uint64_t v73 = (uint64_t *)(*(void *)(a1 + 280) + 8);
    do
    {
      uint64_t v74 = *v73++;
      uint64_t v75 = *(unsigned __int8 *)(v74 + 23);
      uint64_t v76 = *(void *)(v74 + 8);
      if ((v75 & 0x80u) == 0) {
        uint64_t v76 = v75;
      }
      v72 += v76 + ((9 * (__clz(v76 | 1) ^ 0x1F) + 73) >> 6);
      --v71;
    }
    while (v71);
  }
  uint64_t v77 = *(int *)(a1 + 296);
  uint64_t v78 = v72 + v77;
  uint64_t v79 = *(void *)(a1 + 304);
  if (v79) {
    unsigned int v80 = (uint64_t *)(v79 + 8);
  }
  else {
    unsigned int v80 = 0;
  }
  if (v77)
  {
    uint64_t v81 = 8 * v77;
    do
    {
      uint64_t v82 = *v80++;
      uint64_t v83 = sub_156A688(v82);
      v78 += v83 + ((9 * (__clz(v83 | 1) ^ 0x1F) + 73) >> 6);
      v81 -= 8;
    }
    while (v81);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v84 = *(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v85 = *(unsigned __int8 *)(v84 + 23);
    uint64_t v86 = *(void *)(v84 + 8);
    if ((v85 & 0x80u) == 0) {
      uint64_t v86 = v85;
    }
    v78 += v86 + ((9 * (__clz(v86 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v87 = *(void *)(a1 + 8);
  if (v87)
  {
    unint64_t v89 = v87 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v89 + 31) < 0) {
      uint64_t v90 = *(void *)(v89 + 16);
    }
    else {
      uint64_t v90 = *(unsigned __int8 *)(v89 + 31);
    }
    v78 += v90;
  }
  *(_DWORD *)(a1 + 20) = v78;
  return v78;
}

void sub_15725B8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1588960((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_15889EC((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1588A78((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    unint64_t v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1588AF4((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_1588B80((uint64_t *)(a1 + 120), v26, v25, v24, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v27 = *(_DWORD *)(a1 + 128) + v24;
    *(_DWORD *)(a1 + 128) = v27;
    uint64_t v28 = *(int **)(a1 + 136);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 152);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_1588C0C((uint64_t *)(a1 + 144), v31, v30, v29, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v32 = *(_DWORD *)(a1 + 152) + v29;
    *(_DWORD *)(a1 + 152) = v32;
    uint64_t v33 = *(int **)(a1 + 160);
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 176);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_1588C98((uint64_t *)(a1 + 168), v36, v35, v34, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v37 = *(_DWORD *)(a1 + 176) + v34;
    *(_DWORD *)(a1 + 176) = v37;
    uint64_t v38 = *(int **)(a1 + 184);
    if (*v38 < v37) {
      int *v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 200);
  if (v39)
  {
    uint64_t v40 = (uint64_t *)(*(void *)(a2 + 208) + 8);
    uint64_t v41 = (std::string **)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_1587810((uint64_t *)(a1 + 192), v41, v40, v39, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v42 = *(_DWORD *)(a1 + 200) + v39;
    *(_DWORD *)(a1 + 200) = v42;
    uint64_t v43 = *(int **)(a1 + 208);
    if (*v43 < v42) {
      int *v43 = v42;
    }
  }
  int v44 = *(_DWORD *)(a2 + 224);
  if (v44)
  {
    uint64_t v45 = (uint64_t *)(*(void *)(a2 + 232) + 8);
    int v46 = (uint64_t *)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_1587BD4((uint64_t *)(a1 + 216), v46, v45, v44, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v47 = *(_DWORD *)(a1 + 224) + v44;
    *(_DWORD *)(a1 + 224) = v47;
    uint64_t v48 = *(int **)(a1 + 232);
    if (*v48 < v47) {
      *uint64_t v48 = v47;
    }
  }
  int v49 = *(_DWORD *)(a2 + 248);
  if (v49)
  {
    uint64_t v50 = (uint64_t *)(*(void *)(a2 + 256) + 8);
    uint64_t v51 = (std::string **)sub_188CCE4(a1 + 240, *(_DWORD *)(a2 + 248));
    sub_1588D24((uint64_t *)(a1 + 240), v51, v50, v49, **(_DWORD **)(a1 + 256) - *(_DWORD *)(a1 + 248));
    int v52 = *(_DWORD *)(a1 + 248) + v49;
    *(_DWORD *)(a1 + 248) = v52;
    uint64_t v53 = *(int **)(a1 + 256);
    if (*v53 < v52) {
      *uint64_t v53 = v52;
    }
  }
  int v54 = *(_DWORD *)(a2 + 272);
  if (v54)
  {
    uint64_t v55 = (const std::string **)(*(void *)(a2 + 280) + 8);
    uint64_t v56 = (std::string **)sub_188CCE4(a1 + 264, *(_DWORD *)(a2 + 272));
    sub_188FB98(a1 + 264, v56, v55, v54, **(_DWORD **)(a1 + 280) - *(_DWORD *)(a1 + 272));
    int v57 = *(_DWORD *)(a1 + 272) + v54;
    *(_DWORD *)(a1 + 272) = v57;
    uint64_t v58 = *(int **)(a1 + 280);
    if (*v58 < v57) {
      int *v58 = v57;
    }
  }
  int v59 = *(_DWORD *)(a2 + 296);
  if (v59)
  {
    uint64_t v60 = (uint64_t *)(*(void *)(a2 + 304) + 8);
    uint64_t v61 = (std::string **)sub_188CCE4(a1 + 288, *(_DWORD *)(a2 + 296));
    sub_1588DB0((uint64_t *)(a1 + 288), v61, v60, v59, **(_DWORD **)(a1 + 304) - *(_DWORD *)(a1 + 296));
    int v62 = *(_DWORD *)(a1 + 296) + v59;
    *(_DWORD *)(a1 + 296) = v62;
    uint64_t v63 = *(int **)(a1 + 304);
    if (*v63 < v62) {
      *uint64_t v63 = v62;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v64 = (long long *)(*(void *)(a2 + 312) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v65 = *(void *)(a1 + 8);
    uint64_t v66 = (uint64_t *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
    if (v65) {
      uint64_t v66 = (uint64_t *)*v66;
    }
    sub_1881DF4((std::string **)(a1 + 312), v64, v66);
  }
  uint64_t v67 = *(void *)(a2 + 8);
  if (v67)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v67 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1572B0C(uint64_t a1)
{
  if (!sub_155ECF8(a1 + 24)
    || !sub_1572B98(a1 + 144)
    || !sub_1572BF4(a1 + 168))
  {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 224);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    BOOL v4 = sub_155937C(*(void *)(*(void *)(a1 + 232) + 8 * v2));
    uint64_t v2 = v3;
    if (!v4) {
      return 0;
    }
  }

  return sub_1562F5C(a1 + 240);
}

uint64_t sub_1572B98(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v4 + 16) & 2) != 0 && (~*(_DWORD *)(*(void *)(v4 + 32) + 16) & 3) != 0) {
      break;
    }
    if (--v2 <= 1) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1572BF4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v4 + 16) & 4) != 0 && (~*(_DWORD *)(*(void *)(v4 + 40) + 16) & 3) != 0) {
      break;
    }
    if (--v2 <= 1) {
      return 1;
    }
  }
  return 0;
}

void *sub_1572C50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.transit.DecoderData");
}

uint64_t sub_1572C60(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C1490;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_1572CE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C1510;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 44) = 0u;
  return result;
}

double sub_1572D60(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C1590;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  *(void *)(v2 + 40) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(void *)(v2 + 96) = 0;
  *(_DWORD *)(v2 + 104) = -1;
  return result;
}

uint64_t sub_1572DFC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C1610;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

double sub_1572E78(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C1690;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(unsigned char *)(v2 + 48) = 0;
  return result;
}

void *sub_1572EF8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24C1710;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_1572F74(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24C1790;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  return result;
}

double sub_157302C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C1810;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_DWORD *)(v2 + 64) = 1;
  return result;
}

uint64_t sub_15730B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C1890;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

double sub_1573140(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C1910;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_DWORD *)(v2 + 64) = 0;
  return result;
}

void *sub_15731D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24C1990;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  *(void *)((char *)result + 37) = 0;
  return result;
}

uint64_t sub_1573250(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C1A10;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

void *sub_15732D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C1A90;
  result[2] = 0;
  *(void *)((char *)result + 21) = 0;
  return result;
}

double sub_157334C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C1B10;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  return result;
}

uint64_t sub_15733D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C1B90;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 109) = 0u;
  return result;
}

double sub_1573480(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C1C10;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  return result;
}

double sub_1573500(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C1C90;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 0;
  return result;
}

double sub_1573580(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C1D10;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 68) = 0u;
  return result;
}

void *sub_1573614(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1570954(v2, a1, 0);
}

BOOL sub_1573674(unsigned int a1)
{
  return a1 < 0xA;
}

BOOL sub_1573680(unsigned int a1)
{
  return a1 < 8;
}

uint64_t sub_157368C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1573744(uint64_t a1)
{
  sub_157368C(a1);

  operator delete();
}

uint64_t sub_157377C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_15737F8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      int v17 = (void *)(a1 + 24);
LABEL_27:
      int v19 = (std::string *)sub_1880F84(v17, v16);
      int v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    int v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_15739A0(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1573A8C(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t result = sub_1231798(a1);
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    uint64_t result = v4 + v8 + v5 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_1573B6C(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_1573B80@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.AttributeKeyValue");
}

void *sub_1573B90(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1573C04(void *a1)
{
  sub_1573B90(a1);

  operator delete();
}

char *sub_1573C3C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    goto LABEL_29;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 17)
      {
        uint64_t v15 = *(void *)v7;
        int v14 = v7 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v15;
LABEL_23:
        uint64_t v18 = v14;
        goto LABEL_24;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 9)
    {
      uint64_t v16 = *(void *)v7;
      int v14 = v7 + 8;
      v5 |= 1u;
      *(void *)(a1 + 24) = v16;
      goto LABEL_23;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v18;
    }
    uint64_t v18 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v18) {
      goto LABEL_30;
    }
LABEL_24:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v18 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 16) |= v5;
  return v18;
}

_OWORD *sub_1573DAC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 32);
    *(unsigned char *)uint64_t v4 = 17;
    *(void *)((char *)v4 + 1) = v8;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    return (_OWORD *)((char *)v4 + v14);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1573EC8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  BOOL v3 = (~v1 & 3) == 0;
  uint64_t v4 = 18;
  if (!v3) {
    uint64_t v4 = v2;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v4 += v8;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void *sub_1573F2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.LatLng");
}

void *sub_1573F3C(void *a1)
{
  BOOL v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1573FB0(void *a1)
{
  sub_1573F3C(a1);

  operator delete();
}

char *sub_1573FE8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v19 + 1;
    unsigned int v9 = *v19;
    if (*v19 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v19, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v19 + 2;
      }
    }
    int v19 = v8;
    switch(v9 >> 3)
    {
      case 5u:
        if (v9 != 41) {
          goto LABEL_20;
        }
        uint64_t v13 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 24) = v13;
        goto LABEL_17;
      case 6u:
        if (v9 != 49) {
          goto LABEL_20;
        }
        uint64_t v14 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v14;
        goto LABEL_17;
      case 7u:
        if (v9 != 57) {
          goto LABEL_20;
        }
        uint64_t v15 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v15;
        goto LABEL_17;
      case 8u:
        if (v9 != 65) {
          goto LABEL_20;
        }
        uint64_t v16 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v16;
LABEL_17:
        int v19 = v12;
        goto LABEL_18;
      default:
LABEL_20:
        if (v9) {
          BOOL v17 = (v9 & 7) == 4;
        }
        else {
          BOOL v17 = 1;
        }
        if (!v17)
        {
          if (*v7)
          {
            uint64_t v18 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v19;
          }
          int v19 = (char *)sub_1885AC0(v9, v18, v8, a3);
          if (!v19) {
            goto LABEL_31;
          }
LABEL_18:
          if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_31:
        }
          int v19 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v19;
    }
  }
}

_OWORD *sub_15741C4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 41;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *(unsigned char *)uint64_t v4 = 49;
  *(void *)((char *)v4 + 1) = v8;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 40);
  *(unsigned char *)uint64_t v4 = 57;
  *(void *)((char *)v4 + 1) = v9;
  uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 8) != 0)
  {
LABEL_15:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    *(unsigned char *)uint64_t v4 = 65;
    *(void *)((char *)v4 + 1) = v10;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
LABEL_18:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    return (_OWORD *)((char *)v4 + v16);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_1574360(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if ((v1 & 4) != 0) {
    v2 += 9;
  }
  if ((v1 & 8) != 0) {
    v2 += 9;
  }
  if ((v1 & 0xF) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_15743D4()
{
  return 1;
}

void *sub_15743DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.MapRegion");
}

uint64_t sub_15743EC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253E2B8)
  {
    unint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1573B90(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15744A4(uint64_t a1)
{
  sub_15743EC(a1);

  operator delete();
}

char *sub_15744DC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v22 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v22 + 1;
    unsigned int v9 = *v22;
    if (*v22 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v22, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v22 + 2;
      }
    }
    int v22 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 9) {
      break;
    }
    if (v12 == 7)
    {
      if (v9 == 57)
      {
        uint64_t v19 = *(void *)v8;
        BOOL v17 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v19;
        goto LABEL_25;
      }
      goto LABEL_14;
    }
    if (v12 != 1 || v9 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void **)(a1 + 24);
    if (!v20)
    {
      unint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        unint64_t v21 = (void *)*v21;
      }
      uint64_t v20 = sub_158481C((uint64_t)v21);
      *(void *)(a1 + 24) = v20;
      uint64_t v8 = v22;
    }
    uint64_t v16 = sub_155B4FC(a3, (uint64_t)v20, (unsigned __int8 *)v8);
LABEL_31:
    int v22 = v16;
    if (!v16) {
      goto LABEL_37;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 73)
  {
    uint64_t v18 = *(void *)v8;
    BOOL v17 = v8 + 8;
    v5 |= 4u;
    *(void *)(a1 + 40) = v18;
LABEL_25:
    int v22 = v17;
    goto LABEL_32;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v22;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_31;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_37:
  int v22 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v22;
}

unsigned char *sub_15746A8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1573DAC(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 57;
  *(void *)(v4 + 1) = v10;
  v4 += 9;
  if ((v6 & 4) != 0)
  {
LABEL_14:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 40);
    unsigned char *v4 = 73;
    *(void *)(v4 + 1) = v11;
    v4 += 9;
  }
LABEL_17:
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_1574840(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t v4 = sub_1573EC8(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    int v2 = *(_DWORD *)(a1 + 16);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = v3 + 9;
  if ((v2 & 2) == 0) {
    uint64_t v5 = v3;
  }
  if ((v2 & 4) != 0) {
    v5 += 9;
  }
  if ((v2 & 6) != 0) {
    uint64_t result = v5;
  }
  else {
    uint64_t result = v3;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_15748EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Location");
}

void *sub_15748FC(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *uint64_t result = off_24C2010;
  result[1] = v3;
  result[2] = 0;
  result[3] = a2;
  result[4] = 0;
  result[5] = 0;
  result[6] = a2;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = &qword_2550250;
  result[11] = &qword_2550250;
  result[12] = &qword_2550250;
  result[13] = &qword_2550250;
  result[14] = &qword_2550250;
  result[15] = &qword_2550250;
  result[16] = &qword_2550250;
  result[17] = &qword_2550250;
  result[18] = &qword_2550250;
  result[19] = &qword_2550250;
  result[20] = &qword_2550250;
  result[21] = &qword_2550250;
  result[22] = &qword_2550250;
  result[23] = &qword_2550250;
  return result;
}

void *sub_1574960(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_15749F4((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 6);
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_15749F4(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 72);
  uint64_t v2 = (void ***)(a1 + 72);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 96));
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 112));
  }
  if (*(uint64_t **)(a1 + 120) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 120));
  }
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 128));
  }
  if (*(uint64_t **)(a1 + 136) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 136));
  }
  if (*(uint64_t **)(a1 + 144) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 144));
  }
  if (*(uint64_t **)(a1 + 152) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 152));
  }
  if (*(uint64_t **)(a1 + 160) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 160));
  }
  if (*(uint64_t **)(a1 + 168) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 168));
  }
  uint64_t result = (void ***)(a1 + 176);
  if (*(uint64_t **)(a1 + 176) != &qword_2550250) {
    sub_1881C6C(result);
  }
  int v6 = *(uint64_t **)(a1 + 184);
  uint64_t v5 = (void ***)(a1 + 184);
  if (v6 != &qword_2550250)
  {
    sub_1881C6C(v5);
  }
  return result;
}

void sub_1574B60(void *a1)
{
  sub_1574960(a1);

  operator delete();
}

uint64_t sub_1574B98(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  uint64_t result = sub_188CC00(a1 + 48);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) == 0)
    {
      if ((v3 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      unint64_t v5 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_19;
        }
      }
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_23:
      unint64_t v7 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v3 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v3 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
LABEL_7:
      if ((v3 & 0x20) == 0) {
        goto LABEL_8;
      }
LABEL_31:
      unint64_t v9 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
        if ((v3 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v9 = 0;
        *(unsigned char *)(v9 + 23) = 0;
        if ((v3 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_42;
      }
LABEL_39:
      unint64_t v11 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v11 + 23) < 0)
      {
        **(unsigned char **)unint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v11 = 0;
        *(unsigned char *)(v11 + 23) = 0;
      }
      goto LABEL_42;
    }
    unint64_t v4 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    unint64_t v6 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    unint64_t v8 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v3 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v3 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    if ((v3 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_35:
    unint64_t v10 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v3 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v3 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    goto LABEL_39;
  }
LABEL_42:
  if ((v3 & 0x7F00) == 0) {
    goto LABEL_78;
  }
  if ((v3 & 0x100) != 0)
  {
    unint64_t v12 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v3 & 0x200) != 0) {
        goto LABEL_55;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v3 & 0x200) != 0) {
        goto LABEL_55;
      }
    }
LABEL_45:
    if ((v3 & 0x400) == 0) {
      goto LABEL_46;
    }
LABEL_59:
    unint64_t v14 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v14 + 23) < 0)
    {
      **(unsigned char **)unint64_t v14 = 0;
      *(void *)(v14 + 8) = 0;
      if ((v3 & 0x800) != 0) {
        goto LABEL_63;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v14 = 0;
      *(unsigned char *)(v14 + 23) = 0;
      if ((v3 & 0x800) != 0) {
        goto LABEL_63;
      }
    }
LABEL_47:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_48;
    }
LABEL_67:
    unint64_t v16 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v16 + 23) < 0)
    {
      **(unsigned char **)unint64_t v16 = 0;
      *(void *)(v16 + 8) = 0;
      if ((v3 & 0x2000) != 0) {
        goto LABEL_71;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v16 = 0;
      *(unsigned char *)(v16 + 23) = 0;
      if ((v3 & 0x2000) != 0) {
        goto LABEL_71;
      }
    }
LABEL_49:
    if ((v3 & 0x4000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_75;
  }
  if ((v3 & 0x200) == 0) {
    goto LABEL_45;
  }
LABEL_55:
  unint64_t v13 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v13 + 23) < 0)
  {
    **(unsigned char **)unint64_t v13 = 0;
    *(void *)(v13 + 8) = 0;
    if ((v3 & 0x400) != 0) {
      goto LABEL_59;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v13 = 0;
    *(unsigned char *)(v13 + 23) = 0;
    if ((v3 & 0x400) != 0) {
      goto LABEL_59;
    }
  }
LABEL_46:
  if ((v3 & 0x800) == 0) {
    goto LABEL_47;
  }
LABEL_63:
  unint64_t v15 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v15 + 23) < 0)
  {
    **(unsigned char **)unint64_t v15 = 0;
    *(void *)(v15 + 8) = 0;
    if ((v3 & 0x1000) != 0) {
      goto LABEL_67;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v15 = 0;
    *(unsigned char *)(v15 + 23) = 0;
    if ((v3 & 0x1000) != 0) {
      goto LABEL_67;
    }
  }
LABEL_48:
  if ((v3 & 0x2000) == 0) {
    goto LABEL_49;
  }
LABEL_71:
  unint64_t v17 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v17 + 23) < 0)
  {
    **(unsigned char **)unint64_t v17 = 0;
    *(void *)(v17 + 8) = 0;
    if ((v3 & 0x4000) == 0) {
      goto LABEL_78;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v17 = 0;
    *(unsigned char *)(v17 + 23) = 0;
    if ((v3 & 0x4000) == 0) {
      goto LABEL_78;
    }
  }
LABEL_75:
  unint64_t v18 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v18 + 23) < 0)
  {
    **(unsigned char **)unint64_t v18 = 0;
    *(void *)(v18 + 8) = 0;
  }
  else
  {
    *(unsigned char *)unint64_t v18 = 0;
    *(unsigned char *)(v18 + 23) = 0;
  }
LABEL_78:
  char v20 = *(unsigned char *)(a1 + 8);
  uint64_t v19 = a1 + 8;
  *(_DWORD *)(v19 + 8) = 0;
  if (v20)
  {
    return sub_188B4AC((uint64_t *)v19);
  }
  return result;
}

char *sub_1574F0C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v48 = a2;
  if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
    return v48;
  }
  unint64_t v6 = (uint64_t **)(a1 + 48);
  int v47 = (uint64_t *)(a1 + 8);
  unint64_t v7 = (uint64_t **)(a1 + 24);
  while (2)
  {
    unint64_t v8 = v48 + 1;
    unsigned int v9 = *v48;
    if (*v48 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v48, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v48 + 2;
      }
    }
    uint64_t v48 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 72);
        goto LABEL_81;
      case 2u:
        if (v9 != 18) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 80);
        goto LABEL_81;
      case 3u:
        if (v9 != 26) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 88);
        goto LABEL_81;
      case 4u:
        if (v9 != 34) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v17 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 96);
        goto LABEL_81;
      case 5u:
        if (v9 != 42) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 104);
        goto LABEL_81;
      case 6u:
        if (v9 != 50) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 112);
        goto LABEL_81;
      case 7u:
        if (v9 != 58) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v20 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 120);
        goto LABEL_81;
      case 8u:
        if (v9 != 66) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v21 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 128);
        goto LABEL_81;
      case 9u:
        if (v9 != 74) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v22 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 136);
        goto LABEL_81;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v23 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 144);
        goto LABEL_81;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v24 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 152);
        goto LABEL_81;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        uint64_t v25 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 160);
        goto LABEL_81;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v26 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 168);
        goto LABEL_81;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_97;
        }
        int v27 = v8 - 1;
        while (1)
        {
          uint64_t v28 = (char *)(v27 + 1);
          uint64_t v48 = (char *)(v27 + 1);
          int v29 = *(_DWORD **)(a1 + 40);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 32), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 32) = v30 + 1;
            uint64_t v31 = *(std::string **)&v29[2 * v30 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v33 = v32;
            v33[1] = sub_3A6EDC;
            *int v32 = 0;
            v32[1] = 0;
            int v32[2] = 0;
            uint64_t v31 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v32);
            uint64_t v28 = v48;
          }
          int v27 = sub_188C244(v31, v28, (uint64_t)a3);
          uint64_t v48 = (char *)v27;
          if (!v27) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 114) {
            goto LABEL_83;
          }
        }
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        uint64_t v34 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
        if (v34) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 176);
        goto LABEL_81;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_97;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000u;
        uint64_t v35 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 184);
LABEL_81:
        uint64_t v36 = (std::string *)sub_1880F84(v14, v13);
        int v37 = (char *)sub_188C244(v36, v48, (uint64_t)a3);
        goto LABEL_82;
      case 0x11u:
        if (v9 != 138) {
          goto LABEL_97;
        }
        uint64_t v38 = v8 - 2;
        while (1)
        {
          int v39 = (char *)(v38 + 2);
          uint64_t v48 = (char *)(v38 + 2);
          uint64_t v40 = *(_DWORD **)(a1 + 64);
          if (v40 && (uint64_t v41 = *(int *)(a1 + 56), (int)v41 < *v40))
          {
            *(_DWORD *)(a1 + 56) = v41 + 1;
            int v42 = *(std::string **)&v40[2 * v41 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *int v44 = v43;
            v44[1] = sub_3A6EDC;
            void *v43 = 0;
            v43[1] = 0;
            v43[2] = 0;
            int v42 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v43);
            int v39 = v48;
          }
          uint64_t v38 = sub_188C244(v42, v39, (uint64_t)a3);
          uint64_t v48 = (char *)v38;
          if (!v38) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v38 || *(_WORD *)v38 != 394) {
            goto LABEL_83;
          }
        }
      default:
LABEL_97:
        if (v9) {
          BOOL v45 = (v9 & 7) == 4;
        }
        else {
          BOOL v45 = 1;
        }
        if (!v45)
        {
          if (*v47)
          {
            int v46 = (std::string *)((*v47 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v46 = (std::string *)sub_188DBD8(v47);
            unint64_t v8 = v48;
          }
          int v37 = (char *)sub_1885AC0(v9, v46, v8, a3);
LABEL_82:
          uint64_t v48 = v37;
          if (!v37) {
            return 0;
          }
LABEL_83:
          if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
            return v48;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return v48;
    }
  }
}

char *sub_15755D0(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_47;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_48;
  }
LABEL_47:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_49;
  }
LABEL_48:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_50;
  }
LABEL_49:
  unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_51;
  }
LABEL_50:
  unint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_52;
  }
LABEL_51:
  unint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_53;
  }
LABEL_52:
  unint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_54;
  }
LABEL_53:
  unint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_55;
  }
LABEL_54:
  unint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_56;
  }
LABEL_55:
  unint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_56:
  unint64_t v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x1000) != 0) {
LABEL_14:
  }
    unint64_t v4 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_15:
  uint64_t v7 = *(unsigned int *)(a1 + 32);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      unsigned int v10 = *(void **)(*(void *)(a1 + 40) + v8 + 8);
      if (*((char *)v10 + 23) < 0)
      {
        int64_t v11 = v10[1];
        if (v11 > 127) {
          goto LABEL_26;
        }
      }
      else
      {
        int64_t v11 = *((unsigned __int8 *)v10 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v11)
      {
        char *v4 = 114;
        v4[1] = v11;
        if (*((char *)v10 + 23) < 0) {
          unsigned int v10 = (void *)*v10;
        }
        uint64_t v12 = v4 + 2;
        memcpy(v12, v10, v11);
        unint64_t v4 = &v12[v11];
        goto LABEL_24;
      }
LABEL_26:
      unint64_t v4 = (char *)sub_188A868(a3, 14, (uint64_t)v10, v4);
LABEL_24:
      v8 += 8;
    }
    while (v9 != v8);
  }
  if ((v6 & 0x2000) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x4000) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 16, (const void **)(*(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v13 = *(unsigned int *)(a1 + 56);
  if ((int)v13 >= 1)
  {
    uint64_t v14 = 0;
    uint64_t v15 = 8 * v13;
    do
    {
      uint64_t v16 = *(void **)(*(void *)(a1 + 64) + v14 + 8);
      if (*((char *)v16 + 23) < 0)
      {
        int64_t v17 = v16[1];
        if (v17 > 127) {
          goto LABEL_42;
        }
      }
      else
      {
        int64_t v17 = *((unsigned __int8 *)v16 + 23);
      }
      if (*a3 - (void)v4 + 13 >= v17)
      {
        *(_WORD *)unint64_t v4 = 394;
        v4[2] = v17;
        if (*((char *)v16 + 23) < 0) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v18 = v4 + 3;
        memcpy(v18, v16, v17);
        unint64_t v4 = &v18[v17];
        goto LABEL_40;
      }
LABEL_42:
      unint64_t v4 = (char *)sub_188A868(a3, 17, (uint64_t)v16, v4);
LABEL_40:
      v14 += 8;
    }
    while (v15 != v14);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_15759F8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 56);
  uint64_t v8 = v3 + 2 * v7;
  if ((int)v7 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v8 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      --v7;
    }
    while (v7);
  }
  int v13 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v13) {
    goto LABEL_25;
  }
  if (v13)
  {
    unint64_t v22 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
    uint64_t v24 = *(void *)(v22 + 8);
    if ((v23 & 0x80u) == 0) {
      uint64_t v24 = v23;
    }
    v8 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v13 & 2) == 0)
    {
LABEL_16:
      if ((v13 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_44;
    }
  }
  else if ((v13 & 2) == 0)
  {
    goto LABEL_16;
  }
  unint64_t v25 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
  uint64_t v27 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    uint64_t v27 = v26;
  }
  v8 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 4) == 0)
  {
LABEL_17:
    if ((v13 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_47;
  }
LABEL_44:
  unint64_t v28 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
  uint64_t v30 = *(void *)(v28 + 8);
  if ((v29 & 0x80u) == 0) {
    uint64_t v30 = v29;
  }
  v8 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 8) == 0)
  {
LABEL_18:
    if ((v13 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_50;
  }
LABEL_47:
  unint64_t v31 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
  uint64_t v33 = *(void *)(v31 + 8);
  if ((v32 & 0x80u) == 0) {
    uint64_t v33 = v32;
  }
  v8 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x10) == 0)
  {
LABEL_19:
    if ((v13 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_53:
    unint64_t v37 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v38 = *(unsigned __int8 *)(v37 + 23);
    uint64_t v39 = *(void *)(v37 + 8);
    if ((v38 & 0x80u) == 0) {
      uint64_t v39 = v38;
    }
    v8 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v13 & 0x40) == 0)
    {
LABEL_21:
      if ((v13 & 0x80) == 0) {
        goto LABEL_25;
      }
      goto LABEL_22;
    }
    goto LABEL_56;
  }
LABEL_50:
  unint64_t v34 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
  uint64_t v36 = *(void *)(v34 + 8);
  if ((v35 & 0x80u) == 0) {
    uint64_t v36 = v35;
  }
  v8 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x20) != 0) {
    goto LABEL_53;
  }
LABEL_20:
  if ((v13 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_56:
  unint64_t v40 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v41 = *(unsigned __int8 *)(v40 + 23);
  uint64_t v42 = *(void *)(v40 + 8);
  if ((v41 & 0x80u) == 0) {
    uint64_t v42 = v41;
  }
  v8 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x80) != 0)
  {
LABEL_22:
    unint64_t v14 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v8 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_25:
  if ((v13 & 0x7F00) == 0) {
    goto LABEL_36;
  }
  if ((v13 & 0x100) != 0)
  {
    unint64_t v43 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v44 = *(unsigned __int8 *)(v43 + 23);
    uint64_t v45 = *(void *)(v43 + 8);
    if ((v44 & 0x80u) == 0) {
      uint64_t v45 = v44;
    }
    v8 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v13 & 0x200) == 0)
    {
LABEL_28:
      if ((v13 & 0x400) == 0) {
        goto LABEL_29;
      }
      goto LABEL_66;
    }
  }
  else if ((v13 & 0x200) == 0)
  {
    goto LABEL_28;
  }
  unint64_t v46 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v47 = *(unsigned __int8 *)(v46 + 23);
  uint64_t v48 = *(void *)(v46 + 8);
  if ((v47 & 0x80u) == 0) {
    uint64_t v48 = v47;
  }
  v8 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x400) == 0)
  {
LABEL_29:
    if ((v13 & 0x800) == 0) {
      goto LABEL_30;
    }
    goto LABEL_69;
  }
LABEL_66:
  unint64_t v49 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v50 = *(unsigned __int8 *)(v49 + 23);
  uint64_t v51 = *(void *)(v49 + 8);
  if ((v50 & 0x80u) == 0) {
    uint64_t v51 = v50;
  }
  v8 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x800) == 0)
  {
LABEL_30:
    if ((v13 & 0x1000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_72;
  }
LABEL_69:
  unint64_t v52 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v53 = *(unsigned __int8 *)(v52 + 23);
  uint64_t v54 = *(void *)(v52 + 8);
  if ((v53 & 0x80u) == 0) {
    uint64_t v54 = v53;
  }
  v8 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x1000) == 0)
  {
LABEL_31:
    if ((v13 & 0x2000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_75;
  }
LABEL_72:
  unint64_t v55 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v56 = *(unsigned __int8 *)(v55 + 23);
  uint64_t v57 = *(void *)(v55 + 8);
  if ((v56 & 0x80u) == 0) {
    uint64_t v57 = v56;
  }
  v8 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x2000) == 0)
  {
LABEL_32:
    if ((v13 & 0x4000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_33;
  }
LABEL_75:
  unint64_t v58 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v59 = *(unsigned __int8 *)(v58 + 23);
  uint64_t v60 = *(void *)(v58 + 8);
  if ((v59 & 0x80u) == 0) {
    uint64_t v60 = v59;
  }
  v8 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v13 & 0x4000) != 0)
  {
LABEL_33:
    unint64_t v17 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
    uint64_t v19 = *(void *)(v17 + 8);
    if ((v18 & 0x80u) == 0) {
      uint64_t v19 = v18;
    }
    v8 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_36:
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v61 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v61 + 31) < 0) {
      uint64_t v62 = *(void *)(v61 + 16);
    }
    else {
      uint64_t v62 = *(unsigned __int8 *)(v61 + 31);
    }
    v8 += v62;
  }
  *(_DWORD *)(a1 + 20) = v8;
  return v8;
}

std::string *sub_1575F34(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    int v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *int v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v14) {
    goto LABEL_41;
  }
  if (v14)
  {
    uint64_t v15 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    unint64_t v17 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      unint64_t v17 = (uint64_t *)*v17;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v15, v17);
    if ((v14 & 2) == 0)
    {
LABEL_10:
      if ((v14 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_23;
    }
  }
  else if ((v14 & 2) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v18 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
  uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
  if (v19) {
    uint64_t v20 = (uint64_t *)*v20;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v18, v20);
  if ((v14 & 4) == 0)
  {
LABEL_11:
    if ((v14 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_23:
  unint64_t v21 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v22 = v3->__r_.__value_.__l.__size_;
  uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
  if (v22) {
    uint64_t v23 = (uint64_t *)*v23;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__r.__words[2], v21, v23);
  if ((v14 & 8) == 0)
  {
LABEL_12:
    if ((v14 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v24 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  std::string::size_type v25 = v3->__r_.__value_.__l.__size_;
  uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
  if (v25) {
    uint64_t v26 = (uint64_t *)*v26;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[4], v24, v26);
  if ((v14 & 0x10) == 0)
  {
LABEL_13:
    if ((v14 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_32:
    uint64_t v30 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    std::string::size_type v31 = v3->__r_.__value_.__l.__size_;
    uint64_t v32 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
    if (v31) {
      uint64_t v32 = (uint64_t *)*v32;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__r.__words[2], v30, v32);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0) {
        goto LABEL_41;
      }
      goto LABEL_38;
    }
    goto LABEL_35;
  }
LABEL_29:
  uint64_t v27 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
  std::string::size_type v28 = v3->__r_.__value_.__l.__size_;
  uint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
  if (v28) {
    uint64_t v29 = (uint64_t *)*v29;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__l.__size_, v27, v29);
  if ((v14 & 0x20) != 0) {
    goto LABEL_32;
  }
LABEL_14:
  if ((v14 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_35:
  uint64_t v33 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
  std::string::size_type v34 = v3->__r_.__value_.__l.__size_;
  uint64_t v35 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
  if (v34) {
    uint64_t v35 = (uint64_t *)*v35;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[5], v33, v35);
  if ((v14 & 0x80) != 0)
  {
LABEL_38:
    uint64_t v36 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x80u;
    std::string::size_type v37 = v3->__r_.__value_.__l.__size_;
    uint64_t v38 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
    if (v37) {
      uint64_t v38 = (uint64_t *)*v38;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[5].__r_.__value_.__l.__size_, v36, v38);
  }
LABEL_41:
  if ((v14 & 0x7F00) == 0) {
    goto LABEL_71;
  }
  if ((v14 & 0x100) != 0)
  {
    uint64_t v39 = (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    std::string::size_type v40 = v3->__r_.__value_.__l.__size_;
    uint64_t v41 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
    if (v40) {
      uint64_t v41 = (uint64_t *)*v41;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[5].__r_.__value_.__r.__words[2], v39, v41);
    if ((v14 & 0x200) == 0)
    {
LABEL_44:
      if ((v14 & 0x400) == 0) {
        goto LABEL_45;
      }
      goto LABEL_56;
    }
  }
  else if ((v14 & 0x200) == 0)
  {
    goto LABEL_44;
  }
  uint64_t v42 = (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x200u;
  std::string::size_type v43 = v3->__r_.__value_.__l.__size_;
  uint64_t v44 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
  if (v43) {
    uint64_t v44 = (uint64_t *)*v44;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[6], v42, v44);
  if ((v14 & 0x400) == 0)
  {
LABEL_45:
    if ((v14 & 0x800) == 0) {
      goto LABEL_46;
    }
    goto LABEL_59;
  }
LABEL_56:
  uint64_t v45 = (long long *)(*(void *)(a2 + 152) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x400u;
  std::string::size_type v46 = v3->__r_.__value_.__l.__size_;
  uint64_t v47 = (uint64_t *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
  if (v46) {
    uint64_t v47 = (uint64_t *)*v47;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[6].__r_.__value_.__l.__size_, v45, v47);
  if ((v14 & 0x800) == 0)
  {
LABEL_46:
    if ((v14 & 0x1000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_62;
  }
LABEL_59:
  uint64_t v48 = (long long *)(*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x800u;
  std::string::size_type v49 = v3->__r_.__value_.__l.__size_;
  uint64_t v50 = (uint64_t *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
  if (v49) {
    uint64_t v50 = (uint64_t *)*v50;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[6].__r_.__value_.__r.__words[2], v48, v50);
  if ((v14 & 0x1000) == 0)
  {
LABEL_47:
    if ((v14 & 0x2000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_65;
  }
LABEL_62:
  uint64_t v51 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x1000u;
  std::string::size_type v52 = v3->__r_.__value_.__l.__size_;
  uint64_t v53 = (uint64_t *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
  if (v52) {
    uint64_t v53 = (uint64_t *)*v53;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[7], v51, v53);
  if ((v14 & 0x2000) == 0)
  {
LABEL_48:
    if ((v14 & 0x4000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_68;
  }
LABEL_65:
  uint64_t v54 = (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x2000u;
  std::string::size_type v55 = v3->__r_.__value_.__l.__size_;
  uint64_t v56 = (uint64_t *)(v55 & 0xFFFFFFFFFFFFFFFCLL);
  if (v55) {
    uint64_t v56 = (uint64_t *)*v56;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[7].__r_.__value_.__l.__size_, v54, v56);
  if ((v14 & 0x4000) != 0)
  {
LABEL_68:
    uint64_t v57 = (long long *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x4000u;
    std::string::size_type v58 = v3->__r_.__value_.__l.__size_;
    uint64_t v59 = (uint64_t *)(v58 & 0xFFFFFFFFFFFFFFFCLL);
    if (v58) {
      uint64_t v59 = (uint64_t *)*v59;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[7].__r_.__value_.__r.__words[2], v57, v59);
  }
LABEL_71:
  uint64_t v60 = *(void *)(a2 + 8);
  if (v60)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v60 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_15763C4()
{
  return 1;
}

void *sub_15763CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.StructuredAddress");
}

uint64_t sub_15763DC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253E3A8)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_1574960(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_157649C(uint64_t a1)
{
  sub_15763DC(a1);

  operator delete();
}

uint64_t sub_15764D4(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t result = sub_1574B98(*(void *)(a1 + 48));
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1576538(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  int v7 = (uint64_t **)(a1 + 24);
  while (1)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v8;
    if (v9 >> 3 != 15) {
      break;
    }
    if (v9 != 122) {
      goto LABEL_28;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    std::string::size_type v19 = *(void **)(a1 + 48);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v20 = (void *)*v20;
      }
      std::string::size_type v19 = sub_1584994((uint64_t)v20);
      *(void *)(a1 + 48) = v19;
      uint64_t v8 = *(unsigned __int8 **)v24;
    }
    unint64_t v21 = sub_1576790(a3, (uint64_t)v19, v8);
LABEL_35:
    *(void *)uint64_t v24 = v21;
    if (!v21) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v9 >> 3 == 11 && v9 == 90)
  {
    int v12 = (const std::string::value_type *)(v8 - 1);
    while (1)
    {
      int v13 = (char *)(v12 + 1);
      *(void *)uint64_t v24 = v12 + 1;
      int v14 = *(_DWORD **)(a1 + 40);
      if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
      {
        *(_DWORD *)(a1 + 32) = v15 + 1;
        uint64_t v16 = *(std::string **)&v14[2 * v15 + 2];
      }
      else
      {
        if (!*v7) {
          operator new();
        }
        *uint64_t v18 = v17;
        v18[1] = sub_3A6EDC;
        void *v17 = 0;
        v17[1] = 0;
        v17[2] = 0;
        uint64_t v16 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v17);
        int v13 = *(char **)v24;
      }
      int v12 = sub_188C244(v16, v13, (uint64_t)a3);
      *(void *)uint64_t v24 = v12;
      if (!v12) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v12 || *v12 != 90) {
        goto LABEL_36;
      }
    }
  }
LABEL_28:
  if (v9) {
    BOOL v22 = (v9 & 7) == 4;
  }
  else {
    BOOL v22 = 1;
  }
  if (!v22)
  {
    if (*v6)
    {
      uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(unsigned __int8 **)v24;
    }
    unint64_t v21 = sub_1885AC0(v9, v23, (char *)v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v24;
  }
LABEL_41:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

char *sub_1576790(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1574F0C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1576820(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 90;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 11, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v12 = *(void *)(a1 + 48);
    *__dst = 122;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    __dst[1] = v13;
    if (v13 > 0x7F) {
      int v14 = sub_188A9CC(v13, __dst + 1);
    }
    else {
      int v14 = __dst + 2;
    }
    __dst = sub_15755D0(v12, v14, a3);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return __dst;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(__dst, v18, (int)v19);
    __dst += v20;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, __dst);
}

uint64_t sub_15769F0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_15759F8(*(void *)(a1 + 48));
    v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v4 += v12;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

std::string *sub_1576AD8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(void *(****)(void *))(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v12 = (void *)*v12;
      }
      std::string::pointer data = (std::string *)sub_1584994((uint64_t)v12);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v9 = *(void *(****)(void *))(a2 + 48);
    }
    if (v9) {
      unsigned int v13 = v9;
    }
    else {
      unsigned int v13 = &off_253E2E8;
    }
    uint64_t result = sub_1575F34(data, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1576BFC()
{
  return 1;
}

void *sub_1576C04@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Address");
}

void *sub_1576C14(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1576C88(void *a1)
{
  sub_1576C14(a1);

  operator delete();
}

uint64_t sub_1576CC0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1576CE4(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    std::string::size_type v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      std::string::size_type v25 = v15;
      *(void *)(a1 + 32) = v16;
      goto LABEL_30;
    }
    unint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    std::string::size_type v25 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      std::string::size_type v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    std::string::size_type v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    std::string::size_type v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  std::string::size_type v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1576ED4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_1577078(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 1) == 0)
  {
    unint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      return v2;
    }
    goto LABEL_5;
  }
  unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
LABEL_5:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
  return v2;
}

unint64_t sub_15770D8(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0) {
    unint64_t result = sub_1577078(a1);
  }
  else {
    unint64_t result = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6)
  }
           + ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6)
           + 2;
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_157717C(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_1577190@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.SessionID");
}

void *sub_15771A0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_157723C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1587308(a1 + 6);
  sub_1588E3C(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_157723C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 72);
  uint64_t v2 = (void ***)(a1 + 72);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  unint64_t result = (void ***)(a1 + 88);
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_253E408)
  {
    uint64_t v5 = *(void **)(a1 + 96);
    if (v5)
    {
      sub_1573F3C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 104);
    if (v6)
    {
      sub_15763DC(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 112);
    if (v7)
    {
      sub_15763DC(v7);
      operator delete();
    }
    unint64_t result = *(void ****)(a1 + 120);
    if (result)
    {
      sub_1573B90(result);
      operator delete();
    }
  }
  return result;
}

void sub_1577348(void *a1)
{
  sub_15771A0(a1);

  operator delete();
}

uint64_t sub_1577380(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      unint64_t result = sub_157D9E4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      unint64_t result = sub_155ACFC(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 0x7F) == 0) {
    goto LABEL_18;
  }
  if (v8)
  {
    unint64_t v11 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v8 & 2) != 0) {
        goto LABEL_28;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v8 & 2) != 0) {
        goto LABEL_28;
      }
    }
LABEL_12:
    if ((v8 & 4) == 0) {
      goto LABEL_13;
    }
LABEL_32:
    unint64_t v13 = *(void *)(v1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)unint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
      if ((v8 & 8) != 0) {
        goto LABEL_36;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
      if ((v8 & 8) != 0) {
        goto LABEL_36;
      }
    }
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
LABEL_37:
    unint64_t result = sub_15764D4(*(void *)(v1 + 104));
    if ((v8 & 0x20) == 0)
    {
LABEL_16:
      if ((v8 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
    goto LABEL_38;
  }
  if ((v8 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_28:
  unint64_t v12 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v12 + 23) < 0)
  {
    **(unsigned char **)unint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
    if ((v8 & 4) != 0) {
      goto LABEL_32;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v8 & 4) != 0) {
      goto LABEL_32;
    }
  }
LABEL_13:
  if ((v8 & 8) == 0) {
    goto LABEL_14;
  }
LABEL_36:
  unint64_t result = sub_155FE88(*(void *)(v1 + 96));
  if ((v8 & 0x10) != 0) {
    goto LABEL_37;
  }
LABEL_15:
  if ((v8 & 0x20) == 0) {
    goto LABEL_16;
  }
LABEL_38:
  unint64_t result = sub_15764D4(*(void *)(v1 + 112));
  if ((v8 & 0x40) != 0) {
LABEL_17:
  }
    unint64_t result = sub_155ACFC(*(void *)(v1 + 120));
LABEL_18:
  *(void *)(v1 + 128) = 0;
  if ((v8 & 0x300) != 0) {
    *(void *)(v1 + 136) = 0x100000000;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_1577528(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)std::string::size_type v58 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v58, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v58 + 1);
    unsigned int v9 = **(unsigned char **)v58;
    if ((char)**(unsigned char **)v58 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v58, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v58 + 2);
      }
    }
    *(void *)std::string::size_type v58 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_88;
        }
        v5 |= 0x80u;
        unint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)std::string::size_type v58 = v12;
          *(void *)(a1 + 128) = v13;
          goto LABEL_96;
        }
        uint64_t v52 = sub_188C138((uint64_t)v8, v13);
        *(void *)std::string::size_type v58 = v52;
        *(void *)(a1 + 128) = v53;
        if (v52) {
          goto LABEL_96;
        }
        goto LABEL_116;
      case 3u:
        if (v9 != 24) {
          goto LABEL_88;
        }
        unint64_t v15 = (char *)(v8 + 1);
        unint64_t v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)std::string::size_type v58 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v58) {
            goto LABEL_116;
          }
          unint64_t v16 = v54;
        }
        else
        {
          unint64_t v15 = (char *)(v8 + 2);
LABEL_18:
          *(void *)std::string::size_type v58 = v15;
        }
        if (v16 <= 0x3B && ((1 << v16) & 0xA0FF80800010016) != 0)
        {
          *(_DWORD *)(a1 + 16) |= 0x200u;
          *(_DWORD *)(a1 + 140) = v16;
          goto LABEL_96;
        }
        if (*v7) {
          uint64_t v56 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v56 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v57 = 3;
        goto LABEL_107;
      case 4u:
        if (v9 != 34) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v20 = *(void *)(a1 + 8);
        unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          unint64_t v21 = (uint64_t *)*v21;
        }
        uint64_t v22 = (void *)(a1 + 72);
        goto LABEL_87;
      case 5u:
        if (v9 != 42) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v23 = *(void *)(a1 + 96);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v24 = (void *)*v24;
          }
          sub_1584898((uint64_t)v24);
          uint64_t v23 = v25;
          *(void *)(a1 + 96) = v25;
          int v8 = *(unsigned __int8 **)v58;
        }
        uint64_t v26 = (uint64_t)sub_15608A0(a3, v23, v8);
        goto LABEL_95;
      case 6u:
        if (v9 != 50) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v27 = *(void **)(a1 + 104);
        if (v27) {
          goto LABEL_45;
        }
        std::string::size_type v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          std::string::size_type v28 = (void *)*v28;
        }
        uint64_t v27 = sub_15849F4((uint64_t)v28);
        *(void *)(a1 + 104) = v27;
        goto LABEL_44;
      case 8u:
        if (v9 != 66) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v27 = *(void **)(a1 + 112);
        if (v27) {
          goto LABEL_45;
        }
        uint64_t v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v29 = (void *)*v29;
        }
        uint64_t v27 = sub_15849F4((uint64_t)v29);
        *(void *)(a1 + 112) = v27;
LABEL_44:
        int v8 = *(unsigned __int8 **)v58;
LABEL_45:
        uint64_t v26 = sub_1577B94(a3, (uint64_t)v27, v8);
        goto LABEL_95;
      case 9u:
        if (v9 != 74) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v30 = *(void **)(a1 + 120);
        if (!v30)
        {
          std::string::size_type v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            std::string::size_type v31 = (void *)*v31;
          }
          uint64_t v30 = sub_158481C((uint64_t)v31);
          *(void *)(a1 + 120) = v30;
          int v8 = *(unsigned __int8 **)v58;
        }
        uint64_t v26 = (uint64_t)sub_155B4FC(a3, (uint64_t)v30, v8);
        goto LABEL_95;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_88;
        }
        uint64_t v32 = v8 - 1;
        while (1)
        {
          uint64_t v33 = v32 + 1;
          *(void *)std::string::size_type v58 = v32 + 1;
          std::string::size_type v34 = *(_DWORD **)(a1 + 40);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 32), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 32) = v35 + 1;
            uint64_t v36 = *(void *)&v34[2 * v35 + 2];
          }
          else
          {
            std::string::size_type v37 = sub_15851A8(*(void *)(a1 + 24));
            uint64_t v36 = sub_188CDC8(a1 + 24, (uint64_t)v37);
            uint64_t v33 = *(unsigned __int8 **)v58;
          }
          uint64_t v32 = (unsigned __int8 *)sub_1577C24(a3, v36, v33);
          *(void *)std::string::size_type v58 = v32;
          if (!v32) {
            goto LABEL_116;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 82) {
            goto LABEL_96;
          }
        }
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_88;
        }
        uint64_t v38 = (char *)(v8 + 1);
        unint64_t v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_66;
        }
        int v39 = *v38;
        int v40 = v16 + (v39 << 7);
        unint64_t v16 = (v40 - 128);
        if (v39 < 0)
        {
          *(void *)std::string::size_type v58 = sub_188C138((uint64_t)v8, (v40 - 128));
          if (!*(void *)v58) {
            goto LABEL_116;
          }
          unint64_t v16 = v55;
        }
        else
        {
          uint64_t v38 = (char *)(v8 + 2);
LABEL_66:
          *(void *)std::string::size_type v58 = v38;
        }
        if (v16 > 4)
        {
          if (*v7) {
            uint64_t v56 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v56 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v57 = 11;
LABEL_107:
          sub_188C020(v57, v16, v56);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 136) = v16;
        }
        goto LABEL_96;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_88;
        }
        uint64_t v41 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v42 = (unsigned __int8 *)(v41 + 1);
          *(void *)std::string::size_type v58 = v41 + 1;
          std::string::size_type v43 = *(_DWORD **)(a1 + 64);
          if (v43 && (uint64_t v44 = *(int *)(a1 + 56), (int)v44 < *v43))
          {
            *(_DWORD *)(a1 + 56) = v44 + 1;
            uint64_t v45 = *(void *)&v43[2 * v44 + 2];
          }
          else
          {
            std::string::size_type v46 = sub_158481C(*(void *)(a1 + 48));
            uint64_t v45 = sub_188CDC8(a1 + 48, (uint64_t)v46);
            uint64_t v42 = *(unsigned __int8 **)v58;
          }
          uint64_t v41 = sub_155B4FC(a3, v45, v42);
          *(void *)std::string::size_type v58 = v41;
          if (!v41) {
            goto LABEL_116;
          }
          if (*(void *)a3 <= (unint64_t)v41 || *v41 != 98) {
            goto LABEL_96;
          }
        }
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v47 = *(void *)(a1 + 8);
        unint64_t v21 = (uint64_t *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
        if (v47) {
          unint64_t v21 = (uint64_t *)*v21;
        }
        uint64_t v22 = (void *)(a1 + 80);
        goto LABEL_87;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v48 = *(void *)(a1 + 8);
        unint64_t v21 = (uint64_t *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
        if (v48) {
          unint64_t v21 = (uint64_t *)*v21;
        }
        uint64_t v22 = (void *)(a1 + 88);
LABEL_87:
        std::string::size_type v49 = (std::string *)sub_1880F84(v22, v21);
        uint64_t v26 = (uint64_t)sub_188C244(v49, *(char **)v58, (uint64_t)a3);
        goto LABEL_95;
      default:
LABEL_88:
        if (v9) {
          BOOL v50 = (v9 & 7) == 4;
        }
        else {
          BOOL v50 = 1;
        }
        if (!v50)
        {
          if (*v7)
          {
            uint64_t v51 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v58;
          }
          uint64_t v26 = (uint64_t)sub_1885AC0(v9, v51, (char *)v8, a3);
LABEL_95:
          *(void *)std::string::size_type v58 = v26;
          if (!v26) {
            goto LABEL_116;
          }
LABEL_96:
          if (sub_11947B8((uint64_t)a3, (char **)v58, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_116:
        }
          *(void *)std::string::size_type v58 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v58;
    }
  }
}

uint64_t sub_1577B94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1576538(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1577C24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_157DC18(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1577CB4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 128);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 140);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_17:
      if ((v6 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_28;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 96);
  unsigned char *v4 = 42;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_15741C4(v13, (unint64_t)v15, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_18:
    if ((v6 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_34;
  }
LABEL_28:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 104);
  unsigned char *v4 = 50;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    int v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    int v18 = v4 + 2;
  }
  uint64_t v4 = sub_1576820(v16, v18, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_19:
    if ((v6 & 0x40) == 0) {
      goto LABEL_46;
    }
    goto LABEL_40;
  }
LABEL_34:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 112);
  unsigned char *v4 = 66;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    unint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    unint64_t v21 = v4 + 2;
  }
  uint64_t v4 = sub_1576820(v19, v21, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_40:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 120);
    unsigned char *v4 = 74;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      uint64_t v24 = v4 + 2;
    }
    uint64_t v4 = sub_1573DAC(v22, (unint64_t)v24, a3);
  }
LABEL_46:
  int v25 = *(_DWORD *)(a1 + 32);
  if (v25)
  {
    for (int i = 0; i != v25; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 82;
      unsigned int v28 = *(_DWORD *)(v27 + 20);
      v4[1] = v28;
      if (v28 > 0x7F) {
        uint64_t v29 = sub_188A9CC(v28, v4 + 1);
      }
      else {
        uint64_t v29 = v4 + 2;
      }
      uint64_t v4 = sub_157E700(v27, (unint64_t)v29, a3);
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v30 = *(int *)(a1 + 136);
    unsigned char *v4 = 88;
    v4[1] = v30;
    if (v30 > 0x7F)
    {
      v4[1] = v30 | 0x80;
      unint64_t v31 = v30 >> 7;
      v4[2] = v30 >> 7;
      v4 += 3;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v33 = *(_DWORD *)(a1 + 56);
  if (v33)
  {
    for (int j = 0; j != v33; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 98;
      unsigned int v36 = *(_DWORD *)(v35 + 20);
      v4[1] = v36;
      if (v36 > 0x7F) {
        std::string::size_type v37 = sub_188A9CC(v36, v4 + 1);
      }
      else {
        std::string::size_type v37 = v4 + 2;
      }
      uint64_t v4 = sub_1573DAC(v35, (unint64_t)v37, a3);
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 16, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v38 = *(void *)(a1 + 8);
  if ((v38 & 1) == 0) {
    return v4;
  }
  unint64_t v40 = v38 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v40 + 31) < 0)
  {
    uint64_t v41 = *(void **)(v40 + 8);
    uint64_t v42 = *(void *)(v40 + 16);
  }
  else
  {
    uint64_t v41 = (void *)(v40 + 8);
    LODWORD(v42) = *(unsigned __int8 *)(v40 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v42)
  {
    uint64_t v43 = (int)v42;
    memcpy(v4, v41, (int)v42);
    v4 += v43;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v41, v42, v4);
}

uint64_t sub_15781F8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_157ED84(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1573EC8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v15) {
    goto LABEL_25;
  }
  if (v15)
  {
    unint64_t v24 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
    uint64_t v26 = *(void *)(v24 + 8);
    if ((v25 & 0x80u) == 0) {
      uint64_t v26 = v25;
    }
    v9 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 2) == 0)
    {
LABEL_18:
      if ((v15 & 4) == 0) {
        goto LABEL_19;
      }
      goto LABEL_44;
    }
  }
  else if ((v15 & 2) == 0)
  {
    goto LABEL_18;
  }
  unint64_t v27 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
  uint64_t v29 = *(void *)(v27 + 8);
  if ((v28 & 0x80u) == 0) {
    uint64_t v29 = v28;
  }
  v9 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 4) == 0)
  {
LABEL_19:
    if ((v15 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_47;
  }
LABEL_44:
  unint64_t v30 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
  uint64_t v32 = *(void *)(v30 + 8);
  if ((v31 & 0x80u) == 0) {
    uint64_t v32 = v31;
  }
  v9 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v15 & 8) == 0)
  {
LABEL_20:
    if ((v15 & 0x10) == 0) {
      goto LABEL_21;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v33 = sub_1574360(*(void *)(a1 + 96));
  v9 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 0x10) == 0)
  {
LABEL_21:
    if ((v15 & 0x20) == 0) {
      goto LABEL_22;
    }
LABEL_49:
    uint64_t v35 = sub_15769F0(*(void *)(a1 + 112));
    v9 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 0x40) == 0)
    {
LABEL_23:
      if ((v15 & 0x80) == 0) {
        goto LABEL_25;
      }
      goto LABEL_24;
    }
    goto LABEL_50;
  }
LABEL_48:
  uint64_t v34 = sub_15769F0(*(void *)(a1 + 104));
  v9 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 0x20) != 0) {
    goto LABEL_49;
  }
LABEL_22:
  if ((v15 & 0x40) == 0) {
    goto LABEL_23;
  }
LABEL_50:
  uint64_t v36 = sub_1573EC8(*(void *)(a1 + 120));
  v9 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 0x80) != 0) {
LABEL_24:
  }
    v9 += ((9 * (__clz(*(void *)(a1 + 128) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_25:
  if ((v15 & 0x300) != 0)
  {
    if ((v15 & 0x100) != 0)
    {
      int v16 = *(_DWORD *)(a1 + 136);
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v16 >= 0) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 11;
      }
      v9 += v18;
    }
    if ((v15 & 0x200) != 0)
    {
      int v19 = *(_DWORD *)(a1 + 140);
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v19 >= 0) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 11;
      }
      v9 += v21;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v37 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v37 + 31) < 0) {
      uint64_t v38 = *(void *)(v37 + 16);
    }
    else {
      uint64_t v38 = *(unsigned __int8 *)(v37 + 31);
    }
    v9 += v38;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_1578544(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_158953C(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_15879B4(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v14)
  {
    if (v14)
    {
      int v15 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v15, v17);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_19;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v18 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
    uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      uint64_t v20 = (uint64_t *)*v20;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v18, v20);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_30;
      }
      goto LABEL_22;
    }
LABEL_19:
    uint64_t v21 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v22 = v3->__r_.__value_.__l.__size_;
    unsigned int v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      unsigned int v23 = (uint64_t *)*v23;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__r.__words[2], v21, v23);
    if ((v14 & 8) == 0)
    {
LABEL_30:
      if ((v14 & 0x10) != 0)
      {
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
        uint64_t v29 = (std::string *)v3[4].__r_.__value_.__l.__size_;
        if (!v29)
        {
          std::string::size_type v30 = v3->__r_.__value_.__l.__size_;
          uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
          if (v30) {
            uint64_t v31 = (void *)*v31;
          }
          uint64_t v29 = (std::string *)sub_15849F4((uint64_t)v31);
          v3[4].__r_.__value_.__l.__size_ = (std::string::size_type)v29;
        }
        if (*(void *)(a2 + 104)) {
          uint64_t v32 = *(uint64_t (****)())(a2 + 104);
        }
        else {
          uint64_t v32 = &off_253E3A8;
        }
        uint64_t result = sub_1576AD8(v29, (uint64_t)v32);
        if ((v14 & 0x20) == 0)
        {
LABEL_32:
          if ((v14 & 0x40) == 0) {
            goto LABEL_33;
          }
          goto LABEL_62;
        }
      }
      else if ((v14 & 0x20) == 0)
      {
        goto LABEL_32;
      }
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
      uint64_t v33 = (std::string *)v3[4].__r_.__value_.__r.__words[2];
      if (!v33)
      {
        std::string::size_type v34 = v3->__r_.__value_.__l.__size_;
        uint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
        if (v34) {
          uint64_t v35 = (void *)*v35;
        }
        uint64_t v33 = (std::string *)sub_15849F4((uint64_t)v35);
        v3[4].__r_.__value_.__r.__words[2] = (std::string::size_type)v33;
      }
      if (*(void *)(a2 + 112)) {
        uint64_t v36 = *(uint64_t (****)())(a2 + 112);
      }
      else {
        uint64_t v36 = &off_253E3A8;
      }
      uint64_t result = sub_1576AD8(v33, (uint64_t)v36);
      if ((v14 & 0x40) == 0)
      {
LABEL_33:
        if ((v14 & 0x80) == 0)
        {
LABEL_35:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
          goto LABEL_36;
        }
LABEL_34:
        v3[5].__r_.__value_.__l.__size_ = *(void *)(a2 + 128);
        goto LABEL_35;
      }
LABEL_62:
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
      std::string::pointer data = (std::string *)v3[5].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type v38 = v3->__r_.__value_.__l.__size_;
        int v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
        if (v38) {
          int v39 = (void *)*v39;
        }
        std::string::pointer data = (std::string *)sub_158481C((uint64_t)v39);
        v3[5].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 120)) {
        unint64_t v40 = *(void *(****)(void *))(a2 + 120);
      }
      else {
        unint64_t v40 = &off_253E258;
      }
      uint64_t result = sub_123BFCC(data, (uint64_t)v40);
      if ((v14 & 0x80) == 0) {
        goto LABEL_35;
      }
      goto LABEL_34;
    }
LABEL_22:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    unint64_t v24 = (std::string *)v3[4].__r_.__value_.__l.__data_;
    if (!v24)
    {
      std::string::size_type v25 = v3->__r_.__value_.__l.__size_;
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      sub_1584898((uint64_t)v26);
      v3[4].__r_.__value_.__r.__words[0] = (std::string::size_type)v24;
    }
    if (*(void *)(a2 + 96)) {
      unint64_t v27 = *(void *(****)(void *))(a2 + 96);
    }
    else {
      unint64_t v27 = &off_253E280;
    }
    uint64_t result = sub_1561340(v24, (uint64_t)v27);
    goto LABEL_30;
  }
LABEL_36:
  if ((v14 & 0x300) != 0)
  {
    if ((v14 & 0x100) != 0) {
      LODWORD(v3[5].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 136);
    }
    if ((v14 & 0x200) != 0) {
      HIDWORD(v3[5].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 140);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
  }
  uint64_t v28 = *(void *)(a2 + 8);
  if (v28)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v28 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_15788AC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  while ((int)v2 >= 1)
  {
    uint64_t v4 = v2 - 1;
    BOOL v5 = sub_157F60C(*(void *)(v3 + 8 * v2));
    uint64_t v2 = v4;
    if (!v5) {
      return 0;
    }
  }
  uint64_t v6 = *(unsigned int *)(a1 + 56);
  while ((int)v6 >= 1)
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 64) + 8 * v6--);
    if ((~*(_DWORD *)(v7 + 16) & 3) != 0) {
      return 0;
    }
  }
  return (*(unsigned char *)(a1 + 16) & 0x40) == 0 || (~*(_DWORD *)(*(void *)(a1 + 120) + 16) & 3) == 0;
}

void *sub_1578950@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Place");
}

uint64_t sub_1578960(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  BOOL v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253E498)
  {
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_157ABF0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1578A2C(uint64_t a1)
{
  sub_1578960(a1);

  operator delete();
}

uint64_t sub_1578A64(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1578AF8(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1578AF8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_157A76C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_1578B7C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v16 = (void *)*v16;
      }
      uint64_t v15 = sub_1584E14((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    int v14 = sub_1578D3C(a3, v15, v7);
LABEL_29:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    std::string::size_type v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    int v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    int v14 = sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_1578D3C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_157ACA8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1578DCC(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_157AF90(v7, (unint64_t)v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1578EFC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_157B154(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1578FE0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unsigned int v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unsigned int v9 = (std::string *)sub_1584E14((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(void *(****)(void *))(a2 + 32);
      }
      else {
        unint64_t v12 = &off_253E4F8;
      }
      uint64_t result = sub_15790CC(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_15790CC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1589654((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_15791B8()
{
  return 1;
}

void *sub_15791C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Business.Review.User");
}

uint64_t sub_15791D0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253E4C0)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1578960(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_157929C(uint64_t a1)
{
  sub_15791D0(a1);

  operator delete();
}

uint64_t sub_15792D4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1578A64(*(void *)(result + 32));
  }
LABEL_7:
  if ((v2 & 0xC) != 0)
  {
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1579374(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v23 + 1);
    unsigned int v9 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v23 + 2);
      }
    }
    *(void *)unsigned int v23 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_24;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (uint64_t)sub_188C244(v14, *(char **)v23, (uint64_t)a3);
        goto LABEL_31;
      case 2u:
        if (v9 != 17) {
          goto LABEL_24;
        }
        uint64_t v17 = *(void *)v8;
        int v16 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v17;
        goto LABEL_17;
      case 3u:
        if (v9 != 25) {
          goto LABEL_24;
        }
        uint64_t v18 = *(void *)v8;
        int v16 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v18;
LABEL_17:
        *(void *)unsigned int v23 = v16;
        goto LABEL_32;
      case 4u:
        if (v9 != 34) {
          goto LABEL_24;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        std::string::size_type v19 = *(void **)(a1 + 32);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          std::string::size_type v19 = sub_1584BD4((uint64_t)v20);
          *(void *)(a1 + 32) = v19;
          uint64_t v8 = *(unsigned __int8 **)v23;
        }
        uint64_t v15 = sub_15795B0(a3, (uint64_t)v19, v8);
        goto LABEL_31;
      default:
LABEL_24:
        if (v9) {
          BOOL v21 = (v9 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v7)
          {
            std::string::size_type v22 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            std::string::size_type v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v23;
          }
          uint64_t v15 = (uint64_t)sub_1885AC0(v9, v22, (char *)v8, a3);
LABEL_31:
          *(void *)unsigned int v23 = v15;
          if (!v15) {
            goto LABEL_37;
          }
LABEL_32:
          if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_37:
        }
          *(void *)unsigned int v23 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v23;
    }
  }
}

uint64_t sub_15795B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1578B7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1579640(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 40);
  unsigned char *v4 = 17;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
LABEL_10:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 48);
  unsigned char *v4 = 25;
  *(void *)(v4 + 1) = v8;
  v4 += 9;
  if ((v6 & 2) != 0)
  {
LABEL_13:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v9 = *(void *)(a1 + 32);
    unsigned char *v4 = 34;
    unsigned int v10 = *(_DWORD *)(v9 + 20);
    v4[1] = v10;
    if (v10 > 0x7F) {
      unsigned int v11 = sub_188A9CC(v10, v4 + 1);
    }
    else {
      unsigned int v11 = v4 + 2;
    }
    uint64_t v4 = sub_1578DCC(v9, v11, a3);
  }
LABEL_19:
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_15797F0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_15;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t v8 = sub_1578EFC(*(void *)(a1 + 32));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  uint64_t v9 = v3 + 9;
  if ((v2 & 4) == 0) {
    uint64_t v9 = v3;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v9 + 9;
  }
  else {
    uint64_t result = v9;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_15798F0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_1584BD4((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253E498;
    }
    uint64_t result = sub_1578FE0(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_23:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1579A10()
{
  return 1;
}

void *sub_1579A18@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Business.Review");
}

uint64_t sub_1579A28(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1588EBC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1579AEC(uint64_t a1)
{
  sub_1579A28(a1);

  operator delete();
}

uint64_t sub_1579B24(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15792D4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v5 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_15:
  if ((v5 & 0x3C) != 0)
  {
    *(void *)(v1 + 64) = 0;
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_1579C1C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v39 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v39 + 1);
    unsigned int v9 = **(unsigned char **)v39;
    if ((char)**(unsigned char **)v39 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v39, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v39 + 2);
      }
    }
    *(void *)int v39 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_43;
        }
        uint64_t v13 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 64) = v13;
        goto LABEL_13;
      case 2u:
        if (v9 != 17) {
          goto LABEL_43;
        }
        uint64_t v14 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 72) = v14;
LABEL_13:
        *(void *)int v39 = v12;
        goto LABEL_51;
      case 3u:
        if (v9 != 24) {
          goto LABEL_43;
        }
        v5 |= 0x10u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v35 = sub_188C138((uint64_t)v8, v15);
          *(void *)int v39 = v35;
          *(_DWORD *)(a1 + 80) = v36;
          if (!v35) {
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          *(void *)int v39 = v16;
          *(_DWORD *)(a1 + 80) = v15;
        }
        goto LABEL_51;
      case 4u:
        if (v9 != 34) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        std::string::size_type v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          std::string::size_type v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 48);
        goto LABEL_27;
      case 5u:
        if (v9 != 42) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        std::string::size_type v19 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          std::string::size_type v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 56);
LABEL_27:
        std::string::size_type v22 = (std::string *)sub_1880F84(v20, v19);
        unsigned int v23 = (void *)sub_188C244(v22, *(char **)v39, (uint64_t)a3);
        goto LABEL_50;
      case 6u:
        if (v9 != 50) {
          goto LABEL_43;
        }
        unint64_t v24 = v8 - 1;
        while (1)
        {
          std::string::size_type v25 = (unsigned __int8 *)(v24 + 1);
          *(void *)int v39 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_1584C58(*(void *)(a1 + 24));
            uint64_t v28 = sub_188CDC8(a1 + 24, (uint64_t)v29);
            std::string::size_type v25 = *(unsigned __int8 **)v39;
          }
          unint64_t v24 = (char *)sub_1579F94(a3, v28, v25);
          *(void *)int v39 = v24;
          if (!v24) {
            goto LABEL_60;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 50) {
            goto LABEL_51;
          }
        }
      case 7u:
        if (v9 != 56) {
          goto LABEL_43;
        }
        v5 |= 0x20u;
        uint64_t v31 = v8 + 1;
        LODWORD(v30) = *v8;
        if ((v30 & 0x80) == 0) {
          goto LABEL_42;
        }
        int v32 = *v31;
        uint64_t v30 = v30 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v37 = sub_188C138((uint64_t)v8, v30);
          *(void *)int v39 = v37;
          *(_DWORD *)(a1 + 84) = v38;
          if (!v37) {
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v31 = v8 + 2;
LABEL_42:
          *(void *)int v39 = v31;
          *(_DWORD *)(a1 + 84) = v30;
        }
        goto LABEL_51;
      default:
LABEL_43:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            std::string::size_type v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            std::string::size_type v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v39;
          }
          unsigned int v23 = sub_1885AC0(v9, v34, v8, a3);
LABEL_50:
          *(void *)int v39 = v23;
          if (!v23) {
            goto LABEL_60;
          }
LABEL_51:
          if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_60:
        }
          *(void *)int v39 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v39;
    }
  }
}

uint64_t sub_1579F94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1579374(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_157A024(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    unsigned char *v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 72);
  unsigned char *v4 = 17;
  *(void *)(v4 + 1) = v8;
  v4 += 9;
  if ((v6 & 0x10) != 0)
  {
LABEL_11:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v9 = *(int *)(a1 + 80);
    unsigned char *v4 = 24;
    v4[1] = v9;
    if (v9 > 0x7F)
    {
      v4[1] = v9 | 0x80;
      unint64_t v10 = v9 >> 7;
      v4[2] = v9 >> 7;
      v4 += 3;
      if (v9 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v11 = v10 >> 14;
          v10 >>= 7;
          *v4++ = v10;
        }
        while (v11);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_17:
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v12 = *(_DWORD *)(a1 + 32);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 50;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      v4[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, v4 + 1);
      }
      else {
        uint64_t v16 = v4 + 2;
      }
      uint64_t v4 = sub_1579640(v14, v16, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v17 = *(int *)(a1 + 84);
    unsigned char *v4 = 56;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    unsigned int v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    unsigned int v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_157A320(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15797F0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x3F) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v15 = v2 + 9;
    if ((v8 & 4) == 0) {
      uint64_t v15 = v2;
    }
    if ((v8 & 8) != 0) {
      uint64_t v2 = v15 + 9;
    }
    else {
      uint64_t v2 = v15;
    }
    if ((v8 & 0x10) != 0)
    {
      int v16 = *(_DWORD *)(a1 + 80);
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v16 >= 0) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 11;
      }
      v2 += v18;
    }
    if ((v8 & 0x20) != 0)
    {
      int v19 = *(_DWORD *)(a1 + 84);
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v19 >= 0) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 11;
      }
      v2 += v21;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v2 += v25;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_157A4E4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_15895C8(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_23;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      int v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_24;
    }
LABEL_23:
    v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_25;
    }
LABEL_24:
    v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
      goto LABEL_12;
    }
LABEL_25:
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_157A67C()
{
  return 1;
}

void *sub_157A684@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Business.Rating");
}

uint64_t sub_157A694(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_157A734(uint64_t a1)
{
  sub_157A694(a1);

  operator delete();
}

uint64_t sub_157A76C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_157A7B4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)unint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      int v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)unint64_t v24 = v14;
    if (!v14) {
      goto LABEL_43;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v19 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      *(void *)unint64_t v24 = sub_188C138((uint64_t)v7, (v21 - 128));
      if (!*(void *)v24) {
        goto LABEL_43;
      }
      unint64_t v19 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_29:
      *(void *)unint64_t v24 = v18;
    }
    if (v19 > 9)
    {
      if (*v6) {
        unsigned int v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unsigned int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_43:
  *(void *)unint64_t v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_157A9C4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_157AB0C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_157ABD8()
{
  return 1;
}

void *sub_157ABE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Business.Photo.PhotoInfo");
}

void *sub_157ABF0(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1588F3C(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_157AC70(void *a1)
{
  sub_157ABF0(a1);

  operator delete();
}

char *sub_157ACA8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v14 = v7 - 1;
        while (1)
        {
          uint64_t v15 = (unsigned __int8 *)(v14 + 1);
          uint64_t v26 = v14 + 1;
          int v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            uint64_t v19 = sub_1584D8C(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, v19);
            uint64_t v15 = (unsigned __int8 *)v26;
          }
          uint64_t v14 = (char *)sub_157AF00(a3, v18, v15);
          uint64_t v26 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_37;
          }
        }
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      int v20 = v7 + 1;
      unint64_t v21 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v22 = *v20;
      int v23 = v21 + (v22 << 7);
      unint64_t v21 = (v23 - 128);
      if (v22 < 0)
      {
        uint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
        if (!v26) {
          return 0;
        }
        unint64_t v21 = v24;
      }
      else
      {
        int v20 = v7 + 2;
LABEL_34:
        uint64_t v26 = v20;
      }
      if (v21 > 2)
      {
        if (*v6) {
          uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v21, v25);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v21;
      }
      goto LABEL_37;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v26) {
      return 0;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

uint64_t sub_157AF00(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_157A7B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_157AF90(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_157A9C4(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_157B154(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_157AB0C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v8 = *(_DWORD *)(a1 + 48);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_157B23C()
{
  return 1;
}

void *sub_157B244@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Business.Photo");
}

void *sub_157B254(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_157B2C8(void *a1)
{
  sub_157B254(a1);

  operator delete();
}

uint64_t sub_157B300(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(unsigned char *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_157B328(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unint64_t v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unint64_t v16 = v8 + 2;
LABEL_26:
        uint64_t v31 = v16;
        *(unsigned char *)(a1 + 32) = v17 != 0;
        goto LABEL_36;
      }
      uint64_t v25 = (char *)sub_188C138((uint64_t)v8, v17);
      uint64_t v31 = v25;
      *(unsigned char *)(a1 + 32) = v26 != 0;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      uint64_t v31 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_36;
    }
    uint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
    uint64_t v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    int v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      int v22 = v8 + 2;
LABEL_35:
      uint64_t v31 = v22;
      *(_DWORD *)(a1 + 24) = v23;
      goto LABEL_36;
    }
    uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    uint64_t v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v31;
    }
    uint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_157B58C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    v4 += 2;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_157B768(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_11:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_157B818()
{
  return 1;
}

void *sub_157B820@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Business.TimeRange");
}

void *sub_157B830(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1588FBC(a1 + 4);
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_157B8B8(void *a1)
{
  sub_157B830(a1);

  operator delete();
}

uint64_t sub_157B8F0(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 16) = 0;
  uint64_t v2 = *(unsigned int *)(result + 40);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 48) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_157B300(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 40) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  int v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_157B970(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v30 = a2;
  if ((sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1]) & 1) == 0)
  {
    char v6 = (void *)(a1 + 8);
    do
    {
      uint64_t v7 = v30 + 1;
      unsigned int v8 = *v30;
      if (*v30 < 0)
      {
        int v9 = *v7;
        unsigned int v10 = v8 + (v9 << 7);
        unsigned int v8 = v10 - 128;
        if (v9 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
          unsigned int v8 = v11;
        }
        else
        {
          uint64_t v7 = v30 + 2;
        }
      }
      int v30 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          int v21 = v7 - 1;
          while (1)
          {
            int v22 = (unsigned __int8 *)(v21 + 1);
            int v30 = v21 + 1;
            int v23 = *(_DWORD **)(a1 + 48);
            if (v23 && (uint64_t v24 = *(int *)(a1 + 40), (int)v24 < *v23))
            {
              *(_DWORD *)(a1 + 40) = v24 + 1;
              uint64_t v25 = *(void *)&v23[2 * v24 + 2];
            }
            else
            {
              uint64_t v26 = sub_1584EB0(*(void *)(a1 + 32));
              uint64_t v25 = sub_188CDC8(a1 + 32, v26);
              int v22 = (unsigned __int8 *)v30;
            }
            int v21 = sub_157BC68(a3, v25, v22);
            int v30 = v21;
            if (!v21) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v21 || *v21 != 18) {
              goto LABEL_50;
            }
          }
        }
      }
      else if (v8 >> 3 == 1)
      {
        if (v8 == 8)
        {
          unsigned int v12 = v7 - 1;
          while (1)
          {
            int v30 = v12 + 1;
            unint64_t v13 = v12[1];
            uint64_t v14 = v12 + 2;
            if (v12[1] < 0)
            {
              int v15 = *v14;
              int v16 = v13 + (v15 << 7);
              unint64_t v13 = (v16 - 128);
              if (v15 < 0)
              {
                int v30 = (char *)sub_188C138((uint64_t)(v12 + 1), (v16 - 128));
                if (!v30) {
                  return 0;
                }
                unint64_t v13 = v19;
                goto LABEL_16;
              }
              uint64_t v14 = v12 + 3;
            }
            int v30 = v14;
LABEL_16:
            if (v13 > 7)
            {
              if (*v6) {
                int v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                int v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(1, v13, v20);
            }
            else
            {
              uint64_t v17 = *(unsigned int *)(a1 + 16);
              if (v17 == *(_DWORD *)(a1 + 20))
              {
                int v18 = v17 + 1;
                sub_188C80C((unsigned int *)(a1 + 16), v17 + 1);
                *(_DWORD *)(*(void *)(a1 + 24) + 4 * v17) = v13;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 24) + 4 * v17) = v13;
                int v18 = v17 + 1;
              }
              *(_DWORD *)(a1 + 16) = v18;
            }
            unsigned int v12 = v30;
            if (*(void *)a3 <= (unint64_t)v30 || *v30 != 8) {
              goto LABEL_50;
            }
          }
        }
        if (v8 == 10)
        {
          *(void *)&long long v31 = a1 + 16;
          *((void *)&v31 + 1) = sub_1573680;
          uint64_t v32 = a1 + 8;
          int v33 = 1;
          uint64_t v27 = sub_1112E88((uint64_t)a3, v7, &v31);
          goto LABEL_49;
        }
      }
      if (v8) {
        BOOL v28 = (v8 & 7) == 4;
      }
      else {
        BOOL v28 = 1;
      }
      if (v28)
      {
        if (v7)
        {
          a3[10].i32[0] = v8 - 1;
          return v30;
        }
        return 0;
      }
      if (*v6)
      {
        uint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v30;
      }
      uint64_t v27 = (char *)sub_1885AC0(v8, v29, v7, a3);
LABEL_49:
      int v30 = v27;
      if (!v27) {
        return 0;
      }
LABEL_50:
      ;
    }
    while (!sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1]));
  }
  return v30;
}

char *sub_157BC68(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_157B328(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_157BCF8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        int v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        int v15 = __dst + 2;
      }
      __dst = sub_157B58C(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_157BED8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = 0;
    int v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * v4);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v6;
      ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = v3 + v2;
  uint64_t v8 = *(int *)(a1 + 40);
  uint64_t v9 = v7 + v8;
  uint64_t v10 = *(void *)(a1 + 48);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_157B768(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 56) = v9;
  return v9;
}

std::string *sub_157BFDC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    int v5 = &result->__r_.__value_.__r.__words[2];
    uint64_t v6 = SLODWORD(result->__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&result->__r_.__value_.__r.__words[2], v6 + v4);
    std::string::pointer data = v3[1].__r_.__value_.__l.__data_;
    *(_DWORD *)v5 += *(_DWORD *)(a2 + 16);
    uint64_t result = (std::string *)memcpy(&data[4 * v6], *(const void **)(a2 + 24), 4 * *(int *)(a2 + 16));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 48) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 40));
    uint64_t result = (std::string *)sub_15896D0((uint64_t *)&v3[1].__r_.__value_.__l.__size_, v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__l.__data_ - LODWORD(v3[1].__r_.__value_.__r.__words[2]));
    int v11 = LODWORD(v3[1].__r_.__value_.__r.__words[2]) + v8;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = v11;
    uint64_t v12 = (int *)v3[2].__r_.__value_.__l.__data_;
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_157C0F0()
{
  return 1;
}

void *sub_157C0F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Business.Hours");
}

uint64_t sub_157C108(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_157C1D4(uint64_t a1)
{
  sub_157C108(a1);

  operator delete();
}

uint64_t sub_157C20C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_157C2C4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)int v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 6)
    {
      if (v8 == 50)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 4)
    {
      if (v8 == 34)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 2 && v8 == 18)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      unint64_t v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        unint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 24);
LABEL_32:
      uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      uint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v22;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)int v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)int v22 = 0;
  return *(void *)v22;
}

char *sub_157C4B4(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_157C5CC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_157C6EC()
{
  return 1;
}

void *sub_157C6F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Business.LocalizedName");
}

uint64_t sub_157C704(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_158903C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_157C7B0(uint64_t a1)
{
  sub_157C704(a1);

  operator delete();
}

uint64_t sub_157C7E8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_157C20C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 48) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_157C89C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)long long v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)long long v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 4) {
      break;
    }
    if (v12 != 2)
    {
      if (v12 != 1 || v9 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v26 = *(void *)(a1 + 8);
      uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        uint64_t v27 = (uint64_t *)*v27;
      }
      BOOL v28 = (std::string *)sub_1880F84((void *)(a1 + 48), v27);
      uint64_t v16 = (void *)sub_188C244(v28, *(char **)v31, (uint64_t)a3);
LABEL_39:
      *(void *)long long v31 = v16;
      if (!v16) {
        goto LABEL_47;
      }
      goto LABEL_40;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v24 = v8 + 1;
    LODWORD(v23) = *v8;
    if ((v23 & 0x80) == 0) {
      goto LABEL_35;
    }
    int v25 = *v24;
    uint64_t v23 = v23 + (v25 << 7) - 128;
    if ((v25 & 0x80000000) == 0)
    {
      uint64_t v24 = v8 + 2;
LABEL_35:
      *(void *)long long v31 = v24;
      *(_DWORD *)(a1 + 56) = v23;
      goto LABEL_40;
    }
    uint64_t v29 = sub_188C138((uint64_t)v8, v23);
    *(void *)long long v31 = v29;
    *(_DWORD *)(a1 + 56) = v30;
    if (!v29) {
      goto LABEL_47;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 34)
  {
    unint64_t v17 = v8 - 1;
    while (1)
    {
      uint64_t v18 = (unsigned __int8 *)(v17 + 1);
      *(void *)long long v31 = v17 + 1;
      uint64_t v19 = *(_DWORD **)(a1 + 40);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 32) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        int v22 = sub_1584FD0(*(void *)(a1 + 24));
        uint64_t v21 = sub_188CDC8(a1 + 24, (uint64_t)v22);
        uint64_t v18 = *(unsigned __int8 **)v31;
      }
      unint64_t v17 = (char *)sub_157CB14(a3, v21, v18);
      *(void *)long long v31 = v17;
      if (!v17) {
        goto LABEL_47;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 34) {
        goto LABEL_40;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v31;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_39;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  *(void *)long long v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v31;
}

uint64_t sub_157CB14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_157C2C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_157CBA4(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 34;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        BOOL v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        BOOL v14 = v4 + 2;
      }
      uint64_t v4 = sub_157C4B4(v12, v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_157CD88(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 1) == 0)
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t result = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    int v7 = *(_DWORD *)(a1 + 56);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
  }
  return result;
}

uint64_t sub_157CE14(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t v9 = sub_157CD88(a1);
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
    int v6 = *(_DWORD *)(a1 + 56);
    uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    if (v6 >= 0) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 10;
    }
    uint64_t v9 = v4 + v5 + v8 + 2;
  }
  uint64_t v10 = *(int *)(a1 + 32);
  uint64_t v11 = v9 + v10;
  uint64_t v12 = *(void *)(a1 + 40);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_157C5CC(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v11 += v20;
  }
  *(_DWORD *)(a1 + 20) = v11;
  return v11;
}

std::string *sub_157CF44(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_158974C(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    }
    if ((v9 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_157D06C(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_157D080@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Business.Category");
}

uint64_t sub_157D090(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_157D138(uint64_t a1)
{
  sub_157D090(a1);

  operator delete();
}

uint64_t sub_157D170(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 48) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_157D1F8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (1)
  {
    int v9 = (char *)(*(void *)v33 + 1);
    unsigned int v10 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        int v9 = (char *)sub_188C180(*(uint64_t *)v33, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)int v33 = v9;
    unsigned int v13 = v10 >> 3;
    if (v10 >> 3 == 3) {
      break;
    }
    if (v13 != 2)
    {
      if (v13 != 1 || v10 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (uint64_t *)*v29;
      }
      int v30 = (std::string *)sub_1880F84((void *)(a1 + 48), v29);
      uint64_t v17 = (void *)sub_188C244(v30, *(char **)v33, (uint64_t)a3);
LABEL_41:
      *(void *)int v33 = v17;
      if (!v17) {
        goto LABEL_49;
      }
      goto LABEL_42;
    }
    if (v10 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    int v25 = v9 + 1;
    int v26 = *v9;
    if ((*v9 & 0x80000000) == 0) {
      goto LABEL_37;
    }
    int v27 = *v25;
    int v26 = v26 + (v27 << 7) - 128;
    if ((v27 & 0x80000000) == 0)
    {
      int v25 = v9 + 2;
LABEL_37:
      *(void *)int v33 = v25;
      *(_DWORD *)(a1 + 56) = v26;
      goto LABEL_42;
    }
    uint64_t v31 = sub_188C0D0((uint64_t)v9, v26);
    *(void *)int v33 = v31;
    *(_DWORD *)(a1 + 56) = v32;
    if (!v31) {
      goto LABEL_49;
    }
LABEL_42:
    if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v10 == 26)
  {
    uint64_t v18 = v9 - 1;
    while (1)
    {
      unint64_t v19 = (char *)(v18 + 1);
      *(void *)int v33 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        int v22 = *(std::string **)&v20[2 * v21 + 2];
      }
      else
      {
        if (!*v7) {
          operator new();
        }
        *uint64_t v24 = v23;
        v24[1] = sub_3A6EDC;
        *uint64_t v23 = 0;
        v23[1] = 0;
        int v23[2] = 0;
        int v22 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v23);
        unint64_t v19 = *(char **)v33;
      }
      uint64_t v18 = sub_188C244(v22, v19, (uint64_t)a3);
      *(void *)int v33 = v18;
      if (!v18) {
        goto LABEL_49;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
        goto LABEL_42;
      }
    }
  }
LABEL_14:
  if (v10) {
    BOOL v15 = (v10 & 7) == 4;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15)
  {
    if (*v8)
    {
      uint64_t v16 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v9 = *(char **)v33;
    }
    uint64_t v17 = sub_1885AC0(v10, v16, v9, a3);
    goto LABEL_41;
  }
  if (v9)
  {
    a3[10].i32[0] = v10 - 1;
    goto LABEL_2;
  }
LABEL_49:
  *(void *)int v33 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v33;
}

char *sub_157D4C0(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 56);
    char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      unsigned int v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_21;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v14)
      {
        char *v4 = 26;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          unsigned int v13 = (void *)*v13;
        }
        BOOL v15 = v4 + 2;
        memcpy(v15, v13, v14);
        uint64_t v4 = &v15[v14];
        goto LABEL_19;
      }
LABEL_21:
      uint64_t v4 = (char *)sub_188A868(a3, 3, (uint64_t)v13, v4);
LABEL_19:
      v11 += 8;
    }
    while (v12 != v11);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_157D6C8(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t v5 = sub_1455678(a1);
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v5 = v4 + ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  uint64_t result = v5 + v6;
  if ((int)v6 >= 1)
  {
    unsigned int v8 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v9 = *v8++;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      result += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
      --v6;
    }
    while (v6);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_157D7E8(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_157D7FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Business.SearchAttribution");
}

void *sub_157D80C(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *uint64_t result = off_24C2710;
  result[1] = v3;
  result[2] = 0;
  result[3] = a2;
  result[4] = 0;
  result[5] = 0;
  result[6] = a2;
  result[7] = 0;
  result[8] = 0;
  result[9] = a2;
  result[10] = 0;
  result[11] = 0;
  result[12] = a2;
  result[13] = 0;
  result[14] = 0;
  result[15] = a2;
  result[16] = 0;
  result[17] = 0;
  result[18] = a2;
  result[19] = 0;
  result[20] = 0;
  result[21] = a2;
  result[22] = 0;
  result[23] = 0;
  result[24] = &qword_2550250;
  result[25] = &qword_2550250;
  result[26] = &qword_2550250;
  result[27] = &qword_2550250;
  result[28] = 0;
  result[29] = 0;
  return result;
}

uint64_t sub_157D87C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 192);
  if (*(uint64_t **)(a1 + 192) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 200) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 200));
  }
  if (*(uint64_t **)(a1 + 208) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 208));
  }
  if (*(uint64_t **)(a1 + 216) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 216));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  sub_15892BC((void *)(a1 + 168));
  sub_124E5CC((void *)(a1 + 144));
  sub_158923C((void *)(a1 + 120));
  sub_15891BC((void *)(a1 + 96));
  sub_158913C((void *)(a1 + 72));
  sub_1889DE8((void *)(a1 + 48));
  sub_15890BC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_157D9AC(uint64_t a1)
{
  sub_157D87C(a1);

  operator delete();
}

uint64_t sub_157D9E4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_1579B24(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 48);
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    unsigned int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_1578AF8(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_157377C(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 128);
  if ((int)v12 >= 1)
  {
    unint64_t v13 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_157B8F0(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 152);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_157C7E8(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 152) = 0;
  }
  uint64_t v18 = *(unsigned int *)(a1 + 176);
  if ((int)v18 >= 1)
  {
    unint64_t v19 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t result = sub_157D170(v20);
      --v18;
    }
    while (v18);
    *(_DWORD *)(a1 + 176) = 0;
  }
  int v21 = *(_DWORD *)(a1 + 16);
  if ((v21 & 0xF) != 0)
  {
    if ((v21 & 1) == 0)
    {
      if ((v21 & 2) == 0) {
        goto LABEL_28;
      }
LABEL_35:
      unint64_t v23 = *(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v23 + 23) < 0)
      {
        **(unsigned char **)unint64_t v23 = 0;
        *(void *)(v23 + 8) = 0;
        if ((v21 & 4) != 0) {
          goto LABEL_39;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v23 = 0;
        *(unsigned char *)(v23 + 23) = 0;
        if ((v21 & 4) != 0) {
          goto LABEL_39;
        }
      }
LABEL_29:
      if ((v21 & 8) == 0) {
        goto LABEL_46;
      }
LABEL_43:
      unint64_t v25 = *(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v25 + 23) < 0)
      {
        **(unsigned char **)unint64_t v25 = 0;
        *(void *)(v25 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v25 = 0;
        *(unsigned char *)(v25 + 23) = 0;
      }
      goto LABEL_46;
    }
    unint64_t v22 = *(void *)(a1 + 192) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v22 + 23) < 0)
    {
      **(unsigned char **)unint64_t v22 = 0;
      *(void *)(v22 + 8) = 0;
      if ((v21 & 2) != 0) {
        goto LABEL_35;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v22 = 0;
      *(unsigned char *)(v22 + 23) = 0;
      if ((v21 & 2) != 0) {
        goto LABEL_35;
      }
    }
LABEL_28:
    if ((v21 & 4) == 0) {
      goto LABEL_29;
    }
LABEL_39:
    unint64_t v24 = *(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v24 + 23) < 0)
    {
      **(unsigned char **)unint64_t v24 = 0;
      *(void *)(v24 + 8) = 0;
      if ((v21 & 8) == 0) {
        goto LABEL_46;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v24 = 0;
      *(unsigned char *)(v24 + 23) = 0;
      if ((v21 & 8) == 0) {
        goto LABEL_46;
      }
    }
    goto LABEL_43;
  }
LABEL_46:
  if ((v21 & 0xF0) != 0)
  {
    *(void *)(a1 + 224) = 0;
    *(void *)(a1 + 232) = 0;
  }
  char v27 = *(unsigned char *)(a1 + 8);
  uint64_t v26 = a1 + 8;
  *(_DWORD *)(v26 + 8) = 0;
  if (v27)
  {
    return sub_188B4AC((uint64_t *)v26);
  }
  return result;
}

uint64_t sub_157DC18(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v86 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v86, a3[11].i32[1]))
  {
    int v85 = 0;
    goto LABEL_3;
  }
  int v85 = 0;
  uint64_t v6 = (uint64_t **)(a1 + 48);
  unint64_t v84 = (uint64_t *)(a1 + 8);
  while (2)
  {
    unsigned int v7 = (char *)(*(void *)v86 + 1);
    unsigned int v8 = **(unsigned char **)v86;
    if ((char)**(unsigned char **)v86 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180(*(uint64_t *)v86, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = (char *)(*(void *)v86 + 2);
      }
    }
    *(void *)uint64_t v86 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_122;
        }
        v85 |= 0x10u;
        uint64_t v11 = v7 + 1;
        uint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_14;
        }
        int v13 = *v11;
        uint64_t v12 = v12 + (v13 << 7) - 128;
        if ((v13 & 0x80000000) == 0)
        {
          uint64_t v11 = v7 + 2;
LABEL_14:
          *(void *)uint64_t v86 = v11;
          *(void *)(a1 + 224) = v12;
          goto LABEL_33;
        }
        uint64_t v76 = sub_188C138((uint64_t)v7, v12);
        *(void *)uint64_t v86 = v76;
        *(void *)(a1 + 224) = v77;
        if (v76) {
          goto LABEL_33;
        }
        goto LABEL_140;
      case 3u:
        if (v8 != 26) {
          goto LABEL_122;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 192);
        goto LABEL_31;
      case 5u:
        if (v8 != 42) {
          goto LABEL_122;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 200);
        goto LABEL_31;
      case 7u:
        if (v8 != 58) {
          goto LABEL_122;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 208);
        goto LABEL_31;
      case 8u:
        if (v8 != 66) {
          goto LABEL_122;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 216);
LABEL_31:
        uint64_t v20 = (std::string *)sub_1880F84(v16, v15);
        int v21 = (void *)sub_188C244(v20, *(char **)v86, (uint64_t)a3);
        goto LABEL_32;
      case 9u:
        if (v8 != 72) {
          goto LABEL_122;
        }
        v85 |= 0x20u;
        unint64_t v22 = v7 + 1;
        uint64_t v23 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v78 = sub_188C138((uint64_t)v7, v23);
          *(void *)uint64_t v86 = v78;
          *(unsigned char *)(a1 + 232) = v79 != 0;
          if (!v78) {
            goto LABEL_140;
          }
        }
        else
        {
          unint64_t v22 = v7 + 2;
LABEL_39:
          *(void *)uint64_t v86 = v22;
          *(unsigned char *)(a1 + 232) = v23 != 0;
        }
        goto LABEL_33;
      case 0xAu:
        if (v8 != 80) {
          goto LABEL_122;
        }
        v85 |= 0x40u;
        unint64_t v25 = v7 + 1;
        uint64_t v26 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_44;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v80 = sub_188C138((uint64_t)v7, v26);
          *(void *)uint64_t v86 = v80;
          *(unsigned char *)(a1 + 233) = v81 != 0;
          if (!v80) {
            goto LABEL_140;
          }
        }
        else
        {
          unint64_t v25 = v7 + 2;
LABEL_44:
          *(void *)uint64_t v86 = v25;
          *(unsigned char *)(a1 + 233) = v26 != 0;
        }
        goto LABEL_33;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_122;
        }
        uint64_t v28 = v7 - 1;
        while (1)
        {
          uint64_t v29 = (unsigned __int8 *)(v28 + 1);
          *(void *)uint64_t v86 = v28 + 1;
          int v30 = *(_DWORD **)(a1 + 40);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 32), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 32) = v31 + 1;
            uint64_t v32 = *(void *)&v30[2 * v31 + 2];
          }
          else
          {
            int v33 = sub_1584CE0(*(void *)(a1 + 24));
            uint64_t v32 = sub_188CDC8(a1 + 24, (uint64_t)v33);
            uint64_t v29 = *(unsigned __int8 **)v86;
          }
          uint64_t v28 = (char *)sub_157E4C0(a3, v32, v29);
          *(void *)uint64_t v86 = v28;
          if (!v28) {
            goto LABEL_140;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 90) {
            goto LABEL_33;
          }
        }
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_122;
        }
        std::string::size_type v34 = v7 - 1;
        while (1)
        {
          uint64_t v35 = (char *)(v34 + 1);
          *(void *)uint64_t v86 = v34 + 1;
          int v36 = *(_DWORD **)(a1 + 64);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 56), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 56) = v37 + 1;
            int v38 = *(std::string **)&v36[2 * v37 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v40 = v39;
            v40[1] = sub_3A6EDC;
            *int v39 = 0;
            v39[1] = 0;
            int v39[2] = 0;
            int v38 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v39);
            uint64_t v35 = *(char **)v86;
          }
          std::string::size_type v34 = sub_188C244(v38, v35, (uint64_t)a3);
          *(void *)uint64_t v86 = v34;
          if (!v34) {
            goto LABEL_140;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 106) {
            goto LABEL_33;
          }
        }
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_122;
        }
        uint64_t v41 = v7 - 1;
        while (1)
        {
          uint64_t v42 = (unsigned __int8 *)(v41 + 1);
          *(void *)uint64_t v86 = v41 + 1;
          uint64_t v43 = *(_DWORD **)(a1 + 88);
          if (v43 && (uint64_t v44 = *(int *)(a1 + 80), (int)v44 < *v43))
          {
            *(_DWORD *)(a1 + 80) = v44 + 1;
            uint64_t v45 = *(void *)&v43[2 * v44 + 2];
          }
          else
          {
            uint64_t v46 = sub_1584E14(*(void *)(a1 + 72));
            uint64_t v45 = sub_188CDC8(a1 + 72, v46);
            uint64_t v42 = *(unsigned __int8 **)v86;
          }
          uint64_t v41 = sub_1578D3C(a3, v45, v42);
          *(void *)uint64_t v86 = v41;
          if (!v41) {
            goto LABEL_140;
          }
          if (*(void *)a3 <= (unint64_t)v41 || *v41 != 114) {
            goto LABEL_33;
          }
        }
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_122;
        }
        uint64_t v47 = v7 - 1;
        while (1)
        {
          uint64_t v48 = (unsigned __int8 *)(v47 + 1);
          *(void *)uint64_t v86 = v47 + 1;
          std::string::size_type v49 = *(_DWORD **)(a1 + 112);
          if (v49 && (uint64_t v50 = *(int *)(a1 + 104), (int)v50 < *v49))
          {
            *(_DWORD *)(a1 + 104) = v50 + 1;
            uint64_t v51 = *(void *)&v49[2 * v50 + 2];
          }
          else
          {
            uint64_t v52 = sub_1584798(*(void *)(a1 + 96));
            uint64_t v51 = sub_188CDC8(a1 + 96, (uint64_t)v52);
            uint64_t v48 = *(unsigned __int8 **)v86;
          }
          uint64_t v47 = (char *)sub_157E550(a3, v51, v48);
          *(void *)uint64_t v86 = v47;
          if (!v47) {
            goto LABEL_140;
          }
          if (*(void *)a3 <= (unint64_t)v47 || *v47 != 122) {
            goto LABEL_33;
          }
        }
      case 0x10u:
        if (v8 != 130) {
          goto LABEL_122;
        }
        uint64_t v53 = v7 - 2;
        while (1)
        {
          unint64_t v54 = (unsigned __int8 *)(v53 + 2);
          *(void *)uint64_t v86 = v53 + 2;
          unint64_t v55 = *(_DWORD **)(a1 + 136);
          if (v55 && (uint64_t v56 = *(int *)(a1 + 128), (int)v56 < *v55))
          {
            *(_DWORD *)(a1 + 128) = v56 + 1;
            uint64_t v57 = *(void *)&v55[2 * v56 + 2];
          }
          else
          {
            uint64_t v58 = sub_1584F2C(*(void *)(a1 + 120));
            uint64_t v57 = sub_188CDC8(a1 + 120, v58);
            unint64_t v54 = *(unsigned __int8 **)v86;
          }
          uint64_t v53 = sub_157E5E0(a3, v57, v54);
          *(void *)uint64_t v86 = v53;
          if (!v53) {
            goto LABEL_140;
          }
          if (*(void *)a3 <= (unint64_t)v53 || *(_WORD *)v53 != 386) {
            goto LABEL_33;
          }
        }
      case 0x12u:
        if (v8 != 144) {
          goto LABEL_122;
        }
        v85 |= 0x80u;
        uint64_t v59 = v7 + 1;
        int v60 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_101;
        }
        int v61 = *v59;
        int v60 = v60 + (v61 << 7) - 128;
        if (v61 < 0)
        {
          uint64_t v82 = sub_188C0D0((uint64_t)v7, v60);
          *(void *)uint64_t v86 = v82;
          *(_DWORD *)(a1 + 236) = v83;
          if (!v82) {
            goto LABEL_140;
          }
        }
        else
        {
          uint64_t v59 = v7 + 2;
LABEL_101:
          *(void *)uint64_t v86 = v59;
          *(_DWORD *)(a1 + 236) = v60;
        }
        goto LABEL_33;
      case 0x13u:
        if (v8 != 154) {
          goto LABEL_122;
        }
        uint64_t v62 = v7 - 2;
        while (1)
        {
          uint64_t v63 = (unsigned __int8 *)(v62 + 2);
          *(void *)uint64_t v86 = v62 + 2;
          uint64_t v64 = *(_DWORD **)(a1 + 160);
          if (v64 && (uint64_t v65 = *(int *)(a1 + 152), (int)v65 < *v64))
          {
            *(_DWORD *)(a1 + 152) = v65 + 1;
            uint64_t v66 = *(void *)&v64[2 * v65 + 2];
          }
          else
          {
            uint64_t v67 = sub_1585058(*(void *)(a1 + 144));
            uint64_t v66 = sub_188CDC8(a1 + 144, v67);
            uint64_t v63 = *(unsigned __int8 **)v86;
          }
          uint64_t v62 = (char *)sub_123D758(a3, v66, v63);
          *(void *)uint64_t v86 = v62;
          if (!v62) {
            goto LABEL_140;
          }
          if (*(void *)a3 <= (unint64_t)v62 || *(_WORD *)v62 != 410) {
            goto LABEL_33;
          }
        }
      case 0x14u:
        if (v8 != 162) {
          goto LABEL_122;
        }
        uint64_t v68 = v7 - 2;
        while (1)
        {
          uint64_t v69 = (unsigned __int8 *)(v68 + 2);
          *(void *)uint64_t v86 = v68 + 2;
          uint64_t v70 = *(_DWORD **)(a1 + 184);
          if (v70 && (uint64_t v71 = *(int *)(a1 + 176), (int)v71 < *v70))
          {
            *(_DWORD *)(a1 + 176) = v71 + 1;
            uint64_t v72 = *(void *)&v70[2 * v71 + 2];
          }
          else
          {
            uint64_t v73 = sub_1585100(*(void *)(a1 + 168));
            uint64_t v72 = sub_188CDC8(a1 + 168, v73);
            uint64_t v69 = *(unsigned __int8 **)v86;
          }
          uint64_t v68 = (char *)sub_157E670(a3, v72, v69);
          *(void *)uint64_t v86 = v68;
          if (!v68) {
            goto LABEL_140;
          }
          if (*(void *)a3 <= (unint64_t)v68 || *(_WORD *)v68 != 418) {
            goto LABEL_33;
          }
        }
      default:
LABEL_122:
        if (v8) {
          BOOL v74 = (v8 & 7) == 4;
        }
        else {
          BOOL v74 = 1;
        }
        if (!v74)
        {
          if (*v84)
          {
            uint64_t v75 = (std::string *)((*v84 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v75 = (std::string *)sub_188DBD8(v84);
            unsigned int v7 = *(char **)v86;
          }
          int v21 = sub_1885AC0(v8, v75, v7, a3);
LABEL_32:
          *(void *)uint64_t v86 = v21;
          if (!v21) {
            goto LABEL_140;
          }
LABEL_33:
          if (sub_11947B8((uint64_t)a3, (char **)v86, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_140:
        }
          *(void *)uint64_t v86 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 16) |= v85;
        return *(void *)v86;
    }
  }
}

uint64_t sub_157E4C0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1579C1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_157E550(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15737F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_157E5E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_157B970(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_157E670(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_157D1F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_157E700(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 224);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 192) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_13:
    if ((v6 & 0x40) == 0) {
      goto LABEL_25;
    }
    goto LABEL_22;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 232);
  char *v4 = 72;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 0x40) != 0)
  {
LABEL_22:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v11 = *(unsigned char *)(a1 + 233);
    char *v4 = 80;
    v4[1] = v11;
    v4 += 2;
  }
LABEL_25:
  int v12 = *(_DWORD *)(a1 + 32);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 90;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      v4[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, v4 + 1);
      }
      else {
        uint64_t v16 = v4 + 2;
      }
      uint64_t v4 = sub_157A024(v14, (unint64_t)v16, a3);
    }
  }
  uint64_t v17 = *(unsigned int *)(a1 + 56);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = 0;
    uint64_t v19 = 8 * v17;
    do
    {
      uint64_t v20 = *(void **)(*(void *)(a1 + 64) + v18 + 8);
      if (*((char *)v20 + 23) < 0)
      {
        int64_t v21 = v20[1];
        if (v21 > 127) {
          goto LABEL_44;
        }
      }
      else
      {
        int64_t v21 = *((unsigned __int8 *)v20 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v21)
      {
        char *v4 = 106;
        v4[1] = v21;
        if (*((char *)v20 + 23) < 0) {
          uint64_t v20 = (void *)*v20;
        }
        unint64_t v22 = v4 + 2;
        memcpy(v22, v20, v21);
        uint64_t v4 = &v22[v21];
        goto LABEL_42;
      }
LABEL_44:
      uint64_t v4 = (char *)sub_188A868(a3, 13, (uint64_t)v20, v4);
LABEL_42:
      v18 += 8;
    }
    while (v19 != v18);
  }
  int v23 = *(_DWORD *)(a1 + 80);
  if (v23)
  {
    for (int j = 0; j != v23; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v25 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 114;
      unsigned int v26 = *(_DWORD *)(v25 + 20);
      v4[1] = v26;
      if (v26 > 0x7F) {
        int v27 = sub_188A9CC(v26, v4 + 1);
      }
      else {
        int v27 = v4 + 2;
      }
      uint64_t v4 = sub_157AF90(v25, (unint64_t)v27, a3);
    }
  }
  int v28 = *(_DWORD *)(a1 + 104);
  if (v28)
  {
    for (int k = 0; k != v28; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      char *v4 = 122;
      unsigned int v31 = *(_DWORD *)(v30 + 20);
      v4[1] = v31;
      if (v31 > 0x7F) {
        uint64_t v32 = sub_188A9CC(v31, v4 + 1);
      }
      else {
        uint64_t v32 = v4 + 2;
      }
      uint64_t v4 = sub_15739A0(v30, v32, a3);
    }
  }
  int v33 = *(_DWORD *)(a1 + 128);
  if (v33)
  {
    for (int m = 0; m != v33; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 386;
      unsigned int v36 = *(_DWORD *)(v35 + 56);
      v4[2] = v36;
      if (v36 > 0x7F) {
        uint64_t v37 = sub_188A9CC(v36, v4 + 2);
      }
      else {
        uint64_t v37 = v4 + 3;
      }
      uint64_t v4 = sub_157BCF8(v35, v37, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v38 = *(_DWORD *)(a1 + 236);
    *(_WORD *)uint64_t v4 = 400;
    v4[2] = v38;
    if (v38 > 0x7F)
    {
      v4[2] = v38 | 0x80;
      unsigned int v39 = v38 >> 7;
      v4[3] = v38 >> 7;
      v4 += 4;
      if (v38 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v40 = v39 >> 14;
          v39 >>= 7;
          *v4++ = v39;
        }
        while (v40);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v41 = *(_DWORD *)(a1 + 152);
  if (v41)
  {
    for (int n = 0; n != v41; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v43 = *(void *)(*(void *)(a1 + 160) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 410;
      unsigned int v44 = *(_DWORD *)(v43 + 20);
      v4[2] = v44;
      if (v44 > 0x7F) {
        uint64_t v45 = sub_188A9CC(v44, v4 + 2);
      }
      else {
        uint64_t v45 = v4 + 3;
      }
      uint64_t v4 = sub_157CBA4(v43, v45, a3);
    }
  }
  int v46 = *(_DWORD *)(a1 + 176);
  if (v46)
  {
    for (iint i = 0; ii != v46; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v48 = *(void *)(*(void *)(a1 + 184) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 418;
      unsigned int v49 = *(_DWORD *)(v48 + 20);
      v4[2] = v49;
      if (v49 > 0x7F) {
        uint64_t v50 = sub_188A9CC(v49, v4 + 2);
      }
      else {
        uint64_t v50 = v4 + 3;
      }
      uint64_t v4 = sub_157D4C0(v48, v50, a3);
    }
  }
  uint64_t v51 = *(void *)(a1 + 8);
  if ((v51 & 1) == 0) {
    return v4;
  }
  unint64_t v53 = v51 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v53 + 31) < 0)
  {
    unint64_t v54 = *(void **)(v53 + 8);
    uint64_t v55 = *(void *)(v53 + 16);
  }
  else
  {
    unint64_t v54 = (void *)(v53 + 8);
    LODWORD(v55) = *(unsigned __int8 *)(v53 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v55)
  {
    uint64_t v56 = (int)v55;
    memcpy(v4, v54, (int)v55);
    v4 += v56;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v54, v55, v4);
}

uint64_t sub_157ED84(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_157A320(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  if ((int)v8 >= 1)
  {
    char v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(int *)(a1 + 80);
  uint64_t v15 = v9 + v14;
  uint64_t v16 = *(void *)(a1 + 88);
  if (v16) {
    uint64_t v17 = (uint64_t *)(v16 + 8);
  }
  else {
    uint64_t v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = sub_157B154(v19);
      v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      v18 -= 8;
    }
    while (v18);
  }
  uint64_t v21 = *(int *)(a1 + 104);
  uint64_t v22 = v15 + v21;
  uint64_t v23 = *(void *)(a1 + 112);
  if (v23) {
    int v24 = (uint64_t *)(v23 + 8);
  }
  else {
    int v24 = 0;
  }
  if (v21)
  {
    uint64_t v25 = 8 * v21;
    do
    {
      uint64_t v26 = *v24++;
      uint64_t v27 = sub_1573A8C(v26);
      v22 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
      v25 -= 8;
    }
    while (v25);
  }
  uint64_t v28 = *(int *)(a1 + 128);
  uint64_t v29 = v22 + 2 * v28;
  uint64_t v30 = *(void *)(a1 + 136);
  if (v30) {
    unsigned int v31 = (uint64_t *)(v30 + 8);
  }
  else {
    unsigned int v31 = 0;
  }
  if (v28)
  {
    uint64_t v32 = 8 * v28;
    do
    {
      uint64_t v33 = *v31++;
      uint64_t v34 = sub_157BED8(v33);
      v29 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6);
      v32 -= 8;
    }
    while (v32);
  }
  uint64_t v35 = *(int *)(a1 + 152);
  uint64_t v36 = v29 + 2 * v35;
  uint64_t v37 = *(void *)(a1 + 160);
  if (v37) {
    unsigned int v38 = (uint64_t *)(v37 + 8);
  }
  else {
    unsigned int v38 = 0;
  }
  if (v35)
  {
    uint64_t v39 = 8 * v35;
    do
    {
      uint64_t v40 = *v38++;
      uint64_t v41 = sub_157CE14(v40);
      v36 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6);
      v39 -= 8;
    }
    while (v39);
  }
  uint64_t v42 = *(int *)(a1 + 176);
  uint64_t v43 = v36 + 2 * v42;
  uint64_t v44 = *(void *)(a1 + 184);
  if (v44) {
    uint64_t v45 = (uint64_t *)(v44 + 8);
  }
  else {
    uint64_t v45 = 0;
  }
  if (v42)
  {
    uint64_t v46 = 8 * v42;
    do
    {
      uint64_t v47 = *v45++;
      uint64_t v48 = sub_157D6C8(v47);
      v43 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6);
      v46 -= 8;
    }
    while (v46);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(unsigned char *)(a1 + 16))
    {
      unint64_t v52 = *(void *)(a1 + 192) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v53 = *(unsigned __int8 *)(v52 + 23);
      uint64_t v54 = *(void *)(v52 + 8);
      if ((v53 & 0x80u) == 0) {
        uint64_t v54 = v53;
      }
      v43 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((*(unsigned char *)(a1 + 16) & 2) == 0)
      {
LABEL_47:
        if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
          goto LABEL_48;
        }
        goto LABEL_66;
      }
    }
    else if ((*(unsigned char *)(a1 + 16) & 2) == 0)
    {
      goto LABEL_47;
    }
    unint64_t v55 = *(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v56 = *(unsigned __int8 *)(v55 + 23);
    uint64_t v57 = *(void *)(v55 + 8);
    if ((v56 & 0x80u) == 0) {
      uint64_t v57 = v56;
    }
    v43 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 4) == 0)
    {
LABEL_48:
      if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
        goto LABEL_49;
      }
      goto LABEL_69;
    }
LABEL_66:
    unint64_t v58 = *(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v59 = *(unsigned __int8 *)(v58 + 23);
    uint64_t v60 = *(void *)(v58 + 8);
    if ((v59 & 0x80u) == 0) {
      uint64_t v60 = v59;
    }
    v43 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 8) == 0)
    {
LABEL_49:
      if ((*(unsigned char *)(a1 + 16) & 0x10) == 0)
      {
LABEL_51:
        uint64_t v49 = v43 + 2;
        if ((*(unsigned char *)(a1 + 16) & 0x20) == 0) {
          uint64_t v49 = v43;
        }
        if ((*(unsigned char *)(a1 + 16) & 0x40) != 0) {
          uint64_t v43 = v49 + 2;
        }
        else {
          uint64_t v43 = v49;
        }
        if ((*(unsigned char *)(a1 + 16) & 0x80) != 0) {
          v43 += ((9 * (__clz(*(_DWORD *)(a1 + 236) | 1) ^ 0x1F) + 73) >> 6) + 2;
        }
        goto LABEL_58;
      }
LABEL_50:
      v43 += ((9 * (__clz(*(void *)(a1 + 224) | 1) ^ 0x3F) + 73) >> 6) + 1;
      goto LABEL_51;
    }
LABEL_69:
    unint64_t v61 = *(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v62 = *(unsigned __int8 *)(v61 + 23);
    uint64_t v63 = *(void *)(v61 + 8);
    if ((v62 & 0x80u) == 0) {
      uint64_t v63 = v62;
    }
    v43 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 0x10) == 0) {
      goto LABEL_51;
    }
    goto LABEL_50;
  }
LABEL_58:
  uint64_t v50 = *(void *)(a1 + 8);
  if (v50)
  {
    unint64_t v64 = v50 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v64 + 31) < 0) {
      uint64_t v65 = *(void *)(v64 + 16);
    }
    else {
      uint64_t v65 = *(unsigned __int8 *)(v64 + 31);
    }
    v43 += v65;
  }
  *(_DWORD *)(a1 + 20) = v43;
  return v43;
}

std::string *sub_157F1AC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_15897C8(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    char v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = (std::string *)sub_1589854((uint64_t *)&v3[3], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2]- LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4((uint64_t)&v3[4], *(_DWORD *)(a2 + 104));
    uint64_t result = sub_15898E0(v3 + 4, v21, v20, v19, *(_DWORD *)v3[4].__r_.__value_.__r.__words[2] - LODWORD(v3[4].__r_.__value_.__r.__words[1]));
    int v22 = LODWORD(v3[4].__r_.__value_.__r.__words[1]) + v19;
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = v22;
    uint64_t v23 = (int *)v3[4].__r_.__value_.__r.__words[2];
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4((uint64_t)&v3[5], *(_DWORD *)(a2 + 128));
    uint64_t result = (std::string *)sub_158995C((uint64_t *)&v3[5], v26, v25, v24, *(_DWORD *)v3[5].__r_.__value_.__r.__words[2]- LODWORD(v3[5].__r_.__value_.__r.__words[1]));
    int v27 = LODWORD(v3[5].__r_.__value_.__r.__words[1]) + v24;
    LODWORD(v3[5].__r_.__value_.__r.__words[1]) = v27;
    uint64_t v28 = (int *)v3[5].__r_.__value_.__r.__words[2];
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 152);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    unsigned int v31 = (std::string **)sub_188CCE4((uint64_t)&v3[6], *(_DWORD *)(a2 + 152));
    uint64_t result = (std::string *)sub_124F25C((uint64_t *)&v3[6], v31, v30, v29, *(_DWORD *)v3[6].__r_.__value_.__r.__words[2]- LODWORD(v3[6].__r_.__value_.__r.__words[1]));
    int v32 = LODWORD(v3[6].__r_.__value_.__r.__words[1]) + v29;
    LODWORD(v3[6].__r_.__value_.__r.__words[1]) = v32;
    uint64_t v33 = (int *)v3[6].__r_.__value_.__r.__words[2];
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 176);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4((uint64_t)&v3[7], *(_DWORD *)(a2 + 176));
    uint64_t result = (std::string *)sub_15899E8((uint64_t *)&v3[7], v36, v35, v34, *(_DWORD *)v3[7].__r_.__value_.__r.__words[2]- LODWORD(v3[7].__r_.__value_.__r.__words[1]));
    int v37 = LODWORD(v3[7].__r_.__value_.__r.__words[1]) + v34;
    LODWORD(v3[7].__r_.__value_.__r.__words[1]) = v37;
    unsigned int v38 = (int *)v3[7].__r_.__value_.__r.__words[2];
    if (*v38 < v37) {
      int *v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v39)
  {
    if (v39)
    {
      uint64_t v41 = (long long *)(*(void *)(a2 + 192) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v43 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v43 = (uint64_t *)*v43;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[8], v41, v43);
      if ((v39 & 2) == 0)
      {
LABEL_25:
        if ((v39 & 4) == 0) {
          goto LABEL_26;
        }
        goto LABEL_43;
      }
    }
    else if ((v39 & 2) == 0)
    {
      goto LABEL_25;
    }
    uint64_t v44 = (long long *)(*(void *)(a2 + 200) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v45 = v3->__r_.__value_.__l.__size_;
    uint64_t v46 = (uint64_t *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
    if (v45) {
      uint64_t v46 = (uint64_t *)*v46;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[8].__r_.__value_.__l.__size_, v44, v46);
    if ((v39 & 4) == 0)
    {
LABEL_26:
      if ((v39 & 8) == 0) {
        goto LABEL_27;
      }
      goto LABEL_46;
    }
LABEL_43:
    uint64_t v47 = (long long *)(*(void *)(a2 + 208) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v48 = v3->__r_.__value_.__l.__size_;
    uint64_t v49 = (uint64_t *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
    if (v48) {
      uint64_t v49 = (uint64_t *)*v49;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[8].__r_.__value_.__r.__words[2], v47, v49);
    if ((v39 & 8) == 0)
    {
LABEL_27:
      if ((v39 & 0x10) == 0) {
        goto LABEL_28;
      }
      goto LABEL_49;
    }
LABEL_46:
    uint64_t v50 = (long long *)(*(void *)(a2 + 216) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v51 = v3->__r_.__value_.__l.__size_;
    unint64_t v52 = (uint64_t *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
    if (v51) {
      unint64_t v52 = (uint64_t *)*v52;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[9], v50, v52);
    if ((v39 & 0x10) == 0)
    {
LABEL_28:
      if ((v39 & 0x20) == 0) {
        goto LABEL_29;
      }
      goto LABEL_50;
    }
LABEL_49:
    v3[9].__r_.__value_.__l.__size_ = *(void *)(a2 + 224);
    if ((v39 & 0x20) == 0)
    {
LABEL_29:
      if ((v39 & 0x40) == 0) {
        goto LABEL_30;
      }
      goto LABEL_51;
    }
LABEL_50:
    v3[9].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 232);
    if ((v39 & 0x40) == 0)
    {
LABEL_30:
      if ((v39 & 0x80) == 0)
      {
LABEL_32:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v39;
        goto LABEL_33;
      }
LABEL_31:
      HIDWORD(v3[9].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 236);
      goto LABEL_32;
    }
LABEL_51:
    v3[9].__r_.__value_.__s.__data_[17] = *(unsigned char *)(a2 + 233);
    if ((v39 & 0x80) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
LABEL_33:
  uint64_t v40 = *(void *)(a2 + 8);
  if (v40)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v40 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_157F60C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 104);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 112) + 8 * v1--);
    if ((~*(_DWORD *)(v2 + 16) & 3) != 0) {
      return 0;
    }
  }
  uint64_t v3 = *(unsigned int *)(a1 + 152);
  while ((int)v3 >= 1)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 160) + 8 * v3--);
    if ((~*(_DWORD *)(v4 + 16) & 3) != 0) {
      return 0;
    }
  }
  uint64_t v6 = *(unsigned int *)(a1 + 176);
  uint64_t v7 = *(void *)(a1 + 184);
  do
  {
    BOOL result = (int)v6 < 1;
    if ((int)v6 < 1) {
      break;
    }
    uint64_t v8 = *(void *)(v7 + 8 * v6--);
  }
  while ((~*(_DWORD *)(v8 + 16) & 3) == 0);
  return result;
}

void *sub_157F698@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.Business");
}

void *sub_157F6A8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_157F724(void *a1)
{
  sub_157F6A8(a1);

  operator delete();
}

uint64_t sub_157F75C(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_157F784(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v38 + 1;
    unsigned int v9 = *v38;
    if (*v38 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v38, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = v38 + 2;
      }
    }
    unsigned int v38 = v8;
    unsigned int v13 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v13 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      int v27 = v8 + 1;
      unint64_t v28 = *v8;
      if (*v8 < 0)
      {
        int v29 = *v27;
        int v30 = v28 + (v29 << 7);
        unint64_t v28 = (v30 - 128);
        if ((v29 & 0x80000000) == 0)
        {
          int v27 = v8 + 2;
          goto LABEL_47;
        }
        unsigned int v38 = (char *)sub_188C138((uint64_t)v8, (v30 - 128));
        if (!v38) {
          goto LABEL_69;
        }
        unint64_t v28 = v34;
      }
      else
      {
LABEL_47:
        unsigned int v38 = v27;
      }
      if (v28 > 2)
      {
        if (*v7) {
          int v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(2, v28, v37);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        *(_DWORD *)(a1 + 44) = v28;
      }
      goto LABEL_54;
    }
    if (v13 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    int v32 = v8 + 1;
    LODWORD(v31) = *v8;
    if ((v31 & 0x80) == 0) {
      goto LABEL_53;
    }
    int v33 = *v32;
    uint64_t v31 = v31 + (v33 << 7) - 128;
    if ((v33 & 0x80000000) == 0)
    {
      int v32 = v8 + 2;
LABEL_53:
      unsigned int v38 = v32;
      *(_DWORD *)(a1 + 40) = v31;
      int v5 = 1;
      goto LABEL_54;
    }
    uint64_t v35 = (char *)sub_188C138((uint64_t)v8, v31);
    unsigned int v38 = v35;
    *(_DWORD *)(a1 + 40) = v36;
    int v5 = 1;
    if (!v35) {
      goto LABEL_69;
    }
LABEL_54:
    if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 24)
  {
    uint64_t v18 = v8 - 1;
    while (1)
    {
      unsigned int v38 = v18 + 1;
      unint64_t v19 = v18[1];
      uint64_t v20 = v18 + 2;
      if (v18[1] < 0)
      {
        int v21 = *v20;
        int v22 = v19 + (v21 << 7);
        unint64_t v19 = (v22 - 128);
        if (v21 < 0)
        {
          unsigned int v38 = (char *)sub_188C138((uint64_t)(v18 + 1), (v22 - 128));
          if (!v38) {
            goto LABEL_69;
          }
          unint64_t v19 = v25;
          goto LABEL_29;
        }
        uint64_t v20 = v18 + 3;
      }
      unsigned int v38 = v20;
LABEL_29:
      if (v19 > 9)
      {
        if (*v7) {
          uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(3, v19, v26);
      }
      else
      {
        uint64_t v23 = *(unsigned int *)(a1 + 24);
        if (v23 == *(_DWORD *)(a1 + 28))
        {
          int v24 = v23 + 1;
          sub_188C80C((unsigned int *)(a1 + 24), v23 + 1);
          *(_DWORD *)(*(void *)(a1 + 32) + 4 * v23) = v19;
        }
        else
        {
          *(_DWORD *)(*(void *)(a1 + 32) + 4 * v23) = v19;
          int v24 = v23 + 1;
        }
        *(_DWORD *)(a1 + 24) = v24;
      }
      uint64_t v18 = v38;
      if (*(void *)a3 <= (unint64_t)v38 || *v38 != 24) {
        goto LABEL_54;
      }
    }
  }
  if (v9 == 26)
  {
    *(void *)&long long v39 = a1 + 24;
    *((void *)&v39 + 1) = sub_1573674;
    uint64_t v40 = a1 + 8;
    int v41 = 3;
    int v17 = sub_1112E88((uint64_t)a3, v8, &v39);
    goto LABEL_21;
  }
LABEL_14:
  if (v9) {
    BOOL v15 = (v9 & 7) == 4;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15)
  {
    if (*v7)
    {
      uint64_t v16 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v38;
    }
    int v17 = (char *)sub_1885AC0(v9, v16, v8, a3);
LABEL_21:
    unsigned int v38 = v17;
    if (!v17) {
      goto LABEL_69;
    }
    goto LABEL_54;
  }
  if (v8) {
    a3[10].i32[0] = v9 - 1;
  }
  else {
LABEL_69:
  }
    unsigned int v38 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v38;
}

unsigned char *sub_157FAFC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(unsigned int *)(a1 + 24);
  if ((int)v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v15 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 24;
      v4[1] = v15;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unint64_t v16 = v15 >> 7;
        v4[2] = v15 >> 7;
        v4 += 3;
        if (v15 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_157FD48(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = *(unsigned int *)(a1 + 24);
  if (v4)
  {
    int v5 = 0;
    uint64_t v6 = 0;
    do
    {
      int v7 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v5);
      if (v7 < 0) {
        uint64_t v8 = 10;
      }
      else {
        uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
      }
      v6 += v8;
      ++v5;
    }
    while (v4 != v5);
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v9 = v2 + v4 + v6;
  if ((v1 & 2) != 0)
  {
    int v10 = *(_DWORD *)(a1 + 44);
    if (v10 < 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v9 += v11;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v9 += v15;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

uint64_t sub_157FE4C(uint64_t a1)
{
  return *(_DWORD *)(a1 + 16) & 1;
}

void *sub_157FE58@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.PlaceSearchRequest.BusinessOptions.PhotoOptions");
}

void *sub_157FE68(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 6);
  sub_158933C(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_157FEF0(void *a1)
{
  sub_157FE68(a1);

  operator delete();
}

uint64_t sub_157FF28(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_157F75C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(unsigned char *)(v6 + 64) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_157FFB4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (uint64_t **)(a1 + 48);
  uint64_t v8 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v9 = (char *)(*(void *)v35 + 1);
    unsigned int v10 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        uint64_t v9 = (char *)sub_188C180(*(uint64_t *)v35, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (char *)(*(void *)v35 + 2);
      }
    }
    *(void *)uint64_t v35 = v9;
    unsigned int v13 = v10 >> 3;
    if (v10 >> 3 != 3) {
      break;
    }
    if (v10 != 24) {
      goto LABEL_14;
    }
    unint64_t v17 = v9 + 1;
    uint64_t v18 = *v9;
    if ((*v9 & 0x80000000) == 0) {
      goto LABEL_26;
    }
    int v19 = *v17;
    uint64_t v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      unint64_t v17 = v9 + 2;
LABEL_26:
      *(void *)uint64_t v35 = v17;
      *(unsigned char *)(a1 + 72) = v18 != 0;
      int v5 = 1;
      goto LABEL_49;
    }
    uint64_t v33 = sub_188C138((uint64_t)v9, v18);
    *(void *)uint64_t v35 = v33;
    *(unsigned char *)(a1 + 72) = v34 != 0;
    int v5 = 1;
    if (!v33) {
      goto LABEL_54;
    }
LABEL_49:
    if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v13 == 2)
  {
    if (v10 == 18)
    {
      unint64_t v20 = v9 - 1;
      while (1)
      {
        int v21 = (char *)(v20 + 1);
        *(void *)uint64_t v35 = v20 + 1;
        uint64_t v22 = *(_DWORD **)(a1 + 64);
        if (v22 && (uint64_t v23 = *(int *)(a1 + 56), (int)v23 < *v22))
        {
          *(_DWORD *)(a1 + 56) = v23 + 1;
          int v24 = *(std::string **)&v22[2 * v23 + 2];
        }
        else
        {
          if (!*v7) {
            operator new();
          }
          void *v26 = v25;
          v26[1] = sub_3A6EDC;
          *unint64_t v25 = 0;
          v25[1] = 0;
          int v25[2] = 0;
          int v24 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v25);
          int v21 = *(char **)v35;
        }
        unint64_t v20 = sub_188C244(v24, v21, (uint64_t)a3);
        *(void *)uint64_t v35 = v20;
        if (!v20) {
          goto LABEL_54;
        }
        if (*(void *)a3 <= (unint64_t)v20 || *v20 != 18) {
          goto LABEL_49;
        }
      }
    }
  }
  else if (v13 == 1 && v10 == 10)
  {
    int v27 = v9 - 1;
    while (1)
    {
      unint64_t v28 = (unsigned __int8 *)(v27 + 1);
      *(void *)uint64_t v35 = v27 + 1;
      int v29 = *(_DWORD **)(a1 + 40);
      if (v29 && (uint64_t v30 = *(int *)(a1 + 32), (int)v30 < *v29))
      {
        *(_DWORD *)(a1 + 32) = v30 + 1;
        uint64_t v31 = *(void *)&v29[2 * v30 + 2];
      }
      else
      {
        int v32 = sub_1585208(*(void *)(a1 + 24));
        uint64_t v31 = sub_188CDC8(a1 + 24, (uint64_t)v32);
        unint64_t v28 = *(unsigned __int8 **)v35;
      }
      int v27 = sub_15802D8(a3, v31, v28);
      *(void *)uint64_t v35 = v27;
      if (!v27) {
        goto LABEL_54;
      }
      if (*(void *)a3 <= (unint64_t)v27 || *v27 != 10) {
        goto LABEL_49;
      }
    }
  }
LABEL_14:
  if (v10) {
    BOOL v15 = (v10 & 7) == 4;
  }
  else {
    BOOL v15 = 1;
  }
  if (!v15)
  {
    if (*v8)
    {
      unint64_t v16 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v9 = *(char **)v35;
    }
    *(void *)uint64_t v35 = sub_1885AC0(v10, v16, v9, a3);
    if (!*(void *)v35) {
      goto LABEL_54;
    }
    goto LABEL_49;
  }
  if (v9)
  {
    a3[10].i32[0] = v10 - 1;
    goto LABEL_2;
  }
LABEL_54:
  *(void *)uint64_t v35 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v35;
}

char *sub_15802D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_157F784(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1580368(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_157FAFC(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 56);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 8 * v11;
    do
    {
      unint64_t v14 = *(void **)(*(void *)(a1 + 64) + v12 + 8);
      if (*((char *)v14 + 23) < 0)
      {
        int64_t v15 = v14[1];
        if (v15 > 127) {
          goto LABEL_20;
        }
      }
      else
      {
        int64_t v15 = *((unsigned __int8 *)v14 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v15)
      {
        *__dst = 18;
        __dst[1] = v15;
        if (*((char *)v14 + 23) < 0) {
          unint64_t v14 = (void *)*v14;
        }
        unint64_t v16 = __dst + 2;
        memcpy(v16, v14, v15);
        __dst = &v16[v15];
        goto LABEL_18;
      }
LABEL_20:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v14, __dst);
LABEL_18:
      v12 += 8;
    }
    while (v13 != v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v17 = *(unsigned char *)(a1 + 72);
    *__dst = 24;
    __dst[1] = v17;
    __dst += 2;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return __dst;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(__dst, v21, (int)v22);
    __dst += v23;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, __dst);
}

uint64_t sub_1580590(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_157FD48(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  if ((int)v8 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t result = v9 + 2;
  }
  else {
    uint64_t result = v9;
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v16 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    result += v17;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_15806A4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1589A64(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    unsigned int v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    std::string::value_type v14 = *(unsigned char *)(a2 + 72);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    v3[3].__r_.__value_.__s.__data_[0] = v14;
  }
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_15807F4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8 * v1--);
  }
  while ((*(unsigned char *)(v3 + 16) & 1) != 0);
  return v2 < 1;
}

void *sub_1580824@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.PlaceSearchRequest.BusinessOptions");
}

void *sub_1580834(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15808A8(void *a1)
{
  sub_1580834(a1);

  operator delete();
}

uint64_t sub_15808E0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1580908(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v32 + 2;
      }
    }
    int v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v17 = v8 + 1;
      LODWORD(v16) = *v8;
      if ((v16 & 0x80) == 0) {
        goto LABEL_26;
      }
      int v18 = *v17;
      uint64_t v16 = v16 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v17 = v8 + 2;
LABEL_26:
        int v32 = v17;
        *(_DWORD *)(a1 + 32) = v16;
        goto LABEL_38;
      }
      uint64_t v26 = (char *)sub_188C138((uint64_t)v8, v16);
      int v32 = v26;
      *(_DWORD *)(a1 + 32) = v27;
      if (!v26) {
        goto LABEL_53;
      }
      goto LABEL_38;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    unint64_t v20 = v8 + 1;
    LODWORD(v19) = *v8;
    if ((v19 & 0x80) == 0) {
      goto LABEL_31;
    }
    int v21 = *v20;
    uint64_t v19 = v19 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v20 = v8 + 2;
LABEL_31:
      int v32 = v20;
      *(_DWORD *)(a1 + 28) = v19;
      goto LABEL_38;
    }
    unint64_t v28 = (char *)sub_188C138((uint64_t)v8, v19);
    int v32 = v28;
    *(_DWORD *)(a1 + 28) = v29;
    if (!v28) {
      goto LABEL_53;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    uint64_t v22 = v8 + 1;
    unint64_t v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v25 = v23 + (v24 << 7);
    unint64_t v23 = (v25 - 128);
    if (v24 < 0)
    {
      int v32 = (char *)sub_188C138((uint64_t)v8, (v25 - 128));
      if (!v32) {
        goto LABEL_53;
      }
      unint64_t v23 = v30;
    }
    else
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      int v32 = v22;
    }
    if (v23 > 4)
    {
      if (*v7) {
        uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v23, v31);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v23;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v32;
    }
    int v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_53;
    }
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_53:
  int v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

unsigned char *sub_1580B98(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1580DB8(_DWORD *a1)
{
  int v2 = a1[4];
  if (v2)
  {
    int v4 = a1[6];
    if (v4 < 0)
    {
      uint64_t result = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t result = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v2 & 2) == 0) {
        goto LABEL_12;
      }
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
  }
  int v5 = a1[7];
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_12:
  if ((v2 & 4) != 0)
  {
    int v7 = a1[8];
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
  }
  return result;
}

uint64_t sub_1580E70(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 7) != 0)
  {
    uint64_t result = sub_1580DB8((_DWORD *)a1);
  }
  else
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v3 = 13;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 3;
    }
    int v5 = *(_DWORD *)(a1 + 28);
    if (v5 < 0) {
      uint64_t v6 = 10;
    }
    else {
      uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    }
    int v7 = *(_DWORD *)(a1 + 32);
    if (v7 < 0) {
      uint64_t v8 = 10;
    }
    else {
      uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
    }
    uint64_t result = v3 + v6 + v8;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_1580F60(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 7) == 0;
}

void *sub_1580F74@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.PlaceSearchRequest.SearchSubstring");
}

void *sub_1580F84(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_158102C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_15893BC(a1 + 10);
  sub_1889DE8(a1 + 7);
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_158102C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 104);
  uint64_t v2 = (void ***)(a1 + 104);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 112);
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_253E5A8)
  {
    uint64_t v5 = *(void *)(a1 + 120);
    if (v5)
    {
      sub_15763DC(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 128);
    if (v6)
    {
      sub_15743EC(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 136);
    if (v7)
    {
      sub_1573F3C(v7);
      operator delete();
    }
    uint64_t v8 = *(void **)(a1 + 144);
    if (v8)
    {
      sub_1576C14(v8);
      operator delete();
    }
    uint64_t v9 = *(void **)(a1 + 152);
    if (v9)
    {
      sub_157FE68(v9);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 160);
    if (result)
    {
      sub_1580834(result);
      operator delete();
    }
  }
  return result;
}

void sub_1581164(void *a1)
{
  sub_1580F84(a1);

  operator delete();
}

uint64_t sub_158119C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v140 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v140, a3[11].i32[1]) & 1) == 0)
  {
    int v7 = (uint64_t **)(a1 + 56);
    v139 = (uint64_t *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (unsigned __int8 *)(*(void *)v140 + 1);
      unsigned int v9 = **(unsigned char **)v140;
      if ((char)**(unsigned char **)v140 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if ((char)*v8 < 0)
        {
          uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v140, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = (unsigned __int8 *)(*(void *)v140 + 2);
        }
      }
      *(void *)v140 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 == 8)
          {
            unint64_t v12 = v8 - 1;
            while (1)
            {
              *(void *)v140 = v12 + 1;
              uint64_t v13 = v12[1];
              if ((char)v12[1] < 0)
              {
                int v14 = v13 + (v12[2] << 7);
                uint64_t v13 = (v14 - 128);
                if ((char)v12[2] < 0)
                {
                  unint64_t v12 = (unsigned __int8 *)sub_188C138((uint64_t)(v12 + 1), (v14 - 128));
                  uint64_t v13 = v15;
                }
                else
                {
                  v12 += 3;
                }
              }
              else
              {
                v12 += 2;
              }
              *(void *)v140 = v12;
              uint64_t v16 = *(unsigned int *)(a1 + 24);
              if (v16 == *(_DWORD *)(a1 + 28))
              {
                int v17 = v16 + 1;
                sub_188CA54((unsigned int *)(a1 + 24), v16 + 1);
                *(void *)(*(void *)(a1 + 32) + 8 * v16) = v13;
                unint64_t v12 = *(unsigned __int8 **)v140;
              }
              else
              {
                *(void *)(*(void *)(a1 + 32) + 8 * v16) = v13;
                int v17 = v16 + 1;
              }
              *(_DWORD *)(a1 + 24) = v17;
              if (!v12) {
                goto LABEL_240;
              }
              if (*(void *)a3 <= (unint64_t)v12 || *v12 != 8) {
                goto LABEL_231;
              }
            }
          }
          if (v9 == 10)
          {
            uint64_t v32 = (uint64_t)sub_188C2DC((unsigned int *)(a1 + 24), v8, (uint64_t)a3);
          }
          else
          {
LABEL_223:
            if (v9) {
              BOOL v136 = (v9 & 7) == 4;
            }
            else {
              BOOL v136 = 1;
            }
            if (v136)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_240:
              *(void *)v140 = 0;
              goto LABEL_2;
            }
            if (*v139)
            {
              v137 = (std::string *)((*v139 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v137 = (std::string *)sub_188DBD8(v139);
              uint64_t v8 = *(unsigned __int8 **)v140;
            }
            uint64_t v32 = (uint64_t)sub_1885AC0(v9, v137, (char *)v8, a3);
          }
LABEL_230:
          *(void *)v140 = v32;
          if (!v32) {
            goto LABEL_240;
          }
LABEL_231:
          if (sub_11947B8((uint64_t)a3, (char **)v140, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 2u:
          if (v9 == 16)
          {
            int v24 = v8 - 1;
            while (1)
            {
              *(void *)v140 = v24 + 1;
              uint64_t v25 = v24[1];
              if ((char)v24[1] < 0)
              {
                int v26 = v25 + (v24[2] << 7);
                uint64_t v25 = (v26 - 128);
                if ((char)v24[2] < 0)
                {
                  int v24 = (unsigned __int8 *)sub_188C138((uint64_t)(v24 + 1), (v26 - 128));
                  uint64_t v25 = v27;
                }
                else
                {
                  v24 += 3;
                }
              }
              else
              {
                v24 += 2;
              }
              *(void *)v140 = v24;
              uint64_t v28 = *(unsigned int *)(a1 + 40);
              if (v28 == *(_DWORD *)(a1 + 44))
              {
                int v29 = v28 + 1;
                sub_188CA54((unsigned int *)(a1 + 40), v28 + 1);
                *(void *)(*(void *)(a1 + 48) + 8 * v28) = v25;
                int v24 = *(unsigned __int8 **)v140;
              }
              else
              {
                *(void *)(*(void *)(a1 + 48) + 8 * v28) = v25;
                int v29 = v28 + 1;
              }
              *(_DWORD *)(a1 + 40) = v29;
              if (!v24) {
                goto LABEL_240;
              }
              if (*(void *)a3 <= (unint64_t)v24 || *v24 != 16) {
                goto LABEL_231;
              }
            }
          }
          if (v9 != 18) {
            goto LABEL_223;
          }
          uint64_t v32 = (uint64_t)sub_188C2EC((unsigned int *)(a1 + 40), v8, (uint64_t)a3);
          goto LABEL_230;
        case 3u:
          if (v9 != 26) {
            goto LABEL_223;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          unint64_t v30 = *(void **)(a1 + 120);
          if (!v30)
          {
            uint64_t v31 = (void *)(*v139 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v139) {
              uint64_t v31 = (void *)*v31;
            }
            unint64_t v30 = sub_15849F4((uint64_t)v31);
            *(void *)(a1 + 120) = v30;
            uint64_t v8 = *(unsigned __int8 **)v140;
          }
          uint64_t v32 = sub_1577B94(a3, (uint64_t)v30, v8);
          goto LABEL_230;
        case 4u:
          if (v9 != 34) {
            goto LABEL_223;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v33 = *(void *)(a1 + 128);
          if (!v33)
          {
            uint64_t v34 = (void *)(*v139 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v139) {
              uint64_t v34 = (void *)*v34;
            }
            sub_1584918((uint64_t)v34);
            uint64_t v33 = v35;
            *(void *)(a1 + 128) = v35;
            uint64_t v8 = *(unsigned __int8 **)v140;
          }
          uint64_t v32 = (uint64_t)sub_1552B00(a3, v33, v8);
          goto LABEL_230;
        case 5u:
          if (v9 != 42) {
            goto LABEL_223;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v36 = *(void *)(a1 + 8);
          int v37 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
          if (v36) {
            int v37 = (uint64_t *)*v37;
          }
          unsigned int v38 = (void *)(a1 + 104);
LABEL_172:
          uint64_t v98 = (std::string *)sub_1880F84(v38, v37);
          uint64_t v32 = (uint64_t)sub_188C244(v98, *(char **)v140, (uint64_t)a3);
          goto LABEL_230;
        case 6u:
          if (v9 != 50) {
            goto LABEL_223;
          }
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v39 = *(void *)(a1 + 136);
          if (!v39)
          {
            uint64_t v40 = (void *)(*v139 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v139) {
              uint64_t v40 = (void *)*v40;
            }
            sub_1584898((uint64_t)v40);
            uint64_t v39 = v41;
            *(void *)(a1 + 136) = v41;
            uint64_t v8 = *(unsigned __int8 **)v140;
          }
          uint64_t v32 = (uint64_t)sub_15608A0(a3, v39, v8);
          goto LABEL_230;
        case 7u:
        case 0xAu:
        case 0xBu:
        case 0x14u:
        case 0x17u:
        case 0x1Au:
        case 0x1Bu:
        case 0x1Cu:
        case 0x1Du:
        case 0x1Eu:
        case 0x1Fu:
        case 0x20u:
        case 0x23u:
        case 0x26u:
          goto LABEL_223;
        case 8u:
          if (v9 != 64) {
            goto LABEL_223;
          }
          v5 |= 0x200u;
          uint64_t v42 = (char *)(v8 + 1);
          uint64_t v43 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_74;
          }
          int v44 = *v42;
          uint64_t v43 = v43 + (v44 << 7) - 128;
          if (v44 < 0)
          {
            uint64_t v107 = sub_188C138((uint64_t)v8, v43);
            *(void *)v140 = v107;
            *(unsigned char *)(a1 + 172) = v108 != 0;
            if (!v107) {
              goto LABEL_240;
            }
          }
          else
          {
            uint64_t v42 = (char *)(v8 + 2);
LABEL_74:
            *(void *)v140 = v42;
            *(unsigned char *)(a1 + 172) = v43 != 0;
          }
          goto LABEL_231;
        case 9u:
          if (v9 != 72) {
            goto LABEL_223;
          }
          v5 |= 0x2000000u;
          uint64_t v46 = (char *)(v8 + 1);
          LODWORD(v45) = *v8;
          if ((v45 & 0x80) == 0) {
            goto LABEL_79;
          }
          int v47 = *v46;
          uint64_t v45 = v45 + (v47 << 7) - 128;
          if (v47 < 0)
          {
            uint64_t v109 = sub_188C138((uint64_t)v8, v45);
            *(void *)v140 = v109;
            *(_DWORD *)(a1 + 216) = v110;
            if (!v109) {
              goto LABEL_240;
            }
          }
          else
          {
            uint64_t v46 = (char *)(v8 + 2);
LABEL_79:
            *(void *)v140 = v46;
            *(_DWORD *)(a1 + 216) = v45;
          }
          goto LABEL_231;
        case 0xCu:
          if (v9 != 98) {
            goto LABEL_223;
          }
          *(_DWORD *)(a1 + 16) |= 0x20u;
          std::string::size_type v48 = *(void **)(a1 + 144);
          if (!v48)
          {
            uint64_t v49 = (void *)(*v139 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v139) {
              uint64_t v49 = (void *)*v49;
            }
            std::string::size_type v48 = sub_1584A90((uint64_t)v49);
            *(void *)(a1 + 144) = v48;
            uint64_t v8 = *(unsigned __int8 **)v140;
          }
          uint64_t v32 = (uint64_t)sub_1582050(a3, (uint64_t)v48, v8);
          goto LABEL_230;
        case 0xDu:
          if (v9 != 104) {
            goto LABEL_223;
          }
          uint64_t v50 = (char *)(v8 + 1);
          unint64_t v51 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_90;
          }
          int v52 = *v50;
          int v53 = v51 + (v52 << 7);
          unint64_t v51 = (v53 - 128);
          if (v52 < 0)
          {
            *(void *)v140 = sub_188C138((uint64_t)v8, (v53 - 128));
            if (!*(void *)v140) {
              goto LABEL_240;
            }
            unint64_t v51 = v111;
          }
          else
          {
            uint64_t v50 = (char *)(v8 + 2);
LABEL_90:
            *(void *)v140 = v50;
          }
          if (v51 > 2)
          {
            if (*v139) {
              v138 = (std::string *)((*v139 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              v138 = (std::string *)sub_188DBD8(v139);
            }
            sub_188C020(13, v51, v138);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 0x100u;
            *(_DWORD *)(a1 + 168) = v51;
          }
          goto LABEL_231;
        case 0xEu:
          if (v9 != 112) {
            goto LABEL_223;
          }
          v5 |= 0x400u;
          uint64_t v54 = (char *)(v8 + 1);
          uint64_t v55 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_97;
          }
          int v56 = *v54;
          uint64_t v55 = v55 + (v56 << 7) - 128;
          if (v56 < 0)
          {
            uint64_t v112 = sub_188C138((uint64_t)v8, v55);
            *(void *)v140 = v112;
            *(unsigned char *)(a1 + 173) = v113 != 0;
            if (!v112) {
              goto LABEL_240;
            }
          }
          else
          {
            uint64_t v54 = (char *)(v8 + 2);
LABEL_97:
            *(void *)v140 = v54;
            *(unsigned char *)(a1 + 173) = v55 != 0;
          }
          goto LABEL_231;
        case 0xFu:
          if (v9 != 120) {
            goto LABEL_223;
          }
          v5 |= 0x800u;
          uint64_t v57 = (char *)(v8 + 1);
          uint64_t v58 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_102;
          }
          int v59 = *v57;
          uint64_t v58 = v58 + (v59 << 7) - 128;
          if (v59 < 0)
          {
            uint64_t v114 = sub_188C138((uint64_t)v8, v58);
            *(void *)v140 = v114;
            *(unsigned char *)(a1 + 174) = v115 != 0;
            if (!v114) {
              goto LABEL_240;
            }
          }
          else
          {
            uint64_t v57 = (char *)(v8 + 2);
LABEL_102:
            *(void *)v140 = v57;
            *(unsigned char *)(a1 + 174) = v58 != 0;
          }
          goto LABEL_231;
        case 0x10u:
          if (v9 != 128) {
            goto LABEL_223;
          }
          v5 |= 0x4000u;
          unint64_t v61 = (char *)(v8 + 1);
          LODWORD(v60) = *v8;
          if ((v60 & 0x80) == 0) {
            goto LABEL_107;
          }
          int v62 = *v61;
          uint64_t v60 = v60 + (v62 << 7) - 128;
          if (v62 < 0)
          {
            uint64_t v116 = sub_188C138((uint64_t)v8, v60);
            *(void *)v140 = v116;
            *(_DWORD *)(a1 + 184) = v117;
            if (!v116) {
              goto LABEL_240;
            }
          }
          else
          {
            unint64_t v61 = (char *)(v8 + 2);
LABEL_107:
            *(void *)v140 = v61;
            *(_DWORD *)(a1 + 184) = v60;
          }
          goto LABEL_231;
        case 0x11u:
          if (v9 != 138) {
            goto LABEL_223;
          }
          uint64_t v63 = (const std::string::value_type *)(v8 - 2);
          while (1)
          {
            unint64_t v64 = (char *)(v63 + 2);
            *(void *)v140 = v63 + 2;
            uint64_t v65 = *(_DWORD **)(a1 + 72);
            if (v65 && (uint64_t v66 = *(int *)(a1 + 64), (int)v66 < *v65))
            {
              *(_DWORD *)(a1 + 64) = v66 + 1;
              uint64_t v67 = *(std::string **)&v65[2 * v66 + 2];
            }
            else
            {
              if (!*v7) {
                operator new();
              }
              *uint64_t v69 = v68;
              v69[1] = sub_3A6EDC;
              *uint64_t v68 = 0;
              v68[1] = 0;
              v68[2] = 0;
              uint64_t v67 = (std::string *)sub_188CDC8(a1 + 56, (uint64_t)v68);
              unint64_t v64 = *(char **)v140;
            }
            uint64_t v63 = sub_188C244(v67, v64, (uint64_t)a3);
            *(void *)v140 = v63;
            if (!v63) {
              goto LABEL_240;
            }
            if (*(void *)a3 <= (unint64_t)v63 || *(_WORD *)v63 != 394) {
              goto LABEL_231;
            }
          }
        case 0x12u:
          if (v9 != 144) {
            goto LABEL_223;
          }
          v5 |= 0x1000u;
          uint64_t v70 = (char *)(v8 + 1);
          uint64_t v71 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_124;
          }
          int v72 = *v70;
          uint64_t v71 = v71 + (v72 << 7) - 128;
          if (v72 < 0)
          {
            uint64_t v118 = sub_188C138((uint64_t)v8, v71);
            *(void *)v140 = v118;
            *(unsigned char *)(a1 + 175) = v119 != 0;
            if (!v118) {
              goto LABEL_240;
            }
          }
          else
          {
            uint64_t v70 = (char *)(v8 + 2);
LABEL_124:
            *(void *)v140 = v70;
            *(unsigned char *)(a1 + 175) = v71 != 0;
          }
          goto LABEL_231;
        case 0x13u:
          if (v9 != 153) {
            goto LABEL_223;
          }
          uint64_t v74 = *(void *)v8;
          uint64_t v73 = v8 + 8;
          v5 |= 0x2000u;
          *(void *)(a1 + 176) = v74;
          goto LABEL_162;
        case 0x15u:
          if (v9 != 168) {
            goto LABEL_223;
          }
          v5 |= 0x8000u;
          uint64_t v75 = (char *)(v8 + 1);
          uint64_t v76 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_131;
          }
          int v77 = *v75;
          uint64_t v76 = v76 + (v77 << 7) - 128;
          if (v77 < 0)
          {
            uint64_t v120 = sub_188C138((uint64_t)v8, v76);
            *(void *)v140 = v120;
            *(unsigned char *)(a1 + 188) = v121 != 0;
            if (!v120) {
              goto LABEL_240;
            }
          }
          else
          {
            uint64_t v75 = (char *)(v8 + 2);
LABEL_131:
            *(void *)v140 = v75;
            *(unsigned char *)(a1 + 188) = v76 != 0;
          }
          goto LABEL_231;
        case 0x16u:
          if (v9 != 178) {
            goto LABEL_223;
          }
          *(_DWORD *)(a1 + 16) |= 0x40u;
          uint64_t v78 = *(void *)(a1 + 152);
          if (!v78)
          {
            uint64_t v79 = (void *)(*v139 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v139) {
              uint64_t v79 = (void *)*v79;
            }
            uint64_t v78 = sub_15852A0((uint64_t)v79);
            *(void *)(a1 + 152) = v78;
            uint64_t v8 = *(unsigned __int8 **)v140;
          }
          uint64_t v32 = sub_15820E0(a3, v78, v8);
          goto LABEL_230;
        case 0x18u:
          if (v9 != 192) {
            goto LABEL_223;
          }
          v5 |= 0x10000u;
          uint64_t v80 = (char *)(v8 + 1);
          uint64_t v81 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_142;
          }
          int v82 = *v80;
          uint64_t v81 = v81 + (v82 << 7) - 128;
          if (v82 < 0)
          {
            uint64_t v122 = sub_188C138((uint64_t)v8, v81);
            *(void *)v140 = v122;
            *(unsigned char *)(a1 + 189) = v123 != 0;
            if (!v122) {
              goto LABEL_240;
            }
          }
          else
          {
            uint64_t v80 = (char *)(v8 + 2);
LABEL_142:
            *(void *)v140 = v80;
            *(unsigned char *)(a1 + 189) = v81 != 0;
          }
          goto LABEL_231;
        case 0x19u:
          if (v9 != 200) {
            goto LABEL_223;
          }
          v5 |= 0x20000u;
          int v83 = (char *)(v8 + 1);
          uint64_t v84 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_147;
          }
          int v85 = *v83;
          uint64_t v84 = v84 + (v85 << 7) - 128;
          if (v85 < 0)
          {
            uint64_t v124 = sub_188C138((uint64_t)v8, v84);
            *(void *)v140 = v124;
            *(unsigned char *)(a1 + 190) = v125 != 0;
            if (!v124) {
              goto LABEL_240;
            }
          }
          else
          {
            int v83 = (char *)(v8 + 2);
LABEL_147:
            *(void *)v140 = v83;
            *(unsigned char *)(a1 + 190) = v84 != 0;
          }
          goto LABEL_231;
        case 0x21u:
          if (v9 != 8) {
            goto LABEL_223;
          }
          v5 |= 0x40000u;
          uint64_t v86 = (char *)(v8 + 1);
          uint64_t v87 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_152;
          }
          int v88 = *v86;
          uint64_t v87 = v87 + (v88 << 7) - 128;
          if (v88 < 0)
          {
            uint64_t v126 = sub_188C138((uint64_t)v8, v87);
            *(void *)v140 = v126;
            *(unsigned char *)(a1 + 191) = v127 != 0;
            if (!v126) {
              goto LABEL_240;
            }
          }
          else
          {
            uint64_t v86 = (char *)(v8 + 2);
LABEL_152:
            *(void *)v140 = v86;
            *(unsigned char *)(a1 + 191) = v87 != 0;
          }
          goto LABEL_231;
        case 0x22u:
          if (v9 != 16) {
            goto LABEL_223;
          }
          v5 |= 0x80000u;
          unint64_t v89 = (char *)(v8 + 1);
          uint64_t v90 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_157;
          }
          int v91 = *v89;
          uint64_t v90 = v90 + (v91 << 7) - 128;
          if (v91 < 0)
          {
            uint64_t v128 = sub_188C138((uint64_t)v8, v90);
            *(void *)v140 = v128;
            *(unsigned char *)(a1 + 192) = v129 != 0;
            if (!v128) {
              goto LABEL_240;
            }
          }
          else
          {
            unint64_t v89 = (char *)(v8 + 2);
LABEL_157:
            *(void *)v140 = v89;
            *(unsigned char *)(a1 + 192) = v90 != 0;
          }
          goto LABEL_231;
        case 0x24u:
          if (v9 != 33) {
            goto LABEL_223;
          }
          uint64_t v92 = *(void *)v8;
          uint64_t v73 = v8 + 8;
          v5 |= 0x800000u;
          *(void *)(a1 + 200) = v92;
          goto LABEL_162;
        case 0x25u:
          if (v9 != 41) {
            goto LABEL_223;
          }
          uint64_t v93 = *(void *)v8;
          uint64_t v73 = v8 + 8;
          v5 |= 0x1000000u;
          *(void *)(a1 + 208) = v93;
LABEL_162:
          *(void *)v140 = v73;
          goto LABEL_231;
        case 0x27u:
          if (v9 != 56) {
            goto LABEL_223;
          }
          v5 |= 0x100000u;
          uint64_t v94 = (char *)(v8 + 1);
          uint64_t v95 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_167;
          }
          int v96 = *v94;
          uint64_t v95 = v95 + (v96 << 7) - 128;
          if (v96 < 0)
          {
            uint64_t v130 = sub_188C138((uint64_t)v8, v95);
            *(void *)v140 = v130;
            *(unsigned char *)(a1 + 193) = v131 != 0;
            if (!v130) {
              goto LABEL_240;
            }
          }
          else
          {
            uint64_t v94 = (char *)(v8 + 2);
LABEL_167:
            *(void *)v140 = v94;
            *(unsigned char *)(a1 + 193) = v95 != 0;
          }
          goto LABEL_231;
        default:
          switch(v9 >> 3)
          {
            case 'g':
              if (v9 != 58) {
                goto LABEL_223;
              }
              unint64_t v18 = (char *)(v8 - 2);
              while (1)
              {
                uint64_t v19 = (unsigned __int8 *)(v18 + 2);
                *(void *)v140 = v18 + 2;
                uint64_t v20 = *(_DWORD **)(a1 + 96);
                if (v20 && (uint64_t v21 = *(int *)(a1 + 88), (int)v21 < *v20))
                {
                  *(_DWORD *)(a1 + 88) = v21 + 1;
                  uint64_t v22 = *(void *)&v20[2 * v21 + 2];
                }
                else
                {
                  uint64_t v23 = sub_158534C(*(void *)(a1 + 80));
                  uint64_t v22 = sub_188CDC8(a1 + 80, v23);
                  uint64_t v19 = *(unsigned __int8 **)v140;
                }
                unint64_t v18 = sub_1582170(a3, v22, v19);
                *(void *)v140 = v18;
                if (!v18) {
                  goto LABEL_240;
                }
                if (*(void *)a3 <= (unint64_t)v18 || *(_WORD *)v18 != 1722) {
                  goto LABEL_231;
                }
              }
            case 'i':
              if (v9 != 74) {
                goto LABEL_223;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v97 = *(void *)(a1 + 8);
              int v37 = (uint64_t *)(v97 & 0xFFFFFFFFFFFFFFFCLL);
              if (v97) {
                int v37 = (uint64_t *)*v37;
              }
              unsigned int v38 = (void *)(a1 + 112);
              goto LABEL_172;
            case 'j':
              if (v9 != 82) {
                goto LABEL_223;
              }
              *(_DWORD *)(a1 + 16) |= 0x80u;
              uint64_t v99 = *(void *)(a1 + 160);
              if (!v99)
              {
                unint64_t v100 = (void *)(*v139 & 0xFFFFFFFFFFFFFFFCLL);
                if (*v139) {
                  unint64_t v100 = (void *)*v100;
                }
                uint64_t v99 = sub_158534C((uint64_t)v100);
                *(void *)(a1 + 160) = v99;
                uint64_t v8 = *(unsigned __int8 **)v140;
              }
              uint64_t v32 = (uint64_t)sub_1582170(a3, v99, v8);
              goto LABEL_230;
            case 'm':
              if (v9 != 104) {
                goto LABEL_223;
              }
              v5 |= 0x200000u;
              unint64_t v101 = (char *)(v8 + 1);
              uint64_t v102 = *v8;
              if (((char)*v8 & 0x80000000) == 0) {
                goto LABEL_183;
              }
              int v103 = *v101;
              uint64_t v102 = v102 + (v103 << 7) - 128;
              if (v103 < 0)
              {
                uint64_t v132 = sub_188C138((uint64_t)v8, v102);
                *(void *)v140 = v132;
                *(unsigned char *)(a1 + 194) = v133 != 0;
                if (!v132) {
                  goto LABEL_240;
                }
              }
              else
              {
                unint64_t v101 = (char *)(v8 + 2);
LABEL_183:
                *(void *)v140 = v101;
                *(unsigned char *)(a1 + 194) = v102 != 0;
              }
              goto LABEL_231;
            case 'o':
              if (v9 != 120) {
                goto LABEL_223;
              }
              v5 |= 0x400000u;
              uint64_t v104 = (char *)(v8 + 1);
              uint64_t v105 = *v8;
              if (((char)*v8 & 0x80000000) == 0) {
                goto LABEL_188;
              }
              int v106 = *v104;
              uint64_t v105 = v105 + (v106 << 7) - 128;
              if (v106 < 0)
              {
                uint64_t v134 = sub_188C138((uint64_t)v8, v105);
                *(void *)v140 = v134;
                *(unsigned char *)(a1 + 195) = v135 != 0;
                if (!v134) {
                  goto LABEL_240;
                }
              }
              else
              {
                uint64_t v104 = (char *)(v8 + 2);
LABEL_188:
                *(void *)v140 = v104;
                *(unsigned char *)(a1 + 195) = v105 != 0;
              }
              break;
            default:
              goto LABEL_223;
          }
          goto LABEL_231;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v140;
}

char *sub_1582050(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1576CE4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_15820E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_157FFB4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1582170(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1580908(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1582200(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 40);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8 * j);
      *__dst = 16;
      __dst[1] = v13;
      if (v13 > 0x7F)
      {
        __dst[1] = v13 | 0x80;
        unint64_t v14 = v13 >> 7;
        __dst[2] = v13 >> 7;
        __dst += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v15 = v14 >> 14;
            v14 >>= 7;
            *__dst++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if ((v16 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v17 = *(void *)(a1 + 120);
    *__dst = 26;
    unsigned int v18 = *(_DWORD *)(v17 + 20);
    __dst[1] = v18;
    if (v18 > 0x7F) {
      uint64_t v19 = sub_188A9CC(v18, __dst + 1);
    }
    else {
      uint64_t v19 = __dst + 2;
    }
    __dst = sub_1576820(v17, v19, a3);
    if ((v16 & 8) == 0)
    {
LABEL_21:
      if ((v16 & 1) == 0) {
        goto LABEL_22;
      }
      goto LABEL_38;
    }
  }
  else if ((v16 & 8) == 0)
  {
    goto LABEL_21;
  }
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v20 = *(void *)(a1 + 128);
  *__dst = 34;
  unsigned int v21 = *(_DWORD *)(v20 + 20);
  __dst[1] = v21;
  if (v21 > 0x7F) {
    uint64_t v22 = sub_188A9CC(v21, __dst + 1);
  }
  else {
    uint64_t v22 = __dst + 2;
  }
  __dst = sub_15746A8(v20, (unint64_t)v22, a3);
  if ((v16 & 1) == 0)
  {
LABEL_22:
    if ((v16 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_39;
  }
LABEL_38:
  __dst = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v16 & 0x10) == 0)
  {
LABEL_23:
    if ((v16 & 0x200) == 0) {
      goto LABEL_24;
    }
    goto LABEL_45;
  }
LABEL_39:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v23 = *(void *)(a1 + 136);
  *__dst = 50;
  unsigned int v24 = *(_DWORD *)(v23 + 20);
  __dst[1] = v24;
  if (v24 > 0x7F) {
    uint64_t v25 = sub_188A9CC(v24, __dst + 1);
  }
  else {
    uint64_t v25 = __dst + 2;
  }
  __dst = (char *)sub_15741C4(v23, (unint64_t)v25, a3);
  if ((v16 & 0x200) == 0)
  {
LABEL_24:
    if ((v16 & 0x2000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_48;
  }
LABEL_45:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v26 = *(unsigned char *)(a1 + 172);
  *__dst = 64;
  __dst[1] = v26;
  __dst += 2;
  if ((v16 & 0x2000000) != 0)
  {
LABEL_48:
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v27 = *(int *)(a1 + 216);
    *__dst = 72;
    __dst[1] = v27;
    if (v27 > 0x7F)
    {
      __dst[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      __dst[2] = v27 >> 7;
      __dst += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v29 = v28 >> 14;
          v28 >>= 7;
          *__dst++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      __dst += 2;
    }
  }
LABEL_54:
  if ((v16 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v30 = *(void *)(a1 + 144);
    *__dst = 98;
    unsigned int v31 = *(_DWORD *)(v30 + 20);
    __dst[1] = v31;
    if (v31 > 0x7F) {
      uint64_t v32 = sub_188A9CC(v31, __dst + 1);
    }
    else {
      uint64_t v32 = __dst + 2;
    }
    __dst = sub_1576ED4(v30, (unint64_t)v32, a3);
  }
  if ((v16 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v33 = *(int *)(a1 + 168);
    *__dst = 104;
    __dst[1] = v33;
    if (v33 > 0x7F)
    {
      __dst[1] = v33 | 0x80;
      unint64_t v34 = v33 >> 7;
      __dst[2] = v33 >> 7;
      __dst += 3;
      if (v33 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v35 = v34 >> 14;
          v34 >>= 7;
          *__dst++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v16 & 0x400) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v36 = *(unsigned char *)(a1 + 173);
    *__dst = 112;
    __dst[1] = v36;
    __dst += 2;
    if ((v16 & 0x800) == 0)
    {
LABEL_70:
      if ((v16 & 0x4000) == 0) {
        goto LABEL_84;
      }
      goto LABEL_78;
    }
  }
  else if ((v16 & 0x800) == 0)
  {
    goto LABEL_70;
  }
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v37 = *(unsigned char *)(a1 + 174);
  *__dst = 120;
  __dst[1] = v37;
  __dst += 2;
  if ((v16 & 0x4000) != 0)
  {
LABEL_78:
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v38 = *(int *)(a1 + 184);
    *(_WORD *)__dst = 384;
    __dst[2] = v38;
    if (v38 > 0x7F)
    {
      __dst[2] = v38 | 0x80;
      unint64_t v39 = v38 >> 7;
      __dst[3] = v38 >> 7;
      __dst += 4;
      if (v38 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v40 = v39 >> 14;
          v39 >>= 7;
          *__dst++ = v39;
        }
        while (v40);
      }
    }
    else
    {
      __dst += 3;
    }
  }
LABEL_84:
  uint64_t v41 = *(unsigned int *)(a1 + 64);
  if ((int)v41 >= 1)
  {
    uint64_t v42 = 0;
    uint64_t v43 = 8 * v41;
    do
    {
      int v44 = *(void **)(*(void *)(a1 + 72) + v42 + 8);
      if (*((char *)v44 + 23) < 0)
      {
        int64_t v45 = v44[1];
        if (v45 > 127) {
          goto LABEL_95;
        }
      }
      else
      {
        int64_t v45 = *((unsigned __int8 *)v44 + 23);
      }
      if (*(void *)a3 - (void)__dst + 13 >= v45)
      {
        *(_WORD *)__dst = 394;
        __dst[2] = v45;
        if (*((char *)v44 + 23) < 0) {
          int v44 = (void *)*v44;
        }
        uint64_t v46 = __dst + 3;
        memcpy(v46, v44, v45);
        __dst = &v46[v45];
        goto LABEL_93;
      }
LABEL_95:
      __dst = (char *)sub_188A868(a3, 17, (uint64_t)v44, __dst);
LABEL_93:
      v42 += 8;
    }
    while (v43 != v42);
  }
  if ((v16 & 0x1000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v47 = *(unsigned char *)(a1 + 175);
    *(_WORD *)__dst = 400;
    __dst[2] = v47;
    __dst += 3;
    if ((v16 & 0x2000) == 0)
    {
LABEL_98:
      if ((v16 & 0x8000) == 0) {
        goto LABEL_99;
      }
      goto LABEL_114;
    }
  }
  else if ((v16 & 0x2000) == 0)
  {
    goto LABEL_98;
  }
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v48 = *(void *)(a1 + 176);
  *(_WORD *)__dst = 409;
  *(void *)(__dst + 2) = v48;
  __dst += 10;
  if ((v16 & 0x8000) == 0)
  {
LABEL_99:
    if ((v16 & 0x40) == 0) {
      goto LABEL_100;
    }
    goto LABEL_117;
  }
LABEL_114:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v49 = *(unsigned char *)(a1 + 188);
  *(_WORD *)__dst = 424;
  __dst[2] = v49;
  __dst += 3;
  if ((v16 & 0x40) == 0)
  {
LABEL_100:
    if ((v16 & 0x10000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_123;
  }
LABEL_117:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v50 = *(void *)(a1 + 152);
  *(_WORD *)__dst = 434;
  unsigned int v51 = *(_DWORD *)(v50 + 20);
  __dst[2] = v51;
  if (v51 > 0x7F) {
    int v52 = sub_188A9CC(v51, __dst + 2);
  }
  else {
    int v52 = __dst + 3;
  }
  __dst = sub_1580368(v50, v52, a3);
  if ((v16 & 0x10000) == 0)
  {
LABEL_101:
    if ((v16 & 0x20000) == 0) {
      goto LABEL_102;
    }
    goto LABEL_126;
  }
LABEL_123:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v53 = *(unsigned char *)(a1 + 189);
  *(_WORD *)__dst = 448;
  __dst[2] = v53;
  __dst += 3;
  if ((v16 & 0x20000) == 0)
  {
LABEL_102:
    if ((v16 & 0x40000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_129;
  }
LABEL_126:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v54 = *(unsigned char *)(a1 + 190);
  *(_WORD *)__dst = 456;
  __dst[2] = v54;
  __dst += 3;
  if ((v16 & 0x40000) == 0)
  {
LABEL_103:
    if ((v16 & 0x80000) == 0) {
      goto LABEL_104;
    }
    goto LABEL_132;
  }
LABEL_129:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v55 = *(unsigned char *)(a1 + 191);
  *(_WORD *)__dst = 648;
  __dst[2] = v55;
  __dst += 3;
  if ((v16 & 0x80000) == 0)
  {
LABEL_104:
    if ((v16 & 0x800000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_135;
  }
LABEL_132:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v56 = *(unsigned char *)(a1 + 192);
  *(_WORD *)__dst = 656;
  __dst[2] = v56;
  __dst += 3;
  if ((v16 & 0x800000) == 0)
  {
LABEL_105:
    if ((v16 & 0x1000000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_138;
  }
LABEL_135:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v57 = *(void *)(a1 + 200);
  *(_WORD *)__dst = 673;
  *(void *)(__dst + 2) = v57;
  __dst += 10;
  if ((v16 & 0x1000000) == 0)
  {
LABEL_106:
    if ((v16 & 0x100000) == 0) {
      goto LABEL_144;
    }
    goto LABEL_141;
  }
LABEL_138:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v58 = *(void *)(a1 + 208);
  *(_WORD *)__dst = 681;
  *(void *)(__dst + 2) = v58;
  __dst += 10;
  if ((v16 & 0x100000) != 0)
  {
LABEL_141:
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v59 = *(unsigned char *)(a1 + 193);
    *(_WORD *)__dst = 696;
    __dst[2] = v59;
    __dst += 3;
  }
LABEL_144:
  int v60 = *(_DWORD *)(a1 + 88);
  if (v60)
  {
    for (int k = 0; k != v60; ++k)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v62 = *(void *)(*(void *)(a1 + 96) + 8 * k + 8);
      *(_WORD *)__dst = 1722;
      unsigned int v63 = *(_DWORD *)(v62 + 20);
      __dst[2] = v63;
      if (v63 > 0x7F) {
        unint64_t v64 = sub_188A9CC(v63, __dst + 2);
      }
      else {
        unint64_t v64 = __dst + 3;
      }
      __dst = sub_1580B98(v62, (unint64_t)v64, a3);
    }
  }
  if ((v16 & 2) != 0)
  {
    __dst = sub_117A0AC(a3, 105, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v16 & 0x80) == 0)
    {
LABEL_154:
      if ((v16 & 0x200000) == 0) {
        goto LABEL_155;
      }
      goto LABEL_164;
    }
  }
  else if ((v16 & 0x80) == 0)
  {
    goto LABEL_154;
  }
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v65 = *(void *)(a1 + 160);
  *(_WORD *)__dst = 1746;
  unsigned int v66 = *(_DWORD *)(v65 + 20);
  __dst[2] = v66;
  if (v66 > 0x7F) {
    uint64_t v67 = sub_188A9CC(v66, __dst + 2);
  }
  else {
    uint64_t v67 = __dst + 3;
  }
  __dst = sub_1580B98(v65, (unint64_t)v67, a3);
  if ((v16 & 0x200000) == 0)
  {
LABEL_155:
    if ((v16 & 0x400000) == 0) {
      goto LABEL_170;
    }
    goto LABEL_167;
  }
LABEL_164:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v68 = *(unsigned char *)(a1 + 194);
  *(_WORD *)__dst = 1768;
  __dst[2] = v68;
  __dst += 3;
  if ((v16 & 0x400000) != 0)
  {
LABEL_167:
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v69 = *(unsigned char *)(a1 + 195);
    *(_WORD *)__dst = 1784;
    __dst[2] = v69;
    __dst += 3;
  }
LABEL_170:
  uint64_t v70 = *(void *)(a1 + 8);
  if ((v70 & 1) == 0) {
    return __dst;
  }
  unint64_t v72 = v70 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v72 + 31) < 0)
  {
    uint64_t v73 = *(void **)(v72 + 8);
    uint64_t v74 = *(void *)(v72 + 16);
  }
  else
  {
    uint64_t v73 = (void *)(v72 + 8);
    LODWORD(v74) = *(unsigned __int8 *)(v72 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v74)
  {
    uint64_t v75 = (int)v74;
    memcpy(__dst, v73, (int)v74);
    __dst += v75;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v73, v74, __dst);
}

uint64_t sub_1582CDC(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  uint64_t v4 = sub_188D5A8((unsigned int *)(a1 + 40));
  uint64_t v5 = *(unsigned int *)(a1 + 64);
  uint64_t v6 = v2 + v4 + v3 + *(unsigned int *)(a1 + 40) + 2 * v5;
  if ((int)v5 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 72) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v6 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      --v5;
    }
    while (v5);
  }
  uint64_t v11 = *(int *)(a1 + 88);
  uint64_t v12 = v6 + 2 * v11;
  uint64_t v13 = *(void *)(a1 + 96);
  if (v13) {
    unint64_t v14 = (uint64_t *)(v13 + 8);
  }
  else {
    unint64_t v14 = 0;
  }
  if (v11)
  {
    uint64_t v15 = 8 * v11;
    do
    {
      uint64_t v16 = *v14++;
      uint64_t v17 = sub_1580E70(v16);
      v12 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      v15 -= 8;
    }
    while (v15);
  }
  int v18 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v18) {
    goto LABEL_22;
  }
  if (v18)
  {
    unint64_t v33 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v34 = *(unsigned __int8 *)(v33 + 23);
    uint64_t v35 = *(void *)(v33 + 8);
    if ((v34 & 0x80u) == 0) {
      uint64_t v35 = v34;
    }
    v12 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v18 & 2) == 0)
    {
LABEL_15:
      if ((v18 & 4) == 0) {
        goto LABEL_16;
      }
      goto LABEL_80;
    }
  }
  else if ((v18 & 2) == 0)
  {
    goto LABEL_15;
  }
  unint64_t v36 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v37 = *(unsigned __int8 *)(v36 + 23);
  uint64_t v38 = *(void *)(v36 + 8);
  if ((v37 & 0x80u) == 0) {
    uint64_t v38 = v37;
  }
  v12 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v18 & 4) == 0)
  {
LABEL_16:
    if ((v18 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t v39 = sub_15769F0(*(void *)(a1 + 120));
  v12 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v18 & 8) == 0)
  {
LABEL_17:
    if ((v18 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t v40 = sub_1574840(*(void *)(a1 + 128));
  v12 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v18 & 0x10) == 0)
  {
LABEL_18:
    if ((v18 & 0x20) == 0) {
      goto LABEL_19;
    }
LABEL_83:
    unint64_t v42 = sub_15770D8(*(void *)(a1 + 144));
    v12 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v18 & 0x40) == 0)
    {
LABEL_20:
      if ((v18 & 0x80) == 0) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
    goto LABEL_84;
  }
LABEL_82:
  uint64_t v41 = sub_1574360(*(void *)(a1 + 136));
  v12 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v18 & 0x20) != 0) {
    goto LABEL_83;
  }
LABEL_19:
  if ((v18 & 0x40) == 0) {
    goto LABEL_20;
  }
LABEL_84:
  uint64_t v43 = sub_1580590(*(void *)(a1 + 152));
  v12 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v18 & 0x80) != 0)
  {
LABEL_21:
    uint64_t v19 = sub_1580E70(*(void *)(a1 + 160));
    v12 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_22:
  if ((v18 & 0xFF00) != 0)
  {
    if ((v18 & 0x100) != 0)
    {
      int v20 = *(_DWORD *)(a1 + 168);
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v20 >= 0) {
        uint64_t v22 = v21;
      }
      else {
        uint64_t v22 = 11;
      }
      v12 += v22;
    }
    uint64_t v23 = v12 + 2;
    if ((v18 & 0x200) == 0) {
      uint64_t v23 = v12;
    }
    if ((v18 & 0x400) != 0) {
      v23 += 2;
    }
    if ((v18 & 0x800) != 0) {
      v23 += 2;
    }
    if ((v18 & 0x1000) != 0) {
      v23 += 3;
    }
    if ((v18 & 0x2000) != 0) {
      v23 += 10;
    }
    if ((v18 & 0x4000) != 0)
    {
      int v24 = *(_DWORD *)(a1 + 184);
      uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v24 >= 0) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 12;
      }
      v23 += v26;
    }
    if ((v18 & 0x8000) != 0) {
      uint64_t v12 = v23 + 3;
    }
    else {
      uint64_t v12 = v23;
    }
  }
  if ((v18 & 0xFF0000) != 0)
  {
    uint64_t v27 = v12 + 3;
    if ((v18 & 0x10000) == 0) {
      uint64_t v27 = v12;
    }
    if ((v18 & 0x20000) != 0) {
      v27 += 3;
    }
    if ((v18 & 0x40000) != 0) {
      v27 += 3;
    }
    if ((v18 & 0x80000) != 0) {
      v27 += 3;
    }
    if ((v18 & 0x100000) != 0) {
      v27 += 3;
    }
    if ((v18 & 0x200000) != 0) {
      v27 += 3;
    }
    if ((v18 & 0x400000) != 0) {
      v27 += 3;
    }
    if ((v18 & 0x800000) != 0) {
      uint64_t v12 = v27 + 10;
    }
    else {
      uint64_t v12 = v27;
    }
  }
  if ((v18 & 0x3000000) != 0)
  {
    if ((v18 & 0x1000000) != 0) {
      v12 += 10;
    }
    if ((v18 & 0x2000000) != 0)
    {
      int v28 = *(_DWORD *)(a1 + 216);
      uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v28 >= 0) {
        uint64_t v30 = v29;
      }
      else {
        uint64_t v30 = 11;
      }
      v12 += v30;
    }
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if (v31)
  {
    unint64_t v44 = v31 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v44 + 31) < 0) {
      uint64_t v45 = *(void *)(v44 + 16);
    }
    else {
      uint64_t v45 = *(unsigned __int8 *)(v44 + 31);
    }
    v12 += v45;
  }
  *(_DWORD *)(a1 + 20) = v12;
  return v12;
}

void *sub_1583144@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.PlaceSearchRequest");
}

uint64_t sub_1583154(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15831F4(uint64_t a1)
{
  sub_1583154(a1);

  operator delete();
}

uint64_t sub_158322C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1583274(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)uint64_t v19 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    unint64_t v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v19 = v14;
    if (!v14) {
      goto LABEL_31;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 == 17)
  {
    v5 |= 2u;
    *(void *)(a1 + 32) = *(void *)v7;
    *(void *)uint64_t v19 = v7 + 8;
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v19;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  *(void *)uint64_t v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_1583410(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 17;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    uint64_t v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    uint64_t v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_1583514(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t result = sub_146A748(a1);
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 10;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_15835BC(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_15835D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.PlaceResult.NamedFeature");
}

uint64_t sub_15835E0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  int v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253E688)
  {
    uint64_t v6 = *(void **)(a1 + 80);
    if (v6)
    {
      sub_15771A0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_158943C((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15836C0(uint64_t a1)
{
  sub_15835E0(a1);

  operator delete();
}

uint64_t sub_15836F8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v9 = (unsigned __int8 *)(*(void *)v37 + 1);
    unsigned int v10 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        unsigned int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v37, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unsigned int v9 = (unsigned __int8 *)(*(void *)v37 + 2);
      }
    }
    *(void *)uint64_t v37 = v9;
    unsigned int v13 = v10 >> 3;
    if (v10 >> 3 <= 3) {
      break;
    }
    if (v13 != 4)
    {
      if (v13 == 102)
      {
        if (v10 == 50)
        {
          uint64_t v25 = (const std::string::value_type *)(v9 - 2);
          while (1)
          {
            uint64_t v26 = (char *)(v25 + 2);
            *(void *)uint64_t v37 = v25 + 2;
            uint64_t v27 = *(_DWORD **)(a1 + 40);
            if (v27 && (uint64_t v28 = *(int *)(a1 + 32), (int)v28 < *v27))
            {
              *(_DWORD *)(a1 + 32) = v28 + 1;
              uint64_t v29 = *(std::string **)&v27[2 * v28 + 2];
            }
            else
            {
              if (!*v7) {
                operator new();
              }
              *uint64_t v31 = v30;
              v31[1] = sub_3A6EDC;
              *uint64_t v30 = 0;
              v30[1] = 0;
              v30[2] = 0;
              uint64_t v29 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v30);
              uint64_t v26 = *(char **)v37;
            }
            uint64_t v25 = sub_188C244(v29, v26, (uint64_t)a3);
            *(void *)uint64_t v37 = v25;
            if (!v25) {
              goto LABEL_64;
            }
            if (*(void *)a3 <= (unint64_t)v25 || *(_WORD *)v25 != 1714) {
              goto LABEL_59;
            }
          }
        }
      }
      else if (v13 == 103 && v10 == 58)
      {
        unint64_t v14 = v9 - 2;
        while (1)
        {
          uint64_t v15 = v14 + 2;
          *(void *)uint64_t v37 = v14 + 2;
          uint64_t v16 = *(_DWORD **)(a1 + 64);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 56), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 56) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            uint64_t v19 = sub_15854AC(*(void *)(a1 + 48));
            uint64_t v18 = sub_188CDC8(a1 + 48, (uint64_t)v19);
            uint64_t v15 = *(unsigned __int8 **)v37;
          }
          unint64_t v14 = (unsigned __int8 *)sub_1583B14(a3, v18, v15);
          *(void *)uint64_t v37 = v14;
          if (!v14) {
            goto LABEL_64;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *(_WORD *)v14 != 1722) {
            goto LABEL_59;
          }
        }
      }
      goto LABEL_51;
    }
    if (v10 != 34) {
      goto LABEL_51;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    uint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 72), v22);
    uint64_t v24 = (uint64_t)sub_188C244(v23, *(char **)v37, (uint64_t)a3);
LABEL_58:
    *(void *)uint64_t v37 = v24;
    if (!v24) {
      goto LABEL_64;
    }
LABEL_59:
    if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v13 == 1)
  {
    if (v10 != 10) {
      goto LABEL_51;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v32 = *(void *)(a1 + 80);
    if (!v32)
    {
      unint64_t v33 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v8) {
        unint64_t v33 = (void *)*v33;
      }
      sub_1584B0C((uint64_t)v33);
      uint64_t v32 = v34;
      *(void *)(a1 + 80) = v34;
      unsigned int v9 = *(unsigned __int8 **)v37;
    }
    uint64_t v24 = sub_1583A84(a3, v32, v9);
    goto LABEL_58;
  }
  if (v13 == 2 && v10 == 17)
  {
    v5 |= 4u;
    *(void *)(a1 + 88) = *(void *)v9;
    *(void *)uint64_t v37 = v9 + 8;
    goto LABEL_59;
  }
LABEL_51:
  if (v10) {
    BOOL v35 = (v10 & 7) == 4;
  }
  else {
    BOOL v35 = 1;
  }
  if (!v35)
  {
    if (*v8)
    {
      unint64_t v36 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v9 = *(unsigned __int8 **)v37;
    }
    uint64_t v24 = (uint64_t)sub_1885AC0(v10, v36, (char *)v9, a3);
    goto LABEL_58;
  }
  if (v9)
  {
    a3[10].i32[0] = v10 - 1;
    goto LABEL_2;
  }
LABEL_64:
  *(void *)uint64_t v37 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v37;
}

uint64_t sub_1583A84(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1577528(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1583B14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1583274(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1583BA4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v20 = *(void *)(a1 + 80);
    char *v4 = 10;
    unsigned int v21 = *(_DWORD *)(v20 + 20);
    v4[1] = v21;
    if (v21 > 0x7F) {
      uint64_t v22 = sub_188A9CC(v21, v4 + 1);
    }
    else {
      uint64_t v22 = v4 + 2;
    }
    uint64_t v4 = sub_1577CB4(v20, (unint64_t)v22, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 1) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v23 = *(void *)(a1 + 88);
  char *v4 = 17;
  *(void *)(v4 + 1) = v23;
  v4 += 9;
  if (v6) {
LABEL_4:
  }
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(unsigned int *)(a1 + 32);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      unsigned int v10 = *(void **)(*(void *)(a1 + 40) + v8 + 8);
      if (*((char *)v10 + 23) < 0)
      {
        int64_t v11 = v10[1];
        if (v11 > 127) {
          goto LABEL_16;
        }
      }
      else
      {
        int64_t v11 = *((unsigned __int8 *)v10 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v11)
      {
        *(_WORD *)uint64_t v4 = 1714;
        v4[2] = v11;
        if (*((char *)v10 + 23) < 0) {
          unsigned int v10 = (void *)*v10;
        }
        unsigned int v12 = v4 + 3;
        memcpy(v12, v10, v11);
        uint64_t v4 = &v12[v11];
        goto LABEL_14;
      }
LABEL_16:
      uint64_t v4 = (char *)sub_188A868(a3, 102, (uint64_t)v10, v4);
LABEL_14:
      v8 += 8;
    }
    while (v9 != v8);
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 1722;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[2] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 2);
      }
      else {
        uint64_t v17 = v4 + 3;
      }
      uint64_t v4 = sub_1583410(v15, v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_1583E5C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) != 0)
  {
    uint64_t v3 = sub_15781F8(*(void *)(a1 + 80));
    uint64_t v2 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = *(unsigned int *)(a1 + 32);
  uint64_t v5 = v2 + 2 * v4;
  if ((int)v4 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
      uint64_t v9 = *(void *)(v7 + 8);
      if ((v8 & 0x80u) == 0) {
        uint64_t v9 = v8;
      }
      v5 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      --v4;
    }
    while (v4);
  }
  uint64_t v10 = *(int *)(a1 + 56);
  uint64_t v11 = v5 + 2 * v10;
  uint64_t v12 = *(void *)(a1 + 64);
  if (v12) {
    int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1583514(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 16);
  if (v17)
  {
    unint64_t v18 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
    uint64_t v20 = *(void *)(v18 + 8);
    if ((v19 & 0x80u) == 0) {
      uint64_t v20 = v19;
    }
    v11 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v17 & 4) != 0) {
    uint64_t result = v11 + 9;
  }
  else {
    uint64_t result = v11;
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v23 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    result += v24;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_1583FE8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.PlaceResult");
}

uint64_t sub_1583FF8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253E6E8)
  {
    int v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_1573F3C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_15894BC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15840BC(uint64_t a1)
{
  sub_1583FF8(a1);

  operator delete();
}

char *sub_15840F4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v33 + 2;
      }
    }
    unint64_t v33 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 <= 2)
    {
      if (v12 != 1)
      {
        if (v12 == 2 && v9 == 18)
        {
          uint64_t v14 = v8 - 1;
          while (1)
          {
            uint64_t v15 = (unsigned __int8 *)(v14 + 1);
            unint64_t v33 = v14 + 1;
            uint64_t v16 = *(_DWORD **)(a1 + 40);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 32) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              uint64_t v19 = sub_1585530(*(void *)(a1 + 24));
              uint64_t v18 = sub_188CDC8(a1 + 24, (uint64_t)v19);
              uint64_t v15 = (unsigned __int8 *)v33;
            }
            uint64_t v14 = (char *)sub_1552C64(a3, v18, v15);
            unint64_t v33 = v14;
            if (!v14) {
              goto LABEL_63;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_52;
            }
          }
        }
        goto LABEL_44;
      }
      if (v9 != 8) {
        goto LABEL_44;
      }
      uint64_t v20 = v8 + 1;
      unint64_t v21 = *v8;
      if (*v8 < 0)
      {
        int v22 = *v20;
        int v23 = v21 + (v22 << 7);
        unint64_t v21 = (v23 - 128);
        if (v22 < 0)
        {
          unint64_t v33 = (char *)sub_188C138((uint64_t)v8, (v23 - 128));
          if (!v33) {
            goto LABEL_63;
          }
          unint64_t v21 = v32;
          goto LABEL_33;
        }
        uint64_t v20 = v8 + 2;
      }
      unint64_t v33 = v20;
LABEL_33:
      if (v21 > 0x1E || ((1 << v21) & 0x40100023) == 0)
      {
        if (*v7) {
          uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v21, v31);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        *(_DWORD *)(a1 + 56) = v21;
      }
      goto LABEL_52;
    }
    if (v12 != 3) {
      break;
    }
    if (v9 != 26) {
      goto LABEL_44;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v25 = *(void *)(a1 + 48);
    if (!v25)
    {
      uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v26 = (void *)*v26;
      }
      sub_1584898((uint64_t)v26);
      uint64_t v25 = v27;
      *(void *)(a1 + 48) = v27;
      uint64_t v8 = v33;
    }
    uint64_t v28 = sub_15608A0(a3, v25, (unsigned __int8 *)v8);
LABEL_51:
    unint64_t v33 = v28;
    if (!v28) {
      goto LABEL_63;
    }
LABEL_52:
    if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 101 && v9 == 41)
  {
    v5 |= 4u;
    *(void *)(a1 + 64) = *(void *)v8;
    unint64_t v33 = v8 + 8;
    goto LABEL_52;
  }
LABEL_44:
  if (v9) {
    BOOL v29 = (v9 & 7) == 4;
  }
  else {
    BOOL v29 = 1;
  }
  if (!v29)
  {
    if (*v7)
    {
      uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v33;
    }
    uint64_t v28 = (char *)sub_1885AC0(v9, v30, v8, a3);
    goto LABEL_51;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_63:
  unint64_t v33 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v33;
}

unsigned char *sub_1584404(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_1583BA4(v12, (unint64_t)v14, a3);
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 48);
    unsigned char *v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_15741C4(v15, (unint64_t)v17, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 64);
    *(_WORD *)uint64_t v4 = 1705;
    *(void *)(v4 + 2) = v18;
    v4 += 10;
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1584664(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    int v4 = *(_DWORD *)(a1 + 56);
    if (v4 < 0) {
      uint64_t v3 = 11;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(int *)(a1 + 32);
  uint64_t v6 = v3 + v5;
  uint64_t v7 = *(void *)(a1 + 40);
  if (v7) {
    unint64_t v8 = (uint64_t *)(v7 + 8);
  }
  else {
    unint64_t v8 = 0;
  }
  if (v5)
  {
    uint64_t v9 = 8 * v5;
    do
    {
      uint64_t v10 = *v8++;
      uint64_t v11 = sub_1583E5C(v10);
      v6 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6);
      v9 -= 8;
    }
    while (v9);
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if (v2)
  {
    uint64_t v12 = sub_1574360(*(void *)(a1 + 48));
    v6 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v2 & 4) != 0) {
    uint64_t result = v6 + 10;
  }
  else {
    uint64_t result = v6;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v15 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    result += v16;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_1584788@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "partner.PlaceSearchResponse");
}

void *sub_1584798(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C1E10;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_158481C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C1E90;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_1584898(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C1F10;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

double sub_1584918(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24C1F90;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

void *sub_1584994(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_15748FC(v2, a1, 0);
}

void *sub_15849F4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_24C2090;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_1584A90(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24C2110;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_1584B0C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24C2190;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = &qword_2550250;
  *(void *)(v2 + 80) = &qword_2550250;
  *(void *)(v2 + 88) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 124) = 0u;
  *(_DWORD *)(v2 + 140) = 1;
  return result;
}

void *sub_1584BD4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24C2210;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_1584C58(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24C2290;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_1584CE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_24C2310;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[9] = 0;
  result[10] = 0;
  result[8] = 0;
  return result;
}

uint64_t sub_1584D8C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C2390;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1584E14(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C2410;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1584EB0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C2490;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 0;
  return result;
}

uint64_t sub_1584F2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C2510;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_1584FD0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24C2590;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

uint64_t sub_1585058(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24C2610;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1585100(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C2690;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_15851A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_157D80C(v2, a1, 0);
}

void *sub_1585208(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24C2790;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  return result;
}

uint64_t sub_15852A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C2810;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(unsigned char *)(result + 72) = 0;
  return result;
}

uint64_t sub_158534C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C2890;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_15853C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24C2910;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 104) = &qword_2550250;
  *(void *)(v2 + 112) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(_OWORD *)(v2 + 184) = 0u;
  *(_OWORD *)(v2 + 200) = 0u;
  *(_DWORD *)(v2 + 216) = 10;
  return result;
}

void *sub_15854AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24C2990;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_1585530(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_24C2A10;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[10] = 0;
  result[11] = 0;
  result[9] = &qword_2550250;
  return result;
}

uint64_t sub_15855E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C2A90;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(void *)(result + 64) = 0;
  return result;
}

void sub_1585684()
{
}

void *sub_15856DC(uint64_t a1, uint64_t a2)
{
  return sub_1584798(a2);
}

uint64_t sub_15856E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15856EC()
{
}

void *sub_158573C(uint64_t a1, uint64_t a2)
{
  return sub_158481C(a2);
}

uint64_t sub_1585744(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_158574C()
{
}

double sub_15857A0(uint64_t a1, uint64_t a2)
{
  return sub_1584898(a2);
}

uint64_t sub_15857A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15857B0()
{
}

double sub_1585800(uint64_t a1, uint64_t a2)
{
  return sub_1584918(a2);
}

uint64_t sub_1585808(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585810()
{
}

void *sub_1585854(uint64_t a1, uint64_t a2)
{
  return sub_1584994(a2);
}

uint64_t sub_158585C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585864()
{
}

void *sub_15858B8(uint64_t a1, uint64_t a2)
{
  return sub_15849F4(a2);
}

uint64_t sub_15858C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15858C8()
{
}

void *sub_1585918(uint64_t a1, uint64_t a2)
{
  return sub_1584A90(a2);
}

uint64_t sub_1585920(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585928()
{
}

double sub_158599C(uint64_t a1, uint64_t a2)
{
  return sub_1584B0C(a2);
}

uint64_t sub_15859A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15859AC()
{
}

void *sub_1585A04(uint64_t a1, uint64_t a2)
{
  return sub_1584BD4(a2);
}

uint64_t sub_1585A0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585A14()
{
}

void *sub_1585A70(uint64_t a1, uint64_t a2)
{
  return sub_1584C58(a2);
}

uint64_t sub_1585A78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585A80()
{
}

void *sub_1585AE4(uint64_t a1, uint64_t a2)
{
  return sub_1584CE0(a2);
}

uint64_t sub_1585AEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585AF4()
{
}

uint64_t sub_1585B50(uint64_t a1, uint64_t a2)
{
  return sub_1584D8C(a2);
}

uint64_t sub_1585B58(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585B60()
{
}

uint64_t sub_1585BB4(uint64_t a1, uint64_t a2)
{
  return sub_1584E14(a2);
}

uint64_t sub_1585BBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585BC4()
{
}

uint64_t sub_1585C14(uint64_t a1, uint64_t a2)
{
  return sub_1584EB0(a2);
}

uint64_t sub_1585C1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585C24()
{
}

uint64_t sub_1585C78(uint64_t a1, uint64_t a2)
{
  return sub_1584F2C(a2);
}

uint64_t sub_1585C80(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

void sub_1585C88()
{
}

void *sub_1585CE4(uint64_t a1, uint64_t a2)
{
  return sub_1584FD0(a2);
}

uint64_t sub_1585CEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585CF4()
{
}

uint64_t sub_1585D54(uint64_t a1, uint64_t a2)
{
  return sub_1585058(a2);
}

uint64_t sub_1585D5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585D64()
{
}

uint64_t sub_1585DC4(uint64_t a1, uint64_t a2)
{
  return sub_1585100(a2);
}

uint64_t sub_1585DCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585DD4()
{
}

void *sub_1585E18(uint64_t a1, uint64_t a2)
{
  return sub_15851A8(a2);
}

uint64_t sub_1585E20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585E28()
{
}

void *sub_1585E78(uint64_t a1, uint64_t a2)
{
  return sub_1585208(a2);
}

uint64_t sub_1585E80(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585E88()
{
}

uint64_t sub_1585EE0(uint64_t a1, uint64_t a2)
{
  return sub_15852A0(a2);
}

uint64_t sub_1585EE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585EF0()
{
}

uint64_t sub_1585F40(uint64_t a1, uint64_t a2)
{
  return sub_158534C(a2);
}

uint64_t sub_1585F48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585F50()
{
}

double sub_1585FD8(uint64_t a1, uint64_t a2)
{
  return sub_15853C8(a2);
}

uint64_t sub_1585FE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1585FE8()
{
}

void *sub_1586040(uint64_t a1, uint64_t a2)
{
  return sub_15854AC(a2);
}

uint64_t sub_1586048(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586050()
{
}

void *sub_15860B4(uint64_t a1, uint64_t a2)
{
  return sub_1585530(a2);
}

uint64_t sub_15860BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15860C4()
{
}

uint64_t sub_158611C(uint64_t a1, uint64_t a2)
{
  return sub_15855E4(a2);
}

uint64_t sub_1586124(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_158612C()
{
}

uint64_t sub_158617C(uint64_t a1, uint64_t a2)
{
  return sub_1562FC8(a2);
}

uint64_t sub_1586184(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_158618C()
{
}

void sub_15861D4()
{
}

uint64_t sub_15861F8(uint64_t a1, uint64_t a2)
{
  return sub_1563044(a2);
}

uint64_t sub_1586200(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1586208()
{
}

uint64_t sub_158625C(uint64_t a1, uint64_t a2)
{
  return sub_15630A0(a2);
}

uint64_t sub_1586264(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_158626C()
{
}

uint64_t sub_15862CC(uint64_t a1, uint64_t a2)
{
  return sub_1563140(a2);
}

uint64_t sub_15862D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15862DC()
{
}

uint64_t sub_1586330(uint64_t a1, uint64_t a2)
{
  return sub_15631CC(a2);
}

uint64_t sub_1586338(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586340()
{
}

void sub_1586388()
{
}

uint64_t sub_15863AC(uint64_t a1, uint64_t a2)
{
  return sub_156324C(a2);
}

uint64_t sub_15863B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_15863BC()
{
}

uint64_t sub_158640C(uint64_t a1, uint64_t a2)
{
  return sub_15632A8(a2);
}

uint64_t sub_1586414(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_158641C()
{
}

uint64_t sub_1586494(uint64_t a1, uint64_t a2)
{
  return sub_1563324(a2);
}

uint64_t sub_158649C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15864A4()
{
}

double sub_1586518(uint64_t a1, uint64_t a2)
{
  return sub_15633E4(a2);
}

uint64_t sub_1586520(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586528()
{
}

double sub_158657C(uint64_t a1, uint64_t a2)
{
  return sub_1563484(a2);
}

uint64_t sub_1586584(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_158658C()
{
}

uint64_t sub_15865E0(uint64_t a1, uint64_t a2)
{
  return sub_1563504(a2);
}

uint64_t sub_15865E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15865F0()
{
}

void *sub_1586640(uint64_t a1, uint64_t a2)
{
  return sub_15635A0(a2);
}

uint64_t sub_1586648(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586650()
{
}

void *sub_15866A0(uint64_t a1, uint64_t a2)
{
  return sub_156361C(a2);
}

uint64_t sub_15866A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15866B0()
{
}

void *sub_1586704(uint64_t a1, uint64_t a2)
{
  return sub_1563698(a2);
}

uint64_t sub_158670C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586714()
{
}

void *sub_1586760(uint64_t a1, uint64_t a2)
{
  return sub_1563734(a2);
}

uint64_t sub_1586768(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586770()
{
}

double sub_15867C8(uint64_t a1, uint64_t a2)
{
  return sub_15637AC(a2);
}

uint64_t sub_15867D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15867D8()
{
}

void sub_1586820()
{
}

uint64_t sub_1586844(uint64_t a1, uint64_t a2)
{
  return sub_1563830(a2);
}

uint64_t sub_158684C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1586854()
{
}

void sub_158689C()
{
}

uint64_t sub_15868C0(uint64_t a1, uint64_t a2)
{
  return sub_156388C(a2);
}

uint64_t sub_15868C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_15868D0()
{
}

uint64_t sub_1586924(uint64_t a1, uint64_t a2)
{
  return sub_1572C60(a2);
}

uint64_t sub_158692C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586934()
{
}

double sub_1586988(uint64_t a1, uint64_t a2)
{
  return sub_1572CE0(a2);
}

uint64_t sub_1586990(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586998()
{
}

double sub_1586A08(uint64_t a1, uint64_t a2)
{
  return sub_1572D60(a2);
}

uint64_t sub_1586A10(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586A18()
{
}

uint64_t sub_1586A68(uint64_t a1, uint64_t a2)
{
  return sub_1572DFC(a2);
}

uint64_t sub_1586A70(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586A78()
{
}

double sub_1586ACC(uint64_t a1, uint64_t a2)
{
  return sub_1572E78(a2);
}

uint64_t sub_1586AD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586ADC()
{
}

void *sub_1586B2C(uint64_t a1, uint64_t a2)
{
  return sub_1572EF8(a2);
}

uint64_t sub_1586B34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586B3C()
{
}

double sub_1586B98(uint64_t a1, uint64_t a2)
{
  return sub_1572F74(a2);
}

uint64_t sub_1586BA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586BA8()
{
}

double sub_1586C04(uint64_t a1, uint64_t a2)
{
  return sub_157302C(a2);
}

uint64_t sub_1586C0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586C14()
{
}

uint64_t sub_1586C74(uint64_t a1, uint64_t a2)
{
  return sub_15730B4(a2);
}

uint64_t sub_1586C7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586C84()
{
}

double sub_1586CE8(uint64_t a1, uint64_t a2)
{
  return sub_1573140(a2);
}

uint64_t sub_1586CF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586CF8()
{
}

void *sub_1586D4C(uint64_t a1, uint64_t a2)
{
  return sub_15731D0(a2);
}

uint64_t sub_1586D54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586D5C()
{
}

uint64_t sub_1586DB0(uint64_t a1, uint64_t a2)
{
  return sub_1573250(a2);
}

uint64_t sub_1586DB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586DC0()
{
}

void *sub_1586E10(uint64_t a1, uint64_t a2)
{
  return sub_15732D0(a2);
}

uint64_t sub_1586E18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586E20()
{
}

double sub_1586E78(uint64_t a1, uint64_t a2)
{
  return sub_157334C(a2);
}

uint64_t sub_1586E80(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586E88()
{
}

uint64_t sub_1586EE4(uint64_t a1, uint64_t a2)
{
  return sub_15733D0(a2);
}

uint64_t sub_1586EEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586EF4()
{
}

double sub_1586F48(uint64_t a1, uint64_t a2)
{
  return sub_1573480(a2);
}

uint64_t sub_1586F50(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586F58()
{
}

double sub_1586FAC(uint64_t a1, uint64_t a2)
{
  return sub_1573500(a2);
}

uint64_t sub_1586FB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1586FBC()
{
}

double sub_1587024(uint64_t a1, uint64_t a2)
{
  return sub_1573580(a2);
}

uint64_t sub_158702C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1587034()
{
}

void *sub_1587078(uint64_t a1, uint64_t a2)
{
  return sub_1573614(a2);
}

uint64_t sub_1587080(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1587088(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1555A68(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1587108(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1553094(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1587188(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1556018(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1587208(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1553834(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1587288(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_155695C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1587308(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1573B90(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1587388(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_155D76C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1587408(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_155C64C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1587488(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_155F290(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1587508(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15570D4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1587588(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1583FF8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1587608(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_155AD20(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1587688(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_155BEA8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_1587708(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_15630A0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unsigned int v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1587784(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1587784(uint64_t a1, std::string *a2)
{
  return sub_1555F30(a2, a1);
}

uint64_t *sub_1587794(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1562FC8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unsigned int v13 = *v7++;
      uint64_t result = (uint64_t *)sub_122C7C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1587810(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1563140(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unsigned int v13 = *v7++;
      uint64_t result = (uint64_t *)sub_158788C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_158788C(uint64_t a1, std::string *a2)
{
  return sub_1555900(a2, a1);
}

void sub_158789C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1563044(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1587918(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1587918(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_1587928(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_15631CC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_15879A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_15879A4(uint64_t a1, std::string *a2)
{
  return sub_1556F00(a2, a1);
}

std::string *sub_15879B4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_158481C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1515C18(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1587A30(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_15635A0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1587AAC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1587AAC(uint64_t a1, std::string *a2)
{
  return sub_155DE8C(a2, a1);
}

uint64_t *sub_1587ABC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1563504(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1587B38(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1587B38(uint64_t a1, std::string *a2)
{
  return sub_155CE20(a2, a1);
}

void sub_1587B48(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_15637AC(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1587BC4(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1587BC4(uint64_t a1, std::string *a2)
{
  return sub_155FC8C(a2, a1);
}

void sub_1587BD4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_156324C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1587C50(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1587C50(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_1587C60(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_15855E4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1587CDC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1587CDC(uint64_t a1, std::string *a2)
{
  return sub_1563984(a2, a1);
}

void sub_1587CEC(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_15633E4(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1587D68(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1587D68(uint64_t a1, std::string *a2)
{
  return sub_155BC2C(a2, a1);
}

void sub_1587D78(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1563484(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_11DC498(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1587DF4()
{
}

void sub_1587E3C()
{
}

void sub_1587E60()
{
}

void sub_1587EA8()
{
}

void sub_1587ECC()
{
}

void sub_1587F14()
{
}

void sub_1587F38()
{
}

void sub_1587F80()
{
}

void sub_1587FA4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1566F50(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1588024(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_156D1C4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_15880A4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_156C104(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1588124(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_156A9F4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_15881A4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_156B3A0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1588224(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_156890C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_15882A4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15693A4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1588324(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1563B3C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_15883A4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_156422C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1588424(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1564D3C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_15884A4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_156F0A8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1588524(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_156E4C0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_15885A4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_156F9FC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1588624(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1569E1C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_15886A4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1572EF8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1588720(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1588720(uint64_t a1, std::string *a2)
{
  return sub_1567610(a2, a1);
}

void sub_1588730(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_15733D0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_15887AC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_15887AC(uint64_t a1, uint64_t a2)
{
}

void sub_15887BC(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_157334C(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1588838(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1588838(uint64_t a1, std::string *a2)
{
  return sub_156D010(a2, a1);
}

std::string *sub_1588848(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_15731D0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_15888C4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_15888C4(uint64_t a1, std::string *a2)
{
  return sub_156B2F4(a2, a1);
}

uint64_t *sub_15888D4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1573250(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1588950(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1588950(uint64_t a1, std::string *a2)
{
  return sub_156BB98(a2, a1);
}

void sub_1588960(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_157302C(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_15889DC(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_15889DC(uint64_t a1, std::string *a2)
{
  return sub_1568730(a2, a1);
}

uint64_t *sub_15889EC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_15730B4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1588A68(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1588A68(uint64_t a1, std::string *a2)
{
  return sub_1569CA0(a2, a1);
}

uint64_t *sub_1588A78(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1572C60(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_124F14C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1588AF4(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1572CE0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1588B70(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1588B70(uint64_t a1, std::string *a2)
{
  return sub_1564BD4(a2, a1);
}

void sub_1588B80(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1572D60(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1588BFC(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1588BFC(uint64_t a1, std::string *a2)
{
  return sub_1565F1C(a2, a1);
}

void sub_1588C0C(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1573500(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1588C88(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1588C88(uint64_t a1, std::string *a2)
{
  return sub_156F888(a2, a1);
}

void sub_1588C98(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1573480(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1588D14(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1588D14(uint64_t a1, std::string *a2)
{
  return sub_156EEDC(a2, a1);
}

void sub_1588D24(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1573580(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1588DA0(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1588DA0(uint64_t a1, std::string *a2)
{
  return sub_1570708(a2, a1);
}

void sub_1588DB0(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1573140(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1588E2C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1588E2C(uint64_t a1, std::string *a2)
{
  return sub_156A830(a2, a1);
}

void sub_1588E3C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_157D87C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1588EBC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15791D0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1588F3C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_157A694(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1588FBC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_157B254(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_158903C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_157C108(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_15890BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1579A28(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_158913C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_157ABF0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_15891BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_157368C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_158923C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_157B830(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_15892BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_157D090(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_158933C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_157F6A8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_15893BC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1580834(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_158943C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1583154(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_15894BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15835E0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_158953C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_15851A8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_15895B8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_15895B8(uint64_t a1, std::string *a2)
{
  return sub_157F1AC(a2, a1);
}

std::string *sub_15895C8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1584C58(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1589644(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1589644(uint64_t a1, std::string *a2)
{
  return sub_15798F0(a2, a1);
}

uint64_t *sub_1589654(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1584D8C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_15896D0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1584EB0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_148CFE8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_158974C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1584FD0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B604(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_15897C8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1584CE0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1589844(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1589844(uint64_t a1, std::string *a2)
{
  return sub_157A4E4(a2, a1);
}

uint64_t *sub_1589854(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1584E14(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_15898D0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_15898D0(uint64_t a1, std::string *a2)
{
  return sub_15790CC(a2, a1);
}

std::string *sub_15898E0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1584798(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_158995C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1584F2C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_15899D8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_15899D8(uint64_t a1, std::string *a2)
{
  return sub_157BFDC(a2, a1);
}

uint64_t *sub_15899E8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1585100(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1493F78(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1589A64(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1585208(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_12C32C0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1589AE0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_158534C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_122C7C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1589B5C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_15854AC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122BC84(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1589BD8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1585530(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1589C54(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1589C54(uint64_t a1, std::string *a2)
{
  return sub_1552CF4(a2, a1);
}

void sub_1589C64()
{
  dword_254FEF0 = 955;
  qword_254FEF8 = (uint64_t)&off_253DEA8;
  sub_1882AC4((unint64_t)&off_253DCA8, 955, 11, 1, 0, (uint64_t)&off_253DEA8);
  dword_254FF00 = 958;
  qword_254FF08 = (uint64_t)&off_253DA18;
  sub_1882AC4((unint64_t)&off_253DCA8, 958, 11, 0, 0, (uint64_t)&off_253DA18);
  dword_254FF10 = 959;
  qword_254FF18 = (uint64_t)&off_253E118;
  sub_1882AC4((unint64_t)&off_253DCA8, 959, 11, 0, 0, (uint64_t)&off_253E118);
  dword_254FF20 = 961;
  qword_254FF28 = (uint64_t)&unk_214F410;
  sub_1882224((unint64_t)&off_253DCA8, 961, 9, 0, 0);
  dword_254FF30 = 952;
  qword_254FF38 = 0;

  sub_1882224((unint64_t)&off_253DC18, 952, 4, 0, 0);
}

char *sub_1589D94()
{
  qword_260E4C0 = (uint64_t)"HIGHWAYNORMALRAMP";
  *(void *)algn_260E4C8 = 7;
  dword_260E4D0 = 2;
  qword_260E4D8 = (uint64_t)"NORMALRAMP";
  unk_260E4E0 = 6;
  dword_260E4E8 = 0;
  qword_260E4F0 = (uint64_t)"RAMP";
  unk_260E4F8 = 4;
  dword_260E500 = 1;
  qword_260E508 = (uint64_t)"ENTRYEXITNA";
  unk_260E510 = 5;
  dword_260E518 = 1;
  qword_260E520 = (uint64_t)"EXITNA";
  unk_260E528 = 4;
  dword_260E530 = 2;
  qword_260E538 = (uint64_t)"NA";
  unk_260E540 = 2;
  dword_260E548 = 0;
  qword_260E550 = (uint64_t)"NUANCE_LHPLUSUNABBREVIATED";
  *(void *)algn_260E558 = 13;
  dword_260E560 = 0;
  qword_260E568 = (uint64_t)"UNABBREVIATED";
  unk_260E570 = 13;
  dword_260E578 = 1;
  qword_260E580 = (uint64_t)"BRANCHINTERSECTIONTOWARDSUNDEFINED";
  *(void *)algn_260E588 = 6;
  dword_260E590 = 1;
  qword_260E598 = (uint64_t)"INTERSECTIONTOWARDSUNDEFINED";
  unk_260E5A0 = 12;
  dword_260E5A8 = 3;
  qword_260E5B0 = (uint64_t)"TOWARDSUNDEFINED";
  unk_260E5B8 = 7;
  dword_260E5C0 = 2;
  qword_260E5C8 = (uint64_t)"UNDEFINED";
  unk_260E5D0 = 9;
  dword_260E5D8 = 0;
  qword_260E5E0 = (uint64_t)"CLOSED_SEASONALCLOSED_SUMMERCLOSED_WINTERENDS_ON_CLOSEST_ROADFERRYINTERNATIONALPARK_AND_WALKRESTRICTEDTOLL";
  *(void *)algn_260E5E8 = 15;
  dword_260E5F0 = 2;
  qword_260E5F8 = (uint64_t)"CLOSED_SUMMERCLOSED_WINTERENDS_ON_CLOSEST_ROADFERRYINTERNATIONALPARK_AND_WALKRESTRICTEDTOLL";
  unk_260E600 = 13;
  dword_260E608 = 1;
  qword_260E610 = (uint64_t)"CLOSED_WINTERENDS_ON_CLOSEST_ROADFERRYINTERNATIONALPARK_AND_WALKRESTRICTEDTOLL";
  unk_260E618 = 13;
  dword_260E620 = 0;
  qword_260E628 = (uint64_t)"ENDS_ON_CLOSEST_ROADFERRYINTERNATIONALPARK_AND_WALKRESTRICTEDTOLL";
  unk_260E630 = 20;
  dword_260E638 = 6;
  qword_260E640 = (uint64_t)"FERRYINTERNATIONALPARK_AND_WALKRESTRICTEDTOLL";
  unk_260E648 = 5;
  dword_260E650 = 8;
  qword_260E658 = (uint64_t)"INTERNATIONALPARK_AND_WALKRESTRICTEDTOLL";
  unk_260E660 = 13;
  dword_260E668 = 4;
  qword_260E670 = (uint64_t)"PARK_AND_WALKRESTRICTEDTOLL";
  unk_260E678 = 13;
  dword_260E680 = 7;
  qword_260E688 = (uint64_t)"RESTRICTEDTOLL";
  unk_260E690 = 10;
  dword_260E698 = 5;
  qword_260E6A0 = (uint64_t)"TOLL";
  unk_260E6A8 = 4;
  dword_260E6B0 = 3;
  qword_260E6B8 = (uint64_t)"ARRIVEDEPART";
  unk_260E6C0 = 6;
  dword_260E6C8 = 1;
  qword_260E6D0 = (uint64_t)"DEPART";
  unk_260E6D8 = 6;
  dword_260E6E0 = 0;
  qword_260E6E8 = (uint64_t)"ALLNONE";
  unk_260E6F0 = 3;
  dword_260E6F8 = 1;
  qword_260E700 = (uint64_t)"NONE";
  unk_260E708 = 4;
  dword_260E710 = 0;
  qword_260E718 = (uint64_t)"HISTORICAL_SPEEDSLIVE_SPEEDSSTATIC_SPEEDS";
  unk_260E720 = 17;
  dword_260E728 = 2;
  qword_260E730 = (uint64_t)"LIVE_SPEEDSSTATIC_SPEEDS";
  unk_260E738 = 11;
  dword_260E740 = 3;
  qword_260E748 = (uint64_t)"STATIC_SPEEDS";
  unk_260E750 = 13;
  dword_260E758 = 1;
  qword_260E760 = (uint64_t)"ACCIDENTCONSTRUCTIONEVENTHAZARDLANE_CLOSURERAMP_CLOSUREROAD_CLOSURETIME_BASED_RESTRICTION";
  *(void *)algn_260E768 = 8;
  dword_260E770 = 0;
  qword_260E778 = (uint64_t)"CONSTRUCTIONEVENTHAZARDLANE_CLOSURERAMP_CLOSUREROAD_CLOSURETIME_BASED_RESTRICTION";
  unk_260E780 = 12;
  dword_260E788 = 1;
  qword_260E790 = (uint64_t)"EVENTHAZARDLANE_CLOSURERAMP_CLOSUREROAD_CLOSURETIME_BASED_RESTRICTION";
  unk_260E798 = 5;
  dword_260E7A0 = 3;
  qword_260E7A8 = (uint64_t)"HAZARDLANE_CLOSURERAMP_CLOSUREROAD_CLOSURETIME_BASED_RESTRICTION";
  unk_260E7B0 = 6;
  dword_260E7B8 = 4;
  qword_260E7C0 = (uint64_t)"LANE_CLOSURERAMP_CLOSUREROAD_CLOSURETIME_BASED_RESTRICTION";
  unk_260E7C8 = 12;
  dword_260E7D0 = 5;
  qword_260E7D8 = (uint64_t)"RAMP_CLOSUREROAD_CLOSURETIME_BASED_RESTRICTION";
  unk_260E7E0 = 12;
  dword_260E7E8 = 6;
  qword_260E7F0 = (uint64_t)"ROAD_CLOSURETIME_BASED_RESTRICTION";
  unk_260E7F8 = 12;
  dword_260E800 = 2;
  qword_260E808 = (uint64_t)"TIME_BASED_RESTRICTION";
  unk_260E810 = 22;
  dword_260E818 = 100;
  qword_260E820 = (uint64_t)"BUS_LANECARPOOL_LANECENTER_LANELEFT_LANEOFF_RAMPON_RAMPOTHER_LANERIGHT_LANESHOULDER_LANE";
  *(void *)algn_260E828 = 8;
  dword_260E830 = 6;
  qword_260E838 = (uint64_t)"CARPOOL_LANECENTER_LANELEFT_LANEOFF_RAMPON_RAMPOTHER_LANERIGHT_LANESHOULDER_LANE";
  unk_260E840 = 12;
  dword_260E848 = 5;
  qword_260E850 = (uint64_t)"CENTER_LANELEFT_LANEOFF_RAMPON_RAMPOTHER_LANERIGHT_LANESHOULDER_LANE";
  unk_260E858 = 11;
  dword_260E860 = 2;
  qword_260E868 = (uint64_t)"LEFT_LANEOFF_RAMPON_RAMPOTHER_LANERIGHT_LANESHOULDER_LANE";
  unk_260E870 = 9;
  dword_260E878 = 1;
  qword_260E880 = (uint64_t)"OFF_RAMPON_RAMPOTHER_LANERIGHT_LANESHOULDER_LANE";
  unk_260E888 = 8;
  dword_260E890 = 9;
  qword_260E898 = (uint64_t)"ON_RAMPOTHER_LANERIGHT_LANESHOULDER_LANE";
  unk_260E8A0 = 7;
  dword_260E8A8 = 8;
  qword_260E8B0 = (uint64_t)"OTHER_LANERIGHT_LANESHOULDER_LANE";
  unk_260E8B8 = 10;
  dword_260E8C0 = 7;
  qword_260E8C8 = (uint64_t)"RIGHT_LANESHOULDER_LANE";
  unk_260E8D0 = 10;
  dword_260E8D8 = 3;
  qword_260E8E0 = (uint64_t)"SHOULDER_LANE";
  unk_260E8E8 = 13;
  dword_260E8F0 = 4;
  qword_260E8F8 = (uint64_t)"BLOCKED_ROADSFAR_FROM_ROADSNO_PEDESTRIANSOUT_OF_COVERAGEPATH_DECODING_FAILURESEARCH_FAILEDWALKING_TOO_FAR";
  unk_260E900 = 13;
  dword_260E908 = 10;
  qword_260E910 = (uint64_t)"FAR_FROM_ROADSNO_PEDESTRIANSOUT_OF_COVERAGEPATH_DECODING_FAILURESEARCH_FAILEDWALKING_TOO_FAR";
  unk_260E918 = 14;
  dword_260E920 = 2;
  qword_260E928 = (uint64_t)"NO_PEDESTRIANSOUT_OF_COVERAGEPATH_DECODING_FAILURESEARCH_FAILEDWALKING_TOO_FAR";
  unk_260E930 = 14;
  dword_260E938 = 4;
  qword_260E940 = (uint64_t)"OUT_OF_COVERAGEPATH_DECODING_FAILURESEARCH_FAILEDWALKING_TOO_FAR";
  unk_260E948 = 15;
  dword_260E950 = 3;
  qword_260E958 = (uint64_t)"PATH_DECODING_FAILURESEARCH_FAILEDWALKING_TOO_FAR";
  unk_260E960 = 21;
  dword_260E968 = 8;
  qword_260E970 = (uint64_t)"SEARCH_FAILEDWALKING_TOO_FAR";
  unk_260E978 = 13;
  dword_260E980 = 1;
  qword_260E988 = (uint64_t)"WALKING_TOO_FAR";
  unk_260E990 = 15;
  dword_260E998 = 9;
  qword_260E9A0 = (uint64_t)"ENTRYENTRY_EXITEXITNONE";
  *(void *)algn_260E9A8 = 5;
  dword_260E9B0 = 1;
  qword_260E9B8 = (uint64_t)"ENTRY_EXITEXITNONE";
  unk_260E9C0 = 10;
  dword_260E9C8 = 3;
  qword_260E9D0 = (uint64_t)"EXITNONE";
  unk_260E9D8 = 4;
  dword_260E9E0 = 2;
  qword_260E9E8 = (uint64_t)"NONE";
  unk_260E9F0 = 4;
  dword_260E9F8 = 0;
  qword_260EA00 = (uint64_t)"WAYPOINT_IDWAYPOINT_LOCATIONWAYPOINT_PLACE";
  *(void *)algn_260EA08 = 11;
  dword_260EA10 = 2;
  qword_260EA18 = (uint64_t)"WAYPOINT_LOCATIONWAYPOINT_PLACE";
  unk_260EA20 = 17;
  dword_260EA28 = 4;
  qword_260EA30 = (uint64_t)"WAYPOINT_PLACE";
  unk_260EA38 = 14;
  dword_260EA40 = 3;
  qword_260EA48 = (uint64_t)"IMPERIALMETRICUNKNOWN";
  unk_260EA50 = 8;
  dword_260EA58 = 2;
  qword_260EA60 = (uint64_t)"METRICUNKNOWN";
  unk_260EA68 = 6;
  dword_260EA70 = 1;
  qword_260EA78 = (uint64_t)"UNKNOWN";
  unk_260EA80 = 7;
  dword_260EA88 = 0;
  qword_260EAC0 = (uint64_t)"ARRIVE_AT_DESTINATION_RIGHTARRIVE_END_OF_DIRECTIONSARRIVE_END_OF_NAVIGATIONCHANGE_FERRYCHANGE_HIGHWAYCHANGE_HIGHWAY_LEFTCHANGE_HIGHWAY_RIGHTENTER_FERRYENTER_ROUNDABOUTEXIT_FERRYEXIT_ROUNDABOUTFOLLOW_ROADHIGHWAY_OFF_RAMP_LEFTHIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  unk_260EAC8 = 27;
  qword_260EAD8 = (uint64_t)"ARRIVE_END_OF_DIRECTIONSARRIVE_END_OF_NAVIGATIONCHANGE_FERRYCHANGE_HIGHWAYCHANGE_HIGHWAY_LEFTCHANGE_HIGHWAY_RIGHTENTER_FERRYENTER_ROUNDABOUTEXIT_FERRYEXIT_ROUNDABOUTFOLLOW_ROADHIGHWAY_OFF_RAMP_LEFTHIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  unk_260EAE0 = 24;
  dword_260EAE8 = 39;
  qword_260EAF0 = (uint64_t)"ARRIVE_END_OF_NAVIGATIONCHANGE_FERRYCHANGE_HIGHWAYCHANGE_HIGHWAY_LEFTCHANGE_HIGHWAY_RIGHTENTER_FERRYENTER_ROUNDABOUTEXIT_FERRYEXIT_ROUNDABOUTFOLLOW_ROADHIGHWAY_OFF_RAMP_LEFTHIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  unk_260EAF8 = 24;
  qword_260EB08 = (uint64_t)"CHANGE_FERRYCHANGE_HIGHWAYCHANGE_HIGHWAY_LEFTCHANGE_HIGHWAY_RIGHTENTER_FERRYENTER_ROUNDABOUTEXIT_FERRYEXIT_ROUNDABOUTFOLLOW_ROADHIGHWAY_OFF_RAMP_LEFTHIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260EB18 = 24;
  qword_260EB20 = (uint64_t)"CHANGE_HIGHWAYCHANGE_HIGHWAY_LEFTCHANGE_HIGHWAY_RIGHTENTER_FERRYENTER_ROUNDABOUTEXIT_FERRYEXIT_ROUNDABOUTFOLLOW_ROADHIGHWAY_OFF_RAMP_LEFTHIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260EB30 = 64;
  qword_260EB38 = (uint64_t)"CHANGE_HIGHWAY_LEFTCHANGE_HIGHWAY_RIGHTENTER_FERRYENTER_ROUNDABOUTEXIT_FERRYEXIT_ROUNDABOUTFOLLOW_ROADHIGHWAY_OFF_RAMP_LEFTHIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  unk_260EB40 = 19;
  dword_260EB48 = 65;
  qword_260EB50 = (uint64_t)"CHANGE_HIGHWAY_RIGHTENTER_FERRYENTER_ROUNDABOUTEXIT_FERRYEXIT_ROUNDABOUTFOLLOW_ROADHIGHWAY_OFF_RAMP_LEFTHIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260EB60 = 66;
  qword_260EB68 = (uint64_t)"ENTER_FERRYENTER_ROUNDABOUTEXIT_FERRYEXIT_ROUNDABOUTFOLLOW_ROADHIGHWAY_OFF_RAMP_LEFTHIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EB80 = (uint64_t)"ENTER_ROUNDABOUTEXIT_FERRYEXIT_ROUNDABOUTFOLLOW_ROADHIGHWAY_OFF_RAMP_LEFTHIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EB98 = (uint64_t)"EXIT_FERRYEXIT_ROUNDABOUTFOLLOW_ROADHIGHWAY_OFF_RAMP_LEFTHIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EBB0 = (uint64_t)"EXIT_ROUNDABOUTFOLLOW_ROADHIGHWAY_OFF_RAMP_LEFTHIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EBC8 = (uint64_t)"FOLLOW_ROADHIGHWAY_OFF_RAMP_LEFTHIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EBE0 = (uint64_t)"HIGHWAY_OFF_RAMP_LEFTHIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260EBF0 = 29;
  qword_260EBF8 = (uint64_t)"HIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EC10 = (uint64_t)"KEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EC28 = (uint64_t)"KEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EC40 = (uint64_t)"LEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EC58 = (uint64_t)"LEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260EC68 = 27;
  qword_260EC70 = (uint64_t)"NO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EC88 = (uint64_t)"OFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260ECA0 = (uint64_t)"ON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260ECB8 = (uint64_t)"RIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260ECD0 = (uint64_t)"RIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260ECE0 = 28;
  qword_260ECE8 = (uint64_t)"ROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260ECF8 = 41;
  qword_260ED00 = (uint64_t)"ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260ED18 = (uint64_t)"ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260ED30 = (uint64_t)"ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260ED40 = 52;
  qword_260ED48 = (uint64_t)"ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260ED58 = 53;
  qword_260ED60 = (uint64_t)"ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260ED70 = 54;
  qword_260ED78 = (uint64_t)"ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260ED88 = 55;
  qword_260ED90 = (uint64_t)"ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260EDA0 = 56;
  qword_260EDA8 = (uint64_t)"ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EDC0 = (uint64_t)"ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260EDD0 = 58;
  qword_260EDD8 = (uint64_t)"ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EDF0 = (uint64_t)"ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260EE00 = 42;
  qword_260EFB8 = (uint64_t)"BICYCLEFERRYTRANSITUNKNOWN_TRANSPORT_TYPEWALKING";
  qword_260EFD0 = (uint64_t)"FERRYTRANSITUNKNOWN_TRANSPORT_TYPEWALKING";
  qword_260EFE8 = (uint64_t)"TRANSITUNKNOWN_TRANSPORT_TYPEWALKING";
  qword_260F000 = (uint64_t)"UNKNOWN_TRANSPORT_TYPEWALKING";
  qword_260F018 = (uint64_t)"WALKING";
  qword_260F048 = (uint64_t)"MAIN_ROUTE";
  qword_260F0A8 = (uint64_t)"RIGHT_SIDE";
  qword_260F108 = (uint64_t)"RASTER_STANDARDRASTER_STANDARD_BACKGROUNDRASTER_VEGETATIONSPUTNIK_C3MSPUTNIK_DSMSPUTNIK_DSM_GLOBALSPUTNIK_METADATAVECTOR_BUILDINGSVECTOR_POIVECTOR_REALISTICVECTOR_ROADSVECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  qword_260F240 = (uint64_t)"VECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  qword_260F3C0 = (uint64_t)"CLOSURECONSTRUCTIONEVENT";
  qword_260F390 = (uint64_t)"SLOW";
  unk_260F398 = 4;
  dword_260F3A0 = 1;
  qword_260F3A8 = (uint64_t)"ACCIDENTCLOSURECONSTRUCTIONEVENT";
  unk_260F3B0 = 8;
  dword_260F3B8 = 1;
  qword_260F378 = (uint64_t)"MEDIUMSLOW";
  unk_260F380 = 6;
  qword_260F360 = (uint64_t)"FASTMEDIUMSLOW";
  *(void *)algn_260F368 = 4;
  dword_260F388 = 2;
  dword_260F370 = 3;
  qword_260F348 = (uint64_t)"WATER";
  unk_260F350 = 5;
  qword_260F330 = (uint64_t)"NO_TILEWATER";
  *(void *)algn_260F338 = 7;
  dword_260F358 = 1;
  dword_260F340 = 2;
  qword_260F318 = (uint64_t)"PX256";
  unk_260F320 = 5;
  dword_260F328 = 1;
  qword_260F2E8 = (uint64_t)"NODPI";
  unk_260F2F0 = 5;
  qword_260F300 = (uint64_t)"PX128PX256";
  *(void *)algn_260F308 = 5;
  dword_260F310 = 0;
  dword_260F2F8 = 0;
  qword_260F2D0 = (uint64_t)"LODPINODPI";
  unk_260F2D8 = 5;
  dword_260F2E0 = 1;
  qword_260F2B8 = (uint64_t)"HIDPILODPINODPI";
  unk_260F2C0 = 5;
  dword_260F2C8 = 2;
  qword_260F2A0 = (uint64_t)"VECTOR_TRAFFIC_WITH_GREEN";
  unk_260F2A8 = 25;
  dword_260F298 = 26;
  dword_260F2B0 = 25;
  qword_260F270 = (uint64_t)"VECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F278 = 23;
  dword_260F280 = 22;
  qword_260F288 = (uint64_t)"VECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F290 = 21;
  qword_260F258 = (uint64_t)"VECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F260 = 34;
  dword_260EAD0 = 34;
  dword_260F250 = 3;
  dword_260F268 = 2;
  qword_260F228 = (uint64_t)"VECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F230 = 14;
  dword_260F238 = 12;
  qword_260F248 = 35;
  qword_260F120 = (uint64_t)"RASTER_STANDARD_BACKGROUNDRASTER_VEGETATIONSPUTNIK_C3MSPUTNIK_DSMSPUTNIK_DSM_GLOBALSPUTNIK_METADATAVECTOR_BUILDINGSVECTOR_POIVECTOR_REALISTICVECTOR_ROADSVECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  qword_260F210 = (uint64_t)"VECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F218 = 15;
  dword_260F220 = 1;
  qword_260F1F8 = (uint64_t)"VECTOR_ROADSVECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F200 = 12;
  dword_260F1F0 = 18;
  dword_260F208 = 20;
  qword_260F1E0 = (uint64_t)"VECTOR_REALISTICVECTOR_ROADSVECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  qword_260F1C8 = (uint64_t)"VECTOR_POIVECTOR_REALISTICVECTOR_ROADSVECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F1D0 = 10;
  dword_260F1D8 = 13;
  qword_260F1E8 = 16;
  qword_260F1B0 = (uint64_t)"VECTOR_BUILDINGSVECTOR_POIVECTOR_REALISTICVECTOR_ROADSVECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F1B8 = 16;
  dword_260F1A8 = 14;
  dword_260F1C0 = 11;
  qword_260F198 = (uint64_t)"SPUTNIK_METADATAVECTOR_BUILDINGSVECTOR_POIVECTOR_REALISTICVECTOR_ROADSVECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F1A0 = 16;
  qword_260F180 = (uint64_t)"SPUTNIK_DSM_GLOBALSPUTNIK_METADATAVECTOR_BUILDINGSVECTOR_POIVECTOR_REALISTICVECTOR_ROADSVECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F188 = 18;
  dword_260F190 = 17;
  qword_260F168 = (uint64_t)"SPUTNIK_DSMSPUTNIK_DSM_GLOBALSPUTNIK_METADATAVECTOR_BUILDINGSVECTOR_POIVECTOR_REALISTICVECTOR_ROADSVECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F170 = 11;
  dword_260F160 = 15;
  dword_260F178 = 16;
  qword_260F150 = (uint64_t)"SPUTNIK_C3MSPUTNIK_DSMSPUTNIK_DSM_GLOBALSPUTNIK_METADATAVECTOR_BUILDINGSVECTOR_POIVECTOR_REALISTICVECTOR_ROADSVECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F158 = 11;
  qword_260F138 = (uint64_t)"RASTER_VEGETATIONSPUTNIK_C3MSPUTNIK_DSMSPUTNIK_DSM_GLOBALSPUTNIK_METADATAVECTOR_BUILDINGSVECTOR_POIVECTOR_REALISTICVECTOR_ROADSVECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F140 = 17;
  dword_260F148 = 21;
  dword_260EAB8 = 33;
  qword_260F110 = 15;
  dword_260F118 = 0;
  qword_260F128 = 26;
  dword_260F130 = 5;
  dword_260F100 = 33;
  dword_260F0E8 = 7;
  qword_260F0F0 = (uint64_t)"RASTER_SATELLITE_NIGHTRASTER_STANDARDRASTER_STANDARD_BACKGROUNDRASTER_VEGETATIONSPUTNIK_C3MSPUTNIK_DSMSPUTNIK_DSM_GLOBALSPUTNIK_METADATAVECTOR_BUILDINGSVECTOR_POIVECTOR_REALISTICVECTOR_ROADSVECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F0F8 = 22;
  qword_260F0D8 = (uint64_t)"RASTER_SATELLITERASTER_SATELLITE_NIGHTRASTER_STANDARDRASTER_STANDARD_BACKGROUNDRASTER_VEGETATIONSPUTNIK_C3MSPUTNIK_DSMSPUTNIK_DSM_GLOBALSPUTNIK_METADATAVECTOR_BUILDINGSVECTOR_POIVECTOR_REALISTICVECTOR_ROADSVECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RASTERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  unk_260F0E0 = 16;
  qword_260F0C0 = (uint64_t)"RASTER_HYBRIDRASTER_SATELLITERASTER_SATELLITE_NIGHTRASTER_STANDARDRASTER_STANDARD_BACKGROUNDR"
                           "ASTER_VEGETATIONSPUTNIK_C3MSPUTNIK_DSMSPUTNIK_DSM_GLOBALSPUTNIK_METADATAVECTOR_BUILDINGSVECTO"
                           "R_POIVECTOR_REALISTICVECTOR_ROADSVECTOR_STANDARDVECTOR_TRAFFICVECTOR_TRAFFIC_INCIDENTS_FOR_RA"
                           "STERVECTOR_TRAFFIC_SEGMENTS_FOR_RASTERVECTOR_TRAFFIC_SKELETONVECTOR_TRAFFIC_STATICVECTOR_TRAFFIC_WITH_GREEN";
  *(void *)algn_260F0C8 = 13;
  dword_260F0D0 = 6;
  qword_260F090 = (uint64_t)"LEFT_SIDERIGHT_SIDE";
  qword_260F098 = 9;
  dword_260F0A0 = 1;
  qword_260F0B0 = 10;
  dword_260F0B8 = 0;
  qword_260F078 = (uint64_t)"JCTTYPE_ROUNDABOUT";
  unk_260F080 = 18;
  dword_260F088 = 1;
  qword_260F060 = (uint64_t)"JCTTYPE_NORMALJCTTYPE_ROUNDABOUT";
  *(void *)algn_260F068 = 14;
  dword_260F070 = 0;
  qword_260F030 = (uint64_t)"ALTERNATE_ROUTEMAIN_ROUTE";
  *(void *)algn_260F038 = 15;
  dword_260F058 = 0;
  dword_260F040 = 1;
  qword_260F050 = 10;
  qword_260EAA8 = (uint64_t)"ARRIVE_AT_DESTINATION_LEFTARRIVE_AT_DESTINATION_RIGHTARRIVE_END_OF_DIRECTIONSARRIVE_END_OF_NAVIGATIONCHANGE_FERRYCHANGE_HIGHWAYCHANGE_HIGHWAY_LEFTCHANGE_HIGHWAY_RIGHTENTER_FERRYENTER_ROUNDABOUTEXIT_FERRYEXIT_ROUNDABOUTFOLLOW_ROADHIGHWAY_OFF_RAMP_LEFTHIGHWAY_OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIGHT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABOUT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  unk_260EAB0 = 26;
  dword_260EAA0 = 18;
  dword_260F028 = 2;
  dword_260EBA8 = 23;
  dword_260EFF8 = 1;
  qword_260F008 = 22;
  dword_260F010 = 4;
  qword_260F020 = 7;
  qword_260ECD8 = 17;
  qword_260ECF0 = 17;
  dword_260EFC8 = 3;
  qword_260EFD8 = 5;
  dword_260EFE0 = 5;
  qword_260EFF0 = 7;
  qword_260EDF8 = 17;
  qword_260EFA0 = (uint64_t)"AUTOMOBILEBICYCLEFERRYTRANSITUNKNOWN_TRANSPORT_TYPEWALKING";
  *(void *)algn_260EFA8 = 10;
  dword_260EFB0 = 0;
  qword_260EFC0 = 7;
  qword_260EE08 = (uint64_t)"ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260EF80 = 26;
  qword_260EF88 = (uint64_t)"U_TURN_WHEN_POSSIBLE";
  qword_260EF90 = 20;
  dword_260EF98 = 35;
  qword_260EF60 = 6;
  dword_260EF68 = 4;
  qword_260EF70 = (uint64_t)"U_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EF78 = 20;
  qword_260EF40 = (uint64_t)"STRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EF48 = 14;
  dword_260EF50 = 3;
  qword_260EF58 = (uint64_t)"U_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EE20 = (uint64_t)"ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260EF20 = 17;
  qword_260EF28 = (uint64_t)"START_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EF30 = 23;
  dword_260EF38 = 25;
  qword_260EF00 = 17;
  dword_260EF08 = 63;
  qword_260EF10 = (uint64_t)"START_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EF18 = 11;
  qword_260EEE8 = 16;
  dword_260EEF0 = 62;
  qword_260EEF8 = (uint64_t)"SLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EEC8 = (uint64_t)"SHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EED0 = 16;
  dword_260EED8 = 61;
  qword_260EEE0 = (uint64_t)"SLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EEB0 = (uint64_t)"SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EEB8 = 15;
  dword_260EEC0 = 60;
  dword_260EE90 = 48;
  qword_260EE98 = (uint64_t)"ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EEA0 = 17;
  dword_260EEA8 = 49;
  qword_260EE70 = 17;
  dword_260EE78 = 47;
  qword_260EE80 = (uint64_t)"ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EE88 = 17;
  qword_260EE58 = 17;
  qword_260EE68 = (uint64_t)"ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260EE60 = 46;
  qword_260EE38 = (uint64_t)"ROUNDABOUT_EXIT_5ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  qword_260EE40 = 17;
  qword_260EE50 = (uint64_t)"ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGHT_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURNU_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  dword_260EE48 = 45;
  qword_260EE10 = 17;
  qword_260EE28 = 17;
  dword_260EE18 = 43;
  dword_260EE30 = 44;
  qword_260ED08 = 18;
  qword_260ED20 = 18;
  qword_260ED38 = 18;
  qword_260ED50 = 18;
  dword_260EDE8 = 59;
  qword_260ED68 = 18;
  qword_260ED80 = 18;
  dword_260EDB8 = 57;
  qword_260EDC8 = 18;
  qword_260EDE0 = 18;
  qword_260ED98 = 18;
  qword_260EDB0 = 18;
  qword_260EA90 = (uint64_t)"ARRIVE_AT_DESTINATIONARRIVE_AT_DESTINATION_LEFTARRIVE_AT_DESTINATION_RIGHTARRIVE_END_OF_DIREC"
                           "TIONSARRIVE_END_OF_NAVIGATIONCHANGE_FERRYCHANGE_HIGHWAYCHANGE_HIGHWAY_LEFTCHANGE_HIGHWAY_RIGH"
                           "TENTER_FERRYENTER_ROUNDABOUTEXIT_FERRYEXIT_ROUNDABOUTFOLLOW_ROADHIGHWAY_OFF_RAMP_LEFTHIGHWAY_"
                           "OFF_RAMP_RIGHTKEEP_LEFTKEEP_RIGHTLEFT_TURNLEFT_TURN_AT_ENDNO_TURNOFF_RAMPON_RAMPRIGHT_TURNRIG"
                           "HT_TURN_AT_ENDROUNDABOUT_EXIT_1ROUNDABOUT_EXIT_10ROUNDABOUT_EXIT_11ROUNDABOUT_EXIT_12ROUNDABO"
                           "UT_EXIT_13ROUNDABOUT_EXIT_14ROUNDABOUT_EXIT_15ROUNDABOUT_EXIT_16ROUNDABOUT_EXIT_17ROUNDABOUT_"
                           "EXIT_18ROUNDABOUT_EXIT_19ROUNDABOUT_EXIT_2ROUNDABOUT_EXIT_3ROUNDABOUT_EXIT_4ROUNDABOUT_EXIT_5"
                           "ROUNDABOUT_EXIT_6ROUNDABOUT_EXIT_7ROUNDABOUT_EXIT_8ROUNDABOUT_EXIT_9SHARP_LEFT_TURNSHARP_RIGH"
                           "T_TURNSLIGHT_LEFT_TURNSLIGHT_RIGHT_TURNSTART_ROUTESTART_ROUTE_WITH_U_TURNSTRAIGHT_AHEADU_TURN"
                           "U_TURN_AT_ROUNDABOUTU_TURN_WHEN_POSSIBLE";
  *(void *)algn_260EA98 = 21;
  dword_260EB00 = 16;
  qword_260EB10 = 12;
  qword_260EB28 = 14;
  qword_260EB58 = 20;
  qword_260EB70 = 11;
  dword_260EB78 = 22;
  qword_260EB88 = 16;
  dword_260EB90 = 6;
  qword_260EBA0 = 10;
  qword_260EBB8 = 15;
  dword_260EBC0 = 7;
  qword_260EBD0 = 11;
  dword_260EBD8 = 5;
  qword_260EBE8 = 21;
  qword_260EC00 = 22;
  dword_260ED10 = 50;
  dword_260ED28 = 51;
  dword_260EC08 = 30;
  qword_260EC18 = 9;
  dword_260EC20 = 20;
  qword_260EC30 = 10;
  dword_260EC38 = 21;
  qword_260EC48 = 9;
  dword_260EC50 = 1;
  qword_260EC60 = 16;
  qword_260EC78 = 7;
  dword_260EC80 = 0;
  qword_260ECC0 = 10;
  dword_260ECC8 = 2;
  qword_260EC90 = 8;
  dword_260EC98 = 11;
  qword_260ECA8 = 7;
  dword_260ECB0 = 12;
  qword_260F3D8 = (uint64_t)"CONSTRUCTIONEVENT";
  unk_260F3E0 = 12;
  qword_260F3F0 = (uint64_t)"EVENT";
  unk_260F3F8 = 5;
  qword_260F3C8 = 7;
  dword_260F3D0 = 3;
  dword_260F3E8 = 2;
  dword_260F400 = 4;
  qword_260F420 = (uint64_t)"CABLECARFERRYFUNICULARGONDOLAMETRONONERAILTRAMUNKNOWN";
  qword_260F438 = (uint64_t)"FERRYFUNICULARGONDOLAMETRONONERAILTRAMUNKNOWN";
  qword_260F450 = (uint64_t)"FUNICULARGONDOLAMETRONONERAILTRAMUNKNOWN";
  qword_260F468 = (uint64_t)"GONDOLAMETRONONERAILTRAMUNKNOWN";
  qword_260F480 = (uint64_t)"METRONONERAILTRAMUNKNOWN";
  qword_260F498 = (uint64_t)"NONERAILTRAMUNKNOWN";
  dword_260F4A8 = -2;
  qword_260F4B0 = (uint64_t)"RAILTRAMUNKNOWN";
  qword_260F4C8 = (uint64_t)"TRAMUNKNOWN";
  qword_260F4E0 = (uint64_t)"UNKNOWN";
  dword_260F4F0 = -1;
  qword_260F408 = (uint64_t)"BUSCABLECARFERRYFUNICULARGONDOLAMETRONONERAILTRAMUNKNOWN";
  unk_260F410 = 3;
  dword_260F418 = 3;
  qword_260F428 = 8;
  dword_260F430 = 5;
  qword_260F440 = 5;
  dword_260F448 = 4;
  qword_260F458 = 9;
  dword_260F460 = 7;
  qword_260F470 = 7;
  dword_260F478 = 6;
  qword_260F488 = 5;
  dword_260F490 = 1;
  qword_260F4A0 = 4;
  qword_260F4B8 = 4;
  dword_260F4C0 = 2;
  qword_260F4D0 = 4;
  dword_260F4D8 = 0;
  qword_260F4E8 = 7;
  qword_260F528 = (uint64_t)"PHONE_AGENCYREGULAR";
  unk_260F530 = 12;
  qword_260F540 = (uint64_t)"REGULAR";
  unk_260F548 = 7;
  qword_260F4F8 = (uint64_t)"COORDINATE_WITH_DRIVERNOT_AVAILABLEPHONE_AGENCYREGULAR";
  unk_260F500 = 22;
  qword_260F510 = (uint64_t)"NOT_AVAILABLEPHONE_AGENCYREGULAR";
  unk_260F518 = 13;
  dword_260F508 = 3;
  dword_260F520 = 1;
  dword_260F538 = 2;
  dword_260F550 = 0;
  qword_260F570 = (uint64_t)"SHELTERUNDERGROUND";
  unk_260F578 = 7;
  qword_260F588 = (uint64_t)"UNDERGROUND";
  unk_260F590 = 11;
  qword_260F558 = (uint64_t)"BUILDINGSHELTERUNDERGROUND";
  unk_260F560 = 8;
  dword_260F568 = 2;
  dword_260F580 = 1;
  dword_260F598 = 3;
  qword_260F5D0 = (uint64_t)"BLOCK_TRANSFERBOARD_VEHICLEENTER_STATIONEXIT_STATIONLEAVE_ORIGINPASS_STOPTRANSFER_STOP_TO_STOPUNKNOWN_MANEUVERWALK";
  qword_260F5E8 = (uint64_t)"BOARD_VEHICLEENTER_STATIONEXIT_STATIONLEAVE_ORIGINPASS_STOPTRANSFER_STOP_TO_STOPUNKNOWN_MANEUVERWALK";
  qword_260F600 = (uint64_t)"ENTER_STATIONEXIT_STATIONLEAVE_ORIGINPASS_STOPTRANSFER_STOP_TO_STOPUNKNOWN_MANEUVERWALK";
  qword_260F618 = (uint64_t)"EXIT_STATIONLEAVE_ORIGINPASS_STOPTRANSFER_STOP_TO_STOPUNKNOWN_MANEUVERWALK";
  qword_260F630 = (uint64_t)"LEAVE_ORIGINPASS_STOPTRANSFER_STOP_TO_STOPUNKNOWN_MANEUVERWALK";
  qword_260F648 = (uint64_t)"PASS_STOPTRANSFER_STOP_TO_STOPUNKNOWN_MANEUVERWALK";
  qword_260F660 = (uint64_t)"TRANSFER_STOP_TO_STOPUNKNOWN_MANEUVERWALK";
  unk_260F668 = 21;
  qword_260F5B8 = (uint64_t)"ARRIVE_AT_DESTINATIONBLOCK_TRANSFERBOARD_VEHICLEENTER_STATIONEXIT_STATIONLEAVE_ORIGINPASS_STOPTRANSFER_STOP_TO_STOPUNKNOWN_MANEUVERWALK";
  unk_260F5C0 = 21;
  qword_260F678 = (uint64_t)"UNKNOWN_MANEUVERWALK";
  qword_260F690 = (uint64_t)"WALK";
  qword_260F5A0 = (uint64_t)"ALIGHTARRIVE_AT_DESTINATIONBLOCK_TRANSFERBOARD_VEHICLEENTER_STATIONEXIT_STATIONLEAVE_ORIGINPA"
                           "SS_STOPTRANSFER_STOP_TO_STOPUNKNOWN_MANEUVERWALK";
  *(void *)algn_260F5A8 = 6;
  dword_260F5B0 = 5;
  dword_260F5C8 = 10;
  qword_260F5D8 = 14;
  dword_260F5E0 = 9;
  qword_260F5F0 = 13;
  dword_260F5F8 = 3;
  qword_260F608 = 13;
  dword_260F610 = 7;
  qword_260F620 = 12;
  dword_260F628 = 8;
  qword_260F638 = 12;
  dword_260F640 = 1;
  qword_260F650 = 9;
  dword_260F658 = 4;
  dword_260F670 = 6;
  qword_260F680 = 16;
  dword_260F688 = 0;
  qword_260F698 = 4;
  dword_260F6A0 = 2;
  qword_260F6A8 = (uint64_t)"APPROXIMATEINTERPOLATIONPARCELPOINTPOSTAL";
  unk_260F6B0 = 11;
  qword_260F6D8 = (uint64_t)"PARCELPOINTPOSTAL";
  unk_260F6E0 = 6;
  qword_260F6F0 = (uint64_t)"POINTPOSTAL";
  unk_260F6F8 = 5;
  qword_260F6C0 = (uint64_t)"INTERPOLATIONPARCELPOINTPOSTAL";
  unk_260F6C8 = 13;
  dword_260F6B8 = 2;
  dword_260F6D0 = 1;
  dword_260F6E8 = 4;
  qword_260F708 = (uint64_t)"POSTAL";
  unk_260F710 = 6;
  dword_260F700 = 0;
  dword_260F718 = 3;
  qword_260F720 = (uint64_t)"STOREFRONTTOP_RATEDUSER";
  *(void *)algn_260F728 = 10;
  dword_260F730 = 0;
  qword_260F738 = (uint64_t)"TOP_RATEDUSER";
  unk_260F740 = 9;
  dword_260F748 = 1;
  qword_260F750 = (uint64_t)"USER";
  unk_260F758 = 4;
  dword_260F760 = 2;
  qword_260F768 = (uint64_t)"PX100PX1000PX120PX20PX248_186PX250PX30PX40PX60PX600_400";
  unk_260F770 = 5;
  dword_260F778 = 4;
  qword_260F780 = (uint64_t)"PX1000PX120PX20PX248_186PX250PX30PX40PX60PX600_400";
  unk_260F788 = 6;
  dword_260F790 = 7;
  qword_260F798 = (uint64_t)"PX120PX20PX248_186PX250PX30PX40PX60PX600_400";
  unk_260F7A0 = 5;
  dword_260F7A8 = 5;
  qword_260F7B0 = (uint64_t)"PX20PX248_186PX250PX30PX40PX60PX600_400";
  unk_260F7B8 = 4;
  dword_260F7C0 = 0;
  qword_260F7C8 = (uint64_t)"PX248_186PX250PX30PX40PX60PX600_400";
  unk_260F7D0 = 9;
  dword_260F7D8 = 9;
  qword_260F7E0 = (uint64_t)"PX250PX30PX40PX60PX600_400";
  unk_260F7E8 = 5;
  dword_260F7F0 = 6;
  qword_260F7F8 = (uint64_t)"PX30PX40PX60PX600_400";
  unk_260F800 = 4;
  dword_260F808 = 1;
  qword_260F810 = (uint64_t)"PX40PX60PX600_400";
  unk_260F818 = 4;
  dword_260F820 = 2;
  qword_260F828 = (uint64_t)"PX60PX600_400";
  unk_260F830 = 4;
  dword_260F838 = 3;
  qword_260F840 = (uint64_t)"PX600_400";
  unk_260F848 = 9;
  dword_260F850 = 8;
  qword_260F858 = (uint64_t)"EVERYDAYFRIDAYMONDAYSATURDAYSUNDAYTHURSDAYTUESDAYWEDNESDAY";
  unk_260F860 = 8;
  dword_260F868 = 7;
  qword_260F870 = (uint64_t)"FRIDAYMONDAYSATURDAYSUNDAYTHURSDAYTUESDAYWEDNESDAY";
  unk_260F878 = 6;
  dword_260F880 = 5;
  qword_260F888 = (uint64_t)"MONDAYSATURDAYSUNDAYTHURSDAYTUESDAYWEDNESDAY";
  unk_260F890 = 6;
  dword_260F898 = 1;
  qword_260F8A0 = (uint64_t)"SATURDAYSUNDAYTHURSDAYTUESDAYWEDNESDAY";
  unk_260F8A8 = 8;
  dword_260F8B0 = 6;
  qword_260F8B8 = (uint64_t)"SUNDAYTHURSDAYTUESDAYWEDNESDAY";
  unk_260F8C0 = 6;
  dword_260F8C8 = 0;
  qword_260F8D0 = (uint64_t)"THURSDAYTUESDAYWEDNESDAY";
  unk_260F8D8 = 8;
  dword_260F8E0 = 4;
  qword_260F8E8 = (uint64_t)"TUESDAYWEDNESDAY";
  unk_260F8F0 = 7;
  dword_260F8F8 = 2;
  qword_260F900 = (uint64_t)"WEDNESDAY";
  unk_260F908 = 9;
  dword_260F910 = 3;
  qword_260F918 = (uint64_t)"ATTRIBUTEBUSINESSCATEGORYIGNOREPLACE";
  unk_260F920 = 9;
  dword_260F928 = 4;
  qword_260F930 = (uint64_t)"BUSINESSCATEGORYIGNOREPLACE";
  unk_260F938 = 8;
  dword_260F940 = 1;
  qword_260F948 = (uint64_t)"CATEGORYIGNOREPLACE";
  unk_260F950 = 8;
  dword_260F958 = 2;
  qword_260F960 = (uint64_t)"IGNOREPLACE";
  unk_260F968 = 6;
  dword_260F970 = 3;
  qword_260F978 = (uint64_t)"PLACE";
  unk_260F980 = 5;
  dword_260F988 = 0;
  qword_260F990 = (uint64_t)"DISTANCERATINGRELEVANCE";
  *(void *)algn_260F998 = 8;
  qword_260F9A8 = (uint64_t)"RATINGRELEVANCE";
  unk_260F9B0 = 6;
  dword_260F9A0 = 2;
  dword_260F9B8 = 1;
  qword_260F9C0 = (uint64_t)"RELEVANCE";
  unk_260F9C8 = 9;
  dword_260F9D0 = 0;
  dword_260F9E8 = 20;
  qword_260F9F0 = (uint64_t)"INVALID_REQUESTNEEDS_REFINEMENTSTATUS_FAILEDSTATUS_SUCCESS";
  unk_260F9F8 = 15;
  qword_260FA08 = (uint64_t)"NEEDS_REFINEMENTSTATUS_FAILEDSTATUS_SUCCESS";
  unk_260FA10 = 16;
  dword_260FA18 = 30;
  qword_260FA20 = (uint64_t)"STATUS_FAILEDSTATUS_SUCCESS";
  unk_260FA28 = 13;
  dword_260FA60 = 57;
  dword_260FA78 = 50;
  qword_260F9E0 = 16;
  dword_260FA90 = 45;
  dword_260FAA8 = 16;
  qword_260FAB0 = (uint64_t)"COUNTRYCOUNTYINLAND_WATERISLANDNEIGHBORHOODOCEANPOIPOSTALSTATESTREETTIME_ZONEZCTAS";
  unk_260FAB8 = 7;
  qword_260FA58 = 7;
  uint64_t result = "CITYCOUNTRYCOUNTYINLAND_WATERISLANDNEIGHBORHOODOCEANPOIPOSTALSTATESTREETTIME_ZONEZCTAS";
  qword_260FA98 = (uint64_t)"CITYCOUNTRYCOUNTYINLAND_WATERISLANDNEIGHBORHOODOCEANPOIPOSTALSTATESTREETTIME_ZONEZCTAS";
  unk_260FAA0 = 4;
  dword_260FAD8 = 4;
  dword_260FAF0 = 46;
  qword_260FAF8 = (uint64_t)"ISLANDNEIGHBORHOODOCEANPOIPOSTALSTATESTREETTIME_ZONEZCTAS";
  dword_260FB08 = 48;
  qword_260FB10 = (uint64_t)"NEIGHBORHOODOCEANPOIPOSTALSTATESTREETTIME_ZONEZCTAS";
  unk_260FB18 = 12;
  qword_260FAE0 = (uint64_t)"INLAND_WATERISLANDNEIGHBORHOODOCEANPOIPOSTALSTATESTREETTIME_ZONEZCTAS";
  unk_260FAE8 = 12;
  dword_260FB20 = 43;
  qword_260FB28 = (uint64_t)"OCEANPOIPOSTALSTATESTREETTIME_ZONEZCTAS";
  dword_260FB38 = 44;
  qword_260FB40 = (uint64_t)"POIPOSTALSTATESTREETTIME_ZONEZCTAS";
  unk_260FB48 = 3;
  qword_260FA80 = (uint64_t)"AOICITYCOUNTRYCOUNTYINLAND_WATERISLANDNEIGHBORHOODOCEANPOIPOSTALSTATESTREETTIME_ZONEZCTAS";
  unk_260FA88 = 3;
  dword_260FB50 = 47;
  qword_260FB58 = (uint64_t)"POSTALSTATESTREETTIME_ZONEZCTAS";
  unk_260FB60 = 6;
  dword_260FB68 = 51;
  qword_260FB70 = (uint64_t)"STATESTREETTIME_ZONEZCTAS";
  dword_260FB80 = 2;
  qword_260FB88 = (uint64_t)"STREETTIME_ZONEZCTAS";
  unk_260FB90 = 6;
  qword_260FAC8 = (uint64_t)"COUNTYINLAND_WATERISLANDNEIGHBORHOODOCEANPOIPOSTALSTATESTREETTIME_ZONEZCTAS";
  unk_260FAD0 = 6;
  qword_260FB00 = 6;
  dword_260FB98 = 49;
  qword_260FBA0 = (uint64_t)"TIME_ZONEZCTAS";
  unk_260FBA8 = 9;
  dword_260FBB0 = 35;
  qword_260FBB8 = (uint64_t)"ZCTAS";
  unk_260FBC0 = 5;
  qword_260FA50 = (uint64_t)"ADDRESSADMINAOICITYCOUNTRYCOUNTYINLAND_WATERISLANDNEIGHBORHOODOCEANPOIPOSTALSTATESTREETTIME_ZONEZCTAS";
  qword_260FA68 = (uint64_t)"ADMINAOICITYCOUNTRYCOUNTYINLAND_WATERISLANDNEIGHBORHOODOCEANPOIPOSTALSTATESTREETTIME_ZONEZCTAS";
  unk_260FA70 = 5;
  dword_260FA00 = 5;
  qword_260FB30 = 5;
  qword_260FB78 = 5;
  dword_260FBC8 = 59;
  dword_260FAC0 = 1;
  dword_260FA30 = 1;
  qword_260F9D8 = (uint64_t)"FAILED_NO_RESULTINVALID_REQUESTNEEDS_REFINEMENTSTATUS_FAILEDSTATUS_SUCCESS";
  qword_260FA38 = (uint64_t)"STATUS_SUCCESS";
  unk_260FA40 = 14;
  dword_260FA48 = 0;
  return result;
}

uint64_t sub_158AE80(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253E730)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_12C8F14(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_158AF38(uint64_t a1)
{
  sub_158AE80(a1);

  operator delete();
}

uint64_t sub_158AF70(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_12C8DDC(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(void *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_158AFD0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    goto LABEL_32;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    unint64_t v15 = *(void **)(a1 + 24);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      unint64_t v15 = sub_12CCA5C((uint64_t)v16);
      *(void *)(a1 + 24) = v15;
      uint64_t v7 = v18;
    }
    uint64_t v14 = sub_12C8E00(a3, (uint64_t)v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v18 = v14;
    if (!v14) {
      goto LABEL_33;
    }
LABEL_27:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      goto LABEL_32;
    }
  }
  if (v8 == 17)
  {
    v5 |= 2u;
    *(void *)(a1 + 32) = *(void *)v7;
    uint64_t v18 = v7 + 8;
    goto LABEL_27;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v18;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_32;
  }
LABEL_33:
  uint64_t v18 = 0;
LABEL_32:
  *(_DWORD *)(a1 + 16) |= v5;
  return v18;
}

unsigned char *sub_158B174(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_12C9140(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_158B2C8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v5 = sub_12C9348(*(void *)(a1 + 24));
      uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_158B36C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v7 = (void *)*v7;
        }
        std::string::pointer data = (std::string *)sub_12CCA5C((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v8 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        uint64_t v8 = &off_2531290;
      }
      uint64_t result = sub_117EF04(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_158B43C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_12C8E90(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_158B468@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_geo.proto.RouteStep");
}

uint64_t sub_158B478(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_253E758)
  {
    uint64_t v5 = *(void **)(a1 + 48);
    if (v5)
    {
      sub_12C8F14(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_12C94C8(v6);
      operator delete();
    }
    unint64_t v7 = *(void **)(a1 + 64);
    if (v7)
    {
      sub_12C9BDC(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_15A73D4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_158B574(uint64_t a1)
{
  sub_158B478(a1);

  operator delete();
}

uint64_t sub_158B5AC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = sub_158AF70(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if (v5)
    {
      BOOL result = sub_12C8DDC(*(void *)(v1 + 48));
      if ((v5 & 2) == 0)
      {
LABEL_8:
        if ((v5 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_8;
    }
    BOOL result = sub_12C9504(*(void *)(v1 + 56));
    if ((v5 & 4) != 0) {
LABEL_9:
    }
      BOOL result = sub_12C9C18(*(void *)(v1 + 64));
  }
LABEL_10:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_158B668(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void **)(a1 + 48);
        if (!v11)
        {
          BOOL v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v12 = (void *)*v12;
          }
          uint64_t v11 = sub_12CCA5C((uint64_t)v12);
          *(void *)(a1 + 48) = v11;
          char v7 = v26;
        }
        unint64_t v13 = sub_12C8E00(a3, (uint64_t)v11, (unsigned __int8 *)v7);
        goto LABEL_44;
      case 2u:
        if (v8 != 18) {
          goto LABEL_37;
        }
        uint64_t v14 = v7 - 1;
        while (1)
        {
          uint64_t v15 = (unsigned __int8 *)(v14 + 1);
          uint64_t v26 = v14 + 1;
          uint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            uint64_t v19 = sub_158C054(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, (uint64_t)v19);
            uint64_t v15 = (unsigned __int8 *)v26;
          }
          uint64_t v14 = sub_158B940(a3, v18, v15);
          uint64_t v26 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_45;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void **)(a1 + 56);
        if (!v20)
        {
          unint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_12CCAD4((uint64_t)v21);
          *(void *)(a1 + 56) = v20;
          char v7 = v26;
        }
        unint64_t v13 = sub_12C9E34(a3, (uint64_t)v20, (unsigned __int8 *)v7);
        goto LABEL_44;
      case 4u:
        if (v8 != 34) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v22 = *(void *)(a1 + 64);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_12CCB50((uint64_t)v23);
          *(void *)(a1 + 64) = v22;
          char v7 = v26;
        }
        unint64_t v13 = sub_14E1114(a3, v22, (unsigned __int8 *)v7);
        goto LABEL_44;
      default:
LABEL_37:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v6)
          {
            uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = v26;
          }
          unint64_t v13 = (char *)sub_1885AC0(v8, v25, v7, a3);
LABEL_44:
          uint64_t v26 = v13;
          if (!v13) {
            return 0;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
            return v26;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v26;
    }
  }
}

char *sub_158B940(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  BOOL result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    BOOL result = sub_158AFD0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_158B9D0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_12C9140(v7, (unint64_t)v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_158B174(v12, (unint64_t)v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 56);
    unsigned char *v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_12C9728(v15, (unint64_t)v17, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 64);
    unsigned char *v4 = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 40);
    v4[1] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      uint64_t v20 = v4 + 2;
    }
    uint64_t v4 = sub_12C9EC4(v18, v20, a3);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    BOOL v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    BOOL v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_158BC44(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_158B2C8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v12 = sub_12C9348(*(void *)(a1 + 48));
      v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t v13 = sub_12C993C(*(void *)(a1 + 56));
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) != 0)
    {
LABEL_13:
      uint64_t v9 = sub_12CA008(*(void *)(a1 + 64));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v14 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_158BD9C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    BOOL result = sub_15A7454(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v12 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v12 = (void *)*v12;
        }
        std::string::pointer data = (std::string *)sub_12CCA5C((uint64_t)v12);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v13 = *(void *(****)(void *))(a2 + 48);
      }
      else {
        uint64_t v13 = &off_2531290;
      }
      BOOL result = sub_117EF04(data, (uint64_t)v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_33;
        }
        goto LABEL_25;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unint64_t v14 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      unsigned int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unsigned int v16 = (void *)*v16;
      }
      unint64_t v14 = (std::string *)sub_12CCAD4((uint64_t)v16);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v17 = &off_25312B0;
    }
    BOOL result = sub_12C9A04(v14, (uint64_t)v17);
    if ((v9 & 4) != 0)
    {
LABEL_25:
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
      uint64_t v18 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
      if (!v18)
      {
        std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
        uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v20 = (void *)*v20;
        }
        uint64_t v18 = (std::string *)sub_12CCB50((uint64_t)v20);
        v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v18;
      }
      if (*(void *)(a2 + 64)) {
        uint64_t v21 = *(void *(****)(void *))(a2 + 64);
      }
      else {
        uint64_t v21 = &off_25312D8;
      }
      BOOL result = sub_12CA0B8(v18, (uint64_t)v21);
    }
  }
LABEL_33:
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_158BF68(uint64_t a1)
{
  BOOL result = sub_158BFD4(a1 + 24);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 16);
    if (v3)
    {
      BOOL result = sub_12C8E90(*(void *)(a1 + 48));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 16);
    }
    if ((v3 & 2) != 0)
    {
      BOOL result = sub_12C9B00(*(void *)(a1 + 56));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 16);
    }
    if ((v3 & 4) == 0) {
      return 1;
    }
    BOOL result = sub_12CA188(*(void *)(a1 + 64));
    if (result) {
      return 1;
    }
  }
  return result;
}

BOOL sub_158BFD4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      BOOL result = sub_12C8E90(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_158C044@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_geo.proto.Route");
}

void *sub_158C054(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *BOOL result = off_24C30F8;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_158C0D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24C3178;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(void *)(result + 64) = 0;
  return result;
}

void *sub_158C170(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_15A74E0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_158C1F0(void *a1)
{
  sub_158C170(a1);

  operator delete();
}

uint64_t sub_158C228(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_158C8A0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_158C2A4(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      std::string::size_type v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          std::string::size_type v19 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1592D24(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = sub_158C444(a3, v16, v13);
          std::string::size_type v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      std::string::size_type v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_158C444(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_158C934(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_158C4D4(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_158CC0C(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_158C618(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_158CE14(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_158C6C8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_15A7660((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_158C798()
{
  return 1;
}

void *sub_158C7A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchSessionDataExtension.ResultSet");
}

uint64_t sub_158C7B0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253E7D0)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_158D01C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_158C868(uint64_t a1)
{
  sub_158C7B0(a1);

  operator delete();
}

uint64_t sub_158C8A0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(result + 24);
    char v4 = *(unsigned char *)(v3 + 8);
    uint64_t result = v3 + 8;
    *(_DWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v4) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  if ((v2 & 6) != 0)
  {
    *(_DWORD *)(v1 + 40) = 0;
    *(void *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_158C91C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_158C934(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v29 + 2;
      }
    }
    BOOL v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 4) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 4u;
      std::string::size_type v19 = v8 + 1;
      int v20 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_33;
      }
      int v21 = *v19;
      int v20 = v20 + (v21 << 7) - 128;
      if ((v21 & 0x80000000) == 0)
      {
        std::string::size_type v19 = v8 + 2;
LABEL_33:
        BOOL v29 = v19;
        *(_DWORD *)(a1 + 40) = v20;
        goto LABEL_38;
      }
      uint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v20);
      BOOL v29 = v25;
      *(_DWORD *)(a1 + 40) = v26;
      if (!v25) {
        goto LABEL_47;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v22 = v8 + 1;
      uint64_t v23 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v24 = *v22;
      uint64_t v23 = v23 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        uint64_t v22 = v8 + 2;
LABEL_37:
        BOOL v29 = v22;
        *(void *)(a1 + 32) = v23;
        goto LABEL_38;
      }
      uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v23);
      BOOL v29 = v27;
      *(void *)(a1 + 32) = v28;
      if (!v27) {
        goto LABEL_47;
      }
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 34)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_1592DA4((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      uint64_t v8 = v29;
    }
    uint64_t v16 = sub_158CB7C(a3, v17, (unsigned __int8 *)v8);
LABEL_27:
    BOOL v29 = v16;
    if (!v16) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v29;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_27;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  BOOL v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

char *sub_158CB7C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_158D0C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_158CC0C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 24);
    unsigned char *v4 = 34;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_158D208(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    std::string::size_type v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    std::string::size_type v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_158CE14(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if (v1)
  {
    uint64_t v3 = *(void *)(a1 + 24);
    uint64_t v4 = 5;
    if ((*(unsigned char *)(v3 + 16) & 1) == 0) {
      uint64_t v4 = 0;
    }
    uint64_t v5 = *(void *)(v3 + 8);
    if (v5)
    {
      unint64_t v10 = v5 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v10 + 31) < 0) {
        uint64_t v11 = *(void *)(v10 + 16);
      }
      else {
        uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
      }
      v4 += v11;
    }
    *(_DWORD *)(v3 + 20) = v4;
    uint64_t v2 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_10:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_11:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_13:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_158CF1C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_1592DA4((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253E800;
      }
      uint64_t result = sub_11C4738(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_158D004()
{
  return 1;
}

void *sub_158D00C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchSessionDataExtension.Result");
}

void *sub_158D01C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_158D090(void *a1)
{
  sub_158D01C(a1);

  operator delete();
}

char *sub_158D0C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v14 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
    goto LABEL_22;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v14 + 1;
    unsigned int v8 = *v14;
    if (*v14 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v14, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v14 + 2;
      }
    }
    unsigned int v14 = v7;
    if (v8 == 13)
    {
      *(_DWORD *)(a1 + 24) = *(_DWORD *)v7;
      unsigned int v14 = v7 + 4;
      int v5 = 1;
      goto LABEL_17;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unsigned int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v14;
    }
    unsigned int v14 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v14) {
      goto LABEL_23;
    }
LABEL_17:
    if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
      goto LABEL_22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_22;
  }
LABEL_23:
  unsigned int v14 = 0;
LABEL_22:
  *(_DWORD *)(a1 + 16) |= v5;
  return v14;
}

_OWORD *sub_158D208(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v6 = *(_DWORD *)(a1 + 24);
    *(unsigned char *)int v4 = 13;
    *(_DWORD *)((char *)v4 + 1) = v6;
    int v4 = (_OWORD *)((char *)v4 + 5);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    return (_OWORD *)((char *)v4 + v12);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_158D2EC(uint64_t a1)
{
  uint64_t v1 = 5;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_158D334()
{
  return 1;
}

void *sub_158D33C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchSessionDataExtension.ResultFeatureSet");
}

uint64_t sub_158D34C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 64);
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253E820)
  {
    int v6 = *(void **)(a1 + 72);
    if (v6)
    {
      sub_1592618(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_15A7560((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_158D42C(uint64_t a1)
{
  sub_158D34C(a1);

  operator delete();
}

uint64_t sub_158D464(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t result = sub_122AAFC(a1 + 40);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 3) == 0) {
    goto LABEL_9;
  }
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) == 0) {
        goto LABEL_9;
      }
      goto LABEL_6;
    }
    *(unsigned char *)unint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_9;
  }
LABEL_6:
  uint64_t v5 = *(void *)(a1 + 72);
  char v6 = *(unsigned char *)(v5 + 8);
  uint64_t result = v5 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_9:
  if ((v3 & 0x7C) != 0)
  {
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    *(_DWORD *)(a1 + 96) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_158D528(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_158D544(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v61 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v61, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (char *)(*(void *)v61 + 1);
    unsigned int v9 = **(unsigned char **)v61;
    if ((char)**(unsigned char **)v61 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v61, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        char v8 = (char *)(*(void *)v61 + 2);
      }
    }
    *(void *)unint64_t v61 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_92;
        }
        uint64_t v13 = v8 + 1;
        unint64_t v14 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)unint64_t v61 = sub_188C138((uint64_t)v8, (v16 - 128));
          if (!*(void *)v61) {
            goto LABEL_118;
          }
          unint64_t v14 = v50;
        }
        else
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          *(void *)unint64_t v61 = v13;
        }
        if (sub_1791E00(v14))
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 80) = v14;
          goto LABEL_100;
        }
        if (*v7) {
          char v59 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          char v59 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v60 = 1;
        goto LABEL_111;
      case 2u:
        if (v9 != 16) {
          goto LABEL_92;
        }
        uint64_t v17 = v8 + 1;
        unint64_t v14 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v17;
        int v19 = v14 + (v18 << 7);
        unint64_t v14 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)unint64_t v61 = sub_188C138((uint64_t)v8, (v19 - 128));
          if (!*(void *)v61) {
            goto LABEL_118;
          }
          unint64_t v14 = v51;
        }
        else
        {
          uint64_t v17 = v8 + 2;
LABEL_20:
          *(void *)unint64_t v61 = v17;
        }
        if (v14 <= 7)
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 84) = v14;
          goto LABEL_100;
        }
        if (*v7) {
          char v59 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          char v59 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v60 = 2;
        goto LABEL_111;
      case 3u:
        if (v9 != 24) {
          goto LABEL_92;
        }
        uint64_t v20 = v8 + 1;
        unint64_t v14 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v21 = *v20;
        int v22 = v14 + (v21 << 7);
        unint64_t v14 = (v22 - 128);
        if (v21 < 0)
        {
          *(void *)unint64_t v61 = sub_188C138((uint64_t)v8, (v22 - 128));
          if (!*(void *)v61) {
            goto LABEL_118;
          }
          unint64_t v14 = v52;
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_27:
          *(void *)unint64_t v61 = v20;
        }
        if (sub_125D180(v14))
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 88) = v14;
        }
        else
        {
          if (*v7) {
            char v59 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            char v59 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v60 = 3;
LABEL_111:
          sub_188C020(v60, v14, v59);
        }
        goto LABEL_100;
      case 4u:
        if (v9 == 32)
        {
          uint64_t v23 = (uint64_t)(v8 - 1);
          while (1)
          {
            *(void *)unint64_t v61 = v23 + 1;
            unint64_t v24 = *(unsigned __int8 *)(v23 + 1);
            uint64_t v25 = (char *)(v23 + 2);
            if (*(char *)(v23 + 1) < 0)
            {
              int v26 = *v25;
              int v27 = v24 + (v26 << 7);
              unint64_t v24 = (v27 - 128);
              if (v26 < 0)
              {
                *(void *)unint64_t v61 = sub_188C138(v23 + 1, (v27 - 128));
                if (!*(void *)v61) {
                  goto LABEL_118;
                }
                unint64_t v24 = v30;
                goto LABEL_36;
              }
              uint64_t v25 = (char *)(v23 + 3);
            }
            *(void *)unint64_t v61 = v25;
LABEL_36:
            if (sub_1791DC4(v24))
            {
              uint64_t v28 = *(unsigned int *)(a1 + 24);
              if (v28 == *(_DWORD *)(a1 + 28))
              {
                int v29 = v28 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v28 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v28) = v24;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v28) = v24;
                int v29 = v28 + 1;
              }
              *(_DWORD *)(a1 + 24) = v29;
            }
            else
            {
              if (*v7) {
                uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(4, v24, v31);
            }
            uint64_t v23 = *(void *)v61;
            if (*(void *)a3 <= *(void *)v61 || **(unsigned char **)v61 != 32) {
              goto LABEL_100;
            }
          }
        }
        if (v9 == 34)
        {
          *(void *)&long long v62 = a1 + 24;
          *((void *)&v62 + 1) = sub_1791DC4;
          uint64_t v63 = a1 + 8;
          int v64 = 4;
          BOOL v35 = sub_1112E88((uint64_t)a3, v8, &v62);
LABEL_99:
          *(void *)unint64_t v61 = v35;
          if (!v35) {
            goto LABEL_118;
          }
LABEL_100:
          if (sub_11947B8((uint64_t)a3, (char **)v61, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_92:
        if (v9) {
          BOOL v57 = (v9 & 7) == 4;
        }
        else {
          BOOL v57 = 1;
        }
        if (!v57)
        {
          if (*v7)
          {
            uint64_t v58 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v58 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(char **)v61;
          }
          BOOL v35 = sub_1885AC0(v9, v58, v8, a3);
          goto LABEL_99;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_118:
        }
          *(void *)unint64_t v61 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v61;
      case 5u:
        if (v9 != 42) {
          goto LABEL_92;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v32 = *(void *)(a1 + 8);
        unint64_t v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
        if (v32) {
          unint64_t v33 = (uint64_t *)*v33;
        }
        uint64_t v34 = (std::string *)sub_1880F84((void *)(a1 + 64), v33);
        BOOL v35 = (void *)sub_188C244(v34, *(char **)v61, (uint64_t)a3);
        goto LABEL_99;
      case 6u:
        if (v9 != 48) {
          goto LABEL_92;
        }
        v5 |= 0x20u;
        unint64_t v36 = v8 + 1;
        int v37 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v38 = *v36;
        int v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v53 = sub_188C0D0((uint64_t)v8, v37);
          *(void *)unint64_t v61 = v53;
          *(_DWORD *)(a1 + 92) = v54;
          if (!v53) {
            goto LABEL_118;
          }
        }
        else
        {
          unint64_t v36 = v8 + 2;
LABEL_58:
          *(void *)unint64_t v61 = v36;
          *(_DWORD *)(a1 + 92) = v37;
        }
        goto LABEL_100;
      case 7u:
        if (v9 != 58) {
          goto LABEL_92;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v39 = *(void *)(a1 + 72);
        if (!v39)
        {
          uint64_t v40 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v40 = (void *)*v40;
          }
          uint64_t v39 = sub_1593308((uint64_t)v40);
          *(void *)(a1 + 72) = v39;
          char v8 = *(char **)v61;
        }
        BOOL v35 = sub_158DBBC(a3, v39, (unsigned __int8 *)v8);
        goto LABEL_99;
      case 8u:
        if (v9 != 66) {
          goto LABEL_92;
        }
        uint64_t v41 = v8 - 1;
        while (1)
        {
          unint64_t v42 = (unsigned __int8 *)(v41 + 1);
          *(void *)unint64_t v61 = v41 + 1;
          uint64_t v43 = *(_DWORD **)(a1 + 56);
          if (v43 && (uint64_t v44 = *(int *)(a1 + 48), (int)v44 < *v43))
          {
            *(_DWORD *)(a1 + 48) = v44 + 1;
            uint64_t v45 = *(void *)&v43[2 * v44 + 2];
          }
          else
          {
            uint64_t v46 = sub_1593308(*(void *)(a1 + 40));
            uint64_t v45 = sub_188CDC8(a1 + 40, v46);
            unint64_t v42 = *(unsigned __int8 **)v61;
          }
          uint64_t v41 = sub_158DBBC(a3, v45, v42);
          *(void *)unint64_t v61 = v41;
          if (!v41) {
            goto LABEL_118;
          }
          if (*(void *)a3 <= (unint64_t)v41 || *v41 != 66) {
            goto LABEL_100;
          }
        }
      case 9u:
        if (v9 != 72) {
          goto LABEL_92;
        }
        v5 |= 0x40u;
        char v47 = v8 + 1;
        int v48 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_79;
        }
        int v49 = *v47;
        int v48 = v48 + (v49 << 7) - 128;
        if (v49 < 0)
        {
          uint64_t v55 = sub_188C0D0((uint64_t)v8, v48);
          *(void *)unint64_t v61 = v55;
          *(_DWORD *)(a1 + 96) = v56;
          if (!v55) {
            goto LABEL_118;
          }
        }
        else
        {
          char v47 = v8 + 2;
LABEL_79:
          *(void *)unint64_t v61 = v47;
          *(_DWORD *)(a1 + 96) = v48;
        }
        goto LABEL_100;
      default:
        goto LABEL_92;
    }
  }
}

char *sub_158DBBC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15926CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_158DC4C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 80);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 84);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 88);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 24);
  if ((int)v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v18 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      char *v4 = 32;
      v4[1] = v18;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        v4[2] = v18 >> 7;
        v4 += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v21 = *(_DWORD *)(a1 + 92);
    char *v4 = 48;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unsigned int v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v24 = *(void *)(a1 + 72);
    char *v4 = 58;
    unsigned int v25 = *(_DWORD *)(v24 + 20);
    v4[1] = v25;
    if (v25 > 0x7F) {
      int v26 = sub_188A9CC(v25, v4 + 1);
    }
    else {
      int v26 = v4 + 2;
    }
    unint64_t v4 = sub_15929D4(v24, v26, a3);
  }
  int v27 = *(_DWORD *)(a1 + 48);
  if (v27)
  {
    for (int j = 0; j != v27; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      char *v4 = 66;
      unsigned int v30 = *(_DWORD *)(v29 + 20);
      v4[1] = v30;
      if (v30 > 0x7F) {
        uint64_t v31 = sub_188A9CC(v30, v4 + 1);
      }
      else {
        uint64_t v31 = v4 + 2;
      }
      unint64_t v4 = sub_15929D4(v29, v31, a3);
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v32 = *(_DWORD *)(a1 + 96);
    char *v4 = 72;
    v4[1] = v32;
    if (v32 > 0x7F)
    {
      v4[1] = v32 | 0x80;
      unsigned int v33 = v32 >> 7;
      v4[2] = v32 >> 7;
      v4 += 3;
      if (v32 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v34 = v33 >> 14;
          v33 >>= 7;
          *v4++ = v33;
        }
        while (v34);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v35 = *(void *)(a1 + 8);
  if ((v35 & 1) == 0) {
    return v4;
  }
  unint64_t v37 = v35 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v37 + 31) < 0)
  {
    int v38 = *(void **)(v37 + 8);
    uint64_t v39 = *(void *)(v37 + 16);
  }
  else
  {
    int v38 = (void *)(v37 + 8);
    LODWORD(v39) = *(unsigned __int8 *)(v37 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v39)
  {
    uint64_t v40 = (int)v39;
    memcpy(v4, v38, (int)v39);
    v4 += v40;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v38, v39, v4);
}

uint64_t sub_158E120(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    uint64_t v3 = 0;
    int v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v4);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v6;
      ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = v3 + v2;
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v7 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1592BA4(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0x7F) == 0) {
    goto LABEL_24;
  }
  if (v15)
  {
    unint64_t v18 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
    uint64_t v20 = *(void *)(v18 + 8);
    if ((v19 & 0x80u) == 0) {
      uint64_t v20 = v19;
    }
    v9 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 2) == 0)
    {
LABEL_18:
      if ((v15 & 4) == 0) {
        goto LABEL_19;
      }
      goto LABEL_30;
    }
  }
  else if ((v15 & 2) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v21 = sub_1592BA4(*(void *)(a1 + 72));
  v9 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 4) == 0)
  {
LABEL_19:
    if ((v15 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_34;
  }
LABEL_30:
  int v22 = *(_DWORD *)(a1 + 80);
  uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v22 >= 0) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = 11;
  }
  v9 += v24;
  if ((v15 & 8) == 0)
  {
LABEL_20:
    if ((v15 & 0x10) == 0) {
      goto LABEL_21;
    }
LABEL_38:
    int v28 = *(_DWORD *)(a1 + 88);
    uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v28 >= 0) {
      uint64_t v30 = v29;
    }
    else {
      uint64_t v30 = 11;
    }
    v9 += v30;
    if ((v15 & 0x20) == 0)
    {
LABEL_22:
      if ((v15 & 0x40) == 0) {
        goto LABEL_24;
      }
      goto LABEL_23;
    }
    goto LABEL_42;
  }
LABEL_34:
  int v25 = *(_DWORD *)(a1 + 84);
  uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v25 >= 0) {
    uint64_t v27 = v26;
  }
  else {
    uint64_t v27 = 11;
  }
  v9 += v27;
  if ((v15 & 0x10) != 0) {
    goto LABEL_38;
  }
LABEL_21:
  if ((v15 & 0x20) == 0) {
    goto LABEL_22;
  }
LABEL_42:
  v9 += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 0x40) != 0) {
LABEL_23:
  }
    v9 += ((9 * (__clz(*(_DWORD *)(a1 + 96) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_24:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v31 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v31 + 31) < 0) {
      uint64_t v32 = *(void *)(v31 + 16);
    }
    else {
      uint64_t v32 = *(unsigned __int8 *)(v31 + 31);
    }
    v9 += v32;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_158E3AC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_15A76EC((uint64_t *)&v3[1].__r_.__value_.__r.__words[2], v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v11 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v8;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v11;
    uint64_t v12 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 16);
  if ((v13 & 0x7F) != 0)
  {
    if (v13)
    {
      int v15 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v15, v17);
      if ((v13 & 2) == 0)
      {
LABEL_9:
        if ((v13 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_31;
      }
    }
    else if ((v13 & 2) == 0)
    {
      goto LABEL_9;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::pointer data = (std::string *)v3[3].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      std::string::pointer data = (std::string *)sub_1593308((uint64_t)v20);
      v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v21 = *(void *(****)(void *))(a2 + 72);
    }
    else {
      uint64_t v21 = &off_253EA18;
    }
    uint64_t result = sub_11E3E70(data, (uint64_t)v21);
    if ((v13 & 4) == 0)
    {
LABEL_10:
      if ((v13 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_32;
    }
LABEL_31:
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    if ((v13 & 8) == 0)
    {
LABEL_11:
      if ((v13 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_33;
    }
LABEL_32:
    HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
    if ((v13 & 0x10) == 0)
    {
LABEL_12:
      if ((v13 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_34;
    }
LABEL_33:
    LODWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
    if ((v13 & 0x20) == 0)
    {
LABEL_13:
      if ((v13 & 0x40) == 0)
      {
LABEL_15:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v13;
        goto LABEL_16;
      }
LABEL_14:
      LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
      goto LABEL_15;
    }
LABEL_34:
    HIDWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 92);
    if ((v13 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_158E5B0()
{
  return 1;
}

void *sub_158E5B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchSessionDataExtension.QueryFeatureSet");
}

uint64_t sub_158E5C8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253E888)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_158D34C(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_158C170(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_158E698(uint64_t a1)
{
  sub_158E5C8(a1);

  operator delete();
}

uint64_t sub_158E6D0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_158D464(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_158C228(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_158E740(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    std::string::size_type v19 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      std::string::size_type v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        std::string::size_type v16 = (void *)*v16;
      }
      uint64_t v15 = sub_1592C84((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = v19;
    }
    uint64_t v14 = sub_158E990(a3, v15, (unsigned __int8 *)v7);
LABEL_31:
    std::string::size_type v19 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      unint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_1592E20((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      uint64_t v7 = v19;
    }
    uint64_t v14 = (char *)sub_158E900(a3, v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v19;
  }
  return 0;
}

uint64_t sub_158E900(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_158D544(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_158E990(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_158C2A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_158EA20(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_158DC4C(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 40);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_158C4D4(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    std::string::size_type v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    std::string::size_type v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_158EBA0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_158E120(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_158C618(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_158EC78(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        std::string::pointer data = (std::string *)sub_1592E20((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_253E820;
      }
      uint64_t result = sub_158E3AC(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = (std::string *)sub_1592C84((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(void *(****)(void *))(a2 + 32);
      }
      else {
        BOOL v12 = &off_253E7A0;
      }
      uint64_t result = sub_158C6C8(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_158ED7C()
{
  return 1;
}

void *sub_158ED84@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchSessionDataExtension.SearchState");
}

void *sub_158ED94(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_158EE08(void *a1)
{
  sub_158ED94(a1);

  operator delete();
}

uint64_t sub_158EE40(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_158EE58(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    std::string::size_type v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      std::string::size_type v19 = v13;
      *(unsigned char *)(a1 + 24) = v14 != 0;
      int v5 = 1;
      goto LABEL_20;
    }
    std::string::size_type v16 = (char *)sub_188C138((uint64_t)v7, v14);
    std::string::size_type v19 = v16;
    *(unsigned char *)(a1 + 24) = v17 != 0;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      BOOL v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    std::string::size_type v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  std::string::size_type v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_158EFE8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v6 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_158F0CC(uint64_t a1)
{
  uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_158F10C()
{
  return 1;
}

void *sub_158F114@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchPlaceRequestExtension.PlaceDataAmendment");
}

uint64_t sub_158F124(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_14DE5F0((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_158F1D8(uint64_t a1)
{
  sub_158F124(a1);

  operator delete();
}

uint64_t sub_158F210(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    unint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1318B10(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v6 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_158F2C8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v33 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    return *(void *)v33;
  }
  unint64_t v6 = (void *)(a1 + 8);
  uint64_t v7 = (uint64_t **)(a1 + 24);
  while (1)
  {
    char v8 = (char *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)unsigned int v33 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 != 2)
    {
      if (v12 == 1 && v9 == 10)
      {
        uint64_t v26 = v8 - 1;
        while (1)
        {
          uint64_t v27 = (char *)(v26 + 1);
          *(void *)unsigned int v33 = v26 + 1;
          int v28 = *(_DWORD **)(a1 + 40);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 32), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 32) = v29 + 1;
            uint64_t v30 = *(std::string **)&v28[2 * v29 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v32 = v31;
            v32[1] = sub_3A6EDC;
            *unint64_t v31 = 0;
            v31[1] = 0;
            int v31[2] = 0;
            uint64_t v30 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v31);
            uint64_t v27 = *(char **)v33;
          }
          uint64_t v26 = sub_188C244(v30, v27, (uint64_t)a3);
          *(void *)unsigned int v33 = v26;
          if (!v26) {
            goto LABEL_52;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 10) {
            goto LABEL_36;
          }
        }
      }
      goto LABEL_14;
    }
    if (v9 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    int v25 = (std::string *)sub_1880F84((void *)(a1 + 72), v24);
    std::string::size_type v16 = (void *)sub_188C244(v25, *(char **)v33, (uint64_t)a3);
LABEL_35:
    *(void *)unsigned int v33 = v16;
    if (!v16) {
      goto LABEL_52;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
      return *(void *)v33;
    }
  }
  if (v9 == 26)
  {
    uint64_t v17 = v8 - 1;
    while (1)
    {
      uint64_t v18 = (unsigned __int8 *)(v17 + 1);
      *(void *)unsigned int v33 = v17 + 1;
      std::string::size_type v19 = *(_DWORD **)(a1 + 64);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 56) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        uint64_t v22 = sub_131BDDC(*(void *)(a1 + 48));
        uint64_t v21 = sub_188CDC8(a1 + 48, v22);
        uint64_t v18 = *(unsigned __int8 **)v33;
      }
      uint64_t v17 = (char *)sub_1277414(a3, v21, v18);
      *(void *)unsigned int v33 = v17;
      if (!v17) {
        goto LABEL_52;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
        goto LABEL_36;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v6)
    {
      int v15 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v8 = *(char **)v33;
    }
    std::string::size_type v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v33;
  }
LABEL_52:
  *(void *)unsigned int v33 = 0;
  return *(void *)v33;
}

char *sub_158F5B4(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 14) >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  if (*(unsigned char *)(a1 + 16)) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v12 = *(_DWORD *)(a1 + 56);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *__dst = 26;
      unsigned int v15 = *(_DWORD *)(v14 + 44);
      __dst[1] = v15;
      if (v15 > 0x7F) {
        std::string::size_type v16 = sub_188A9CC(v15, __dst + 1);
      }
      else {
        std::string::size_type v16 = __dst + 2;
      }
      __dst = sub_1319D58(v14, v16, a3);
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return __dst;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(__dst, v20, (int)v21);
    __dst += v22;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, __dst);
}

uint64_t sub_158F7C4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_131A6A8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v15 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v9 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v9 += v21;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_158F918(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_14DF40C((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v14 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 72), v14, v16);
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_158FA84(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_131B154(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_158FADC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchPlaceRequestExtension.RewrittenQueryData");
}

uint64_t sub_158FAEC(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  char v5 = (void ***)(a1 + 120);
  if (*(uint64_t **)(a1 + 120) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1515D20((void *)(a1 + 96));
  sub_15A75E0((void *)(a1 + 72));
  sub_1889DE8((void *)(a1 + 48));
  sub_14DE4F0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_158FBB8(uint64_t a1)
{
  sub_158FAEC(a1);

  operator delete();
}

uint64_t sub_158FBF0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_14A7068(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 48);
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_158F210(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_14D401C(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v12 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
    }
  }
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(unsigned char *)(v13 + 120) = 0;
  *(_DWORD *)(v13 + 8) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_158FCFC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v48 = (uint64_t *)(a1 + 8);
  int v7 = (uint64_t **)(a1 + 48);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v49 + 1);
    unsigned int v9 = **(unsigned char **)v49;
    if ((char)**(unsigned char **)v49 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v49, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v49 + 2);
      }
    }
    *(void *)int v49 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_60;
        }
        unint64_t v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          *(void *)int v49 = v12 + 1;
          char v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_14DB564(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, (uint64_t)v17);
            uint64_t v13 = *(unsigned __int8 **)v49;
          }
          unint64_t v12 = (char *)sub_14A7DFC(a3, v16, v13);
          *(void *)int v49 = v12;
          if (!v12) {
            goto LABEL_75;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_68;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_60;
        }
        uint64_t v18 = v8 - 1;
        while (1)
        {
          unint64_t v19 = (char *)(v18 + 1);
          *(void *)int v49 = v18 + 1;
          unint64_t v20 = *(_DWORD **)(a1 + 64);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 56) = v21 + 1;
            uint64_t v22 = *(std::string **)&v20[2 * v21 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v24 = v23;
            v24[1] = sub_3A6EDC;
            *uint64_t v23 = 0;
            v23[1] = 0;
            int v23[2] = 0;
            uint64_t v22 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v23);
            unint64_t v19 = *(char **)v49;
          }
          uint64_t v18 = sub_188C244(v22, v19, (uint64_t)a3);
          *(void *)int v49 = v18;
          if (!v18) {
            goto LABEL_75;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
            goto LABEL_68;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_60;
        }
        v5 |= 2u;
        int v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v8, v26);
          *(void *)int v49 = v46;
          *(unsigned char *)(a1 + 128) = v47 != 0;
          if (!v46) {
            goto LABEL_75;
          }
        }
        else
        {
          int v25 = v8 + 2;
LABEL_35:
          *(void *)int v49 = v25;
          *(unsigned char *)(a1 + 128) = v26 != 0;
        }
        goto LABEL_68;
      case 4u:
        if (v9 != 34) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v28 = *(void *)(a1 + 8);
        uint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          uint64_t v29 = (uint64_t *)*v29;
        }
        uint64_t v30 = (std::string *)sub_1880F84((void *)(a1 + 120), v29);
        unint64_t v31 = (void *)sub_188C244(v30, *(char **)v49, (uint64_t)a3);
        goto LABEL_67;
      case 5u:
        if (v9 != 42) {
          goto LABEL_60;
        }
        uint64_t v32 = v8 - 1;
        while (1)
        {
          unsigned int v33 = (unsigned __int8 *)(v32 + 1);
          *(void *)int v49 = v32 + 1;
          unsigned int v34 = *(_DWORD **)(a1 + 88);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 80), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 80) = v35 + 1;
            uint64_t v36 = *(void *)&v34[2 * v35 + 2];
          }
          else
          {
            unint64_t v37 = sub_1592FCC(*(void *)(a1 + 72));
            uint64_t v36 = sub_188CDC8(a1 + 72, (uint64_t)v37);
            unsigned int v33 = *(unsigned __int8 **)v49;
          }
          uint64_t v32 = (char *)sub_15901C4(a3, v36, v33);
          *(void *)int v49 = v32;
          if (!v32) {
            goto LABEL_75;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 42) {
            goto LABEL_68;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_60;
        }
        int v38 = v8 - 1;
        while (1)
        {
          uint64_t v39 = (unsigned __int8 *)(v38 + 1);
          *(void *)int v49 = v38 + 1;
          uint64_t v40 = *(_DWORD **)(a1 + 112);
          if (v40 && (uint64_t v41 = *(int *)(a1 + 104), (int)v41 < *v40))
          {
            *(_DWORD *)(a1 + 104) = v41 + 1;
            uint64_t v42 = *(void *)&v40[2 * v41 + 2];
          }
          else
          {
            sub_14D75B8(*(void *)(a1 + 96));
            uint64_t v42 = sub_188CDC8(a1 + 96, v43);
            uint64_t v39 = *(unsigned __int8 **)v49;
          }
          int v38 = sub_14F9540(a3, v42, v39);
          *(void *)int v49 = v38;
          if (!v38) {
            goto LABEL_75;
          }
          if (*(void *)a3 <= (unint64_t)v38 || *v38 != 50) {
            goto LABEL_68;
          }
        }
      default:
LABEL_60:
        if (v9) {
          BOOL v44 = (v9 & 7) == 4;
        }
        else {
          BOOL v44 = 1;
        }
        if (!v44)
        {
          if (*v48)
          {
            uint64_t v45 = (std::string *)((*v48 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v45 = (std::string *)sub_188DBD8(v48);
            uint64_t v8 = *(char **)v49;
          }
          unint64_t v31 = sub_1885AC0(v9, v45, v8, a3);
LABEL_67:
          *(void *)int v49 = v31;
          if (!v31) {
            goto LABEL_75;
          }
LABEL_68:
          if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_75:
        }
          *(void *)int v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v49;
    }
  }
}

uint64_t sub_15901C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_158F2C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1590254(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_14DB148(v8, v10, a3);
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 56);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 8 * v11;
    do
    {
      char v14 = *(void **)(*(void *)(a1 + 64) + v12 + 8);
      if (*((char *)v14 + 23) < 0)
      {
        int64_t v15 = v14[1];
        if (v15 > 127) {
          goto LABEL_20;
        }
      }
      else
      {
        int64_t v15 = *((unsigned __int8 *)v14 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 14) >= v15)
      {
        *__dst = 18;
        __dst[1] = v15;
        if (*((char *)v14 + 23) < 0) {
          char v14 = (void *)*v14;
        }
        uint64_t v16 = __dst + 2;
        memcpy(v16, v14, v15);
        __dst = &v16[v15];
        goto LABEL_18;
      }
LABEL_20:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v14, __dst);
LABEL_18:
      v12 += 8;
    }
    while (v13 != v12);
  }
  int v17 = *(_DWORD *)(a1 + 16);
  if ((v17 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v18 = *(unsigned char *)(a1 + 128);
    *__dst = 24;
    __dst[1] = v18;
    __dst += 2;
  }
  if (v17) {
    __dst = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v19 = *(_DWORD *)(a1 + 80);
  if (v19)
  {
    for (int j = 0; j != v19; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *__dst = 42;
      unsigned int v22 = *(_DWORD *)(v21 + 20);
      __dst[1] = v22;
      if (v22 > 0x7F) {
        uint64_t v23 = sub_188A9CC(v22, __dst + 1);
      }
      else {
        uint64_t v23 = __dst + 2;
      }
      __dst = sub_158F5B4(v21, v23, a3);
    }
  }
  int v24 = *(_DWORD *)(a1 + 104);
  if (v24)
  {
    for (int k = 0; k != v24; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *__dst = 50;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      __dst[1] = v27;
      if (v27 > 0x7F) {
        uint64_t v28 = sub_188A9CC(v27, __dst + 1);
      }
      else {
        uint64_t v28 = __dst + 2;
      }
      __dst = sub_14D4730(v26, v28, a3);
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return __dst;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    uint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    uint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(__dst, v32, (int)v33);
    __dst += v34;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, __dst);
}

uint64_t sub_15905A4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14DB2B0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  if ((int)v8 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(int *)(a1 + 80);
  uint64_t v15 = v9 + v14;
  uint64_t v16 = *(void *)(a1 + 88);
  if (v16) {
    int v17 = (uint64_t *)(v16 + 8);
  }
  else {
    int v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = sub_158F7C4(v19);
      v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      v18 -= 8;
    }
    while (v18);
  }
  uint64_t v21 = *(int *)(a1 + 104);
  uint64_t v22 = v15 + v21;
  uint64_t v23 = *(void *)(a1 + 112);
  if (v23) {
    int v24 = (uint64_t *)(v23 + 8);
  }
  else {
    int v24 = 0;
  }
  if (v21)
  {
    uint64_t v25 = 8 * v21;
    do
    {
      uint64_t v26 = *v24++;
      uint64_t v27 = sub_14D4ACC(v26);
      v22 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
      v25 -= 8;
    }
    while (v25);
  }
  int v28 = *(_DWORD *)(a1 + 16);
  if ((v28 & 3) != 0)
  {
    if (v28)
    {
      unint64_t v29 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
      uint64_t v31 = *(void *)(v29 + 8);
      if ((v30 & 0x80u) == 0) {
        uint64_t v31 = v30;
      }
      v22 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v28 & 2) != 0) {
      v22 += 2;
    }
  }
  uint64_t v32 = *(void *)(a1 + 8);
  if (v32)
  {
    unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v34 + 31) < 0) {
      uint64_t v35 = *(void *)(v34 + 16);
    }
    else {
      uint64_t v35 = *(unsigned __int8 *)(v34 + 31);
    }
    v22 += v35;
  }
  *(_DWORD *)(a1 + 20) = v22;
  return v22;
}

void sub_15907A8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_14DF2F4((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    unsigned int v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_15A7768((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1515EA0((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 16);
  if ((v24 & 3) != 0)
  {
    if (v24)
    {
      uint64_t v25 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v26 = *(void *)(a1 + 8);
      uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        uint64_t v27 = (uint64_t *)*v27;
      }
      sub_1881DF4((std::string **)(a1 + 120), v25, v27);
    }
    if ((v24 & 2) != 0) {
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    }
    *(_DWORD *)(a1 + 16) |= v24;
  }
  uint64_t v28 = *(void *)(a2 + 8);
  if (v28)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v28 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_15909FC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    BOOL v4 = sub_14A912C(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if (!v4) {
      return 0;
    }
  }
  if (!sub_1590A8C(a1 + 72)) {
    return 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 104);
  do
  {
    BOOL v6 = (int)v5 < 1;
    if ((int)v5 < 1) {
      break;
    }
    uint64_t v7 = v5 - 1;
    char v8 = sub_14D4F78(*(void *)(*(void *)(a1 + 112) + 8 * v5));
    uint64_t v5 = v7;
  }
  while ((v8 & 1) != 0);
  return v6;
}

uint64_t sub_1590A8C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 56);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_131B154(*(void *)(*(void *)(v4 + 64) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_1590B18@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchPlaceRequestExtension.SearchMetadata");
}

uint64_t sub_1590B28(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253E958)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_14F520C(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_14FEA8C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1590BF8(uint64_t a1)
{
  sub_1590B28(a1);

  operator delete();
}

uint64_t sub_1590C30(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_14F5248(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_14FEAC8(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1590CA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v19 + 2;
      }
    }
    int v19 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_150E620((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      char v7 = v19;
    }
    int v14 = (char *)sub_150E590(a3, v15, (unsigned __int8 *)v7);
LABEL_31:
    int v19 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_14FBD08((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      char v7 = v19;
    }
    int v14 = sub_14F6918(a3, v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v19;
    }
    int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v19;
  }
  return 0;
}

char *sub_1590E60(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = (char *)sub_14F6C78(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_14FF8C4(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1590FE0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_14F7B84(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1500260(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_15910B8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_14FBD08((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_253BBE8;
      }
      sub_14F84A8(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = sub_150E620((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        BOOL v12 = &off_253BF38;
      }
      sub_15006F8(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_15911BC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_14F8E7C(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_1500C40(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1591208@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchPlaceRequestExtension.PoiRecallData");
}

uint64_t sub_1591218(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 64);
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_14DD86C((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15912E4(uint64_t a1)
{
  sub_1591218(a1);

  operator delete();
}

uint64_t sub_159131C(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  uint64_t v2 = *(unsigned int *)(result + 48);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14A0EFC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 48) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v5 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v7 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_15:
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(void *)(v8 + 72) = 0;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_159140C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v32 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v31 = (uint64_t *)(a1 + 8);
    while (1)
    {
      unint64_t v7 = (unsigned __int8 *)(*(void *)v32 + 1);
      unsigned int v8 = **(unsigned char **)v32;
      if ((char)**(unsigned char **)v32 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if ((char)*v7 < 0)
        {
          unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v32, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unint64_t v7 = (unsigned __int8 *)(*(void *)v32 + 2);
        }
      }
      *(void *)uint64_t v32 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 10) {
            goto LABEL_46;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v11 = *(void *)(a1 + 8);
          BOOL v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
          if (v11) {
            BOOL v12 = (uint64_t *)*v12;
          }
          uint64_t v13 = (void *)(a1 + 64);
          goto LABEL_17;
        case 2u:
          if (v8 != 18) {
            goto LABEL_46;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v14 = *(void *)(a1 + 8);
          BOOL v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
          if (v14) {
            BOOL v12 = (uint64_t *)*v12;
          }
          uint64_t v13 = (void *)(a1 + 72);
LABEL_17:
          unint64_t v15 = (std::string *)sub_1880F84(v13, v12);
          uint64_t v16 = (void *)sub_188C244(v15, *(char **)v32, (uint64_t)a3);
          goto LABEL_53;
        case 3u:
          if (v8 == 24)
          {
            uint64_t v17 = v7 - 1;
            while (1)
            {
              *(void *)uint64_t v32 = v17 + 1;
              uint64_t v18 = v17[1];
              if ((char)v17[1] < 0)
              {
                int v19 = v18 + (v17[2] << 7);
                uint64_t v18 = (v19 - 128);
                if ((char)v17[2] < 0)
                {
                  uint64_t v17 = (unsigned __int8 *)sub_188C138((uint64_t)(v17 + 1), (v19 - 128));
                  uint64_t v18 = v20;
                }
                else
                {
                  v17 += 3;
                }
              }
              else
              {
                v17 += 2;
              }
              *(void *)uint64_t v32 = v17;
              uint64_t v21 = *(unsigned int *)(a1 + 24);
              if (v21 == *(_DWORD *)(a1 + 28))
              {
                int v22 = v21 + 1;
                sub_188CA54((unsigned int *)(a1 + 24), v21 + 1);
                *(void *)(*(void *)(a1 + 32) + 8 * v21) = v18;
                uint64_t v17 = *(unsigned __int8 **)v32;
              }
              else
              {
                *(void *)(*(void *)(a1 + 32) + 8 * v21) = v18;
                int v22 = v21 + 1;
              }
              *(_DWORD *)(a1 + 24) = v22;
              if (!v17) {
                goto LABEL_59;
              }
              if (*(void *)a3 <= (unint64_t)v17 || *v17 != 24) {
                goto LABEL_54;
              }
            }
          }
          if (v8 == 26)
          {
            uint64_t v16 = sub_188C2EC((unsigned int *)(a1 + 24), v7, (uint64_t)a3);
          }
          else
          {
LABEL_46:
            if (v8) {
              BOOL v29 = (v8 & 7) == 4;
            }
            else {
              BOOL v29 = 1;
            }
            if (v29)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                goto LABEL_2;
              }
LABEL_59:
              *(void *)uint64_t v32 = 0;
              goto LABEL_2;
            }
            if (*v31)
            {
              uint64_t v30 = (std::string *)((*v31 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v30 = (std::string *)sub_188DBD8(v31);
              unint64_t v7 = *(unsigned __int8 **)v32;
            }
            uint64_t v16 = sub_1885AC0(v8, v30, (char *)v7, a3);
          }
LABEL_53:
          *(void *)uint64_t v32 = v16;
          if (!v16) {
            goto LABEL_59;
          }
LABEL_54:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 4u:
          if (v8 != 34) {
            goto LABEL_46;
          }
          uint64_t v23 = v7 - 1;
          while (1)
          {
            int v24 = v23 + 1;
            *(void *)uint64_t v32 = v23 + 1;
            uint64_t v25 = *(_DWORD **)(a1 + 56);
            if (v25 && (uint64_t v26 = *(int *)(a1 + 48), (int)v26 < *v25))
            {
              *(_DWORD *)(a1 + 48) = v26 + 1;
              uint64_t v27 = *(void *)&v25[2 * v26 + 2];
            }
            else
            {
              uint64_t v28 = sub_14A25EC(*(void *)(a1 + 40));
              uint64_t v27 = sub_188CDC8(a1 + 40, (uint64_t)v28);
              int v24 = *(unsigned __int8 **)v32;
            }
            uint64_t v23 = (unsigned __int8 *)sub_14A129C(a3, v27, v24);
            *(void *)uint64_t v32 = v23;
            if (!v23) {
              goto LABEL_59;
            }
            if (*(void *)a3 <= (unint64_t)v23 || *v23 != 34) {
              goto LABEL_54;
            }
          }
        case 5u:
          if (v8 != 41) {
            goto LABEL_46;
          }
          v5 |= 4u;
          *(void *)(a1 + 80) = *(void *)v7;
          *(void *)uint64_t v32 = v7 + 8;
          goto LABEL_54;
        default:
          goto LABEL_46;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v32;
}

unsigned char *sub_159179C(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 24);
  if ((int)v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v9 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      unsigned char *v4 = 24;
      v4[1] = v9;
      if (v9 > 0x7F)
      {
        v4[1] = v9 | 0x80;
        unint64_t v10 = v9 >> 7;
        v4[2] = v9 >> 7;
        v4 += 3;
        if (v9 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v11 = v10 >> 14;
            v10 >>= 7;
            *v4++ = v10;
          }
          while (v11);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  int v12 = *(_DWORD *)(a1 + 48);
  if (v12)
  {
    for (int j = 0; j != v12; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      unsigned char *v4 = 34;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      v4[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, v4 + 1);
      }
      else {
        uint64_t v16 = v4 + 2;
      }
      uint64_t v4 = sub_14A10E0(v14, v16, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v17 = *(void *)(a1 + 80);
    unsigned char *v4 = 41;
    *(void *)(v4 + 1) = v17;
    v4 += 9;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_15919F8(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + *(unsigned int *)(a1 + 24) + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_14A11E4(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 16);
  if ((v10 & 7) != 0)
  {
    if (v10)
    {
      unint64_t v11 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v10 & 2) != 0)
    {
      unint64_t v14 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
      uint64_t v16 = *(void *)(v14 + 8);
      if ((v15 & 0x80u) == 0) {
        uint64_t v16 = v15;
      }
      v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v10 & 4) != 0) {
      v4 += 9;
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v4 += v20;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

std::string *sub_1591B54(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v10 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = sub_14DD9EC((std::string *)((char *)v3 + 40), v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v11 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v8;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v11;
    uint64_t v12 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 16);
  if ((v13 & 7) != 0)
  {
    if (v13)
    {
      uint64_t v15 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v15, v17);
      if ((v13 & 2) == 0)
      {
LABEL_9:
        if ((v13 & 4) == 0)
        {
LABEL_11:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v13;
          goto LABEL_12;
        }
LABEL_10:
        v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
        goto LABEL_11;
      }
    }
    else if ((v13 & 2) == 0)
    {
      goto LABEL_9;
    }
    uint64_t v18 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
    uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      uint64_t v20 = (uint64_t *)*v20;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v18, v20);
    if ((v13 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1591D00()
{
  return 1;
}

void *sub_1591D08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchPlaceRequestExtension.IrpData");
}

uint64_t sub_1591D18(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253E9D8)
  {
    if (*(void *)(a1 + 48))
    {
      sub_1762C7C();
      operator delete();
    }
    if (*(void *)(a1 + 56))
    {
      sub_1762C7C();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_14DD86C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1591DF4(uint64_t a1)
{
  sub_1591D18(a1);

  operator delete();
}

uint64_t sub_1591E2C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14A0EFC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      uint64_t result = sub_175FE78(*(void *)(v1 + 48));
    }
    if ((v5 & 2) != 0) {
      uint64_t result = sub_175FE78(*(void *)(v1 + 56));
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_1591ED0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v25 + 2;
      }
    }
    uint64_t v25 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void *)(a1 + 56);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_178CDA8((uint64_t)v17);
        *(void *)(a1 + 56) = v16;
        goto LABEL_31;
      }
LABEL_32:
      uint64_t v15 = (char *)sub_1265F8C(a3, v16, (unsigned __int8 *)v7);
      goto LABEL_33;
    }
    if (v11 == 2)
    {
      if (v8 != 18) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(void *)(a1 + 48);
      if (!v16)
      {
        uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v16 = sub_178CDA8((uint64_t)v18);
        *(void *)(a1 + 48) = v16;
LABEL_31:
        char v7 = v25;
        goto LABEL_32;
      }
      goto LABEL_32;
    }
    if (v11 == 1 && v8 == 10)
    {
      std::string::size_type v19 = v7 - 1;
      while (1)
      {
        uint64_t v20 = (unsigned __int8 *)(v19 + 1);
        uint64_t v25 = v19 + 1;
        uint64_t v21 = *(_DWORD **)(a1 + 40);
        if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
        {
          *(_DWORD *)(a1 + 32) = v22 + 1;
          uint64_t v23 = *(void *)&v21[2 * v22 + 2];
        }
        else
        {
          int v24 = sub_14A25EC(*(void *)(a1 + 24));
          uint64_t v23 = sub_188CDC8(a1 + 24, (uint64_t)v24);
          uint64_t v20 = (unsigned __int8 *)v25;
        }
        std::string::size_type v19 = (char *)sub_14A129C(a3, v23, v20);
        uint64_t v25 = v19;
        if (!v19) {
          return 0;
        }
        if (*(void *)a3 <= (unint64_t)v19 || *v19 != 10) {
          goto LABEL_34;
        }
      }
    }
LABEL_14:
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v25;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    uint64_t v25 = v15;
    if (!v15) {
      return 0;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      return v25;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v25;
  }
  return 0;
}

char *sub_1592124(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_14A10E0(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v12 = *(void *)(a1 + 48);
    *__dst = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 44);
    __dst[1] = v13;
    if (v13 > 0x7F) {
      uint64_t v14 = sub_188A9CC(v13, __dst + 1);
    }
    else {
      uint64_t v14 = __dst + 2;
    }
    __dst = sub_1763540(v12, v14, a3);
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v15 = *(void *)(a1 + 56);
    *__dst = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 44);
    __dst[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, __dst + 1);
    }
    else {
      uint64_t v17 = __dst + 2;
    }
    __dst = sub_1763540(v15, v17, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return __dst;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(__dst, v21, (int)v22);
    __dst += v23;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, __dst);
}

uint64_t sub_1592334(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14A11E4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_1763C40(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v10 = sub_1763C40(*(void *)(a1 + 56));
      v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1592450(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_14DD9EC((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_178CDA8((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v13 = &off_25486C0;
      }
      sub_1760D4C(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v14 = *(void *)(a1 + 56);
      if (!v14)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        unsigned int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unsigned int v16 = (void *)*v16;
        }
        uint64_t v14 = sub_178CDA8((uint64_t)v16);
        *(void *)(a1 + 56) = v14;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v17 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v17 = &off_25486C0;
      }
      sub_1760D4C(v14, (uint64_t)v17);
    }
  }
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_15925BC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_17612D4(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_17612D4(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1592608@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchPlaceRequestExtension.ResponseSelectionData");
}

void *sub_1592618(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1592694(void *a1)
{
  sub_1592618(a1);

  operator delete();
}

char *sub_15926CC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        int v7 = v30 + 2;
      }
    }
    uint64_t v30 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_41;
    }
    uint64_t v21 = v7 + 1;
    unint64_t v22 = *v7;
    if (*v7 < 0)
    {
      int v23 = *v21;
      int v24 = v22 + (v23 << 7);
      unint64_t v22 = (v24 - 128);
      if (v23 < 0)
      {
        uint64_t v30 = (char *)sub_188C138((uint64_t)v7, (v24 - 128));
        if (!v30) {
          return 0;
        }
        unint64_t v22 = v25;
        goto LABEL_35;
      }
      uint64_t v21 = v7 + 2;
    }
    uint64_t v30 = v21;
LABEL_35:
    if (sub_14A2810(v22))
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 40) = v22;
    }
    else
    {
      if (*v6) {
        BOOL v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        BOOL v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v22, v29);
    }
LABEL_49:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      return v30;
    }
  }
  if (v8 >> 3 == 1)
  {
    if (v8 == 8)
    {
      uint64_t v12 = v7 - 1;
      while (1)
      {
        uint64_t v30 = v12 + 1;
        unint64_t v13 = v12[1];
        uint64_t v14 = v12 + 2;
        if (v12[1] < 0)
        {
          int v15 = *v14;
          int v16 = v13 + (v15 << 7);
          unint64_t v13 = (v16 - 128);
          if (v15 < 0)
          {
            uint64_t v30 = (char *)sub_188C138((uint64_t)(v12 + 1), (v16 - 128));
            if (!v30) {
              return 0;
            }
            unint64_t v13 = v19;
            goto LABEL_16;
          }
          uint64_t v14 = v12 + 3;
        }
        uint64_t v30 = v14;
LABEL_16:
        if (sub_14FCE30(v13))
        {
          uint64_t v17 = *(unsigned int *)(a1 + 24);
          if (v17 == *(_DWORD *)(a1 + 28))
          {
            int v18 = v17 + 1;
            sub_188C80C((unsigned int *)(a1 + 24), v17 + 1);
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v17) = v13;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v17) = v13;
            int v18 = v17 + 1;
          }
          *(_DWORD *)(a1 + 24) = v18;
        }
        else
        {
          if (*v6) {
            unint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v20);
        }
        uint64_t v12 = v30;
        if (*(void *)a3 <= (unint64_t)v30 || *v30 != 8) {
          goto LABEL_49;
        }
      }
    }
    if (v8 == 10)
    {
      *(void *)&long long v31 = a1 + 24;
      *((void *)&v31 + 1) = sub_14FCE30;
      uint64_t v32 = a1 + 8;
      int v33 = 1;
      uint64_t v26 = sub_1112E88((uint64_t)a3, v7, &v31);
      goto LABEL_48;
    }
  }
LABEL_41:
  if (v8) {
    BOOL v27 = (v8 & 7) == 4;
  }
  else {
    BOOL v27 = 1;
  }
  if (!v27)
  {
    if (*v6)
    {
      uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v30;
    }
    uint64_t v26 = (char *)sub_1885AC0(v8, v28, v7, a3);
LABEL_48:
    uint64_t v30 = v26;
    if (!v26) {
      return 0;
    }
    goto LABEL_49;
  }
  if (!v7) {
    return 0;
  }
  a3[10].i32[0] = v8 - 1;
  return v30;
}

char *sub_15929D4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v11 = *(int *)(a1 + 40);
    *__dst = 16;
    __dst[1] = v11;
    if (v11 > 0x7F)
    {
      __dst[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      __dst[2] = v11 >> 7;
      __dst += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *__dst++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_1592BA4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  if (*(unsigned char *)(a1 + 16))
  {
    int v7 = *(_DWORD *)(a1 + 40);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v6 += v8;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v6 += v12;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

uint64_t sub_1592C6C()
{
  return 1;
}

void *sub_1592C74@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchPlaceRequestExtension.SearchIntentMetadata");
}

uint64_t sub_1592C84(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C31F8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1592D24(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C3278;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1592DA4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C32F8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1592E20(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C3378;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(_DWORD *)(result + 96) = 0;
  return result;
}

void *sub_1592ED4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C33F8;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1592F50(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24C3478;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

void *sub_1592FCC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24C34F8;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  return result;
}

uint64_t sub_159307C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C3578;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = a1;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(void *)(result + 120) = &qword_2550250;
  *(unsigned char *)(result + 128) = 0;
  return result;
}

void *sub_1593140(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24C35F8;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_15931BC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_24C3678;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = a1;
  result[6] = 0;
  result[7] = 0;
  result[8] = &qword_2550250;
  result[9] = &qword_2550250;
  result[10] = 0;
  return result;
}

uint64_t sub_159326C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C36F8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

uint64_t sub_1593308(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C3778;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

BOOL sub_15933A4(unsigned int a1)
{
  return a1 < 2;
}

BOOL sub_15933B0(unsigned int a1)
{
  return a1 < 7;
}

void *sub_15933BC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_15A77F4(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1593444(void *a1)
{
  sub_15933BC(a1);

  operator delete();
}

uint64_t sub_159347C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1593E28(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_15934FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  long long v31 = a2;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    return v31;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v31 + 1;
    unsigned int v8 = *v31;
    if (*v31 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        int v7 = v31 + 2;
      }
    }
    long long v31 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 == 16)
    {
      unint64_t v16 = v7 - 1;
      while (1)
      {
        long long v31 = v16 + 1;
        unint64_t v17 = v16[1];
        uint64_t v18 = v16 + 2;
        if (v16[1] < 0)
        {
          int v19 = *v18;
          int v20 = v17 + (v19 << 7);
          unint64_t v17 = (v20 - 128);
          if (v19 < 0)
          {
            long long v31 = (char *)sub_188C138((uint64_t)(v16 + 1), (v20 - 128));
            if (!v31) {
              return 0;
            }
            unint64_t v17 = v23;
            goto LABEL_28;
          }
          uint64_t v18 = v16 + 3;
        }
        long long v31 = v18;
LABEL_28:
        if (v17 > 6)
        {
          if (*v6) {
            int v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v17, v24);
        }
        else
        {
          uint64_t v21 = *(unsigned int *)(a1 + 40);
          if (v21 == *(_DWORD *)(a1 + 44))
          {
            int v22 = v21 + 1;
            sub_188C80C((unsigned int *)(a1 + 40), v21 + 1);
            *(_DWORD *)(*(void *)(a1 + 48) + 4 * v21) = v17;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 48) + 4 * v21) = v17;
            int v22 = v21 + 1;
          }
          *(_DWORD *)(a1 + 40) = v22;
        }
        unint64_t v16 = v31;
        if (*(void *)a3 <= (unint64_t)v31 || *v31 != 16) {
          goto LABEL_50;
        }
      }
    }
    if (v8 == 18)
    {
      *(void *)&long long v32 = a1 + 40;
      *((void *)&v32 + 1) = sub_15933B0;
      uint64_t v33 = a1 + 8;
      int v34 = 2;
      int v15 = sub_1112E88((uint64_t)a3, v7, &v32);
      goto LABEL_20;
    }
LABEL_13:
    if (v8) {
      BOOL v13 = (v8 & 7) == 4;
    }
    else {
      BOOL v13 = 1;
    }
    if (v13)
    {
      if (!v7) {
        return 0;
      }
      a3[10].i32[0] = v8 - 1;
      return v31;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v31;
    }
    int v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
LABEL_20:
    long long v31 = v15;
    if (!v15) {
      return 0;
    }
LABEL_50:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      return v31;
    }
  }
  if (v8 >> 3 != 1 || v8 != 10) {
    goto LABEL_13;
  }
  unint64_t v25 = v7 - 1;
  while (1)
  {
    uint64_t v26 = (unsigned __int8 *)(v25 + 1);
    long long v31 = v25 + 1;
    BOOL v27 = *(_DWORD **)(a1 + 32);
    if (v27 && (uint64_t v28 = *(int *)(a1 + 24), (int)v28 < *v27))
    {
      *(_DWORD *)(a1 + 24) = v28 + 1;
      uint64_t v29 = *(void *)&v27[2 * v28 + 2];
    }
    else
    {
      uint64_t v30 = sub_1596AE0(*(void *)(a1 + 16));
      uint64_t v29 = sub_188CDC8(a1 + 16, v30);
      uint64_t v26 = (unsigned __int8 *)v31;
    }
    unint64_t v25 = sub_15937F0(a3, v29, v26);
    long long v31 = v25;
    if (!v25) {
      return 0;
    }
    if (*(void *)a3 <= (unint64_t)v25 || *v25 != 10) {
      goto LABEL_50;
    }
  }
}

char *sub_15937F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1593ED8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1593880(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1594404(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 40);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v13 = *(int *)(*(void *)(a1 + 48) + 4 * j);
      *__dst = 16;
      __dst[1] = v13;
      if (v13 > 0x7F)
      {
        __dst[1] = v13 | 0x80;
        unint64_t v14 = v13 >> 7;
        __dst[2] = v13 >> 7;
        __dst += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v15 = v14 >> 14;
            v14 >>= 7;
            *__dst++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_1593A60(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1594784(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 40);
  if (v8)
  {
    int v9 = 0;
    uint64_t v10 = 0;
    do
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v9);
      if (v11 < 0) {
        uint64_t v12 = 10;
      }
      else {
        uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
      }
      v10 += v12;
      ++v9;
    }
    while (v8 != v9);
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t result = v2 + v8 + v10;
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v15 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    result += v16;
  }
  *(_DWORD *)(a1 + 56) = result;
  return result;
}

void sub_1593B68(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_15A78F4((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 40);
    sub_188C80C((unsigned int *)(a1 + 40), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1593C7C(uint64_t a1)
{
  return sub_1593C84(a1 + 16);
}

uint64_t sub_1593C84(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_14A4178(*(void *)(v5 + 80));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_1593CF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.IbeLogReplayData");
}

uint64_t sub_1593D04(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253EA88)
  {
    uint64_t v5 = *(void *)(a1 + 80);
    if (v5)
    {
      sub_14A2F24(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 88);
    if (v6)
    {
      sub_12C55C4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 64);
  sub_15150FC((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1593DF0(uint64_t a1)
{
  sub_1593D04(a1);

  operator delete();
}

uint64_t sub_1593E28(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  uint64_t v2 = *(unsigned int *)(result + 48);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14A4310(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 48) = 0;
  }
  *(_DWORD *)(v1 + 64) = 0;
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      uint64_t result = (uint64_t)sub_14A2F60(*(unsigned char **)(v1 + 80));
    }
    if ((v5 & 2) != 0) {
      uint64_t result = sub_12C5600(*(void *)(v1 + 88));
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(unsigned char *)(v6 + 88) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_1593ED8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v47 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v47, a3[11].i32[1]) & 1) == 0)
  {
    char v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = v47 + 1;
      unsigned int v9 = *v47;
      if (*v47 < 0)
      {
        int v10 = *v8;
        unsigned int v11 = v9 + (v10 << 7);
        unsigned int v9 = v11 - 128;
        if (v10 < 0)
        {
          uint64_t v8 = (char *)sub_188C180((uint64_t)v47, v11 - 128);
          unsigned int v9 = v12;
        }
        else
        {
          uint64_t v8 = v47 + 2;
        }
      }
      uint64_t v47 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_76;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v13 = *(void *)(a1 + 80);
          if (!v13)
          {
            uint64_t v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v14 = (void *)*v14;
            }
            sub_14A47B4((uint64_t)v14);
            uint64_t v13 = v15;
            *(void *)(a1 + 80) = v15;
            uint64_t v8 = v47;
          }
          uint64_t v16 = (char *)sub_14F6AC8(a3, v13, (unsigned __int8 *)v8);
          goto LABEL_83;
        case 2u:
          if (v9 == 16)
          {
            unint64_t v17 = v8 - 1;
            while (1)
            {
              uint64_t v47 = v17 + 1;
              unint64_t v18 = v17[1];
              int v19 = v17 + 2;
              if (v17[1] < 0)
              {
                int v20 = *v19;
                int v21 = v18 + (v20 << 7);
                unint64_t v18 = (v21 - 128);
                if (v20 < 0)
                {
                  uint64_t v47 = (char *)sub_188C138((uint64_t)(v17 + 1), (v21 - 128));
                  if (!v47) {
                    goto LABEL_89;
                  }
                  unint64_t v18 = v24;
                  goto LABEL_21;
                }
                int v19 = v17 + 3;
              }
              uint64_t v47 = v19;
LABEL_21:
              if (v18 > 6)
              {
                if (*v7) {
                  unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                }
                sub_188C020(2, v18, v25);
              }
              else
              {
                uint64_t v22 = *(unsigned int *)(a1 + 24);
                if (v22 == *(_DWORD *)(a1 + 28))
                {
                  int v23 = v22 + 1;
                  sub_188C80C((unsigned int *)(a1 + 24), v22 + 1);
                  *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
                  int v23 = v22 + 1;
                }
                *(_DWORD *)(a1 + 24) = v23;
              }
              unint64_t v17 = v47;
              if (*(void *)a3 <= (unint64_t)v47 || *v47 != 16) {
                goto LABEL_84;
              }
            }
          }
          if (v9 == 18)
          {
            *(void *)&long long v48 = a1 + 24;
            *((void *)&v48 + 1) = sub_15933B0;
            uint64_t v49 = a1 + 8;
            int v50 = 2;
            uint64_t v16 = sub_1112E88((uint64_t)a3, v8, &v48);
          }
          else
          {
LABEL_76:
            if (v9) {
              BOOL v45 = (v9 & 7) == 4;
            }
            else {
              BOOL v45 = 1;
            }
            if (v45)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_89:
              uint64_t v47 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              uint64_t v46 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v46 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v47;
            }
            uint64_t v16 = (char *)sub_1885AC0(v9, v46, v8, a3);
          }
LABEL_83:
          uint64_t v47 = v16;
          if (!v16) {
            goto LABEL_89;
          }
LABEL_84:
          if (sub_11947B8((uint64_t)a3, &v47, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 3u:
          if (v9 != 24) {
            goto LABEL_76;
          }
          v5 |= 4u;
          uint64_t v26 = v8 + 1;
          uint64_t v27 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_39;
          }
          int v28 = *v26;
          uint64_t v27 = v27 + (v28 << 7) - 128;
          if (v28 < 0)
          {
            uint64_t v43 = (char *)sub_188C138((uint64_t)v8, v27);
            uint64_t v47 = v43;
            *(unsigned char *)(a1 + 96) = v44 != 0;
            if (!v43) {
              goto LABEL_89;
            }
          }
          else
          {
            uint64_t v26 = v8 + 2;
LABEL_39:
            uint64_t v47 = v26;
            *(unsigned char *)(a1 + 96) = v27 != 0;
          }
          goto LABEL_84;
        case 4u:
          if (v9 != 34) {
            goto LABEL_76;
          }
          uint64_t v29 = v8 - 1;
          while (1)
          {
            uint64_t v30 = (unsigned __int8 *)(v29 + 1);
            uint64_t v47 = v29 + 1;
            long long v31 = *(_DWORD **)(a1 + 56);
            if (v31 && (uint64_t v32 = *(int *)(a1 + 48), (int)v32 < *v31))
            {
              *(_DWORD *)(a1 + 48) = v32 + 1;
              uint64_t v33 = *(void *)&v31[2 * v32 + 2];
            }
            else
            {
              int v34 = sub_14A4848(*(void *)(a1 + 40));
              uint64_t v33 = sub_188CDC8(a1 + 40, (uint64_t)v34);
              uint64_t v30 = (unsigned __int8 *)v47;
            }
            uint64_t v29 = (char *)sub_14F6B58(a3, v33, v30);
            uint64_t v47 = v29;
            if (!v29) {
              goto LABEL_89;
            }
            if (*(void *)a3 <= (unint64_t)v29 || *v29 != 34) {
              goto LABEL_84;
            }
          }
        case 5u:
          if (v9 == 40)
          {
            uint64_t v35 = v8 - 1;
            while (1)
            {
              uint64_t v47 = v35 + 1;
              uint64_t v36 = v35[1];
              if (v35[1] < 0)
              {
                int v37 = v36 + (v35[2] << 7);
                uint64_t v36 = (v37 - 128);
                if (v35[2] < 0)
                {
                  uint64_t v35 = (char *)sub_188C138((uint64_t)(v35 + 1), (v37 - 128));
                  uint64_t v36 = v38;
                }
                else
                {
                  v35 += 3;
                }
              }
              else
              {
                v35 += 2;
              }
              uint64_t v47 = v35;
              uint64_t v39 = *(unsigned int *)(a1 + 64);
              if (v39 == *(_DWORD *)(a1 + 68))
              {
                int v40 = v39 + 1;
                sub_188CA54((unsigned int *)(a1 + 64), v39 + 1);
                *(void *)(*(void *)(a1 + 72) + 8 * v39) = v36;
                uint64_t v35 = v47;
              }
              else
              {
                *(void *)(*(void *)(a1 + 72) + 8 * v39) = v36;
                int v40 = v39 + 1;
              }
              *(_DWORD *)(a1 + 64) = v40;
              if (!v35) {
                goto LABEL_89;
              }
              if (*(void *)a3 <= (unint64_t)v35 || *v35 != 40) {
                goto LABEL_84;
              }
            }
          }
          if (v9 != 42) {
            goto LABEL_76;
          }
          uint64_t v16 = (char *)sub_188C2EC((unsigned int *)(a1 + 64), (unsigned __int8 *)v8, (uint64_t)a3);
          goto LABEL_83;
        case 6u:
          if (v9 != 50) {
            goto LABEL_76;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v41 = *(void *)(a1 + 88);
          if (!v41)
          {
            uint64_t v42 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v42 = (void *)*v42;
            }
            uint64_t v41 = sub_12C6100((uint64_t)v42);
            *(void *)(a1 + 88) = v41;
            uint64_t v8 = v47;
          }
          uint64_t v16 = (char *)sub_14F6BE8(a3, v41, (unsigned __int8 *)v8);
          goto LABEL_83;
        default:
          goto LABEL_76;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v47;
}

unsigned char *sub_1594404(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 80);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_14A3704(v7, (unint64_t)v9, a3);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 24);
  if ((int)v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v12 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 16;
      v4[1] = v12;
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        v4[2] = v12 >> 7;
        v4 += 3;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v14 = v13 >> 14;
            v13 >>= 7;
            *v4++ = v13;
          }
          while (v14);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 96);
    unsigned char *v4 = 24;
    v4[1] = v15;
    v4 += 2;
  }
  int v16 = *(_DWORD *)(a1 + 48);
  if (v16)
  {
    for (int j = 0; j != v16; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      unsigned char *v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        int v20 = v4 + 2;
      }
      uint64_t v4 = sub_14A4534(v18, v20, a3);
    }
  }
  uint64_t v21 = *(unsigned int *)(a1 + 64);
  if ((int)v21 >= 1)
  {
    for (uint64_t k = 0; k != v21; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v23 = *(void *)(*(void *)(a1 + 72) + 8 * k);
      unsigned char *v4 = 40;
      v4[1] = v23;
      if (v23 > 0x7F)
      {
        v4[1] = v23 | 0x80;
        unint64_t v24 = v23 >> 7;
        v4[2] = v23 >> 7;
        v4 += 3;
        if (v23 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v25 = v24 >> 14;
            v24 >>= 7;
            *v4++ = v24;
          }
          while (v25);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v26 = *(void *)(a1 + 88);
    unsigned char *v4 = 50;
    unsigned int v27 = *(_DWORD *)(v26 + 104);
    v4[1] = v27;
    if (v27 > 0x7F) {
      int v28 = sub_188A9CC(v27, v4 + 1);
    }
    else {
      int v28 = v4 + 2;
    }
    uint64_t v4 = sub_12C59DC(v26, v28, a3);
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    uint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    uint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_1594784(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    uint64_t v3 = 0;
    int v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v4);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v6;
      ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = v3 + v2;
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v7 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14A4620(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = sub_188D5A8((unsigned int *)(a1 + 64)) + v9 + *(unsigned int *)(a1 + 64);
  int v16 = *(_DWORD *)(a1 + 16);
  if ((v16 & 7) != 0)
  {
    if (v16)
    {
      uint64_t v17 = sub_14A3CA8(*(void *)(a1 + 80));
      v15 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v16 & 2) != 0)
    {
      uint64_t v18 = sub_12C5DC8(*(void *)(a1 + 88));
      v15 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v16 & 4) != 0) {
      v15 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v15 += v22;
  }
  *(_DWORD *)(a1 + 20) = v15;
  return v15;
}

void sub_1594914(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1515740((std::string *)(a1 + 40), v10, v9, v8, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v11 = *(_DWORD *)(a1 + 48) + v8;
    *(_DWORD *)(a1 + 48) = v11;
    uint64_t v12 = *(int **)(a1 + 56);
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 64);
  if (v13)
  {
    uint64_t v14 = *(int *)(a1 + 64);
    sub_188CA54((unsigned int *)(a1 + 64), v14 + v13);
    uint64_t v15 = *(void *)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy((void *)(v15 + 8 * v14), *(const void **)(a2 + 72), 8 * *(int *)(a2 + 64));
  }
  int v16 = *(_DWORD *)(a2 + 16);
  if ((v16 & 7) != 0)
  {
    if (v16)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 80);
      if (!v18)
      {
        uint64_t v19 = *(void *)(a1 + 8);
        int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          int v20 = (void *)*v20;
        }
        sub_14A47B4((uint64_t)v20);
        *(void *)(a1 + 80) = v18;
      }
      if (*(void *)(a2 + 80)) {
        unint64_t v21 = *(uint64_t (****)())(a2 + 80);
      }
      else {
        unint64_t v21 = &off_253A3B0;
      }
      sub_14A3EEC(v18, (uint64_t)v21);
      if ((v16 & 2) == 0)
      {
LABEL_11:
        if ((v16 & 4) == 0)
        {
LABEL_13:
          *(_DWORD *)(a1 + 16) |= v16;
          goto LABEL_14;
        }
LABEL_12:
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        goto LABEL_13;
      }
    }
    else if ((v16 & 2) == 0)
    {
      goto LABEL_11;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v22 = *(std::string **)(a1 + 88);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      unint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = (std::string *)sub_12C6100((uint64_t)v24);
      *(void *)(a1 + 88) = v22;
    }
    if (*(void *)(a2 + 88)) {
      unint64_t v25 = *(void *(****)(void *))(a2 + 88);
    }
    else {
      unint64_t v25 = &off_25311A0;
    }
    sub_12C5F4C(v22, (uint64_t)v25);
    if ((v16 & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1594B34(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_14A4178(*(void *)(a1 + 80));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1594B60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.IbeInterpretationData");
}

void *sub_1594B70(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 11));
  sub_14DD86C(a1 + 8);
  sub_14DD86C(a1 + 5);
  sub_15A7874(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1594C10(void *a1)
{
  sub_1594B70(a1);

  operator delete();
}

uint64_t sub_1594C48(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15959F0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14A0EFC(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 72);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 80) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_14A0EFC(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 72) = 0;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 80) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

char *sub_1594D18(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v42 = a2;
  if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
    return v42;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v42 + 1;
    unsigned int v8 = *v42;
    if (*v42 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v42, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = v42 + 2;
      }
    }
    uint64_t v42 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_61;
        }
        char v12 = v7 - 1;
        while (1)
        {
          int v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v42 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_1596C48(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            int v13 = (unsigned __int8 *)v42;
          }
          char v12 = sub_159515C(a3, v16, v13);
          uint64_t v42 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_69;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_61;
        }
        uint64_t v18 = v7 - 1;
        while (1)
        {
          uint64_t v19 = (unsigned __int8 *)(v18 + 1);
          uint64_t v42 = v18 + 1;
          int v20 = *(_DWORD **)(a1 + 56);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 48), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 48) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_14A25EC(*(void *)(a1 + 40));
            uint64_t v22 = sub_188CDC8(a1 + 40, (uint64_t)v23);
            uint64_t v19 = (unsigned __int8 *)v42;
          }
          uint64_t v18 = (char *)sub_14A129C(a3, v22, v19);
          uint64_t v42 = v18;
          if (!v18) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
            goto LABEL_69;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_61;
        }
        unint64_t v24 = v7 - 1;
        while (1)
        {
          unint64_t v25 = (unsigned __int8 *)(v24 + 1);
          uint64_t v42 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 80);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 72), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 72) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_14A25EC(*(void *)(a1 + 64));
            uint64_t v28 = sub_188CDC8(a1 + 64, (uint64_t)v29);
            unint64_t v25 = (unsigned __int8 *)v42;
          }
          unint64_t v24 = (char *)sub_14A129C(a3, v28, v25);
          uint64_t v42 = v24;
          if (!v24) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 26) {
            goto LABEL_69;
          }
        }
      case 4u:
        if (v8 == 32)
        {
          uint64_t v30 = v7 - 1;
          while (1)
          {
            uint64_t v42 = v30 + 1;
            unint64_t v31 = v30[1];
            uint64_t v32 = v30 + 2;
            if (v30[1] < 0)
            {
              int v33 = *v32;
              int v34 = v31 + (v33 << 7);
              unint64_t v31 = (v34 - 128);
              if (v33 < 0)
              {
                uint64_t v42 = (char *)sub_188C138((uint64_t)(v30 + 1), (v34 - 128));
                if (!v42) {
                  return 0;
                }
                unint64_t v31 = v37;
                goto LABEL_45;
              }
              uint64_t v32 = v30 + 3;
            }
            uint64_t v42 = v32;
LABEL_45:
            if (v31 > 6)
            {
              if (*v6) {
                uint64_t v38 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(4, v31, v38);
            }
            else
            {
              uint64_t v35 = *(unsigned int *)(a1 + 88);
              if (v35 == *(_DWORD *)(a1 + 92))
              {
                int v36 = v35 + 1;
                sub_188C80C((unsigned int *)(a1 + 88), v35 + 1);
                *(_DWORD *)(*(void *)(a1 + 96) + 4 * v35) = v31;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 96) + 4 * v35) = v31;
                int v36 = v35 + 1;
              }
              *(_DWORD *)(a1 + 88) = v36;
            }
            uint64_t v30 = v42;
            if (*(void *)a3 <= (unint64_t)v42 || *v42 != 32) {
              goto LABEL_69;
            }
          }
        }
        if (v8 == 34)
        {
          *(void *)&long long v43 = a1 + 88;
          *((void *)&v43 + 1) = sub_15933B0;
          uint64_t v44 = a1 + 8;
          int v45 = 4;
          uint64_t v39 = sub_1112E88((uint64_t)a3, v7, &v43);
LABEL_68:
          uint64_t v42 = v39;
          if (!v39) {
            return 0;
          }
LABEL_69:
          if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
            return v42;
          }
          continue;
        }
LABEL_61:
        if (v8) {
          BOOL v40 = (v8 & 7) == 4;
        }
        else {
          BOOL v40 = 1;
        }
        if (!v40)
        {
          if (*v6)
          {
            uint64_t v41 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v42;
          }
          uint64_t v39 = (char *)sub_1885AC0(v8, v41, v7, a3);
          goto LABEL_68;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v42;
      default:
        goto LABEL_61;
    }
  }
}

char *sub_159515C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1595AB0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15951EC(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1595E98(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_14A10E0(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 72);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      *__dst = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        int v20 = __dst + 2;
      }
      __dst = sub_14A10E0(v18, v20, a3);
    }
  }
  uint64_t v21 = *(unsigned int *)(a1 + 88);
  if ((int)v21 >= 1)
  {
    for (uint64_t m = 0; m != v21; ++m)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v23 = *(int *)(*(void *)(a1 + 96) + 4 * m);
      *__dst = 32;
      __dst[1] = v23;
      if (v23 > 0x7F)
      {
        __dst[1] = v23 | 0x80;
        unint64_t v24 = v23 >> 7;
        __dst[2] = v23 >> 7;
        __dst += 3;
        if (v23 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v25 = v24 >> 14;
            v24 >>= 7;
            *__dst++ = v24;
          }
          while (v25);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return __dst;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    uint64_t v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    uint64_t v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(__dst, v29, (int)v30);
    __dst += v31;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v29, v30, __dst);
}

uint64_t sub_15954D4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_159619C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14A11E4(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 72);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 80);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_14A11E4(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(unsigned int *)(a1 + 88);
  if (v22)
  {
    int v23 = 0;
    uint64_t v24 = 0;
    do
    {
      int v25 = *(_DWORD *)(*(void *)(a1 + 96) + 4 * v23);
      if (v25 < 0) {
        uint64_t v26 = 10;
      }
      else {
        uint64_t v26 = (9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6;
      }
      v24 += v26;
      ++v23;
    }
    while (v22 != v23);
  }
  else
  {
    uint64_t v24 = 0;
  }
  uint64_t result = v16 + v22 + v24;
  uint64_t v28 = *(void *)(a1 + 8);
  if (v28)
  {
    unint64_t v29 = v28 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v29 + 31) < 0) {
      uint64_t v30 = *(void *)(v29 + 16);
    }
    else {
      uint64_t v30 = *(unsigned __int8 *)(v29 + 31);
    }
    result += v30;
  }
  *(_DWORD *)(a1 + 104) = result;
  return result;
}

void sub_159567C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_15A7980((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_14DD9EC((std::string *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    uint64_t v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_14DD9EC((std::string *)(a1 + 64), v16, v15, v14, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v17 = *(_DWORD *)(a1 + 72) + v14;
    *(_DWORD *)(a1 + 72) = v17;
    uint64_t v18 = *(int **)(a1 + 80);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 88);
  if (v19)
  {
    uint64_t v20 = *(int *)(a1 + 88);
    sub_188C80C((unsigned int *)(a1 + 88), v20 + v19);
    uint64_t v21 = *(void *)(a1 + 96);
    *(_DWORD *)(a1 + 88) += *(_DWORD *)(a2 + 88);
    memcpy((void *)(v21 + 4 * v20), *(const void **)(a2 + 96), 4 * *(int *)(a2 + 88));
  }
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1595858(uint64_t a1)
{
  return sub_1595860(a1 + 16);
}

uint64_t sub_1595860(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_14A4178(*(void *)(v5 + 88));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_15958D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SfeLogReplayData");
}

uint64_t sub_15958E0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253EB60)
  {
    uint64_t v6 = *(void *)(a1 + 88);
    if (v6)
    {
      sub_14A2F24(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_15150FC((void *)(a1 + 64));
  sub_1889DA8(a1 + 48);
  sub_14DD86C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15959B8(uint64_t a1)
{
  sub_15958E0(a1);

  operator delete();
}

uint64_t sub_15959F0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14A0EFC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  *(_DWORD *)(v1 + 48) = 0;
  uint64_t v5 = *(unsigned int *)(v1 + 72);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 80) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14A4310(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 72) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = (uint64_t)sub_14A2F60(*(unsigned char **)(v1 + 88));
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(void *)(v8 + 88) = 0;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_1595AB0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v36 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = v36 + 1;
      unsigned int v9 = *v36;
      if (*v36 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          uint64_t v8 = (char *)sub_188C180((uint64_t)v36, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = v36 + 2;
        }
      }
      int v36 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_53;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v12 = *(void *)(a1 + 88);
          if (!v12)
          {
            uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v13 = (void *)*v13;
            }
            sub_14A47B4((uint64_t)v13);
            uint64_t v12 = v14;
            *(void *)(a1 + 88) = v14;
            uint64_t v8 = v36;
          }
          uint64_t v15 = (char *)sub_14F6AC8(a3, v12, (unsigned __int8 *)v8);
          goto LABEL_60;
        case 2u:
          if (v9 != 18) {
            goto LABEL_53;
          }
          uint64_t v16 = v8 - 1;
          while (1)
          {
            int v17 = (unsigned __int8 *)(v16 + 1);
            int v36 = v16 + 1;
            uint64_t v18 = *(_DWORD **)(a1 + 40);
            if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
            {
              *(_DWORD *)(a1 + 32) = v19 + 1;
              uint64_t v20 = *(void *)&v18[2 * v19 + 2];
            }
            else
            {
              uint64_t v21 = sub_14A25EC(*(void *)(a1 + 24));
              uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
              int v17 = (unsigned __int8 *)v36;
            }
            uint64_t v16 = (char *)sub_14A129C(a3, v20, v17);
            int v36 = v16;
            if (!v16) {
              goto LABEL_66;
            }
            if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
              goto LABEL_61;
            }
          }
        case 3u:
          if (v9 == 24)
          {
            uint64_t v22 = v8 - 1;
            while (1)
            {
              int v36 = v22 + 1;
              uint64_t v23 = v22[1];
              if (v22[1] < 0)
              {
                int v24 = v23 + (v22[2] << 7);
                uint64_t v23 = (v24 - 128);
                if (v22[2] < 0)
                {
                  uint64_t v22 = (char *)sub_188C138((uint64_t)(v22 + 1), (v24 - 128));
                  uint64_t v23 = v25;
                }
                else
                {
                  v22 += 3;
                }
              }
              else
              {
                v22 += 2;
              }
              int v36 = v22;
              uint64_t v26 = *(unsigned int *)(a1 + 48);
              if (v26 == *(_DWORD *)(a1 + 52))
              {
                int v27 = v26 + 1;
                sub_188CA54((unsigned int *)(a1 + 48), v26 + 1);
                *(void *)(*(void *)(a1 + 56) + 8 * v26) = v23;
                uint64_t v22 = v36;
              }
              else
              {
                *(void *)(*(void *)(a1 + 56) + 8 * v26) = v23;
                int v27 = v26 + 1;
              }
              *(_DWORD *)(a1 + 48) = v27;
              if (!v22) {
                goto LABEL_66;
              }
              if (*(void *)a3 <= (unint64_t)v22 || *v22 != 24) {
                goto LABEL_61;
              }
            }
          }
          if (v9 == 26)
          {
            uint64_t v15 = (char *)sub_188C2EC((unsigned int *)(a1 + 48), (unsigned __int8 *)v8, (uint64_t)a3);
          }
          else
          {
LABEL_53:
            if (v9) {
              BOOL v34 = (v9 & 7) == 4;
            }
            else {
              BOOL v34 = 1;
            }
            if (v34)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_66:
              int v36 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v36;
            }
            uint64_t v15 = (char *)sub_1885AC0(v9, v35, v8, a3);
          }
LABEL_60:
          int v36 = v15;
          if (!v15) {
            goto LABEL_66;
          }
LABEL_61:
          if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 4u:
          if (v9 != 33) {
            goto LABEL_53;
          }
          v5 |= 2u;
          *(void *)(a1 + 96) = *(void *)v8;
          int v36 = v8 + 8;
          goto LABEL_61;
        case 5u:
          if (v9 != 42) {
            goto LABEL_53;
          }
          uint64_t v28 = v8 - 1;
          while (1)
          {
            unint64_t v29 = (unsigned __int8 *)(v28 + 1);
            int v36 = v28 + 1;
            uint64_t v30 = *(_DWORD **)(a1 + 80);
            if (v30 && (uint64_t v31 = *(int *)(a1 + 72), (int)v31 < *v30))
            {
              *(_DWORD *)(a1 + 72) = v31 + 1;
              uint64_t v32 = *(void *)&v30[2 * v31 + 2];
            }
            else
            {
              int v33 = sub_14A4848(*(void *)(a1 + 64));
              uint64_t v32 = sub_188CDC8(a1 + 64, (uint64_t)v33);
              unint64_t v29 = (unsigned __int8 *)v36;
            }
            uint64_t v28 = (char *)sub_14F6B58(a3, v32, v29);
            int v36 = v28;
            if (!v28) {
              goto LABEL_66;
            }
            if (*(void *)a3 <= (unint64_t)v28 || *v28 != 42) {
              goto LABEL_61;
            }
          }
        default:
          goto LABEL_53;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v36;
}

unsigned char *sub_1595E98(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 88);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_14A3704(v7, (unint64_t)v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_14A10E0(v12, v14, a3);
    }
  }
  uint64_t v15 = *(unsigned int *)(a1 + 48);
  if ((int)v15 >= 1)
  {
    for (uint64_t j = 0; j != v15; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * j);
      unsigned char *v4 = 24;
      v4[1] = v17;
      if (v17 > 0x7F)
      {
        v4[1] = v17 | 0x80;
        unint64_t v18 = v17 >> 7;
        v4[2] = v17 >> 7;
        v4 += 3;
        if (v17 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v19 = v18 >> 14;
            v18 >>= 7;
            *v4++ = v18;
          }
          while (v19);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v20 = *(void *)(a1 + 96);
    unsigned char *v4 = 33;
    *(void *)(v4 + 1) = v20;
    v4 += 9;
  }
  int v21 = *(_DWORD *)(a1 + 72);
  if (v21)
  {
    for (int k = 0; k != v21; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      unsigned char *v4 = 42;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      v4[1] = v24;
      if (v24 > 0x7F) {
        uint64_t v25 = sub_188A9CC(v24, v4 + 1);
      }
      else {
        uint64_t v25 = v4 + 2;
      }
      uint64_t v4 = sub_14A4534(v23, v25, a3);
    }
  }
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return v4;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    unint64_t v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    unint64_t v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(v4, v29, (int)v30);
    v4 += v31;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v29, v30, v4);
}

uint64_t sub_159619C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14A11E4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = sub_188D5A8((unsigned int *)(a1 + 48));
  uint64_t v9 = *(int *)(a1 + 72);
  uint64_t v10 = v8 + v2 + *(unsigned int *)(a1 + 48) + v9;
  uint64_t v11 = *(void *)(a1 + 80);
  if (v11) {
    uint64_t v12 = (uint64_t *)(v11 + 8);
  }
  else {
    uint64_t v12 = 0;
  }
  if (v9)
  {
    uint64_t v13 = 8 * v9;
    do
    {
      uint64_t v14 = *v12++;
      uint64_t v15 = sub_14A4620(v14);
      v10 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      v13 -= 8;
    }
    while (v13);
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if ((v16 & 3) != 0)
  {
    if (v16)
    {
      uint64_t v17 = sub_14A3CA8(*(void *)(a1 + 88));
      v10 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v16 & 2) != 0) {
      v10 += 9;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v10 += v21;
  }
  *(_DWORD *)(a1 + 20) = v10;
  return v10;
}

void sub_15962F8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_14DD9EC((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 48);
    sub_188CA54((unsigned int *)(a1 + 48), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v11 + 8 * v10), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 72);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v14 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1515740((std::string *)(a1 + 64), v14, v13, v12, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v15 = *(_DWORD *)(a1 + 72) + v12;
    *(_DWORD *)(a1 + 72) = v15;
    int v16 = *(int **)(a1 + 80);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  int v17 = *(_DWORD *)(a2 + 16);
  if ((v17 & 3) != 0)
  {
    if (v17)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 88);
      if (!v18)
      {
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v20 = (void *)*v20;
        }
        sub_14A47B4((uint64_t)v20);
        *(void *)(a1 + 88) = v18;
      }
      if (*(void *)(a2 + 88)) {
        uint64_t v21 = *(uint64_t (****)())(a2 + 88);
      }
      else {
        uint64_t v21 = &off_253A3B0;
      }
      sub_14A3EEC(v18, (uint64_t)v21);
    }
    if ((v17 & 2) != 0) {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
    }
    *(_DWORD *)(a1 + 16) |= v17;
  }
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_15964E0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_14A4178(*(void *)(a1 + 88));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_159650C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SfeInterpretationData");
}

uint64_t sub_159651C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_253EBC8 && *(void *)(a1 + 24))
  {
    sub_1318AD4();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15965D4(uint64_t a1)
{
  sub_159651C(a1);

  operator delete();
}

uint64_t sub_159660C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1318B10(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1596668(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    int v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_131BDDC((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    int v12 = (char *)sub_1277414(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    int v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    int v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_15967C0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = sub_1319D58(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_15968D0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_131A6A8(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1596958(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      uint64_t v5 = sub_131BDDC((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2532BC8;
    }
    sub_131AB94(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1596A00(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_131B154(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1596A2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchResponseCache.Geo");
}

uint64_t sub_1596A3C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C37F8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1596AE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C3878;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(unsigned char *)(result + 96) = 0;
  return result;
}

uint64_t sub_1596B90(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24C38F8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = a1;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = a1;
  *(_DWORD *)(result + 104) = 0;
  return result;
}

double sub_1596C48(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24C3978;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  return result;
}

void *sub_1596D00(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24C39F8;
  result[2] = 0;
  result[3] = 0;
  return result;
}

BOOL sub_1596D78(unsigned int a1)
{
  return a1 < 0xC;
}

uint64_t sub_1596D84(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_15A4D04(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

void *sub_1596E00(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1596E98((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_122BB0C(a1 + 6);
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1596E98(uint64_t result)
{
  if ((uint64_t (***)())result != &off_253EBE8)
  {
    uint64_t v1 = (void *)result;
    if (*(void *)(result + 72))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v2 = *(void **)(result + 80);
    if (v2)
    {
      sub_15A5150(v2);
      operator delete();
    }
    uint64_t v3 = v1[11];
    if (v3)
    {
      sub_15996E4(v3);
      operator delete();
    }
    uint64_t v4 = v1[12];
    if (v4)
    {
      sub_159A8C4(v4);
      operator delete();
    }
    uint64_t v5 = v1[13];
    if (v5)
    {
      sub_159CC84(v5);
      operator delete();
    }
    char v6 = (void *)v1[14];
    if (v6)
    {
      sub_159D768(v6);
      operator delete();
    }
    uint64_t v7 = v1[15];
    if (v7)
    {
      sub_1599B58(v7);
      operator delete();
    }
    double result = v1[16];
    if (result)
    {
      sub_159A2A4(result);
      operator delete();
    }
  }
  return result;
}

void sub_1596FE4(void *a1)
{
  sub_1596E00(a1);

  operator delete();
}

uint64_t sub_159701C(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_146A460(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v6) {
    goto LABEL_15;
  }
  if (v6)
  {
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 72));
    if ((v6 & 2) == 0)
    {
LABEL_8:
      if ((v6 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = sub_1596D84(*(void *)(a1 + 80));
  if ((v6 & 4) == 0)
  {
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = sub_1597140(*(void *)(a1 + 88));
  if ((v6 & 8) == 0)
  {
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = sub_15971BC(*(void *)(a1 + 96));
  if ((v6 & 0x10) == 0)
  {
LABEL_11:
    if ((v6 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_26:
    uint64_t result = sub_1597338(*(void *)(a1 + 112));
    if ((v6 & 0x40) == 0)
    {
LABEL_13:
      if ((v6 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = sub_159726C(*(void *)(a1 + 104));
  if ((v6 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_12:
  if ((v6 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_27:
  uint64_t result = sub_15973A0(*(void *)(a1 + 120));
  if ((v6 & 0x80) != 0) {
LABEL_14:
  }
    uint64_t result = sub_1597458(*(void *)(a1 + 128));
LABEL_15:
  if ((v6 & 0x300) != 0)
  {
    *(_DWORD *)(a1 + 144) = 0;
    *(void *)(a1 + 136) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1597140(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_15971BC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  uint64_t result = sub_15B8FB8(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_159A9E8(*(void *)(v1 + 40));
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(void *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_159726C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_17:
    uint64_t result = sub_16C5D20(*(void *)(result + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_18;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_17;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_17;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_18:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(v1 + 48));
LABEL_7:
  if ((v2 & 0x30) != 0)
  {
    *(_DWORD *)(v1 + 64) = 0;
    *(void *)(v1 + 56) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1597338(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
    *(_DWORD *)(a1 + 64) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_15973A0(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    char v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_15971BC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v6 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1597458(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15971BC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v5 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_15:
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_1597540(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v52 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v52, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    char v9 = (unsigned __int8 *)(*(void *)v52 + 1);
    unsigned int v10 = **(unsigned char **)v52;
    if ((char)**(unsigned char **)v52 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        char v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v52, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        char v9 = (unsigned __int8 *)(*(void *)v52 + 2);
      }
    }
    *(void *)unint64_t v52 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_88;
        }
        uint64_t v13 = (char *)(v9 + 1);
        unint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)unint64_t v52 = sub_188C138((uint64_t)v9, (v16 - 128));
          if (!*(void *)v52) {
            goto LABEL_107;
          }
          unint64_t v14 = v50;
        }
        else
        {
          uint64_t v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)unint64_t v52 = v13;
        }
        if (v14 > 0xB)
        {
          if (*v7) {
            unint64_t v51 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v14, v51);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x200u;
          *(_DWORD *)(a1 + 144) = v14;
        }
        goto LABEL_96;
      case 2u:
        if (v10 != 17) {
          goto LABEL_88;
        }
        v5 |= 0x100u;
        *(void *)(a1 + 136) = *(void *)v9;
        *(void *)unint64_t v52 = v9 + 8;
        goto LABEL_96;
      case 3u:
        if (v10 != 26) {
          goto LABEL_88;
        }
        int v17 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v18 = (char *)(v17 + 1);
          *(void *)unint64_t v52 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(std::string **)&v19[2 * v20 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *uint64_t v23 = v22;
            v23[1] = sub_3A6EDC;
            void *v22 = 0;
            v22[1] = 0;
            int v22[2] = 0;
            uint64_t v21 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v22);
            uint64_t v18 = *(char **)v52;
          }
          int v17 = sub_188C244(v21, v18, (uint64_t)a3);
          *(void *)unint64_t v52 = v17;
          if (!v17) {
            goto LABEL_107;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_96;
          }
        }
      case 4u:
        if (v10 != 34) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v24 = *(void *)(a1 + 72);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_15C1918((uint64_t)v25);
          *(void *)(a1 + 72) = v24;
          char v9 = *(unsigned __int8 **)v52;
        }
        uint64_t v26 = (uint64_t)sub_1198F14(a3, v24, v9);
        goto LABEL_95;
      case 5u:
        if (v10 != 42) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v27 = *(void *)(a1 + 80);
        if (!v27)
        {
          unint64_t v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v28 = (void *)*v28;
          }
          uint64_t v27 = sub_15A5754((uint64_t)v28);
          *(void *)(a1 + 80) = v27;
          char v9 = *(unsigned __int8 **)v52;
        }
        uint64_t v26 = (uint64_t)sub_14E7D98(a3, v27, v9);
        goto LABEL_95;
      case 6u:
        if (v10 != 50) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        unint64_t v29 = *(void **)(a1 + 88);
        if (!v29)
        {
          uint64_t v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v30 = (void *)*v30;
          }
          unint64_t v29 = sub_15A39CC((uint64_t)v30);
          *(void *)(a1 + 88) = v29;
          char v9 = *(unsigned __int8 **)v52;
        }
        uint64_t v26 = sub_1597B7C(a3, (uint64_t)v29, v9);
        goto LABEL_95;
      case 7u:
        if (v10 != 58) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v31 = *(void **)(a1 + 96);
        if (!v31)
        {
          uint64_t v32 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v32 = (void *)*v32;
          }
          uint64_t v31 = sub_15A3BA4((uint64_t)v32);
          *(void *)(a1 + 96) = v31;
          char v9 = *(unsigned __int8 **)v52;
        }
        uint64_t v26 = sub_1597C0C(a3, (uint64_t)v31, v9);
        goto LABEL_95;
      case 8u:
        if (v10 != 66) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v33 = *(void *)(a1 + 104);
        if (!v33)
        {
          BOOL v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            BOOL v34 = (void *)*v34;
          }
          sub_15A3C2C((uint64_t)v34);
          uint64_t v33 = v35;
          *(void *)(a1 + 104) = v35;
          char v9 = *(unsigned __int8 **)v52;
        }
        uint64_t v26 = sub_1597C9C(a3, v33, v9);
        goto LABEL_95;
      case 9u:
        if (v10 != 74) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v36 = *(void *)(a1 + 112);
        if (!v36)
        {
          unint64_t v37 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v37 = (void *)*v37;
          }
          uint64_t v36 = sub_15A3CBC((uint64_t)v37);
          *(void *)(a1 + 112) = v36;
          char v9 = *(unsigned __int8 **)v52;
        }
        uint64_t v26 = sub_1597D2C(a3, v36, v9);
        goto LABEL_95;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_88;
        }
        uint64_t v38 = v9 - 1;
        while (1)
        {
          uint64_t v39 = v38 + 1;
          *(void *)unint64_t v52 = v38 + 1;
          BOOL v40 = *(_DWORD **)(a1 + 64);
          if (v40 && (uint64_t v41 = *(int *)(a1 + 56), (int)v41 < *v40))
          {
            *(_DWORD *)(a1 + 56) = v41 + 1;
            uint64_t v42 = *(void *)&v40[2 * v41 + 2];
          }
          else
          {
            long long v43 = sub_1478FB4(*(void *)(a1 + 48));
            uint64_t v42 = sub_188CDC8(a1 + 48, (uint64_t)v43);
            uint64_t v39 = *(unsigned __int8 **)v52;
          }
          uint64_t v38 = (unsigned __int8 *)sub_11EAB7C(a3, v42, v39);
          *(void *)unint64_t v52 = v38;
          if (!v38) {
            goto LABEL_107;
          }
          if (*(void *)a3 <= (unint64_t)v38 || *v38 != 82) {
            goto LABEL_96;
          }
        }
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v44 = *(void **)(a1 + 120);
        if (!v44)
        {
          int v45 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v45 = (void *)*v45;
          }
          uint64_t v44 = sub_15A3A50((uint64_t)v45);
          *(void *)(a1 + 120) = v44;
          char v9 = *(unsigned __int8 **)v52;
        }
        uint64_t v26 = sub_1597DBC(a3, (uint64_t)v44, v9);
        goto LABEL_95;
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_88;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v46 = *(void **)(a1 + 128);
        if (!v46)
        {
          uint64_t v47 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v47 = (void *)*v47;
          }
          uint64_t v46 = sub_15A3B00((uint64_t)v47);
          *(void *)(a1 + 128) = v46;
          char v9 = *(unsigned __int8 **)v52;
        }
        uint64_t v26 = sub_1597E4C(a3, (uint64_t)v46, v9);
        goto LABEL_95;
      default:
LABEL_88:
        if (v10) {
          BOOL v48 = (v10 & 7) == 4;
        }
        else {
          BOOL v48 = 1;
        }
        if (!v48)
        {
          if (*v7)
          {
            uint64_t v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v9 = *(unsigned __int8 **)v52;
          }
          uint64_t v26 = (uint64_t)sub_1885AC0(v10, v49, (char *)v9, a3);
LABEL_95:
          *(void *)unint64_t v52 = v26;
          if (!v26) {
            goto LABEL_107;
          }
LABEL_96:
          if (sub_11947B8((uint64_t)a3, (char **)v52, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_107:
        }
          *(void *)unint64_t v52 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v52;
    }
  }
}

uint64_t sub_1597B7C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15997D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1597C0C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_159AF54(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1597C9C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_159CDC8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1597D2C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_159D81C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1597DBC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1599C44(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1597E4C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_159A3A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1597EDC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 144);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 136);
    char *v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 32);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 8 * v11;
    do
    {
      unint64_t v14 = *(void **)(*(void *)(a1 + 40) + v12 + 8);
      if (*((char *)v14 + 23) < 0)
      {
        int64_t v15 = v14[1];
        if (v15 > 127) {
          goto LABEL_23;
        }
      }
      else
      {
        int64_t v15 = *((unsigned __int8 *)v14 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v15)
      {
        char *v4 = 26;
        v4[1] = v15;
        if (*((char *)v14 + 23) < 0) {
          unint64_t v14 = (void *)*v14;
        }
        int v16 = v4 + 2;
        memcpy(v16, v14, v15);
        uint64_t v4 = &v16[v15];
        goto LABEL_21;
      }
LABEL_23:
      uint64_t v4 = (char *)sub_188A868(a3, 3, (uint64_t)v14, v4);
LABEL_21:
      v12 += 8;
    }
    while (v13 != v12);
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v17 = *(void *)(a1 + 72);
    char *v4 = 34;
    unsigned int v18 = *(_DWORD *)(v17 + 44);
    v4[1] = v18;
    if (v18 > 0x7F) {
      uint64_t v19 = sub_188A9CC(v18, v4 + 1);
    }
    else {
      uint64_t v19 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v17, v19, a3);
    if ((v6 & 2) == 0)
    {
LABEL_26:
      if ((v6 & 4) == 0) {
        goto LABEL_27;
      }
      goto LABEL_43;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_26;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v20 = *(void *)(a1 + 80);
  char *v4 = 42;
  unsigned int v21 = *(_DWORD *)(v20 + 40);
  v4[1] = v21;
  if (v21 > 0x7F) {
    uint64_t v22 = sub_188A9CC(v21, v4 + 1);
  }
  else {
    uint64_t v22 = v4 + 2;
  }
  uint64_t v4 = sub_15A5438(v20, v22, a3);
  if ((v6 & 4) == 0)
  {
LABEL_27:
    if ((v6 & 8) == 0) {
      goto LABEL_28;
    }
    goto LABEL_49;
  }
LABEL_43:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v23 = *(void *)(a1 + 88);
  char *v4 = 50;
  unsigned int v24 = *(_DWORD *)(v23 + 20);
  v4[1] = v24;
  if (v24 > 0x7F) {
    uint64_t v25 = sub_188A9CC(v24, v4 + 1);
  }
  else {
    uint64_t v25 = v4 + 2;
  }
  uint64_t v4 = sub_159997C(v23, v25, a3);
  if ((v6 & 8) == 0)
  {
LABEL_28:
    if ((v6 & 0x10) == 0) {
      goto LABEL_29;
    }
    goto LABEL_55;
  }
LABEL_49:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v26 = *(void *)(a1 + 96);
  char *v4 = 58;
  unsigned int v27 = *(_DWORD *)(v26 + 20);
  v4[1] = v27;
  if (v27 > 0x7F) {
    unint64_t v28 = sub_188A9CC(v27, v4 + 1);
  }
  else {
    unint64_t v28 = v4 + 2;
  }
  uint64_t v4 = sub_159B290(v26, (unint64_t)v28, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_29:
    if ((v6 & 0x20) == 0) {
      goto LABEL_67;
    }
    goto LABEL_61;
  }
LABEL_55:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v29 = *(void *)(a1 + 104);
  char *v4 = 66;
  unsigned int v30 = *(_DWORD *)(v29 + 20);
  v4[1] = v30;
  if (v30 > 0x7F) {
    uint64_t v31 = sub_188A9CC(v30, v4 + 1);
  }
  else {
    uint64_t v31 = v4 + 2;
  }
  uint64_t v4 = sub_159D200(v29, (unint64_t)v31, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_61:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v32 = *(void *)(a1 + 112);
    char *v4 = 74;
    unsigned int v33 = *(_DWORD *)(v32 + 20);
    v4[1] = v33;
    if (v33 > 0x7F) {
      BOOL v34 = sub_188A9CC(v33, v4 + 1);
    }
    else {
      BOOL v34 = v4 + 2;
    }
    uint64_t v4 = sub_159DBC4(v32, (unint64_t)v34, a3);
  }
LABEL_67:
  int v35 = *(_DWORD *)(a1 + 56);
  if (v35)
  {
    for (int i = 0; i != v35; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v37 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 82;
      unsigned int v38 = *(_DWORD *)(v37 + 20);
      v4[1] = v38;
      if (v38 > 0x7F) {
        uint64_t v39 = sub_188A9CC(v38, v4 + 1);
      }
      else {
        uint64_t v39 = v4 + 2;
      }
      uint64_t v4 = sub_146A644(v37, v39, a3);
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v40 = *(void *)(a1 + 120);
    char *v4 = 90;
    unsigned int v41 = *(_DWORD *)(v40 + 20);
    v4[1] = v41;
    if (v41 > 0x7F) {
      uint64_t v42 = sub_188A9CC(v41, v4 + 1);
    }
    else {
      uint64_t v42 = v4 + 2;
    }
    uint64_t v4 = sub_1599F30(v40, v42, a3);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v43 = *(void *)(a1 + 128);
    char *v4 = 98;
    unsigned int v44 = *(_DWORD *)(v43 + 20);
    v4[1] = v44;
    if (v44 > 0x7F) {
      int v45 = sub_188A9CC(v44, v4 + 1);
    }
    else {
      int v45 = v4 + 2;
    }
    uint64_t v4 = sub_159A5E8(v43, v45, a3);
  }
  uint64_t v46 = *(void *)(a1 + 8);
  if ((v46 & 1) == 0) {
    return v4;
  }
  unint64_t v48 = v46 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v48 + 31) < 0)
  {
    uint64_t v49 = *(void **)(v48 + 8);
    uint64_t v50 = *(void *)(v48 + 16);
  }
  else
  {
    uint64_t v49 = (void *)(v48 + 8);
    LODWORD(v50) = *(unsigned __int8 *)(v48 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v50)
  {
    uint64_t v51 = (int)v50;
    memcpy(v4, v49, (int)v50);
    v4 += v51;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v49, v50, v4);
}

uint64_t sub_15984B8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x100) != 0) {
    uint64_t result = 9;
  }
  else {
    uint64_t result = 0;
  }
  if ((v2 & 0x200) != 0)
  {
    int v4 = *(_DWORD *)(a1 + 144);
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v5;
  }
  return result;
}

uint64_t sub_1598504(uint64_t a1)
{
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  if ((~v2 & 0x300) != 0)
  {
    uint64_t v4 = sub_15984B8(a1);
  }
  else
  {
    int v3 = *(_DWORD *)(a1 + 144);
    if (v3 < 0) {
      uint64_t v4 = 20;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 10;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 32);
  uint64_t v6 = v4 + v5;
  if ((int)v5 >= 1)
  {
    unint64_t v7 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v6 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6);
      --v5;
    }
    while (v5);
  }
  uint64_t v11 = *(int *)(a1 + 56);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = *(void *)(a1 + 64);
  if (v13) {
    unint64_t v14 = (uint64_t *)(v13 + 8);
  }
  else {
    unint64_t v14 = 0;
  }
  if (v11)
  {
    uint64_t v15 = 8 * v11;
    do
    {
      uint64_t v16 = *v14++;
      uint64_t v17 = sub_146A7A4(v16);
      v12 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      v15 -= 8;
    }
    while (v15);
    uint64_t v2 = *(unsigned __int8 *)(a1 + 16);
  }
  if (!(_BYTE)v2) {
    goto LABEL_28;
  }
  if (v2)
  {
    uint64_t v21 = sub_15B0D90(*(void *)(a1 + 72));
    v12 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0)
    {
LABEL_21:
      if ((v2 & 4) == 0) {
        goto LABEL_22;
      }
      goto LABEL_32;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_21;
  }
  uint64_t v22 = sub_15A557C(*(void *)(a1 + 80));
  v12 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 4) == 0)
  {
LABEL_22:
    if ((v2 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v23 = sub_1599A68(*(void *)(a1 + 88));
  v12 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) == 0)
  {
LABEL_23:
    if ((v2 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v24 = sub_159B584(*(void *)(a1 + 96));
  v12 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_24:
    if ((v2 & 0x20) == 0) {
      goto LABEL_25;
    }
LABEL_35:
    uint64_t v26 = sub_159DEA4(*(void *)(a1 + 112));
    v12 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x40) == 0)
    {
LABEL_26:
      if ((v2 & 0x80) == 0) {
        goto LABEL_28;
      }
      goto LABEL_27;
    }
    goto LABEL_36;
  }
LABEL_34:
  uint64_t v25 = sub_159D5A8(*(void *)(a1 + 104));
  v12 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0) {
    goto LABEL_35;
  }
LABEL_25:
  if ((v2 & 0x40) == 0) {
    goto LABEL_26;
  }
LABEL_36:
  uint64_t v27 = sub_159A140(*(void *)(a1 + 120));
  v12 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_27:
    uint64_t v18 = sub_159A770(*(void *)(a1 + 128));
    v12 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_28:
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v28 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v28 + 31) < 0) {
      uint64_t v29 = *(void *)(v28 + 16);
    }
    else {
      uint64_t v29 = *(unsigned __int8 *)(v28 + 31);
    }
    v12 += v29;
  }
  *(_DWORD *)(a1 + 20) = v12;
  return v12;
}

void sub_15987FC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_122BC08((std::string *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v14) {
    goto LABEL_81;
  }
  if (v14)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 72);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v15 = sub_15C1918((uint64_t)v17);
      *(void *)(a1 + 72) = v15;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v18 = &off_253F1A0;
    }
    sub_15B0E24(v15, (uint64_t)v18);
    if ((v14 & 2) == 0)
    {
LABEL_10:
      if ((v14 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_33;
    }
  }
  else if ((v14 & 2) == 0)
  {
    goto LABEL_10;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v19 = *(std::string **)(a1 + 80);
  if (!v19)
  {
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (void *)*v21;
    }
    uint64_t v19 = (std::string *)sub_15A5754((uint64_t)v21);
    *(void *)(a1 + 80) = v19;
  }
  if (*(void *)(a2 + 80)) {
    uint64_t v22 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    uint64_t v22 = &off_253F108;
  }
  sub_1598BE8(v19, (uint64_t)v22);
  if ((v14 & 4) == 0)
  {
LABEL_11:
    if ((v14 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_33:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v23 = *(std::string **)(a1 + 88);
  if (!v23)
  {
    uint64_t v24 = *(void *)(a1 + 8);
    uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      uint64_t v25 = (void *)*v25;
    }
    uint64_t v23 = (std::string *)sub_15A39CC((uint64_t)v25);
    *(void *)(a1 + 88) = v23;
  }
  if (*(void *)(a2 + 88)) {
    uint64_t v26 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    uint64_t v26 = &off_253EC80;
  }
  sub_11EC100(v23, (uint64_t)v26);
  if ((v14 & 8) == 0)
  {
LABEL_12:
    if ((v14 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_49;
  }
LABEL_41:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v27 = *(void **)(a1 + 96);
  if (!v27)
  {
    uint64_t v28 = *(void *)(a1 + 8);
    uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      uint64_t v29 = (void *)*v29;
    }
    uint64_t v27 = sub_15A3BA4((uint64_t)v29);
    *(void *)(a1 + 96) = v27;
  }
  if (*(void *)(a2 + 96)) {
    unsigned int v30 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    unsigned int v30 = &off_253ED38;
  }
  sub_1598CB8((uint64_t)v27, (uint64_t)v30);
  if ((v14 & 0x10) == 0)
  {
LABEL_13:
    if ((v14 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_57:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    int v35 = *(std::string **)(a1 + 112);
    if (!v35)
    {
      uint64_t v36 = *(void *)(a1 + 8);
      uint64_t v37 = (void *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
      if (v36) {
        uint64_t v37 = (void *)*v37;
      }
      int v35 = (std::string *)sub_15A3CBC((uint64_t)v37);
      *(void *)(a1 + 112) = v35;
    }
    if (*(void *)(a2 + 112)) {
      unsigned int v38 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      unsigned int v38 = &off_253EDB8;
    }
    sub_1598FD8(v35, (uint64_t)v38);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0) {
        goto LABEL_81;
      }
      goto LABEL_73;
    }
    goto LABEL_65;
  }
LABEL_49:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v31 = *(void *)(a1 + 104);
  if (!v31)
  {
    uint64_t v32 = *(void *)(a1 + 8);
    unsigned int v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
    if (v32) {
      unsigned int v33 = (void *)*v33;
    }
    sub_15A3C2C((uint64_t)v33);
    *(void *)(a1 + 104) = v31;
  }
  if (*(void *)(a2 + 104)) {
    BOOL v34 = *(uint64_t (****)())(a2 + 104);
  }
  else {
    BOOL v34 = &off_253ED70;
  }
  sub_1598E18(v31, (uint64_t)v34);
  if ((v14 & 0x20) != 0) {
    goto LABEL_57;
  }
LABEL_14:
  if ((v14 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_65:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v39 = *(void **)(a1 + 120);
  if (!v39)
  {
    uint64_t v40 = *(void *)(a1 + 8);
    unsigned int v41 = (void *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
    if (v40) {
      unsigned int v41 = (void *)*v41;
    }
    uint64_t v39 = sub_15A3A50((uint64_t)v41);
    *(void *)(a1 + 120) = v39;
  }
  if (*(void *)(a2 + 120)) {
    uint64_t v42 = *(uint64_t (****)())(a2 + 120);
  }
  else {
    uint64_t v42 = &off_253ECA8;
  }
  sub_15990F0((uint64_t)v39, (uint64_t)v42);
  if ((v14 & 0x80) != 0)
  {
LABEL_73:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v43 = *(void **)(a1 + 128);
    if (!v43)
    {
      uint64_t v44 = *(void *)(a1 + 8);
      int v45 = (void *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
      if (v44) {
        int v45 = (void *)*v45;
      }
      uint64_t v43 = sub_15A3B00((uint64_t)v45);
      *(void *)(a1 + 128) = v43;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v46 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v46 = &off_253ECF8;
    }
    sub_159925C((uint64_t)v43, (uint64_t)v46);
  }
LABEL_81:
  if ((v14 & 0x300) != 0)
  {
    if ((v14 & 0x100) != 0) {
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
    }
    if ((v14 & 0x200) != 0) {
      *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
    }
    *(_DWORD *)(a1 + 16) |= v14;
  }
  uint64_t v47 = *(void *)(a2 + 8);
  if (v47)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v47 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_1598BE8(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_15A7CA4((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

void sub_1598CB8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      int v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(std::string **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_15C1EF4((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253F4C8;
    }
    sub_15B9698(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_23:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      sub_15A3D5C((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v17 = &off_253EE00;
    }
    sub_159B6B0(v14, (uint64_t)v17);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1598E18(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      int v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_25;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(std::string **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_1786998((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2544A60;
    }
    sub_16C6188(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_33;
    }
LABEL_25:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_15C1918((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v17 = &off_253F1A0;
    }
    sub_15B0E24(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_41;
    }
LABEL_33:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v18 = *(void *)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = sub_15C19EC((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v21 = &off_253F208;
    }
    sub_15B1E3C(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      goto LABEL_9;
    }
LABEL_41:
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_1598FD8(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

void sub_15990F0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_15A7B0C((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v14 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 72), v14, v16);
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_159925C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_15A7B0C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 48), v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      uint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (uint64_t *)*v15;
      }
      sub_1881DF4((std::string **)(a1 + 56), v13, v15);
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_15993A0(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 0x300) != 0) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    BOOL v4 = sub_146A84C(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v3;
    if (!v4) {
      return 0;
    }
  }
  int v5 = *(_DWORD *)(a1 + 16);
  if (v5)
  {
    if (!sub_15B0F18(*(void *)(a1 + 72))) {
      return 0;
    }
    int v5 = *(_DWORD *)(a1 + 16);
  }
  if ((v5 & 2) != 0)
  {
    uint64_t v11 = *(void *)(a1 + 80);
    uint64_t v12 = *(unsigned int *)(v11 + 24);
    uint64_t v13 = *(void *)(v11 + 32);
    while ((int)v12 >= 1)
    {
      uint64_t v14 = *(void *)(v13 + 8 * v12--);
      if ((~*(_DWORD *)(v14 + 16) & 3) != 0) {
        return 0;
      }
    }
  }
  if ((v5 & 4) != 0 && (~*(_DWORD *)(*(void *)(a1 + 88) + 16) & 3) != 0) {
    return 0;
  }
  if ((v5 & 8) != 0)
  {
    if (!sub_1599550(*(void *)(a1 + 96))) {
      return 0;
    }
    int v5 = *(_DWORD *)(a1 + 16);
  }
  if ((v5 & 0x10) != 0)
  {
    if (sub_15995B0(*(void *)(a1 + 104)))
    {
      int v5 = *(_DWORD *)(a1 + 16);
      goto LABEL_18;
    }
    return 0;
  }
LABEL_18:
  if ((v5 & 0x40) != 0)
  {
    uint64_t v6 = *(void *)(a1 + 120);
    uint64_t v7 = *(unsigned int *)(v6 + 56);
    while ((int)v7 >= 1)
    {
      uint64_t v8 = v7 - 1;
      char v9 = sub_1599550(*(void *)(*(void *)(v6 + 64) + 8 * v7));
      BOOL v10 = 0;
      uint64_t v7 = v8;
      if ((v9 & 1) == 0) {
        return v10;
      }
    }
    int v5 = *(_DWORD *)(a1 + 16);
  }
  if ((v5 & 0x80) == 0) {
    return 1;
  }
  uint64_t v16 = *(void *)(a1 + 128);
  uint64_t v17 = *(unsigned int *)(v16 + 32);
  do
  {
    BOOL v10 = (int)v17 < 1;
    if ((int)v17 < 1) {
      break;
    }
    uint64_t v18 = v17 - 1;
    char v19 = sub_1599550(*(void *)(*(void *)(v16 + 40) + 8 * v17));
    uint64_t v17 = v18;
  }
  while ((v19 & 1) != 0);
  return v10;
}

BOOL sub_1599504(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

BOOL sub_159953C(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

uint64_t sub_1599550(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((~v1 & 0xB) != 0) {
    return 0;
  }
  if ((v1 & 2) != 0)
  {
    uint64_t result = sub_15B9824(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v1 = *(_DWORD *)(a1 + 16);
  }
  if ((v1 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_159C794(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_15995B0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((~v1 & 3) != 0) {
    return 0;
  }
  if ((v1 & 2) != 0)
  {
    uint64_t result = sub_16C6274(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v1 = *(_DWORD *)(a1 + 16);
  }
  if ((v1 & 4) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v1 = *(_DWORD *)(a1 + 16);
  }
  if ((v1 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_15B1FC0(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

BOOL sub_1599624(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_1599550(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

BOOL sub_159967C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_1599550(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_15996D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.SuggestionEntry");
}

uint64_t sub_15996E4(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  char v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_159979C(uint64_t a1)
{
  sub_15996E4(a1);

  operator delete();
}

uint64_t sub_15997D4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      char v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_159997C(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1599A68(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t result = sub_1231798(a1);
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    uint64_t result = v4 + v8 + v5 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_1599B48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.QuerySuggestionEntry");
}

uint64_t sub_1599B58(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_15A7A0C((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1599C0C(uint64_t a1)
{
  sub_1599B58(a1);

  operator delete();
}

uint64_t sub_1599C44(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v33 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    return *(void *)v33;
  }
  unint64_t v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)unsigned int v33 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 == 18)
      {
        uint64_t v23 = v8 - 1;
        while (1)
        {
          uint64_t v24 = (char *)(v23 + 1);
          *(void *)unsigned int v33 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 40);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 32), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 32) = v26 + 1;
            uint64_t v27 = *(std::string **)&v25[2 * v26 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v29 = v28;
            v29[1] = sub_3A6EDC;
            void *v28 = 0;
            v28[1] = 0;
            v28[2] = 0;
            uint64_t v27 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v28);
            uint64_t v24 = *(char **)v33;
          }
          uint64_t v23 = sub_188C244(v27, v24, (uint64_t)a3);
          *(void *)unsigned int v33 = v23;
          if (!v23) {
            goto LABEL_52;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 18) {
            goto LABEL_47;
          }
        }
      }
      goto LABEL_14;
    }
    if (v12 != 1 || v9 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v30 = *(void *)(a1 + 8);
    uint64_t v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
    if (v30) {
      uint64_t v31 = (uint64_t *)*v31;
    }
    uint64_t v32 = (std::string *)sub_1880F84((void *)(a1 + 72), v31);
    uint64_t v16 = (void *)sub_188C244(v32, *(char **)v33, (uint64_t)a3);
LABEL_46:
    *(void *)unsigned int v33 = v16;
    if (!v16) {
      goto LABEL_52;
    }
LABEL_47:
    if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
      return *(void *)v33;
    }
  }
  if (v9 == 26)
  {
    uint64_t v17 = v8 - 1;
    while (1)
    {
      uint64_t v18 = (unsigned __int8 *)(v17 + 1);
      *(void *)unsigned int v33 = v17 + 1;
      char v19 = *(_DWORD **)(a1 + 64);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 56) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        uint64_t v22 = sub_15A3BA4(*(void *)(a1 + 48));
        uint64_t v21 = sub_188CDC8(a1 + 48, (uint64_t)v22);
        uint64_t v18 = *(unsigned __int8 **)v33;
      }
      uint64_t v17 = (char *)sub_1597C0C(a3, v21, v18);
      *(void *)unsigned int v33 = v17;
      if (!v17) {
        goto LABEL_52;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
        goto LABEL_47;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v33;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_46;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v33;
  }
LABEL_52:
  *(void *)unsigned int v33 = 0;
  return *(void *)v33;
}

char *sub_1599F30(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v10)
      {
        char *v4 = 18;
        v4[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = v4 + 2;
        memcpy(v11, v9, v10);
        uint64_t v4 = &v11[v10];
        goto LABEL_12;
      }
LABEL_14:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v9, v4);
LABEL_12:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 56);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      v4[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, v4 + 1);
      }
      else {
        uint64_t v16 = v4 + 2;
      }
      uint64_t v4 = sub_159B290(v14, (unint64_t)v16, a3);
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_159A140(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_159B584(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v15 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v9 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v9 += v21;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void *sub_159A294@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.CategorySuggestionEntry");
}

uint64_t sub_159A2A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_15A7A0C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_159A368(uint64_t a1)
{
  sub_159A2A4(a1);

  operator delete();
}

uint64_t sub_159A3A0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        uint64_t v16 = v7 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)uint64_t v27 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_15A3BA4(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
            uint64_t v17 = *(unsigned __int8 **)v27;
          }
          uint64_t v16 = (char *)sub_1597C0C(a3, v20, v17);
          *(void *)uint64_t v27 = v16;
          if (!v16) {
            goto LABEL_45;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_40;
          }
        }
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v23 = (uint64_t *)*v23;
        }
        uint64_t v24 = (void *)(a1 + 56);
        goto LABEL_38;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v23 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      uint64_t v24 = (void *)(a1 + 48);
LABEL_38:
      uint64_t v26 = (std::string *)sub_1880F84(v24, v23);
      unint64_t v15 = (void *)sub_188C244(v26, *(char **)v27, (uint64_t)a3);
      goto LABEL_39;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v27;
    }
    unint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_39:
    *(void *)uint64_t v27 = v15;
    if (!v15) {
      goto LABEL_45;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_45:
  *(void *)uint64_t v27 = 0;
  return *(void *)v27;
}

unsigned char *sub_159A5E8(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_159B290(v9, (unint64_t)v11, a3);
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    unint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    unint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_159A770(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_159B584(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_159A8B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.ChainSuggestionEntry");
}

uint64_t sub_159A8C4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253ED38)
  {
    if (*(void *)(a1 + 32))
    {
      sub_15B8F7C();
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 40);
    if (v6)
    {
      sub_159E0C4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_159A9B0(uint64_t a1)
{
  sub_159A8C4(a1);

  operator delete();
}

uint64_t sub_159A9E8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 40);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 48) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_15A3FA4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 40) = 0;
  }
  *(_DWORD *)(a1 + 56) = 0;
  sub_188CC00(a1 + 72);
  uint64_t v5 = *(unsigned int *)(a1 + 104);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_14129C0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 128);
  if ((int)v8 >= 1)
  {
    unint64_t v9 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_140C2D8(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 152);
  if ((int)v11 >= 1)
  {
    unint64_t v12 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_149FADC(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 152) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 176);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_173FA7C(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 176) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 192);
  uint64_t v18 = *(unsigned int *)(a1 + 224);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 232) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t result = sub_15A3FA4(v20);
      --v18;
    }
    while (v18);
    *(_DWORD *)(a1 + 224) = 0;
  }
  uint64_t v21 = *(unsigned int *)(a1 + 248);
  if ((int)v21 >= 1)
  {
    uint64_t v22 = (uint64_t *)(*(void *)(a1 + 256) + 8);
    do
    {
      uint64_t v23 = *v22++;
      uint64_t result = sub_15A2AD8(v23);
      --v21;
    }
    while (v21);
    *(_DWORD *)(a1 + 248) = 0;
  }
  uint64_t v24 = *(unsigned int *)(a1 + 272);
  if ((int)v24 >= 1)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a1 + 280) + 8);
    do
    {
      uint64_t v26 = *v25++;
      uint64_t result = sub_14532E4(v26);
      --v24;
    }
    while (v24);
    *(_DWORD *)(a1 + 272) = 0;
  }
  uint64_t v27 = *(unsigned int *)(a1 + 296);
  if ((int)v27 >= 1)
  {
    uint64_t v28 = (uint64_t *)(*(void *)(a1 + 304) + 8);
    do
    {
      uint64_t v29 = *v28++;
      uint64_t result = sub_1411AA0(v29);
      --v27;
    }
    while (v27);
    *(_DWORD *)(a1 + 296) = 0;
  }
  uint64_t v30 = *(unsigned int *)(a1 + 320);
  if ((int)v30 >= 1)
  {
    uint64_t v31 = (uint64_t *)(*(void *)(a1 + 328) + 8);
    do
    {
      uint64_t v32 = *v31++;
      uint64_t result = sub_13F4BF0(v32);
      --v30;
    }
    while (v30);
    *(_DWORD *)(a1 + 320) = 0;
  }
  *(_DWORD *)(a1 + 336) = 0;
  uint64_t v33 = *(unsigned int *)(a1 + 360);
  if ((int)v33 >= 1)
  {
    BOOL v34 = (uint64_t *)(*(void *)(a1 + 368) + 8);
    do
    {
      uint64_t v35 = *v34++;
      uint64_t result = sub_140C788(v35);
      --v33;
    }
    while (v33);
    *(_DWORD *)(a1 + 360) = 0;
  }
  uint64_t v36 = *(unsigned int *)(a1 + 384);
  if ((int)v36 >= 1)
  {
    uint64_t v37 = (uint64_t *)(*(void *)(a1 + 392) + 8);
    do
    {
      uint64_t v38 = *v37++;
      uint64_t result = sub_13F6FC8(v38);
      --v36;
    }
    while (v36);
    *(_DWORD *)(a1 + 384) = 0;
  }
  uint64_t v39 = *(unsigned int *)(a1 + 408);
  if ((int)v39 >= 1)
  {
    uint64_t v40 = (uint64_t *)(*(void *)(a1 + 416) + 8);
    do
    {
      uint64_t v41 = *v40++;
      uint64_t result = sub_13F4B4C(v41);
      --v39;
    }
    while (v39);
    *(_DWORD *)(a1 + 408) = 0;
  }
  uint64_t v42 = *(unsigned int *)(a1 + 432);
  if ((int)v42 >= 1)
  {
    uint64_t v43 = (uint64_t *)(*(void *)(a1 + 440) + 8);
    do
    {
      uint64_t v44 = *v43++;
      uint64_t result = sub_14486CC(v44);
      --v42;
    }
    while (v42);
    *(_DWORD *)(a1 + 432) = 0;
  }
  unsigned int v45 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v45) {
    goto LABEL_67;
  }
  if ((v45 & 1) == 0)
  {
    if ((v45 & 2) == 0) {
      goto LABEL_60;
    }
LABEL_129:
    unint64_t v50 = *(void *)(a1 + 456) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v50 + 23) < 0)
    {
      **(unsigned char **)unint64_t v50 = 0;
      *(void *)(v50 + 8) = 0;
      if ((v45 & 4) != 0) {
        goto LABEL_133;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v50 = 0;
      *(unsigned char *)(v50 + 23) = 0;
      if ((v45 & 4) != 0) {
        goto LABEL_133;
      }
    }
LABEL_61:
    if ((v45 & 8) == 0) {
      goto LABEL_62;
    }
LABEL_137:
    unint64_t v52 = *(void *)(a1 + 472) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v52 + 23) < 0)
    {
      **(unsigned char **)unint64_t v52 = 0;
      *(void *)(v52 + 8) = 0;
      if ((v45 & 0x10) != 0) {
        goto LABEL_141;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v52 = 0;
      *(unsigned char *)(v52 + 23) = 0;
      if ((v45 & 0x10) != 0) {
        goto LABEL_141;
      }
    }
LABEL_63:
    if ((v45 & 0x20) == 0) {
      goto LABEL_64;
    }
LABEL_142:
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 488));
    if ((v45 & 0x40) == 0)
    {
LABEL_65:
      if ((v45 & 0x80) == 0) {
        goto LABEL_67;
      }
      goto LABEL_66;
    }
    goto LABEL_143;
  }
  unint64_t v49 = *(void *)(a1 + 448) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v49 + 23) < 0)
  {
    **(unsigned char **)unint64_t v49 = 0;
    *(void *)(v49 + 8) = 0;
    if ((v45 & 2) != 0) {
      goto LABEL_129;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v49 = 0;
    *(unsigned char *)(v49 + 23) = 0;
    if ((v45 & 2) != 0) {
      goto LABEL_129;
    }
  }
LABEL_60:
  if ((v45 & 4) == 0) {
    goto LABEL_61;
  }
LABEL_133:
  unint64_t v51 = *(void *)(a1 + 464) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v51 + 23) < 0)
  {
    **(unsigned char **)unint64_t v51 = 0;
    *(void *)(v51 + 8) = 0;
    if ((v45 & 8) != 0) {
      goto LABEL_137;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v51 = 0;
    *(unsigned char *)(v51 + 23) = 0;
    if ((v45 & 8) != 0) {
      goto LABEL_137;
    }
  }
LABEL_62:
  if ((v45 & 0x10) == 0) {
    goto LABEL_63;
  }
LABEL_141:
  uint64_t result = sub_15B8FB8(*(void *)(a1 + 480));
  if ((v45 & 0x20) != 0) {
    goto LABEL_142;
  }
LABEL_64:
  if ((v45 & 0x40) == 0) {
    goto LABEL_65;
  }
LABEL_143:
  uint64_t result = sub_15B6D84(*(void *)(a1 + 496));
  if ((v45 & 0x80) != 0) {
LABEL_66:
  }
    uint64_t result = sub_14051D0(*(void *)(a1 + 504));
LABEL_67:
  if ((v45 & 0xFF00) == 0) {
    goto LABEL_77;
  }
  if ((v45 & 0x100) != 0)
  {
    uint64_t result = sub_1596D84(*(void *)(a1 + 512));
    if ((v45 & 0x200) == 0)
    {
LABEL_70:
      if ((v45 & 0x400) == 0) {
        goto LABEL_71;
      }
      goto LABEL_109;
    }
  }
  else if ((v45 & 0x200) == 0)
  {
    goto LABEL_70;
  }
  uint64_t result = sub_1596D84(*(void *)(a1 + 520));
  if ((v45 & 0x400) == 0)
  {
LABEL_71:
    if ((v45 & 0x800) == 0) {
      goto LABEL_72;
    }
    goto LABEL_110;
  }
LABEL_109:
  uint64_t result = (uint64_t)sub_14152E8(*(std::string **)(a1 + 528));
  if ((v45 & 0x800) == 0)
  {
LABEL_72:
    if ((v45 & 0x1000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_111;
  }
LABEL_110:
  uint64_t result = sub_141D084(*(void *)(a1 + 536));
  if ((v45 & 0x1000) == 0)
  {
LABEL_73:
    if ((v45 & 0x2000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_112;
  }
LABEL_111:
  uint64_t result = sub_1596D84(*(void *)(a1 + 544));
  if ((v45 & 0x2000) == 0)
  {
LABEL_74:
    if ((v45 & 0x4000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_113;
  }
LABEL_112:
  uint64_t result = sub_1596D84(*(void *)(a1 + 552));
  if ((v45 & 0x4000) == 0)
  {
LABEL_75:
    if ((v45 & 0x8000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_76;
  }
LABEL_113:
  uint64_t result = sub_1596D84(*(void *)(a1 + 560));
  if ((v45 & 0x8000) != 0) {
LABEL_76:
  }
    uint64_t result = sub_1596D84(*(void *)(a1 + 568));
LABEL_77:
  if ((v45 & 0xFF0000) == 0) {
    goto LABEL_87;
  }
  if ((v45 & 0x10000) != 0)
  {
    uint64_t result = sub_1596D84(*(void *)(a1 + 576));
    if ((v45 & 0x20000) == 0)
    {
LABEL_80:
      if ((v45 & 0x40000) == 0) {
        goto LABEL_81;
      }
      goto LABEL_117;
    }
  }
  else if ((v45 & 0x20000) == 0)
  {
    goto LABEL_80;
  }
  uint64_t result = sub_1596D84(*(void *)(a1 + 584));
  if ((v45 & 0x40000) == 0)
  {
LABEL_81:
    if ((v45 & 0x80000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t result = sub_1596D84(*(void *)(a1 + 592));
  if ((v45 & 0x80000) == 0)
  {
LABEL_82:
    if ((v45 & 0x100000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t result = sub_1415398(*(void *)(a1 + 600));
  if ((v45 & 0x100000) == 0)
  {
LABEL_83:
    if ((v45 & 0x200000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t result = sub_1596D84(*(void *)(a1 + 608));
  if ((v45 & 0x200000) == 0)
  {
LABEL_84:
    if ((v45 & 0x400000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t result = sub_1596D84(*(void *)(a1 + 616));
  if ((v45 & 0x400000) == 0)
  {
LABEL_85:
    if ((v45 & 0x800000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_86;
  }
LABEL_121:
  uint64_t result = sub_1596D84(*(void *)(a1 + 624));
  if ((v45 & 0x800000) != 0) {
LABEL_86:
  }
    uint64_t result = sub_1596D84(*(void *)(a1 + 632));
LABEL_87:
  if ((v45 & 0x1F000000) == 0) {
    goto LABEL_94;
  }
  if ((v45 & 0x1000000) != 0)
  {
    uint64_t result = sub_14153B4(*(void *)(a1 + 640));
    if ((v45 & 0x2000000) == 0)
    {
LABEL_90:
      if ((v45 & 0x4000000) == 0) {
        goto LABEL_91;
      }
      goto LABEL_125;
    }
  }
  else if ((v45 & 0x2000000) == 0)
  {
    goto LABEL_90;
  }
  uint64_t result = sub_143A46C(*(void *)(a1 + 648));
  if ((v45 & 0x4000000) == 0)
  {
LABEL_91:
    if ((v45 & 0x8000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t result = sub_13F6FC8(*(void *)(a1 + 656));
  if ((v45 & 0x8000000) == 0)
  {
LABEL_92:
    if ((v45 & 0x10000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_93;
  }
LABEL_126:
  uint64_t result = sub_140C788(*(void *)(a1 + 664));
  if ((v45 & 0x10000000) != 0) {
LABEL_93:
  }
    uint64_t result = sub_13F6FC8(*(void *)(a1 + 672));
LABEL_94:
  if (v45 >> 29)
  {
    *(void *)(a1 + 696) = 0;
    *(_OWORD *)(a1 + 680) = 0u;
  }
  int v46 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v46)
  {
    *(_OWORD *)(a1 + 720) = 0u;
    *(_OWORD *)(a1 + 736) = 0u;
    *(_OWORD *)(a1 + 704) = 0u;
  }
  if ((v46 & 0x700) != 0)
  {
    *(_OWORD *)(a1 + 752) = 0u;
    *(_DWORD *)(a1 + 768) = -1;
  }
  char v48 = *(unsigned char *)(a1 + 8);
  uint64_t v47 = (uint64_t *)(a1 + 8);
  v47[1] = 0;
  if (v48)
  {
    return sub_188B4AC(v47);
  }
  return result;
}

uint64_t sub_159AF54(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v28 + 1);
    unsigned int v9 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v28 + 2);
      }
    }
    *(void *)uint64_t v28 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_30;
        }
        v5 |= 8u;
        unint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v28 = v12;
          *(void *)(a1 + 48) = v13;
          goto LABEL_38;
        }
        uint64_t v26 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v28 = v26;
        *(void *)(a1 + 48) = v27;
        if (v26) {
          goto LABEL_38;
        }
        goto LABEL_45;
      case 2u:
        if (v9 != 18) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
        uint64_t v18 = (uint64_t)sub_188C244(v17, *(char **)v28, (uint64_t)a3);
        goto LABEL_37;
      case 3u:
        if (v9 != 26) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 32);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_15C1EF4((uint64_t)v20);
          *(void *)(a1 + 32) = v19;
          uint64_t v8 = *(unsigned __int8 **)v28;
        }
        uint64_t v18 = sub_1198E84(a3, v19, v8);
        goto LABEL_37;
      case 4u:
        if (v9 != 34) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 40);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          sub_15A3D5C((uint64_t)v22);
          uint64_t v21 = v23;
          *(void *)(a1 + 40) = v23;
          uint64_t v8 = *(unsigned __int8 **)v28;
        }
        uint64_t v18 = (uint64_t)sub_159B200(a3, v21, v8);
        goto LABEL_37;
      default:
LABEL_30:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v28;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v9, v25, (char *)v8, a3);
LABEL_37:
          *(void *)uint64_t v28 = v18;
          if (!v18) {
            goto LABEL_45;
          }
LABEL_38:
          if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_45:
        }
          *(void *)uint64_t v28 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v28;
    }
  }
}

char *sub_159B200(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_159E60C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_159B290(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_25;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  char *v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_15B9320(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_19:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    char *v4 = 34;
    unsigned int v14 = *(_DWORD *)(v13 + 24);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_15A0200(v13, (unint64_t)v15, a3);
  }
LABEL_25:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_159B4B8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t v7 = sub_15B956C(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    int v2 = *(_DWORD *)(a1 + 16);
    goto LABEL_8;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  if ((v2 & 8) != 0) {
    v3 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  return v3;
}

uint64_t sub_159B584(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 0xB) != 0)
  {
    uint64_t v8 = sub_159B4B8(a1);
  }
  else
  {
    uint64_t v2 = *(void *)(a1 + 32);
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v5;
    }
    uint64_t v7 = sub_15B956C(v2);
    uint64_t v8 = v6
       + v7
       + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6)
       + ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6)
       + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6)
       + 3;
  }
  if ((*(unsigned char *)(a1 + 16) & 4) != 0)
  {
    uint64_t v9 = sub_15A1C38(*(void *)(a1 + 40));
    v8 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v8 += v13;
  }
  *(_DWORD *)(a1 + 20) = v8;
  return v8;
}

void sub_159B6B0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 48) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 32, *(_DWORD *)(a2 + 40));
    sub_15A7B98((uint64_t *)(a1 + 32), v6, v5, v4, **(_DWORD **)(a1 + 48) - *(_DWORD *)(a1 + 40));
    int v7 = *(_DWORD *)(a1 + 40) + v4;
    *(_DWORD *)(a1 + 40) = v7;
    uint64_t v8 = *(int **)(a1 + 48);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 56);
    sub_188CA54((unsigned int *)(a1 + 56), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy((void *)(v11 + 8 * v10), *(const void **)(a2 + 64), 8 * *(int *)(a2 + 56));
  }
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = (const std::string **)(*(void *)(a2 + 88) + 8);
    unsigned int v14 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v14, v13, v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    unint64_t v18 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v19 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_124E9E4((uint64_t *)(a1 + 96), v19, v18, v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    uint64_t v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      int *v21 = v20;
    }
  }
  int v22 = *(_DWORD *)(a2 + 128);
  if (v22)
  {
    uint64_t v23 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    BOOL v24 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_1491F40((std::string *)(a1 + 120), v24, v23, v22, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v25 = *(_DWORD *)(a1 + 128) + v22;
    *(_DWORD *)(a1 + 128) = v25;
    uint64_t v26 = *(int **)(a1 + 136);
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  int v27 = *(_DWORD *)(a2 + 152);
  if (v27)
  {
    uint64_t v28 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v29 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_122BB8C((std::string *)(a1 + 144), v29, v28, v27, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v30 = *(_DWORD *)(a1 + 152) + v27;
    *(_DWORD *)(a1 + 152) = v30;
    uint64_t v31 = *(int **)(a1 + 160);
    if (*v31 < v30) {
      *uint64_t v31 = v30;
    }
  }
  int v32 = *(_DWORD *)(a2 + 176);
  if (v32)
  {
    uint64_t v33 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    BOOL v34 = (uint64_t *)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_124EA70((uint64_t *)(a1 + 168), v34, v33, v32, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v35 = *(_DWORD *)(a1 + 176) + v32;
    *(_DWORD *)(a1 + 176) = v35;
    uint64_t v36 = *(int **)(a1 + 184);
    if (*v36 < v35) {
      *uint64_t v36 = v35;
    }
  }
  int v37 = *(_DWORD *)(a2 + 200);
  if (v37)
  {
    uint64_t v38 = (const std::string **)(*(void *)(a2 + 208) + 8);
    uint64_t v39 = (std::string **)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_188FB98(a1 + 192, v39, v38, v37, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v40 = *(_DWORD *)(a1 + 200) + v37;
    *(_DWORD *)(a1 + 200) = v40;
    uint64_t v41 = *(int **)(a1 + 208);
    if (*v41 < v40) {
      *uint64_t v41 = v40;
    }
  }
  int v42 = *(_DWORD *)(a2 + 224);
  if (v42)
  {
    uint64_t v43 = (uint64_t *)(*(void *)(a2 + 232) + 8);
    uint64_t v44 = (std::string **)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_15A7B98((uint64_t *)(a1 + 216), v44, v43, v42, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v45 = *(_DWORD *)(a1 + 224) + v42;
    *(_DWORD *)(a1 + 224) = v45;
    int v46 = *(int **)(a1 + 232);
    if (*v46 < v45) {
      *int v46 = v45;
    }
  }
  int v47 = *(_DWORD *)(a2 + 248);
  if (v47)
  {
    char v48 = (uint64_t *)(*(void *)(a2 + 256) + 8);
    unint64_t v49 = (std::string **)sub_188CCE4(a1 + 240, *(_DWORD *)(a2 + 248));
    sub_124ECA0((uint64_t *)(a1 + 240), v49, v48, v47, **(_DWORD **)(a1 + 256) - *(_DWORD *)(a1 + 248));
    int v50 = *(_DWORD *)(a1 + 248) + v47;
    *(_DWORD *)(a1 + 248) = v50;
    unint64_t v51 = *(int **)(a1 + 256);
    if (*v51 < v50) {
      *unint64_t v51 = v50;
    }
  }
  int v52 = *(_DWORD *)(a2 + 272);
  if (v52)
  {
    uint64_t v53 = (uint64_t *)(*(void *)(a2 + 280) + 8);
    int v54 = (std::string **)sub_188CCE4(a1 + 264, *(_DWORD *)(a2 + 272));
    sub_124E8CC((uint64_t *)(a1 + 264), v54, v53, v52, **(_DWORD **)(a1 + 280) - *(_DWORD *)(a1 + 272));
    int v55 = *(_DWORD *)(a1 + 272) + v52;
    *(_DWORD *)(a1 + 272) = v55;
    int v56 = *(int **)(a1 + 280);
    if (*v56 < v55) {
      int *v56 = v55;
    }
  }
  int v57 = *(_DWORD *)(a2 + 296);
  if (v57)
  {
    uint64_t v58 = (uint64_t *)(*(void *)(a2 + 304) + 8);
    char v59 = (std::string **)sub_188CCE4(a1 + 288, *(_DWORD *)(a2 + 296));
    sub_124EC14((uint64_t *)(a1 + 288), v59, v58, v57, **(_DWORD **)(a1 + 304) - *(_DWORD *)(a1 + 296));
    int v60 = *(_DWORD *)(a1 + 296) + v57;
    *(_DWORD *)(a1 + 296) = v60;
    unint64_t v61 = *(int **)(a1 + 304);
    if (*v61 < v60) {
      int *v61 = v60;
    }
  }
  int v62 = *(_DWORD *)(a2 + 320);
  if (v62)
  {
    uint64_t v63 = (uint64_t *)(*(void *)(a2 + 328) + 8);
    int v64 = (uint64_t *)sub_188CCE4(a1 + 312, *(_DWORD *)(a2 + 320));
    sub_124ED2C((uint64_t *)(a1 + 312), v64, v63, v62, **(_DWORD **)(a1 + 328) - *(_DWORD *)(a1 + 320));
    int v65 = *(_DWORD *)(a1 + 320) + v62;
    *(_DWORD *)(a1 + 320) = v65;
    unsigned int v66 = *(int **)(a1 + 328);
    if (*v66 < v65) {
      *unsigned int v66 = v65;
    }
  }
  int v67 = *(_DWORD *)(a2 + 336);
  if (v67)
  {
    uint64_t v68 = *(int *)(a1 + 336);
    sub_188CA54((unsigned int *)(a1 + 336), v68 + v67);
    uint64_t v69 = *(void *)(a1 + 344);
    *(_DWORD *)(a1 + 336) += *(_DWORD *)(a2 + 336);
    memcpy((void *)(v69 + 8 * v68), *(const void **)(a2 + 344), 8 * *(int *)(a2 + 336));
  }
  int v70 = *(_DWORD *)(a2 + 360);
  if (v70)
  {
    uint64_t v71 = (uint64_t *)(*(void *)(a2 + 368) + 8);
    unint64_t v72 = (std::string **)sub_188CCE4(a1 + 352, *(_DWORD *)(a2 + 360));
    sub_124D794((std::string *)(a1 + 352), v72, v71, v70, **(_DWORD **)(a1 + 368) - *(_DWORD *)(a1 + 360));
    int v73 = *(_DWORD *)(a1 + 360) + v70;
    *(_DWORD *)(a1 + 360) = v73;
    uint64_t v74 = *(int **)(a1 + 368);
    if (*v74 < v73) {
      *uint64_t v74 = v73;
    }
  }
  int v75 = *(_DWORD *)(a2 + 384);
  if (v75)
  {
    uint64_t v76 = (uint64_t *)(*(void *)(a2 + 392) + 8);
    int v77 = (std::string **)sub_188CCE4(a1 + 376, *(_DWORD *)(a2 + 384));
    sub_124EFB8((std::string *)(a1 + 376), v77, v76, v75, **(_DWORD **)(a1 + 392) - *(_DWORD *)(a1 + 384));
    int v78 = *(_DWORD *)(a1 + 384) + v75;
    *(_DWORD *)(a1 + 384) = v78;
    uint64_t v79 = *(int **)(a1 + 392);
    if (*v79 < v78) {
      *uint64_t v79 = v78;
    }
  }
  int v80 = *(_DWORD *)(a2 + 408);
  if (v80)
  {
    uint64_t v81 = (uint64_t *)(*(void *)(a2 + 416) + 8);
    int v82 = (std::string **)sub_188CCE4(a1 + 400, *(_DWORD *)(a2 + 408));
    sub_124F044((uint64_t *)(a1 + 400), v82, v81, v80, **(_DWORD **)(a1 + 416) - *(_DWORD *)(a1 + 408));
    int v83 = *(_DWORD *)(a1 + 408) + v80;
    *(_DWORD *)(a1 + 408) = v83;
    uint64_t v84 = *(int **)(a1 + 416);
    if (*v84 < v83) {
      *uint64_t v84 = v83;
    }
  }
  int v85 = *(_DWORD *)(a2 + 432);
  if (v85)
  {
    uint64_t v86 = (uint64_t *)(*(void *)(a2 + 440) + 8);
    uint64_t v87 = (std::string **)sub_188CCE4(a1 + 424, *(_DWORD *)(a2 + 432));
    sub_124F0D0((uint64_t *)(a1 + 424), v87, v86, v85, **(_DWORD **)(a1 + 440) - *(_DWORD *)(a1 + 432));
    int v88 = *(_DWORD *)(a1 + 432) + v85;
    *(_DWORD *)(a1 + 432) = v88;
    unint64_t v89 = *(int **)(a1 + 440);
    if (*v89 < v88) {
      *unint64_t v89 = v88;
    }
  }
  unsigned int v90 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v90) {
    goto LABEL_107;
  }
  if (v90)
  {
    int v91 = (long long *)(*(void *)(a2 + 448) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v92 = *(void *)(a1 + 8);
    uint64_t v93 = (uint64_t *)(v92 & 0xFFFFFFFFFFFFFFFCLL);
    if (v92) {
      uint64_t v93 = (uint64_t *)*v93;
    }
    sub_1881DF4((std::string **)(a1 + 448), v91, v93);
    if ((v90 & 2) == 0)
    {
LABEL_56:
      if ((v90 & 4) == 0) {
        goto LABEL_57;
      }
      goto LABEL_69;
    }
  }
  else if ((v90 & 2) == 0)
  {
    goto LABEL_56;
  }
  uint64_t v94 = (long long *)(*(void *)(a2 + 456) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v95 = *(void *)(a1 + 8);
  int v96 = (uint64_t *)(v95 & 0xFFFFFFFFFFFFFFFCLL);
  if (v95) {
    int v96 = (uint64_t *)*v96;
  }
  sub_1881DF4((std::string **)(a1 + 456), v94, v96);
  if ((v90 & 4) == 0)
  {
LABEL_57:
    if ((v90 & 8) == 0) {
      goto LABEL_58;
    }
    goto LABEL_72;
  }
LABEL_69:
  uint64_t v97 = (long long *)(*(void *)(a2 + 464) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v98 = *(void *)(a1 + 8);
  uint64_t v99 = (uint64_t *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
  if (v98) {
    uint64_t v99 = (uint64_t *)*v99;
  }
  sub_1881DF4((std::string **)(a1 + 464), v97, v99);
  if ((v90 & 8) == 0)
  {
LABEL_58:
    if ((v90 & 0x10) == 0) {
      goto LABEL_59;
    }
    goto LABEL_75;
  }
LABEL_72:
  unint64_t v100 = (long long *)(*(void *)(a2 + 472) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v101 = *(void *)(a1 + 8);
  uint64_t v102 = (uint64_t *)(v101 & 0xFFFFFFFFFFFFFFFCLL);
  if (v101) {
    uint64_t v102 = (uint64_t *)*v102;
  }
  sub_1881DF4((std::string **)(a1 + 472), v100, v102);
  if ((v90 & 0x10) == 0)
  {
LABEL_59:
    if ((v90 & 0x20) == 0) {
      goto LABEL_60;
    }
LABEL_83:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v107 = *(void *)(a1 + 488);
    if (!v107)
    {
      uint64_t v108 = *(void *)(a1 + 8);
      uint64_t v109 = (void *)(v108 & 0xFFFFFFFFFFFFFFFCLL);
      if (v108) {
        uint64_t v109 = (void *)*v109;
      }
      uint64_t v107 = sub_15C1918((uint64_t)v109);
      *(void *)(a1 + 488) = v107;
    }
    if (*(void *)(a2 + 488)) {
      int v110 = *(uint64_t (****)())(a2 + 488);
    }
    else {
      int v110 = &off_253F1A0;
    }
    sub_15B0E24(v107, (uint64_t)v110);
    if ((v90 & 0x40) == 0)
    {
LABEL_61:
      if ((v90 & 0x80) == 0) {
        goto LABEL_107;
      }
      goto LABEL_99;
    }
    goto LABEL_91;
  }
LABEL_75:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  int v103 = *(std::string **)(a1 + 480);
  if (!v103)
  {
    uint64_t v104 = *(void *)(a1 + 8);
    uint64_t v105 = (void *)(v104 & 0xFFFFFFFFFFFFFFFCLL);
    if (v104) {
      uint64_t v105 = (void *)*v105;
    }
    int v103 = (std::string *)sub_15C1EF4((uint64_t)v105);
    *(void *)(a1 + 480) = v103;
  }
  if (*(void *)(a2 + 480)) {
    int v106 = *(uint64_t (****)())(a2 + 480);
  }
  else {
    int v106 = &off_253F4C8;
  }
  sub_15B9698(v103, (uint64_t)v106);
  if ((v90 & 0x20) != 0) {
    goto LABEL_83;
  }
LABEL_60:
  if ((v90 & 0x40) == 0) {
    goto LABEL_61;
  }
LABEL_91:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  unint64_t v111 = *(std::string **)(a1 + 496);
  if (!v111)
  {
    uint64_t v112 = *(void *)(a1 + 8);
    uint64_t v113 = (void *)(v112 & 0xFFFFFFFFFFFFFFFCLL);
    if (v112) {
      uint64_t v113 = (void *)*v113;
    }
    unint64_t v111 = (std::string *)sub_15C1E94((uint64_t)v113);
    *(void *)(a1 + 496) = v111;
  }
  if (*(void *)(a2 + 496)) {
    uint64_t v114 = *(uint64_t (****)())(a2 + 496);
  }
  else {
    uint64_t v114 = &off_253F3D0;
  }
  sub_15B86B8(v111, (uint64_t)v114);
  if ((v90 & 0x80) != 0)
  {
LABEL_99:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v115 = *(void *)(a1 + 504);
    if (!v115)
    {
      uint64_t v116 = *(void *)(a1 + 8);
      int v117 = (void *)(v116 & 0xFFFFFFFFFFFFFFFCLL);
      if (v116) {
        int v117 = (void *)*v117;
      }
      sub_1449D48((uint64_t)v117);
      *(void *)(a1 + 504) = v115;
    }
    if (*(void *)(a2 + 504)) {
      uint64_t v118 = *(uint64_t (****)())(a2 + 504);
    }
    else {
      uint64_t v118 = &off_2537668;
    }
    sub_140A96C(v115, (uint64_t)v118);
  }
LABEL_107:
  if ((v90 & 0xFF00) == 0) {
    goto LABEL_181;
  }
  if ((v90 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v119 = *(std::string **)(a1 + 512);
    if (!v119)
    {
      uint64_t v120 = *(void *)(a1 + 8);
      uint64_t v121 = (void *)(v120 & 0xFFFFFFFFFFFFFFFCLL);
      if (v120) {
        uint64_t v121 = (void *)*v121;
      }
      uint64_t v119 = (std::string *)sub_15A5754((uint64_t)v121);
      *(void *)(a1 + 512) = v119;
    }
    if (*(void *)(a2 + 512)) {
      uint64_t v122 = *(uint64_t (****)())(a2 + 512);
    }
    else {
      uint64_t v122 = &off_253F108;
    }
    sub_1598BE8(v119, (uint64_t)v122);
    if ((v90 & 0x200) == 0)
    {
LABEL_110:
      if ((v90 & 0x400) == 0) {
        goto LABEL_111;
      }
      goto LABEL_133;
    }
  }
  else if ((v90 & 0x200) == 0)
  {
    goto LABEL_110;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v123 = *(std::string **)(a1 + 520);
  if (!v123)
  {
    uint64_t v124 = *(void *)(a1 + 8);
    uint64_t v125 = (void *)(v124 & 0xFFFFFFFFFFFFFFFCLL);
    if (v124) {
      uint64_t v125 = (void *)*v125;
    }
    uint64_t v123 = (std::string *)sub_15A5754((uint64_t)v125);
    *(void *)(a1 + 520) = v123;
  }
  if (*(void *)(a2 + 520)) {
    uint64_t v126 = *(uint64_t (****)())(a2 + 520);
  }
  else {
    uint64_t v126 = &off_253F108;
  }
  sub_1598BE8(v123, (uint64_t)v126);
  if ((v90 & 0x400) == 0)
  {
LABEL_111:
    if ((v90 & 0x800) == 0) {
      goto LABEL_112;
    }
    goto LABEL_141;
  }
LABEL_133:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v127 = *(std::string **)(a1 + 528);
  if (!v127)
  {
    uint64_t v128 = *(void *)(a1 + 8);
    uint64_t v129 = (void *)(v128 & 0xFFFFFFFFFFFFFFFCLL);
    if (v128) {
      uint64_t v129 = (void *)*v129;
    }
    uint64_t v127 = (std::string *)sub_144A82C((uint64_t)v129);
    *(void *)(a1 + 528) = v127;
  }
  if (*(void *)(a2 + 528)) {
    uint64_t v130 = *(uint64_t (****)(uint64_t))(a2 + 528);
  }
  else {
    uint64_t v130 = &off_2537D60;
  }
  sub_1415C08(v127, (uint64_t)v130);
  if ((v90 & 0x800) == 0)
  {
LABEL_112:
    if ((v90 & 0x1000) == 0) {
      goto LABEL_113;
    }
    goto LABEL_149;
  }
LABEL_141:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v131 = *(void *)(a1 + 536);
  if (!v131)
  {
    uint64_t v132 = *(void *)(a1 + 8);
    uint64_t v133 = (void *)(v132 & 0xFFFFFFFFFFFFFFFCLL);
    if (v132) {
      uint64_t v133 = (void *)*v133;
    }
    uint64_t v131 = sub_144ACEC((uint64_t)v133);
    *(void *)(a1 + 536) = v131;
  }
  if (*(void *)(a2 + 536)) {
    uint64_t v134 = *(uint64_t (****)())(a2 + 536);
  }
  else {
    uint64_t v134 = &off_2537F18;
  }
  sub_141F100(v131, (uint64_t)v134);
  if ((v90 & 0x1000) == 0)
  {
LABEL_113:
    if ((v90 & 0x2000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_157;
  }
LABEL_149:
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  uint64_t v135 = *(std::string **)(a1 + 544);
  if (!v135)
  {
    uint64_t v136 = *(void *)(a1 + 8);
    v137 = (void *)(v136 & 0xFFFFFFFFFFFFFFFCLL);
    if (v136) {
      v137 = (void *)*v137;
    }
    uint64_t v135 = (std::string *)sub_15A5754((uint64_t)v137);
    *(void *)(a1 + 544) = v135;
  }
  if (*(void *)(a2 + 544)) {
    v138 = *(uint64_t (****)())(a2 + 544);
  }
  else {
    v138 = &off_253F108;
  }
  sub_1598BE8(v135, (uint64_t)v138);
  if ((v90 & 0x2000) == 0)
  {
LABEL_114:
    if ((v90 & 0x4000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_165;
  }
LABEL_157:
  *(_DWORD *)(a1 + 16) |= 0x2000u;
  v139 = *(std::string **)(a1 + 552);
  if (!v139)
  {
    uint64_t v140 = *(void *)(a1 + 8);
    v141 = (void *)(v140 & 0xFFFFFFFFFFFFFFFCLL);
    if (v140) {
      v141 = (void *)*v141;
    }
    v139 = (std::string *)sub_15A5754((uint64_t)v141);
    *(void *)(a1 + 552) = v139;
  }
  if (*(void *)(a2 + 552)) {
    v142 = *(uint64_t (****)())(a2 + 552);
  }
  else {
    v142 = &off_253F108;
  }
  sub_1598BE8(v139, (uint64_t)v142);
  if ((v90 & 0x4000) == 0)
  {
LABEL_115:
    if ((v90 & 0x8000) == 0) {
      goto LABEL_181;
    }
    goto LABEL_173;
  }
LABEL_165:
  *(_DWORD *)(a1 + 16) |= 0x4000u;
  v143 = *(std::string **)(a1 + 560);
  if (!v143)
  {
    uint64_t v144 = *(void *)(a1 + 8);
    v145 = (void *)(v144 & 0xFFFFFFFFFFFFFFFCLL);
    if (v144) {
      v145 = (void *)*v145;
    }
    v143 = (std::string *)sub_15A5754((uint64_t)v145);
    *(void *)(a1 + 560) = v143;
  }
  if (*(void *)(a2 + 560)) {
    v146 = *(uint64_t (****)())(a2 + 560);
  }
  else {
    v146 = &off_253F108;
  }
  sub_1598BE8(v143, (uint64_t)v146);
  if ((v90 & 0x8000) != 0)
  {
LABEL_173:
    *(_DWORD *)(a1 + 16) |= 0x8000u;
    v147 = *(std::string **)(a1 + 568);
    if (!v147)
    {
      uint64_t v148 = *(void *)(a1 + 8);
      v149 = (void *)(v148 & 0xFFFFFFFFFFFFFFFCLL);
      if (v148) {
        v149 = (void *)*v149;
      }
      v147 = (std::string *)sub_15A5754((uint64_t)v149);
      *(void *)(a1 + 568) = v147;
    }
    if (*(void *)(a2 + 568)) {
      v150 = *(uint64_t (****)())(a2 + 568);
    }
    else {
      v150 = &off_253F108;
    }
    sub_1598BE8(v147, (uint64_t)v150);
  }
LABEL_181:
  if ((v90 & 0xFF0000) == 0) {
    goto LABEL_255;
  }
  if ((v90 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x10000u;
    v151 = *(std::string **)(a1 + 576);
    if (!v151)
    {
      uint64_t v152 = *(void *)(a1 + 8);
      v153 = (void *)(v152 & 0xFFFFFFFFFFFFFFFCLL);
      if (v152) {
        v153 = (void *)*v153;
      }
      v151 = (std::string *)sub_15A5754((uint64_t)v153);
      *(void *)(a1 + 576) = v151;
    }
    if (*(void *)(a2 + 576)) {
      v154 = *(uint64_t (****)())(a2 + 576);
    }
    else {
      v154 = &off_253F108;
    }
    sub_1598BE8(v151, (uint64_t)v154);
    if ((v90 & 0x20000) == 0)
    {
LABEL_184:
      if ((v90 & 0x40000) == 0) {
        goto LABEL_185;
      }
      goto LABEL_207;
    }
  }
  else if ((v90 & 0x20000) == 0)
  {
    goto LABEL_184;
  }
  *(_DWORD *)(a1 + 16) |= 0x20000u;
  v155 = *(std::string **)(a1 + 584);
  if (!v155)
  {
    uint64_t v156 = *(void *)(a1 + 8);
    v157 = (void *)(v156 & 0xFFFFFFFFFFFFFFFCLL);
    if (v156) {
      v157 = (void *)*v157;
    }
    v155 = (std::string *)sub_15A5754((uint64_t)v157);
    *(void *)(a1 + 584) = v155;
  }
  if (*(void *)(a2 + 584)) {
    v158 = *(uint64_t (****)())(a2 + 584);
  }
  else {
    v158 = &off_253F108;
  }
  sub_1598BE8(v155, (uint64_t)v158);
  if ((v90 & 0x40000) == 0)
  {
LABEL_185:
    if ((v90 & 0x80000) == 0) {
      goto LABEL_186;
    }
    goto LABEL_215;
  }
LABEL_207:
  *(_DWORD *)(a1 + 16) |= 0x40000u;
  v159 = *(std::string **)(a1 + 592);
  if (!v159)
  {
    uint64_t v160 = *(void *)(a1 + 8);
    v161 = (void *)(v160 & 0xFFFFFFFFFFFFFFFCLL);
    if (v160) {
      v161 = (void *)*v161;
    }
    v159 = (std::string *)sub_15A5754((uint64_t)v161);
    *(void *)(a1 + 592) = v159;
  }
  if (*(void *)(a2 + 592)) {
    v162 = *(uint64_t (****)())(a2 + 592);
  }
  else {
    v162 = &off_253F108;
  }
  sub_1598BE8(v159, (uint64_t)v162);
  if ((v90 & 0x80000) == 0)
  {
LABEL_186:
    if ((v90 & 0x100000) == 0) {
      goto LABEL_187;
    }
    goto LABEL_223;
  }
LABEL_215:
  *(_DWORD *)(a1 + 16) |= 0x80000u;
  v163 = *(std::string **)(a1 + 600);
  if (!v163)
  {
    uint64_t v164 = *(void *)(a1 + 8);
    v165 = (void *)(v164 & 0xFFFFFFFFFFFFFFFCLL);
    if (v164) {
      v165 = (void *)*v165;
    }
    v163 = (std::string *)sub_144A794((uint64_t)v165);
    *(void *)(a1 + 600) = v163;
  }
  if (*(void *)(a2 + 600)) {
    v166 = *(void *(****)(void *))(a2 + 600);
  }
  else {
    v166 = &off_2537D30;
  }
  sub_1415CDC(v163, (uint64_t)v166);
  if ((v90 & 0x100000) == 0)
  {
LABEL_187:
    if ((v90 & 0x200000) == 0) {
      goto LABEL_188;
    }
    goto LABEL_231;
  }
LABEL_223:
  *(_DWORD *)(a1 + 16) |= 0x100000u;
  v167 = *(std::string **)(a1 + 608);
  if (!v167)
  {
    uint64_t v168 = *(void *)(a1 + 8);
    v169 = (void *)(v168 & 0xFFFFFFFFFFFFFFFCLL);
    if (v168) {
      v169 = (void *)*v169;
    }
    v167 = (std::string *)sub_15A5754((uint64_t)v169);
    *(void *)(a1 + 608) = v167;
  }
  if (*(void *)(a2 + 608)) {
    v170 = *(uint64_t (****)())(a2 + 608);
  }
  else {
    v170 = &off_253F108;
  }
  sub_1598BE8(v167, (uint64_t)v170);
  if ((v90 & 0x200000) == 0)
  {
LABEL_188:
    if ((v90 & 0x400000) == 0) {
      goto LABEL_189;
    }
    goto LABEL_239;
  }
LABEL_231:
  *(_DWORD *)(a1 + 16) |= 0x200000u;
  v171 = *(std::string **)(a1 + 616);
  if (!v171)
  {
    uint64_t v172 = *(void *)(a1 + 8);
    v173 = (void *)(v172 & 0xFFFFFFFFFFFFFFFCLL);
    if (v172) {
      v173 = (void *)*v173;
    }
    v171 = (std::string *)sub_15A5754((uint64_t)v173);
    *(void *)(a1 + 616) = v171;
  }
  if (*(void *)(a2 + 616)) {
    v174 = *(uint64_t (****)())(a2 + 616);
  }
  else {
    v174 = &off_253F108;
  }
  sub_1598BE8(v171, (uint64_t)v174);
  if ((v90 & 0x400000) == 0)
  {
LABEL_189:
    if ((v90 & 0x800000) == 0) {
      goto LABEL_255;
    }
    goto LABEL_247;
  }
LABEL_239:
  *(_DWORD *)(a1 + 16) |= 0x400000u;
  v175 = *(std::string **)(a1 + 624);
  if (!v175)
  {
    uint64_t v176 = *(void *)(a1 + 8);
    v177 = (void *)(v176 & 0xFFFFFFFFFFFFFFFCLL);
    if (v176) {
      v177 = (void *)*v177;
    }
    v175 = (std::string *)sub_15A5754((uint64_t)v177);
    *(void *)(a1 + 624) = v175;
  }
  if (*(void *)(a2 + 624)) {
    v178 = *(uint64_t (****)())(a2 + 624);
  }
  else {
    v178 = &off_253F108;
  }
  sub_1598BE8(v175, (uint64_t)v178);
  if ((v90 & 0x800000) != 0)
  {
LABEL_247:
    *(_DWORD *)(a1 + 16) |= 0x800000u;
    v179 = *(std::string **)(a1 + 632);
    if (!v179)
    {
      uint64_t v180 = *(void *)(a1 + 8);
      v181 = (void *)(v180 & 0xFFFFFFFFFFFFFFFCLL);
      if (v180) {
        v181 = (void *)*v181;
      }
      v179 = (std::string *)sub_15A5754((uint64_t)v181);
      *(void *)(a1 + 632) = v179;
    }
    if (*(void *)(a2 + 632)) {
      v182 = *(uint64_t (****)())(a2 + 632);
    }
    else {
      v182 = &off_253F108;
    }
    sub_1598BE8(v179, (uint64_t)v182);
  }
LABEL_255:
  if (!HIBYTE(v90)) {
    goto LABEL_281;
  }
  if ((v90 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x1000000u;
    v183 = *(std::string **)(a1 + 640);
    if (!v183)
    {
      uint64_t v184 = *(void *)(a1 + 8);
      v185 = (void *)(v184 & 0xFFFFFFFFFFFFFFFCLL);
      if (v184) {
        v185 = (void *)*v185;
      }
      v183 = (std::string *)sub_144A9F8((uint64_t)v185);
      *(void *)(a1 + 640) = v183;
    }
    if (*(void *)(a2 + 640)) {
      v186 = *(void *(****)(void *))(a2 + 640);
    }
    else {
      v186 = &off_2537DB8;
    }
    sub_1415D9C(v183, (uint64_t)v186);
  }
  if ((v90 & 0x2000000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x2000000u;
    uint64_t v187 = *(void *)(a1 + 648);
    if (!v187)
    {
      uint64_t v188 = *(void *)(a1 + 8);
      v189 = (void *)(v188 & 0xFFFFFFFFFFFFFFFCLL);
      if (v188) {
        v189 = (void *)*v189;
      }
      uint64_t v187 = sub_144C3E0((uint64_t)v189);
      *(void *)(a1 + 648) = v187;
    }
    if (*(void *)(a2 + 648)) {
      v190 = *(uint64_t (****)())(a2 + 648);
    }
    else {
      v190 = &off_2538978;
    }
    sub_143AB44(v187, (uint64_t)v190);
  }
  if ((v90 & 0x4000000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x4000000u;
    v193 = *(std::string **)(a1 + 656);
    if (!v193)
    {
      uint64_t v194 = *(void *)(a1 + 8);
      v195 = (void *)(v194 & 0xFFFFFFFFFFFFFFFCLL);
      if (v194) {
        v195 = (void *)*v195;
      }
      v193 = (std::string *)sub_1448DC4((uint64_t)v195);
      *(void *)(a1 + 656) = v193;
    }
    if (*(void *)(a2 + 656)) {
      v196 = *(uint64_t (****)(uint64_t))(a2 + 656);
    }
    else {
      v196 = &off_25373B0;
    }
    sub_13F746C(v193, (uint64_t)v196);
    if ((v90 & 0x8000000) == 0)
    {
LABEL_276:
      if ((v90 & 0x10000000) == 0) {
        goto LABEL_277;
      }
      goto LABEL_329;
    }
  }
  else if ((v90 & 0x8000000) == 0)
  {
    goto LABEL_276;
  }
  *(_DWORD *)(a1 + 16) |= 0x8000000u;
  v197 = *(std::string **)(a1 + 664);
  if (!v197)
  {
    uint64_t v198 = *(void *)(a1 + 8);
    v199 = (void *)(v198 & 0xFFFFFFFFFFFFFFFCLL);
    if (v198) {
      v199 = (void *)*v199;
    }
    v197 = (std::string *)sub_1449EB4((uint64_t)v199);
    *(void *)(a1 + 664) = v197;
  }
  if (*(void *)(a2 + 664)) {
    v200 = *(uint64_t (****)(uint64_t))(a2 + 664);
  }
  else {
    v200 = &off_2537960;
  }
  sub_1263010(v197, (uint64_t)v200);
  if ((v90 & 0x10000000) == 0)
  {
LABEL_277:
    if ((v90 & 0x20000000) == 0) {
      goto LABEL_278;
    }
    goto LABEL_337;
  }
LABEL_329:
  *(_DWORD *)(a1 + 16) |= 0x10000000u;
  v201 = *(std::string **)(a1 + 672);
  if (!v201)
  {
    uint64_t v202 = *(void *)(a1 + 8);
    v203 = (void *)(v202 & 0xFFFFFFFFFFFFFFFCLL);
    if (v202) {
      v203 = (void *)*v203;
    }
    v201 = (std::string *)sub_1448DC4((uint64_t)v203);
    *(void *)(a1 + 672) = v201;
  }
  if (*(void *)(a2 + 672)) {
    v204 = *(uint64_t (****)(uint64_t))(a2 + 672);
  }
  else {
    v204 = &off_25373B0;
  }
  sub_13F746C(v201, (uint64_t)v204);
  if ((v90 & 0x20000000) == 0)
  {
LABEL_278:
    if ((v90 & 0x40000000) == 0) {
      goto LABEL_279;
    }
LABEL_338:
    *(void *)(a1 + 688) = *(void *)(a2 + 688);
    if ((v90 & 0x80000000) == 0) {
      goto LABEL_280;
    }
LABEL_339:
    *(void *)(a1 + 696) = *(void *)(a2 + 696);
    goto LABEL_280;
  }
LABEL_337:
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  if ((v90 & 0x40000000) != 0) {
    goto LABEL_338;
  }
LABEL_279:
  if ((v90 & 0x80000000) != 0) {
    goto LABEL_339;
  }
LABEL_280:
  *(_DWORD *)(a1 + 16) |= v90;
LABEL_281:
  int v191 = *(_DWORD *)(a2 + 20);
  if (!(_BYTE)v191) {
    goto LABEL_292;
  }
  if (v191)
  {
    *(void *)(a1 + 704) = *(void *)(a2 + 704);
    if ((v191 & 2) == 0)
    {
LABEL_284:
      if ((v191 & 4) == 0) {
        goto LABEL_285;
      }
      goto LABEL_304;
    }
  }
  else if ((v191 & 2) == 0)
  {
    goto LABEL_284;
  }
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  if ((v191 & 4) == 0)
  {
LABEL_285:
    if ((v191 & 8) == 0) {
      goto LABEL_286;
    }
    goto LABEL_305;
  }
LABEL_304:
  *(unsigned char *)(a1 + 720) = *(unsigned char *)(a2 + 720);
  if ((v191 & 8) == 0)
  {
LABEL_286:
    if ((v191 & 0x10) == 0) {
      goto LABEL_287;
    }
    goto LABEL_306;
  }
LABEL_305:
  *(unsigned char *)(a1 + 721) = *(unsigned char *)(a2 + 721);
  if ((v191 & 0x10) == 0)
  {
LABEL_287:
    if ((v191 & 0x20) == 0) {
      goto LABEL_288;
    }
    goto LABEL_307;
  }
LABEL_306:
  *(_DWORD *)(a1 + 724) = *(_DWORD *)(a2 + 724);
  if ((v191 & 0x20) == 0)
  {
LABEL_288:
    if ((v191 & 0x40) == 0) {
      goto LABEL_289;
    }
LABEL_308:
    *(void *)(a1 + 736) = *(void *)(a2 + 736);
    if ((v191 & 0x80) == 0) {
      goto LABEL_291;
    }
    goto LABEL_290;
  }
LABEL_307:
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  if ((v191 & 0x40) != 0) {
    goto LABEL_308;
  }
LABEL_289:
  if ((v191 & 0x80) != 0) {
LABEL_290:
  }
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
LABEL_291:
  *(_DWORD *)(a1 + 20) |= v191;
LABEL_292:
  if ((v191 & 0x700) == 0) {
    goto LABEL_298;
  }
  if ((v191 & 0x100) == 0)
  {
    if ((v191 & 0x200) == 0) {
      goto LABEL_295;
    }
LABEL_311:
    *(void *)(a1 + 760) = *(void *)(a2 + 760);
    if ((v191 & 0x400) == 0) {
      goto LABEL_297;
    }
    goto LABEL_296;
  }
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  if ((v191 & 0x200) != 0) {
    goto LABEL_311;
  }
LABEL_295:
  if ((v191 & 0x400) != 0) {
LABEL_296:
  }
    *(_DWORD *)(a1 + 768) = *(_DWORD *)(a2 + 768);
LABEL_297:
  *(_DWORD *)(a1 + 20) |= v191;
LABEL_298:
  uint64_t v192 = *(void *)(a2 + 8);
  if (v192)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v192 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_159C794(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 19) & 0x20) == 0) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 40);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8 * v2--);
    if ((~*(_DWORD *)(v3 + 16) & 7) != 0) {
      return 0;
    }
  }
  uint64_t v4 = *(unsigned int *)(a1 + 104);
  while ((int)v4 >= 1)
  {
    uint64_t v5 = v4 - 1;
    BOOL v6 = sub_1413860(*(void *)(*(void *)(a1 + 112) + 8 * v4));
    uint64_t v4 = v5;
    if (!v6) {
      return 0;
    }
  }
  uint64_t v7 = *(unsigned int *)(a1 + 176);
  while ((int)v7 >= 1)
  {
    uint64_t v8 = v7 - 1;
    char v9 = sub_174147C(*(void *)(*(void *)(a1 + 184) + 8 * v7));
    uint64_t v7 = v8;
    if ((v9 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 224);
  while ((int)v10 >= 1)
  {
    uint64_t v11 = *(void *)(*(void *)(a1 + 232) + 8 * v10--);
    if ((~*(_DWORD *)(v11 + 16) & 7) != 0) {
      return 0;
    }
  }
  uint64_t v13 = *(unsigned int *)(a1 + 320);
  while ((int)v13 >= 1)
  {
    uint64_t v14 = v13 - 1;
    char v15 = sub_13F6548(*(void *)(*(void *)(a1 + 328) + 8 * v13));
    uint64_t result = 0;
    uint64_t v13 = v14;
    if ((v15 & 1) == 0) {
      return result;
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 360);
  while ((int)v16 >= 1)
  {
    uint64_t v17 = v16 - 1;
    BOOL v18 = sub_140CD70(*(void *)(*(void *)(a1 + 368) + 8 * v16));
    uint64_t result = 0;
    uint64_t v16 = v17;
    if (!v18) {
      return result;
    }
  }
  uint64_t v19 = *(unsigned int *)(a1 + 408);
  while ((int)v19 >= 1)
  {
    uint64_t v20 = v19 - 1;
    char v21 = sub_13F651C(*(void *)(*(void *)(a1 + 416) + 8 * v19));
    uint64_t result = 0;
    uint64_t v19 = v20;
    if ((v21 & 1) == 0) {
      return result;
    }
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 0x10) != 0)
  {
    uint64_t result = sub_15B9824(*(void *)(a1 + 480));
    if (!result) {
      return result;
    }
    int v22 = *(_DWORD *)(a1 + 16);
  }
  if ((v22 & 0x20) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 488));
    if (!result) {
      return result;
    }
    int v22 = *(_DWORD *)(a1 + 16);
  }
  if ((v22 & 0x40) != 0)
  {
    uint64_t result = sub_15B8CAC(*(void *)(a1 + 496));
    if (!result) {
      return result;
    }
    int v22 = *(_DWORD *)(a1 + 16);
  }
  if ((v22 & 0x80) != 0)
  {
    uint64_t result = sub_140B5F8(*(void *)(a1 + 504));
    if (!result) {
      return result;
    }
    int v22 = *(_DWORD *)(a1 + 16);
  }
  if ((v22 & 0x100) != 0)
  {
    uint64_t v23 = *(void *)(a1 + 512);
    uint64_t v24 = *(unsigned int *)(v23 + 24);
    uint64_t v25 = *(void *)(v23 + 32);
    while ((int)v24 >= 1)
    {
      uint64_t result = 0;
      uint64_t v26 = *(void *)(v25 + 8 * v24--);
      if ((~*(_DWORD *)(v26 + 16) & 3) != 0) {
        return result;
      }
    }
  }
  if ((v22 & 0x200) != 0)
  {
    uint64_t v27 = *(void *)(a1 + 520);
    uint64_t v28 = *(unsigned int *)(v27 + 24);
    uint64_t v29 = *(void *)(v27 + 32);
    while ((int)v28 >= 1)
    {
      uint64_t result = 0;
      uint64_t v30 = *(void *)(v29 + 8 * v28--);
      if ((~*(_DWORD *)(v30 + 16) & 3) != 0) {
        return result;
      }
    }
  }
  if ((v22 & 0x400) != 0)
  {
    uint64_t result = sub_1416384(*(void *)(a1 + 528));
    if (!result) {
      return result;
    }
    int v22 = *(_DWORD *)(a1 + 16);
  }
  if ((v22 & 0x800) != 0)
  {
    uint64_t result = sub_141F630(*(void *)(a1 + 536));
    if (!result) {
      return result;
    }
    int v22 = *(_DWORD *)(a1 + 16);
  }
  if ((v22 & 0x1000) != 0)
  {
    uint64_t v31 = *(void *)(a1 + 544);
    uint64_t v32 = *(unsigned int *)(v31 + 24);
    uint64_t v33 = *(void *)(v31 + 32);
    while ((int)v32 >= 1)
    {
      uint64_t result = 0;
      uint64_t v34 = *(void *)(v33 + 8 * v32--);
      if ((~*(_DWORD *)(v34 + 16) & 3) != 0) {
        return result;
      }
    }
  }
  if ((v22 & 0x2000) != 0)
  {
    uint64_t v35 = *(void *)(a1 + 552);
    uint64_t v36 = *(unsigned int *)(v35 + 24);
    uint64_t v37 = *(void *)(v35 + 32);
    while ((int)v36 >= 1)
    {
      uint64_t result = 0;
      uint64_t v38 = *(void *)(v37 + 8 * v36--);
      if ((~*(_DWORD *)(v38 + 16) & 3) != 0) {
        return result;
      }
    }
  }
  if ((v22 & 0x4000) != 0)
  {
    uint64_t v39 = *(void *)(a1 + 560);
    uint64_t v40 = *(unsigned int *)(v39 + 24);
    uint64_t v41 = *(void *)(v39 + 32);
    while ((int)v40 >= 1)
    {
      uint64_t result = 0;
      uint64_t v42 = *(void *)(v41 + 8 * v40--);
      if ((~*(_DWORD *)(v42 + 16) & 3) != 0) {
        return result;
      }
    }
  }
  if ((v22 & 0x8000) != 0)
  {
    uint64_t v43 = *(void *)(a1 + 568);
    uint64_t v44 = *(unsigned int *)(v43 + 24);
    uint64_t v45 = *(void *)(v43 + 32);
    while ((int)v44 >= 1)
    {
      uint64_t result = 0;
      uint64_t v46 = *(void *)(v45 + 8 * v44--);
      if ((~*(_DWORD *)(v46 + 16) & 3) != 0) {
        return result;
      }
    }
  }
  if ((v22 & 0x10000) != 0)
  {
    uint64_t v47 = *(void *)(a1 + 576);
    uint64_t v48 = *(unsigned int *)(v47 + 24);
    uint64_t v49 = *(void *)(v47 + 32);
    while ((int)v48 >= 1)
    {
      uint64_t result = 0;
      uint64_t v50 = *(void *)(v49 + 8 * v48--);
      if ((~*(_DWORD *)(v50 + 16) & 3) != 0) {
        return result;
      }
    }
  }
  if ((v22 & 0x20000) != 0)
  {
    uint64_t v51 = *(void *)(a1 + 584);
    uint64_t v52 = *(unsigned int *)(v51 + 24);
    uint64_t v53 = *(void *)(v51 + 32);
    while ((int)v52 >= 1)
    {
      uint64_t result = 0;
      uint64_t v54 = *(void *)(v53 + 8 * v52--);
      if ((~*(_DWORD *)(v54 + 16) & 3) != 0) {
        return result;
      }
    }
  }
  if ((v22 & 0x40000) != 0)
  {
    uint64_t v55 = *(void *)(a1 + 592);
    uint64_t v56 = *(unsigned int *)(v55 + 24);
    uint64_t v57 = *(void *)(v55 + 32);
    while ((int)v56 >= 1)
    {
      uint64_t result = 0;
      uint64_t v58 = *(void *)(v57 + 8 * v56--);
      if ((~*(_DWORD *)(v58 + 16) & 3) != 0) {
        return result;
      }
    }
  }
  if ((v22 & 0x100000) != 0)
  {
    uint64_t v59 = *(void *)(a1 + 608);
    uint64_t v60 = *(unsigned int *)(v59 + 24);
    uint64_t v61 = *(void *)(v59 + 32);
    while ((int)v60 >= 1)
    {
      uint64_t result = 0;
      uint64_t v62 = *(void *)(v61 + 8 * v60--);
      if ((~*(_DWORD *)(v62 + 16) & 3) != 0) {
        return result;
      }
    }
  }
  if ((v22 & 0x200000) != 0)
  {
    uint64_t v63 = *(void *)(a1 + 616);
    uint64_t v64 = *(unsigned int *)(v63 + 24);
    uint64_t v65 = *(void *)(v63 + 32);
    while ((int)v64 >= 1)
    {
      uint64_t result = 0;
      uint64_t v66 = *(void *)(v65 + 8 * v64--);
      if ((~*(_DWORD *)(v66 + 16) & 3) != 0) {
        return result;
      }
    }
  }
  if ((v22 & 0x400000) != 0)
  {
    uint64_t v67 = *(void *)(a1 + 624);
    uint64_t v68 = *(unsigned int *)(v67 + 24);
    uint64_t v69 = *(void *)(v67 + 32);
    while ((int)v68 >= 1)
    {
      uint64_t result = 0;
      uint64_t v70 = *(void *)(v69 + 8 * v68--);
      if ((~*(_DWORD *)(v70 + 16) & 3) != 0) {
        return result;
      }
    }
  }
  if ((v22 & 0x800000) != 0)
  {
    uint64_t v71 = *(void *)(a1 + 632);
    uint64_t v72 = *(unsigned int *)(v71 + 24);
    uint64_t v73 = *(void *)(v71 + 32);
    while ((int)v72 >= 1)
    {
      uint64_t result = 0;
      uint64_t v74 = *(void *)(v73 + 8 * v72--);
      if ((~*(_DWORD *)(v74 + 16) & 3) != 0) {
        return result;
      }
    }
  }
  if ((v22 & 0x2000000) != 0)
  {
    uint64_t result = sub_143AC84(*(void *)(a1 + 648));
    if (!result) {
      return result;
    }
    int v22 = *(_DWORD *)(a1 + 16);
  }
  if ((v22 & 0x8000000) == 0) {
    return 1;
  }
  uint64_t result = sub_140CD70(*(void *)(a1 + 664));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_159CC74@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.BusinessSuggestionEntry");
}

uint64_t sub_159CC84(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253ED70)
  {
    if (*(void *)(a1 + 32))
    {
      sub_16C5CE4();
      operator delete();
    }
    if (*(void *)(a1 + 40))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_159CD90(uint64_t a1)
{
  sub_159CC84(a1);

  operator delete();
}

uint64_t sub_159CDC8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 2);
      }
    }
    *(void *)uint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        int v12 = *(void **)(a1 + 32);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          int v12 = sub_1786998((uint64_t)v13);
          *(void *)(a1 + 32) = v12;
          uint64_t v8 = *(unsigned __int8 **)v35;
        }
        uint64_t v14 = sub_159D170(a3, (uint64_t)v12, v8);
        goto LABEL_50;
      case 2u:
        if (v9 != 18) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
        uint64_t v14 = (uint64_t)sub_188C244(v17, *(char **)v35, (uint64_t)a3);
        goto LABEL_50;
      case 3u:
        if (v9 != 24) {
          goto LABEL_43;
        }
        v5 |= 0x10u;
        BOOL v18 = (char *)(v8 + 1);
        uint64_t v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v35 = v31;
          *(void *)(a1 + 56) = v32;
          if (!v31) {
            goto LABEL_64;
          }
        }
        else
        {
          BOOL v18 = (char *)(v8 + 2);
LABEL_23:
          *(void *)uint64_t v35 = v18;
          *(void *)(a1 + 56) = v19;
        }
        goto LABEL_51;
      case 4u:
        if (v9 != 32) {
          goto LABEL_43;
        }
        char v21 = (char *)(v8 + 1);
        unint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          *(void *)uint64_t v35 = sub_188C138((uint64_t)v8, (v24 - 128));
          if (!*(void *)v35) {
            goto LABEL_64;
          }
          unint64_t v22 = v33;
        }
        else
        {
          char v21 = (char *)(v8 + 2);
LABEL_28:
          *(void *)uint64_t v35 = v21;
        }
        if (sub_140B640(v22))
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 64) = v22;
        }
        else
        {
          if (*v7) {
            uint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v22, v34);
        }
        goto LABEL_51;
      case 5u:
        if (v9 != 42) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v25 = *(void *)(a1 + 40);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_15C1918((uint64_t)v26);
          *(void *)(a1 + 40) = v25;
          uint64_t v8 = *(unsigned __int8 **)v35;
        }
        uint64_t v14 = (uint64_t)sub_1198F14(a3, v25, v8);
        goto LABEL_50;
      case 6u:
        if (v9 != 50) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v27 = *(void *)(a1 + 48);
        if (!v27)
        {
          uint64_t v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v28 = (void *)*v28;
          }
          uint64_t v27 = sub_15C19EC((uint64_t)v28);
          *(void *)(a1 + 48) = v27;
          uint64_t v8 = *(unsigned __int8 **)v35;
        }
        uint64_t v14 = (uint64_t)sub_11E1C60(a3, v27, v8);
        goto LABEL_50;
      default:
LABEL_43:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v7)
          {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v35;
          }
          uint64_t v14 = (uint64_t)sub_1885AC0(v9, v30, (char *)v8, a3);
LABEL_50:
          *(void *)uint64_t v35 = v14;
          if (!v14) {
            goto LABEL_64;
          }
LABEL_51:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_64:
        }
          *(void *)uint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v35;
    }
  }
}

uint64_t sub_159D170(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C5DB4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_159D200(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_16C5F74(v7, v9, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_18;
  }
LABEL_12:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v10 = *(void *)(a1 + 56);
  char *v4 = 24;
  v4[1] = v10;
  if (v10 > 0x7F)
  {
    v4[1] = v10 | 0x80;
    unint64_t v11 = v10 >> 7;
    v4[2] = v10 >> 7;
    v4 += 3;
    if (v10 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v12 = v11 >> 14;
        v11 >>= 7;
        *v4++ = v11;
      }
      while (v12);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_18:
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 64);
    char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 40);
    char *v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 44);
    v4[1] = v17;
    if (v17 > 0x7F) {
      BOOL v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      BOOL v18 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v16, v18, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 48);
    char *v4 = 50;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      char v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      char v21 = v4 + 2;
    }
    uint64_t v4 = sub_15B1A68(v19, (unint64_t)v21, a3);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_159D508(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      return v2;
    }
    goto LABEL_7;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_16C60A4(*(void *)(a1 + 32));
    v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  return v2;
}

uint64_t sub_159D5A8(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t v8 = sub_159D508(a1);
  }
  else
  {
    uint64_t v2 = *(void *)(a1 + 32);
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v5;
    }
    uint64_t v7 = sub_16C60A4(v2);
    uint64_t v8 = v6 + v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  int v9 = *(_DWORD *)(a1 + 16);
  if ((v9 & 0x3C) == 0) {
    goto LABEL_20;
  }
  if ((v9 & 4) != 0)
  {
    uint64_t v10 = sub_15B0D90(*(void *)(a1 + 40));
    v8 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 8) == 0)
    {
LABEL_10:
      if ((v9 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_15;
    }
  }
  else if ((v9 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v11 = sub_15B1D1C(*(void *)(a1 + 48));
  v8 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 0x10) == 0)
  {
LABEL_11:
    if ((v9 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_16;
  }
LABEL_15:
  v8 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v9 & 0x20) == 0) {
    goto LABEL_20;
  }
LABEL_16:
  int v12 = *(_DWORD *)(a1 + 64);
  if (v12 < 0) {
    uint64_t v13 = 11;
  }
  else {
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v8 += v13;
LABEL_20:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v8 += v17;
  }
  *(_DWORD *)(a1 + 20) = v8;
  return v8;
}